ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc8rLVZu.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_var_f32.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_fadd
  18              		.global	__aeabi_ui2f
  19              		.global	__aeabi_fdiv
  20              		.global	__aeabi_fsub
  21              		.global	__aeabi_fmul
  22              		.section	.text.arm_var_f32,"ax",%progbits
  23              		.align	2
  24              		.global	arm_var_f32
  25              		.code	16
  26              		.thumb_func
  27              		.type	arm_var_f32, %function
  28              	arm_var_f32:
  29              	.LFB82:
  30              		.file 1 "Source\\StatisticsFunctions\\arm_var_f32.c"
   1:Source\StatisticsFunctions/arm_var_f32.c **** /* ----------------------------------------------------------------------
   2:Source\StatisticsFunctions/arm_var_f32.c ****  * Project:      CMSIS DSP Library
   3:Source\StatisticsFunctions/arm_var_f32.c ****  * Title:        arm_var_f32.c
   4:Source\StatisticsFunctions/arm_var_f32.c ****  * Description:  Variance of the elements of a floating-point vector
   5:Source\StatisticsFunctions/arm_var_f32.c ****  *
   6:Source\StatisticsFunctions/arm_var_f32.c ****  * $Date:        27. January 2017
   7:Source\StatisticsFunctions/arm_var_f32.c ****  * $Revision:    V.1.5.1
   8:Source\StatisticsFunctions/arm_var_f32.c ****  *
   9:Source\StatisticsFunctions/arm_var_f32.c ****  * Target Processor: Cortex-M cores
  10:Source\StatisticsFunctions/arm_var_f32.c ****  * -------------------------------------------------------------------- */
  11:Source\StatisticsFunctions/arm_var_f32.c **** /*
  12:Source\StatisticsFunctions/arm_var_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\StatisticsFunctions/arm_var_f32.c ****  *
  14:Source\StatisticsFunctions/arm_var_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\StatisticsFunctions/arm_var_f32.c ****  *
  16:Source\StatisticsFunctions/arm_var_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\StatisticsFunctions/arm_var_f32.c ****  * not use this file except in compliance with the License.
  18:Source\StatisticsFunctions/arm_var_f32.c ****  * You may obtain a copy of the License at
  19:Source\StatisticsFunctions/arm_var_f32.c ****  *
  20:Source\StatisticsFunctions/arm_var_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\StatisticsFunctions/arm_var_f32.c ****  *
  22:Source\StatisticsFunctions/arm_var_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\StatisticsFunctions/arm_var_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\StatisticsFunctions/arm_var_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\StatisticsFunctions/arm_var_f32.c ****  * See the License for the specific language governing permissions and
  26:Source\StatisticsFunctions/arm_var_f32.c ****  * limitations under the License.
  27:Source\StatisticsFunctions/arm_var_f32.c ****  */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc8rLVZu.s 			page 2


  28:Source\StatisticsFunctions/arm_var_f32.c **** 
  29:Source\StatisticsFunctions/arm_var_f32.c **** #include "arm_math.h"
  30:Source\StatisticsFunctions/arm_var_f32.c **** 
  31:Source\StatisticsFunctions/arm_var_f32.c **** /**
  32:Source\StatisticsFunctions/arm_var_f32.c ****  * @ingroup groupStats
  33:Source\StatisticsFunctions/arm_var_f32.c ****  */
  34:Source\StatisticsFunctions/arm_var_f32.c **** 
  35:Source\StatisticsFunctions/arm_var_f32.c **** /**
  36:Source\StatisticsFunctions/arm_var_f32.c ****  * @defgroup variance  Variance
  37:Source\StatisticsFunctions/arm_var_f32.c ****  *
  38:Source\StatisticsFunctions/arm_var_f32.c ****  * Calculates the variance of the elements in the input vector.
  39:Source\StatisticsFunctions/arm_var_f32.c ****  * The underlying algorithm used is the direct method sometimes referred to as the two-pass method:
  40:Source\StatisticsFunctions/arm_var_f32.c ****  *
  41:Source\StatisticsFunctions/arm_var_f32.c ****  * <pre>
  42:Source\StatisticsFunctions/arm_var_f32.c ****  *   Result = sum(element - meanOfElements)^2) / numElement - 1
  43:Source\StatisticsFunctions/arm_var_f32.c ****  *
  44:Source\StatisticsFunctions/arm_var_f32.c ****  *     where, meanOfElements = ( pSrc[0] * pSrc[0] + pSrc[1] * pSrc[1] + ... + pSrc[blockSize-1] ) 
  45:Source\StatisticsFunctions/arm_var_f32.c ****  *
  46:Source\StatisticsFunctions/arm_var_f32.c ****  * </pre>
  47:Source\StatisticsFunctions/arm_var_f32.c ****  *
  48:Source\StatisticsFunctions/arm_var_f32.c ****  * There are separate functions for floating point, Q31, and Q15 data types.
  49:Source\StatisticsFunctions/arm_var_f32.c ****  */
  50:Source\StatisticsFunctions/arm_var_f32.c **** 
  51:Source\StatisticsFunctions/arm_var_f32.c **** /**
  52:Source\StatisticsFunctions/arm_var_f32.c ****  * @addtogroup variance
  53:Source\StatisticsFunctions/arm_var_f32.c ****  * @{
  54:Source\StatisticsFunctions/arm_var_f32.c ****  */
  55:Source\StatisticsFunctions/arm_var_f32.c **** 
  56:Source\StatisticsFunctions/arm_var_f32.c **** 
  57:Source\StatisticsFunctions/arm_var_f32.c **** /**
  58:Source\StatisticsFunctions/arm_var_f32.c ****  * @brief Variance of the elements of a floating-point vector.
  59:Source\StatisticsFunctions/arm_var_f32.c ****  * @param[in]       *pSrc points to the input vector
  60:Source\StatisticsFunctions/arm_var_f32.c ****  * @param[in]       blockSize length of the input vector
  61:Source\StatisticsFunctions/arm_var_f32.c ****  * @param[out]      *pResult variance value returned here
  62:Source\StatisticsFunctions/arm_var_f32.c ****  * @return none.
  63:Source\StatisticsFunctions/arm_var_f32.c ****  */
  64:Source\StatisticsFunctions/arm_var_f32.c **** 
  65:Source\StatisticsFunctions/arm_var_f32.c **** void arm_var_f32(
  66:Source\StatisticsFunctions/arm_var_f32.c ****                  float32_t * pSrc,
  67:Source\StatisticsFunctions/arm_var_f32.c ****                  uint32_t blockSize,
  68:Source\StatisticsFunctions/arm_var_f32.c ****                  float32_t * pResult)
  69:Source\StatisticsFunctions/arm_var_f32.c **** {
  31              		.loc 1 69 0
  32              		.cfi_startproc
  33 0000 80B5     		push	{r7, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 8AB0     		sub	sp, sp, #40
  38              		.cfi_def_cfa_offset 48
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  41 0006 F860     		str	r0, [r7, #12]
  42 0008 B960     		str	r1, [r7, #8]
  43 000a 7A60     		str	r2, [r7, #4]
  70:Source\StatisticsFunctions/arm_var_f32.c ****     float32_t fMean, fValue;
  71:Source\StatisticsFunctions/arm_var_f32.c ****     uint32_t blkCnt;            /* loop counter */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc8rLVZu.s 			page 3


  72:Source\StatisticsFunctions/arm_var_f32.c ****     float32_t * pInput = pSrc;
  44              		.loc 1 72 0
  45 000c FB68     		ldr	r3, [r7, #12]
  46 000e 3B62     		str	r3, [r7, #32]
  73:Source\StatisticsFunctions/arm_var_f32.c ****     float32_t sum = 0.0f;
  47              		.loc 1 73 0
  48 0010 0023     		mov	r3, #0
  49 0012 FB61     		str	r3, [r7, #28]
  74:Source\StatisticsFunctions/arm_var_f32.c ****     float32_t fSum = 0.0f;
  50              		.loc 1 74 0
  51 0014 0023     		mov	r3, #0
  52 0016 BB61     		str	r3, [r7, #24]
  75:Source\StatisticsFunctions/arm_var_f32.c ****     #if defined(ARM_MATH_DSP)
  76:Source\StatisticsFunctions/arm_var_f32.c ****     float32_t in1, in2, in3, in4;
  77:Source\StatisticsFunctions/arm_var_f32.c ****     #endif
  78:Source\StatisticsFunctions/arm_var_f32.c **** 
  79:Source\StatisticsFunctions/arm_var_f32.c ****     if (blockSize <= 1u)
  53              		.loc 1 79 0
  54 0018 BB68     		ldr	r3, [r7, #8]
  55 001a 012B     		cmp	r3, #1
  56 001c 03D8     		bhi	.L2
  80:Source\StatisticsFunctions/arm_var_f32.c ****     {
  81:Source\StatisticsFunctions/arm_var_f32.c ****         *pResult = 0;
  57              		.loc 1 81 0
  58 001e 7B68     		ldr	r3, [r7, #4]
  59 0020 0022     		mov	r2, #0
  60 0022 1A60     		str	r2, [r3]
  82:Source\StatisticsFunctions/arm_var_f32.c ****         return;
  61              		.loc 1 82 0
  62 0024 4EE0     		b	.L1
  63              	.L2:
  83:Source\StatisticsFunctions/arm_var_f32.c ****     }
  84:Source\StatisticsFunctions/arm_var_f32.c **** 
  85:Source\StatisticsFunctions/arm_var_f32.c ****     #if defined(ARM_MATH_DSP)
  86:Source\StatisticsFunctions/arm_var_f32.c ****         /* Run the below code for Cortex-M4 and Cortex-M7 */
  87:Source\StatisticsFunctions/arm_var_f32.c **** 
  88:Source\StatisticsFunctions/arm_var_f32.c ****         /*loop Unrolling */
  89:Source\StatisticsFunctions/arm_var_f32.c ****         blkCnt = blockSize >> 2u;
  90:Source\StatisticsFunctions/arm_var_f32.c **** 
  91:Source\StatisticsFunctions/arm_var_f32.c ****         /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  92:Source\StatisticsFunctions/arm_var_f32.c ****         ** a second loop below computes the remaining 1 to 3 samples. */
  93:Source\StatisticsFunctions/arm_var_f32.c ****         while (blkCnt > 0u)
  94:Source\StatisticsFunctions/arm_var_f32.c ****         {
  95:Source\StatisticsFunctions/arm_var_f32.c ****             /* C = (A[0] + A[1] + A[2] + ... + A[blockSize-1]) */
  96:Source\StatisticsFunctions/arm_var_f32.c ****             in1 = *pInput++;
  97:Source\StatisticsFunctions/arm_var_f32.c ****             in2 = *pInput++;
  98:Source\StatisticsFunctions/arm_var_f32.c ****             in3 = *pInput++;
  99:Source\StatisticsFunctions/arm_var_f32.c ****             in4 = *pInput++;
 100:Source\StatisticsFunctions/arm_var_f32.c **** 
 101:Source\StatisticsFunctions/arm_var_f32.c ****             sum += in1;
 102:Source\StatisticsFunctions/arm_var_f32.c ****             sum += in2;
 103:Source\StatisticsFunctions/arm_var_f32.c ****             sum += in3;
 104:Source\StatisticsFunctions/arm_var_f32.c ****             sum += in4;
 105:Source\StatisticsFunctions/arm_var_f32.c **** 
 106:Source\StatisticsFunctions/arm_var_f32.c ****             /* Decrement the loop counter */
 107:Source\StatisticsFunctions/arm_var_f32.c ****             blkCnt--;
 108:Source\StatisticsFunctions/arm_var_f32.c ****         }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc8rLVZu.s 			page 4


 109:Source\StatisticsFunctions/arm_var_f32.c **** 
 110:Source\StatisticsFunctions/arm_var_f32.c ****         /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 111:Source\StatisticsFunctions/arm_var_f32.c ****         ** No loop unrolling is used. */
 112:Source\StatisticsFunctions/arm_var_f32.c ****         blkCnt = blockSize % 0x4u;
 113:Source\StatisticsFunctions/arm_var_f32.c **** 
 114:Source\StatisticsFunctions/arm_var_f32.c ****     #else
 115:Source\StatisticsFunctions/arm_var_f32.c ****         /* Run the below code for Cortex-M0 or Cortex-M3 */
 116:Source\StatisticsFunctions/arm_var_f32.c **** 
 117:Source\StatisticsFunctions/arm_var_f32.c ****         /* Loop over blockSize number of values */
 118:Source\StatisticsFunctions/arm_var_f32.c ****         blkCnt = blockSize;
  64              		.loc 1 118 0
  65 0026 BB68     		ldr	r3, [r7, #8]
  66 0028 7B62     		str	r3, [r7, #36]
 119:Source\StatisticsFunctions/arm_var_f32.c **** 
 120:Source\StatisticsFunctions/arm_var_f32.c ****     #endif
 121:Source\StatisticsFunctions/arm_var_f32.c **** 
 122:Source\StatisticsFunctions/arm_var_f32.c ****     while (blkCnt > 0u)
  67              		.loc 1 122 0
  68 002a 0CE0     		b	.L4
  69              	.L5:
 123:Source\StatisticsFunctions/arm_var_f32.c ****     {
 124:Source\StatisticsFunctions/arm_var_f32.c ****         /* C = (A[0] + A[1] + A[2] + ... + A[blockSize-1]) */
 125:Source\StatisticsFunctions/arm_var_f32.c ****         sum += *pInput++;
  70              		.loc 1 125 0
  71 002c 3B6A     		ldr	r3, [r7, #32]
  72 002e 1A1D     		add	r2, r3, #4
  73 0030 3A62     		str	r2, [r7, #32]
  74 0032 1B68     		ldr	r3, [r3]
  75 0034 F869     		ldr	r0, [r7, #28]
  76 0036 191C     		add	r1, r3, #0
  77 0038 FFF7FEFF 		bl	__aeabi_fadd
  78 003c 031C     		add	r3, r0, #0
  79 003e FB61     		str	r3, [r7, #28]
 126:Source\StatisticsFunctions/arm_var_f32.c **** 
 127:Source\StatisticsFunctions/arm_var_f32.c ****         /* Decrement the loop counter */
 128:Source\StatisticsFunctions/arm_var_f32.c ****         blkCnt--;
  80              		.loc 1 128 0
  81 0040 7B6A     		ldr	r3, [r7, #36]
  82 0042 013B     		sub	r3, r3, #1
  83 0044 7B62     		str	r3, [r7, #36]
  84              	.L4:
 122:Source\StatisticsFunctions/arm_var_f32.c ****     {
  85              		.loc 1 122 0
  86 0046 7B6A     		ldr	r3, [r7, #36]
  87 0048 002B     		cmp	r3, #0
  88 004a EFD1     		bne	.L5
 129:Source\StatisticsFunctions/arm_var_f32.c ****     }
 130:Source\StatisticsFunctions/arm_var_f32.c **** 
 131:Source\StatisticsFunctions/arm_var_f32.c ****     /* C = (A[0] + A[1] + A[2] + ... + A[blockSize-1]) / blockSize  */
 132:Source\StatisticsFunctions/arm_var_f32.c ****     fMean = sum / (float32_t) blockSize;
  89              		.loc 1 132 0
  90 004c B868     		ldr	r0, [r7, #8]
  91 004e FFF7FEFF 		bl	__aeabi_ui2f
  92 0052 031C     		add	r3, r0, #0
  93 0054 F869     		ldr	r0, [r7, #28]
  94 0056 191C     		add	r1, r3, #0
  95 0058 FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc8rLVZu.s 			page 5


  96 005c 031C     		add	r3, r0, #0
  97 005e 7B61     		str	r3, [r7, #20]
 133:Source\StatisticsFunctions/arm_var_f32.c **** 
 134:Source\StatisticsFunctions/arm_var_f32.c ****     pInput = pSrc;
  98              		.loc 1 134 0
  99 0060 FB68     		ldr	r3, [r7, #12]
 100 0062 3B62     		str	r3, [r7, #32]
 135:Source\StatisticsFunctions/arm_var_f32.c **** 
 136:Source\StatisticsFunctions/arm_var_f32.c ****     #if defined(ARM_MATH_DSP)
 137:Source\StatisticsFunctions/arm_var_f32.c **** 
 138:Source\StatisticsFunctions/arm_var_f32.c ****         /*loop Unrolling */
 139:Source\StatisticsFunctions/arm_var_f32.c ****         blkCnt = blockSize >> 2u;
 140:Source\StatisticsFunctions/arm_var_f32.c **** 
 141:Source\StatisticsFunctions/arm_var_f32.c ****         /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
 142:Source\StatisticsFunctions/arm_var_f32.c ****         ** a second loop below computes the remaining 1 to 3 samples. */
 143:Source\StatisticsFunctions/arm_var_f32.c ****         while (blkCnt > 0u)
 144:Source\StatisticsFunctions/arm_var_f32.c ****         {
 145:Source\StatisticsFunctions/arm_var_f32.c ****             fValue = *pInput++ - fMean;
 146:Source\StatisticsFunctions/arm_var_f32.c ****             fSum += fValue * fValue;
 147:Source\StatisticsFunctions/arm_var_f32.c ****             fValue = *pInput++ - fMean;
 148:Source\StatisticsFunctions/arm_var_f32.c ****             fSum += fValue * fValue;
 149:Source\StatisticsFunctions/arm_var_f32.c ****             fValue = *pInput++ - fMean;
 150:Source\StatisticsFunctions/arm_var_f32.c ****             fSum += fValue * fValue;
 151:Source\StatisticsFunctions/arm_var_f32.c ****             fValue = *pInput++ - fMean;
 152:Source\StatisticsFunctions/arm_var_f32.c ****             fSum += fValue * fValue;
 153:Source\StatisticsFunctions/arm_var_f32.c **** 
 154:Source\StatisticsFunctions/arm_var_f32.c ****             /* Decrement the loop counter */
 155:Source\StatisticsFunctions/arm_var_f32.c ****             blkCnt--;
 156:Source\StatisticsFunctions/arm_var_f32.c ****         }
 157:Source\StatisticsFunctions/arm_var_f32.c **** 
 158:Source\StatisticsFunctions/arm_var_f32.c ****         blkCnt = blockSize % 0x4u;
 159:Source\StatisticsFunctions/arm_var_f32.c ****     #else
 160:Source\StatisticsFunctions/arm_var_f32.c ****         /* Run the below code for Cortex-M0 or Cortex-M3 */
 161:Source\StatisticsFunctions/arm_var_f32.c **** 
 162:Source\StatisticsFunctions/arm_var_f32.c ****         /* Loop over blockSize number of values */
 163:Source\StatisticsFunctions/arm_var_f32.c ****         blkCnt = blockSize;
 101              		.loc 1 163 0
 102 0064 BB68     		ldr	r3, [r7, #8]
 103 0066 7B62     		str	r3, [r7, #36]
 164:Source\StatisticsFunctions/arm_var_f32.c ****     #endif
 165:Source\StatisticsFunctions/arm_var_f32.c **** 
 166:Source\StatisticsFunctions/arm_var_f32.c ****     while (blkCnt > 0u)
 104              		.loc 1 166 0
 105 0068 17E0     		b	.L6
 106              	.L7:
 167:Source\StatisticsFunctions/arm_var_f32.c ****     {
 168:Source\StatisticsFunctions/arm_var_f32.c ****         fValue = *pInput++ - fMean;
 107              		.loc 1 168 0
 108 006a 3B6A     		ldr	r3, [r7, #32]
 109 006c 1A1D     		add	r2, r3, #4
 110 006e 3A62     		str	r2, [r7, #32]
 111 0070 1B68     		ldr	r3, [r3]
 112 0072 181C     		add	r0, r3, #0
 113 0074 7969     		ldr	r1, [r7, #20]
 114 0076 FFF7FEFF 		bl	__aeabi_fsub
 115 007a 031C     		add	r3, r0, #0
 116 007c 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc8rLVZu.s 			page 6


 169:Source\StatisticsFunctions/arm_var_f32.c ****         fSum += fValue * fValue;
 117              		.loc 1 169 0
 118 007e 3869     		ldr	r0, [r7, #16]
 119 0080 3969     		ldr	r1, [r7, #16]
 120 0082 FFF7FEFF 		bl	__aeabi_fmul
 121 0086 031C     		add	r3, r0, #0
 122 0088 B869     		ldr	r0, [r7, #24]
 123 008a 191C     		add	r1, r3, #0
 124 008c FFF7FEFF 		bl	__aeabi_fadd
 125 0090 031C     		add	r3, r0, #0
 126 0092 BB61     		str	r3, [r7, #24]
 170:Source\StatisticsFunctions/arm_var_f32.c **** 
 171:Source\StatisticsFunctions/arm_var_f32.c ****         /* Decrement the loop counter */
 172:Source\StatisticsFunctions/arm_var_f32.c ****         blkCnt--;
 127              		.loc 1 172 0
 128 0094 7B6A     		ldr	r3, [r7, #36]
 129 0096 013B     		sub	r3, r3, #1
 130 0098 7B62     		str	r3, [r7, #36]
 131              	.L6:
 166:Source\StatisticsFunctions/arm_var_f32.c ****     {
 132              		.loc 1 166 0
 133 009a 7B6A     		ldr	r3, [r7, #36]
 134 009c 002B     		cmp	r3, #0
 135 009e E4D1     		bne	.L7
 173:Source\StatisticsFunctions/arm_var_f32.c ****     }
 174:Source\StatisticsFunctions/arm_var_f32.c **** 
 175:Source\StatisticsFunctions/arm_var_f32.c ****     /* Variance */
 176:Source\StatisticsFunctions/arm_var_f32.c ****     *pResult = fSum / (float32_t)(blockSize - 1.0f);
 136              		.loc 1 176 0
 137 00a0 B868     		ldr	r0, [r7, #8]
 138 00a2 FFF7FEFF 		bl	__aeabi_ui2f
 139 00a6 031C     		add	r3, r0, #0
 140 00a8 181C     		add	r0, r3, #0
 141 00aa FE21     		mov	r1, #254
 142 00ac 8905     		lsl	r1, r1, #22
 143 00ae FFF7FEFF 		bl	__aeabi_fsub
 144 00b2 031C     		add	r3, r0, #0
 145 00b4 B869     		ldr	r0, [r7, #24]
 146 00b6 191C     		add	r1, r3, #0
 147 00b8 FFF7FEFF 		bl	__aeabi_fdiv
 148 00bc 031C     		add	r3, r0, #0
 149 00be 1A1C     		add	r2, r3, #0
 150 00c0 7B68     		ldr	r3, [r7, #4]
 151 00c2 1A60     		str	r2, [r3]
 152              	.L1:
 177:Source\StatisticsFunctions/arm_var_f32.c **** }
 153              		.loc 1 177 0
 154 00c4 BD46     		mov	sp, r7
 155 00c6 0AB0     		add	sp, sp, #40
 156              		@ sp needed
 157 00c8 80BD     		pop	{r7, pc}
 158              		.cfi_endproc
 159              	.LFE82:
 160              		.size	arm_var_f32, .-arm_var_f32
 161 00ca C046     		.text
 162              	.Letext0:
 163              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc8rLVZu.s 			page 7


 164              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 165              		.file 4 ".\\Include/arm_math.h"
 166              		.section	.debug_info,"",%progbits
 167              	.Ldebug_info0:
 168 0000 43010000 		.4byte	0x143
 169 0004 0400     		.2byte	0x4
 170 0006 00000000 		.4byte	.Ldebug_abbrev0
 171 000a 04       		.byte	0x4
 172 000b 01       		.uleb128 0x1
 173 000c EC000000 		.4byte	.LASF25
 174 0010 01       		.byte	0x1
 175 0011 85010000 		.4byte	.LASF26
 176 0015 00000000 		.4byte	.LASF27
 177 0019 00000000 		.4byte	.Ldebug_ranges0+0
 178 001d 00000000 		.4byte	0
 179 0021 00000000 		.4byte	.Ldebug_line0
 180 0025 02       		.uleb128 0x2
 181 0026 01       		.byte	0x1
 182 0027 06       		.byte	0x6
 183 0028 FC010000 		.4byte	.LASF0
 184 002c 02       		.uleb128 0x2
 185 002d 01       		.byte	0x1
 186 002e 08       		.byte	0x8
 187 002f 59000000 		.4byte	.LASF1
 188 0033 02       		.uleb128 0x2
 189 0034 02       		.byte	0x2
 190 0035 05       		.byte	0x5
 191 0036 D4010000 		.4byte	.LASF2
 192 003a 02       		.uleb128 0x2
 193 003b 02       		.byte	0x2
 194 003c 07       		.byte	0x7
 195 003d 80000000 		.4byte	.LASF3
 196 0041 02       		.uleb128 0x2
 197 0042 04       		.byte	0x4
 198 0043 05       		.byte	0x5
 199 0044 E7010000 		.4byte	.LASF4
 200 0048 03       		.uleb128 0x3
 201 0049 BD000000 		.4byte	.LASF9
 202 004d 02       		.byte	0x2
 203 004e 41       		.byte	0x41
 204 004f 53000000 		.4byte	0x53
 205 0053 02       		.uleb128 0x2
 206 0054 04       		.byte	0x4
 207 0055 07       		.byte	0x7
 208 0056 6E000000 		.4byte	.LASF5
 209 005a 02       		.uleb128 0x2
 210 005b 08       		.byte	0x8
 211 005c 05       		.byte	0x5
 212 005d B7010000 		.4byte	.LASF6
 213 0061 02       		.uleb128 0x2
 214 0062 08       		.byte	0x8
 215 0063 07       		.byte	0x7
 216 0064 D5000000 		.4byte	.LASF7
 217 0068 04       		.uleb128 0x4
 218 0069 04       		.byte	0x4
 219 006a 05       		.byte	0x5
 220 006b 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc8rLVZu.s 			page 8


 221 006f 02       		.uleb128 0x2
 222 0070 04       		.byte	0x4
 223 0071 07       		.byte	0x7
 224 0072 C8000000 		.4byte	.LASF8
 225 0076 03       		.uleb128 0x3
 226 0077 DE010000 		.4byte	.LASF10
 227 007b 03       		.byte	0x3
 228 007c 2D       		.byte	0x2d
 229 007d 48000000 		.4byte	0x48
 230 0081 02       		.uleb128 0x2
 231 0082 04       		.byte	0x4
 232 0083 07       		.byte	0x7
 233 0084 AE010000 		.4byte	.LASF11
 234 0088 02       		.uleb128 0x2
 235 0089 01       		.byte	0x1
 236 008a 08       		.byte	0x8
 237 008b CF010000 		.4byte	.LASF12
 238 008f 02       		.uleb128 0x2
 239 0090 08       		.byte	0x8
 240 0091 04       		.byte	0x4
 241 0092 A7000000 		.4byte	.LASF13
 242 0096 02       		.uleb128 0x2
 243 0097 04       		.byte	0x4
 244 0098 04       		.byte	0x4
 245 0099 53000000 		.4byte	.LASF14
 246 009d 02       		.uleb128 0x2
 247 009e 08       		.byte	0x8
 248 009f 04       		.byte	0x4
 249 00a0 F0010000 		.4byte	.LASF15
 250 00a4 05       		.uleb128 0x5
 251 00a5 B3000000 		.4byte	.LASF16
 252 00a9 04       		.byte	0x4
 253 00aa A501     		.2byte	0x1a5
 254 00ac 96000000 		.4byte	0x96
 255 00b0 06       		.uleb128 0x6
 256 00b1 04       		.byte	0x4
 257 00b2 A4000000 		.4byte	0xa4
 258 00b6 07       		.uleb128 0x7
 259 00b7 93000000 		.4byte	.LASF28
 260 00bb 01       		.byte	0x1
 261 00bc 41       		.byte	0x41
 262 00bd 00000000 		.4byte	.LFB82
 263 00c1 CA000000 		.4byte	.LFE82-.LFB82
 264 00c5 01       		.uleb128 0x1
 265 00c6 9C       		.byte	0x9c
 266 00c7 08       		.uleb128 0x8
 267 00c8 08020000 		.4byte	.LASF17
 268 00cc 01       		.byte	0x1
 269 00cd 42       		.byte	0x42
 270 00ce B0000000 		.4byte	0xb0
 271 00d2 02       		.uleb128 0x2
 272 00d3 91       		.byte	0x91
 273 00d4 5C       		.sleb128 -36
 274 00d5 08       		.uleb128 0x8
 275 00d6 C5010000 		.4byte	.LASF18
 276 00da 01       		.byte	0x1
 277 00db 43       		.byte	0x43
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc8rLVZu.s 			page 9


 278 00dc 76000000 		.4byte	0x76
 279 00e0 02       		.uleb128 0x2
 280 00e1 91       		.byte	0x91
 281 00e2 58       		.sleb128 -40
 282 00e3 08       		.uleb128 0x8
 283 00e4 9F000000 		.4byte	.LASF19
 284 00e8 01       		.byte	0x1
 285 00e9 44       		.byte	0x44
 286 00ea B0000000 		.4byte	0xb0
 287 00ee 02       		.uleb128 0x2
 288 00ef 91       		.byte	0x91
 289 00f0 54       		.sleb128 -44
 290 00f1 09       		.uleb128 0x9
 291 00f2 4D000000 		.4byte	.LASF20
 292 00f6 01       		.byte	0x1
 293 00f7 46       		.byte	0x46
 294 00f8 A4000000 		.4byte	0xa4
 295 00fc 02       		.uleb128 0x2
 296 00fd 91       		.byte	0x91
 297 00fe 64       		.sleb128 -28
 298 00ff 09       		.uleb128 0x9
 299 0100 7E010000 		.4byte	.LASF21
 300 0104 01       		.byte	0x1
 301 0105 46       		.byte	0x46
 302 0106 A4000000 		.4byte	0xa4
 303 010a 02       		.uleb128 0x2
 304 010b 91       		.byte	0x91
 305 010c 60       		.sleb128 -32
 306 010d 09       		.uleb128 0x9
 307 010e 67000000 		.4byte	.LASF22
 308 0112 01       		.byte	0x1
 309 0113 47       		.byte	0x47
 310 0114 76000000 		.4byte	0x76
 311 0118 02       		.uleb128 0x2
 312 0119 91       		.byte	0x91
 313 011a 74       		.sleb128 -12
 314 011b 09       		.uleb128 0x9
 315 011c 46000000 		.4byte	.LASF23
 316 0120 01       		.byte	0x1
 317 0121 48       		.byte	0x48
 318 0122 B0000000 		.4byte	0xb0
 319 0126 02       		.uleb128 0x2
 320 0127 91       		.byte	0x91
 321 0128 70       		.sleb128 -16
 322 0129 0A       		.uleb128 0xa
 323 012a 73756D00 		.ascii	"sum\000"
 324 012e 01       		.byte	0x1
 325 012f 49       		.byte	0x49
 326 0130 A4000000 		.4byte	0xa4
 327 0134 02       		.uleb128 0x2
 328 0135 91       		.byte	0x91
 329 0136 6C       		.sleb128 -20
 330 0137 09       		.uleb128 0x9
 331 0138 AE000000 		.4byte	.LASF24
 332 013c 01       		.byte	0x1
 333 013d 4A       		.byte	0x4a
 334 013e A4000000 		.4byte	0xa4
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc8rLVZu.s 			page 10


 335 0142 02       		.uleb128 0x2
 336 0143 91       		.byte	0x91
 337 0144 68       		.sleb128 -24
 338 0145 00       		.byte	0
 339 0146 00       		.byte	0
 340              		.section	.debug_abbrev,"",%progbits
 341              	.Ldebug_abbrev0:
 342 0000 01       		.uleb128 0x1
 343 0001 11       		.uleb128 0x11
 344 0002 01       		.byte	0x1
 345 0003 25       		.uleb128 0x25
 346 0004 0E       		.uleb128 0xe
 347 0005 13       		.uleb128 0x13
 348 0006 0B       		.uleb128 0xb
 349 0007 03       		.uleb128 0x3
 350 0008 0E       		.uleb128 0xe
 351 0009 1B       		.uleb128 0x1b
 352 000a 0E       		.uleb128 0xe
 353 000b 55       		.uleb128 0x55
 354 000c 17       		.uleb128 0x17
 355 000d 11       		.uleb128 0x11
 356 000e 01       		.uleb128 0x1
 357 000f 10       		.uleb128 0x10
 358 0010 17       		.uleb128 0x17
 359 0011 00       		.byte	0
 360 0012 00       		.byte	0
 361 0013 02       		.uleb128 0x2
 362 0014 24       		.uleb128 0x24
 363 0015 00       		.byte	0
 364 0016 0B       		.uleb128 0xb
 365 0017 0B       		.uleb128 0xb
 366 0018 3E       		.uleb128 0x3e
 367 0019 0B       		.uleb128 0xb
 368 001a 03       		.uleb128 0x3
 369 001b 0E       		.uleb128 0xe
 370 001c 00       		.byte	0
 371 001d 00       		.byte	0
 372 001e 03       		.uleb128 0x3
 373 001f 16       		.uleb128 0x16
 374 0020 00       		.byte	0
 375 0021 03       		.uleb128 0x3
 376 0022 0E       		.uleb128 0xe
 377 0023 3A       		.uleb128 0x3a
 378 0024 0B       		.uleb128 0xb
 379 0025 3B       		.uleb128 0x3b
 380 0026 0B       		.uleb128 0xb
 381 0027 49       		.uleb128 0x49
 382 0028 13       		.uleb128 0x13
 383 0029 00       		.byte	0
 384 002a 00       		.byte	0
 385 002b 04       		.uleb128 0x4
 386 002c 24       		.uleb128 0x24
 387 002d 00       		.byte	0
 388 002e 0B       		.uleb128 0xb
 389 002f 0B       		.uleb128 0xb
 390 0030 3E       		.uleb128 0x3e
 391 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc8rLVZu.s 			page 11


 392 0032 03       		.uleb128 0x3
 393 0033 08       		.uleb128 0x8
 394 0034 00       		.byte	0
 395 0035 00       		.byte	0
 396 0036 05       		.uleb128 0x5
 397 0037 16       		.uleb128 0x16
 398 0038 00       		.byte	0
 399 0039 03       		.uleb128 0x3
 400 003a 0E       		.uleb128 0xe
 401 003b 3A       		.uleb128 0x3a
 402 003c 0B       		.uleb128 0xb
 403 003d 3B       		.uleb128 0x3b
 404 003e 05       		.uleb128 0x5
 405 003f 49       		.uleb128 0x49
 406 0040 13       		.uleb128 0x13
 407 0041 00       		.byte	0
 408 0042 00       		.byte	0
 409 0043 06       		.uleb128 0x6
 410 0044 0F       		.uleb128 0xf
 411 0045 00       		.byte	0
 412 0046 0B       		.uleb128 0xb
 413 0047 0B       		.uleb128 0xb
 414 0048 49       		.uleb128 0x49
 415 0049 13       		.uleb128 0x13
 416 004a 00       		.byte	0
 417 004b 00       		.byte	0
 418 004c 07       		.uleb128 0x7
 419 004d 2E       		.uleb128 0x2e
 420 004e 01       		.byte	0x1
 421 004f 3F       		.uleb128 0x3f
 422 0050 19       		.uleb128 0x19
 423 0051 03       		.uleb128 0x3
 424 0052 0E       		.uleb128 0xe
 425 0053 3A       		.uleb128 0x3a
 426 0054 0B       		.uleb128 0xb
 427 0055 3B       		.uleb128 0x3b
 428 0056 0B       		.uleb128 0xb
 429 0057 27       		.uleb128 0x27
 430 0058 19       		.uleb128 0x19
 431 0059 11       		.uleb128 0x11
 432 005a 01       		.uleb128 0x1
 433 005b 12       		.uleb128 0x12
 434 005c 06       		.uleb128 0x6
 435 005d 40       		.uleb128 0x40
 436 005e 18       		.uleb128 0x18
 437 005f 9642     		.uleb128 0x2116
 438 0061 19       		.uleb128 0x19
 439 0062 00       		.byte	0
 440 0063 00       		.byte	0
 441 0064 08       		.uleb128 0x8
 442 0065 05       		.uleb128 0x5
 443 0066 00       		.byte	0
 444 0067 03       		.uleb128 0x3
 445 0068 0E       		.uleb128 0xe
 446 0069 3A       		.uleb128 0x3a
 447 006a 0B       		.uleb128 0xb
 448 006b 3B       		.uleb128 0x3b
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc8rLVZu.s 			page 12


 449 006c 0B       		.uleb128 0xb
 450 006d 49       		.uleb128 0x49
 451 006e 13       		.uleb128 0x13
 452 006f 02       		.uleb128 0x2
 453 0070 18       		.uleb128 0x18
 454 0071 00       		.byte	0
 455 0072 00       		.byte	0
 456 0073 09       		.uleb128 0x9
 457 0074 34       		.uleb128 0x34
 458 0075 00       		.byte	0
 459 0076 03       		.uleb128 0x3
 460 0077 0E       		.uleb128 0xe
 461 0078 3A       		.uleb128 0x3a
 462 0079 0B       		.uleb128 0xb
 463 007a 3B       		.uleb128 0x3b
 464 007b 0B       		.uleb128 0xb
 465 007c 49       		.uleb128 0x49
 466 007d 13       		.uleb128 0x13
 467 007e 02       		.uleb128 0x2
 468 007f 18       		.uleb128 0x18
 469 0080 00       		.byte	0
 470 0081 00       		.byte	0
 471 0082 0A       		.uleb128 0xa
 472 0083 34       		.uleb128 0x34
 473 0084 00       		.byte	0
 474 0085 03       		.uleb128 0x3
 475 0086 08       		.uleb128 0x8
 476 0087 3A       		.uleb128 0x3a
 477 0088 0B       		.uleb128 0xb
 478 0089 3B       		.uleb128 0x3b
 479 008a 0B       		.uleb128 0xb
 480 008b 49       		.uleb128 0x49
 481 008c 13       		.uleb128 0x13
 482 008d 02       		.uleb128 0x2
 483 008e 18       		.uleb128 0x18
 484 008f 00       		.byte	0
 485 0090 00       		.byte	0
 486 0091 00       		.byte	0
 487              		.section	.debug_aranges,"",%progbits
 488 0000 1C000000 		.4byte	0x1c
 489 0004 0200     		.2byte	0x2
 490 0006 00000000 		.4byte	.Ldebug_info0
 491 000a 04       		.byte	0x4
 492 000b 00       		.byte	0
 493 000c 0000     		.2byte	0
 494 000e 0000     		.2byte	0
 495 0010 00000000 		.4byte	.LFB82
 496 0014 CA000000 		.4byte	.LFE82-.LFB82
 497 0018 00000000 		.4byte	0
 498 001c 00000000 		.4byte	0
 499              		.section	.debug_ranges,"",%progbits
 500              	.Ldebug_ranges0:
 501 0000 00000000 		.4byte	.LFB82
 502 0004 CA000000 		.4byte	.LFE82
 503 0008 00000000 		.4byte	0
 504 000c 00000000 		.4byte	0
 505              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc8rLVZu.s 			page 13


 506              	.Ldebug_line0:
 507 0000 87010000 		.section	.debug_str,"MS",%progbits,1
 507      02004F01 
 507      00000201 
 507      FB0E0D00 
 507      01010101 
 508              	.LASF27:
 509 0000 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 509      73657273 
 509      5C666E65 
 509      7665735C 
 509      446F6375 
 510 002d 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 510      655F7370 
 510      6565645F 
 510      73656E73 
 510      6F722E63 
 511              	.LASF23:
 512 0046 70496E70 		.ascii	"pInput\000"
 512      757400
 513              	.LASF20:
 514 004d 664D6561 		.ascii	"fMean\000"
 514      6E00
 515              	.LASF14:
 516 0053 666C6F61 		.ascii	"float\000"
 516      7400
 517              	.LASF1:
 518 0059 756E7369 		.ascii	"unsigned char\000"
 518      676E6564 
 518      20636861 
 518      7200
 519              	.LASF22:
 520 0067 626C6B43 		.ascii	"blkCnt\000"
 520      6E7400
 521              	.LASF5:
 522 006e 6C6F6E67 		.ascii	"long unsigned int\000"
 522      20756E73 
 522      69676E65 
 522      6420696E 
 522      7400
 523              	.LASF3:
 524 0080 73686F72 		.ascii	"short unsigned int\000"
 524      7420756E 
 524      7369676E 
 524      65642069 
 524      6E7400
 525              	.LASF28:
 526 0093 61726D5F 		.ascii	"arm_var_f32\000"
 526      7661725F 
 526      66333200 
 527              	.LASF19:
 528 009f 70526573 		.ascii	"pResult\000"
 528      756C7400 
 529              	.LASF13:
 530 00a7 646F7562 		.ascii	"double\000"
 530      6C6500
 531              	.LASF24:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc8rLVZu.s 			page 14


 532 00ae 6653756D 		.ascii	"fSum\000"
 532      00
 533              	.LASF16:
 534 00b3 666C6F61 		.ascii	"float32_t\000"
 534      7433325F 
 534      7400
 535              	.LASF9:
 536 00bd 5F5F7569 		.ascii	"__uint32_t\000"
 536      6E743332 
 536      5F7400
 537              	.LASF8:
 538 00c8 756E7369 		.ascii	"unsigned int\000"
 538      676E6564 
 538      20696E74 
 538      00
 539              	.LASF7:
 540 00d5 6C6F6E67 		.ascii	"long long unsigned int\000"
 540      206C6F6E 
 540      6720756E 
 540      7369676E 
 540      65642069 
 541              	.LASF25:
 542 00ec 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 542      4320342E 
 542      392E3320 
 542      32303135 
 542      30333033 
 543 011f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 543      20726576 
 543      6973696F 
 543      6E203232 
 543      31323230 
 544 0152 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 544      30202D66 
 544      66756E63 
 544      74696F6E 
 544      2D736563 
 545              	.LASF21:
 546 017e 6656616C 		.ascii	"fValue\000"
 546      756500
 547              	.LASF26:
 548 0185 536F7572 		.ascii	"Source\\StatisticsFunctions\\arm_var_f32.c\000"
 548      63655C53 
 548      74617469 
 548      73746963 
 548      7346756E 
 549              	.LASF11:
 550 01ae 73697A65 		.ascii	"sizetype\000"
 550      74797065 
 550      00
 551              	.LASF6:
 552 01b7 6C6F6E67 		.ascii	"long long int\000"
 552      206C6F6E 
 552      6720696E 
 552      7400
 553              	.LASF18:
 554 01c5 626C6F63 		.ascii	"blockSize\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc8rLVZu.s 			page 15


 554      6B53697A 
 554      6500
 555              	.LASF12:
 556 01cf 63686172 		.ascii	"char\000"
 556      00
 557              	.LASF2:
 558 01d4 73686F72 		.ascii	"short int\000"
 558      7420696E 
 558      7400
 559              	.LASF10:
 560 01de 75696E74 		.ascii	"uint32_t\000"
 560      33325F74 
 560      00
 561              	.LASF4:
 562 01e7 6C6F6E67 		.ascii	"long int\000"
 562      20696E74 
 562      00
 563              	.LASF15:
 564 01f0 6C6F6E67 		.ascii	"long double\000"
 564      20646F75 
 564      626C6500 
 565              	.LASF0:
 566 01fc 7369676E 		.ascii	"signed char\000"
 566      65642063 
 566      68617200 
 567              	.LASF17:
 568 0208 70537263 		.ascii	"pSrc\000"
 568      00
 569              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
