ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_correlate_fast_opt_q15.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.arm_correlate_fast_opt_q15,"ax",%progbits
  18              		.align	2
  19              		.global	arm_correlate_fast_opt_q15
  20              		.code	16
  21              		.thumb_func
  22              		.type	arm_correlate_fast_opt_q15, %function
  23              	arm_correlate_fast_opt_q15:
  24              	.LFB82:
  25              		.file 1 "Source\\FilteringFunctions\\arm_correlate_fast_opt_q15.c"
   1:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** /* ----------------------------------------------------------------------
   2:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * Project:      CMSIS DSP Library
   3:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * Title:        arm_correlate_fast_opt_q15.c
   4:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * Description:  Fast Q15 Correlation
   5:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  *
   6:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * $Date:        27. January 2017
   7:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * $Revision:    V.1.5.1
   8:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  *
   9:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * Target Processor: Cortex-M cores
  10:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * -------------------------------------------------------------------- */
  11:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** /*
  12:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  *
  14:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  *
  16:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * not use this file except in compliance with the License.
  18:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * You may obtain a copy of the License at
  19:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  *
  20:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  *
  22:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * See the License for the specific language governing permissions and
  26:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * limitations under the License.
  27:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  */
  28:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
  29:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #include "arm_math.h"
  30:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
  31:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** /**
  32:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * @ingroup groupFilters
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 2


  33:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  */
  34:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
  35:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** /**
  36:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * @addtogroup Corr
  37:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * @{
  38:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  */
  39:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
  40:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** /**
  41:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
  42:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * @param[in] *pSrcA points to the first input sequence.
  43:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * @param[in] srcALen length of the first input sequence.
  44:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * @param[in] *pSrcB points to the second input sequence.
  45:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * @param[in] srcBLen length of the second input sequence.
  46:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * @param[out] *pDst points to the location where the output result is written.  Length 2 * max(src
  47:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * @param[in]  *pScratch points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, sr
  48:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * @return none.
  49:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  *
  50:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  *
  51:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * \par Restrictions
  52:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  *  If the silicon does not support unaligned memory access enable the macro UNALIGNED_SUPPORT_DISA
  53:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  *  In this case input, output, scratch buffers should be aligned by 32-bit
  54:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  *
  55:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  *
  56:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * <b>Scaling and Overflow Behavior:</b>
  57:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  *
  58:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * \par
  59:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * This fast version uses a 32-bit accumulator with 2.30 format.
  60:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * The accumulator maintains full precision of the intermediate multiplication results but provides
  61:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * There is no saturation on intermediate additions.
  62:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * Thus, if the accumulator overflows it wraps around and distorts the result.
  63:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * The input signals should be scaled down to avoid intermediate overflows.
  64:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * Scale down one of the inputs by 1/min(srcALen, srcBLen) to avoid overflow since a
  65:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * maximum of min(srcALen, srcBLen) number of additions is carried internally.
  66:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * The 2.30 accumulator is right shifted by 15 bits and then saturated to 1.15 format to yield the 
  67:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  *
  68:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * \par
  69:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  * See <code>arm_correlate_q15()</code> for a slower implementation of this function which uses a 6
  70:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****  */
  71:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
  72:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** void arm_correlate_fast_opt_q15(
  73:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   q15_t * pSrcA,
  74:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   uint32_t srcALen,
  75:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   q15_t * pSrcB,
  76:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   uint32_t srcBLen,
  77:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   q15_t * pDst,
  78:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   q15_t * pScratch)
  79:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** {
  26              		.loc 1 79 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 C8B0     		sub	sp, sp, #288
  33              		.cfi_def_cfa_offset 296
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 3


  36 0006 F860     		str	r0, [r7, #12]
  37 0008 B960     		str	r1, [r7, #8]
  38 000a 7A60     		str	r2, [r7, #4]
  39 000c 3B60     		str	r3, [r7]
  80:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   q15_t *pIn1;                                   /* inputA pointer               */
  81:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   q15_t *pIn2;                                   /* inputB pointer               */
  82:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   q31_t acc0, acc1, acc2, acc3;                  /* Accumulators                  */
  83:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   q15_t *py;                                     /* Intermediate inputB pointer  */
  84:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   q31_t x1, x2, x3;                              /* temporary variables for holding input and coeff
  85:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   uint32_t j, blkCnt, outBlockSize;              /* loop counter                 */
  86:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   int32_t inc = 1;                               /* Destination address modifier */
  40              		.loc 1 86 0
  41 000e 0123     		mov	r3, #1
  42 0010 F822     		mov	r2, #248
  43 0012 BA18     		add	r2, r7, r2
  44 0014 1360     		str	r3, [r2]
  87:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   uint32_t tapCnt;
  88:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   q31_t y1, y2;
  89:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   q15_t *pScr;                                   /* Intermediate pointers        */
  90:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   q15_t *pOut = pDst;                            /* output pointer               */
  45              		.loc 1 90 0
  46 0016 9423     		mov	r3, #148
  47 0018 5B00     		lsl	r3, r3, #1
  48 001a FB18     		add	r3, r7, r3
  49 001c 1B68     		ldr	r3, [r3]
  50 001e F022     		mov	r2, #240
  51 0020 BA18     		add	r2, r7, r2
  52 0022 1360     		str	r3, [r2]
  91:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #ifdef UNALIGNED_SUPPORT_DISABLE
  92:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
  93:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   q15_t a, b;
  94:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
  95:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #endif /* #ifndef UNALIGNED_SUPPORT_DISABLE */
  96:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
  97:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
  98:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* srcB is always made to slide across srcA. */
  99:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
 100:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* But CORR(x, y) is reverse of CORR(y, x) */
 101:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* So, when srcBLen > srcALen, output pointer is made to point to the end of the output buffer */
 102:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* and the destination pointer modifier, inc is set to -1 */
 103:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* If srcALen > srcBLen, zero pad has to be done to srcB to make the two inputs of same length */
 104:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* But to improve the performance,
 105:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****    * we include zeroes in the output instead of zero padding either of the the inputs*/
 106:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* If srcALen > srcBLen,
 107:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****    * (srcALen - srcBLen) zeroes has to included in the starting of the output buffer */
 108:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* If srcALen < srcBLen,
 109:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****    * (srcALen - srcBLen) zeroes has to included in the ending of the output buffer */
 110:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   if (srcALen >= srcBLen)
  53              		.loc 1 110 0
  54 0024 BA68     		ldr	r2, [r7, #8]
  55 0026 3B68     		ldr	r3, [r7]
  56 0028 9A42     		cmp	r2, r3
  57 002a 26D3     		bcc	.L2
 111:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   {
 112:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Initialization of inputA pointer */
 113:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     pIn1 = (pSrcA);
  58              		.loc 1 113 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 4


  59 002c FB68     		ldr	r3, [r7, #12]
  60 002e 8E22     		mov	r2, #142
  61 0030 5200     		lsl	r2, r2, #1
  62 0032 BA18     		add	r2, r7, r2
  63 0034 1360     		str	r3, [r2]
 114:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 115:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Initialization of inputB pointer */
 116:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     pIn2 = (pSrcB);
  64              		.loc 1 116 0
  65 0036 7B68     		ldr	r3, [r7, #4]
  66 0038 8C22     		mov	r2, #140
  67 003a 5200     		lsl	r2, r2, #1
  68 003c BA18     		add	r2, r7, r2
  69 003e 1360     		str	r3, [r2]
 117:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 118:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Number of output samples is calculated */
 119:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     outBlockSize = (2u * srcALen) - 1u;
  70              		.loc 1 119 0
  71 0040 BB68     		ldr	r3, [r7, #8]
  72 0042 5B00     		lsl	r3, r3, #1
  73 0044 013B     		sub	r3, r3, #1
  74 0046 EC22     		mov	r2, #236
  75 0048 BA18     		add	r2, r7, r2
  76 004a 1360     		str	r3, [r2]
 120:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 121:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* When srcALen > srcBLen, zero padding is done to srcB
 122:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****      * to make their lengths equal.
 123:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****      * Instead, (outBlockSize - (srcALen + srcBLen - 1))
 124:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****      * number of output samples are made zero */
 125:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     j = outBlockSize - (srcALen + (srcBLen - 1u));
  77              		.loc 1 125 0
  78 004c 3A68     		ldr	r2, [r7]
  79 004e BB68     		ldr	r3, [r7, #8]
  80 0050 D318     		add	r3, r2, r3
  81 0052 EC22     		mov	r2, #236
  82 0054 BA18     		add	r2, r7, r2
  83 0056 1268     		ldr	r2, [r2]
  84 0058 D31A     		sub	r3, r2, r3
  85 005a 0133     		add	r3, r3, #1
  86 005c E822     		mov	r2, #232
  87 005e BA18     		add	r2, r7, r2
  88 0060 1360     		str	r3, [r2]
 126:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 127:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Updating the pointer position to non zero value */
 128:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     pOut += j;
  89              		.loc 1 128 0
  90 0062 E823     		mov	r3, #232
  91 0064 FB18     		add	r3, r7, r3
  92 0066 1B68     		ldr	r3, [r3]
  93 0068 5B00     		lsl	r3, r3, #1
  94 006a F022     		mov	r2, #240
  95 006c BA18     		add	r2, r7, r2
  96 006e 1268     		ldr	r2, [r2]
  97 0070 D318     		add	r3, r2, r3
  98 0072 F022     		mov	r2, #240
  99 0074 BA18     		add	r2, r7, r2
 100 0076 1360     		str	r3, [r2]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 5


 101 0078 27E0     		b	.L3
 102              	.L2:
 129:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 130:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   }
 131:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   else
 132:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   {
 133:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Initialization of inputA pointer */
 134:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     pIn1 = (pSrcB);
 103              		.loc 1 134 0
 104 007a 7B68     		ldr	r3, [r7, #4]
 105 007c 8E22     		mov	r2, #142
 106 007e 5200     		lsl	r2, r2, #1
 107 0080 BA18     		add	r2, r7, r2
 108 0082 1360     		str	r3, [r2]
 135:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 136:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Initialization of inputB pointer */
 137:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     pIn2 = (pSrcA);
 109              		.loc 1 137 0
 110 0084 FB68     		ldr	r3, [r7, #12]
 111 0086 8C22     		mov	r2, #140
 112 0088 5200     		lsl	r2, r2, #1
 113 008a BA18     		add	r2, r7, r2
 114 008c 1360     		str	r3, [r2]
 138:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 139:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 140:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     j = srcBLen;
 115              		.loc 1 140 0
 116 008e 3B68     		ldr	r3, [r7]
 117 0090 E822     		mov	r2, #232
 118 0092 BA18     		add	r2, r7, r2
 119 0094 1360     		str	r3, [r2]
 141:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     srcBLen = srcALen;
 120              		.loc 1 141 0
 121 0096 BB68     		ldr	r3, [r7, #8]
 122 0098 3B60     		str	r3, [r7]
 142:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     srcALen = j;
 123              		.loc 1 142 0
 124 009a E823     		mov	r3, #232
 125 009c FB18     		add	r3, r7, r3
 126 009e 1B68     		ldr	r3, [r3]
 127 00a0 BB60     		str	r3, [r7, #8]
 143:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 144:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* CORR(x, y) = Reverse order(CORR(y, x)) */
 145:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Hence set the destination pointer to point to the last output sample */
 146:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     pOut = pDst + ((srcALen + srcBLen) - 2u);
 128              		.loc 1 146 0
 129 00a2 BA68     		ldr	r2, [r7, #8]
 130 00a4 3B68     		ldr	r3, [r7]
 131 00a6 D318     		add	r3, r2, r3
 132 00a8 434A     		ldr	r2, .L59
 133 00aa 9446     		mov	ip, r2
 134 00ac 6344     		add	r3, r3, ip
 135 00ae 5B00     		lsl	r3, r3, #1
 136 00b0 9422     		mov	r2, #148
 137 00b2 5200     		lsl	r2, r2, #1
 138 00b4 BA18     		add	r2, r7, r2
 139 00b6 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 6


 140 00b8 D318     		add	r3, r2, r3
 141 00ba F022     		mov	r2, #240
 142 00bc BA18     		add	r2, r7, r2
 143 00be 1360     		str	r3, [r2]
 147:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 148:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Destination address modifier is set to -1 */
 149:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     inc = -1;
 144              		.loc 1 149 0
 145 00c0 0123     		mov	r3, #1
 146 00c2 5B42     		neg	r3, r3
 147 00c4 F822     		mov	r2, #248
 148 00c6 BA18     		add	r2, r7, r2
 149 00c8 1360     		str	r3, [r2]
 150              	.L3:
 150:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 151:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   }
 152:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 153:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   pScr = pScratch;
 151              		.loc 1 153 0
 152 00ca 9623     		mov	r3, #150
 153 00cc 5B00     		lsl	r3, r3, #1
 154 00ce FB18     		add	r3, r7, r3
 155 00d0 1B68     		ldr	r3, [r3]
 156 00d2 3B61     		str	r3, [r7, #16]
 154:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 155:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* Fill (srcBLen - 1u) zeros in scratch buffer */
 156:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   arm_fill_q15(0, pScr, (srcBLen - 1u));
 157              		.loc 1 156 0
 158 00d4 3A69     		ldr	r2, [r7, #16]
 159 00d6 3B68     		ldr	r3, [r7]
 160 00d8 013B     		sub	r3, r3, #1
 161 00da 0020     		mov	r0, #0
 162 00dc 111C     		mov	r1, r2
 163 00de 1A1C     		mov	r2, r3
 164 00e0 FFF7FEFF 		bl	arm_fill_q15
 157:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 158:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* Update temporary scratch pointer */
 159:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   pScr += (srcBLen - 1u);
 165              		.loc 1 159 0
 166 00e4 3A69     		ldr	r2, [r7, #16]
 167 00e6 3B68     		ldr	r3, [r7]
 168 00e8 3449     		ldr	r1, .L59+4
 169 00ea 8C46     		mov	ip, r1
 170 00ec 6344     		add	r3, r3, ip
 171 00ee 5B00     		lsl	r3, r3, #1
 172 00f0 D318     		add	r3, r2, r3
 173 00f2 3B61     		str	r3, [r7, #16]
 160:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 161:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
 162:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 163:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* Copy (srcALen) samples in scratch buffer */
 164:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   arm_copy_q15(pIn1, pScr, srcALen);
 174              		.loc 1 164 0
 175 00f4 3A69     		ldr	r2, [r7, #16]
 176 00f6 8E23     		mov	r3, #142
 177 00f8 5B00     		lsl	r3, r3, #1
 178 00fa FB18     		add	r3, r7, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 7


 179 00fc 1968     		ldr	r1, [r3]
 180 00fe BB68     		ldr	r3, [r7, #8]
 181 0100 081C     		mov	r0, r1
 182 0102 111C     		mov	r1, r2
 183 0104 1A1C     		mov	r2, r3
 184 0106 FFF7FEFF 		bl	arm_copy_q15
 165:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 166:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* Update pointers */
 167:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   pScr += srcALen;
 185              		.loc 1 167 0
 186 010a 3A69     		ldr	r2, [r7, #16]
 187 010c BB68     		ldr	r3, [r7, #8]
 188 010e 5B00     		lsl	r3, r3, #1
 189 0110 D318     		add	r3, r2, r3
 190 0112 3B61     		str	r3, [r7, #16]
 168:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 169:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #else
 170:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 171:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* Apply loop unrolling and do 4 Copies simultaneously. */
 172:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   j = srcALen >> 2u;
 173:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 174:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 175:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
 176:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   while (j > 0u)
 177:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   {
 178:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* copy second buffer in reversal manner */
 179:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     *pScr++ = *pIn1++;
 180:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     *pScr++ = *pIn1++;
 181:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     *pScr++ = *pIn1++;
 182:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     *pScr++ = *pIn1++;
 183:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 184:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Decrement the loop counter */
 185:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     j--;
 186:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   }
 187:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 188:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 189:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****    ** No loop unrolling is used. */
 190:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   j = srcALen % 0x4u;
 191:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 192:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   while (j > 0u)
 193:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   {
 194:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* copy second buffer in reversal manner for remaining samples */
 195:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     *pScr++ = *pIn1++;
 196:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 197:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Decrement the loop counter */
 198:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     j--;
 199:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   }
 200:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 201:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #endif /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 202:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 203:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
 204:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 205:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* Fill (srcBLen - 1u) zeros at end of scratch buffer */
 206:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   arm_fill_q15(0, pScr, (srcBLen - 1u));
 191              		.loc 1 206 0
 192 0114 3A69     		ldr	r2, [r7, #16]
 193 0116 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 8


 194 0118 013B     		sub	r3, r3, #1
 195 011a 0020     		mov	r0, #0
 196 011c 111C     		mov	r1, r2
 197 011e 1A1C     		mov	r2, r3
 198 0120 FFF7FEFF 		bl	arm_fill_q15
 207:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 208:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* Update pointer */
 209:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   pScr += (srcBLen - 1u);
 199              		.loc 1 209 0
 200 0124 3A69     		ldr	r2, [r7, #16]
 201 0126 3B68     		ldr	r3, [r7]
 202 0128 2449     		ldr	r1, .L59+4
 203 012a 8C46     		mov	ip, r1
 204 012c 6344     		add	r3, r3, ip
 205 012e 5B00     		lsl	r3, r3, #1
 206 0130 D318     		add	r3, r2, r3
 207 0132 3B61     		str	r3, [r7, #16]
 210:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 211:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #else
 212:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 213:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** /* Apply loop unrolling and do 4 Copies simultaneously. */
 214:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   j = (srcBLen - 1u) >> 2u;
 215:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 216:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 217:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
 218:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   while (j > 0u)
 219:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   {
 220:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* copy second buffer in reversal manner */
 221:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     *pScr++ = 0;
 222:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     *pScr++ = 0;
 223:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     *pScr++ = 0;
 224:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     *pScr++ = 0;
 225:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 226:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Decrement the loop counter */
 227:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     j--;
 228:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   }
 229:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 230:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 231:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****    ** No loop unrolling is used. */
 232:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   j = (srcBLen - 1u) % 0x4u;
 233:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 234:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   while (j > 0u)
 235:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   {
 236:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* copy second buffer in reversal manner for remaining samples */
 237:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     *pScr++ = 0;
 238:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 239:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Decrement the loop counter */
 240:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     j--;
 241:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   }
 242:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 243:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #endif /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 244:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 245:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* Temporary pointer for scratch2 */
 246:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   py = pIn2;
 208              		.loc 1 246 0
 209 0134 8C23     		mov	r3, #140
 210 0136 5B00     		lsl	r3, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 9


 211 0138 FB18     		add	r3, r7, r3
 212 013a 1B68     		ldr	r3, [r3]
 213 013c E422     		mov	r2, #228
 214 013e BA18     		add	r2, r7, r2
 215 0140 1360     		str	r3, [r2]
 247:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 248:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 249:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* Actual correlation process starts here */
 250:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   blkCnt = (srcALen + srcBLen - 1u) >> 2;
 216              		.loc 1 250 0
 217 0142 BA68     		ldr	r2, [r7, #8]
 218 0144 3B68     		ldr	r3, [r7]
 219 0146 D318     		add	r3, r2, r3
 220 0148 013B     		sub	r3, r3, #1
 221 014a 9B08     		lsr	r3, r3, #2
 222 014c FC22     		mov	r2, #252
 223 014e BA18     		add	r2, r7, r2
 224 0150 1360     		str	r3, [r2]
 251:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 252:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   while (blkCnt > 0)
 225              		.loc 1 252 0
 226 0152 95E3     		b	.L4
 227              	.L41:
 253:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   {
 254:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Initialze temporary scratch pointer as scratch1 */
 255:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     pScr = pScratch;
 228              		.loc 1 255 0
 229 0154 9623     		mov	r3, #150
 230 0156 5B00     		lsl	r3, r3, #1
 231 0158 FB18     		add	r3, r7, r3
 232 015a 1B68     		ldr	r3, [r3]
 233 015c 3B61     		str	r3, [r7, #16]
 256:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 257:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Clear Accumlators */
 258:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     acc0 = 0;
 234              		.loc 1 258 0
 235 015e 0023     		mov	r3, #0
 236 0160 8A22     		mov	r2, #138
 237 0162 5200     		lsl	r2, r2, #1
 238 0164 BA18     		add	r2, r7, r2
 239 0166 1360     		str	r3, [r2]
 259:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     acc1 = 0;
 240              		.loc 1 259 0
 241 0168 0023     		mov	r3, #0
 242 016a 8822     		mov	r2, #136
 243 016c 5200     		lsl	r2, r2, #1
 244 016e BA18     		add	r2, r7, r2
 245 0170 1360     		str	r3, [r2]
 260:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     acc2 = 0;
 246              		.loc 1 260 0
 247 0172 0023     		mov	r3, #0
 248 0174 8622     		mov	r2, #134
 249 0176 5200     		lsl	r2, r2, #1
 250 0178 BA18     		add	r2, r7, r2
 251 017a 1360     		str	r3, [r2]
 261:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     acc3 = 0;
 252              		.loc 1 261 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 10


 253 017c 0023     		mov	r3, #0
 254 017e 8422     		mov	r2, #132
 255 0180 5200     		lsl	r2, r2, #1
 256 0182 BA18     		add	r2, r7, r2
 257 0184 1360     		str	r3, [r2]
 262:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 263:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Read four samples from scratch1 buffer */
 264:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     x1 = *__SIMD32(pScr)++;
 258              		.loc 1 264 0
 259 0186 1023     		mov	r3, #16
 260 0188 FB18     		add	r3, r7, r3
 261 018a 1A68     		ldr	r2, [r3]
 262 018c 111D     		add	r1, r2, #4
 263 018e 1960     		str	r1, [r3]
 264 0190 1368     		ldr	r3, [r2]
 265 0192 7A1D     		add	r2, r7, #5
 266 0194 FF32     		add	r2, r2, #255
 267 0196 1360     		str	r3, [r2]
 265:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 266:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Read next four samples from scratch1 buffer */
 267:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     x2 = *__SIMD32(pScr)++;
 268              		.loc 1 267 0
 269 0198 1023     		mov	r3, #16
 270 019a FB18     		add	r3, r7, r3
 271 019c 1A68     		ldr	r2, [r3]
 272 019e 111D     		add	r1, r2, #4
 273 01a0 1960     		str	r1, [r3]
 274 01a2 1368     		ldr	r3, [r2]
 275 01a4 7A1C     		add	r2, r7, #1
 276 01a6 FF32     		add	r2, r2, #255
 277 01a8 1360     		str	r3, [r2]
 268:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 269:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     tapCnt = (srcBLen) >> 2u;
 278              		.loc 1 269 0
 279 01aa 3B68     		ldr	r3, [r7]
 280 01ac 9B08     		lsr	r3, r3, #2
 281 01ae F422     		mov	r2, #244
 282 01b0 BA18     		add	r2, r7, r2
 283 01b2 1360     		str	r3, [r2]
 270:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 271:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     while (tapCnt > 0u)
 284              		.loc 1 271 0
 285 01b4 D1E1     		b	.L5
 286              	.L60:
 287 01b6 C046     		.align	2
 288              	.L59:
 289 01b8 FEFFFF7F 		.word	2147483646
 290 01bc FFFFFF7F 		.word	2147483647
 291              	.L14:
 272:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     {
 273:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 274:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
 275:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 276:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       /* Read four samples from smaller buffer */
 277:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       y1 = _SIMD32_OFFSET(pIn2);
 292              		.loc 1 277 0
 293 01c0 8C23     		mov	r3, #140
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 11


 294 01c2 5B00     		lsl	r3, r3, #1
 295 01c4 FB18     		add	r3, r7, r3
 296 01c6 1B68     		ldr	r3, [r3]
 297 01c8 1B68     		ldr	r3, [r3]
 298 01ca E022     		mov	r2, #224
 299 01cc BA18     		add	r2, r7, r2
 300 01ce 1360     		str	r3, [r2]
 278:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       y2 = _SIMD32_OFFSET(pIn2 + 2u);
 301              		.loc 1 278 0
 302 01d0 8C23     		mov	r3, #140
 303 01d2 5B00     		lsl	r3, r3, #1
 304 01d4 FB18     		add	r3, r7, r3
 305 01d6 1B68     		ldr	r3, [r3]
 306 01d8 5B68     		ldr	r3, [r3, #4]
 307 01da DC22     		mov	r2, #220
 308 01dc BA18     		add	r2, r7, r2
 309 01de 1360     		str	r3, [r2]
 279:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 280:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc0 = __SMLAD(x1, y1, acc0);
 310              		.loc 1 280 0
 311 01e0 7B1D     		add	r3, r7, #5
 312 01e2 FF33     		add	r3, r3, #255
 313 01e4 1968     		ldr	r1, [r3]
 314 01e6 E023     		mov	r3, #224
 315 01e8 FB18     		add	r3, r7, r3
 316 01ea 1A68     		ldr	r2, [r3]
 317 01ec 8A23     		mov	r3, #138
 318 01ee 5B00     		lsl	r3, r3, #1
 319 01f0 FB18     		add	r3, r7, r3
 320 01f2 1B68     		ldr	r3, [r3]
 321 01f4 D420     		mov	r0, #212
 322 01f6 3818     		add	r0, r7, r0
 323 01f8 0160     		str	r1, [r0]
 324 01fa D021     		mov	r1, #208
 325 01fc 7918     		add	r1, r7, r1
 326 01fe 0A60     		str	r2, [r1]
 327 0200 CC22     		mov	r2, #204
 328 0202 BA18     		add	r2, r7, r2
 329 0204 1360     		str	r3, [r2]
 330              	.LBB28:
 331              	.LBB29:
 332              		.file 2 ".\\Include/arm_math.h"
   1:.\Include/arm_math.h **** /* ----------------------------------------------------------------------
   2:.\Include/arm_math.h ****  * Project:      CMSIS DSP Library
   3:.\Include/arm_math.h ****  * Title:        arm_math.h
   4:.\Include/arm_math.h ****  * Description:  Public header file for CMSIS DSP Library
   5:.\Include/arm_math.h ****  *
   6:.\Include/arm_math.h ****  * $Date:        27. January 2017
   7:.\Include/arm_math.h ****  * $Revision:    V.1.5.1
   8:.\Include/arm_math.h ****  *
   9:.\Include/arm_math.h ****  * Target Processor: Cortex-M cores
  10:.\Include/arm_math.h ****  * -------------------------------------------------------------------- */
  11:.\Include/arm_math.h **** /*
  12:.\Include/arm_math.h ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:.\Include/arm_math.h ****  *
  14:.\Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  15:.\Include/arm_math.h ****  *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 12


  16:.\Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.\Include/arm_math.h ****  * not use this file except in compliance with the License.
  18:.\Include/arm_math.h ****  * You may obtain a copy of the License at
  19:.\Include/arm_math.h ****  *
  20:.\Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  21:.\Include/arm_math.h ****  *
  22:.\Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  23:.\Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.\Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.\Include/arm_math.h ****  * See the License for the specific language governing permissions and
  26:.\Include/arm_math.h ****  * limitations under the License.
  27:.\Include/arm_math.h ****  */
  28:.\Include/arm_math.h **** 
  29:.\Include/arm_math.h **** /**
  30:.\Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  31:.\Include/arm_math.h ****    *
  32:.\Include/arm_math.h ****    * Introduction
  33:.\Include/arm_math.h ****    * ------------
  34:.\Include/arm_math.h ****    *
  35:.\Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  36:.\Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  37:.\Include/arm_math.h ****    *
  38:.\Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  39:.\Include/arm_math.h ****    * - Basic math functions
  40:.\Include/arm_math.h ****    * - Fast math functions
  41:.\Include/arm_math.h ****    * - Complex math functions
  42:.\Include/arm_math.h ****    * - Filters
  43:.\Include/arm_math.h ****    * - Matrix functions
  44:.\Include/arm_math.h ****    * - Transforms
  45:.\Include/arm_math.h ****    * - Motor control functions
  46:.\Include/arm_math.h ****    * - Statistical functions
  47:.\Include/arm_math.h ****    * - Support functions
  48:.\Include/arm_math.h ****    * - Interpolation functions
  49:.\Include/arm_math.h ****    *
  50:.\Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  51:.\Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  52:.\Include/arm_math.h ****    *
  53:.\Include/arm_math.h ****    * Using the Library
  54:.\Include/arm_math.h ****    * ------------
  55:.\Include/arm_math.h ****    *
  56:.\Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  57:.\Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  58:.\Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  59:.\Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  60:.\Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  61:.\Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  62:.\Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  63:.\Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  64:.\Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  65:.\Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  66:.\Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  67:.\Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  68:.\Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  69:.\Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  70:.\Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  71:.\Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (ARMv8M Baseline, Little endian)
  72:.\Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (ARMv8M Mainline, Little endian)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 13


  73:.\Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (ARMv8M Mainline, Little endian, Single Precision Floating Point U
  74:.\Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (ARMv8M Mainline, Little endian, DSP instructions)
  75:.\Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (ARMv8M Mainline, Little endian, DSP instructions, Single Precisi
  76:.\Include/arm_math.h ****    *
  77:.\Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  78:.\Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  79:.\Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  80:.\Include/arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  81:.\Include/arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  82:.\Include/arm_math.h ****    * For ARMv8M cores define pre processor MACRO ARM_MATH_ARMV8MBL or ARM_MATH_ARMV8MML.
  83:.\Include/arm_math.h ****    * Set Pre processor MACRO __DSP_PRESENT if ARMv8M Mainline core supports DSP instructions.
  84:.\Include/arm_math.h ****    * 
  85:.\Include/arm_math.h ****    *
  86:.\Include/arm_math.h ****    * Examples
  87:.\Include/arm_math.h ****    * --------
  88:.\Include/arm_math.h ****    *
  89:.\Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  90:.\Include/arm_math.h ****    *
  91:.\Include/arm_math.h ****    * Toolchain Support
  92:.\Include/arm_math.h ****    * ------------
  93:.\Include/arm_math.h ****    *
  94:.\Include/arm_math.h ****    * The library has been developed and tested with MDK-ARM version 5.14.0.0
  95:.\Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  96:.\Include/arm_math.h ****    *
  97:.\Include/arm_math.h ****    * Building the Library
  98:.\Include/arm_math.h ****    * ------------
  99:.\Include/arm_math.h ****    *
 100:.\Include/arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 101:.\Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
 102:.\Include/arm_math.h ****    *
 103:.\Include/arm_math.h ****    *
 104:.\Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 105:.\Include/arm_math.h ****    *
 106:.\Include/arm_math.h ****    * Pre-processor Macros
 107:.\Include/arm_math.h ****    * ------------
 108:.\Include/arm_math.h ****    *
 109:.\Include/arm_math.h ****    * Each library project have differant pre-processor macros.
 110:.\Include/arm_math.h ****    *
 111:.\Include/arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 112:.\Include/arm_math.h ****    *
 113:.\Include/arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 114:.\Include/arm_math.h ****    *
 115:.\Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 116:.\Include/arm_math.h ****    *
 117:.\Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 118:.\Include/arm_math.h ****    *
 119:.\Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 120:.\Include/arm_math.h ****    *
 121:.\Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 122:.\Include/arm_math.h ****    *
 123:.\Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 124:.\Include/arm_math.h ****    *
 125:.\Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 126:.\Include/arm_math.h ****    *
 127:.\Include/arm_math.h ****    * - ARM_MATH_CMx:
 128:.\Include/arm_math.h ****    *
 129:.\Include/arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 14


 130:.\Include/arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 131:.\Include/arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 132:.\Include/arm_math.h ****    *
 133:.\Include/arm_math.h ****    * - ARM_MATH_ARMV8MxL:
 134:.\Include/arm_math.h ****    *
 135:.\Include/arm_math.h ****    * Define macro ARM_MATH_ARMV8MBL for building the library on ARMv8M Baseline target, ARM_MATH_AR
 136:.\Include/arm_math.h ****    * on ARMv8M Mainline target.
 137:.\Include/arm_math.h ****    *
 138:.\Include/arm_math.h ****    * - __FPU_PRESENT:
 139:.\Include/arm_math.h ****    *
 140:.\Include/arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 141:.\Include/arm_math.h ****    *
 142:.\Include/arm_math.h ****    * - __DSP_PRESENT:
 143:.\Include/arm_math.h ****    *
 144:.\Include/arm_math.h ****    * Initialize macro __DSP_PRESENT = 1 when ARMv8M Mainline core supports DSP instructions.
 145:.\Include/arm_math.h ****    *
 146:.\Include/arm_math.h ****    * <hr>
 147:.\Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 148:.\Include/arm_math.h ****    * -----------------------------
 149:.\Include/arm_math.h ****    *
 150:.\Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 151:.\Include/arm_math.h ****    * |File/Folder                   |Content                                                       
 152:.\Include/arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 153:.\Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 154:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 155:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 156:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 157:.\Include/arm_math.h ****    *
 158:.\Include/arm_math.h ****    * <hr>
 159:.\Include/arm_math.h ****    * Revision History of CMSIS-DSP
 160:.\Include/arm_math.h ****    * ------------
 161:.\Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 162:.\Include/arm_math.h ****    *
 163:.\Include/arm_math.h ****    * Copyright Notice
 164:.\Include/arm_math.h ****    * ------------
 165:.\Include/arm_math.h ****    *
 166:.\Include/arm_math.h ****    * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
 167:.\Include/arm_math.h ****    */
 168:.\Include/arm_math.h **** 
 169:.\Include/arm_math.h **** 
 170:.\Include/arm_math.h **** /**
 171:.\Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 172:.\Include/arm_math.h ****  */
 173:.\Include/arm_math.h **** 
 174:.\Include/arm_math.h **** /**
 175:.\Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 176:.\Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 177:.\Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 178:.\Include/arm_math.h ****  * operate on individual values and not arrays.
 179:.\Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 180:.\Include/arm_math.h ****  *
 181:.\Include/arm_math.h ****  */
 182:.\Include/arm_math.h **** 
 183:.\Include/arm_math.h **** /**
 184:.\Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 185:.\Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 186:.\Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 15


 187:.\Include/arm_math.h ****  * (real, imag, real, imag, ...).
 188:.\Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 189:.\Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 190:.\Include/arm_math.h ****  * real values.
 191:.\Include/arm_math.h ****  */
 192:.\Include/arm_math.h **** 
 193:.\Include/arm_math.h **** /**
 194:.\Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 195:.\Include/arm_math.h ****  */
 196:.\Include/arm_math.h **** 
 197:.\Include/arm_math.h **** /**
 198:.\Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 199:.\Include/arm_math.h ****  *
 200:.\Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 201:.\Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 202:.\Include/arm_math.h ****  * the type
 203:.\Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 204:.\Include/arm_math.h ****  * below:
 205:.\Include/arm_math.h ****  * <pre>
 206:.\Include/arm_math.h ****  *     typedef struct
 207:.\Include/arm_math.h ****  *     {
 208:.\Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 209:.\Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 210:.\Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 211:.\Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 212:.\Include/arm_math.h ****  * </pre>
 213:.\Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 214:.\Include/arm_math.h ****  *
 215:.\Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 216:.\Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 217:.\Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 218:.\Include/arm_math.h ****  * matrix element (i, j) is stored at:
 219:.\Include/arm_math.h ****  * <pre>
 220:.\Include/arm_math.h ****  *     pData[i*numCols + j]
 221:.\Include/arm_math.h ****  * </pre>
 222:.\Include/arm_math.h ****  *
 223:.\Include/arm_math.h ****  * \par Init Functions
 224:.\Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 225:.\Include/arm_math.h ****  * data structure.
 226:.\Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 227:.\Include/arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 228:.\Include/arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 229:.\Include/arm_math.h ****  *
 230:.\Include/arm_math.h ****  * \par
 231:.\Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 232:.\Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 233:.\Include/arm_math.h ****  * To place the instance structure in a const data
 234:.\Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 235:.\Include/arm_math.h ****  * <pre>
 236:.\Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 237:.\Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 238:.\Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 239:.\Include/arm_math.h ****  * </pre>
 240:.\Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 241:.\Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 242:.\Include/arm_math.h ****  * data array.
 243:.\Include/arm_math.h ****  *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 16


 244:.\Include/arm_math.h ****  * \par Size Checking
 245:.\Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 246:.\Include/arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 247:.\Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 248:.\Include/arm_math.h ****  * columns.  If the size check fails the functions return:
 249:.\Include/arm_math.h ****  * <pre>
 250:.\Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 251:.\Include/arm_math.h ****  * </pre>
 252:.\Include/arm_math.h ****  * Otherwise the functions return
 253:.\Include/arm_math.h ****  * <pre>
 254:.\Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 255:.\Include/arm_math.h ****  * </pre>
 256:.\Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 257:.\Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 258:.\Include/arm_math.h ****  * <pre>
 259:.\Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 260:.\Include/arm_math.h ****  * </pre>
 261:.\Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 262:.\Include/arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 263:.\Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 264:.\Include/arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
 265:.\Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 266:.\Include/arm_math.h ****  */
 267:.\Include/arm_math.h **** 
 268:.\Include/arm_math.h **** /**
 269:.\Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 270:.\Include/arm_math.h ****  */
 271:.\Include/arm_math.h **** 
 272:.\Include/arm_math.h **** /**
 273:.\Include/arm_math.h ****  * @defgroup groupController Controller Functions
 274:.\Include/arm_math.h ****  */
 275:.\Include/arm_math.h **** 
 276:.\Include/arm_math.h **** /**
 277:.\Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 278:.\Include/arm_math.h ****  */
 279:.\Include/arm_math.h **** /**
 280:.\Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 281:.\Include/arm_math.h ****  */
 282:.\Include/arm_math.h **** 
 283:.\Include/arm_math.h **** /**
 284:.\Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 285:.\Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 286:.\Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 287:.\Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 288:.\Include/arm_math.h ****  */
 289:.\Include/arm_math.h **** 
 290:.\Include/arm_math.h **** /**
 291:.\Include/arm_math.h ****  * @defgroup groupExamples Examples
 292:.\Include/arm_math.h ****  */
 293:.\Include/arm_math.h **** #ifndef _ARM_MATH_H
 294:.\Include/arm_math.h **** #define _ARM_MATH_H
 295:.\Include/arm_math.h **** 
 296:.\Include/arm_math.h **** /* ignore some GCC warnings */
 297:.\Include/arm_math.h **** #if defined ( __GNUC__ )
 298:.\Include/arm_math.h **** #pragma GCC diagnostic push
 299:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 300:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 17


 301:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 302:.\Include/arm_math.h **** #endif
 303:.\Include/arm_math.h **** 
 304:.\Include/arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 305:.\Include/arm_math.h **** 
 306:.\Include/arm_math.h **** #if defined(ARM_MATH_CM7)
 307:.\Include/arm_math.h ****   #include "core_cm7.h"
 308:.\Include/arm_math.h ****   #define ARM_MATH_DSP
 309:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM4)
 310:.\Include/arm_math.h ****   #include "core_cm4.h"
 311:.\Include/arm_math.h ****   #define ARM_MATH_DSP
 312:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM3)
 313:.\Include/arm_math.h ****   #include "core_cm3.h"
 314:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM0)
 315:.\Include/arm_math.h ****   #include "core_cm0.h"
 316:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 317:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
 318:.\Include/arm_math.h ****   #include "core_cm0plus.h"
 319:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 320:.\Include/arm_math.h **** #elif defined (ARM_MATH_ARMV8MBL)
 321:.\Include/arm_math.h ****   #include "core_armv8mbl.h"
 322:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 323:.\Include/arm_math.h **** #elif defined (ARM_MATH_ARMV8MML)
 324:.\Include/arm_math.h ****   #include "core_armv8mml.h"
 325:.\Include/arm_math.h ****   #if (defined (__DSP_PRESENT) && (__DSP_PRESENT == 1))
 326:.\Include/arm_math.h ****     #define ARM_MATH_DSP
 327:.\Include/arm_math.h ****   #endif
 328:.\Include/arm_math.h **** #else
 329:.\Include/arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 330:.\Include/arm_math.h **** #endif
 331:.\Include/arm_math.h **** 
 332:.\Include/arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 333:.\Include/arm_math.h **** #include "string.h"
 334:.\Include/arm_math.h **** #include "math.h"
 335:.\Include/arm_math.h **** #ifdef   __cplusplus
 336:.\Include/arm_math.h **** extern "C"
 337:.\Include/arm_math.h **** {
 338:.\Include/arm_math.h **** #endif
 339:.\Include/arm_math.h **** 
 340:.\Include/arm_math.h **** 
 341:.\Include/arm_math.h ****   /**
 342:.\Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:.\Include/arm_math.h ****    */
 344:.\Include/arm_math.h **** 
 345:.\Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:.\Include/arm_math.h **** #define DELTA_Q15          0x5
 347:.\Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:.\Include/arm_math.h **** #ifndef PI
 349:.\Include/arm_math.h ****   #define PI               3.14159265358979f
 350:.\Include/arm_math.h **** #endif
 351:.\Include/arm_math.h **** 
 352:.\Include/arm_math.h ****   /**
 353:.\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:.\Include/arm_math.h ****    */
 355:.\Include/arm_math.h **** 
 356:.\Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:.\Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 18


 358:.\Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:.\Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:.\Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:.\Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:.\Include/arm_math.h **** 
 363:.\Include/arm_math.h ****   /**
 364:.\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:.\Include/arm_math.h ****    */
 366:.\Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:.\Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:.\Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:.\Include/arm_math.h **** 
 370:.\Include/arm_math.h ****   /**
 371:.\Include/arm_math.h ****    * @brief Macro for Unaligned Support
 372:.\Include/arm_math.h ****    */
 373:.\Include/arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 374:.\Include/arm_math.h ****     #define ALIGN4
 375:.\Include/arm_math.h **** #else
 376:.\Include/arm_math.h ****   #if defined  (__GNUC__)
 377:.\Include/arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 378:.\Include/arm_math.h ****   #else
 379:.\Include/arm_math.h ****     #define ALIGN4 __align(4)
 380:.\Include/arm_math.h ****   #endif
 381:.\Include/arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 382:.\Include/arm_math.h **** 
 383:.\Include/arm_math.h ****   /**
 384:.\Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 385:.\Include/arm_math.h ****    */
 386:.\Include/arm_math.h **** 
 387:.\Include/arm_math.h ****   typedef enum
 388:.\Include/arm_math.h ****   {
 389:.\Include/arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 390:.\Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 391:.\Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 392:.\Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 393:.\Include/arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 394:.\Include/arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 395:.\Include/arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 396:.\Include/arm_math.h ****   } arm_status;
 397:.\Include/arm_math.h **** 
 398:.\Include/arm_math.h ****   /**
 399:.\Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 400:.\Include/arm_math.h ****    */
 401:.\Include/arm_math.h ****   typedef int8_t q7_t;
 402:.\Include/arm_math.h **** 
 403:.\Include/arm_math.h ****   /**
 404:.\Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 405:.\Include/arm_math.h ****    */
 406:.\Include/arm_math.h ****   typedef int16_t q15_t;
 407:.\Include/arm_math.h **** 
 408:.\Include/arm_math.h ****   /**
 409:.\Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 410:.\Include/arm_math.h ****    */
 411:.\Include/arm_math.h ****   typedef int32_t q31_t;
 412:.\Include/arm_math.h **** 
 413:.\Include/arm_math.h ****   /**
 414:.\Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 19


 415:.\Include/arm_math.h ****    */
 416:.\Include/arm_math.h ****   typedef int64_t q63_t;
 417:.\Include/arm_math.h **** 
 418:.\Include/arm_math.h ****   /**
 419:.\Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 420:.\Include/arm_math.h ****    */
 421:.\Include/arm_math.h ****   typedef float float32_t;
 422:.\Include/arm_math.h **** 
 423:.\Include/arm_math.h ****   /**
 424:.\Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 425:.\Include/arm_math.h ****    */
 426:.\Include/arm_math.h ****   typedef double float64_t;
 427:.\Include/arm_math.h **** 
 428:.\Include/arm_math.h ****   /**
 429:.\Include/arm_math.h ****    * @brief definition to read/write two 16 bit values.
 430:.\Include/arm_math.h ****    */
 431:.\Include/arm_math.h **** #if   defined ( __CC_ARM )
 432:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 433:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 434:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 435:.\Include/arm_math.h **** 
 436:.\Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 437:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 438:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 439:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 440:.\Include/arm_math.h **** 
 441:.\Include/arm_math.h **** #elif defined ( __GNUC__ )
 442:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 443:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 444:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 445:.\Include/arm_math.h **** 
 446:.\Include/arm_math.h **** #elif defined ( __ICCARM__ )
 447:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 448:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 449:.\Include/arm_math.h ****   #define CMSIS_INLINE
 450:.\Include/arm_math.h **** 
 451:.\Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 452:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 453:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 454:.\Include/arm_math.h ****   #define CMSIS_INLINE
 455:.\Include/arm_math.h **** 
 456:.\Include/arm_math.h **** #elif defined ( __CSMC__ )
 457:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 458:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 459:.\Include/arm_math.h ****   #define CMSIS_INLINE
 460:.\Include/arm_math.h **** 
 461:.\Include/arm_math.h **** #elif defined ( __TASKING__ )
 462:.\Include/arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 463:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 464:.\Include/arm_math.h ****   #define CMSIS_INLINE
 465:.\Include/arm_math.h **** 
 466:.\Include/arm_math.h **** #else
 467:.\Include/arm_math.h ****   #error Unknown compiler
 468:.\Include/arm_math.h **** #endif
 469:.\Include/arm_math.h **** 
 470:.\Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 471:.\Include/arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 20


 472:.\Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 473:.\Include/arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 474:.\Include/arm_math.h **** 
 475:.\Include/arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 476:.\Include/arm_math.h **** #if !defined (ARM_MATH_DSP)
 477:.\Include/arm_math.h ****   /**
 478:.\Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 479:.\Include/arm_math.h ****    */
 480:.\Include/arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 481:.\Include/arm_math.h ****                                     (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 482:.\Include/arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 483:.\Include/arm_math.h ****                                     (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 484:.\Include/arm_math.h **** 
 485:.\Include/arm_math.h **** /* #endif // defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 486:.\Include/arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
 487:.\Include/arm_math.h **** 
 488:.\Include/arm_math.h ****    /**
 489:.\Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
 490:.\Include/arm_math.h ****    */
 491:.\Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 492:.\Include/arm_math.h **** 
 493:.\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 494:.\Include/arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 495:.\Include/arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 496:.\Include/arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 497:.\Include/arm_math.h **** #else
 498:.\Include/arm_math.h **** 
 499:.\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 500:.\Include/arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 501:.\Include/arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 502:.\Include/arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 503:.\Include/arm_math.h **** 
 504:.\Include/arm_math.h **** #endif
 505:.\Include/arm_math.h **** 
 506:.\Include/arm_math.h **** 
 507:.\Include/arm_math.h ****   /**
 508:.\Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 509:.\Include/arm_math.h ****    */
 510:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t clip_q63_to_q31(
 511:.\Include/arm_math.h ****   q63_t x)
 512:.\Include/arm_math.h ****   {
 513:.\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 514:.\Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 515:.\Include/arm_math.h ****   }
 516:.\Include/arm_math.h **** 
 517:.\Include/arm_math.h ****   /**
 518:.\Include/arm_math.h ****    * @brief Clips Q63 to Q15 values.
 519:.\Include/arm_math.h ****    */
 520:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q63_to_q15(
 521:.\Include/arm_math.h ****   q63_t x)
 522:.\Include/arm_math.h ****   {
 523:.\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 524:.\Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 525:.\Include/arm_math.h ****   }
 526:.\Include/arm_math.h **** 
 527:.\Include/arm_math.h ****   /**
 528:.\Include/arm_math.h ****    * @brief Clips Q31 to Q7 values.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 21


 529:.\Include/arm_math.h ****    */
 530:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q7_t clip_q31_to_q7(
 531:.\Include/arm_math.h ****   q31_t x)
 532:.\Include/arm_math.h ****   {
 533:.\Include/arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 534:.\Include/arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 535:.\Include/arm_math.h ****   }
 536:.\Include/arm_math.h **** 
 537:.\Include/arm_math.h ****   /**
 538:.\Include/arm_math.h ****    * @brief Clips Q31 to Q15 values.
 539:.\Include/arm_math.h ****    */
 540:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q31_to_q15(
 541:.\Include/arm_math.h ****   q31_t x)
 542:.\Include/arm_math.h ****   {
 543:.\Include/arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 544:.\Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 545:.\Include/arm_math.h ****   }
 546:.\Include/arm_math.h **** 
 547:.\Include/arm_math.h ****   /**
 548:.\Include/arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 549:.\Include/arm_math.h ****    */
 550:.\Include/arm_math.h **** 
 551:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q63_t mult32x64(
 552:.\Include/arm_math.h ****   q63_t x,
 553:.\Include/arm_math.h ****   q31_t y)
 554:.\Include/arm_math.h ****   {
 555:.\Include/arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 556:.\Include/arm_math.h ****             (((q63_t) (x >> 32) * y)));
 557:.\Include/arm_math.h ****   }
 558:.\Include/arm_math.h **** 
 559:.\Include/arm_math.h **** /*
 560:.\Include/arm_math.h ****   #if defined (ARM_MATH_CM0_FAMILY) && defined ( __CC_ARM   )
 561:.\Include/arm_math.h ****   #define __CLZ __clz
 562:.\Include/arm_math.h ****   #endif
 563:.\Include/arm_math.h ****  */
 564:.\Include/arm_math.h **** /* note: function can be removed when all toolchain support __CLZ for Cortex-M0 */
 565:.\Include/arm_math.h **** #if defined (ARM_MATH_CM0_FAMILY) && ((defined (__ICCARM__))  )
 566:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 567:.\Include/arm_math.h ****   q31_t data);
 568:.\Include/arm_math.h **** 
 569:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 570:.\Include/arm_math.h ****   q31_t data)
 571:.\Include/arm_math.h ****   {
 572:.\Include/arm_math.h ****     uint32_t count = 0;
 573:.\Include/arm_math.h ****     uint32_t mask = 0x80000000;
 574:.\Include/arm_math.h **** 
 575:.\Include/arm_math.h ****     while ((data & mask) == 0)
 576:.\Include/arm_math.h ****     {
 577:.\Include/arm_math.h ****       count += 1u;
 578:.\Include/arm_math.h ****       mask = mask >> 1u;
 579:.\Include/arm_math.h ****     }
 580:.\Include/arm_math.h **** 
 581:.\Include/arm_math.h ****     return (count);
 582:.\Include/arm_math.h ****   }
 583:.\Include/arm_math.h **** #endif
 584:.\Include/arm_math.h **** 
 585:.\Include/arm_math.h ****   /**
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 22


 586:.\Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 587:.\Include/arm_math.h ****    */
 588:.\Include/arm_math.h **** 
 589:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q31(
 590:.\Include/arm_math.h ****   q31_t in,
 591:.\Include/arm_math.h ****   q31_t * dst,
 592:.\Include/arm_math.h ****   q31_t * pRecipTable)
 593:.\Include/arm_math.h ****   {
 594:.\Include/arm_math.h ****     q31_t out;
 595:.\Include/arm_math.h ****     uint32_t tempVal;
 596:.\Include/arm_math.h ****     uint32_t index, i;
 597:.\Include/arm_math.h ****     uint32_t signBits;
 598:.\Include/arm_math.h **** 
 599:.\Include/arm_math.h ****     if (in > 0)
 600:.\Include/arm_math.h ****     {
 601:.\Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 602:.\Include/arm_math.h ****     }
 603:.\Include/arm_math.h ****     else
 604:.\Include/arm_math.h ****     {
 605:.\Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 606:.\Include/arm_math.h ****     }
 607:.\Include/arm_math.h **** 
 608:.\Include/arm_math.h ****     /* Convert input sample to 1.31 format */
 609:.\Include/arm_math.h ****     in = (in << signBits);
 610:.\Include/arm_math.h **** 
 611:.\Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 612:.\Include/arm_math.h ****     index = (uint32_t)(in >> 24);
 613:.\Include/arm_math.h ****     index = (index & INDEX_MASK);
 614:.\Include/arm_math.h **** 
 615:.\Include/arm_math.h ****     /* 1.31 with exp 1 */
 616:.\Include/arm_math.h ****     out = pRecipTable[index];
 617:.\Include/arm_math.h **** 
 618:.\Include/arm_math.h ****     /* calculation of reciprocal value */
 619:.\Include/arm_math.h ****     /* running approximation for two iterations */
 620:.\Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 621:.\Include/arm_math.h ****     {
 622:.\Include/arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 623:.\Include/arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 624:.\Include/arm_math.h ****       /*      1.31 with exp 1 */
 625:.\Include/arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 626:.\Include/arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 627:.\Include/arm_math.h ****     }
 628:.\Include/arm_math.h **** 
 629:.\Include/arm_math.h ****     /* write output */
 630:.\Include/arm_math.h ****     *dst = out;
 631:.\Include/arm_math.h **** 
 632:.\Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 633:.\Include/arm_math.h ****     return (signBits + 1u);
 634:.\Include/arm_math.h ****   }
 635:.\Include/arm_math.h **** 
 636:.\Include/arm_math.h **** 
 637:.\Include/arm_math.h ****   /**
 638:.\Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
 639:.\Include/arm_math.h ****    */
 640:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q15(
 641:.\Include/arm_math.h ****   q15_t in,
 642:.\Include/arm_math.h ****   q15_t * dst,
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 23


 643:.\Include/arm_math.h ****   q15_t * pRecipTable)
 644:.\Include/arm_math.h ****   {
 645:.\Include/arm_math.h ****     q15_t out = 0;
 646:.\Include/arm_math.h ****     uint32_t tempVal = 0;
 647:.\Include/arm_math.h ****     uint32_t index = 0, i = 0;
 648:.\Include/arm_math.h ****     uint32_t signBits = 0;
 649:.\Include/arm_math.h **** 
 650:.\Include/arm_math.h ****     if (in > 0)
 651:.\Include/arm_math.h ****     {
 652:.\Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
 653:.\Include/arm_math.h ****     }
 654:.\Include/arm_math.h ****     else
 655:.\Include/arm_math.h ****     {
 656:.\Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
 657:.\Include/arm_math.h ****     }
 658:.\Include/arm_math.h **** 
 659:.\Include/arm_math.h ****     /* Convert input sample to 1.15 format */
 660:.\Include/arm_math.h ****     in = (in << signBits);
 661:.\Include/arm_math.h **** 
 662:.\Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 663:.\Include/arm_math.h ****     index = (uint32_t)(in >>  8);
 664:.\Include/arm_math.h ****     index = (index & INDEX_MASK);
 665:.\Include/arm_math.h **** 
 666:.\Include/arm_math.h ****     /*      1.15 with exp 1  */
 667:.\Include/arm_math.h ****     out = pRecipTable[index];
 668:.\Include/arm_math.h **** 
 669:.\Include/arm_math.h ****     /* calculation of reciprocal value */
 670:.\Include/arm_math.h ****     /* running approximation for two iterations */
 671:.\Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 672:.\Include/arm_math.h ****     {
 673:.\Include/arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
 674:.\Include/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 675:.\Include/arm_math.h ****       /*      1.15 with exp 1 */
 676:.\Include/arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
 677:.\Include/arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
 678:.\Include/arm_math.h ****     }
 679:.\Include/arm_math.h **** 
 680:.\Include/arm_math.h ****     /* write output */
 681:.\Include/arm_math.h ****     *dst = out;
 682:.\Include/arm_math.h **** 
 683:.\Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 684:.\Include/arm_math.h ****     return (signBits + 1);
 685:.\Include/arm_math.h ****   }
 686:.\Include/arm_math.h **** 
 687:.\Include/arm_math.h **** 
 688:.\Include/arm_math.h ****   /*
 689:.\Include/arm_math.h ****    * @brief C custom defined intrinisic function for only M0 processors
 690:.\Include/arm_math.h ****    */
 691:.\Include/arm_math.h **** #if defined(ARM_MATH_CM0_FAMILY)
 692:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t __SSAT(
 693:.\Include/arm_math.h ****   q31_t x,
 694:.\Include/arm_math.h ****   uint32_t y)
 695:.\Include/arm_math.h ****   {
 696:.\Include/arm_math.h ****     int32_t posMax, negMin;
 697:.\Include/arm_math.h ****     uint32_t i;
 698:.\Include/arm_math.h **** 
 699:.\Include/arm_math.h ****     posMax = 1;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 24


 700:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 701:.\Include/arm_math.h ****     {
 702:.\Include/arm_math.h ****       posMax = posMax * 2;
 703:.\Include/arm_math.h ****     }
 704:.\Include/arm_math.h **** 
 705:.\Include/arm_math.h ****     if (x > 0)
 706:.\Include/arm_math.h ****     {
 707:.\Include/arm_math.h ****       posMax = (posMax - 1);
 708:.\Include/arm_math.h **** 
 709:.\Include/arm_math.h ****       if (x > posMax)
 710:.\Include/arm_math.h ****       {
 711:.\Include/arm_math.h ****         x = posMax;
 712:.\Include/arm_math.h ****       }
 713:.\Include/arm_math.h ****     }
 714:.\Include/arm_math.h ****     else
 715:.\Include/arm_math.h ****     {
 716:.\Include/arm_math.h ****       negMin = -posMax;
 717:.\Include/arm_math.h **** 
 718:.\Include/arm_math.h ****       if (x < negMin)
 719:.\Include/arm_math.h ****       {
 720:.\Include/arm_math.h ****         x = negMin;
 721:.\Include/arm_math.h ****       }
 722:.\Include/arm_math.h ****     }
 723:.\Include/arm_math.h ****     return (x);
 724:.\Include/arm_math.h ****   }
 725:.\Include/arm_math.h **** #endif /* end of ARM_MATH_CM0_FAMILY */
 726:.\Include/arm_math.h **** 
 727:.\Include/arm_math.h **** 
 728:.\Include/arm_math.h ****   /*
 729:.\Include/arm_math.h ****    * @brief C custom defined intrinsic function for M3 and M0 processors
 730:.\Include/arm_math.h ****    */
 731:.\Include/arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 732:.\Include/arm_math.h **** #if !defined (ARM_MATH_DSP)
 733:.\Include/arm_math.h **** 
 734:.\Include/arm_math.h ****   /*
 735:.\Include/arm_math.h ****    * @brief C custom defined QADD8 for M3 and M0 processors
 736:.\Include/arm_math.h ****    */
 737:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD8(
 738:.\Include/arm_math.h ****   uint32_t x,
 739:.\Include/arm_math.h ****   uint32_t y)
 740:.\Include/arm_math.h ****   {
 741:.\Include/arm_math.h ****     q31_t r, s, t, u;
 742:.\Include/arm_math.h **** 
 743:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) + (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 744:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) + (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 745:.\Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) + (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 746:.\Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) + (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 747:.\Include/arm_math.h **** 
 748:.\Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 749:.\Include/arm_math.h ****   }
 750:.\Include/arm_math.h **** 
 751:.\Include/arm_math.h **** 
 752:.\Include/arm_math.h ****   /*
 753:.\Include/arm_math.h ****    * @brief C custom defined QSUB8 for M3 and M0 processors
 754:.\Include/arm_math.h ****    */
 755:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB8(
 756:.\Include/arm_math.h ****   uint32_t x,
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 25


 757:.\Include/arm_math.h ****   uint32_t y)
 758:.\Include/arm_math.h ****   {
 759:.\Include/arm_math.h ****     q31_t r, s, t, u;
 760:.\Include/arm_math.h **** 
 761:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) - (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 762:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) - (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 763:.\Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) - (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 764:.\Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) - (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 765:.\Include/arm_math.h **** 
 766:.\Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 767:.\Include/arm_math.h ****   }
 768:.\Include/arm_math.h **** 
 769:.\Include/arm_math.h **** 
 770:.\Include/arm_math.h ****   /*
 771:.\Include/arm_math.h ****    * @brief C custom defined QADD16 for M3 and M0 processors
 772:.\Include/arm_math.h ****    */
 773:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD16(
 774:.\Include/arm_math.h ****   uint32_t x,
 775:.\Include/arm_math.h ****   uint32_t y)
 776:.\Include/arm_math.h ****   {
 777:.\Include/arm_math.h **** /*  q31_t r,     s;  without initialisation 'arm_offset_q15 test' fails  but 'intrinsic' tests pass
 778:.\Include/arm_math.h ****     q31_t r = 0, s = 0;
 779:.\Include/arm_math.h **** 
 780:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 781:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 782:.\Include/arm_math.h **** 
 783:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 784:.\Include/arm_math.h ****   }
 785:.\Include/arm_math.h **** 
 786:.\Include/arm_math.h **** 
 787:.\Include/arm_math.h ****   /*
 788:.\Include/arm_math.h ****    * @brief C custom defined SHADD16 for M3 and M0 processors
 789:.\Include/arm_math.h ****    */
 790:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHADD16(
 791:.\Include/arm_math.h ****   uint32_t x,
 792:.\Include/arm_math.h ****   uint32_t y)
 793:.\Include/arm_math.h ****   {
 794:.\Include/arm_math.h ****     q31_t r, s;
 795:.\Include/arm_math.h **** 
 796:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 797:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 798:.\Include/arm_math.h **** 
 799:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 800:.\Include/arm_math.h ****   }
 801:.\Include/arm_math.h **** 
 802:.\Include/arm_math.h **** 
 803:.\Include/arm_math.h ****   /*
 804:.\Include/arm_math.h ****    * @brief C custom defined QSUB16 for M3 and M0 processors
 805:.\Include/arm_math.h ****    */
 806:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB16(
 807:.\Include/arm_math.h ****   uint32_t x,
 808:.\Include/arm_math.h ****   uint32_t y)
 809:.\Include/arm_math.h ****   {
 810:.\Include/arm_math.h ****     q31_t r, s;
 811:.\Include/arm_math.h **** 
 812:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 813:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 26


 814:.\Include/arm_math.h **** 
 815:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 816:.\Include/arm_math.h ****   }
 817:.\Include/arm_math.h **** 
 818:.\Include/arm_math.h **** 
 819:.\Include/arm_math.h ****   /*
 820:.\Include/arm_math.h ****    * @brief C custom defined SHSUB16 for M3 and M0 processors
 821:.\Include/arm_math.h ****    */
 822:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSUB16(
 823:.\Include/arm_math.h ****   uint32_t x,
 824:.\Include/arm_math.h ****   uint32_t y)
 825:.\Include/arm_math.h ****   {
 826:.\Include/arm_math.h ****     q31_t r, s;
 827:.\Include/arm_math.h **** 
 828:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 829:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 830:.\Include/arm_math.h **** 
 831:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 832:.\Include/arm_math.h ****   }
 833:.\Include/arm_math.h **** 
 834:.\Include/arm_math.h **** 
 835:.\Include/arm_math.h ****   /*
 836:.\Include/arm_math.h ****    * @brief C custom defined QASX for M3 and M0 processors
 837:.\Include/arm_math.h ****    */
 838:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QASX(
 839:.\Include/arm_math.h ****   uint32_t x,
 840:.\Include/arm_math.h ****   uint32_t y)
 841:.\Include/arm_math.h ****   {
 842:.\Include/arm_math.h ****     q31_t r, s;
 843:.\Include/arm_math.h **** 
 844:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 845:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 846:.\Include/arm_math.h **** 
 847:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 848:.\Include/arm_math.h ****   }
 849:.\Include/arm_math.h **** 
 850:.\Include/arm_math.h **** 
 851:.\Include/arm_math.h ****   /*
 852:.\Include/arm_math.h ****    * @brief C custom defined SHASX for M3 and M0 processors
 853:.\Include/arm_math.h ****    */
 854:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHASX(
 855:.\Include/arm_math.h ****   uint32_t x,
 856:.\Include/arm_math.h ****   uint32_t y)
 857:.\Include/arm_math.h ****   {
 858:.\Include/arm_math.h ****     q31_t r, s;
 859:.\Include/arm_math.h **** 
 860:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 861:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 862:.\Include/arm_math.h **** 
 863:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 864:.\Include/arm_math.h ****   }
 865:.\Include/arm_math.h **** 
 866:.\Include/arm_math.h **** 
 867:.\Include/arm_math.h ****   /*
 868:.\Include/arm_math.h ****    * @brief C custom defined QSAX for M3 and M0 processors
 869:.\Include/arm_math.h ****    */
 870:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSAX(
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 27


 871:.\Include/arm_math.h ****   uint32_t x,
 872:.\Include/arm_math.h ****   uint32_t y)
 873:.\Include/arm_math.h ****   {
 874:.\Include/arm_math.h ****     q31_t r, s;
 875:.\Include/arm_math.h **** 
 876:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 877:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 878:.\Include/arm_math.h **** 
 879:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 880:.\Include/arm_math.h ****   }
 881:.\Include/arm_math.h **** 
 882:.\Include/arm_math.h **** 
 883:.\Include/arm_math.h ****   /*
 884:.\Include/arm_math.h ****    * @brief C custom defined SHSAX for M3 and M0 processors
 885:.\Include/arm_math.h ****    */
 886:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSAX(
 887:.\Include/arm_math.h ****   uint32_t x,
 888:.\Include/arm_math.h ****   uint32_t y)
 889:.\Include/arm_math.h ****   {
 890:.\Include/arm_math.h ****     q31_t r, s;
 891:.\Include/arm_math.h **** 
 892:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 893:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 894:.\Include/arm_math.h **** 
 895:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 896:.\Include/arm_math.h ****   }
 897:.\Include/arm_math.h **** 
 898:.\Include/arm_math.h **** 
 899:.\Include/arm_math.h ****   /*
 900:.\Include/arm_math.h ****    * @brief C custom defined SMUSDX for M3 and M0 processors
 901:.\Include/arm_math.h ****    */
 902:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUSDX(
 903:.\Include/arm_math.h ****   uint32_t x,
 904:.\Include/arm_math.h ****   uint32_t y)
 905:.\Include/arm_math.h ****   {
 906:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 907:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 908:.\Include/arm_math.h ****   }
 909:.\Include/arm_math.h **** 
 910:.\Include/arm_math.h ****   /*
 911:.\Include/arm_math.h ****    * @brief C custom defined SMUADX for M3 and M0 processors
 912:.\Include/arm_math.h ****    */
 913:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUADX(
 914:.\Include/arm_math.h ****   uint32_t x,
 915:.\Include/arm_math.h ****   uint32_t y)
 916:.\Include/arm_math.h ****   {
 917:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 918:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 919:.\Include/arm_math.h ****   }
 920:.\Include/arm_math.h **** 
 921:.\Include/arm_math.h **** 
 922:.\Include/arm_math.h ****   /*
 923:.\Include/arm_math.h ****    * @brief C custom defined QADD for M3 and M0 processors
 924:.\Include/arm_math.h ****    */
 925:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QADD(
 926:.\Include/arm_math.h ****   int32_t x,
 927:.\Include/arm_math.h ****   int32_t y)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 28


 928:.\Include/arm_math.h ****   {
 929:.\Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x + (q31_t)y)));
 930:.\Include/arm_math.h ****   }
 931:.\Include/arm_math.h **** 
 932:.\Include/arm_math.h **** 
 933:.\Include/arm_math.h ****   /*
 934:.\Include/arm_math.h ****    * @brief C custom defined QSUB for M3 and M0 processors
 935:.\Include/arm_math.h ****    */
 936:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QSUB(
 937:.\Include/arm_math.h ****   int32_t x,
 938:.\Include/arm_math.h ****   int32_t y)
 939:.\Include/arm_math.h ****   {
 940:.\Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x - (q31_t)y)));
 941:.\Include/arm_math.h ****   }
 942:.\Include/arm_math.h **** 
 943:.\Include/arm_math.h **** 
 944:.\Include/arm_math.h ****   /*
 945:.\Include/arm_math.h ****    * @brief C custom defined SMLAD for M3 and M0 processors
 946:.\Include/arm_math.h ****    */
 947:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLAD(
 948:.\Include/arm_math.h ****   uint32_t x,
 949:.\Include/arm_math.h ****   uint32_t y,
 950:.\Include/arm_math.h ****   uint32_t sum)
 951:.\Include/arm_math.h ****   {
 952:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 333              		.loc 2 952 0
 334 0206 D423     		mov	r3, #212
 335 0208 FB18     		add	r3, r7, r3
 336 020a 1B68     		ldr	r3, [r3]
 337 020c 1B04     		lsl	r3, r3, #16
 338 020e 1B14     		asr	r3, r3, #16
 339 0210 D022     		mov	r2, #208
 340 0212 BA18     		add	r2, r7, r2
 341 0214 1268     		ldr	r2, [r2]
 342 0216 1204     		lsl	r2, r2, #16
 343 0218 1214     		asr	r2, r2, #16
 344 021a 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 345              		.loc 2 953 0
 346 021c D423     		mov	r3, #212
 347 021e FB18     		add	r3, r7, r3
 348 0220 1B68     		ldr	r3, [r3]
 349 0222 1B14     		asr	r3, r3, #16
 350 0224 D021     		mov	r1, #208
 351 0226 7918     		add	r1, r7, r1
 352 0228 0968     		ldr	r1, [r1]
 353 022a 0914     		asr	r1, r1, #16
 354 022c 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 355              		.loc 2 952 0
 356 022e D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 357              		.loc 2 954 0
 358 0230 CC23     		mov	r3, #204
 359 0232 FB18     		add	r3, r7, r3
 360 0234 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 29


 361              		.loc 2 953 0
 362 0236 D318     		add	r3, r2, r3
 363              	.LBE29:
 364              	.LBE28:
 365              		.loc 1 280 0
 366 0238 8A22     		mov	r2, #138
 367 023a 5200     		lsl	r2, r2, #1
 368 023c BA18     		add	r2, r7, r2
 369 023e 1360     		str	r3, [r2]
 281:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 282:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc2 = __SMLAD(x2, y1, acc2);
 370              		.loc 1 282 0
 371 0240 7B1C     		add	r3, r7, #1
 372 0242 FF33     		add	r3, r3, #255
 373 0244 1968     		ldr	r1, [r3]
 374 0246 E023     		mov	r3, #224
 375 0248 FB18     		add	r3, r7, r3
 376 024a 1A68     		ldr	r2, [r3]
 377 024c 8623     		mov	r3, #134
 378 024e 5B00     		lsl	r3, r3, #1
 379 0250 FB18     		add	r3, r7, r3
 380 0252 1B68     		ldr	r3, [r3]
 381 0254 C820     		mov	r0, #200
 382 0256 3818     		add	r0, r7, r0
 383 0258 0160     		str	r1, [r0]
 384 025a C421     		mov	r1, #196
 385 025c 7918     		add	r1, r7, r1
 386 025e 0A60     		str	r2, [r1]
 387 0260 C022     		mov	r2, #192
 388 0262 BA18     		add	r2, r7, r2
 389 0264 1360     		str	r3, [r2]
 390              	.LBB30:
 391              	.LBB31:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 392              		.loc 2 952 0
 393 0266 C823     		mov	r3, #200
 394 0268 FB18     		add	r3, r7, r3
 395 026a 1B68     		ldr	r3, [r3]
 396 026c 1B04     		lsl	r3, r3, #16
 397 026e 1B14     		asr	r3, r3, #16
 398 0270 C422     		mov	r2, #196
 399 0272 BA18     		add	r2, r7, r2
 400 0274 1268     		ldr	r2, [r2]
 401 0276 1204     		lsl	r2, r2, #16
 402 0278 1214     		asr	r2, r2, #16
 403 027a 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 404              		.loc 2 953 0
 405 027c C823     		mov	r3, #200
 406 027e FB18     		add	r3, r7, r3
 407 0280 1B68     		ldr	r3, [r3]
 408 0282 1B14     		asr	r3, r3, #16
 409 0284 C421     		mov	r1, #196
 410 0286 7918     		add	r1, r7, r1
 411 0288 0968     		ldr	r1, [r1]
 412 028a 0914     		asr	r1, r1, #16
 413 028c 4B43     		mul	r3, r1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 30


 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 414              		.loc 2 952 0
 415 028e D218     		add	r2, r2, r3
 416              		.loc 2 954 0
 417 0290 C023     		mov	r3, #192
 418 0292 FB18     		add	r3, r7, r3
 419 0294 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 420              		.loc 2 953 0
 421 0296 D318     		add	r3, r2, r3
 422              	.LBE31:
 423              	.LBE30:
 424              		.loc 1 282 0
 425 0298 8622     		mov	r2, #134
 426 029a 5200     		lsl	r2, r2, #1
 427 029c BA18     		add	r2, r7, r2
 428 029e 1360     		str	r3, [r2]
 283:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 284:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 285:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 429              		.loc 1 285 0
 430 02a0 7B1C     		add	r3, r7, #1
 431 02a2 FF33     		add	r3, r3, #255
 432 02a4 1B68     		ldr	r3, [r3]
 433 02a6 1B04     		lsl	r3, r3, #16
 434 02a8 1A0C     		lsr	r2, r3, #16
 435 02aa 7B1D     		add	r3, r7, #5
 436 02ac FF33     		add	r3, r3, #255
 437 02ae 1B68     		ldr	r3, [r3]
 438 02b0 1B0C     		lsr	r3, r3, #16
 439 02b2 1B04     		lsl	r3, r3, #16
 440 02b4 1343     		orr	r3, r2
 441 02b6 D822     		mov	r2, #216
 442 02b8 BA18     		add	r2, r7, r2
 443 02ba 1360     		str	r3, [r2]
 286:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #else
 287:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 288:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #endif
 289:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 290:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc1 = __SMLADX(x3, y1, acc1);
 444              		.loc 1 290 0
 445 02bc D823     		mov	r3, #216
 446 02be FB18     		add	r3, r7, r3
 447 02c0 1968     		ldr	r1, [r3]
 448 02c2 E023     		mov	r3, #224
 449 02c4 FB18     		add	r3, r7, r3
 450 02c6 1A68     		ldr	r2, [r3]
 451 02c8 8823     		mov	r3, #136
 452 02ca 5B00     		lsl	r3, r3, #1
 453 02cc FB18     		add	r3, r7, r3
 454 02ce 1B68     		ldr	r3, [r3]
 455 02d0 BC20     		mov	r0, #188
 456 02d2 3818     		add	r0, r7, r0
 457 02d4 0160     		str	r1, [r0]
 458 02d6 B821     		mov	r1, #184
 459 02d8 7918     		add	r1, r7, r1
 460 02da 0A60     		str	r2, [r1]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 31


 461 02dc B422     		mov	r2, #180
 462 02de BA18     		add	r2, r7, r2
 463 02e0 1360     		str	r3, [r2]
 464              	.LBB32:
 465              	.LBB33:
 955:.\Include/arm_math.h ****   }
 956:.\Include/arm_math.h **** 
 957:.\Include/arm_math.h **** 
 958:.\Include/arm_math.h ****   /*
 959:.\Include/arm_math.h ****    * @brief C custom defined SMLADX for M3 and M0 processors
 960:.\Include/arm_math.h ****    */
 961:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLADX(
 962:.\Include/arm_math.h ****   uint32_t x,
 963:.\Include/arm_math.h ****   uint32_t y,
 964:.\Include/arm_math.h ****   uint32_t sum)
 965:.\Include/arm_math.h ****   {
 966:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 466              		.loc 2 966 0
 467 02e2 BC23     		mov	r3, #188
 468 02e4 FB18     		add	r3, r7, r3
 469 02e6 1B68     		ldr	r3, [r3]
 470 02e8 1B04     		lsl	r3, r3, #16
 471 02ea 1B14     		asr	r3, r3, #16
 472 02ec B822     		mov	r2, #184
 473 02ee BA18     		add	r2, r7, r2
 474 02f0 1268     		ldr	r2, [r2]
 475 02f2 1214     		asr	r2, r2, #16
 476 02f4 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 477              		.loc 2 967 0
 478 02f6 BC23     		mov	r3, #188
 479 02f8 FB18     		add	r3, r7, r3
 480 02fa 1B68     		ldr	r3, [r3]
 481 02fc 1B14     		asr	r3, r3, #16
 482 02fe B821     		mov	r1, #184
 483 0300 7918     		add	r1, r7, r1
 484 0302 0968     		ldr	r1, [r1]
 485 0304 0904     		lsl	r1, r1, #16
 486 0306 0914     		asr	r1, r1, #16
 487 0308 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 488              		.loc 2 966 0
 489 030a D218     		add	r2, r2, r3
 968:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 490              		.loc 2 968 0
 491 030c B423     		mov	r3, #180
 492 030e FB18     		add	r3, r7, r3
 493 0310 1B68     		ldr	r3, [r3]
 967:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 494              		.loc 2 967 0
 495 0312 D318     		add	r3, r2, r3
 496              	.LBE33:
 497              	.LBE32:
 498              		.loc 1 290 0
 499 0314 8822     		mov	r2, #136
 500 0316 5200     		lsl	r2, r2, #1
 501 0318 BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 32


 502 031a 1360     		str	r3, [r2]
 291:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 292:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       x1 = _SIMD32_OFFSET(pScr);
 503              		.loc 1 292 0
 504 031c 3B69     		ldr	r3, [r7, #16]
 505 031e 1B68     		ldr	r3, [r3]
 506 0320 7A1D     		add	r2, r7, #5
 507 0322 FF32     		add	r2, r2, #255
 508 0324 1360     		str	r3, [r2]
 293:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 294:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc0 = __SMLAD(x2, y2, acc0);
 509              		.loc 1 294 0
 510 0326 7B1C     		add	r3, r7, #1
 511 0328 FF33     		add	r3, r3, #255
 512 032a 1968     		ldr	r1, [r3]
 513 032c DC23     		mov	r3, #220
 514 032e FB18     		add	r3, r7, r3
 515 0330 1A68     		ldr	r2, [r3]
 516 0332 8A23     		mov	r3, #138
 517 0334 5B00     		lsl	r3, r3, #1
 518 0336 FB18     		add	r3, r7, r3
 519 0338 1B68     		ldr	r3, [r3]
 520 033a B020     		mov	r0, #176
 521 033c 3818     		add	r0, r7, r0
 522 033e 0160     		str	r1, [r0]
 523 0340 AC21     		mov	r1, #172
 524 0342 7918     		add	r1, r7, r1
 525 0344 0A60     		str	r2, [r1]
 526 0346 A822     		mov	r2, #168
 527 0348 BA18     		add	r2, r7, r2
 528 034a 1360     		str	r3, [r2]
 529              	.LBB34:
 530              	.LBB35:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 531              		.loc 2 952 0
 532 034c B023     		mov	r3, #176
 533 034e FB18     		add	r3, r7, r3
 534 0350 1B68     		ldr	r3, [r3]
 535 0352 1B04     		lsl	r3, r3, #16
 536 0354 1B14     		asr	r3, r3, #16
 537 0356 AC22     		mov	r2, #172
 538 0358 BA18     		add	r2, r7, r2
 539 035a 1268     		ldr	r2, [r2]
 540 035c 1204     		lsl	r2, r2, #16
 541 035e 1214     		asr	r2, r2, #16
 542 0360 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 543              		.loc 2 953 0
 544 0362 B023     		mov	r3, #176
 545 0364 FB18     		add	r3, r7, r3
 546 0366 1B68     		ldr	r3, [r3]
 547 0368 1B14     		asr	r3, r3, #16
 548 036a AC21     		mov	r1, #172
 549 036c 7918     		add	r1, r7, r1
 550 036e 0968     		ldr	r1, [r1]
 551 0370 0914     		asr	r1, r1, #16
 552 0372 4B43     		mul	r3, r1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 33


 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 553              		.loc 2 952 0
 554 0374 D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 555              		.loc 2 954 0
 556 0376 A823     		mov	r3, #168
 557 0378 FB18     		add	r3, r7, r3
 558 037a 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 559              		.loc 2 953 0
 560 037c D318     		add	r3, r2, r3
 561              	.LBE35:
 562              	.LBE34:
 563              		.loc 1 294 0
 564 037e 8A22     		mov	r2, #138
 565 0380 5200     		lsl	r2, r2, #1
 566 0382 BA18     		add	r2, r7, r2
 567 0384 1360     		str	r3, [r2]
 295:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 296:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc2 = __SMLAD(x1, y2, acc2);
 568              		.loc 1 296 0
 569 0386 7B1D     		add	r3, r7, #5
 570 0388 FF33     		add	r3, r3, #255
 571 038a 1968     		ldr	r1, [r3]
 572 038c DC23     		mov	r3, #220
 573 038e FB18     		add	r3, r7, r3
 574 0390 1A68     		ldr	r2, [r3]
 575 0392 8623     		mov	r3, #134
 576 0394 5B00     		lsl	r3, r3, #1
 577 0396 FB18     		add	r3, r7, r3
 578 0398 1B68     		ldr	r3, [r3]
 579 039a A420     		mov	r0, #164
 580 039c 3818     		add	r0, r7, r0
 581 039e 0160     		str	r1, [r0]
 582 03a0 A021     		mov	r1, #160
 583 03a2 7918     		add	r1, r7, r1
 584 03a4 0A60     		str	r2, [r1]
 585 03a6 9C22     		mov	r2, #156
 586 03a8 BA18     		add	r2, r7, r2
 587 03aa 1360     		str	r3, [r2]
 588              	.LBB36:
 589              	.LBB37:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 590              		.loc 2 952 0
 591 03ac A423     		mov	r3, #164
 592 03ae FB18     		add	r3, r7, r3
 593 03b0 1B68     		ldr	r3, [r3]
 594 03b2 1B04     		lsl	r3, r3, #16
 595 03b4 1B14     		asr	r3, r3, #16
 596 03b6 A022     		mov	r2, #160
 597 03b8 BA18     		add	r2, r7, r2
 598 03ba 1268     		ldr	r2, [r2]
 599 03bc 1204     		lsl	r2, r2, #16
 600 03be 1214     		asr	r2, r2, #16
 601 03c0 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 602              		.loc 2 953 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 34


 603 03c2 A423     		mov	r3, #164
 604 03c4 FB18     		add	r3, r7, r3
 605 03c6 1B68     		ldr	r3, [r3]
 606 03c8 1B14     		asr	r3, r3, #16
 607 03ca A021     		mov	r1, #160
 608 03cc 7918     		add	r1, r7, r1
 609 03ce 0968     		ldr	r1, [r1]
 610 03d0 0914     		asr	r1, r1, #16
 611 03d2 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 612              		.loc 2 952 0
 613 03d4 D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 614              		.loc 2 954 0
 615 03d6 9C23     		mov	r3, #156
 616 03d8 FB18     		add	r3, r7, r3
 617 03da 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 618              		.loc 2 953 0
 619 03dc D318     		add	r3, r2, r3
 620              	.LBE37:
 621              	.LBE36:
 622              		.loc 1 296 0
 623 03de 8622     		mov	r2, #134
 624 03e0 5200     		lsl	r2, r2, #1
 625 03e2 BA18     		add	r2, r7, r2
 626 03e4 1360     		str	r3, [r2]
 297:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 298:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 299:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 627              		.loc 1 299 0
 628 03e6 7B1D     		add	r3, r7, #5
 629 03e8 FF33     		add	r3, r3, #255
 630 03ea 1B68     		ldr	r3, [r3]
 631 03ec 1B04     		lsl	r3, r3, #16
 632 03ee 1A0C     		lsr	r2, r3, #16
 633 03f0 7B1C     		add	r3, r7, #1
 634 03f2 FF33     		add	r3, r3, #255
 635 03f4 1B68     		ldr	r3, [r3]
 636 03f6 1B0C     		lsr	r3, r3, #16
 637 03f8 1B04     		lsl	r3, r3, #16
 638 03fa 1343     		orr	r3, r2
 639 03fc D822     		mov	r2, #216
 640 03fe BA18     		add	r2, r7, r2
 641 0400 1360     		str	r3, [r2]
 300:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #else
 301:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 302:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #endif
 303:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 304:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc3 = __SMLADX(x3, y1, acc3);
 642              		.loc 1 304 0
 643 0402 D823     		mov	r3, #216
 644 0404 FB18     		add	r3, r7, r3
 645 0406 1968     		ldr	r1, [r3]
 646 0408 E023     		mov	r3, #224
 647 040a FB18     		add	r3, r7, r3
 648 040c 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 35


 649 040e 8423     		mov	r3, #132
 650 0410 5B00     		lsl	r3, r3, #1
 651 0412 FB18     		add	r3, r7, r3
 652 0414 1B68     		ldr	r3, [r3]
 653 0416 9820     		mov	r0, #152
 654 0418 3818     		add	r0, r7, r0
 655 041a 0160     		str	r1, [r0]
 656 041c 9421     		mov	r1, #148
 657 041e 7918     		add	r1, r7, r1
 658 0420 0A60     		str	r2, [r1]
 659 0422 9022     		mov	r2, #144
 660 0424 BA18     		add	r2, r7, r2
 661 0426 1360     		str	r3, [r2]
 662              	.LBB38:
 663              	.LBB39:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 664              		.loc 2 966 0
 665 0428 9823     		mov	r3, #152
 666 042a FB18     		add	r3, r7, r3
 667 042c 1B68     		ldr	r3, [r3]
 668 042e 1B04     		lsl	r3, r3, #16
 669 0430 1B14     		asr	r3, r3, #16
 670 0432 9422     		mov	r2, #148
 671 0434 BA18     		add	r2, r7, r2
 672 0436 1268     		ldr	r2, [r2]
 673 0438 1214     		asr	r2, r2, #16
 674 043a 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 675              		.loc 2 967 0
 676 043c 9823     		mov	r3, #152
 677 043e FB18     		add	r3, r7, r3
 678 0440 1B68     		ldr	r3, [r3]
 679 0442 1B14     		asr	r3, r3, #16
 680 0444 9421     		mov	r1, #148
 681 0446 7918     		add	r1, r7, r1
 682 0448 0968     		ldr	r1, [r1]
 683 044a 0904     		lsl	r1, r1, #16
 684 044c 0914     		asr	r1, r1, #16
 685 044e 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 686              		.loc 2 966 0
 687 0450 D218     		add	r2, r2, r3
 688              		.loc 2 968 0
 689 0452 9023     		mov	r3, #144
 690 0454 FB18     		add	r3, r7, r3
 691 0456 1B68     		ldr	r3, [r3]
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 692              		.loc 2 967 0
 693 0458 D318     		add	r3, r2, r3
 694              	.LBE39:
 695              	.LBE38:
 696              		.loc 1 304 0
 697 045a 8422     		mov	r2, #132
 698 045c 5200     		lsl	r2, r2, #1
 699 045e BA18     		add	r2, r7, r2
 700 0460 1360     		str	r3, [r2]
 305:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 36


 306:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc1 = __SMLADX(x3, y2, acc1);
 701              		.loc 1 306 0
 702 0462 D823     		mov	r3, #216
 703 0464 FB18     		add	r3, r7, r3
 704 0466 1968     		ldr	r1, [r3]
 705 0468 DC23     		mov	r3, #220
 706 046a FB18     		add	r3, r7, r3
 707 046c 1A68     		ldr	r2, [r3]
 708 046e 8823     		mov	r3, #136
 709 0470 5B00     		lsl	r3, r3, #1
 710 0472 FB18     		add	r3, r7, r3
 711 0474 1B68     		ldr	r3, [r3]
 712 0476 8C20     		mov	r0, #140
 713 0478 3818     		add	r0, r7, r0
 714 047a 0160     		str	r1, [r0]
 715 047c 8821     		mov	r1, #136
 716 047e 7918     		add	r1, r7, r1
 717 0480 0A60     		str	r2, [r1]
 718 0482 8422     		mov	r2, #132
 719 0484 BA18     		add	r2, r7, r2
 720 0486 1360     		str	r3, [r2]
 721              	.LBB40:
 722              	.LBB41:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 723              		.loc 2 966 0
 724 0488 8C23     		mov	r3, #140
 725 048a FB18     		add	r3, r7, r3
 726 048c 1B68     		ldr	r3, [r3]
 727 048e 1B04     		lsl	r3, r3, #16
 728 0490 1B14     		asr	r3, r3, #16
 729 0492 8822     		mov	r2, #136
 730 0494 BA18     		add	r2, r7, r2
 731 0496 1268     		ldr	r2, [r2]
 732 0498 1214     		asr	r2, r2, #16
 733 049a 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 734              		.loc 2 967 0
 735 049c 8C23     		mov	r3, #140
 736 049e FB18     		add	r3, r7, r3
 737 04a0 1B68     		ldr	r3, [r3]
 738 04a2 1B14     		asr	r3, r3, #16
 739 04a4 8821     		mov	r1, #136
 740 04a6 7918     		add	r1, r7, r1
 741 04a8 0968     		ldr	r1, [r1]
 742 04aa 0904     		lsl	r1, r1, #16
 743 04ac 0914     		asr	r1, r1, #16
 744 04ae 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 745              		.loc 2 966 0
 746 04b0 D218     		add	r2, r2, r3
 747              		.loc 2 968 0
 748 04b2 8423     		mov	r3, #132
 749 04b4 FB18     		add	r3, r7, r3
 750 04b6 1B68     		ldr	r3, [r3]
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 751              		.loc 2 967 0
 752 04b8 D318     		add	r3, r2, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 37


 753              	.LBE41:
 754              	.LBE40:
 755              		.loc 1 306 0
 756 04ba 8822     		mov	r2, #136
 757 04bc 5200     		lsl	r2, r2, #1
 758 04be BA18     		add	r2, r7, r2
 759 04c0 1360     		str	r3, [r2]
 307:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 308:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       x2 = _SIMD32_OFFSET(pScr + 2u);
 760              		.loc 1 308 0
 761 04c2 3B69     		ldr	r3, [r7, #16]
 762 04c4 5B68     		ldr	r3, [r3, #4]
 763 04c6 7A1C     		add	r2, r7, #1
 764 04c8 FF32     		add	r2, r2, #255
 765 04ca 1360     		str	r3, [r2]
 309:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 310:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 311:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 766              		.loc 1 311 0
 767 04cc 7B1C     		add	r3, r7, #1
 768 04ce FF33     		add	r3, r3, #255
 769 04d0 1B68     		ldr	r3, [r3]
 770 04d2 1B04     		lsl	r3, r3, #16
 771 04d4 1A0C     		lsr	r2, r3, #16
 772 04d6 7B1D     		add	r3, r7, #5
 773 04d8 FF33     		add	r3, r3, #255
 774 04da 1B68     		ldr	r3, [r3]
 775 04dc 1B0C     		lsr	r3, r3, #16
 776 04de 1B04     		lsl	r3, r3, #16
 777 04e0 1343     		orr	r3, r2
 778 04e2 D822     		mov	r2, #216
 779 04e4 BA18     		add	r2, r7, r2
 780 04e6 1360     		str	r3, [r2]
 312:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #else
 313:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 314:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #endif
 315:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 316:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc3 = __SMLADX(x3, y2, acc3);
 781              		.loc 1 316 0
 782 04e8 D823     		mov	r3, #216
 783 04ea FB18     		add	r3, r7, r3
 784 04ec 1968     		ldr	r1, [r3]
 785 04ee DC23     		mov	r3, #220
 786 04f0 FB18     		add	r3, r7, r3
 787 04f2 1A68     		ldr	r2, [r3]
 788 04f4 8423     		mov	r3, #132
 789 04f6 5B00     		lsl	r3, r3, #1
 790 04f8 FB18     		add	r3, r7, r3
 791 04fa 1B68     		ldr	r3, [r3]
 792 04fc 8020     		mov	r0, #128
 793 04fe 3818     		add	r0, r7, r0
 794 0500 0160     		str	r1, [r0]
 795 0502 FA67     		str	r2, [r7, #124]
 796 0504 BB67     		str	r3, [r7, #120]
 797              	.LBB42:
 798              	.LBB43:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 38


 799              		.loc 2 966 0
 800 0506 8023     		mov	r3, #128
 801 0508 FB18     		add	r3, r7, r3
 802 050a 1B68     		ldr	r3, [r3]
 803 050c 1B04     		lsl	r3, r3, #16
 804 050e 1B14     		asr	r3, r3, #16
 805 0510 FA6F     		ldr	r2, [r7, #124]
 806 0512 1214     		asr	r2, r2, #16
 807 0514 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 808              		.loc 2 967 0
 809 0516 8023     		mov	r3, #128
 810 0518 FB18     		add	r3, r7, r3
 811 051a 1B68     		ldr	r3, [r3]
 812 051c 1B14     		asr	r3, r3, #16
 813 051e F96F     		ldr	r1, [r7, #124]
 814 0520 0904     		lsl	r1, r1, #16
 815 0522 0914     		asr	r1, r1, #16
 816 0524 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 817              		.loc 2 966 0
 818 0526 D218     		add	r2, r2, r3
 819              		.loc 2 968 0
 820 0528 BB6F     		ldr	r3, [r7, #120]
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 821              		.loc 2 967 0
 822 052a D318     		add	r3, r2, r3
 823              	.LBE43:
 824              	.LBE42:
 825              		.loc 1 316 0
 826 052c 8422     		mov	r2, #132
 827 052e 5200     		lsl	r2, r2, #1
 828 0530 BA18     		add	r2, r7, r2
 829 0532 1360     		str	r3, [r2]
 317:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #else
 318:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 319:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       /* Read four samples from smaller buffer */
 320:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       a = *pIn2;
 321:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       b = *(pIn2 + 1);
 322:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 323:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 324:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       y1 = __PKHBT(a, b, 16);
 325:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #else
 326:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       y1 = __PKHBT(b, a, 16);
 327:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #endif
 328:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 329:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       a = *(pIn2 + 2);
 330:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       b = *(pIn2 + 3);
 331:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 332:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       y2 = __PKHBT(a, b, 16);
 333:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #else
 334:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       y2 = __PKHBT(b, a, 16);
 335:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #endif
 336:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 337:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc0 = __SMLAD(x1, y1, acc0);
 338:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 339:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc2 = __SMLAD(x2, y1, acc2);
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 39


 340:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 341:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 342:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 343:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #else
 344:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 345:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #endif
 346:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 347:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc1 = __SMLADX(x3, y1, acc1);
 348:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 349:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       a = *pScr;
 350:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       b = *(pScr + 1);
 351:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 352:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 353:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       x1 = __PKHBT(a, b, 16);
 354:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #else
 355:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       x1 = __PKHBT(b, a, 16);
 356:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #endif
 357:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 358:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc0 = __SMLAD(x2, y2, acc0);
 359:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 360:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc2 = __SMLAD(x1, y2, acc2);
 361:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 362:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 363:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 364:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #else
 365:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 366:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #endif
 367:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 368:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc3 = __SMLADX(x3, y1, acc3);
 369:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 370:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc1 = __SMLADX(x3, y2, acc1);
 371:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 372:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       a = *(pScr + 2);
 373:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       b = *(pScr + 3);
 374:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 375:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 376:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       x2 = __PKHBT(a, b, 16);
 377:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #else
 378:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       x2 = __PKHBT(b, a, 16);
 379:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #endif
 380:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 381:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 382:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 383:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #else
 384:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 385:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #endif
 386:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 387:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc3 = __SMLADX(x3, y2, acc3);
 388:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 389:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** #endif /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 390:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 391:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       pIn2 += 4u;
 830              		.loc 1 391 0
 831 0534 8C23     		mov	r3, #140
 832 0536 5B00     		lsl	r3, r3, #1
 833 0538 FB18     		add	r3, r7, r3
 834 053a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 40


 835 053c 0833     		add	r3, r3, #8
 836 053e 8C22     		mov	r2, #140
 837 0540 5200     		lsl	r2, r2, #1
 838 0542 BA18     		add	r2, r7, r2
 839 0544 1360     		str	r3, [r2]
 392:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 393:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       pScr += 4u;
 840              		.loc 1 393 0
 841 0546 3B69     		ldr	r3, [r7, #16]
 842 0548 0833     		add	r3, r3, #8
 843 054a 3B61     		str	r3, [r7, #16]
 394:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 395:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 396:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       /* Decrement the loop counter */
 397:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       tapCnt--;
 844              		.loc 1 397 0
 845 054c F423     		mov	r3, #244
 846 054e FB18     		add	r3, r7, r3
 847 0550 1B68     		ldr	r3, [r3]
 848 0552 013B     		sub	r3, r3, #1
 849 0554 F422     		mov	r2, #244
 850 0556 BA18     		add	r2, r7, r2
 851 0558 1360     		str	r3, [r2]
 852              	.L5:
 271:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     {
 853              		.loc 1 271 0
 854 055a F423     		mov	r3, #244
 855 055c FB18     		add	r3, r7, r3
 856 055e 1B68     		ldr	r3, [r3]
 857 0560 002B     		cmp	r3, #0
 858 0562 00D0     		beq	.LCB742
 859 0564 2CE6     		b	.L14	@long jump
 860              	.LCB742:
 398:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     }
 399:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 400:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 401:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 402:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Update scratch pointer for remaining samples of smaller length sequence */
 403:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     pScr -= 4u;
 861              		.loc 1 403 0
 862 0566 3B69     		ldr	r3, [r7, #16]
 863 0568 083B     		sub	r3, r3, #8
 864 056a 3B61     		str	r3, [r7, #16]
 404:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 405:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 406:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* apply same above for remaining samples of smaller length sequence */
 407:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     tapCnt = (srcBLen) & 3u;
 865              		.loc 1 407 0
 866 056c 3B68     		ldr	r3, [r7]
 867 056e 0322     		mov	r2, #3
 868 0570 1340     		and	r3, r2
 869 0572 F422     		mov	r2, #244
 870 0574 BA18     		add	r2, r7, r2
 871 0576 1360     		str	r3, [r2]
 408:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 409:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     while (tapCnt > 0u)
 872              		.loc 1 409 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 41


 873 0578 62E0     		b	.L15
 874              	.L16:
 410:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     {
 411:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 412:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       /* accumlate the results */
 413:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc0 += (*pScr++ * *pIn2);
 875              		.loc 1 413 0
 876 057a 3B69     		ldr	r3, [r7, #16]
 877 057c 9A1C     		add	r2, r3, #2
 878 057e 3A61     		str	r2, [r7, #16]
 879 0580 1B88     		ldrh	r3, [r3]
 880 0582 1BB2     		sxth	r3, r3
 881 0584 8C22     		mov	r2, #140
 882 0586 5200     		lsl	r2, r2, #1
 883 0588 BA18     		add	r2, r7, r2
 884 058a 1268     		ldr	r2, [r2]
 885 058c 1288     		ldrh	r2, [r2]
 886 058e 12B2     		sxth	r2, r2
 887 0590 5343     		mul	r3, r2
 888 0592 8A22     		mov	r2, #138
 889 0594 5200     		lsl	r2, r2, #1
 890 0596 BA18     		add	r2, r7, r2
 891 0598 1268     		ldr	r2, [r2]
 892 059a D318     		add	r3, r2, r3
 893 059c 8A22     		mov	r2, #138
 894 059e 5200     		lsl	r2, r2, #1
 895 05a0 BA18     		add	r2, r7, r2
 896 05a2 1360     		str	r3, [r2]
 414:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc1 += (*pScr++ * *pIn2);
 897              		.loc 1 414 0
 898 05a4 3B69     		ldr	r3, [r7, #16]
 899 05a6 9A1C     		add	r2, r3, #2
 900 05a8 3A61     		str	r2, [r7, #16]
 901 05aa 1B88     		ldrh	r3, [r3]
 902 05ac 1BB2     		sxth	r3, r3
 903 05ae 8C22     		mov	r2, #140
 904 05b0 5200     		lsl	r2, r2, #1
 905 05b2 BA18     		add	r2, r7, r2
 906 05b4 1268     		ldr	r2, [r2]
 907 05b6 1288     		ldrh	r2, [r2]
 908 05b8 12B2     		sxth	r2, r2
 909 05ba 5343     		mul	r3, r2
 910 05bc 8822     		mov	r2, #136
 911 05be 5200     		lsl	r2, r2, #1
 912 05c0 BA18     		add	r2, r7, r2
 913 05c2 1268     		ldr	r2, [r2]
 914 05c4 D318     		add	r3, r2, r3
 915 05c6 8822     		mov	r2, #136
 916 05c8 5200     		lsl	r2, r2, #1
 917 05ca BA18     		add	r2, r7, r2
 918 05cc 1360     		str	r3, [r2]
 415:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc2 += (*pScr++ * *pIn2);
 919              		.loc 1 415 0
 920 05ce 3B69     		ldr	r3, [r7, #16]
 921 05d0 9A1C     		add	r2, r3, #2
 922 05d2 3A61     		str	r2, [r7, #16]
 923 05d4 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 42


 924 05d6 1BB2     		sxth	r3, r3
 925 05d8 8C22     		mov	r2, #140
 926 05da 5200     		lsl	r2, r2, #1
 927 05dc BA18     		add	r2, r7, r2
 928 05de 1268     		ldr	r2, [r2]
 929 05e0 1288     		ldrh	r2, [r2]
 930 05e2 12B2     		sxth	r2, r2
 931 05e4 5343     		mul	r3, r2
 932 05e6 8622     		mov	r2, #134
 933 05e8 5200     		lsl	r2, r2, #1
 934 05ea BA18     		add	r2, r7, r2
 935 05ec 1268     		ldr	r2, [r2]
 936 05ee D318     		add	r3, r2, r3
 937 05f0 8622     		mov	r2, #134
 938 05f2 5200     		lsl	r2, r2, #1
 939 05f4 BA18     		add	r2, r7, r2
 940 05f6 1360     		str	r3, [r2]
 416:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc3 += (*pScr++ * *pIn2++);
 941              		.loc 1 416 0
 942 05f8 3B69     		ldr	r3, [r7, #16]
 943 05fa 9A1C     		add	r2, r3, #2
 944 05fc 3A61     		str	r2, [r7, #16]
 945 05fe 1B88     		ldrh	r3, [r3]
 946 0600 1AB2     		sxth	r2, r3
 947 0602 8C23     		mov	r3, #140
 948 0604 5B00     		lsl	r3, r3, #1
 949 0606 FB18     		add	r3, r7, r3
 950 0608 1B68     		ldr	r3, [r3]
 951 060a 991C     		add	r1, r3, #2
 952 060c 8C20     		mov	r0, #140
 953 060e 4000     		lsl	r0, r0, #1
 954 0610 3818     		add	r0, r7, r0
 955 0612 0160     		str	r1, [r0]
 956 0614 1B88     		ldrh	r3, [r3]
 957 0616 1BB2     		sxth	r3, r3
 958 0618 5343     		mul	r3, r2
 959 061a 8422     		mov	r2, #132
 960 061c 5200     		lsl	r2, r2, #1
 961 061e BA18     		add	r2, r7, r2
 962 0620 1268     		ldr	r2, [r2]
 963 0622 D318     		add	r3, r2, r3
 964 0624 8422     		mov	r2, #132
 965 0626 5200     		lsl	r2, r2, #1
 966 0628 BA18     		add	r2, r7, r2
 967 062a 1360     		str	r3, [r2]
 417:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 418:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       pScr -= 3u;
 968              		.loc 1 418 0
 969 062c 3B69     		ldr	r3, [r7, #16]
 970 062e 063B     		sub	r3, r3, #6
 971 0630 3B61     		str	r3, [r7, #16]
 419:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 420:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       /* Decrement the loop counter */
 421:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       tapCnt--;
 972              		.loc 1 421 0
 973 0632 F423     		mov	r3, #244
 974 0634 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 43


 975 0636 1B68     		ldr	r3, [r3]
 976 0638 013B     		sub	r3, r3, #1
 977 063a F422     		mov	r2, #244
 978 063c BA18     		add	r2, r7, r2
 979 063e 1360     		str	r3, [r2]
 980              	.L15:
 409:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     {
 981              		.loc 1 409 0
 982 0640 F423     		mov	r3, #244
 983 0642 FB18     		add	r3, r7, r3
 984 0644 1B68     		ldr	r3, [r3]
 985 0646 002B     		cmp	r3, #0
 986 0648 97D1     		bne	.L16
 422:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     }
 423:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 424:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     blkCnt--;
 987              		.loc 1 424 0
 988 064a FC23     		mov	r3, #252
 989 064c FB18     		add	r3, r7, r3
 990 064e 1B68     		ldr	r3, [r3]
 991 0650 013B     		sub	r3, r3, #1
 992 0652 FC22     		mov	r2, #252
 993 0654 BA18     		add	r2, r7, r2
 994 0656 1360     		str	r3, [r2]
 425:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 426:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 427:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Store the results in the accumulators in the destination buffer. */
 428:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     *pOut = (__SSAT(acc0 >> 15u, 16));
 995              		.loc 1 428 0
 996 0658 8A23     		mov	r3, #138
 997 065a 5B00     		lsl	r3, r3, #1
 998 065c FB18     		add	r3, r7, r3
 999 065e 1B68     		ldr	r3, [r3]
 1000 0660 DB13     		asr	r3, r3, #15
 1001 0662 7B67     		str	r3, [r7, #116]
 1002 0664 1023     		mov	r3, #16
 1003 0666 3B67     		str	r3, [r7, #112]
 1004              	.LBB44:
 1005              	.LBB45:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1006              		.loc 2 699 0
 1007 0668 0123     		mov	r3, #1
 1008 066a FB66     		str	r3, [r7, #108]
 700:.\Include/arm_math.h ****     {
 1009              		.loc 2 700 0
 1010 066c 0023     		mov	r3, #0
 1011 066e BB66     		str	r3, [r7, #104]
 1012 0670 05E0     		b	.L17
 1013              	.L18:
 702:.\Include/arm_math.h ****     }
 1014              		.loc 2 702 0
 1015 0672 FB6E     		ldr	r3, [r7, #108]
 1016 0674 5B00     		lsl	r3, r3, #1
 1017 0676 FB66     		str	r3, [r7, #108]
 700:.\Include/arm_math.h ****     {
 1018              		.loc 2 700 0
 1019 0678 BB6E     		ldr	r3, [r7, #104]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 44


 1020 067a 0133     		add	r3, r3, #1
 1021 067c BB66     		str	r3, [r7, #104]
 1022              	.L17:
 1023 067e 3B6F     		ldr	r3, [r7, #112]
 1024 0680 013B     		sub	r3, r3, #1
 1025 0682 BA6E     		ldr	r2, [r7, #104]
 1026 0684 9A42     		cmp	r2, r3
 1027 0686 F4D3     		bcc	.L18
 705:.\Include/arm_math.h ****     {
 1028              		.loc 2 705 0
 1029 0688 7B6F     		ldr	r3, [r7, #116]
 1030 068a 002B     		cmp	r3, #0
 1031 068c 09DD     		ble	.L19
 707:.\Include/arm_math.h **** 
 1032              		.loc 2 707 0
 1033 068e FB6E     		ldr	r3, [r7, #108]
 1034 0690 013B     		sub	r3, r3, #1
 1035 0692 FB66     		str	r3, [r7, #108]
 709:.\Include/arm_math.h ****       {
 1036              		.loc 2 709 0
 1037 0694 7A6F     		ldr	r2, [r7, #116]
 1038 0696 FB6E     		ldr	r3, [r7, #108]
 1039 0698 9A42     		cmp	r2, r3
 1040 069a 0CDD     		ble	.L54
 711:.\Include/arm_math.h ****       }
 1041              		.loc 2 711 0
 1042 069c FB6E     		ldr	r3, [r7, #108]
 1043 069e 7B67     		str	r3, [r7, #116]
 1044 06a0 0AE0     		b	.L21
 1045              	.L19:
 716:.\Include/arm_math.h **** 
 1046              		.loc 2 716 0
 1047 06a2 FB6E     		ldr	r3, [r7, #108]
 1048 06a4 5B42     		neg	r3, r3
 1049 06a6 7B66     		str	r3, [r7, #100]
 718:.\Include/arm_math.h ****       {
 1050              		.loc 2 718 0
 1051 06a8 7A6F     		ldr	r2, [r7, #116]
 1052 06aa 7B6E     		ldr	r3, [r7, #100]
 1053 06ac 9A42     		cmp	r2, r3
 1054 06ae 03DA     		bge	.L21
 720:.\Include/arm_math.h ****       }
 1055              		.loc 2 720 0
 1056 06b0 7B6E     		ldr	r3, [r7, #100]
 1057 06b2 7B67     		str	r3, [r7, #116]
 1058 06b4 00E0     		b	.L21
 1059              	.L54:
 711:.\Include/arm_math.h ****       }
 1060              		.loc 2 711 0
 1061 06b6 C046     		mov	r8, r8
 1062              	.L21:
 723:.\Include/arm_math.h ****   }
 1063              		.loc 2 723 0
 1064 06b8 7B6F     		ldr	r3, [r7, #116]
 1065              	.LBE45:
 1066              	.LBE44:
 1067              		.loc 1 428 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 45


 1068 06ba 9AB2     		uxth	r2, r3
 1069 06bc F023     		mov	r3, #240
 1070 06be FB18     		add	r3, r7, r3
 1071 06c0 1B68     		ldr	r3, [r3]
 1072 06c2 1A80     		strh	r2, [r3]
 429:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     pOut += inc;
 1073              		.loc 1 429 0
 1074 06c4 F823     		mov	r3, #248
 1075 06c6 FB18     		add	r3, r7, r3
 1076 06c8 1B68     		ldr	r3, [r3]
 1077 06ca 5B00     		lsl	r3, r3, #1
 1078 06cc F022     		mov	r2, #240
 1079 06ce BA18     		add	r2, r7, r2
 1080 06d0 1268     		ldr	r2, [r2]
 1081 06d2 D318     		add	r3, r2, r3
 1082 06d4 F022     		mov	r2, #240
 1083 06d6 BA18     		add	r2, r7, r2
 1084 06d8 1360     		str	r3, [r2]
 430:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     *pOut = (__SSAT(acc1 >> 15u, 16));
 1085              		.loc 1 430 0
 1086 06da 8823     		mov	r3, #136
 1087 06dc 5B00     		lsl	r3, r3, #1
 1088 06de FB18     		add	r3, r7, r3
 1089 06e0 1B68     		ldr	r3, [r3]
 1090 06e2 DB13     		asr	r3, r3, #15
 1091 06e4 3B66     		str	r3, [r7, #96]
 1092 06e6 1023     		mov	r3, #16
 1093 06e8 FB65     		str	r3, [r7, #92]
 1094              	.LBB46:
 1095              	.LBB47:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1096              		.loc 2 699 0
 1097 06ea 0123     		mov	r3, #1
 1098 06ec BB65     		str	r3, [r7, #88]
 700:.\Include/arm_math.h ****     {
 1099              		.loc 2 700 0
 1100 06ee 0023     		mov	r3, #0
 1101 06f0 7B65     		str	r3, [r7, #84]
 1102 06f2 05E0     		b	.L23
 1103              	.L24:
 702:.\Include/arm_math.h ****     }
 1104              		.loc 2 702 0
 1105 06f4 BB6D     		ldr	r3, [r7, #88]
 1106 06f6 5B00     		lsl	r3, r3, #1
 1107 06f8 BB65     		str	r3, [r7, #88]
 700:.\Include/arm_math.h ****     {
 1108              		.loc 2 700 0
 1109 06fa 7B6D     		ldr	r3, [r7, #84]
 1110 06fc 0133     		add	r3, r3, #1
 1111 06fe 7B65     		str	r3, [r7, #84]
 1112              	.L23:
 1113 0700 FB6D     		ldr	r3, [r7, #92]
 1114 0702 013B     		sub	r3, r3, #1
 1115 0704 7A6D     		ldr	r2, [r7, #84]
 1116 0706 9A42     		cmp	r2, r3
 1117 0708 F4D3     		bcc	.L24
 705:.\Include/arm_math.h ****     {
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 46


 1118              		.loc 2 705 0
 1119 070a 3B6E     		ldr	r3, [r7, #96]
 1120 070c 002B     		cmp	r3, #0
 1121 070e 09DD     		ble	.L25
 707:.\Include/arm_math.h **** 
 1122              		.loc 2 707 0
 1123 0710 BB6D     		ldr	r3, [r7, #88]
 1124 0712 013B     		sub	r3, r3, #1
 1125 0714 BB65     		str	r3, [r7, #88]
 709:.\Include/arm_math.h ****       {
 1126              		.loc 2 709 0
 1127 0716 3A6E     		ldr	r2, [r7, #96]
 1128 0718 BB6D     		ldr	r3, [r7, #88]
 1129 071a 9A42     		cmp	r2, r3
 1130 071c 0CDD     		ble	.L55
 711:.\Include/arm_math.h ****       }
 1131              		.loc 2 711 0
 1132 071e BB6D     		ldr	r3, [r7, #88]
 1133 0720 3B66     		str	r3, [r7, #96]
 1134 0722 0AE0     		b	.L27
 1135              	.L25:
 716:.\Include/arm_math.h **** 
 1136              		.loc 2 716 0
 1137 0724 BB6D     		ldr	r3, [r7, #88]
 1138 0726 5B42     		neg	r3, r3
 1139 0728 3B65     		str	r3, [r7, #80]
 718:.\Include/arm_math.h ****       {
 1140              		.loc 2 718 0
 1141 072a 3A6E     		ldr	r2, [r7, #96]
 1142 072c 3B6D     		ldr	r3, [r7, #80]
 1143 072e 9A42     		cmp	r2, r3
 1144 0730 03DA     		bge	.L27
 720:.\Include/arm_math.h ****       }
 1145              		.loc 2 720 0
 1146 0732 3B6D     		ldr	r3, [r7, #80]
 1147 0734 3B66     		str	r3, [r7, #96]
 1148 0736 00E0     		b	.L27
 1149              	.L55:
 711:.\Include/arm_math.h ****       }
 1150              		.loc 2 711 0
 1151 0738 C046     		mov	r8, r8
 1152              	.L27:
 723:.\Include/arm_math.h ****   }
 1153              		.loc 2 723 0
 1154 073a 3B6E     		ldr	r3, [r7, #96]
 1155              	.LBE47:
 1156              	.LBE46:
 1157              		.loc 1 430 0
 1158 073c 9AB2     		uxth	r2, r3
 1159 073e F023     		mov	r3, #240
 1160 0740 FB18     		add	r3, r7, r3
 1161 0742 1B68     		ldr	r3, [r3]
 1162 0744 1A80     		strh	r2, [r3]
 431:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     pOut += inc;
 1163              		.loc 1 431 0
 1164 0746 F823     		mov	r3, #248
 1165 0748 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 47


 1166 074a 1B68     		ldr	r3, [r3]
 1167 074c 5B00     		lsl	r3, r3, #1
 1168 074e F022     		mov	r2, #240
 1169 0750 BA18     		add	r2, r7, r2
 1170 0752 1268     		ldr	r2, [r2]
 1171 0754 D318     		add	r3, r2, r3
 1172 0756 F022     		mov	r2, #240
 1173 0758 BA18     		add	r2, r7, r2
 1174 075a 1360     		str	r3, [r2]
 432:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     *pOut = (__SSAT(acc2 >> 15u, 16));
 1175              		.loc 1 432 0
 1176 075c 8623     		mov	r3, #134
 1177 075e 5B00     		lsl	r3, r3, #1
 1178 0760 FB18     		add	r3, r7, r3
 1179 0762 1B68     		ldr	r3, [r3]
 1180 0764 DB13     		asr	r3, r3, #15
 1181 0766 FB64     		str	r3, [r7, #76]
 1182 0768 1023     		mov	r3, #16
 1183 076a BB64     		str	r3, [r7, #72]
 1184              	.LBB48:
 1185              	.LBB49:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1186              		.loc 2 699 0
 1187 076c 0123     		mov	r3, #1
 1188 076e 7B64     		str	r3, [r7, #68]
 700:.\Include/arm_math.h ****     {
 1189              		.loc 2 700 0
 1190 0770 0023     		mov	r3, #0
 1191 0772 3B64     		str	r3, [r7, #64]
 1192 0774 05E0     		b	.L29
 1193              	.L30:
 702:.\Include/arm_math.h ****     }
 1194              		.loc 2 702 0
 1195 0776 7B6C     		ldr	r3, [r7, #68]
 1196 0778 5B00     		lsl	r3, r3, #1
 1197 077a 7B64     		str	r3, [r7, #68]
 700:.\Include/arm_math.h ****     {
 1198              		.loc 2 700 0
 1199 077c 3B6C     		ldr	r3, [r7, #64]
 1200 077e 0133     		add	r3, r3, #1
 1201 0780 3B64     		str	r3, [r7, #64]
 1202              	.L29:
 1203 0782 BB6C     		ldr	r3, [r7, #72]
 1204 0784 013B     		sub	r3, r3, #1
 1205 0786 3A6C     		ldr	r2, [r7, #64]
 1206 0788 9A42     		cmp	r2, r3
 1207 078a F4D3     		bcc	.L30
 705:.\Include/arm_math.h ****     {
 1208              		.loc 2 705 0
 1209 078c FB6C     		ldr	r3, [r7, #76]
 1210 078e 002B     		cmp	r3, #0
 1211 0790 09DD     		ble	.L31
 707:.\Include/arm_math.h **** 
 1212              		.loc 2 707 0
 1213 0792 7B6C     		ldr	r3, [r7, #68]
 1214 0794 013B     		sub	r3, r3, #1
 1215 0796 7B64     		str	r3, [r7, #68]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 48


 709:.\Include/arm_math.h ****       {
 1216              		.loc 2 709 0
 1217 0798 FA6C     		ldr	r2, [r7, #76]
 1218 079a 7B6C     		ldr	r3, [r7, #68]
 1219 079c 9A42     		cmp	r2, r3
 1220 079e 0CDD     		ble	.L56
 711:.\Include/arm_math.h ****       }
 1221              		.loc 2 711 0
 1222 07a0 7B6C     		ldr	r3, [r7, #68]
 1223 07a2 FB64     		str	r3, [r7, #76]
 1224 07a4 0AE0     		b	.L33
 1225              	.L31:
 716:.\Include/arm_math.h **** 
 1226              		.loc 2 716 0
 1227 07a6 7B6C     		ldr	r3, [r7, #68]
 1228 07a8 5B42     		neg	r3, r3
 1229 07aa FB63     		str	r3, [r7, #60]
 718:.\Include/arm_math.h ****       {
 1230              		.loc 2 718 0
 1231 07ac FA6C     		ldr	r2, [r7, #76]
 1232 07ae FB6B     		ldr	r3, [r7, #60]
 1233 07b0 9A42     		cmp	r2, r3
 1234 07b2 03DA     		bge	.L33
 720:.\Include/arm_math.h ****       }
 1235              		.loc 2 720 0
 1236 07b4 FB6B     		ldr	r3, [r7, #60]
 1237 07b6 FB64     		str	r3, [r7, #76]
 1238 07b8 00E0     		b	.L33
 1239              	.L56:
 711:.\Include/arm_math.h ****       }
 1240              		.loc 2 711 0
 1241 07ba C046     		mov	r8, r8
 1242              	.L33:
 723:.\Include/arm_math.h ****   }
 1243              		.loc 2 723 0
 1244 07bc FB6C     		ldr	r3, [r7, #76]
 1245              	.LBE49:
 1246              	.LBE48:
 1247              		.loc 1 432 0
 1248 07be 9AB2     		uxth	r2, r3
 1249 07c0 F023     		mov	r3, #240
 1250 07c2 FB18     		add	r3, r7, r3
 1251 07c4 1B68     		ldr	r3, [r3]
 1252 07c6 1A80     		strh	r2, [r3]
 433:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     pOut += inc;
 1253              		.loc 1 433 0
 1254 07c8 F823     		mov	r3, #248
 1255 07ca FB18     		add	r3, r7, r3
 1256 07cc 1B68     		ldr	r3, [r3]
 1257 07ce 5B00     		lsl	r3, r3, #1
 1258 07d0 F022     		mov	r2, #240
 1259 07d2 BA18     		add	r2, r7, r2
 1260 07d4 1268     		ldr	r2, [r2]
 1261 07d6 D318     		add	r3, r2, r3
 1262 07d8 F022     		mov	r2, #240
 1263 07da BA18     		add	r2, r7, r2
 1264 07dc 1360     		str	r3, [r2]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 49


 434:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     *pOut = (__SSAT(acc3 >> 15u, 16));
 1265              		.loc 1 434 0
 1266 07de 8423     		mov	r3, #132
 1267 07e0 5B00     		lsl	r3, r3, #1
 1268 07e2 FB18     		add	r3, r7, r3
 1269 07e4 1B68     		ldr	r3, [r3]
 1270 07e6 DB13     		asr	r3, r3, #15
 1271 07e8 BB63     		str	r3, [r7, #56]
 1272 07ea 1023     		mov	r3, #16
 1273 07ec 7B63     		str	r3, [r7, #52]
 1274              	.LBB50:
 1275              	.LBB51:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1276              		.loc 2 699 0
 1277 07ee 0123     		mov	r3, #1
 1278 07f0 3B63     		str	r3, [r7, #48]
 700:.\Include/arm_math.h ****     {
 1279              		.loc 2 700 0
 1280 07f2 0023     		mov	r3, #0
 1281 07f4 FB62     		str	r3, [r7, #44]
 1282 07f6 05E0     		b	.L35
 1283              	.L36:
 702:.\Include/arm_math.h ****     }
 1284              		.loc 2 702 0
 1285 07f8 3B6B     		ldr	r3, [r7, #48]
 1286 07fa 5B00     		lsl	r3, r3, #1
 1287 07fc 3B63     		str	r3, [r7, #48]
 700:.\Include/arm_math.h ****     {
 1288              		.loc 2 700 0
 1289 07fe FB6A     		ldr	r3, [r7, #44]
 1290 0800 0133     		add	r3, r3, #1
 1291 0802 FB62     		str	r3, [r7, #44]
 1292              	.L35:
 1293 0804 7B6B     		ldr	r3, [r7, #52]
 1294 0806 013B     		sub	r3, r3, #1
 1295 0808 FA6A     		ldr	r2, [r7, #44]
 1296 080a 9A42     		cmp	r2, r3
 1297 080c F4D3     		bcc	.L36
 705:.\Include/arm_math.h ****     {
 1298              		.loc 2 705 0
 1299 080e BB6B     		ldr	r3, [r7, #56]
 1300 0810 002B     		cmp	r3, #0
 1301 0812 09DD     		ble	.L37
 707:.\Include/arm_math.h **** 
 1302              		.loc 2 707 0
 1303 0814 3B6B     		ldr	r3, [r7, #48]
 1304 0816 013B     		sub	r3, r3, #1
 1305 0818 3B63     		str	r3, [r7, #48]
 709:.\Include/arm_math.h ****       {
 1306              		.loc 2 709 0
 1307 081a BA6B     		ldr	r2, [r7, #56]
 1308 081c 3B6B     		ldr	r3, [r7, #48]
 1309 081e 9A42     		cmp	r2, r3
 1310 0820 0CDD     		ble	.L57
 711:.\Include/arm_math.h ****       }
 1311              		.loc 2 711 0
 1312 0822 3B6B     		ldr	r3, [r7, #48]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 50


 1313 0824 BB63     		str	r3, [r7, #56]
 1314 0826 0AE0     		b	.L39
 1315              	.L37:
 716:.\Include/arm_math.h **** 
 1316              		.loc 2 716 0
 1317 0828 3B6B     		ldr	r3, [r7, #48]
 1318 082a 5B42     		neg	r3, r3
 1319 082c BB62     		str	r3, [r7, #40]
 718:.\Include/arm_math.h ****       {
 1320              		.loc 2 718 0
 1321 082e BA6B     		ldr	r2, [r7, #56]
 1322 0830 BB6A     		ldr	r3, [r7, #40]
 1323 0832 9A42     		cmp	r2, r3
 1324 0834 03DA     		bge	.L39
 720:.\Include/arm_math.h ****       }
 1325              		.loc 2 720 0
 1326 0836 BB6A     		ldr	r3, [r7, #40]
 1327 0838 BB63     		str	r3, [r7, #56]
 1328 083a 00E0     		b	.L39
 1329              	.L57:
 711:.\Include/arm_math.h ****       }
 1330              		.loc 2 711 0
 1331 083c C046     		mov	r8, r8
 1332              	.L39:
 723:.\Include/arm_math.h ****   }
 1333              		.loc 2 723 0
 1334 083e BB6B     		ldr	r3, [r7, #56]
 1335              	.LBE51:
 1336              	.LBE50:
 1337              		.loc 1 434 0
 1338 0840 9AB2     		uxth	r2, r3
 1339 0842 F023     		mov	r3, #240
 1340 0844 FB18     		add	r3, r7, r3
 1341 0846 1B68     		ldr	r3, [r3]
 1342 0848 1A80     		strh	r2, [r3]
 435:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     pOut += inc;
 1343              		.loc 1 435 0
 1344 084a F823     		mov	r3, #248
 1345 084c FB18     		add	r3, r7, r3
 1346 084e 1B68     		ldr	r3, [r3]
 1347 0850 5B00     		lsl	r3, r3, #1
 1348 0852 F022     		mov	r2, #240
 1349 0854 BA18     		add	r2, r7, r2
 1350 0856 1268     		ldr	r2, [r2]
 1351 0858 D318     		add	r3, r2, r3
 1352 085a F022     		mov	r2, #240
 1353 085c BA18     		add	r2, r7, r2
 1354 085e 1360     		str	r3, [r2]
 436:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 437:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 438:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Initialization of inputB pointer */
 439:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     pIn2 = py;
 1355              		.loc 1 439 0
 1356 0860 E423     		mov	r3, #228
 1357 0862 FB18     		add	r3, r7, r3
 1358 0864 1B68     		ldr	r3, [r3]
 1359 0866 8C22     		mov	r2, #140
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 51


 1360 0868 5200     		lsl	r2, r2, #1
 1361 086a BA18     		add	r2, r7, r2
 1362 086c 1360     		str	r3, [r2]
 440:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 441:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     pScratch += 4u;
 1363              		.loc 1 441 0
 1364 086e 9623     		mov	r3, #150
 1365 0870 5B00     		lsl	r3, r3, #1
 1366 0872 FB18     		add	r3, r7, r3
 1367 0874 1B68     		ldr	r3, [r3]
 1368 0876 0833     		add	r3, r3, #8
 1369 0878 9622     		mov	r2, #150
 1370 087a 5200     		lsl	r2, r2, #1
 1371 087c BA18     		add	r2, r7, r2
 1372 087e 1360     		str	r3, [r2]
 1373              	.L4:
 252:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   {
 1374              		.loc 1 252 0
 1375 0880 FC23     		mov	r3, #252
 1376 0882 FB18     		add	r3, r7, r3
 1377 0884 1B68     		ldr	r3, [r3]
 1378 0886 002B     		cmp	r3, #0
 1379 0888 00D0     		beq	.LCB1219
 1380 088a 63E4     		b	.L41	@long jump
 1381              	.LCB1219:
 442:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 443:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   }
 444:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 445:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 446:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   blkCnt = (srcALen + srcBLen - 1u) & 0x3;
 1382              		.loc 1 446 0
 1383 088c BA68     		ldr	r2, [r7, #8]
 1384 088e 3B68     		ldr	r3, [r7]
 1385 0890 D318     		add	r3, r2, r3
 1386 0892 013B     		sub	r3, r3, #1
 1387 0894 0322     		mov	r2, #3
 1388 0896 1340     		and	r3, r2
 1389 0898 FC22     		mov	r2, #252
 1390 089a BA18     		add	r2, r7, r2
 1391 089c 1360     		str	r3, [r2]
 447:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 448:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   /* Calculate correlation for remaining samples of Bigger length sequence */
 449:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   while (blkCnt > 0)
 1392              		.loc 1 449 0
 1393 089e D4E0     		b	.L42
 1394              	.L53:
 450:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   {
 451:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Initialze temporary scratch pointer as scratch1 */
 452:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     pScr = pScratch;
 1395              		.loc 1 452 0
 1396 08a0 9623     		mov	r3, #150
 1397 08a2 5B00     		lsl	r3, r3, #1
 1398 08a4 FB18     		add	r3, r7, r3
 1399 08a6 1B68     		ldr	r3, [r3]
 1400 08a8 3B61     		str	r3, [r7, #16]
 453:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 454:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Clear Accumlators */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 52


 455:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     acc0 = 0;
 1401              		.loc 1 455 0
 1402 08aa 0023     		mov	r3, #0
 1403 08ac 8A22     		mov	r2, #138
 1404 08ae 5200     		lsl	r2, r2, #1
 1405 08b0 BA18     		add	r2, r7, r2
 1406 08b2 1360     		str	r3, [r2]
 456:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 457:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     tapCnt = (srcBLen) >> 1u;
 1407              		.loc 1 457 0
 1408 08b4 3B68     		ldr	r3, [r7]
 1409 08b6 5B08     		lsr	r3, r3, #1
 1410 08b8 F422     		mov	r2, #244
 1411 08ba BA18     		add	r2, r7, r2
 1412 08bc 1360     		str	r3, [r2]
 458:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 459:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     while (tapCnt > 0u)
 1413              		.loc 1 459 0
 1414 08be 3AE0     		b	.L43
 1415              	.L44:
 460:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     {
 461:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 462:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc0 += (*pScr++ * *pIn2++);
 1416              		.loc 1 462 0
 1417 08c0 3B69     		ldr	r3, [r7, #16]
 1418 08c2 9A1C     		add	r2, r3, #2
 1419 08c4 3A61     		str	r2, [r7, #16]
 1420 08c6 1B88     		ldrh	r3, [r3]
 1421 08c8 1AB2     		sxth	r2, r3
 1422 08ca 8C23     		mov	r3, #140
 1423 08cc 5B00     		lsl	r3, r3, #1
 1424 08ce FB18     		add	r3, r7, r3
 1425 08d0 1B68     		ldr	r3, [r3]
 1426 08d2 991C     		add	r1, r3, #2
 1427 08d4 8C20     		mov	r0, #140
 1428 08d6 4000     		lsl	r0, r0, #1
 1429 08d8 3818     		add	r0, r7, r0
 1430 08da 0160     		str	r1, [r0]
 1431 08dc 1B88     		ldrh	r3, [r3]
 1432 08de 1BB2     		sxth	r3, r3
 1433 08e0 5343     		mul	r3, r2
 1434 08e2 8A22     		mov	r2, #138
 1435 08e4 5200     		lsl	r2, r2, #1
 1436 08e6 BA18     		add	r2, r7, r2
 1437 08e8 1268     		ldr	r2, [r2]
 1438 08ea D318     		add	r3, r2, r3
 1439 08ec 8A22     		mov	r2, #138
 1440 08ee 5200     		lsl	r2, r2, #1
 1441 08f0 BA18     		add	r2, r7, r2
 1442 08f2 1360     		str	r3, [r2]
 463:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc0 += (*pScr++ * *pIn2++);
 1443              		.loc 1 463 0
 1444 08f4 3B69     		ldr	r3, [r7, #16]
 1445 08f6 9A1C     		add	r2, r3, #2
 1446 08f8 3A61     		str	r2, [r7, #16]
 1447 08fa 1B88     		ldrh	r3, [r3]
 1448 08fc 1AB2     		sxth	r2, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 53


 1449 08fe 8C23     		mov	r3, #140
 1450 0900 5B00     		lsl	r3, r3, #1
 1451 0902 FB18     		add	r3, r7, r3
 1452 0904 1B68     		ldr	r3, [r3]
 1453 0906 991C     		add	r1, r3, #2
 1454 0908 8C20     		mov	r0, #140
 1455 090a 4000     		lsl	r0, r0, #1
 1456 090c 3818     		add	r0, r7, r0
 1457 090e 0160     		str	r1, [r0]
 1458 0910 1B88     		ldrh	r3, [r3]
 1459 0912 1BB2     		sxth	r3, r3
 1460 0914 5343     		mul	r3, r2
 1461 0916 8A22     		mov	r2, #138
 1462 0918 5200     		lsl	r2, r2, #1
 1463 091a BA18     		add	r2, r7, r2
 1464 091c 1268     		ldr	r2, [r2]
 1465 091e D318     		add	r3, r2, r3
 1466 0920 8A22     		mov	r2, #138
 1467 0922 5200     		lsl	r2, r2, #1
 1468 0924 BA18     		add	r2, r7, r2
 1469 0926 1360     		str	r3, [r2]
 464:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 465:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       /* Decrement the loop counter */
 466:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       tapCnt--;
 1470              		.loc 1 466 0
 1471 0928 F423     		mov	r3, #244
 1472 092a FB18     		add	r3, r7, r3
 1473 092c 1B68     		ldr	r3, [r3]
 1474 092e 013B     		sub	r3, r3, #1
 1475 0930 F422     		mov	r2, #244
 1476 0932 BA18     		add	r2, r7, r2
 1477 0934 1360     		str	r3, [r2]
 1478              	.L43:
 459:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     {
 1479              		.loc 1 459 0
 1480 0936 F423     		mov	r3, #244
 1481 0938 FB18     		add	r3, r7, r3
 1482 093a 1B68     		ldr	r3, [r3]
 1483 093c 002B     		cmp	r3, #0
 1484 093e BFD1     		bne	.L44
 467:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     }
 468:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 469:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     tapCnt = (srcBLen) & 1u;
 1485              		.loc 1 469 0
 1486 0940 3B68     		ldr	r3, [r7]
 1487 0942 0122     		mov	r2, #1
 1488 0944 1340     		and	r3, r2
 1489 0946 F422     		mov	r2, #244
 1490 0948 BA18     		add	r2, r7, r2
 1491 094a 1360     		str	r3, [r2]
 470:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 471:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* apply same above for remaining samples of smaller length sequence */
 472:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     while (tapCnt > 0u)
 1492              		.loc 1 472 0
 1493 094c 20E0     		b	.L45
 1494              	.L46:
 473:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     {
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 54


 474:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 475:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       /* accumlate the results */
 476:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       acc0 += (*pScr++ * *pIn2++);
 1495              		.loc 1 476 0
 1496 094e 3B69     		ldr	r3, [r7, #16]
 1497 0950 9A1C     		add	r2, r3, #2
 1498 0952 3A61     		str	r2, [r7, #16]
 1499 0954 1B88     		ldrh	r3, [r3]
 1500 0956 1AB2     		sxth	r2, r3
 1501 0958 8C23     		mov	r3, #140
 1502 095a 5B00     		lsl	r3, r3, #1
 1503 095c FB18     		add	r3, r7, r3
 1504 095e 1B68     		ldr	r3, [r3]
 1505 0960 991C     		add	r1, r3, #2
 1506 0962 8C20     		mov	r0, #140
 1507 0964 4000     		lsl	r0, r0, #1
 1508 0966 3818     		add	r0, r7, r0
 1509 0968 0160     		str	r1, [r0]
 1510 096a 1B88     		ldrh	r3, [r3]
 1511 096c 1BB2     		sxth	r3, r3
 1512 096e 5343     		mul	r3, r2
 1513 0970 8A22     		mov	r2, #138
 1514 0972 5200     		lsl	r2, r2, #1
 1515 0974 BA18     		add	r2, r7, r2
 1516 0976 1268     		ldr	r2, [r2]
 1517 0978 D318     		add	r3, r2, r3
 1518 097a 8A22     		mov	r2, #138
 1519 097c 5200     		lsl	r2, r2, #1
 1520 097e BA18     		add	r2, r7, r2
 1521 0980 1360     		str	r3, [r2]
 477:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 478:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       /* Decrement the loop counter */
 479:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****       tapCnt--;
 1522              		.loc 1 479 0
 1523 0982 F423     		mov	r3, #244
 1524 0984 FB18     		add	r3, r7, r3
 1525 0986 1B68     		ldr	r3, [r3]
 1526 0988 013B     		sub	r3, r3, #1
 1527 098a F422     		mov	r2, #244
 1528 098c BA18     		add	r2, r7, r2
 1529 098e 1360     		str	r3, [r2]
 1530              	.L45:
 472:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     {
 1531              		.loc 1 472 0
 1532 0990 F423     		mov	r3, #244
 1533 0992 FB18     		add	r3, r7, r3
 1534 0994 1B68     		ldr	r3, [r3]
 1535 0996 002B     		cmp	r3, #0
 1536 0998 D9D1     		bne	.L46
 480:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     }
 481:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 482:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     blkCnt--;
 1537              		.loc 1 482 0
 1538 099a FC23     		mov	r3, #252
 1539 099c FB18     		add	r3, r7, r3
 1540 099e 1B68     		ldr	r3, [r3]
 1541 09a0 013B     		sub	r3, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 55


 1542 09a2 FC22     		mov	r2, #252
 1543 09a4 BA18     		add	r2, r7, r2
 1544 09a6 1360     		str	r3, [r2]
 483:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 484:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
 485:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 486:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     *pOut = (q15_t) (__SSAT((acc0 >> 15), 16));
 1545              		.loc 1 486 0
 1546 09a8 8A23     		mov	r3, #138
 1547 09aa 5B00     		lsl	r3, r3, #1
 1548 09ac FB18     		add	r3, r7, r3
 1549 09ae 1B68     		ldr	r3, [r3]
 1550 09b0 DB13     		asr	r3, r3, #15
 1551 09b2 7B62     		str	r3, [r7, #36]
 1552 09b4 1023     		mov	r3, #16
 1553 09b6 3B62     		str	r3, [r7, #32]
 1554              	.LBB52:
 1555              	.LBB53:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1556              		.loc 2 699 0
 1557 09b8 0123     		mov	r3, #1
 1558 09ba FB61     		str	r3, [r7, #28]
 700:.\Include/arm_math.h ****     {
 1559              		.loc 2 700 0
 1560 09bc 0023     		mov	r3, #0
 1561 09be BB61     		str	r3, [r7, #24]
 1562 09c0 05E0     		b	.L47
 1563              	.L48:
 702:.\Include/arm_math.h ****     }
 1564              		.loc 2 702 0
 1565 09c2 FB69     		ldr	r3, [r7, #28]
 1566 09c4 5B00     		lsl	r3, r3, #1
 1567 09c6 FB61     		str	r3, [r7, #28]
 700:.\Include/arm_math.h ****     {
 1568              		.loc 2 700 0
 1569 09c8 BB69     		ldr	r3, [r7, #24]
 1570 09ca 0133     		add	r3, r3, #1
 1571 09cc BB61     		str	r3, [r7, #24]
 1572              	.L47:
 1573 09ce 3B6A     		ldr	r3, [r7, #32]
 1574 09d0 013B     		sub	r3, r3, #1
 1575 09d2 BA69     		ldr	r2, [r7, #24]
 1576 09d4 9A42     		cmp	r2, r3
 1577 09d6 F4D3     		bcc	.L48
 705:.\Include/arm_math.h ****     {
 1578              		.loc 2 705 0
 1579 09d8 7B6A     		ldr	r3, [r7, #36]
 1580 09da 002B     		cmp	r3, #0
 1581 09dc 09DD     		ble	.L49
 707:.\Include/arm_math.h **** 
 1582              		.loc 2 707 0
 1583 09de FB69     		ldr	r3, [r7, #28]
 1584 09e0 013B     		sub	r3, r3, #1
 1585 09e2 FB61     		str	r3, [r7, #28]
 709:.\Include/arm_math.h ****       {
 1586              		.loc 2 709 0
 1587 09e4 7A6A     		ldr	r2, [r7, #36]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 56


 1588 09e6 FB69     		ldr	r3, [r7, #28]
 1589 09e8 9A42     		cmp	r2, r3
 1590 09ea 0CDD     		ble	.L58
 711:.\Include/arm_math.h ****       }
 1591              		.loc 2 711 0
 1592 09ec FB69     		ldr	r3, [r7, #28]
 1593 09ee 7B62     		str	r3, [r7, #36]
 1594 09f0 0AE0     		b	.L51
 1595              	.L49:
 716:.\Include/arm_math.h **** 
 1596              		.loc 2 716 0
 1597 09f2 FB69     		ldr	r3, [r7, #28]
 1598 09f4 5B42     		neg	r3, r3
 1599 09f6 7B61     		str	r3, [r7, #20]
 718:.\Include/arm_math.h ****       {
 1600              		.loc 2 718 0
 1601 09f8 7A6A     		ldr	r2, [r7, #36]
 1602 09fa 7B69     		ldr	r3, [r7, #20]
 1603 09fc 9A42     		cmp	r2, r3
 1604 09fe 03DA     		bge	.L51
 720:.\Include/arm_math.h ****       }
 1605              		.loc 2 720 0
 1606 0a00 7B69     		ldr	r3, [r7, #20]
 1607 0a02 7B62     		str	r3, [r7, #36]
 1608 0a04 00E0     		b	.L51
 1609              	.L58:
 711:.\Include/arm_math.h ****       }
 1610              		.loc 2 711 0
 1611 0a06 C046     		mov	r8, r8
 1612              	.L51:
 723:.\Include/arm_math.h ****   }
 1613              		.loc 2 723 0
 1614 0a08 7B6A     		ldr	r3, [r7, #36]
 1615              	.LBE53:
 1616              	.LBE52:
 1617              		.loc 1 486 0
 1618 0a0a 9AB2     		uxth	r2, r3
 1619 0a0c F023     		mov	r3, #240
 1620 0a0e FB18     		add	r3, r7, r3
 1621 0a10 1B68     		ldr	r3, [r3]
 1622 0a12 1A80     		strh	r2, [r3]
 487:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 488:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     pOut += inc;
 1623              		.loc 1 488 0
 1624 0a14 F823     		mov	r3, #248
 1625 0a16 FB18     		add	r3, r7, r3
 1626 0a18 1B68     		ldr	r3, [r3]
 1627 0a1a 5B00     		lsl	r3, r3, #1
 1628 0a1c F022     		mov	r2, #240
 1629 0a1e BA18     		add	r2, r7, r2
 1630 0a20 1268     		ldr	r2, [r2]
 1631 0a22 D318     		add	r3, r2, r3
 1632 0a24 F022     		mov	r2, #240
 1633 0a26 BA18     		add	r2, r7, r2
 1634 0a28 1360     		str	r3, [r2]
 489:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 490:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     /* Initialization of inputB pointer */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 57


 491:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     pIn2 = py;
 1635              		.loc 1 491 0
 1636 0a2a E423     		mov	r3, #228
 1637 0a2c FB18     		add	r3, r7, r3
 1638 0a2e 1B68     		ldr	r3, [r3]
 1639 0a30 8C22     		mov	r2, #140
 1640 0a32 5200     		lsl	r2, r2, #1
 1641 0a34 BA18     		add	r2, r7, r2
 1642 0a36 1360     		str	r3, [r2]
 492:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 493:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****     pScratch += 1u;
 1643              		.loc 1 493 0
 1644 0a38 9623     		mov	r3, #150
 1645 0a3a 5B00     		lsl	r3, r3, #1
 1646 0a3c FB18     		add	r3, r7, r3
 1647 0a3e 1B68     		ldr	r3, [r3]
 1648 0a40 0233     		add	r3, r3, #2
 1649 0a42 9622     		mov	r2, #150
 1650 0a44 5200     		lsl	r2, r2, #1
 1651 0a46 BA18     		add	r2, r7, r2
 1652 0a48 1360     		str	r3, [r2]
 1653              	.L42:
 449:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   {
 1654              		.loc 1 449 0
 1655 0a4a FC23     		mov	r3, #252
 1656 0a4c FB18     		add	r3, r7, r3
 1657 0a4e 1B68     		ldr	r3, [r3]
 1658 0a50 002B     		cmp	r3, #0
 1659 0a52 00D0     		beq	.LCB1479
 1660 0a54 24E7     		b	.L53	@long jump
 1661              	.LCB1479:
 494:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** 
 495:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c ****   }
 496:Source\FilteringFunctions/arm_correlate_fast_opt_q15.c **** }
 1662              		.loc 1 496 0
 1663 0a56 BD46     		mov	sp, r7
 1664 0a58 48B0     		add	sp, sp, #288
 1665              		@ sp needed
 1666 0a5a 80BD     		pop	{r7, pc}
 1667              		.cfi_endproc
 1668              	.LFE82:
 1669              		.size	arm_correlate_fast_opt_q15, .-arm_correlate_fast_opt_q15
 1670              		.text
 1671              	.Letext0:
 1672              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1673              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1674              		.section	.debug_info,"",%progbits
 1675              	.Ldebug_info0:
 1676 0000 00060000 		.4byte	0x600
 1677 0004 0400     		.2byte	0x4
 1678 0006 00000000 		.4byte	.Ldebug_abbrev0
 1679 000a 04       		.byte	0x4
 1680 000b 01       		.uleb128 0x1
 1681 000c 3A010000 		.4byte	.LASF44
 1682 0010 01       		.byte	0x1
 1683 0011 29020000 		.4byte	.LASF45
 1684 0015 2A000000 		.4byte	.LASF46
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 58


 1685 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1686 001d 00000000 		.4byte	0
 1687 0021 00000000 		.4byte	.Ldebug_line0
 1688 0025 02       		.uleb128 0x2
 1689 0026 01       		.byte	0x1
 1690 0027 06       		.byte	0x6
 1691 0028 84020000 		.4byte	.LASF0
 1692 002c 02       		.uleb128 0x2
 1693 002d 01       		.byte	0x1
 1694 002e 08       		.byte	0x8
 1695 002f 97000000 		.4byte	.LASF1
 1696 0033 03       		.uleb128 0x3
 1697 0034 05000000 		.4byte	.LASF4
 1698 0038 03       		.byte	0x3
 1699 0039 29       		.byte	0x29
 1700 003a 3E000000 		.4byte	0x3e
 1701 003e 02       		.uleb128 0x2
 1702 003f 02       		.byte	0x2
 1703 0040 05       		.byte	0x5
 1704 0041 18020000 		.4byte	.LASF2
 1705 0045 02       		.uleb128 0x2
 1706 0046 02       		.byte	0x2
 1707 0047 07       		.byte	0x7
 1708 0048 DE000000 		.4byte	.LASF3
 1709 004c 03       		.uleb128 0x3
 1710 004d 1B000000 		.4byte	.LASF5
 1711 0051 03       		.byte	0x3
 1712 0052 3F       		.byte	0x3f
 1713 0053 57000000 		.4byte	0x57
 1714 0057 02       		.uleb128 0x2
 1715 0058 04       		.byte	0x4
 1716 0059 05       		.byte	0x5
 1717 005a 69020000 		.4byte	.LASF6
 1718 005e 03       		.uleb128 0x3
 1719 005f 0B010000 		.4byte	.LASF7
 1720 0063 03       		.byte	0x3
 1721 0064 41       		.byte	0x41
 1722 0065 69000000 		.4byte	0x69
 1723 0069 02       		.uleb128 0x2
 1724 006a 04       		.byte	0x4
 1725 006b 07       		.byte	0x7
 1726 006c CC000000 		.4byte	.LASF8
 1727 0070 02       		.uleb128 0x2
 1728 0071 08       		.byte	0x8
 1729 0072 05       		.byte	0x5
 1730 0073 FD010000 		.4byte	.LASF9
 1731 0077 02       		.uleb128 0x2
 1732 0078 08       		.byte	0x8
 1733 0079 07       		.byte	0x7
 1734 007a 23010000 		.4byte	.LASF10
 1735 007e 04       		.uleb128 0x4
 1736 007f 04       		.byte	0x4
 1737 0080 05       		.byte	0x5
 1738 0081 696E7400 		.ascii	"int\000"
 1739 0085 02       		.uleb128 0x2
 1740 0086 04       		.byte	0x4
 1741 0087 07       		.byte	0x7
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 59


 1742 0088 16010000 		.4byte	.LASF11
 1743 008c 03       		.uleb128 0x3
 1744 008d CC010000 		.4byte	.LASF12
 1745 0091 04       		.byte	0x4
 1746 0092 20       		.byte	0x20
 1747 0093 33000000 		.4byte	0x33
 1748 0097 03       		.uleb128 0x3
 1749 0098 E3010000 		.4byte	.LASF13
 1750 009c 04       		.byte	0x4
 1751 009d 2C       		.byte	0x2c
 1752 009e 4C000000 		.4byte	0x4c
 1753 00a2 03       		.uleb128 0x3
 1754 00a3 60020000 		.4byte	.LASF14
 1755 00a7 04       		.byte	0x4
 1756 00a8 2D       		.byte	0x2d
 1757 00a9 5E000000 		.4byte	0x5e
 1758 00ad 02       		.uleb128 0x2
 1759 00ae 04       		.byte	0x4
 1760 00af 07       		.byte	0x7
 1761 00b0 EB010000 		.4byte	.LASF15
 1762 00b4 02       		.uleb128 0x2
 1763 00b5 01       		.byte	0x1
 1764 00b6 08       		.byte	0x8
 1765 00b7 0B020000 		.4byte	.LASF16
 1766 00bb 02       		.uleb128 0x2
 1767 00bc 08       		.byte	0x8
 1768 00bd 04       		.byte	0x4
 1769 00be 04010000 		.4byte	.LASF17
 1770 00c2 02       		.uleb128 0x2
 1771 00c3 04       		.byte	0x4
 1772 00c4 04       		.byte	0x4
 1773 00c5 7E020000 		.4byte	.LASF18
 1774 00c9 02       		.uleb128 0x2
 1775 00ca 08       		.byte	0x8
 1776 00cb 04       		.byte	0x4
 1777 00cc 72020000 		.4byte	.LASF19
 1778 00d0 05       		.uleb128 0x5
 1779 00d1 86000000 		.4byte	.LASF20
 1780 00d5 02       		.byte	0x2
 1781 00d6 9601     		.2byte	0x196
 1782 00d8 8C000000 		.4byte	0x8c
 1783 00dc 05       		.uleb128 0x5
 1784 00dd 91000000 		.4byte	.LASF21
 1785 00e1 02       		.byte	0x2
 1786 00e2 9B01     		.2byte	0x19b
 1787 00e4 97000000 		.4byte	0x97
 1788 00e8 06       		.uleb128 0x6
 1789 00e9 04       		.byte	0x4
 1790 00ea D0000000 		.4byte	0xd0
 1791 00ee 07       		.uleb128 0x7
 1792 00ef D4010000 		.4byte	.LASF22
 1793 00f3 02       		.byte	0x2
 1794 00f4 B303     		.2byte	0x3b3
 1795 00f6 A2000000 		.4byte	0xa2
 1796 00fa 03       		.byte	0x3
 1797 00fb 20010000 		.4byte	0x120
 1798 00ff 08       		.uleb128 0x8
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 60


 1799 0100 7800     		.ascii	"x\000"
 1800 0102 02       		.byte	0x2
 1801 0103 B403     		.2byte	0x3b4
 1802 0105 A2000000 		.4byte	0xa2
 1803 0109 08       		.uleb128 0x8
 1804 010a 7900     		.ascii	"y\000"
 1805 010c 02       		.byte	0x2
 1806 010d B503     		.2byte	0x3b5
 1807 010f A2000000 		.4byte	0xa2
 1808 0113 08       		.uleb128 0x8
 1809 0114 73756D00 		.ascii	"sum\000"
 1810 0118 02       		.byte	0x2
 1811 0119 B603     		.2byte	0x3b6
 1812 011b A2000000 		.4byte	0xa2
 1813 011f 00       		.byte	0
 1814 0120 07       		.uleb128 0x7
 1815 0121 7D000000 		.4byte	.LASF23
 1816 0125 02       		.byte	0x2
 1817 0126 C103     		.2byte	0x3c1
 1818 0128 A2000000 		.4byte	0xa2
 1819 012c 03       		.byte	0x3
 1820 012d 52010000 		.4byte	0x152
 1821 0131 08       		.uleb128 0x8
 1822 0132 7800     		.ascii	"x\000"
 1823 0134 02       		.byte	0x2
 1824 0135 C203     		.2byte	0x3c2
 1825 0137 A2000000 		.4byte	0xa2
 1826 013b 08       		.uleb128 0x8
 1827 013c 7900     		.ascii	"y\000"
 1828 013e 02       		.byte	0x2
 1829 013f C303     		.2byte	0x3c3
 1830 0141 A2000000 		.4byte	0xa2
 1831 0145 08       		.uleb128 0x8
 1832 0146 73756D00 		.ascii	"sum\000"
 1833 014a 02       		.byte	0x2
 1834 014b C403     		.2byte	0x3c4
 1835 014d A2000000 		.4byte	0xa2
 1836 0151 00       		.byte	0
 1837 0152 07       		.uleb128 0x7
 1838 0153 DC010000 		.4byte	.LASF24
 1839 0157 02       		.byte	0x2
 1840 0158 B402     		.2byte	0x2b4
 1841 015a DC000000 		.4byte	0xdc
 1842 015e 03       		.byte	0x3
 1843 015f 9A010000 		.4byte	0x19a
 1844 0163 08       		.uleb128 0x8
 1845 0164 7800     		.ascii	"x\000"
 1846 0166 02       		.byte	0x2
 1847 0167 B502     		.2byte	0x2b5
 1848 0169 DC000000 		.4byte	0xdc
 1849 016d 08       		.uleb128 0x8
 1850 016e 7900     		.ascii	"y\000"
 1851 0170 02       		.byte	0x2
 1852 0171 B602     		.2byte	0x2b6
 1853 0173 A2000000 		.4byte	0xa2
 1854 0177 09       		.uleb128 0x9
 1855 0178 22020000 		.4byte	.LASF25
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 61


 1856 017c 02       		.byte	0x2
 1857 017d B802     		.2byte	0x2b8
 1858 017f 97000000 		.4byte	0x97
 1859 0183 09       		.uleb128 0x9
 1860 0184 F6000000 		.4byte	.LASF26
 1861 0188 02       		.byte	0x2
 1862 0189 B802     		.2byte	0x2b8
 1863 018b 97000000 		.4byte	0x97
 1864 018f 0A       		.uleb128 0xa
 1865 0190 6900     		.ascii	"i\000"
 1866 0192 02       		.byte	0x2
 1867 0193 B902     		.2byte	0x2b9
 1868 0195 A2000000 		.4byte	0xa2
 1869 0199 00       		.byte	0
 1870 019a 0B       		.uleb128 0xb
 1871 019b B1000000 		.4byte	.LASF47
 1872 019f 01       		.byte	0x1
 1873 01a0 48       		.byte	0x48
 1874 01a1 00000000 		.4byte	.LFB82
 1875 01a5 5C0A0000 		.4byte	.LFE82-.LFB82
 1876 01a9 01       		.uleb128 0x1
 1877 01aa 9C       		.byte	0x9c
 1878 01ab 0C       		.uleb128 0xc
 1879 01ac 0F000000 		.4byte	.LASF27
 1880 01b0 01       		.byte	0x1
 1881 01b1 49       		.byte	0x49
 1882 01b2 E8000000 		.4byte	0xe8
 1883 01b6 03       		.uleb128 0x3
 1884 01b7 91       		.byte	0x91
 1885 01b8 E47D     		.sleb128 -284
 1886 01ba 0C       		.uleb128 0xc
 1887 01bb 10020000 		.4byte	.LASF28
 1888 01bf 01       		.byte	0x1
 1889 01c0 4A       		.byte	0x4a
 1890 01c1 A2000000 		.4byte	0xa2
 1891 01c5 03       		.uleb128 0x3
 1892 01c6 91       		.byte	0x91
 1893 01c7 E07D     		.sleb128 -288
 1894 01c9 0C       		.uleb128 0xc
 1895 01ca 15000000 		.4byte	.LASF29
 1896 01ce 01       		.byte	0x1
 1897 01cf 4B       		.byte	0x4b
 1898 01d0 E8000000 		.4byte	0xe8
 1899 01d4 03       		.uleb128 0x3
 1900 01d5 91       		.byte	0x91
 1901 01d6 DC7D     		.sleb128 -292
 1902 01d8 0C       		.uleb128 0xc
 1903 01d9 90020000 		.4byte	.LASF30
 1904 01dd 01       		.byte	0x1
 1905 01de 4C       		.byte	0x4c
 1906 01df A2000000 		.4byte	0xa2
 1907 01e3 03       		.uleb128 0x3
 1908 01e4 91       		.byte	0x91
 1909 01e5 D87D     		.sleb128 -296
 1910 01e7 0C       		.uleb128 0xc
 1911 01e8 F1000000 		.4byte	.LASF31
 1912 01ec 01       		.byte	0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 62


 1913 01ed 4D       		.byte	0x4d
 1914 01ee E8000000 		.4byte	0xe8
 1915 01f2 02       		.uleb128 0x2
 1916 01f3 91       		.byte	0x91
 1917 01f4 00       		.sleb128 0
 1918 01f5 0C       		.uleb128 0xc
 1919 01f6 F4010000 		.4byte	.LASF32
 1920 01fa 01       		.byte	0x1
 1921 01fb 4E       		.byte	0x4e
 1922 01fc E8000000 		.4byte	0xe8
 1923 0200 02       		.uleb128 0x2
 1924 0201 91       		.byte	0x91
 1925 0202 04       		.sleb128 4
 1926 0203 0D       		.uleb128 0xd
 1927 0204 98020000 		.4byte	.LASF33
 1928 0208 01       		.byte	0x1
 1929 0209 50       		.byte	0x50
 1930 020a E8000000 		.4byte	0xe8
 1931 020e 02       		.uleb128 0x2
 1932 020f 91       		.byte	0x91
 1933 0210 74       		.sleb128 -12
 1934 0211 0D       		.uleb128 0xd
 1935 0212 A5000000 		.4byte	.LASF34
 1936 0216 01       		.byte	0x1
 1937 0217 51       		.byte	0x51
 1938 0218 E8000000 		.4byte	0xe8
 1939 021c 02       		.uleb128 0x2
 1940 021d 91       		.byte	0x91
 1941 021e 70       		.sleb128 -16
 1942 021f 0D       		.uleb128 0xd
 1943 0220 9D020000 		.4byte	.LASF35
 1944 0224 01       		.byte	0x1
 1945 0225 52       		.byte	0x52
 1946 0226 DC000000 		.4byte	0xdc
 1947 022a 02       		.uleb128 0x2
 1948 022b 91       		.byte	0x91
 1949 022c 6C       		.sleb128 -20
 1950 022d 0D       		.uleb128 0xd
 1951 022e A2020000 		.4byte	.LASF36
 1952 0232 01       		.byte	0x1
 1953 0233 52       		.byte	0x52
 1954 0234 DC000000 		.4byte	0xdc
 1955 0238 02       		.uleb128 0x2
 1956 0239 91       		.byte	0x91
 1957 023a 68       		.sleb128 -24
 1958 023b 0D       		.uleb128 0xd
 1959 023c A7020000 		.4byte	.LASF37
 1960 0240 01       		.byte	0x1
 1961 0241 52       		.byte	0x52
 1962 0242 DC000000 		.4byte	0xdc
 1963 0246 02       		.uleb128 0x2
 1964 0247 91       		.byte	0x91
 1965 0248 64       		.sleb128 -28
 1966 0249 0D       		.uleb128 0xd
 1967 024a 00000000 		.4byte	.LASF38
 1968 024e 01       		.byte	0x1
 1969 024f 52       		.byte	0x52
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 63


 1970 0250 DC000000 		.4byte	0xdc
 1971 0254 02       		.uleb128 0x2
 1972 0255 91       		.byte	0x91
 1973 0256 60       		.sleb128 -32
 1974 0257 0E       		.uleb128 0xe
 1975 0258 707900   		.ascii	"py\000"
 1976 025b 01       		.byte	0x1
 1977 025c 53       		.byte	0x53
 1978 025d E8000000 		.4byte	0xe8
 1979 0261 03       		.uleb128 0x3
 1980 0262 91       		.byte	0x91
 1981 0263 BC7F     		.sleb128 -68
 1982 0265 0E       		.uleb128 0xe
 1983 0266 783100   		.ascii	"x1\000"
 1984 0269 01       		.byte	0x1
 1985 026a 54       		.byte	0x54
 1986 026b DC000000 		.4byte	0xdc
 1987 026f 02       		.uleb128 0x2
 1988 0270 91       		.byte	0x91
 1989 0271 5C       		.sleb128 -36
 1990 0272 0E       		.uleb128 0xe
 1991 0273 783200   		.ascii	"x2\000"
 1992 0276 01       		.byte	0x1
 1993 0277 54       		.byte	0x54
 1994 0278 DC000000 		.4byte	0xdc
 1995 027c 02       		.uleb128 0x2
 1996 027d 91       		.byte	0x91
 1997 027e 58       		.sleb128 -40
 1998 027f 0E       		.uleb128 0xe
 1999 0280 783300   		.ascii	"x3\000"
 2000 0283 01       		.byte	0x1
 2001 0284 54       		.byte	0x54
 2002 0285 DC000000 		.4byte	0xdc
 2003 0289 03       		.uleb128 0x3
 2004 028a 91       		.byte	0x91
 2005 028b B07F     		.sleb128 -80
 2006 028d 0E       		.uleb128 0xe
 2007 028e 6A00     		.ascii	"j\000"
 2008 0290 01       		.byte	0x1
 2009 0291 55       		.byte	0x55
 2010 0292 A2000000 		.4byte	0xa2
 2011 0296 02       		.uleb128 0x2
 2012 0297 91       		.byte	0x91
 2013 0298 40       		.sleb128 -64
 2014 0299 0D       		.uleb128 0xd
 2015 029a AA000000 		.4byte	.LASF39
 2016 029e 01       		.byte	0x1
 2017 029f 55       		.byte	0x55
 2018 02a0 A2000000 		.4byte	0xa2
 2019 02a4 02       		.uleb128 0x2
 2020 02a5 91       		.byte	0x91
 2021 02a6 54       		.sleb128 -44
 2022 02a7 0D       		.uleb128 0xd
 2023 02a8 70000000 		.4byte	.LASF40
 2024 02ac 01       		.byte	0x1
 2025 02ad 55       		.byte	0x55
 2026 02ae A2000000 		.4byte	0xa2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 64


 2027 02b2 02       		.uleb128 0x2
 2028 02b3 91       		.byte	0x91
 2029 02b4 44       		.sleb128 -60
 2030 02b5 0E       		.uleb128 0xe
 2031 02b6 696E6300 		.ascii	"inc\000"
 2032 02ba 01       		.byte	0x1
 2033 02bb 56       		.byte	0x56
 2034 02bc 97000000 		.4byte	0x97
 2035 02c0 02       		.uleb128 0x2
 2036 02c1 91       		.byte	0x91
 2037 02c2 50       		.sleb128 -48
 2038 02c3 0D       		.uleb128 0xd
 2039 02c4 FD000000 		.4byte	.LASF41
 2040 02c8 01       		.byte	0x1
 2041 02c9 57       		.byte	0x57
 2042 02ca A2000000 		.4byte	0xa2
 2043 02ce 02       		.uleb128 0x2
 2044 02cf 91       		.byte	0x91
 2045 02d0 4C       		.sleb128 -52
 2046 02d1 0E       		.uleb128 0xe
 2047 02d2 793100   		.ascii	"y1\000"
 2048 02d5 01       		.byte	0x1
 2049 02d6 58       		.byte	0x58
 2050 02d7 DC000000 		.4byte	0xdc
 2051 02db 03       		.uleb128 0x3
 2052 02dc 91       		.byte	0x91
 2053 02dd B87F     		.sleb128 -72
 2054 02df 0E       		.uleb128 0xe
 2055 02e0 793200   		.ascii	"y2\000"
 2056 02e3 01       		.byte	0x1
 2057 02e4 58       		.byte	0x58
 2058 02e5 DC000000 		.4byte	0xdc
 2059 02e9 03       		.uleb128 0x3
 2060 02ea 91       		.byte	0x91
 2061 02eb B47F     		.sleb128 -76
 2062 02ed 0D       		.uleb128 0xd
 2063 02ee 25000000 		.4byte	.LASF42
 2064 02f2 01       		.byte	0x1
 2065 02f3 59       		.byte	0x59
 2066 02f4 E8000000 		.4byte	0xe8
 2067 02f8 03       		.uleb128 0x3
 2068 02f9 91       		.byte	0x91
 2069 02fa E87D     		.sleb128 -280
 2070 02fc 0D       		.uleb128 0xd
 2071 02fd 8C000000 		.4byte	.LASF43
 2072 0301 01       		.byte	0x1
 2073 0302 5A       		.byte	0x5a
 2074 0303 E8000000 		.4byte	0xe8
 2075 0307 02       		.uleb128 0x2
 2076 0308 91       		.byte	0x91
 2077 0309 48       		.sleb128 -56
 2078 030a 0F       		.uleb128 0xf
 2079 030b EE000000 		.4byte	0xee
 2080 030f 06020000 		.4byte	.LBB28
 2081 0313 32000000 		.4byte	.LBE28-.LBB28
 2082 0317 01       		.byte	0x1
 2083 0318 1801     		.2byte	0x118
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 65


 2084 031a 3A030000 		.4byte	0x33a
 2085 031e 10       		.uleb128 0x10
 2086 031f 13010000 		.4byte	0x113
 2087 0323 03       		.uleb128 0x3
 2088 0324 91       		.byte	0x91
 2089 0325 A47F     		.sleb128 -92
 2090 0327 10       		.uleb128 0x10
 2091 0328 09010000 		.4byte	0x109
 2092 032c 03       		.uleb128 0x3
 2093 032d 91       		.byte	0x91
 2094 032e A87F     		.sleb128 -88
 2095 0330 10       		.uleb128 0x10
 2096 0331 FF000000 		.4byte	0xff
 2097 0335 03       		.uleb128 0x3
 2098 0336 91       		.byte	0x91
 2099 0337 AC7F     		.sleb128 -84
 2100 0339 00       		.byte	0
 2101 033a 0F       		.uleb128 0xf
 2102 033b EE000000 		.4byte	0xee
 2103 033f 66020000 		.4byte	.LBB30
 2104 0343 32000000 		.4byte	.LBE30-.LBB30
 2105 0347 01       		.byte	0x1
 2106 0348 1A01     		.2byte	0x11a
 2107 034a 6A030000 		.4byte	0x36a
 2108 034e 10       		.uleb128 0x10
 2109 034f 13010000 		.4byte	0x113
 2110 0353 03       		.uleb128 0x3
 2111 0354 91       		.byte	0x91
 2112 0355 987F     		.sleb128 -104
 2113 0357 10       		.uleb128 0x10
 2114 0358 09010000 		.4byte	0x109
 2115 035c 03       		.uleb128 0x3
 2116 035d 91       		.byte	0x91
 2117 035e 9C7F     		.sleb128 -100
 2118 0360 10       		.uleb128 0x10
 2119 0361 FF000000 		.4byte	0xff
 2120 0365 03       		.uleb128 0x3
 2121 0366 91       		.byte	0x91
 2122 0367 A07F     		.sleb128 -96
 2123 0369 00       		.byte	0
 2124 036a 0F       		.uleb128 0xf
 2125 036b 20010000 		.4byte	0x120
 2126 036f E2020000 		.4byte	.LBB32
 2127 0373 32000000 		.4byte	.LBE32-.LBB32
 2128 0377 01       		.byte	0x1
 2129 0378 2201     		.2byte	0x122
 2130 037a 9A030000 		.4byte	0x39a
 2131 037e 10       		.uleb128 0x10
 2132 037f 45010000 		.4byte	0x145
 2133 0383 03       		.uleb128 0x3
 2134 0384 91       		.byte	0x91
 2135 0385 8C7F     		.sleb128 -116
 2136 0387 10       		.uleb128 0x10
 2137 0388 3B010000 		.4byte	0x13b
 2138 038c 03       		.uleb128 0x3
 2139 038d 91       		.byte	0x91
 2140 038e 907F     		.sleb128 -112
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 66


 2141 0390 10       		.uleb128 0x10
 2142 0391 31010000 		.4byte	0x131
 2143 0395 03       		.uleb128 0x3
 2144 0396 91       		.byte	0x91
 2145 0397 947F     		.sleb128 -108
 2146 0399 00       		.byte	0
 2147 039a 0F       		.uleb128 0xf
 2148 039b EE000000 		.4byte	0xee
 2149 039f 4C030000 		.4byte	.LBB34
 2150 03a3 32000000 		.4byte	.LBE34-.LBB34
 2151 03a7 01       		.byte	0x1
 2152 03a8 2601     		.2byte	0x126
 2153 03aa CA030000 		.4byte	0x3ca
 2154 03ae 10       		.uleb128 0x10
 2155 03af 13010000 		.4byte	0x113
 2156 03b3 03       		.uleb128 0x3
 2157 03b4 91       		.byte	0x91
 2158 03b5 807F     		.sleb128 -128
 2159 03b7 10       		.uleb128 0x10
 2160 03b8 09010000 		.4byte	0x109
 2161 03bc 03       		.uleb128 0x3
 2162 03bd 91       		.byte	0x91
 2163 03be 847F     		.sleb128 -124
 2164 03c0 10       		.uleb128 0x10
 2165 03c1 FF000000 		.4byte	0xff
 2166 03c5 03       		.uleb128 0x3
 2167 03c6 91       		.byte	0x91
 2168 03c7 887F     		.sleb128 -120
 2169 03c9 00       		.byte	0
 2170 03ca 0F       		.uleb128 0xf
 2171 03cb EE000000 		.4byte	0xee
 2172 03cf AC030000 		.4byte	.LBB36
 2173 03d3 32000000 		.4byte	.LBE36-.LBB36
 2174 03d7 01       		.byte	0x1
 2175 03d8 2801     		.2byte	0x128
 2176 03da FA030000 		.4byte	0x3fa
 2177 03de 10       		.uleb128 0x10
 2178 03df 13010000 		.4byte	0x113
 2179 03e3 03       		.uleb128 0x3
 2180 03e4 91       		.byte	0x91
 2181 03e5 F47E     		.sleb128 -140
 2182 03e7 10       		.uleb128 0x10
 2183 03e8 09010000 		.4byte	0x109
 2184 03ec 03       		.uleb128 0x3
 2185 03ed 91       		.byte	0x91
 2186 03ee F87E     		.sleb128 -136
 2187 03f0 10       		.uleb128 0x10
 2188 03f1 FF000000 		.4byte	0xff
 2189 03f5 03       		.uleb128 0x3
 2190 03f6 91       		.byte	0x91
 2191 03f7 FC7E     		.sleb128 -132
 2192 03f9 00       		.byte	0
 2193 03fa 0F       		.uleb128 0xf
 2194 03fb 20010000 		.4byte	0x120
 2195 03ff 28040000 		.4byte	.LBB38
 2196 0403 32000000 		.4byte	.LBE38-.LBB38
 2197 0407 01       		.byte	0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 67


 2198 0408 3001     		.2byte	0x130
 2199 040a 2A040000 		.4byte	0x42a
 2200 040e 10       		.uleb128 0x10
 2201 040f 45010000 		.4byte	0x145
 2202 0413 03       		.uleb128 0x3
 2203 0414 91       		.byte	0x91
 2204 0415 E87E     		.sleb128 -152
 2205 0417 10       		.uleb128 0x10
 2206 0418 3B010000 		.4byte	0x13b
 2207 041c 03       		.uleb128 0x3
 2208 041d 91       		.byte	0x91
 2209 041e EC7E     		.sleb128 -148
 2210 0420 10       		.uleb128 0x10
 2211 0421 31010000 		.4byte	0x131
 2212 0425 03       		.uleb128 0x3
 2213 0426 91       		.byte	0x91
 2214 0427 F07E     		.sleb128 -144
 2215 0429 00       		.byte	0
 2216 042a 0F       		.uleb128 0xf
 2217 042b 20010000 		.4byte	0x120
 2218 042f 88040000 		.4byte	.LBB40
 2219 0433 32000000 		.4byte	.LBE40-.LBB40
 2220 0437 01       		.byte	0x1
 2221 0438 3201     		.2byte	0x132
 2222 043a 5A040000 		.4byte	0x45a
 2223 043e 10       		.uleb128 0x10
 2224 043f 45010000 		.4byte	0x145
 2225 0443 03       		.uleb128 0x3
 2226 0444 91       		.byte	0x91
 2227 0445 DC7E     		.sleb128 -164
 2228 0447 10       		.uleb128 0x10
 2229 0448 3B010000 		.4byte	0x13b
 2230 044c 03       		.uleb128 0x3
 2231 044d 91       		.byte	0x91
 2232 044e E07E     		.sleb128 -160
 2233 0450 10       		.uleb128 0x10
 2234 0451 31010000 		.4byte	0x131
 2235 0455 03       		.uleb128 0x3
 2236 0456 91       		.byte	0x91
 2237 0457 E47E     		.sleb128 -156
 2238 0459 00       		.byte	0
 2239 045a 0F       		.uleb128 0xf
 2240 045b 20010000 		.4byte	0x120
 2241 045f 06050000 		.4byte	.LBB42
 2242 0463 26000000 		.4byte	.LBE42-.LBB42
 2243 0467 01       		.byte	0x1
 2244 0468 3C01     		.2byte	0x13c
 2245 046a 8A040000 		.4byte	0x48a
 2246 046e 10       		.uleb128 0x10
 2247 046f 45010000 		.4byte	0x145
 2248 0473 03       		.uleb128 0x3
 2249 0474 91       		.byte	0x91
 2250 0475 D07E     		.sleb128 -176
 2251 0477 10       		.uleb128 0x10
 2252 0478 3B010000 		.4byte	0x13b
 2253 047c 03       		.uleb128 0x3
 2254 047d 91       		.byte	0x91
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 68


 2255 047e D47E     		.sleb128 -172
 2256 0480 10       		.uleb128 0x10
 2257 0481 31010000 		.4byte	0x131
 2258 0485 03       		.uleb128 0x3
 2259 0486 91       		.byte	0x91
 2260 0487 D87E     		.sleb128 -168
 2261 0489 00       		.byte	0
 2262 048a 0F       		.uleb128 0xf
 2263 048b 52010000 		.4byte	0x152
 2264 048f 68060000 		.4byte	.LBB44
 2265 0493 52000000 		.4byte	.LBE44-.LBB44
 2266 0497 01       		.byte	0x1
 2267 0498 AC01     		.2byte	0x1ac
 2268 049a D6040000 		.4byte	0x4d6
 2269 049e 10       		.uleb128 0x10
 2270 049f 6D010000 		.4byte	0x16d
 2271 04a3 03       		.uleb128 0x3
 2272 04a4 91       		.byte	0x91
 2273 04a5 C87E     		.sleb128 -184
 2274 04a7 10       		.uleb128 0x10
 2275 04a8 63010000 		.4byte	0x163
 2276 04ac 03       		.uleb128 0x3
 2277 04ad 91       		.byte	0x91
 2278 04ae CC7E     		.sleb128 -180
 2279 04b0 11       		.uleb128 0x11
 2280 04b1 68060000 		.4byte	.LBB45
 2281 04b5 52000000 		.4byte	.LBE45-.LBB45
 2282 04b9 12       		.uleb128 0x12
 2283 04ba 77010000 		.4byte	0x177
 2284 04be 03       		.uleb128 0x3
 2285 04bf 91       		.byte	0x91
 2286 04c0 C47E     		.sleb128 -188
 2287 04c2 12       		.uleb128 0x12
 2288 04c3 83010000 		.4byte	0x183
 2289 04c7 03       		.uleb128 0x3
 2290 04c8 91       		.byte	0x91
 2291 04c9 BC7E     		.sleb128 -196
 2292 04cb 12       		.uleb128 0x12
 2293 04cc 8F010000 		.4byte	0x18f
 2294 04d0 03       		.uleb128 0x3
 2295 04d1 91       		.byte	0x91
 2296 04d2 C07E     		.sleb128 -192
 2297 04d4 00       		.byte	0
 2298 04d5 00       		.byte	0
 2299 04d6 0F       		.uleb128 0xf
 2300 04d7 52010000 		.4byte	0x152
 2301 04db EA060000 		.4byte	.LBB46
 2302 04df 52000000 		.4byte	.LBE46-.LBB46
 2303 04e3 01       		.byte	0x1
 2304 04e4 AE01     		.2byte	0x1ae
 2305 04e6 22050000 		.4byte	0x522
 2306 04ea 10       		.uleb128 0x10
 2307 04eb 6D010000 		.4byte	0x16d
 2308 04ef 03       		.uleb128 0x3
 2309 04f0 91       		.byte	0x91
 2310 04f1 B47E     		.sleb128 -204
 2311 04f3 10       		.uleb128 0x10
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 69


 2312 04f4 63010000 		.4byte	0x163
 2313 04f8 03       		.uleb128 0x3
 2314 04f9 91       		.byte	0x91
 2315 04fa B87E     		.sleb128 -200
 2316 04fc 11       		.uleb128 0x11
 2317 04fd EA060000 		.4byte	.LBB47
 2318 0501 52000000 		.4byte	.LBE47-.LBB47
 2319 0505 12       		.uleb128 0x12
 2320 0506 77010000 		.4byte	0x177
 2321 050a 03       		.uleb128 0x3
 2322 050b 91       		.byte	0x91
 2323 050c B07E     		.sleb128 -208
 2324 050e 12       		.uleb128 0x12
 2325 050f 83010000 		.4byte	0x183
 2326 0513 03       		.uleb128 0x3
 2327 0514 91       		.byte	0x91
 2328 0515 A87E     		.sleb128 -216
 2329 0517 12       		.uleb128 0x12
 2330 0518 8F010000 		.4byte	0x18f
 2331 051c 03       		.uleb128 0x3
 2332 051d 91       		.byte	0x91
 2333 051e AC7E     		.sleb128 -212
 2334 0520 00       		.byte	0
 2335 0521 00       		.byte	0
 2336 0522 0F       		.uleb128 0xf
 2337 0523 52010000 		.4byte	0x152
 2338 0527 6C070000 		.4byte	.LBB48
 2339 052b 52000000 		.4byte	.LBE48-.LBB48
 2340 052f 01       		.byte	0x1
 2341 0530 B001     		.2byte	0x1b0
 2342 0532 6E050000 		.4byte	0x56e
 2343 0536 10       		.uleb128 0x10
 2344 0537 6D010000 		.4byte	0x16d
 2345 053b 03       		.uleb128 0x3
 2346 053c 91       		.byte	0x91
 2347 053d A07E     		.sleb128 -224
 2348 053f 10       		.uleb128 0x10
 2349 0540 63010000 		.4byte	0x163
 2350 0544 03       		.uleb128 0x3
 2351 0545 91       		.byte	0x91
 2352 0546 A47E     		.sleb128 -220
 2353 0548 11       		.uleb128 0x11
 2354 0549 6C070000 		.4byte	.LBB49
 2355 054d 52000000 		.4byte	.LBE49-.LBB49
 2356 0551 12       		.uleb128 0x12
 2357 0552 77010000 		.4byte	0x177
 2358 0556 03       		.uleb128 0x3
 2359 0557 91       		.byte	0x91
 2360 0558 9C7E     		.sleb128 -228
 2361 055a 12       		.uleb128 0x12
 2362 055b 83010000 		.4byte	0x183
 2363 055f 03       		.uleb128 0x3
 2364 0560 91       		.byte	0x91
 2365 0561 947E     		.sleb128 -236
 2366 0563 12       		.uleb128 0x12
 2367 0564 8F010000 		.4byte	0x18f
 2368 0568 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 70


 2369 0569 91       		.byte	0x91
 2370 056a 987E     		.sleb128 -232
 2371 056c 00       		.byte	0
 2372 056d 00       		.byte	0
 2373 056e 0F       		.uleb128 0xf
 2374 056f 52010000 		.4byte	0x152
 2375 0573 EE070000 		.4byte	.LBB50
 2376 0577 52000000 		.4byte	.LBE50-.LBB50
 2377 057b 01       		.byte	0x1
 2378 057c B201     		.2byte	0x1b2
 2379 057e BA050000 		.4byte	0x5ba
 2380 0582 10       		.uleb128 0x10
 2381 0583 6D010000 		.4byte	0x16d
 2382 0587 03       		.uleb128 0x3
 2383 0588 91       		.byte	0x91
 2384 0589 8C7E     		.sleb128 -244
 2385 058b 10       		.uleb128 0x10
 2386 058c 63010000 		.4byte	0x163
 2387 0590 03       		.uleb128 0x3
 2388 0591 91       		.byte	0x91
 2389 0592 907E     		.sleb128 -240
 2390 0594 11       		.uleb128 0x11
 2391 0595 EE070000 		.4byte	.LBB51
 2392 0599 52000000 		.4byte	.LBE51-.LBB51
 2393 059d 12       		.uleb128 0x12
 2394 059e 77010000 		.4byte	0x177
 2395 05a2 03       		.uleb128 0x3
 2396 05a3 91       		.byte	0x91
 2397 05a4 887E     		.sleb128 -248
 2398 05a6 12       		.uleb128 0x12
 2399 05a7 83010000 		.4byte	0x183
 2400 05ab 03       		.uleb128 0x3
 2401 05ac 91       		.byte	0x91
 2402 05ad 807E     		.sleb128 -256
 2403 05af 12       		.uleb128 0x12
 2404 05b0 8F010000 		.4byte	0x18f
 2405 05b4 03       		.uleb128 0x3
 2406 05b5 91       		.byte	0x91
 2407 05b6 847E     		.sleb128 -252
 2408 05b8 00       		.byte	0
 2409 05b9 00       		.byte	0
 2410 05ba 13       		.uleb128 0x13
 2411 05bb 52010000 		.4byte	0x152
 2412 05bf B8090000 		.4byte	.LBB52
 2413 05c3 52000000 		.4byte	.LBE52-.LBB52
 2414 05c7 01       		.byte	0x1
 2415 05c8 E601     		.2byte	0x1e6
 2416 05ca 10       		.uleb128 0x10
 2417 05cb 6D010000 		.4byte	0x16d
 2418 05cf 03       		.uleb128 0x3
 2419 05d0 91       		.byte	0x91
 2420 05d1 F87D     		.sleb128 -264
 2421 05d3 10       		.uleb128 0x10
 2422 05d4 63010000 		.4byte	0x163
 2423 05d8 03       		.uleb128 0x3
 2424 05d9 91       		.byte	0x91
 2425 05da FC7D     		.sleb128 -260
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 71


 2426 05dc 11       		.uleb128 0x11
 2427 05dd B8090000 		.4byte	.LBB53
 2428 05e1 52000000 		.4byte	.LBE53-.LBB53
 2429 05e5 12       		.uleb128 0x12
 2430 05e6 77010000 		.4byte	0x177
 2431 05ea 03       		.uleb128 0x3
 2432 05eb 91       		.byte	0x91
 2433 05ec F47D     		.sleb128 -268
 2434 05ee 12       		.uleb128 0x12
 2435 05ef 83010000 		.4byte	0x183
 2436 05f3 03       		.uleb128 0x3
 2437 05f4 91       		.byte	0x91
 2438 05f5 EC7D     		.sleb128 -276
 2439 05f7 12       		.uleb128 0x12
 2440 05f8 8F010000 		.4byte	0x18f
 2441 05fc 03       		.uleb128 0x3
 2442 05fd 91       		.byte	0x91
 2443 05fe F07D     		.sleb128 -272
 2444 0600 00       		.byte	0
 2445 0601 00       		.byte	0
 2446 0602 00       		.byte	0
 2447 0603 00       		.byte	0
 2448              		.section	.debug_abbrev,"",%progbits
 2449              	.Ldebug_abbrev0:
 2450 0000 01       		.uleb128 0x1
 2451 0001 11       		.uleb128 0x11
 2452 0002 01       		.byte	0x1
 2453 0003 25       		.uleb128 0x25
 2454 0004 0E       		.uleb128 0xe
 2455 0005 13       		.uleb128 0x13
 2456 0006 0B       		.uleb128 0xb
 2457 0007 03       		.uleb128 0x3
 2458 0008 0E       		.uleb128 0xe
 2459 0009 1B       		.uleb128 0x1b
 2460 000a 0E       		.uleb128 0xe
 2461 000b 55       		.uleb128 0x55
 2462 000c 17       		.uleb128 0x17
 2463 000d 11       		.uleb128 0x11
 2464 000e 01       		.uleb128 0x1
 2465 000f 10       		.uleb128 0x10
 2466 0010 17       		.uleb128 0x17
 2467 0011 00       		.byte	0
 2468 0012 00       		.byte	0
 2469 0013 02       		.uleb128 0x2
 2470 0014 24       		.uleb128 0x24
 2471 0015 00       		.byte	0
 2472 0016 0B       		.uleb128 0xb
 2473 0017 0B       		.uleb128 0xb
 2474 0018 3E       		.uleb128 0x3e
 2475 0019 0B       		.uleb128 0xb
 2476 001a 03       		.uleb128 0x3
 2477 001b 0E       		.uleb128 0xe
 2478 001c 00       		.byte	0
 2479 001d 00       		.byte	0
 2480 001e 03       		.uleb128 0x3
 2481 001f 16       		.uleb128 0x16
 2482 0020 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 72


 2483 0021 03       		.uleb128 0x3
 2484 0022 0E       		.uleb128 0xe
 2485 0023 3A       		.uleb128 0x3a
 2486 0024 0B       		.uleb128 0xb
 2487 0025 3B       		.uleb128 0x3b
 2488 0026 0B       		.uleb128 0xb
 2489 0027 49       		.uleb128 0x49
 2490 0028 13       		.uleb128 0x13
 2491 0029 00       		.byte	0
 2492 002a 00       		.byte	0
 2493 002b 04       		.uleb128 0x4
 2494 002c 24       		.uleb128 0x24
 2495 002d 00       		.byte	0
 2496 002e 0B       		.uleb128 0xb
 2497 002f 0B       		.uleb128 0xb
 2498 0030 3E       		.uleb128 0x3e
 2499 0031 0B       		.uleb128 0xb
 2500 0032 03       		.uleb128 0x3
 2501 0033 08       		.uleb128 0x8
 2502 0034 00       		.byte	0
 2503 0035 00       		.byte	0
 2504 0036 05       		.uleb128 0x5
 2505 0037 16       		.uleb128 0x16
 2506 0038 00       		.byte	0
 2507 0039 03       		.uleb128 0x3
 2508 003a 0E       		.uleb128 0xe
 2509 003b 3A       		.uleb128 0x3a
 2510 003c 0B       		.uleb128 0xb
 2511 003d 3B       		.uleb128 0x3b
 2512 003e 05       		.uleb128 0x5
 2513 003f 49       		.uleb128 0x49
 2514 0040 13       		.uleb128 0x13
 2515 0041 00       		.byte	0
 2516 0042 00       		.byte	0
 2517 0043 06       		.uleb128 0x6
 2518 0044 0F       		.uleb128 0xf
 2519 0045 00       		.byte	0
 2520 0046 0B       		.uleb128 0xb
 2521 0047 0B       		.uleb128 0xb
 2522 0048 49       		.uleb128 0x49
 2523 0049 13       		.uleb128 0x13
 2524 004a 00       		.byte	0
 2525 004b 00       		.byte	0
 2526 004c 07       		.uleb128 0x7
 2527 004d 2E       		.uleb128 0x2e
 2528 004e 01       		.byte	0x1
 2529 004f 03       		.uleb128 0x3
 2530 0050 0E       		.uleb128 0xe
 2531 0051 3A       		.uleb128 0x3a
 2532 0052 0B       		.uleb128 0xb
 2533 0053 3B       		.uleb128 0x3b
 2534 0054 05       		.uleb128 0x5
 2535 0055 27       		.uleb128 0x27
 2536 0056 19       		.uleb128 0x19
 2537 0057 49       		.uleb128 0x49
 2538 0058 13       		.uleb128 0x13
 2539 0059 20       		.uleb128 0x20
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 73


 2540 005a 0B       		.uleb128 0xb
 2541 005b 01       		.uleb128 0x1
 2542 005c 13       		.uleb128 0x13
 2543 005d 00       		.byte	0
 2544 005e 00       		.byte	0
 2545 005f 08       		.uleb128 0x8
 2546 0060 05       		.uleb128 0x5
 2547 0061 00       		.byte	0
 2548 0062 03       		.uleb128 0x3
 2549 0063 08       		.uleb128 0x8
 2550 0064 3A       		.uleb128 0x3a
 2551 0065 0B       		.uleb128 0xb
 2552 0066 3B       		.uleb128 0x3b
 2553 0067 05       		.uleb128 0x5
 2554 0068 49       		.uleb128 0x49
 2555 0069 13       		.uleb128 0x13
 2556 006a 00       		.byte	0
 2557 006b 00       		.byte	0
 2558 006c 09       		.uleb128 0x9
 2559 006d 34       		.uleb128 0x34
 2560 006e 00       		.byte	0
 2561 006f 03       		.uleb128 0x3
 2562 0070 0E       		.uleb128 0xe
 2563 0071 3A       		.uleb128 0x3a
 2564 0072 0B       		.uleb128 0xb
 2565 0073 3B       		.uleb128 0x3b
 2566 0074 05       		.uleb128 0x5
 2567 0075 49       		.uleb128 0x49
 2568 0076 13       		.uleb128 0x13
 2569 0077 00       		.byte	0
 2570 0078 00       		.byte	0
 2571 0079 0A       		.uleb128 0xa
 2572 007a 34       		.uleb128 0x34
 2573 007b 00       		.byte	0
 2574 007c 03       		.uleb128 0x3
 2575 007d 08       		.uleb128 0x8
 2576 007e 3A       		.uleb128 0x3a
 2577 007f 0B       		.uleb128 0xb
 2578 0080 3B       		.uleb128 0x3b
 2579 0081 05       		.uleb128 0x5
 2580 0082 49       		.uleb128 0x49
 2581 0083 13       		.uleb128 0x13
 2582 0084 00       		.byte	0
 2583 0085 00       		.byte	0
 2584 0086 0B       		.uleb128 0xb
 2585 0087 2E       		.uleb128 0x2e
 2586 0088 01       		.byte	0x1
 2587 0089 3F       		.uleb128 0x3f
 2588 008a 19       		.uleb128 0x19
 2589 008b 03       		.uleb128 0x3
 2590 008c 0E       		.uleb128 0xe
 2591 008d 3A       		.uleb128 0x3a
 2592 008e 0B       		.uleb128 0xb
 2593 008f 3B       		.uleb128 0x3b
 2594 0090 0B       		.uleb128 0xb
 2595 0091 27       		.uleb128 0x27
 2596 0092 19       		.uleb128 0x19
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 74


 2597 0093 11       		.uleb128 0x11
 2598 0094 01       		.uleb128 0x1
 2599 0095 12       		.uleb128 0x12
 2600 0096 06       		.uleb128 0x6
 2601 0097 40       		.uleb128 0x40
 2602 0098 18       		.uleb128 0x18
 2603 0099 9642     		.uleb128 0x2116
 2604 009b 19       		.uleb128 0x19
 2605 009c 00       		.byte	0
 2606 009d 00       		.byte	0
 2607 009e 0C       		.uleb128 0xc
 2608 009f 05       		.uleb128 0x5
 2609 00a0 00       		.byte	0
 2610 00a1 03       		.uleb128 0x3
 2611 00a2 0E       		.uleb128 0xe
 2612 00a3 3A       		.uleb128 0x3a
 2613 00a4 0B       		.uleb128 0xb
 2614 00a5 3B       		.uleb128 0x3b
 2615 00a6 0B       		.uleb128 0xb
 2616 00a7 49       		.uleb128 0x49
 2617 00a8 13       		.uleb128 0x13
 2618 00a9 02       		.uleb128 0x2
 2619 00aa 18       		.uleb128 0x18
 2620 00ab 00       		.byte	0
 2621 00ac 00       		.byte	0
 2622 00ad 0D       		.uleb128 0xd
 2623 00ae 34       		.uleb128 0x34
 2624 00af 00       		.byte	0
 2625 00b0 03       		.uleb128 0x3
 2626 00b1 0E       		.uleb128 0xe
 2627 00b2 3A       		.uleb128 0x3a
 2628 00b3 0B       		.uleb128 0xb
 2629 00b4 3B       		.uleb128 0x3b
 2630 00b5 0B       		.uleb128 0xb
 2631 00b6 49       		.uleb128 0x49
 2632 00b7 13       		.uleb128 0x13
 2633 00b8 02       		.uleb128 0x2
 2634 00b9 18       		.uleb128 0x18
 2635 00ba 00       		.byte	0
 2636 00bb 00       		.byte	0
 2637 00bc 0E       		.uleb128 0xe
 2638 00bd 34       		.uleb128 0x34
 2639 00be 00       		.byte	0
 2640 00bf 03       		.uleb128 0x3
 2641 00c0 08       		.uleb128 0x8
 2642 00c1 3A       		.uleb128 0x3a
 2643 00c2 0B       		.uleb128 0xb
 2644 00c3 3B       		.uleb128 0x3b
 2645 00c4 0B       		.uleb128 0xb
 2646 00c5 49       		.uleb128 0x49
 2647 00c6 13       		.uleb128 0x13
 2648 00c7 02       		.uleb128 0x2
 2649 00c8 18       		.uleb128 0x18
 2650 00c9 00       		.byte	0
 2651 00ca 00       		.byte	0
 2652 00cb 0F       		.uleb128 0xf
 2653 00cc 1D       		.uleb128 0x1d
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 75


 2654 00cd 01       		.byte	0x1
 2655 00ce 31       		.uleb128 0x31
 2656 00cf 13       		.uleb128 0x13
 2657 00d0 11       		.uleb128 0x11
 2658 00d1 01       		.uleb128 0x1
 2659 00d2 12       		.uleb128 0x12
 2660 00d3 06       		.uleb128 0x6
 2661 00d4 58       		.uleb128 0x58
 2662 00d5 0B       		.uleb128 0xb
 2663 00d6 59       		.uleb128 0x59
 2664 00d7 05       		.uleb128 0x5
 2665 00d8 01       		.uleb128 0x1
 2666 00d9 13       		.uleb128 0x13
 2667 00da 00       		.byte	0
 2668 00db 00       		.byte	0
 2669 00dc 10       		.uleb128 0x10
 2670 00dd 05       		.uleb128 0x5
 2671 00de 00       		.byte	0
 2672 00df 31       		.uleb128 0x31
 2673 00e0 13       		.uleb128 0x13
 2674 00e1 02       		.uleb128 0x2
 2675 00e2 18       		.uleb128 0x18
 2676 00e3 00       		.byte	0
 2677 00e4 00       		.byte	0
 2678 00e5 11       		.uleb128 0x11
 2679 00e6 0B       		.uleb128 0xb
 2680 00e7 01       		.byte	0x1
 2681 00e8 11       		.uleb128 0x11
 2682 00e9 01       		.uleb128 0x1
 2683 00ea 12       		.uleb128 0x12
 2684 00eb 06       		.uleb128 0x6
 2685 00ec 00       		.byte	0
 2686 00ed 00       		.byte	0
 2687 00ee 12       		.uleb128 0x12
 2688 00ef 34       		.uleb128 0x34
 2689 00f0 00       		.byte	0
 2690 00f1 31       		.uleb128 0x31
 2691 00f2 13       		.uleb128 0x13
 2692 00f3 02       		.uleb128 0x2
 2693 00f4 18       		.uleb128 0x18
 2694 00f5 00       		.byte	0
 2695 00f6 00       		.byte	0
 2696 00f7 13       		.uleb128 0x13
 2697 00f8 1D       		.uleb128 0x1d
 2698 00f9 01       		.byte	0x1
 2699 00fa 31       		.uleb128 0x31
 2700 00fb 13       		.uleb128 0x13
 2701 00fc 11       		.uleb128 0x11
 2702 00fd 01       		.uleb128 0x1
 2703 00fe 12       		.uleb128 0x12
 2704 00ff 06       		.uleb128 0x6
 2705 0100 58       		.uleb128 0x58
 2706 0101 0B       		.uleb128 0xb
 2707 0102 59       		.uleb128 0x59
 2708 0103 05       		.uleb128 0x5
 2709 0104 00       		.byte	0
 2710 0105 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 76


 2711 0106 00       		.byte	0
 2712              		.section	.debug_aranges,"",%progbits
 2713 0000 1C000000 		.4byte	0x1c
 2714 0004 0200     		.2byte	0x2
 2715 0006 00000000 		.4byte	.Ldebug_info0
 2716 000a 04       		.byte	0x4
 2717 000b 00       		.byte	0
 2718 000c 0000     		.2byte	0
 2719 000e 0000     		.2byte	0
 2720 0010 00000000 		.4byte	.LFB82
 2721 0014 5C0A0000 		.4byte	.LFE82-.LFB82
 2722 0018 00000000 		.4byte	0
 2723 001c 00000000 		.4byte	0
 2724              		.section	.debug_ranges,"",%progbits
 2725              	.Ldebug_ranges0:
 2726 0000 00000000 		.4byte	.LFB82
 2727 0004 5C0A0000 		.4byte	.LFE82
 2728 0008 00000000 		.4byte	0
 2729 000c 00000000 		.4byte	0
 2730              		.section	.debug_line,"",%progbits
 2731              	.Ldebug_line0:
 2732 0000 13030000 		.section	.debug_str,"MS",%progbits,1
 2732      02005D01 
 2732      00000201 
 2732      FB0E0D00 
 2732      01010101 
 2733              	.LASF38:
 2734 0000 61636333 		.ascii	"acc3\000"
 2734      00
 2735              	.LASF4:
 2736 0005 5F5F696E 		.ascii	"__int16_t\000"
 2736      7431365F 
 2736      7400
 2737              	.LASF27:
 2738 000f 70537263 		.ascii	"pSrcA\000"
 2738      4100
 2739              	.LASF29:
 2740 0015 70537263 		.ascii	"pSrcB\000"
 2740      4200
 2741              	.LASF5:
 2742 001b 5F5F696E 		.ascii	"__int32_t\000"
 2742      7433325F 
 2742      7400
 2743              	.LASF42:
 2744 0025 70536372 		.ascii	"pScr\000"
 2744      00
 2745              	.LASF46:
 2746 002a 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 2746      73657273 
 2746      5C666E65 
 2746      7665735C 
 2746      446F6375 
 2747 0057 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 2747      655F7370 
 2747      6565645F 
 2747      73656E73 
 2747      6F722E63 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 77


 2748              	.LASF40:
 2749 0070 6F757442 		.ascii	"outBlockSize\000"
 2749      6C6F636B 
 2749      53697A65 
 2749      00
 2750              	.LASF23:
 2751 007d 5F5F534D 		.ascii	"__SMLADX\000"
 2751      4C414458 
 2751      00
 2752              	.LASF20:
 2753 0086 7131355F 		.ascii	"q15_t\000"
 2753      7400
 2754              	.LASF43:
 2755 008c 704F7574 		.ascii	"pOut\000"
 2755      00
 2756              	.LASF21:
 2757 0091 7133315F 		.ascii	"q31_t\000"
 2757      7400
 2758              	.LASF1:
 2759 0097 756E7369 		.ascii	"unsigned char\000"
 2759      676E6564 
 2759      20636861 
 2759      7200
 2760              	.LASF34:
 2761 00a5 70496E32 		.ascii	"pIn2\000"
 2761      00
 2762              	.LASF39:
 2763 00aa 626C6B43 		.ascii	"blkCnt\000"
 2763      6E7400
 2764              	.LASF47:
 2765 00b1 61726D5F 		.ascii	"arm_correlate_fast_opt_q15\000"
 2765      636F7272 
 2765      656C6174 
 2765      655F6661 
 2765      73745F6F 
 2766              	.LASF8:
 2767 00cc 6C6F6E67 		.ascii	"long unsigned int\000"
 2767      20756E73 
 2767      69676E65 
 2767      6420696E 
 2767      7400
 2768              	.LASF3:
 2769 00de 73686F72 		.ascii	"short unsigned int\000"
 2769      7420756E 
 2769      7369676E 
 2769      65642069 
 2769      6E7400
 2770              	.LASF31:
 2771 00f1 70447374 		.ascii	"pDst\000"
 2771      00
 2772              	.LASF26:
 2773 00f6 6E65674D 		.ascii	"negMin\000"
 2773      696E00
 2774              	.LASF41:
 2775 00fd 74617043 		.ascii	"tapCnt\000"
 2775      6E7400
 2776              	.LASF17:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 78


 2777 0104 646F7562 		.ascii	"double\000"
 2777      6C6500
 2778              	.LASF7:
 2779 010b 5F5F7569 		.ascii	"__uint32_t\000"
 2779      6E743332 
 2779      5F7400
 2780              	.LASF11:
 2781 0116 756E7369 		.ascii	"unsigned int\000"
 2781      676E6564 
 2781      20696E74 
 2781      00
 2782              	.LASF10:
 2783 0123 6C6F6E67 		.ascii	"long long unsigned int\000"
 2783      206C6F6E 
 2783      6720756E 
 2783      7369676E 
 2783      65642069 
 2784              	.LASF44:
 2785 013a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2785      4320342E 
 2785      392E3320 
 2785      32303135 
 2785      30333033 
 2786 016d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 2786      20726576 
 2786      6973696F 
 2786      6E203232 
 2786      31323230 
 2787 01a0 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 2787      30202D66 
 2787      66756E63 
 2787      74696F6E 
 2787      2D736563 
 2788              	.LASF12:
 2789 01cc 696E7431 		.ascii	"int16_t\000"
 2789      365F7400 
 2790              	.LASF22:
 2791 01d4 5F5F534D 		.ascii	"__SMLAD\000"
 2791      4C414400 
 2792              	.LASF24:
 2793 01dc 5F5F5353 		.ascii	"__SSAT\000"
 2793      415400
 2794              	.LASF13:
 2795 01e3 696E7433 		.ascii	"int32_t\000"
 2795      325F7400 
 2796              	.LASF15:
 2797 01eb 73697A65 		.ascii	"sizetype\000"
 2797      74797065 
 2797      00
 2798              	.LASF32:
 2799 01f4 70536372 		.ascii	"pScratch\000"
 2799      61746368 
 2799      00
 2800              	.LASF9:
 2801 01fd 6C6F6E67 		.ascii	"long long int\000"
 2801      206C6F6E 
 2801      6720696E 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 79


 2801      7400
 2802              	.LASF16:
 2803 020b 63686172 		.ascii	"char\000"
 2803      00
 2804              	.LASF28:
 2805 0210 73726341 		.ascii	"srcALen\000"
 2805      4C656E00 
 2806              	.LASF2:
 2807 0218 73686F72 		.ascii	"short int\000"
 2807      7420696E 
 2807      7400
 2808              	.LASF25:
 2809 0222 706F734D 		.ascii	"posMax\000"
 2809      617800
 2810              	.LASF45:
 2811 0229 536F7572 		.ascii	"Source\\FilteringFunctions\\arm_correlate_fast_opt_"
 2811      63655C46 
 2811      696C7465 
 2811      72696E67 
 2811      46756E63 
 2812 025a 7131352E 		.ascii	"q15.c\000"
 2812      6300
 2813              	.LASF14:
 2814 0260 75696E74 		.ascii	"uint32_t\000"
 2814      33325F74 
 2814      00
 2815              	.LASF6:
 2816 0269 6C6F6E67 		.ascii	"long int\000"
 2816      20696E74 
 2816      00
 2817              	.LASF19:
 2818 0272 6C6F6E67 		.ascii	"long double\000"
 2818      20646F75 
 2818      626C6500 
 2819              	.LASF18:
 2820 027e 666C6F61 		.ascii	"float\000"
 2820      7400
 2821              	.LASF0:
 2822 0284 7369676E 		.ascii	"signed char\000"
 2822      65642063 
 2822      68617200 
 2823              	.LASF30:
 2824 0290 73726342 		.ascii	"srcBLen\000"
 2824      4C656E00 
 2825              	.LASF33:
 2826 0298 70496E31 		.ascii	"pIn1\000"
 2826      00
 2827              	.LASF35:
 2828 029d 61636330 		.ascii	"acc0\000"
 2828      00
 2829              	.LASF36:
 2830 02a2 61636331 		.ascii	"acc1\000"
 2830      00
 2831              	.LASF37:
 2832 02a7 61636332 		.ascii	"acc2\000"
 2832      00
 2833              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccExwFcu.s 			page 80


