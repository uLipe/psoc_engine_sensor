ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_conv_partial_opt_q7.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.arm_conv_partial_opt_q7,"ax",%progbits
  18              		.align	2
  19              		.global	arm_conv_partial_opt_q7
  20              		.code	16
  21              		.thumb_func
  22              		.type	arm_conv_partial_opt_q7, %function
  23              	arm_conv_partial_opt_q7:
  24              	.LFB82:
  25              		.file 1 "Source\\FilteringFunctions\\arm_conv_partial_opt_q7.c"
   1:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** /* ----------------------------------------------------------------------
   2:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * Project:      CMSIS DSP Library
   3:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * Title:        arm_conv_partial_opt_q7.c
   4:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * Description:  Partial convolution of Q7 sequences
   5:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
   6:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * $Date:        27. January 2017
   7:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * $Revision:    V.1.5.1
   8:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
   9:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * Target Processor: Cortex-M cores
  10:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * -------------------------------------------------------------------- */
  11:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** /*
  12:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
  14:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
  16:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * not use this file except in compliance with the License.
  18:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * You may obtain a copy of the License at
  19:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
  20:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
  22:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * See the License for the specific language governing permissions and
  26:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * limitations under the License.
  27:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  */
  28:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  29:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** #include "arm_math.h"
  30:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  31:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** /**
  32:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @ingroup groupFilters
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 2


  33:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  */
  34:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  35:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** /**
  36:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @addtogroup PartialConv
  37:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @{
  38:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  */
  39:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  40:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** /**
  41:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @brief Partial convolution of Q7 sequences.
  42:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @param[in]       *pSrcA points to the first input sequence.
  43:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @param[in]       srcALen length of the first input sequence.
  44:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @param[in]       *pSrcB points to the second input sequence.
  45:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @param[in]       srcBLen length of the second input sequence.
  46:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @param[out]      *pDst points to the location where the output result is written.
  47:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @param[in]       firstIndex is the first output sample to start with.
  48:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @param[in]       numPoints is the number of output points to be computed.
  49:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @param[in]      *pScratch1 points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen)
  50:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @param[in]      *pScratch2 points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen
  51:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMEN
  52:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
  53:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  * \par Restrictions
  54:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  *  If the silicon does not support unaligned memory access enable the macro UNALIGNED_SUPPORT_DISA
  55:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  *	In this case input, output, scratch1 and scratch2 buffers should be aligned by 32-bit
  56:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
  57:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
  58:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  *
  59:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****  */
  60:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  61:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  62:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
  63:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  64:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** arm_status arm_conv_partial_opt_q7(
  65:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   q7_t * pSrcA,
  66:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   uint32_t srcALen,
  67:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   q7_t * pSrcB,
  68:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   uint32_t srcBLen,
  69:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   q7_t * pDst,
  70:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   uint32_t firstIndex,
  71:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   uint32_t numPoints,
  72:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   q15_t * pScratch1,
  73:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   q15_t * pScratch2)
  74:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** {
  26              		.loc 1 74 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 CEB0     		sub	sp, sp, #312
  33              		.cfi_def_cfa_offset 320
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  36 0006 F860     		str	r0, [r7, #12]
  37 0008 B960     		str	r1, [r7, #8]
  38 000a 7A60     		str	r2, [r7, #4]
  39 000c 3B60     		str	r3, [r7]
  75:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 3


  76:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   q15_t *pScr2, *pScr1;                          /* Intermediate pointers for scratch pointers */
  77:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   q15_t x4;                                      /* Temporary input variable */
  78:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   q7_t *pIn1, *pIn2;                             /* inputA and inputB pointer */
  79:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   uint32_t j, k, blkCnt, tapCnt;                 /* loop counter */
  80:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   q7_t *px;                                      /* Temporary input1 pointer */
  81:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   q15_t *py;                                     /* Temporary input2 pointer */
  82:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   q31_t acc0, acc1, acc2, acc3;                  /* Accumulator */
  83:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   q31_t x1, x2, x3, y1;                          /* Temporary input variables */
  84:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   arm_status status;
  85:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   q7_t *pOut = pDst;                             /* output pointer */
  40              		.loc 1 85 0
  41 000e A023     		mov	r3, #160
  42 0010 5B00     		lsl	r3, r3, #1
  43 0012 FB18     		add	r3, r7, r3
  44 0014 1B68     		ldr	r3, [r3]
  45 0016 3B61     		str	r3, [r7, #16]
  86:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   q7_t out0, out1, out2, out3;                   /* temporary variables */
  87:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  88:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   /* Check for range of output samples to be calculated */
  89:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   if ((firstIndex + numPoints) > ((srcALen + (srcBLen - 1u))))
  46              		.loc 1 89 0
  47 0018 A223     		mov	r3, #162
  48 001a 5B00     		lsl	r3, r3, #1
  49 001c FB18     		add	r3, r7, r3
  50 001e 1A68     		ldr	r2, [r3]
  51 0020 A423     		mov	r3, #164
  52 0022 5B00     		lsl	r3, r3, #1
  53 0024 FB18     		add	r3, r7, r3
  54 0026 1B68     		ldr	r3, [r3]
  55 0028 D218     		add	r2, r2, r3
  56 002a 3968     		ldr	r1, [r7]
  57 002c BB68     		ldr	r3, [r7, #8]
  58 002e CB18     		add	r3, r1, r3
  59 0030 013B     		sub	r3, r3, #1
  60 0032 9A42     		cmp	r2, r3
  61 0034 06D9     		bls	.L2
  90:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   {
  91:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Set status as ARM_MATH_ARGUMENT_ERROR */
  92:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     status = ARM_MATH_ARGUMENT_ERROR;
  62              		.loc 1 92 0
  63 0036 0823     		mov	r3, #8
  64 0038 FF33     		add	r3, r3, #255
  65 003a FB18     		add	r3, r7, r3
  66 003c FF22     		mov	r2, #255
  67 003e 1A70     		strb	r2, [r3]
  68 0040 00F04EFE 		bl	.L3	@ far jump
  69              	.L2:
  93:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   }
  94:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   else
  95:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   {
  96:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
  97:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* The algorithm implementation is based on the lengths of the inputs. */
  98:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* srcB is always made to slide across srcA. */
  99:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* So srcBLen is always considered as shorter or equal to srcALen */
 100:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     if (srcALen >= srcBLen)
  70              		.loc 1 100 0
  71 0044 BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 4


  72 0046 3B68     		ldr	r3, [r7]
  73 0048 9A42     		cmp	r2, r3
  74 004a 0AD3     		bcc	.L4
 101:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 102:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Initialization of inputA pointer */
 103:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       pIn1 = pSrcA;
  75              		.loc 1 103 0
  76 004c FB68     		ldr	r3, [r7, #12]
  77 004e 9A22     		mov	r2, #154
  78 0050 5200     		lsl	r2, r2, #1
  79 0052 BA18     		add	r2, r7, r2
  80 0054 1360     		str	r3, [r2]
 104:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 105:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Initialization of inputB pointer */
 106:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       pIn2 = pSrcB;
  81              		.loc 1 106 0
  82 0056 7B68     		ldr	r3, [r7, #4]
  83 0058 9822     		mov	r2, #152
  84 005a 5200     		lsl	r2, r2, #1
  85 005c BA18     		add	r2, r7, r2
  86 005e 1360     		str	r3, [r2]
  87 0060 13E0     		b	.L5
  88              	.L4:
 107:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     }
 108:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     else
 109:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 110:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Initialization of inputA pointer */
 111:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       pIn1 = pSrcB;
  89              		.loc 1 111 0
  90 0062 7B68     		ldr	r3, [r7, #4]
  91 0064 9A22     		mov	r2, #154
  92 0066 5200     		lsl	r2, r2, #1
  93 0068 BA18     		add	r2, r7, r2
  94 006a 1360     		str	r3, [r2]
 112:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 113:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Initialization of inputB pointer */
 114:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       pIn2 = pSrcA;
  95              		.loc 1 114 0
  96 006c FB68     		ldr	r3, [r7, #12]
  97 006e 9822     		mov	r2, #152
  98 0070 5200     		lsl	r2, r2, #1
  99 0072 BA18     		add	r2, r7, r2
 100 0074 1360     		str	r3, [r2]
 115:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 116:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* srcBLen is always considered as shorter or equal to srcALen */
 117:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       j = srcBLen;
 101              		.loc 1 117 0
 102 0076 3B68     		ldr	r3, [r7]
 103 0078 7A1C     		add	r2, r7, #1
 104 007a FF32     		add	r2, r2, #255
 105 007c 1360     		str	r3, [r2]
 118:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       srcBLen = srcALen;
 106              		.loc 1 118 0
 107 007e BB68     		ldr	r3, [r7, #8]
 108 0080 3B60     		str	r3, [r7]
 119:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       srcALen = j;
 109              		.loc 1 119 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 5


 110 0082 7B1C     		add	r3, r7, #1
 111 0084 FF33     		add	r3, r3, #255
 112 0086 1B68     		ldr	r3, [r3]
 113 0088 BB60     		str	r3, [r7, #8]
 114              	.L5:
 120:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     }
 121:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 122:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* pointer to take end of scratch2 buffer */
 123:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     pScr2 = pScratch2;
 115              		.loc 1 123 0
 116 008a A823     		mov	r3, #168
 117 008c 5B00     		lsl	r3, r3, #1
 118 008e FB18     		add	r3, r7, r3
 119 0090 1B68     		ldr	r3, [r3]
 120 0092 BB61     		str	r3, [r7, #24]
 124:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 125:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* points to smaller length sequence */
 126:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     px = pIn2 + srcBLen - 1;
 121              		.loc 1 126 0
 122 0094 3B68     		ldr	r3, [r7]
 123 0096 013B     		sub	r3, r3, #1
 124 0098 9822     		mov	r2, #152
 125 009a 5200     		lsl	r2, r2, #1
 126 009c BA18     		add	r2, r7, r2
 127 009e 1268     		ldr	r2, [r2]
 128 00a0 D318     		add	r3, r2, r3
 129 00a2 9022     		mov	r2, #144
 130 00a4 5200     		lsl	r2, r2, #1
 131 00a6 BA18     		add	r2, r7, r2
 132 00a8 1360     		str	r3, [r2]
 127:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 128:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Apply loop unrolling and do 4 Copies simultaneously. */
 129:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     k = srcBLen >> 2u;
 133              		.loc 1 129 0
 134 00aa 3B68     		ldr	r3, [r7]
 135 00ac 9B08     		lsr	r3, r3, #2
 136 00ae 9622     		mov	r2, #150
 137 00b0 5200     		lsl	r2, r2, #1
 138 00b2 BA18     		add	r2, r7, r2
 139 00b4 1360     		str	r3, [r2]
 130:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 131:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* First part of the processing with loop unrolling copies 4 data points at a time.
 132:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****      ** a second loop below copies for the remaining 1 to 3 samples. */
 133:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     while (k > 0u)
 140              		.loc 1 133 0
 141 00b6 5CE0     		b	.L6
 142              	.L7:
 134:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 135:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* copy second buffer in reversal manner */
 136:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * px--;
 143              		.loc 1 136 0
 144 00b8 9023     		mov	r3, #144
 145 00ba 5B00     		lsl	r3, r3, #1
 146 00bc FB18     		add	r3, r7, r3
 147 00be 1B68     		ldr	r3, [r3]
 148 00c0 5A1E     		sub	r2, r3, #1
 149 00c2 9021     		mov	r1, #144
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 6


 150 00c4 4900     		lsl	r1, r1, #1
 151 00c6 7918     		add	r1, r7, r1
 152 00c8 0A60     		str	r2, [r1]
 153 00ca 1A78     		ldrb	r2, [r3]
 154 00cc FE23     		mov	r3, #254
 155 00ce FB18     		add	r3, r7, r3
 156 00d0 52B2     		sxtb	r2, r2
 157 00d2 1A80     		strh	r2, [r3]
 137:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr2++ = x4;
 158              		.loc 1 137 0
 159 00d4 BB69     		ldr	r3, [r7, #24]
 160 00d6 9A1C     		add	r2, r3, #2
 161 00d8 BA61     		str	r2, [r7, #24]
 162 00da FE22     		mov	r2, #254
 163 00dc BA18     		add	r2, r7, r2
 164 00de 1288     		ldrh	r2, [r2]
 165 00e0 1A80     		strh	r2, [r3]
 138:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * px--;
 166              		.loc 1 138 0
 167 00e2 9023     		mov	r3, #144
 168 00e4 5B00     		lsl	r3, r3, #1
 169 00e6 FB18     		add	r3, r7, r3
 170 00e8 1B68     		ldr	r3, [r3]
 171 00ea 5A1E     		sub	r2, r3, #1
 172 00ec 9021     		mov	r1, #144
 173 00ee 4900     		lsl	r1, r1, #1
 174 00f0 7918     		add	r1, r7, r1
 175 00f2 0A60     		str	r2, [r1]
 176 00f4 1A78     		ldrb	r2, [r3]
 177 00f6 FE23     		mov	r3, #254
 178 00f8 FB18     		add	r3, r7, r3
 179 00fa 52B2     		sxtb	r2, r2
 180 00fc 1A80     		strh	r2, [r3]
 139:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr2++ = x4;
 181              		.loc 1 139 0
 182 00fe BB69     		ldr	r3, [r7, #24]
 183 0100 9A1C     		add	r2, r3, #2
 184 0102 BA61     		str	r2, [r7, #24]
 185 0104 FE22     		mov	r2, #254
 186 0106 BA18     		add	r2, r7, r2
 187 0108 1288     		ldrh	r2, [r2]
 188 010a 1A80     		strh	r2, [r3]
 140:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * px--;
 189              		.loc 1 140 0
 190 010c 9023     		mov	r3, #144
 191 010e 5B00     		lsl	r3, r3, #1
 192 0110 FB18     		add	r3, r7, r3
 193 0112 1B68     		ldr	r3, [r3]
 194 0114 5A1E     		sub	r2, r3, #1
 195 0116 9021     		mov	r1, #144
 196 0118 4900     		lsl	r1, r1, #1
 197 011a 7918     		add	r1, r7, r1
 198 011c 0A60     		str	r2, [r1]
 199 011e 1A78     		ldrb	r2, [r3]
 200 0120 FE23     		mov	r3, #254
 201 0122 FB18     		add	r3, r7, r3
 202 0124 52B2     		sxtb	r2, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 7


 203 0126 1A80     		strh	r2, [r3]
 141:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr2++ = x4;
 204              		.loc 1 141 0
 205 0128 BB69     		ldr	r3, [r7, #24]
 206 012a 9A1C     		add	r2, r3, #2
 207 012c BA61     		str	r2, [r7, #24]
 208 012e FE22     		mov	r2, #254
 209 0130 BA18     		add	r2, r7, r2
 210 0132 1288     		ldrh	r2, [r2]
 211 0134 1A80     		strh	r2, [r3]
 142:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * px--;
 212              		.loc 1 142 0
 213 0136 9023     		mov	r3, #144
 214 0138 5B00     		lsl	r3, r3, #1
 215 013a FB18     		add	r3, r7, r3
 216 013c 1B68     		ldr	r3, [r3]
 217 013e 5A1E     		sub	r2, r3, #1
 218 0140 9021     		mov	r1, #144
 219 0142 4900     		lsl	r1, r1, #1
 220 0144 7918     		add	r1, r7, r1
 221 0146 0A60     		str	r2, [r1]
 222 0148 1A78     		ldrb	r2, [r3]
 223 014a FE23     		mov	r3, #254
 224 014c FB18     		add	r3, r7, r3
 225 014e 52B2     		sxtb	r2, r2
 226 0150 1A80     		strh	r2, [r3]
 143:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr2++ = x4;
 227              		.loc 1 143 0
 228 0152 BB69     		ldr	r3, [r7, #24]
 229 0154 9A1C     		add	r2, r3, #2
 230 0156 BA61     		str	r2, [r7, #24]
 231 0158 FE22     		mov	r2, #254
 232 015a BA18     		add	r2, r7, r2
 233 015c 1288     		ldrh	r2, [r2]
 234 015e 1A80     		strh	r2, [r3]
 144:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 145:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Decrement the loop counter */
 146:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       k--;
 235              		.loc 1 146 0
 236 0160 9623     		mov	r3, #150
 237 0162 5B00     		lsl	r3, r3, #1
 238 0164 FB18     		add	r3, r7, r3
 239 0166 1B68     		ldr	r3, [r3]
 240 0168 013B     		sub	r3, r3, #1
 241 016a 9622     		mov	r2, #150
 242 016c 5200     		lsl	r2, r2, #1
 243 016e BA18     		add	r2, r7, r2
 244 0170 1360     		str	r3, [r2]
 245              	.L6:
 133:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 246              		.loc 1 133 0
 247 0172 9623     		mov	r3, #150
 248 0174 5B00     		lsl	r3, r3, #1
 249 0176 FB18     		add	r3, r7, r3
 250 0178 1B68     		ldr	r3, [r3]
 251 017a 002B     		cmp	r3, #0
 252 017c 9CD1     		bne	.L7
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 8


 147:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     }
 148:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 149:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* If the count is not a multiple of 4, copy remaining samples here.
 150:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****      ** No loop unrolling is used. */
 151:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     k = srcBLen % 0x4u;
 253              		.loc 1 151 0
 254 017e 3B68     		ldr	r3, [r7]
 255 0180 0322     		mov	r2, #3
 256 0182 1340     		and	r3, r2
 257 0184 9622     		mov	r2, #150
 258 0186 5200     		lsl	r2, r2, #1
 259 0188 BA18     		add	r2, r7, r2
 260 018a 1360     		str	r3, [r2]
 152:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 153:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     while (k > 0u)
 261              		.loc 1 153 0
 262 018c 1DE0     		b	.L8
 263              	.L9:
 154:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 155:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* copy second buffer in reversal manner for remaining samples */
 156:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * px--;
 264              		.loc 1 156 0
 265 018e 9023     		mov	r3, #144
 266 0190 5B00     		lsl	r3, r3, #1
 267 0192 FB18     		add	r3, r7, r3
 268 0194 1B68     		ldr	r3, [r3]
 269 0196 5A1E     		sub	r2, r3, #1
 270 0198 9021     		mov	r1, #144
 271 019a 4900     		lsl	r1, r1, #1
 272 019c 7918     		add	r1, r7, r1
 273 019e 0A60     		str	r2, [r1]
 274 01a0 1A78     		ldrb	r2, [r3]
 275 01a2 FE23     		mov	r3, #254
 276 01a4 FB18     		add	r3, r7, r3
 277 01a6 52B2     		sxtb	r2, r2
 278 01a8 1A80     		strh	r2, [r3]
 157:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr2++ = x4;
 279              		.loc 1 157 0
 280 01aa BB69     		ldr	r3, [r7, #24]
 281 01ac 9A1C     		add	r2, r3, #2
 282 01ae BA61     		str	r2, [r7, #24]
 283 01b0 FE22     		mov	r2, #254
 284 01b2 BA18     		add	r2, r7, r2
 285 01b4 1288     		ldrh	r2, [r2]
 286 01b6 1A80     		strh	r2, [r3]
 158:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 159:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Decrement the loop counter */
 160:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       k--;
 287              		.loc 1 160 0
 288 01b8 9623     		mov	r3, #150
 289 01ba 5B00     		lsl	r3, r3, #1
 290 01bc FB18     		add	r3, r7, r3
 291 01be 1B68     		ldr	r3, [r3]
 292 01c0 013B     		sub	r3, r3, #1
 293 01c2 9622     		mov	r2, #150
 294 01c4 5200     		lsl	r2, r2, #1
 295 01c6 BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 9


 296 01c8 1360     		str	r3, [r2]
 297              	.L8:
 153:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 298              		.loc 1 153 0
 299 01ca 9623     		mov	r3, #150
 300 01cc 5B00     		lsl	r3, r3, #1
 301 01ce FB18     		add	r3, r7, r3
 302 01d0 1B68     		ldr	r3, [r3]
 303 01d2 002B     		cmp	r3, #0
 304 01d4 DBD1     		bne	.L9
 161:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     }
 162:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 163:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Initialze temporary scratch pointer */
 164:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     pScr1 = pScratch1;
 305              		.loc 1 164 0
 306 01d6 A623     		mov	r3, #166
 307 01d8 5B00     		lsl	r3, r3, #1
 308 01da FB18     		add	r3, r7, r3
 309 01dc 1B68     		ldr	r3, [r3]
 310 01de 7B61     		str	r3, [r7, #20]
 165:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 166:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Fill (srcBLen - 1u) zeros in scratch buffer */
 167:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     arm_fill_q15(0, pScr1, (srcBLen - 1u));
 311              		.loc 1 167 0
 312 01e0 7A69     		ldr	r2, [r7, #20]
 313 01e2 3B68     		ldr	r3, [r7]
 314 01e4 013B     		sub	r3, r3, #1
 315 01e6 0020     		mov	r0, #0
 316 01e8 111C     		mov	r1, r2
 317 01ea 1A1C     		mov	r2, r3
 318 01ec FFF7FEFF 		bl	arm_fill_q15
 168:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 169:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Update temporary scratch pointer */
 170:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     pScr1 += (srcBLen - 1u);
 319              		.loc 1 170 0
 320 01f0 7A69     		ldr	r2, [r7, #20]
 321 01f2 3B68     		ldr	r3, [r7]
 322 01f4 8949     		ldr	r1, .L71
 323 01f6 8C46     		mov	ip, r1
 324 01f8 6344     		add	r3, r3, ip
 325 01fa 5B00     		lsl	r3, r3, #1
 326 01fc D318     		add	r3, r2, r3
 327 01fe 7B61     		str	r3, [r7, #20]
 171:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 172:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Copy (srcALen) samples in scratch buffer */
 173:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Apply loop unrolling and do 4 Copies simultaneously. */
 174:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     k = srcALen >> 2u;
 328              		.loc 1 174 0
 329 0200 BB68     		ldr	r3, [r7, #8]
 330 0202 9B08     		lsr	r3, r3, #2
 331 0204 9622     		mov	r2, #150
 332 0206 5200     		lsl	r2, r2, #1
 333 0208 BA18     		add	r2, r7, r2
 334 020a 1360     		str	r3, [r2]
 175:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 176:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* First part of the processing with loop unrolling copies 4 data points at a time.
 177:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****      ** a second loop below copies for the remaining 1 to 3 samples. */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 10


 178:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     while (k > 0u)
 335              		.loc 1 178 0
 336 020c 5CE0     		b	.L10
 337              	.L11:
 179:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 180:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* copy second buffer in reversal manner */
 181:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * pIn1++;
 338              		.loc 1 181 0
 339 020e 9A23     		mov	r3, #154
 340 0210 5B00     		lsl	r3, r3, #1
 341 0212 FB18     		add	r3, r7, r3
 342 0214 1B68     		ldr	r3, [r3]
 343 0216 5A1C     		add	r2, r3, #1
 344 0218 9A21     		mov	r1, #154
 345 021a 4900     		lsl	r1, r1, #1
 346 021c 7918     		add	r1, r7, r1
 347 021e 0A60     		str	r2, [r1]
 348 0220 1A78     		ldrb	r2, [r3]
 349 0222 FE23     		mov	r3, #254
 350 0224 FB18     		add	r3, r7, r3
 351 0226 52B2     		sxtb	r2, r2
 352 0228 1A80     		strh	r2, [r3]
 182:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr1++ = x4;
 353              		.loc 1 182 0
 354 022a 7B69     		ldr	r3, [r7, #20]
 355 022c 9A1C     		add	r2, r3, #2
 356 022e 7A61     		str	r2, [r7, #20]
 357 0230 FE22     		mov	r2, #254
 358 0232 BA18     		add	r2, r7, r2
 359 0234 1288     		ldrh	r2, [r2]
 360 0236 1A80     		strh	r2, [r3]
 183:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * pIn1++;
 361              		.loc 1 183 0
 362 0238 9A23     		mov	r3, #154
 363 023a 5B00     		lsl	r3, r3, #1
 364 023c FB18     		add	r3, r7, r3
 365 023e 1B68     		ldr	r3, [r3]
 366 0240 5A1C     		add	r2, r3, #1
 367 0242 9A21     		mov	r1, #154
 368 0244 4900     		lsl	r1, r1, #1
 369 0246 7918     		add	r1, r7, r1
 370 0248 0A60     		str	r2, [r1]
 371 024a 1A78     		ldrb	r2, [r3]
 372 024c FE23     		mov	r3, #254
 373 024e FB18     		add	r3, r7, r3
 374 0250 52B2     		sxtb	r2, r2
 375 0252 1A80     		strh	r2, [r3]
 184:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr1++ = x4;
 376              		.loc 1 184 0
 377 0254 7B69     		ldr	r3, [r7, #20]
 378 0256 9A1C     		add	r2, r3, #2
 379 0258 7A61     		str	r2, [r7, #20]
 380 025a FE22     		mov	r2, #254
 381 025c BA18     		add	r2, r7, r2
 382 025e 1288     		ldrh	r2, [r2]
 383 0260 1A80     		strh	r2, [r3]
 185:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * pIn1++;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 11


 384              		.loc 1 185 0
 385 0262 9A23     		mov	r3, #154
 386 0264 5B00     		lsl	r3, r3, #1
 387 0266 FB18     		add	r3, r7, r3
 388 0268 1B68     		ldr	r3, [r3]
 389 026a 5A1C     		add	r2, r3, #1
 390 026c 9A21     		mov	r1, #154
 391 026e 4900     		lsl	r1, r1, #1
 392 0270 7918     		add	r1, r7, r1
 393 0272 0A60     		str	r2, [r1]
 394 0274 1A78     		ldrb	r2, [r3]
 395 0276 FE23     		mov	r3, #254
 396 0278 FB18     		add	r3, r7, r3
 397 027a 52B2     		sxtb	r2, r2
 398 027c 1A80     		strh	r2, [r3]
 186:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr1++ = x4;
 399              		.loc 1 186 0
 400 027e 7B69     		ldr	r3, [r7, #20]
 401 0280 9A1C     		add	r2, r3, #2
 402 0282 7A61     		str	r2, [r7, #20]
 403 0284 FE22     		mov	r2, #254
 404 0286 BA18     		add	r2, r7, r2
 405 0288 1288     		ldrh	r2, [r2]
 406 028a 1A80     		strh	r2, [r3]
 187:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * pIn1++;
 407              		.loc 1 187 0
 408 028c 9A23     		mov	r3, #154
 409 028e 5B00     		lsl	r3, r3, #1
 410 0290 FB18     		add	r3, r7, r3
 411 0292 1B68     		ldr	r3, [r3]
 412 0294 5A1C     		add	r2, r3, #1
 413 0296 9A21     		mov	r1, #154
 414 0298 4900     		lsl	r1, r1, #1
 415 029a 7918     		add	r1, r7, r1
 416 029c 0A60     		str	r2, [r1]
 417 029e 1A78     		ldrb	r2, [r3]
 418 02a0 FE23     		mov	r3, #254
 419 02a2 FB18     		add	r3, r7, r3
 420 02a4 52B2     		sxtb	r2, r2
 421 02a6 1A80     		strh	r2, [r3]
 188:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr1++ = x4;
 422              		.loc 1 188 0
 423 02a8 7B69     		ldr	r3, [r7, #20]
 424 02aa 9A1C     		add	r2, r3, #2
 425 02ac 7A61     		str	r2, [r7, #20]
 426 02ae FE22     		mov	r2, #254
 427 02b0 BA18     		add	r2, r7, r2
 428 02b2 1288     		ldrh	r2, [r2]
 429 02b4 1A80     		strh	r2, [r3]
 189:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 190:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Decrement the loop counter */
 191:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       k--;
 430              		.loc 1 191 0
 431 02b6 9623     		mov	r3, #150
 432 02b8 5B00     		lsl	r3, r3, #1
 433 02ba FB18     		add	r3, r7, r3
 434 02bc 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 12


 435 02be 013B     		sub	r3, r3, #1
 436 02c0 9622     		mov	r2, #150
 437 02c2 5200     		lsl	r2, r2, #1
 438 02c4 BA18     		add	r2, r7, r2
 439 02c6 1360     		str	r3, [r2]
 440              	.L10:
 178:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 441              		.loc 1 178 0
 442 02c8 9623     		mov	r3, #150
 443 02ca 5B00     		lsl	r3, r3, #1
 444 02cc FB18     		add	r3, r7, r3
 445 02ce 1B68     		ldr	r3, [r3]
 446 02d0 002B     		cmp	r3, #0
 447 02d2 9CD1     		bne	.L11
 192:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     }
 193:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 194:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* If the count is not a multiple of 4, copy remaining samples here.
 195:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****      ** No loop unrolling is used. */
 196:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     k = srcALen % 0x4u;
 448              		.loc 1 196 0
 449 02d4 BB68     		ldr	r3, [r7, #8]
 450 02d6 0322     		mov	r2, #3
 451 02d8 1340     		and	r3, r2
 452 02da 9622     		mov	r2, #150
 453 02dc 5200     		lsl	r2, r2, #1
 454 02de BA18     		add	r2, r7, r2
 455 02e0 1360     		str	r3, [r2]
 197:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 198:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     while (k > 0u)
 456              		.loc 1 198 0
 457 02e2 1DE0     		b	.L12
 458              	.L13:
 199:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 200:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* copy second buffer in reversal manner for remaining samples */
 201:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       x4 = (q15_t) * pIn1++;
 459              		.loc 1 201 0
 460 02e4 9A23     		mov	r3, #154
 461 02e6 5B00     		lsl	r3, r3, #1
 462 02e8 FB18     		add	r3, r7, r3
 463 02ea 1B68     		ldr	r3, [r3]
 464 02ec 5A1C     		add	r2, r3, #1
 465 02ee 9A21     		mov	r1, #154
 466 02f0 4900     		lsl	r1, r1, #1
 467 02f2 7918     		add	r1, r7, r1
 468 02f4 0A60     		str	r2, [r1]
 469 02f6 1A78     		ldrb	r2, [r3]
 470 02f8 FE23     		mov	r3, #254
 471 02fa FB18     		add	r3, r7, r3
 472 02fc 52B2     		sxtb	r2, r2
 473 02fe 1A80     		strh	r2, [r3]
 202:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pScr1++ = x4;
 474              		.loc 1 202 0
 475 0300 7B69     		ldr	r3, [r7, #20]
 476 0302 9A1C     		add	r2, r3, #2
 477 0304 7A61     		str	r2, [r7, #20]
 478 0306 FE22     		mov	r2, #254
 479 0308 BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 13


 480 030a 1288     		ldrh	r2, [r2]
 481 030c 1A80     		strh	r2, [r3]
 203:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 204:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Decrement the loop counter */
 205:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       k--;
 482              		.loc 1 205 0
 483 030e 9623     		mov	r3, #150
 484 0310 5B00     		lsl	r3, r3, #1
 485 0312 FB18     		add	r3, r7, r3
 486 0314 1B68     		ldr	r3, [r3]
 487 0316 013B     		sub	r3, r3, #1
 488 0318 9622     		mov	r2, #150
 489 031a 5200     		lsl	r2, r2, #1
 490 031c BA18     		add	r2, r7, r2
 491 031e 1360     		str	r3, [r2]
 492              	.L12:
 198:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 493              		.loc 1 198 0
 494 0320 9623     		mov	r3, #150
 495 0322 5B00     		lsl	r3, r3, #1
 496 0324 FB18     		add	r3, r7, r3
 497 0326 1B68     		ldr	r3, [r3]
 498 0328 002B     		cmp	r3, #0
 499 032a DBD1     		bne	.L13
 206:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     }
 207:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 208:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Fill (srcBLen - 1u) zeros at end of scratch buffer */
 209:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     arm_fill_q15(0, pScr1, (srcBLen - 1u));
 500              		.loc 1 209 0
 501 032c 7A69     		ldr	r2, [r7, #20]
 502 032e 3B68     		ldr	r3, [r7]
 503 0330 013B     		sub	r3, r3, #1
 504 0332 0020     		mov	r0, #0
 505 0334 111C     		mov	r1, r2
 506 0336 1A1C     		mov	r2, r3
 507 0338 FFF7FEFF 		bl	arm_fill_q15
 210:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 211:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Update pointer */
 212:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     pScr1 += (srcBLen - 1u);
 508              		.loc 1 212 0
 509 033c 7A69     		ldr	r2, [r7, #20]
 510 033e 3B68     		ldr	r3, [r7]
 511 0340 3649     		ldr	r1, .L71
 512 0342 8C46     		mov	ip, r1
 513 0344 6344     		add	r3, r3, ip
 514 0346 5B00     		lsl	r3, r3, #1
 515 0348 D318     		add	r3, r2, r3
 516 034a 7B61     		str	r3, [r7, #20]
 213:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 214:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 215:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Temporary pointer for scratch2 */
 216:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     py = pScratch2;
 517              		.loc 1 216 0
 518 034c A823     		mov	r3, #168
 519 034e 5B00     		lsl	r3, r3, #1
 520 0350 FB18     		add	r3, r7, r3
 521 0352 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 14


 522 0354 F822     		mov	r2, #248
 523 0356 BA18     		add	r2, r7, r2
 524 0358 1360     		str	r3, [r2]
 217:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 218:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Initialization of pIn2 pointer */
 219:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     pIn2 = (q7_t *) py;
 525              		.loc 1 219 0
 526 035a F823     		mov	r3, #248
 527 035c FB18     		add	r3, r7, r3
 528 035e 1B68     		ldr	r3, [r3]
 529 0360 9822     		mov	r2, #152
 530 0362 5200     		lsl	r2, r2, #1
 531 0364 BA18     		add	r2, r7, r2
 532 0366 1360     		str	r3, [r2]
 220:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 221:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     pScr2 = py;
 533              		.loc 1 221 0
 534 0368 F823     		mov	r3, #248
 535 036a FB18     		add	r3, r7, r3
 536 036c 1B68     		ldr	r3, [r3]
 537 036e BB61     		str	r3, [r7, #24]
 222:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 223:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     pOut = pDst + firstIndex;
 538              		.loc 1 223 0
 539 0370 A023     		mov	r3, #160
 540 0372 5B00     		lsl	r3, r3, #1
 541 0374 FB18     		add	r3, r7, r3
 542 0376 1A68     		ldr	r2, [r3]
 543 0378 A223     		mov	r3, #162
 544 037a 5B00     		lsl	r3, r3, #1
 545 037c FB18     		add	r3, r7, r3
 546 037e 1B68     		ldr	r3, [r3]
 547 0380 D318     		add	r3, r2, r3
 548 0382 3B61     		str	r3, [r7, #16]
 224:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 225:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     pScratch1 += firstIndex;
 549              		.loc 1 225 0
 550 0384 A223     		mov	r3, #162
 551 0386 5B00     		lsl	r3, r3, #1
 552 0388 FB18     		add	r3, r7, r3
 553 038a 1B68     		ldr	r3, [r3]
 554 038c 5B00     		lsl	r3, r3, #1
 555 038e A622     		mov	r2, #166
 556 0390 5200     		lsl	r2, r2, #1
 557 0392 BA18     		add	r2, r7, r2
 558 0394 1268     		ldr	r2, [r2]
 559 0396 D318     		add	r3, r2, r3
 560 0398 A622     		mov	r2, #166
 561 039a 5200     		lsl	r2, r2, #1
 562 039c BA18     		add	r2, r7, r2
 563 039e 1360     		str	r3, [r2]
 226:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 227:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Actual convolution process starts here */
 228:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     blkCnt = (numPoints) >> 2;
 564              		.loc 1 228 0
 565 03a0 A423     		mov	r3, #164
 566 03a2 5B00     		lsl	r3, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 15


 567 03a4 FB18     		add	r3, r7, r3
 568 03a6 1B68     		ldr	r3, [r3]
 569 03a8 9B08     		lsr	r3, r3, #2
 570 03aa 9422     		mov	r2, #148
 571 03ac 5200     		lsl	r2, r2, #1
 572 03ae BA18     		add	r2, r7, r2
 573 03b0 1360     		str	r3, [r2]
 229:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 230:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 231:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     while (blkCnt > 0)
 574              		.loc 1 231 0
 575 03b2 ACE3     		b	.L14
 576              	.L51:
 232:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 233:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Initialze temporary scratch pointer as scratch1 */
 234:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       pScr1 = pScratch1;
 577              		.loc 1 234 0
 578 03b4 A623     		mov	r3, #166
 579 03b6 5B00     		lsl	r3, r3, #1
 580 03b8 FB18     		add	r3, r7, r3
 581 03ba 1B68     		ldr	r3, [r3]
 582 03bc 7B61     		str	r3, [r7, #20]
 235:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 236:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Clear Accumlators */
 237:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       acc0 = 0;
 583              		.loc 1 237 0
 584 03be 0023     		mov	r3, #0
 585 03c0 8E22     		mov	r2, #142
 586 03c2 5200     		lsl	r2, r2, #1
 587 03c4 BA18     		add	r2, r7, r2
 588 03c6 1360     		str	r3, [r2]
 238:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       acc1 = 0;
 589              		.loc 1 238 0
 590 03c8 0023     		mov	r3, #0
 591 03ca 8C22     		mov	r2, #140
 592 03cc 5200     		lsl	r2, r2, #1
 593 03ce BA18     		add	r2, r7, r2
 594 03d0 1360     		str	r3, [r2]
 239:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       acc2 = 0;
 595              		.loc 1 239 0
 596 03d2 0023     		mov	r3, #0
 597 03d4 8A22     		mov	r2, #138
 598 03d6 5200     		lsl	r2, r2, #1
 599 03d8 BA18     		add	r2, r7, r2
 600 03da 1360     		str	r3, [r2]
 240:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       acc3 = 0;
 601              		.loc 1 240 0
 602 03dc 0023     		mov	r3, #0
 603 03de 8822     		mov	r2, #136
 604 03e0 5200     		lsl	r2, r2, #1
 605 03e2 BA18     		add	r2, r7, r2
 606 03e4 1360     		str	r3, [r2]
 241:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 242:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Read two samples from scratch1 buffer */
 243:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       x1 = *__SIMD32(pScr1)++;
 607              		.loc 1 243 0
 608 03e6 1423     		mov	r3, #20
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 16


 609 03e8 FB18     		add	r3, r7, r3
 610 03ea 1A68     		ldr	r2, [r3]
 611 03ec 111D     		add	r1, r2, #4
 612 03ee 1960     		str	r1, [r3]
 613 03f0 1368     		ldr	r3, [r2]
 614 03f2 8622     		mov	r2, #134
 615 03f4 5200     		lsl	r2, r2, #1
 616 03f6 BA18     		add	r2, r7, r2
 617 03f8 1360     		str	r3, [r2]
 244:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 245:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Read next two samples from scratch1 buffer */
 246:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       x2 = *__SIMD32(pScr1)++;
 618              		.loc 1 246 0
 619 03fa 1423     		mov	r3, #20
 620 03fc FB18     		add	r3, r7, r3
 621 03fe 1A68     		ldr	r2, [r3]
 622 0400 111D     		add	r1, r2, #4
 623 0402 1960     		str	r1, [r3]
 624 0404 1368     		ldr	r3, [r2]
 625 0406 8422     		mov	r2, #132
 626 0408 5200     		lsl	r2, r2, #1
 627 040a BA18     		add	r2, r7, r2
 628 040c 1360     		str	r3, [r2]
 247:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 248:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       tapCnt = (srcBLen) >> 2u;
 629              		.loc 1 248 0
 630 040e 3B68     		ldr	r3, [r7]
 631 0410 9B08     		lsr	r3, r3, #2
 632 0412 9222     		mov	r2, #146
 633 0414 5200     		lsl	r2, r2, #1
 634 0416 BA18     		add	r2, r7, r2
 635 0418 1360     		str	r3, [r2]
 249:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 250:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       while (tapCnt > 0u)
 636              		.loc 1 250 0
 637 041a DFE1     		b	.L15
 638              	.L72:
 639              		.align	2
 640              	.L71:
 641 041c FFFFFF7F 		.word	2147483647
 642              	.L24:
 251:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       {
 252:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 253:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* Read four samples from smaller buffer */
 254:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         y1 = _SIMD32_OFFSET(pScr2);
 643              		.loc 1 254 0
 644 0420 BB69     		ldr	r3, [r7, #24]
 645 0422 1B68     		ldr	r3, [r3]
 646 0424 F422     		mov	r2, #244
 647 0426 BA18     		add	r2, r7, r2
 648 0428 1360     		str	r3, [r2]
 255:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 256:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* multiply and accumlate */
 257:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc0 = __SMLAD(x1, y1, acc0);
 649              		.loc 1 257 0
 650 042a 8623     		mov	r3, #134
 651 042c 5B00     		lsl	r3, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 17


 652 042e FB18     		add	r3, r7, r3
 653 0430 1968     		ldr	r1, [r3]
 654 0432 F423     		mov	r3, #244
 655 0434 FB18     		add	r3, r7, r3
 656 0436 1A68     		ldr	r2, [r3]
 657 0438 8E23     		mov	r3, #142
 658 043a 5B00     		lsl	r3, r3, #1
 659 043c FB18     		add	r3, r7, r3
 660 043e 1B68     		ldr	r3, [r3]
 661 0440 E820     		mov	r0, #232
 662 0442 3818     		add	r0, r7, r0
 663 0444 0160     		str	r1, [r0]
 664 0446 E421     		mov	r1, #228
 665 0448 7918     		add	r1, r7, r1
 666 044a 0A60     		str	r2, [r1]
 667 044c E022     		mov	r2, #224
 668 044e BA18     		add	r2, r7, r2
 669 0450 1360     		str	r3, [r2]
 670              	.LBB30:
 671              	.LBB31:
 672              		.file 2 ".\\Include/arm_math.h"
   1:.\Include/arm_math.h **** /* ----------------------------------------------------------------------
   2:.\Include/arm_math.h ****  * Project:      CMSIS DSP Library
   3:.\Include/arm_math.h ****  * Title:        arm_math.h
   4:.\Include/arm_math.h ****  * Description:  Public header file for CMSIS DSP Library
   5:.\Include/arm_math.h ****  *
   6:.\Include/arm_math.h ****  * $Date:        27. January 2017
   7:.\Include/arm_math.h ****  * $Revision:    V.1.5.1
   8:.\Include/arm_math.h ****  *
   9:.\Include/arm_math.h ****  * Target Processor: Cortex-M cores
  10:.\Include/arm_math.h ****  * -------------------------------------------------------------------- */
  11:.\Include/arm_math.h **** /*
  12:.\Include/arm_math.h ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:.\Include/arm_math.h ****  *
  14:.\Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  15:.\Include/arm_math.h ****  *
  16:.\Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.\Include/arm_math.h ****  * not use this file except in compliance with the License.
  18:.\Include/arm_math.h ****  * You may obtain a copy of the License at
  19:.\Include/arm_math.h ****  *
  20:.\Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  21:.\Include/arm_math.h ****  *
  22:.\Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  23:.\Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.\Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.\Include/arm_math.h ****  * See the License for the specific language governing permissions and
  26:.\Include/arm_math.h ****  * limitations under the License.
  27:.\Include/arm_math.h ****  */
  28:.\Include/arm_math.h **** 
  29:.\Include/arm_math.h **** /**
  30:.\Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  31:.\Include/arm_math.h ****    *
  32:.\Include/arm_math.h ****    * Introduction
  33:.\Include/arm_math.h ****    * ------------
  34:.\Include/arm_math.h ****    *
  35:.\Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  36:.\Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 18


  37:.\Include/arm_math.h ****    *
  38:.\Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  39:.\Include/arm_math.h ****    * - Basic math functions
  40:.\Include/arm_math.h ****    * - Fast math functions
  41:.\Include/arm_math.h ****    * - Complex math functions
  42:.\Include/arm_math.h ****    * - Filters
  43:.\Include/arm_math.h ****    * - Matrix functions
  44:.\Include/arm_math.h ****    * - Transforms
  45:.\Include/arm_math.h ****    * - Motor control functions
  46:.\Include/arm_math.h ****    * - Statistical functions
  47:.\Include/arm_math.h ****    * - Support functions
  48:.\Include/arm_math.h ****    * - Interpolation functions
  49:.\Include/arm_math.h ****    *
  50:.\Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  51:.\Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  52:.\Include/arm_math.h ****    *
  53:.\Include/arm_math.h ****    * Using the Library
  54:.\Include/arm_math.h ****    * ------------
  55:.\Include/arm_math.h ****    *
  56:.\Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  57:.\Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  58:.\Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  59:.\Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  60:.\Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  61:.\Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  62:.\Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  63:.\Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  64:.\Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  65:.\Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  66:.\Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  67:.\Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  68:.\Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  69:.\Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  70:.\Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  71:.\Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (ARMv8M Baseline, Little endian)
  72:.\Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (ARMv8M Mainline, Little endian)
  73:.\Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (ARMv8M Mainline, Little endian, Single Precision Floating Point U
  74:.\Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (ARMv8M Mainline, Little endian, DSP instructions)
  75:.\Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (ARMv8M Mainline, Little endian, DSP instructions, Single Precisi
  76:.\Include/arm_math.h ****    *
  77:.\Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  78:.\Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  79:.\Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  80:.\Include/arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  81:.\Include/arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  82:.\Include/arm_math.h ****    * For ARMv8M cores define pre processor MACRO ARM_MATH_ARMV8MBL or ARM_MATH_ARMV8MML.
  83:.\Include/arm_math.h ****    * Set Pre processor MACRO __DSP_PRESENT if ARMv8M Mainline core supports DSP instructions.
  84:.\Include/arm_math.h ****    * 
  85:.\Include/arm_math.h ****    *
  86:.\Include/arm_math.h ****    * Examples
  87:.\Include/arm_math.h ****    * --------
  88:.\Include/arm_math.h ****    *
  89:.\Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  90:.\Include/arm_math.h ****    *
  91:.\Include/arm_math.h ****    * Toolchain Support
  92:.\Include/arm_math.h ****    * ------------
  93:.\Include/arm_math.h ****    *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 19


  94:.\Include/arm_math.h ****    * The library has been developed and tested with MDK-ARM version 5.14.0.0
  95:.\Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  96:.\Include/arm_math.h ****    *
  97:.\Include/arm_math.h ****    * Building the Library
  98:.\Include/arm_math.h ****    * ------------
  99:.\Include/arm_math.h ****    *
 100:.\Include/arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 101:.\Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
 102:.\Include/arm_math.h ****    *
 103:.\Include/arm_math.h ****    *
 104:.\Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 105:.\Include/arm_math.h ****    *
 106:.\Include/arm_math.h ****    * Pre-processor Macros
 107:.\Include/arm_math.h ****    * ------------
 108:.\Include/arm_math.h ****    *
 109:.\Include/arm_math.h ****    * Each library project have differant pre-processor macros.
 110:.\Include/arm_math.h ****    *
 111:.\Include/arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 112:.\Include/arm_math.h ****    *
 113:.\Include/arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 114:.\Include/arm_math.h ****    *
 115:.\Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 116:.\Include/arm_math.h ****    *
 117:.\Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 118:.\Include/arm_math.h ****    *
 119:.\Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 120:.\Include/arm_math.h ****    *
 121:.\Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 122:.\Include/arm_math.h ****    *
 123:.\Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 124:.\Include/arm_math.h ****    *
 125:.\Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 126:.\Include/arm_math.h ****    *
 127:.\Include/arm_math.h ****    * - ARM_MATH_CMx:
 128:.\Include/arm_math.h ****    *
 129:.\Include/arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 130:.\Include/arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 131:.\Include/arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 132:.\Include/arm_math.h ****    *
 133:.\Include/arm_math.h ****    * - ARM_MATH_ARMV8MxL:
 134:.\Include/arm_math.h ****    *
 135:.\Include/arm_math.h ****    * Define macro ARM_MATH_ARMV8MBL for building the library on ARMv8M Baseline target, ARM_MATH_AR
 136:.\Include/arm_math.h ****    * on ARMv8M Mainline target.
 137:.\Include/arm_math.h ****    *
 138:.\Include/arm_math.h ****    * - __FPU_PRESENT:
 139:.\Include/arm_math.h ****    *
 140:.\Include/arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 141:.\Include/arm_math.h ****    *
 142:.\Include/arm_math.h ****    * - __DSP_PRESENT:
 143:.\Include/arm_math.h ****    *
 144:.\Include/arm_math.h ****    * Initialize macro __DSP_PRESENT = 1 when ARMv8M Mainline core supports DSP instructions.
 145:.\Include/arm_math.h ****    *
 146:.\Include/arm_math.h ****    * <hr>
 147:.\Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 148:.\Include/arm_math.h ****    * -----------------------------
 149:.\Include/arm_math.h ****    *
 150:.\Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 20


 151:.\Include/arm_math.h ****    * |File/Folder                   |Content                                                       
 152:.\Include/arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 153:.\Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 154:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 155:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 156:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 157:.\Include/arm_math.h ****    *
 158:.\Include/arm_math.h ****    * <hr>
 159:.\Include/arm_math.h ****    * Revision History of CMSIS-DSP
 160:.\Include/arm_math.h ****    * ------------
 161:.\Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 162:.\Include/arm_math.h ****    *
 163:.\Include/arm_math.h ****    * Copyright Notice
 164:.\Include/arm_math.h ****    * ------------
 165:.\Include/arm_math.h ****    *
 166:.\Include/arm_math.h ****    * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
 167:.\Include/arm_math.h ****    */
 168:.\Include/arm_math.h **** 
 169:.\Include/arm_math.h **** 
 170:.\Include/arm_math.h **** /**
 171:.\Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 172:.\Include/arm_math.h ****  */
 173:.\Include/arm_math.h **** 
 174:.\Include/arm_math.h **** /**
 175:.\Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 176:.\Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 177:.\Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 178:.\Include/arm_math.h ****  * operate on individual values and not arrays.
 179:.\Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 180:.\Include/arm_math.h ****  *
 181:.\Include/arm_math.h ****  */
 182:.\Include/arm_math.h **** 
 183:.\Include/arm_math.h **** /**
 184:.\Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 185:.\Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 186:.\Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 187:.\Include/arm_math.h ****  * (real, imag, real, imag, ...).
 188:.\Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 189:.\Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 190:.\Include/arm_math.h ****  * real values.
 191:.\Include/arm_math.h ****  */
 192:.\Include/arm_math.h **** 
 193:.\Include/arm_math.h **** /**
 194:.\Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 195:.\Include/arm_math.h ****  */
 196:.\Include/arm_math.h **** 
 197:.\Include/arm_math.h **** /**
 198:.\Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 199:.\Include/arm_math.h ****  *
 200:.\Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 201:.\Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 202:.\Include/arm_math.h ****  * the type
 203:.\Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 204:.\Include/arm_math.h ****  * below:
 205:.\Include/arm_math.h ****  * <pre>
 206:.\Include/arm_math.h ****  *     typedef struct
 207:.\Include/arm_math.h ****  *     {
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 21


 208:.\Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 209:.\Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 210:.\Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 211:.\Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 212:.\Include/arm_math.h ****  * </pre>
 213:.\Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 214:.\Include/arm_math.h ****  *
 215:.\Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 216:.\Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 217:.\Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 218:.\Include/arm_math.h ****  * matrix element (i, j) is stored at:
 219:.\Include/arm_math.h ****  * <pre>
 220:.\Include/arm_math.h ****  *     pData[i*numCols + j]
 221:.\Include/arm_math.h ****  * </pre>
 222:.\Include/arm_math.h ****  *
 223:.\Include/arm_math.h ****  * \par Init Functions
 224:.\Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 225:.\Include/arm_math.h ****  * data structure.
 226:.\Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 227:.\Include/arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 228:.\Include/arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 229:.\Include/arm_math.h ****  *
 230:.\Include/arm_math.h ****  * \par
 231:.\Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 232:.\Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 233:.\Include/arm_math.h ****  * To place the instance structure in a const data
 234:.\Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 235:.\Include/arm_math.h ****  * <pre>
 236:.\Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 237:.\Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 238:.\Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 239:.\Include/arm_math.h ****  * </pre>
 240:.\Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 241:.\Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 242:.\Include/arm_math.h ****  * data array.
 243:.\Include/arm_math.h ****  *
 244:.\Include/arm_math.h ****  * \par Size Checking
 245:.\Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 246:.\Include/arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 247:.\Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 248:.\Include/arm_math.h ****  * columns.  If the size check fails the functions return:
 249:.\Include/arm_math.h ****  * <pre>
 250:.\Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 251:.\Include/arm_math.h ****  * </pre>
 252:.\Include/arm_math.h ****  * Otherwise the functions return
 253:.\Include/arm_math.h ****  * <pre>
 254:.\Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 255:.\Include/arm_math.h ****  * </pre>
 256:.\Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 257:.\Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 258:.\Include/arm_math.h ****  * <pre>
 259:.\Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 260:.\Include/arm_math.h ****  * </pre>
 261:.\Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 262:.\Include/arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 263:.\Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 264:.\Include/arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 22


 265:.\Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 266:.\Include/arm_math.h ****  */
 267:.\Include/arm_math.h **** 
 268:.\Include/arm_math.h **** /**
 269:.\Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 270:.\Include/arm_math.h ****  */
 271:.\Include/arm_math.h **** 
 272:.\Include/arm_math.h **** /**
 273:.\Include/arm_math.h ****  * @defgroup groupController Controller Functions
 274:.\Include/arm_math.h ****  */
 275:.\Include/arm_math.h **** 
 276:.\Include/arm_math.h **** /**
 277:.\Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 278:.\Include/arm_math.h ****  */
 279:.\Include/arm_math.h **** /**
 280:.\Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 281:.\Include/arm_math.h ****  */
 282:.\Include/arm_math.h **** 
 283:.\Include/arm_math.h **** /**
 284:.\Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 285:.\Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 286:.\Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 287:.\Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 288:.\Include/arm_math.h ****  */
 289:.\Include/arm_math.h **** 
 290:.\Include/arm_math.h **** /**
 291:.\Include/arm_math.h ****  * @defgroup groupExamples Examples
 292:.\Include/arm_math.h ****  */
 293:.\Include/arm_math.h **** #ifndef _ARM_MATH_H
 294:.\Include/arm_math.h **** #define _ARM_MATH_H
 295:.\Include/arm_math.h **** 
 296:.\Include/arm_math.h **** /* ignore some GCC warnings */
 297:.\Include/arm_math.h **** #if defined ( __GNUC__ )
 298:.\Include/arm_math.h **** #pragma GCC diagnostic push
 299:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 300:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 301:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 302:.\Include/arm_math.h **** #endif
 303:.\Include/arm_math.h **** 
 304:.\Include/arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 305:.\Include/arm_math.h **** 
 306:.\Include/arm_math.h **** #if defined(ARM_MATH_CM7)
 307:.\Include/arm_math.h ****   #include "core_cm7.h"
 308:.\Include/arm_math.h ****   #define ARM_MATH_DSP
 309:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM4)
 310:.\Include/arm_math.h ****   #include "core_cm4.h"
 311:.\Include/arm_math.h ****   #define ARM_MATH_DSP
 312:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM3)
 313:.\Include/arm_math.h ****   #include "core_cm3.h"
 314:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM0)
 315:.\Include/arm_math.h ****   #include "core_cm0.h"
 316:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 317:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
 318:.\Include/arm_math.h ****   #include "core_cm0plus.h"
 319:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 320:.\Include/arm_math.h **** #elif defined (ARM_MATH_ARMV8MBL)
 321:.\Include/arm_math.h ****   #include "core_armv8mbl.h"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 23


 322:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 323:.\Include/arm_math.h **** #elif defined (ARM_MATH_ARMV8MML)
 324:.\Include/arm_math.h ****   #include "core_armv8mml.h"
 325:.\Include/arm_math.h ****   #if (defined (__DSP_PRESENT) && (__DSP_PRESENT == 1))
 326:.\Include/arm_math.h ****     #define ARM_MATH_DSP
 327:.\Include/arm_math.h ****   #endif
 328:.\Include/arm_math.h **** #else
 329:.\Include/arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 330:.\Include/arm_math.h **** #endif
 331:.\Include/arm_math.h **** 
 332:.\Include/arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 333:.\Include/arm_math.h **** #include "string.h"
 334:.\Include/arm_math.h **** #include "math.h"
 335:.\Include/arm_math.h **** #ifdef   __cplusplus
 336:.\Include/arm_math.h **** extern "C"
 337:.\Include/arm_math.h **** {
 338:.\Include/arm_math.h **** #endif
 339:.\Include/arm_math.h **** 
 340:.\Include/arm_math.h **** 
 341:.\Include/arm_math.h ****   /**
 342:.\Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:.\Include/arm_math.h ****    */
 344:.\Include/arm_math.h **** 
 345:.\Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:.\Include/arm_math.h **** #define DELTA_Q15          0x5
 347:.\Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:.\Include/arm_math.h **** #ifndef PI
 349:.\Include/arm_math.h ****   #define PI               3.14159265358979f
 350:.\Include/arm_math.h **** #endif
 351:.\Include/arm_math.h **** 
 352:.\Include/arm_math.h ****   /**
 353:.\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:.\Include/arm_math.h ****    */
 355:.\Include/arm_math.h **** 
 356:.\Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:.\Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:.\Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:.\Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:.\Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:.\Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:.\Include/arm_math.h **** 
 363:.\Include/arm_math.h ****   /**
 364:.\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:.\Include/arm_math.h ****    */
 366:.\Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:.\Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:.\Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:.\Include/arm_math.h **** 
 370:.\Include/arm_math.h ****   /**
 371:.\Include/arm_math.h ****    * @brief Macro for Unaligned Support
 372:.\Include/arm_math.h ****    */
 373:.\Include/arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 374:.\Include/arm_math.h ****     #define ALIGN4
 375:.\Include/arm_math.h **** #else
 376:.\Include/arm_math.h ****   #if defined  (__GNUC__)
 377:.\Include/arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 378:.\Include/arm_math.h ****   #else
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 24


 379:.\Include/arm_math.h ****     #define ALIGN4 __align(4)
 380:.\Include/arm_math.h ****   #endif
 381:.\Include/arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 382:.\Include/arm_math.h **** 
 383:.\Include/arm_math.h ****   /**
 384:.\Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 385:.\Include/arm_math.h ****    */
 386:.\Include/arm_math.h **** 
 387:.\Include/arm_math.h ****   typedef enum
 388:.\Include/arm_math.h ****   {
 389:.\Include/arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 390:.\Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 391:.\Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 392:.\Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 393:.\Include/arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 394:.\Include/arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 395:.\Include/arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 396:.\Include/arm_math.h ****   } arm_status;
 397:.\Include/arm_math.h **** 
 398:.\Include/arm_math.h ****   /**
 399:.\Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 400:.\Include/arm_math.h ****    */
 401:.\Include/arm_math.h ****   typedef int8_t q7_t;
 402:.\Include/arm_math.h **** 
 403:.\Include/arm_math.h ****   /**
 404:.\Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 405:.\Include/arm_math.h ****    */
 406:.\Include/arm_math.h ****   typedef int16_t q15_t;
 407:.\Include/arm_math.h **** 
 408:.\Include/arm_math.h ****   /**
 409:.\Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 410:.\Include/arm_math.h ****    */
 411:.\Include/arm_math.h ****   typedef int32_t q31_t;
 412:.\Include/arm_math.h **** 
 413:.\Include/arm_math.h ****   /**
 414:.\Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 415:.\Include/arm_math.h ****    */
 416:.\Include/arm_math.h ****   typedef int64_t q63_t;
 417:.\Include/arm_math.h **** 
 418:.\Include/arm_math.h ****   /**
 419:.\Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 420:.\Include/arm_math.h ****    */
 421:.\Include/arm_math.h ****   typedef float float32_t;
 422:.\Include/arm_math.h **** 
 423:.\Include/arm_math.h ****   /**
 424:.\Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 425:.\Include/arm_math.h ****    */
 426:.\Include/arm_math.h ****   typedef double float64_t;
 427:.\Include/arm_math.h **** 
 428:.\Include/arm_math.h ****   /**
 429:.\Include/arm_math.h ****    * @brief definition to read/write two 16 bit values.
 430:.\Include/arm_math.h ****    */
 431:.\Include/arm_math.h **** #if   defined ( __CC_ARM )
 432:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 433:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 434:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 435:.\Include/arm_math.h **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 25


 436:.\Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 437:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 438:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 439:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 440:.\Include/arm_math.h **** 
 441:.\Include/arm_math.h **** #elif defined ( __GNUC__ )
 442:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 443:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 444:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 445:.\Include/arm_math.h **** 
 446:.\Include/arm_math.h **** #elif defined ( __ICCARM__ )
 447:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 448:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 449:.\Include/arm_math.h ****   #define CMSIS_INLINE
 450:.\Include/arm_math.h **** 
 451:.\Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 452:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 453:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 454:.\Include/arm_math.h ****   #define CMSIS_INLINE
 455:.\Include/arm_math.h **** 
 456:.\Include/arm_math.h **** #elif defined ( __CSMC__ )
 457:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 458:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 459:.\Include/arm_math.h ****   #define CMSIS_INLINE
 460:.\Include/arm_math.h **** 
 461:.\Include/arm_math.h **** #elif defined ( __TASKING__ )
 462:.\Include/arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 463:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 464:.\Include/arm_math.h ****   #define CMSIS_INLINE
 465:.\Include/arm_math.h **** 
 466:.\Include/arm_math.h **** #else
 467:.\Include/arm_math.h ****   #error Unknown compiler
 468:.\Include/arm_math.h **** #endif
 469:.\Include/arm_math.h **** 
 470:.\Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 471:.\Include/arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 472:.\Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 473:.\Include/arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 474:.\Include/arm_math.h **** 
 475:.\Include/arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 476:.\Include/arm_math.h **** #if !defined (ARM_MATH_DSP)
 477:.\Include/arm_math.h ****   /**
 478:.\Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 479:.\Include/arm_math.h ****    */
 480:.\Include/arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 481:.\Include/arm_math.h ****                                     (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 482:.\Include/arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 483:.\Include/arm_math.h ****                                     (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 484:.\Include/arm_math.h **** 
 485:.\Include/arm_math.h **** /* #endif // defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 486:.\Include/arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
 487:.\Include/arm_math.h **** 
 488:.\Include/arm_math.h ****    /**
 489:.\Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
 490:.\Include/arm_math.h ****    */
 491:.\Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 492:.\Include/arm_math.h **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 26


 493:.\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 494:.\Include/arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 495:.\Include/arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 496:.\Include/arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 497:.\Include/arm_math.h **** #else
 498:.\Include/arm_math.h **** 
 499:.\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 500:.\Include/arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 501:.\Include/arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 502:.\Include/arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 503:.\Include/arm_math.h **** 
 504:.\Include/arm_math.h **** #endif
 505:.\Include/arm_math.h **** 
 506:.\Include/arm_math.h **** 
 507:.\Include/arm_math.h ****   /**
 508:.\Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 509:.\Include/arm_math.h ****    */
 510:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t clip_q63_to_q31(
 511:.\Include/arm_math.h ****   q63_t x)
 512:.\Include/arm_math.h ****   {
 513:.\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 514:.\Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 515:.\Include/arm_math.h ****   }
 516:.\Include/arm_math.h **** 
 517:.\Include/arm_math.h ****   /**
 518:.\Include/arm_math.h ****    * @brief Clips Q63 to Q15 values.
 519:.\Include/arm_math.h ****    */
 520:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q63_to_q15(
 521:.\Include/arm_math.h ****   q63_t x)
 522:.\Include/arm_math.h ****   {
 523:.\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 524:.\Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 525:.\Include/arm_math.h ****   }
 526:.\Include/arm_math.h **** 
 527:.\Include/arm_math.h ****   /**
 528:.\Include/arm_math.h ****    * @brief Clips Q31 to Q7 values.
 529:.\Include/arm_math.h ****    */
 530:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q7_t clip_q31_to_q7(
 531:.\Include/arm_math.h ****   q31_t x)
 532:.\Include/arm_math.h ****   {
 533:.\Include/arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 534:.\Include/arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 535:.\Include/arm_math.h ****   }
 536:.\Include/arm_math.h **** 
 537:.\Include/arm_math.h ****   /**
 538:.\Include/arm_math.h ****    * @brief Clips Q31 to Q15 values.
 539:.\Include/arm_math.h ****    */
 540:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q31_to_q15(
 541:.\Include/arm_math.h ****   q31_t x)
 542:.\Include/arm_math.h ****   {
 543:.\Include/arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 544:.\Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 545:.\Include/arm_math.h ****   }
 546:.\Include/arm_math.h **** 
 547:.\Include/arm_math.h ****   /**
 548:.\Include/arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 549:.\Include/arm_math.h ****    */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 27


 550:.\Include/arm_math.h **** 
 551:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q63_t mult32x64(
 552:.\Include/arm_math.h ****   q63_t x,
 553:.\Include/arm_math.h ****   q31_t y)
 554:.\Include/arm_math.h ****   {
 555:.\Include/arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 556:.\Include/arm_math.h ****             (((q63_t) (x >> 32) * y)));
 557:.\Include/arm_math.h ****   }
 558:.\Include/arm_math.h **** 
 559:.\Include/arm_math.h **** /*
 560:.\Include/arm_math.h ****   #if defined (ARM_MATH_CM0_FAMILY) && defined ( __CC_ARM   )
 561:.\Include/arm_math.h ****   #define __CLZ __clz
 562:.\Include/arm_math.h ****   #endif
 563:.\Include/arm_math.h ****  */
 564:.\Include/arm_math.h **** /* note: function can be removed when all toolchain support __CLZ for Cortex-M0 */
 565:.\Include/arm_math.h **** #if defined (ARM_MATH_CM0_FAMILY) && ((defined (__ICCARM__))  )
 566:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 567:.\Include/arm_math.h ****   q31_t data);
 568:.\Include/arm_math.h **** 
 569:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 570:.\Include/arm_math.h ****   q31_t data)
 571:.\Include/arm_math.h ****   {
 572:.\Include/arm_math.h ****     uint32_t count = 0;
 573:.\Include/arm_math.h ****     uint32_t mask = 0x80000000;
 574:.\Include/arm_math.h **** 
 575:.\Include/arm_math.h ****     while ((data & mask) == 0)
 576:.\Include/arm_math.h ****     {
 577:.\Include/arm_math.h ****       count += 1u;
 578:.\Include/arm_math.h ****       mask = mask >> 1u;
 579:.\Include/arm_math.h ****     }
 580:.\Include/arm_math.h **** 
 581:.\Include/arm_math.h ****     return (count);
 582:.\Include/arm_math.h ****   }
 583:.\Include/arm_math.h **** #endif
 584:.\Include/arm_math.h **** 
 585:.\Include/arm_math.h ****   /**
 586:.\Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 587:.\Include/arm_math.h ****    */
 588:.\Include/arm_math.h **** 
 589:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q31(
 590:.\Include/arm_math.h ****   q31_t in,
 591:.\Include/arm_math.h ****   q31_t * dst,
 592:.\Include/arm_math.h ****   q31_t * pRecipTable)
 593:.\Include/arm_math.h ****   {
 594:.\Include/arm_math.h ****     q31_t out;
 595:.\Include/arm_math.h ****     uint32_t tempVal;
 596:.\Include/arm_math.h ****     uint32_t index, i;
 597:.\Include/arm_math.h ****     uint32_t signBits;
 598:.\Include/arm_math.h **** 
 599:.\Include/arm_math.h ****     if (in > 0)
 600:.\Include/arm_math.h ****     {
 601:.\Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 602:.\Include/arm_math.h ****     }
 603:.\Include/arm_math.h ****     else
 604:.\Include/arm_math.h ****     {
 605:.\Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 606:.\Include/arm_math.h ****     }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 28


 607:.\Include/arm_math.h **** 
 608:.\Include/arm_math.h ****     /* Convert input sample to 1.31 format */
 609:.\Include/arm_math.h ****     in = (in << signBits);
 610:.\Include/arm_math.h **** 
 611:.\Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 612:.\Include/arm_math.h ****     index = (uint32_t)(in >> 24);
 613:.\Include/arm_math.h ****     index = (index & INDEX_MASK);
 614:.\Include/arm_math.h **** 
 615:.\Include/arm_math.h ****     /* 1.31 with exp 1 */
 616:.\Include/arm_math.h ****     out = pRecipTable[index];
 617:.\Include/arm_math.h **** 
 618:.\Include/arm_math.h ****     /* calculation of reciprocal value */
 619:.\Include/arm_math.h ****     /* running approximation for two iterations */
 620:.\Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 621:.\Include/arm_math.h ****     {
 622:.\Include/arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 623:.\Include/arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 624:.\Include/arm_math.h ****       /*      1.31 with exp 1 */
 625:.\Include/arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 626:.\Include/arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 627:.\Include/arm_math.h ****     }
 628:.\Include/arm_math.h **** 
 629:.\Include/arm_math.h ****     /* write output */
 630:.\Include/arm_math.h ****     *dst = out;
 631:.\Include/arm_math.h **** 
 632:.\Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 633:.\Include/arm_math.h ****     return (signBits + 1u);
 634:.\Include/arm_math.h ****   }
 635:.\Include/arm_math.h **** 
 636:.\Include/arm_math.h **** 
 637:.\Include/arm_math.h ****   /**
 638:.\Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
 639:.\Include/arm_math.h ****    */
 640:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q15(
 641:.\Include/arm_math.h ****   q15_t in,
 642:.\Include/arm_math.h ****   q15_t * dst,
 643:.\Include/arm_math.h ****   q15_t * pRecipTable)
 644:.\Include/arm_math.h ****   {
 645:.\Include/arm_math.h ****     q15_t out = 0;
 646:.\Include/arm_math.h ****     uint32_t tempVal = 0;
 647:.\Include/arm_math.h ****     uint32_t index = 0, i = 0;
 648:.\Include/arm_math.h ****     uint32_t signBits = 0;
 649:.\Include/arm_math.h **** 
 650:.\Include/arm_math.h ****     if (in > 0)
 651:.\Include/arm_math.h ****     {
 652:.\Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
 653:.\Include/arm_math.h ****     }
 654:.\Include/arm_math.h ****     else
 655:.\Include/arm_math.h ****     {
 656:.\Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
 657:.\Include/arm_math.h ****     }
 658:.\Include/arm_math.h **** 
 659:.\Include/arm_math.h ****     /* Convert input sample to 1.15 format */
 660:.\Include/arm_math.h ****     in = (in << signBits);
 661:.\Include/arm_math.h **** 
 662:.\Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 663:.\Include/arm_math.h ****     index = (uint32_t)(in >>  8);
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 29


 664:.\Include/arm_math.h ****     index = (index & INDEX_MASK);
 665:.\Include/arm_math.h **** 
 666:.\Include/arm_math.h ****     /*      1.15 with exp 1  */
 667:.\Include/arm_math.h ****     out = pRecipTable[index];
 668:.\Include/arm_math.h **** 
 669:.\Include/arm_math.h ****     /* calculation of reciprocal value */
 670:.\Include/arm_math.h ****     /* running approximation for two iterations */
 671:.\Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 672:.\Include/arm_math.h ****     {
 673:.\Include/arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
 674:.\Include/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 675:.\Include/arm_math.h ****       /*      1.15 with exp 1 */
 676:.\Include/arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
 677:.\Include/arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
 678:.\Include/arm_math.h ****     }
 679:.\Include/arm_math.h **** 
 680:.\Include/arm_math.h ****     /* write output */
 681:.\Include/arm_math.h ****     *dst = out;
 682:.\Include/arm_math.h **** 
 683:.\Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 684:.\Include/arm_math.h ****     return (signBits + 1);
 685:.\Include/arm_math.h ****   }
 686:.\Include/arm_math.h **** 
 687:.\Include/arm_math.h **** 
 688:.\Include/arm_math.h ****   /*
 689:.\Include/arm_math.h ****    * @brief C custom defined intrinisic function for only M0 processors
 690:.\Include/arm_math.h ****    */
 691:.\Include/arm_math.h **** #if defined(ARM_MATH_CM0_FAMILY)
 692:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t __SSAT(
 693:.\Include/arm_math.h ****   q31_t x,
 694:.\Include/arm_math.h ****   uint32_t y)
 695:.\Include/arm_math.h ****   {
 696:.\Include/arm_math.h ****     int32_t posMax, negMin;
 697:.\Include/arm_math.h ****     uint32_t i;
 698:.\Include/arm_math.h **** 
 699:.\Include/arm_math.h ****     posMax = 1;
 700:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 701:.\Include/arm_math.h ****     {
 702:.\Include/arm_math.h ****       posMax = posMax * 2;
 703:.\Include/arm_math.h ****     }
 704:.\Include/arm_math.h **** 
 705:.\Include/arm_math.h ****     if (x > 0)
 706:.\Include/arm_math.h ****     {
 707:.\Include/arm_math.h ****       posMax = (posMax - 1);
 708:.\Include/arm_math.h **** 
 709:.\Include/arm_math.h ****       if (x > posMax)
 710:.\Include/arm_math.h ****       {
 711:.\Include/arm_math.h ****         x = posMax;
 712:.\Include/arm_math.h ****       }
 713:.\Include/arm_math.h ****     }
 714:.\Include/arm_math.h ****     else
 715:.\Include/arm_math.h ****     {
 716:.\Include/arm_math.h ****       negMin = -posMax;
 717:.\Include/arm_math.h **** 
 718:.\Include/arm_math.h ****       if (x < negMin)
 719:.\Include/arm_math.h ****       {
 720:.\Include/arm_math.h ****         x = negMin;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 30


 721:.\Include/arm_math.h ****       }
 722:.\Include/arm_math.h ****     }
 723:.\Include/arm_math.h ****     return (x);
 724:.\Include/arm_math.h ****   }
 725:.\Include/arm_math.h **** #endif /* end of ARM_MATH_CM0_FAMILY */
 726:.\Include/arm_math.h **** 
 727:.\Include/arm_math.h **** 
 728:.\Include/arm_math.h ****   /*
 729:.\Include/arm_math.h ****    * @brief C custom defined intrinsic function for M3 and M0 processors
 730:.\Include/arm_math.h ****    */
 731:.\Include/arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 732:.\Include/arm_math.h **** #if !defined (ARM_MATH_DSP)
 733:.\Include/arm_math.h **** 
 734:.\Include/arm_math.h ****   /*
 735:.\Include/arm_math.h ****    * @brief C custom defined QADD8 for M3 and M0 processors
 736:.\Include/arm_math.h ****    */
 737:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD8(
 738:.\Include/arm_math.h ****   uint32_t x,
 739:.\Include/arm_math.h ****   uint32_t y)
 740:.\Include/arm_math.h ****   {
 741:.\Include/arm_math.h ****     q31_t r, s, t, u;
 742:.\Include/arm_math.h **** 
 743:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) + (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 744:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) + (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 745:.\Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) + (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 746:.\Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) + (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 747:.\Include/arm_math.h **** 
 748:.\Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 749:.\Include/arm_math.h ****   }
 750:.\Include/arm_math.h **** 
 751:.\Include/arm_math.h **** 
 752:.\Include/arm_math.h ****   /*
 753:.\Include/arm_math.h ****    * @brief C custom defined QSUB8 for M3 and M0 processors
 754:.\Include/arm_math.h ****    */
 755:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB8(
 756:.\Include/arm_math.h ****   uint32_t x,
 757:.\Include/arm_math.h ****   uint32_t y)
 758:.\Include/arm_math.h ****   {
 759:.\Include/arm_math.h ****     q31_t r, s, t, u;
 760:.\Include/arm_math.h **** 
 761:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) - (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 762:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) - (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 763:.\Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) - (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 764:.\Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) - (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 765:.\Include/arm_math.h **** 
 766:.\Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 767:.\Include/arm_math.h ****   }
 768:.\Include/arm_math.h **** 
 769:.\Include/arm_math.h **** 
 770:.\Include/arm_math.h ****   /*
 771:.\Include/arm_math.h ****    * @brief C custom defined QADD16 for M3 and M0 processors
 772:.\Include/arm_math.h ****    */
 773:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD16(
 774:.\Include/arm_math.h ****   uint32_t x,
 775:.\Include/arm_math.h ****   uint32_t y)
 776:.\Include/arm_math.h ****   {
 777:.\Include/arm_math.h **** /*  q31_t r,     s;  without initialisation 'arm_offset_q15 test' fails  but 'intrinsic' tests pass
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 31


 778:.\Include/arm_math.h ****     q31_t r = 0, s = 0;
 779:.\Include/arm_math.h **** 
 780:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 781:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 782:.\Include/arm_math.h **** 
 783:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 784:.\Include/arm_math.h ****   }
 785:.\Include/arm_math.h **** 
 786:.\Include/arm_math.h **** 
 787:.\Include/arm_math.h ****   /*
 788:.\Include/arm_math.h ****    * @brief C custom defined SHADD16 for M3 and M0 processors
 789:.\Include/arm_math.h ****    */
 790:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHADD16(
 791:.\Include/arm_math.h ****   uint32_t x,
 792:.\Include/arm_math.h ****   uint32_t y)
 793:.\Include/arm_math.h ****   {
 794:.\Include/arm_math.h ****     q31_t r, s;
 795:.\Include/arm_math.h **** 
 796:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 797:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 798:.\Include/arm_math.h **** 
 799:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 800:.\Include/arm_math.h ****   }
 801:.\Include/arm_math.h **** 
 802:.\Include/arm_math.h **** 
 803:.\Include/arm_math.h ****   /*
 804:.\Include/arm_math.h ****    * @brief C custom defined QSUB16 for M3 and M0 processors
 805:.\Include/arm_math.h ****    */
 806:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB16(
 807:.\Include/arm_math.h ****   uint32_t x,
 808:.\Include/arm_math.h ****   uint32_t y)
 809:.\Include/arm_math.h ****   {
 810:.\Include/arm_math.h ****     q31_t r, s;
 811:.\Include/arm_math.h **** 
 812:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 813:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 814:.\Include/arm_math.h **** 
 815:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 816:.\Include/arm_math.h ****   }
 817:.\Include/arm_math.h **** 
 818:.\Include/arm_math.h **** 
 819:.\Include/arm_math.h ****   /*
 820:.\Include/arm_math.h ****    * @brief C custom defined SHSUB16 for M3 and M0 processors
 821:.\Include/arm_math.h ****    */
 822:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSUB16(
 823:.\Include/arm_math.h ****   uint32_t x,
 824:.\Include/arm_math.h ****   uint32_t y)
 825:.\Include/arm_math.h ****   {
 826:.\Include/arm_math.h ****     q31_t r, s;
 827:.\Include/arm_math.h **** 
 828:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 829:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 830:.\Include/arm_math.h **** 
 831:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 832:.\Include/arm_math.h ****   }
 833:.\Include/arm_math.h **** 
 834:.\Include/arm_math.h **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 32


 835:.\Include/arm_math.h ****   /*
 836:.\Include/arm_math.h ****    * @brief C custom defined QASX for M3 and M0 processors
 837:.\Include/arm_math.h ****    */
 838:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QASX(
 839:.\Include/arm_math.h ****   uint32_t x,
 840:.\Include/arm_math.h ****   uint32_t y)
 841:.\Include/arm_math.h ****   {
 842:.\Include/arm_math.h ****     q31_t r, s;
 843:.\Include/arm_math.h **** 
 844:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 845:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 846:.\Include/arm_math.h **** 
 847:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 848:.\Include/arm_math.h ****   }
 849:.\Include/arm_math.h **** 
 850:.\Include/arm_math.h **** 
 851:.\Include/arm_math.h ****   /*
 852:.\Include/arm_math.h ****    * @brief C custom defined SHASX for M3 and M0 processors
 853:.\Include/arm_math.h ****    */
 854:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHASX(
 855:.\Include/arm_math.h ****   uint32_t x,
 856:.\Include/arm_math.h ****   uint32_t y)
 857:.\Include/arm_math.h ****   {
 858:.\Include/arm_math.h ****     q31_t r, s;
 859:.\Include/arm_math.h **** 
 860:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 861:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 862:.\Include/arm_math.h **** 
 863:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 864:.\Include/arm_math.h ****   }
 865:.\Include/arm_math.h **** 
 866:.\Include/arm_math.h **** 
 867:.\Include/arm_math.h ****   /*
 868:.\Include/arm_math.h ****    * @brief C custom defined QSAX for M3 and M0 processors
 869:.\Include/arm_math.h ****    */
 870:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSAX(
 871:.\Include/arm_math.h ****   uint32_t x,
 872:.\Include/arm_math.h ****   uint32_t y)
 873:.\Include/arm_math.h ****   {
 874:.\Include/arm_math.h ****     q31_t r, s;
 875:.\Include/arm_math.h **** 
 876:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 877:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 878:.\Include/arm_math.h **** 
 879:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 880:.\Include/arm_math.h ****   }
 881:.\Include/arm_math.h **** 
 882:.\Include/arm_math.h **** 
 883:.\Include/arm_math.h ****   /*
 884:.\Include/arm_math.h ****    * @brief C custom defined SHSAX for M3 and M0 processors
 885:.\Include/arm_math.h ****    */
 886:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSAX(
 887:.\Include/arm_math.h ****   uint32_t x,
 888:.\Include/arm_math.h ****   uint32_t y)
 889:.\Include/arm_math.h ****   {
 890:.\Include/arm_math.h ****     q31_t r, s;
 891:.\Include/arm_math.h **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 33


 892:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 893:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 894:.\Include/arm_math.h **** 
 895:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 896:.\Include/arm_math.h ****   }
 897:.\Include/arm_math.h **** 
 898:.\Include/arm_math.h **** 
 899:.\Include/arm_math.h ****   /*
 900:.\Include/arm_math.h ****    * @brief C custom defined SMUSDX for M3 and M0 processors
 901:.\Include/arm_math.h ****    */
 902:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUSDX(
 903:.\Include/arm_math.h ****   uint32_t x,
 904:.\Include/arm_math.h ****   uint32_t y)
 905:.\Include/arm_math.h ****   {
 906:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 907:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 908:.\Include/arm_math.h ****   }
 909:.\Include/arm_math.h **** 
 910:.\Include/arm_math.h ****   /*
 911:.\Include/arm_math.h ****    * @brief C custom defined SMUADX for M3 and M0 processors
 912:.\Include/arm_math.h ****    */
 913:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUADX(
 914:.\Include/arm_math.h ****   uint32_t x,
 915:.\Include/arm_math.h ****   uint32_t y)
 916:.\Include/arm_math.h ****   {
 917:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 918:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 919:.\Include/arm_math.h ****   }
 920:.\Include/arm_math.h **** 
 921:.\Include/arm_math.h **** 
 922:.\Include/arm_math.h ****   /*
 923:.\Include/arm_math.h ****    * @brief C custom defined QADD for M3 and M0 processors
 924:.\Include/arm_math.h ****    */
 925:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QADD(
 926:.\Include/arm_math.h ****   int32_t x,
 927:.\Include/arm_math.h ****   int32_t y)
 928:.\Include/arm_math.h ****   {
 929:.\Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x + (q31_t)y)));
 930:.\Include/arm_math.h ****   }
 931:.\Include/arm_math.h **** 
 932:.\Include/arm_math.h **** 
 933:.\Include/arm_math.h ****   /*
 934:.\Include/arm_math.h ****    * @brief C custom defined QSUB for M3 and M0 processors
 935:.\Include/arm_math.h ****    */
 936:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QSUB(
 937:.\Include/arm_math.h ****   int32_t x,
 938:.\Include/arm_math.h ****   int32_t y)
 939:.\Include/arm_math.h ****   {
 940:.\Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x - (q31_t)y)));
 941:.\Include/arm_math.h ****   }
 942:.\Include/arm_math.h **** 
 943:.\Include/arm_math.h **** 
 944:.\Include/arm_math.h ****   /*
 945:.\Include/arm_math.h ****    * @brief C custom defined SMLAD for M3 and M0 processors
 946:.\Include/arm_math.h ****    */
 947:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLAD(
 948:.\Include/arm_math.h ****   uint32_t x,
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 34


 949:.\Include/arm_math.h ****   uint32_t y,
 950:.\Include/arm_math.h ****   uint32_t sum)
 951:.\Include/arm_math.h ****   {
 952:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 673              		.loc 2 952 0
 674 0452 E823     		mov	r3, #232
 675 0454 FB18     		add	r3, r7, r3
 676 0456 1B68     		ldr	r3, [r3]
 677 0458 1B04     		lsl	r3, r3, #16
 678 045a 1B14     		asr	r3, r3, #16
 679 045c E422     		mov	r2, #228
 680 045e BA18     		add	r2, r7, r2
 681 0460 1268     		ldr	r2, [r2]
 682 0462 1204     		lsl	r2, r2, #16
 683 0464 1214     		asr	r2, r2, #16
 684 0466 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 685              		.loc 2 953 0
 686 0468 E823     		mov	r3, #232
 687 046a FB18     		add	r3, r7, r3
 688 046c 1B68     		ldr	r3, [r3]
 689 046e 1B14     		asr	r3, r3, #16
 690 0470 E421     		mov	r1, #228
 691 0472 7918     		add	r1, r7, r1
 692 0474 0968     		ldr	r1, [r1]
 693 0476 0914     		asr	r1, r1, #16
 694 0478 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 695              		.loc 2 952 0
 696 047a D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 697              		.loc 2 954 0
 698 047c E023     		mov	r3, #224
 699 047e FB18     		add	r3, r7, r3
 700 0480 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 701              		.loc 2 953 0
 702 0482 D318     		add	r3, r2, r3
 703              	.LBE31:
 704              	.LBE30:
 705              		.loc 1 257 0
 706 0484 8E22     		mov	r2, #142
 707 0486 5200     		lsl	r2, r2, #1
 708 0488 BA18     		add	r2, r7, r2
 709 048a 1360     		str	r3, [r2]
 258:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc2 = __SMLAD(x2, y1, acc2);
 710              		.loc 1 258 0
 711 048c 8423     		mov	r3, #132
 712 048e 5B00     		lsl	r3, r3, #1
 713 0490 FB18     		add	r3, r7, r3
 714 0492 1968     		ldr	r1, [r3]
 715 0494 F423     		mov	r3, #244
 716 0496 FB18     		add	r3, r7, r3
 717 0498 1A68     		ldr	r2, [r3]
 718 049a 8A23     		mov	r3, #138
 719 049c 5B00     		lsl	r3, r3, #1
 720 049e FB18     		add	r3, r7, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 35


 721 04a0 1B68     		ldr	r3, [r3]
 722 04a2 DC20     		mov	r0, #220
 723 04a4 3818     		add	r0, r7, r0
 724 04a6 0160     		str	r1, [r0]
 725 04a8 D821     		mov	r1, #216
 726 04aa 7918     		add	r1, r7, r1
 727 04ac 0A60     		str	r2, [r1]
 728 04ae D422     		mov	r2, #212
 729 04b0 BA18     		add	r2, r7, r2
 730 04b2 1360     		str	r3, [r2]
 731              	.LBB32:
 732              	.LBB33:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 733              		.loc 2 952 0
 734 04b4 DC23     		mov	r3, #220
 735 04b6 FB18     		add	r3, r7, r3
 736 04b8 1B68     		ldr	r3, [r3]
 737 04ba 1B04     		lsl	r3, r3, #16
 738 04bc 1B14     		asr	r3, r3, #16
 739 04be D822     		mov	r2, #216
 740 04c0 BA18     		add	r2, r7, r2
 741 04c2 1268     		ldr	r2, [r2]
 742 04c4 1204     		lsl	r2, r2, #16
 743 04c6 1214     		asr	r2, r2, #16
 744 04c8 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 745              		.loc 2 953 0
 746 04ca DC23     		mov	r3, #220
 747 04cc FB18     		add	r3, r7, r3
 748 04ce 1B68     		ldr	r3, [r3]
 749 04d0 1B14     		asr	r3, r3, #16
 750 04d2 D821     		mov	r1, #216
 751 04d4 7918     		add	r1, r7, r1
 752 04d6 0968     		ldr	r1, [r1]
 753 04d8 0914     		asr	r1, r1, #16
 754 04da 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 755              		.loc 2 952 0
 756 04dc D218     		add	r2, r2, r3
 757              		.loc 2 954 0
 758 04de D423     		mov	r3, #212
 759 04e0 FB18     		add	r3, r7, r3
 760 04e2 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 761              		.loc 2 953 0
 762 04e4 D318     		add	r3, r2, r3
 763              	.LBE33:
 764              	.LBE32:
 765              		.loc 1 258 0
 766 04e6 8A22     		mov	r2, #138
 767 04e8 5200     		lsl	r2, r2, #1
 768 04ea BA18     		add	r2, r7, r2
 769 04ec 1360     		str	r3, [r2]
 259:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 260:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* pack input data */
 261:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
 262:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         x3 = __PKHBT(x2, x1, 0);
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 36


 770              		.loc 1 262 0
 771 04ee 8423     		mov	r3, #132
 772 04f0 5B00     		lsl	r3, r3, #1
 773 04f2 FB18     		add	r3, r7, r3
 774 04f4 1B68     		ldr	r3, [r3]
 775 04f6 1B04     		lsl	r3, r3, #16
 776 04f8 1A0C     		lsr	r2, r3, #16
 777 04fa 8623     		mov	r3, #134
 778 04fc 5B00     		lsl	r3, r3, #1
 779 04fe FB18     		add	r3, r7, r3
 780 0500 1B68     		ldr	r3, [r3]
 781 0502 1B0C     		lsr	r3, r3, #16
 782 0504 1B04     		lsl	r3, r3, #16
 783 0506 1343     		orr	r3, r2
 784 0508 F022     		mov	r2, #240
 785 050a BA18     		add	r2, r7, r2
 786 050c 1360     		str	r3, [r2]
 263:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** #else
 264:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         x3 = __PKHBT(x1, x2, 0);
 265:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** #endif
 266:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 267:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* multiply and accumlate */
 268:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc1 = __SMLADX(x3, y1, acc1);
 787              		.loc 1 268 0
 788 050e F023     		mov	r3, #240
 789 0510 FB18     		add	r3, r7, r3
 790 0512 1968     		ldr	r1, [r3]
 791 0514 F423     		mov	r3, #244
 792 0516 FB18     		add	r3, r7, r3
 793 0518 1A68     		ldr	r2, [r3]
 794 051a 8C23     		mov	r3, #140
 795 051c 5B00     		lsl	r3, r3, #1
 796 051e FB18     		add	r3, r7, r3
 797 0520 1B68     		ldr	r3, [r3]
 798 0522 D020     		mov	r0, #208
 799 0524 3818     		add	r0, r7, r0
 800 0526 0160     		str	r1, [r0]
 801 0528 CC21     		mov	r1, #204
 802 052a 7918     		add	r1, r7, r1
 803 052c 0A60     		str	r2, [r1]
 804 052e C822     		mov	r2, #200
 805 0530 BA18     		add	r2, r7, r2
 806 0532 1360     		str	r3, [r2]
 807              	.LBB34:
 808              	.LBB35:
 955:.\Include/arm_math.h ****   }
 956:.\Include/arm_math.h **** 
 957:.\Include/arm_math.h **** 
 958:.\Include/arm_math.h ****   /*
 959:.\Include/arm_math.h ****    * @brief C custom defined SMLADX for M3 and M0 processors
 960:.\Include/arm_math.h ****    */
 961:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLADX(
 962:.\Include/arm_math.h ****   uint32_t x,
 963:.\Include/arm_math.h ****   uint32_t y,
 964:.\Include/arm_math.h ****   uint32_t sum)
 965:.\Include/arm_math.h ****   {
 966:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 37


 809              		.loc 2 966 0
 810 0534 D023     		mov	r3, #208
 811 0536 FB18     		add	r3, r7, r3
 812 0538 1B68     		ldr	r3, [r3]
 813 053a 1B04     		lsl	r3, r3, #16
 814 053c 1B14     		asr	r3, r3, #16
 815 053e CC22     		mov	r2, #204
 816 0540 BA18     		add	r2, r7, r2
 817 0542 1268     		ldr	r2, [r2]
 818 0544 1214     		asr	r2, r2, #16
 819 0546 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 820              		.loc 2 967 0
 821 0548 D023     		mov	r3, #208
 822 054a FB18     		add	r3, r7, r3
 823 054c 1B68     		ldr	r3, [r3]
 824 054e 1B14     		asr	r3, r3, #16
 825 0550 CC21     		mov	r1, #204
 826 0552 7918     		add	r1, r7, r1
 827 0554 0968     		ldr	r1, [r1]
 828 0556 0904     		lsl	r1, r1, #16
 829 0558 0914     		asr	r1, r1, #16
 830 055a 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 831              		.loc 2 966 0
 832 055c D218     		add	r2, r2, r3
 968:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 833              		.loc 2 968 0
 834 055e C823     		mov	r3, #200
 835 0560 FB18     		add	r3, r7, r3
 836 0562 1B68     		ldr	r3, [r3]
 967:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 837              		.loc 2 967 0
 838 0564 D318     		add	r3, r2, r3
 839              	.LBE35:
 840              	.LBE34:
 841              		.loc 1 268 0
 842 0566 8C22     		mov	r2, #140
 843 0568 5200     		lsl	r2, r2, #1
 844 056a BA18     		add	r2, r7, r2
 845 056c 1360     		str	r3, [r2]
 269:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 270:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* Read next two samples from scratch1 buffer */
 271:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         x1 = *__SIMD32(pScr1)++;
 846              		.loc 1 271 0
 847 056e 1423     		mov	r3, #20
 848 0570 FB18     		add	r3, r7, r3
 849 0572 1A68     		ldr	r2, [r3]
 850 0574 111D     		add	r1, r2, #4
 851 0576 1960     		str	r1, [r3]
 852 0578 1368     		ldr	r3, [r2]
 853 057a 8622     		mov	r2, #134
 854 057c 5200     		lsl	r2, r2, #1
 855 057e BA18     		add	r2, r7, r2
 856 0580 1360     		str	r3, [r2]
 272:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 273:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* pack input data */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 38


 274:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
 275:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         x3 = __PKHBT(x1, x2, 0);
 857              		.loc 1 275 0
 858 0582 8623     		mov	r3, #134
 859 0584 5B00     		lsl	r3, r3, #1
 860 0586 FB18     		add	r3, r7, r3
 861 0588 1B68     		ldr	r3, [r3]
 862 058a 1B04     		lsl	r3, r3, #16
 863 058c 1A0C     		lsr	r2, r3, #16
 864 058e 8423     		mov	r3, #132
 865 0590 5B00     		lsl	r3, r3, #1
 866 0592 FB18     		add	r3, r7, r3
 867 0594 1B68     		ldr	r3, [r3]
 868 0596 1B0C     		lsr	r3, r3, #16
 869 0598 1B04     		lsl	r3, r3, #16
 870 059a 1343     		orr	r3, r2
 871 059c F022     		mov	r2, #240
 872 059e BA18     		add	r2, r7, r2
 873 05a0 1360     		str	r3, [r2]
 276:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** #else
 277:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         x3 = __PKHBT(x2, x1, 0);
 278:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** #endif
 279:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 280:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc3 = __SMLADX(x3, y1, acc3);
 874              		.loc 1 280 0
 875 05a2 F023     		mov	r3, #240
 876 05a4 FB18     		add	r3, r7, r3
 877 05a6 1968     		ldr	r1, [r3]
 878 05a8 F423     		mov	r3, #244
 879 05aa FB18     		add	r3, r7, r3
 880 05ac 1A68     		ldr	r2, [r3]
 881 05ae 8823     		mov	r3, #136
 882 05b0 5B00     		lsl	r3, r3, #1
 883 05b2 FB18     		add	r3, r7, r3
 884 05b4 1B68     		ldr	r3, [r3]
 885 05b6 C420     		mov	r0, #196
 886 05b8 3818     		add	r0, r7, r0
 887 05ba 0160     		str	r1, [r0]
 888 05bc C021     		mov	r1, #192
 889 05be 7918     		add	r1, r7, r1
 890 05c0 0A60     		str	r2, [r1]
 891 05c2 BC22     		mov	r2, #188
 892 05c4 BA18     		add	r2, r7, r2
 893 05c6 1360     		str	r3, [r2]
 894              	.LBB36:
 895              	.LBB37:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 896              		.loc 2 966 0
 897 05c8 C423     		mov	r3, #196
 898 05ca FB18     		add	r3, r7, r3
 899 05cc 1B68     		ldr	r3, [r3]
 900 05ce 1B04     		lsl	r3, r3, #16
 901 05d0 1B14     		asr	r3, r3, #16
 902 05d2 C022     		mov	r2, #192
 903 05d4 BA18     		add	r2, r7, r2
 904 05d6 1268     		ldr	r2, [r2]
 905 05d8 1214     		asr	r2, r2, #16
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 39


 906 05da 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 907              		.loc 2 967 0
 908 05dc C423     		mov	r3, #196
 909 05de FB18     		add	r3, r7, r3
 910 05e0 1B68     		ldr	r3, [r3]
 911 05e2 1B14     		asr	r3, r3, #16
 912 05e4 C021     		mov	r1, #192
 913 05e6 7918     		add	r1, r7, r1
 914 05e8 0968     		ldr	r1, [r1]
 915 05ea 0904     		lsl	r1, r1, #16
 916 05ec 0914     		asr	r1, r1, #16
 917 05ee 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 918              		.loc 2 966 0
 919 05f0 D218     		add	r2, r2, r3
 920              		.loc 2 968 0
 921 05f2 BC23     		mov	r3, #188
 922 05f4 FB18     		add	r3, r7, r3
 923 05f6 1B68     		ldr	r3, [r3]
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 924              		.loc 2 967 0
 925 05f8 D318     		add	r3, r2, r3
 926              	.LBE37:
 927              	.LBE36:
 928              		.loc 1 280 0
 929 05fa 8822     		mov	r2, #136
 930 05fc 5200     		lsl	r2, r2, #1
 931 05fe BA18     		add	r2, r7, r2
 932 0600 1360     		str	r3, [r2]
 281:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 282:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* Read four samples from smaller buffer */
 283:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         y1 = _SIMD32_OFFSET(pScr2 + 2u);
 933              		.loc 1 283 0
 934 0602 BB69     		ldr	r3, [r7, #24]
 935 0604 5B68     		ldr	r3, [r3, #4]
 936 0606 F422     		mov	r2, #244
 937 0608 BA18     		add	r2, r7, r2
 938 060a 1360     		str	r3, [r2]
 284:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 285:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc0 = __SMLAD(x2, y1, acc0);
 939              		.loc 1 285 0
 940 060c 8423     		mov	r3, #132
 941 060e 5B00     		lsl	r3, r3, #1
 942 0610 FB18     		add	r3, r7, r3
 943 0612 1968     		ldr	r1, [r3]
 944 0614 F423     		mov	r3, #244
 945 0616 FB18     		add	r3, r7, r3
 946 0618 1A68     		ldr	r2, [r3]
 947 061a 8E23     		mov	r3, #142
 948 061c 5B00     		lsl	r3, r3, #1
 949 061e FB18     		add	r3, r7, r3
 950 0620 1B68     		ldr	r3, [r3]
 951 0622 B820     		mov	r0, #184
 952 0624 3818     		add	r0, r7, r0
 953 0626 0160     		str	r1, [r0]
 954 0628 B421     		mov	r1, #180
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 40


 955 062a 7918     		add	r1, r7, r1
 956 062c 0A60     		str	r2, [r1]
 957 062e B022     		mov	r2, #176
 958 0630 BA18     		add	r2, r7, r2
 959 0632 1360     		str	r3, [r2]
 960              	.LBB38:
 961              	.LBB39:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 962              		.loc 2 952 0
 963 0634 B823     		mov	r3, #184
 964 0636 FB18     		add	r3, r7, r3
 965 0638 1B68     		ldr	r3, [r3]
 966 063a 1B04     		lsl	r3, r3, #16
 967 063c 1B14     		asr	r3, r3, #16
 968 063e B422     		mov	r2, #180
 969 0640 BA18     		add	r2, r7, r2
 970 0642 1268     		ldr	r2, [r2]
 971 0644 1204     		lsl	r2, r2, #16
 972 0646 1214     		asr	r2, r2, #16
 973 0648 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 974              		.loc 2 953 0
 975 064a B823     		mov	r3, #184
 976 064c FB18     		add	r3, r7, r3
 977 064e 1B68     		ldr	r3, [r3]
 978 0650 1B14     		asr	r3, r3, #16
 979 0652 B421     		mov	r1, #180
 980 0654 7918     		add	r1, r7, r1
 981 0656 0968     		ldr	r1, [r1]
 982 0658 0914     		asr	r1, r1, #16
 983 065a 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 984              		.loc 2 952 0
 985 065c D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 986              		.loc 2 954 0
 987 065e B023     		mov	r3, #176
 988 0660 FB18     		add	r3, r7, r3
 989 0662 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 990              		.loc 2 953 0
 991 0664 D318     		add	r3, r2, r3
 992              	.LBE39:
 993              	.LBE38:
 994              		.loc 1 285 0
 995 0666 8E22     		mov	r2, #142
 996 0668 5200     		lsl	r2, r2, #1
 997 066a BA18     		add	r2, r7, r2
 998 066c 1360     		str	r3, [r2]
 286:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 287:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc2 = __SMLAD(x1, y1, acc2);
 999              		.loc 1 287 0
 1000 066e 8623     		mov	r3, #134
 1001 0670 5B00     		lsl	r3, r3, #1
 1002 0672 FB18     		add	r3, r7, r3
 1003 0674 1968     		ldr	r1, [r3]
 1004 0676 F423     		mov	r3, #244
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 41


 1005 0678 FB18     		add	r3, r7, r3
 1006 067a 1A68     		ldr	r2, [r3]
 1007 067c 8A23     		mov	r3, #138
 1008 067e 5B00     		lsl	r3, r3, #1
 1009 0680 FB18     		add	r3, r7, r3
 1010 0682 1B68     		ldr	r3, [r3]
 1011 0684 AC20     		mov	r0, #172
 1012 0686 3818     		add	r0, r7, r0
 1013 0688 0160     		str	r1, [r0]
 1014 068a A821     		mov	r1, #168
 1015 068c 7918     		add	r1, r7, r1
 1016 068e 0A60     		str	r2, [r1]
 1017 0690 A422     		mov	r2, #164
 1018 0692 BA18     		add	r2, r7, r2
 1019 0694 1360     		str	r3, [r2]
 1020              	.LBB40:
 1021              	.LBB41:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1022              		.loc 2 952 0
 1023 0696 AC23     		mov	r3, #172
 1024 0698 FB18     		add	r3, r7, r3
 1025 069a 1B68     		ldr	r3, [r3]
 1026 069c 1B04     		lsl	r3, r3, #16
 1027 069e 1B14     		asr	r3, r3, #16
 1028 06a0 A822     		mov	r2, #168
 1029 06a2 BA18     		add	r2, r7, r2
 1030 06a4 1268     		ldr	r2, [r2]
 1031 06a6 1204     		lsl	r2, r2, #16
 1032 06a8 1214     		asr	r2, r2, #16
 1033 06aa 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1034              		.loc 2 953 0
 1035 06ac AC23     		mov	r3, #172
 1036 06ae FB18     		add	r3, r7, r3
 1037 06b0 1B68     		ldr	r3, [r3]
 1038 06b2 1B14     		asr	r3, r3, #16
 1039 06b4 A821     		mov	r1, #168
 1040 06b6 7918     		add	r1, r7, r1
 1041 06b8 0968     		ldr	r1, [r1]
 1042 06ba 0914     		asr	r1, r1, #16
 1043 06bc 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1044              		.loc 2 952 0
 1045 06be D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 1046              		.loc 2 954 0
 1047 06c0 A423     		mov	r3, #164
 1048 06c2 FB18     		add	r3, r7, r3
 1049 06c4 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1050              		.loc 2 953 0
 1051 06c6 D318     		add	r3, r2, r3
 1052              	.LBE41:
 1053              	.LBE40:
 1054              		.loc 1 287 0
 1055 06c8 8A22     		mov	r2, #138
 1056 06ca 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 42


 1057 06cc BA18     		add	r2, r7, r2
 1058 06ce 1360     		str	r3, [r2]
 288:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 289:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc1 = __SMLADX(x3, y1, acc1);
 1059              		.loc 1 289 0
 1060 06d0 F023     		mov	r3, #240
 1061 06d2 FB18     		add	r3, r7, r3
 1062 06d4 1968     		ldr	r1, [r3]
 1063 06d6 F423     		mov	r3, #244
 1064 06d8 FB18     		add	r3, r7, r3
 1065 06da 1A68     		ldr	r2, [r3]
 1066 06dc 8C23     		mov	r3, #140
 1067 06de 5B00     		lsl	r3, r3, #1
 1068 06e0 FB18     		add	r3, r7, r3
 1069 06e2 1B68     		ldr	r3, [r3]
 1070 06e4 A020     		mov	r0, #160
 1071 06e6 3818     		add	r0, r7, r0
 1072 06e8 0160     		str	r1, [r0]
 1073 06ea 9C21     		mov	r1, #156
 1074 06ec 7918     		add	r1, r7, r1
 1075 06ee 0A60     		str	r2, [r1]
 1076 06f0 9822     		mov	r2, #152
 1077 06f2 BA18     		add	r2, r7, r2
 1078 06f4 1360     		str	r3, [r2]
 1079              	.LBB42:
 1080              	.LBB43:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 1081              		.loc 2 966 0
 1082 06f6 A023     		mov	r3, #160
 1083 06f8 FB18     		add	r3, r7, r3
 1084 06fa 1B68     		ldr	r3, [r3]
 1085 06fc 1B04     		lsl	r3, r3, #16
 1086 06fe 1B14     		asr	r3, r3, #16
 1087 0700 9C22     		mov	r2, #156
 1088 0702 BA18     		add	r2, r7, r2
 1089 0704 1268     		ldr	r2, [r2]
 1090 0706 1214     		asr	r2, r2, #16
 1091 0708 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1092              		.loc 2 967 0
 1093 070a A023     		mov	r3, #160
 1094 070c FB18     		add	r3, r7, r3
 1095 070e 1B68     		ldr	r3, [r3]
 1096 0710 1B14     		asr	r3, r3, #16
 1097 0712 9C21     		mov	r1, #156
 1098 0714 7918     		add	r1, r7, r1
 1099 0716 0968     		ldr	r1, [r1]
 1100 0718 0904     		lsl	r1, r1, #16
 1101 071a 0914     		asr	r1, r1, #16
 1102 071c 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 1103              		.loc 2 966 0
 1104 071e D218     		add	r2, r2, r3
 1105              		.loc 2 968 0
 1106 0720 9823     		mov	r3, #152
 1107 0722 FB18     		add	r3, r7, r3
 1108 0724 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 43


 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1109              		.loc 2 967 0
 1110 0726 D318     		add	r3, r2, r3
 1111              	.LBE43:
 1112              	.LBE42:
 1113              		.loc 1 289 0
 1114 0728 8C22     		mov	r2, #140
 1115 072a 5200     		lsl	r2, r2, #1
 1116 072c BA18     		add	r2, r7, r2
 1117 072e 1360     		str	r3, [r2]
 290:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 291:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         x2 = *__SIMD32(pScr1)++;
 1118              		.loc 1 291 0
 1119 0730 1423     		mov	r3, #20
 1120 0732 FB18     		add	r3, r7, r3
 1121 0734 1A68     		ldr	r2, [r3]
 1122 0736 111D     		add	r1, r2, #4
 1123 0738 1960     		str	r1, [r3]
 1124 073a 1368     		ldr	r3, [r2]
 1125 073c 8422     		mov	r2, #132
 1126 073e 5200     		lsl	r2, r2, #1
 1127 0740 BA18     		add	r2, r7, r2
 1128 0742 1360     		str	r3, [r2]
 292:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 293:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
 294:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         x3 = __PKHBT(x2, x1, 0);
 1129              		.loc 1 294 0
 1130 0744 8423     		mov	r3, #132
 1131 0746 5B00     		lsl	r3, r3, #1
 1132 0748 FB18     		add	r3, r7, r3
 1133 074a 1B68     		ldr	r3, [r3]
 1134 074c 1B04     		lsl	r3, r3, #16
 1135 074e 1A0C     		lsr	r2, r3, #16
 1136 0750 8623     		mov	r3, #134
 1137 0752 5B00     		lsl	r3, r3, #1
 1138 0754 FB18     		add	r3, r7, r3
 1139 0756 1B68     		ldr	r3, [r3]
 1140 0758 1B0C     		lsr	r3, r3, #16
 1141 075a 1B04     		lsl	r3, r3, #16
 1142 075c 1343     		orr	r3, r2
 1143 075e F022     		mov	r2, #240
 1144 0760 BA18     		add	r2, r7, r2
 1145 0762 1360     		str	r3, [r2]
 295:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** #else
 296:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         x3 = __PKHBT(x1, x2, 0);
 297:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** #endif
 298:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 299:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc3 = __SMLADX(x3, y1, acc3);
 1146              		.loc 1 299 0
 1147 0764 F023     		mov	r3, #240
 1148 0766 FB18     		add	r3, r7, r3
 1149 0768 1968     		ldr	r1, [r3]
 1150 076a F423     		mov	r3, #244
 1151 076c FB18     		add	r3, r7, r3
 1152 076e 1A68     		ldr	r2, [r3]
 1153 0770 8823     		mov	r3, #136
 1154 0772 5B00     		lsl	r3, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 44


 1155 0774 FB18     		add	r3, r7, r3
 1156 0776 1B68     		ldr	r3, [r3]
 1157 0778 9420     		mov	r0, #148
 1158 077a 3818     		add	r0, r7, r0
 1159 077c 0160     		str	r1, [r0]
 1160 077e 9021     		mov	r1, #144
 1161 0780 7918     		add	r1, r7, r1
 1162 0782 0A60     		str	r2, [r1]
 1163 0784 8C22     		mov	r2, #140
 1164 0786 BA18     		add	r2, r7, r2
 1165 0788 1360     		str	r3, [r2]
 1166              	.LBB44:
 1167              	.LBB45:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 1168              		.loc 2 966 0
 1169 078a 9423     		mov	r3, #148
 1170 078c FB18     		add	r3, r7, r3
 1171 078e 1B68     		ldr	r3, [r3]
 1172 0790 1B04     		lsl	r3, r3, #16
 1173 0792 1B14     		asr	r3, r3, #16
 1174 0794 9022     		mov	r2, #144
 1175 0796 BA18     		add	r2, r7, r2
 1176 0798 1268     		ldr	r2, [r2]
 1177 079a 1214     		asr	r2, r2, #16
 1178 079c 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1179              		.loc 2 967 0
 1180 079e 9423     		mov	r3, #148
 1181 07a0 FB18     		add	r3, r7, r3
 1182 07a2 1B68     		ldr	r3, [r3]
 1183 07a4 1B14     		asr	r3, r3, #16
 1184 07a6 9021     		mov	r1, #144
 1185 07a8 7918     		add	r1, r7, r1
 1186 07aa 0968     		ldr	r1, [r1]
 1187 07ac 0904     		lsl	r1, r1, #16
 1188 07ae 0914     		asr	r1, r1, #16
 1189 07b0 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 1190              		.loc 2 966 0
 1191 07b2 D218     		add	r2, r2, r3
 1192              		.loc 2 968 0
 1193 07b4 8C23     		mov	r3, #140
 1194 07b6 FB18     		add	r3, r7, r3
 1195 07b8 1B68     		ldr	r3, [r3]
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1196              		.loc 2 967 0
 1197 07ba D318     		add	r3, r2, r3
 1198              	.LBE45:
 1199              	.LBE44:
 1200              		.loc 1 299 0
 1201 07bc 8822     		mov	r2, #136
 1202 07be 5200     		lsl	r2, r2, #1
 1203 07c0 BA18     		add	r2, r7, r2
 1204 07c2 1360     		str	r3, [r2]
 300:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 301:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         pScr2 += 4u;
 1205              		.loc 1 301 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 45


 1206 07c4 BB69     		ldr	r3, [r7, #24]
 1207 07c6 0833     		add	r3, r3, #8
 1208 07c8 BB61     		str	r3, [r7, #24]
 302:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 303:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 304:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* Decrement the loop counter */
 305:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         tapCnt--;
 1209              		.loc 1 305 0
 1210 07ca 9223     		mov	r3, #146
 1211 07cc 5B00     		lsl	r3, r3, #1
 1212 07ce FB18     		add	r3, r7, r3
 1213 07d0 1B68     		ldr	r3, [r3]
 1214 07d2 013B     		sub	r3, r3, #1
 1215 07d4 9222     		mov	r2, #146
 1216 07d6 5200     		lsl	r2, r2, #1
 1217 07d8 BA18     		add	r2, r7, r2
 1218 07da 1360     		str	r3, [r2]
 1219              	.L15:
 250:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       {
 1220              		.loc 1 250 0
 1221 07dc 9223     		mov	r3, #146
 1222 07de 5B00     		lsl	r3, r3, #1
 1223 07e0 FB18     		add	r3, r7, r3
 1224 07e2 1B68     		ldr	r3, [r3]
 1225 07e4 002B     		cmp	r3, #0
 1226 07e6 00D0     		beq	.LCB1089
 1227 07e8 1AE6     		b	.L24	@long jump
 1228              	.LCB1089:
 306:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       }
 307:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 308:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 309:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 310:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Update scratch pointer for remaining samples of smaller length sequence */
 311:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       pScr1 -= 4u;
 1229              		.loc 1 311 0
 1230 07ea 7B69     		ldr	r3, [r7, #20]
 1231 07ec 083B     		sub	r3, r3, #8
 1232 07ee 7B61     		str	r3, [r7, #20]
 312:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 313:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 314:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* apply same above for remaining samples of smaller length sequence */
 315:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       tapCnt = (srcBLen) & 3u;
 1233              		.loc 1 315 0
 1234 07f0 3B68     		ldr	r3, [r7]
 1235 07f2 0322     		mov	r2, #3
 1236 07f4 1340     		and	r3, r2
 1237 07f6 9222     		mov	r2, #146
 1238 07f8 5200     		lsl	r2, r2, #1
 1239 07fa BA18     		add	r2, r7, r2
 1240 07fc 1360     		str	r3, [r2]
 316:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 317:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       while (tapCnt > 0u)
 1241              		.loc 1 317 0
 1242 07fe 55E0     		b	.L25
 1243              	.L26:
 318:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       {
 319:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 46


 320:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* accumlate the results */
 321:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc0 += (*pScr1++ * *pScr2);
 1244              		.loc 1 321 0
 1245 0800 7B69     		ldr	r3, [r7, #20]
 1246 0802 9A1C     		add	r2, r3, #2
 1247 0804 7A61     		str	r2, [r7, #20]
 1248 0806 1B88     		ldrh	r3, [r3]
 1249 0808 1BB2     		sxth	r3, r3
 1250 080a BA69     		ldr	r2, [r7, #24]
 1251 080c 1288     		ldrh	r2, [r2]
 1252 080e 12B2     		sxth	r2, r2
 1253 0810 5343     		mul	r3, r2
 1254 0812 8E22     		mov	r2, #142
 1255 0814 5200     		lsl	r2, r2, #1
 1256 0816 BA18     		add	r2, r7, r2
 1257 0818 1268     		ldr	r2, [r2]
 1258 081a D318     		add	r3, r2, r3
 1259 081c 8E22     		mov	r2, #142
 1260 081e 5200     		lsl	r2, r2, #1
 1261 0820 BA18     		add	r2, r7, r2
 1262 0822 1360     		str	r3, [r2]
 322:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc1 += (*pScr1++ * *pScr2);
 1263              		.loc 1 322 0
 1264 0824 7B69     		ldr	r3, [r7, #20]
 1265 0826 9A1C     		add	r2, r3, #2
 1266 0828 7A61     		str	r2, [r7, #20]
 1267 082a 1B88     		ldrh	r3, [r3]
 1268 082c 1BB2     		sxth	r3, r3
 1269 082e BA69     		ldr	r2, [r7, #24]
 1270 0830 1288     		ldrh	r2, [r2]
 1271 0832 12B2     		sxth	r2, r2
 1272 0834 5343     		mul	r3, r2
 1273 0836 8C22     		mov	r2, #140
 1274 0838 5200     		lsl	r2, r2, #1
 1275 083a BA18     		add	r2, r7, r2
 1276 083c 1268     		ldr	r2, [r2]
 1277 083e D318     		add	r3, r2, r3
 1278 0840 8C22     		mov	r2, #140
 1279 0842 5200     		lsl	r2, r2, #1
 1280 0844 BA18     		add	r2, r7, r2
 1281 0846 1360     		str	r3, [r2]
 323:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc2 += (*pScr1++ * *pScr2);
 1282              		.loc 1 323 0
 1283 0848 7B69     		ldr	r3, [r7, #20]
 1284 084a 9A1C     		add	r2, r3, #2
 1285 084c 7A61     		str	r2, [r7, #20]
 1286 084e 1B88     		ldrh	r3, [r3]
 1287 0850 1BB2     		sxth	r3, r3
 1288 0852 BA69     		ldr	r2, [r7, #24]
 1289 0854 1288     		ldrh	r2, [r2]
 1290 0856 12B2     		sxth	r2, r2
 1291 0858 5343     		mul	r3, r2
 1292 085a 8A22     		mov	r2, #138
 1293 085c 5200     		lsl	r2, r2, #1
 1294 085e BA18     		add	r2, r7, r2
 1295 0860 1268     		ldr	r2, [r2]
 1296 0862 D318     		add	r3, r2, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 47


 1297 0864 8A22     		mov	r2, #138
 1298 0866 5200     		lsl	r2, r2, #1
 1299 0868 BA18     		add	r2, r7, r2
 1300 086a 1360     		str	r3, [r2]
 324:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc3 += (*pScr1++ * *pScr2++);
 1301              		.loc 1 324 0
 1302 086c 7B69     		ldr	r3, [r7, #20]
 1303 086e 9A1C     		add	r2, r3, #2
 1304 0870 7A61     		str	r2, [r7, #20]
 1305 0872 1B88     		ldrh	r3, [r3]
 1306 0874 1AB2     		sxth	r2, r3
 1307 0876 BB69     		ldr	r3, [r7, #24]
 1308 0878 991C     		add	r1, r3, #2
 1309 087a B961     		str	r1, [r7, #24]
 1310 087c 1B88     		ldrh	r3, [r3]
 1311 087e 1BB2     		sxth	r3, r3
 1312 0880 5343     		mul	r3, r2
 1313 0882 8822     		mov	r2, #136
 1314 0884 5200     		lsl	r2, r2, #1
 1315 0886 BA18     		add	r2, r7, r2
 1316 0888 1268     		ldr	r2, [r2]
 1317 088a D318     		add	r3, r2, r3
 1318 088c 8822     		mov	r2, #136
 1319 088e 5200     		lsl	r2, r2, #1
 1320 0890 BA18     		add	r2, r7, r2
 1321 0892 1360     		str	r3, [r2]
 325:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 326:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         pScr1 -= 3u;
 1322              		.loc 1 326 0
 1323 0894 7B69     		ldr	r3, [r7, #20]
 1324 0896 063B     		sub	r3, r3, #6
 1325 0898 7B61     		str	r3, [r7, #20]
 327:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 328:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* Decrement the loop counter */
 329:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         tapCnt--;
 1326              		.loc 1 329 0
 1327 089a 9223     		mov	r3, #146
 1328 089c 5B00     		lsl	r3, r3, #1
 1329 089e FB18     		add	r3, r7, r3
 1330 08a0 1B68     		ldr	r3, [r3]
 1331 08a2 013B     		sub	r3, r3, #1
 1332 08a4 9222     		mov	r2, #146
 1333 08a6 5200     		lsl	r2, r2, #1
 1334 08a8 BA18     		add	r2, r7, r2
 1335 08aa 1360     		str	r3, [r2]
 1336              	.L25:
 317:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       {
 1337              		.loc 1 317 0
 1338 08ac 9223     		mov	r3, #146
 1339 08ae 5B00     		lsl	r3, r3, #1
 1340 08b0 FB18     		add	r3, r7, r3
 1341 08b2 1B68     		ldr	r3, [r3]
 1342 08b4 002B     		cmp	r3, #0
 1343 08b6 A3D1     		bne	.L26
 330:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       }
 331:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 332:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       blkCnt--;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 48


 1344              		.loc 1 332 0
 1345 08b8 9423     		mov	r3, #148
 1346 08ba 5B00     		lsl	r3, r3, #1
 1347 08bc FB18     		add	r3, r7, r3
 1348 08be 1B68     		ldr	r3, [r3]
 1349 08c0 013B     		sub	r3, r3, #1
 1350 08c2 9422     		mov	r2, #148
 1351 08c4 5200     		lsl	r2, r2, #1
 1352 08c6 BA18     		add	r2, r7, r2
 1353 08c8 1360     		str	r3, [r2]
 333:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 334:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Store the result in the accumulator in the destination buffer. */
 335:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       out0 = (q7_t) (__SSAT(acc0 >> 7u, 8));
 1354              		.loc 1 335 0
 1355 08ca 8E23     		mov	r3, #142
 1356 08cc 5B00     		lsl	r3, r3, #1
 1357 08ce FB18     		add	r3, r7, r3
 1358 08d0 1B68     		ldr	r3, [r3]
 1359 08d2 DB11     		asr	r3, r3, #7
 1360 08d4 8822     		mov	r2, #136
 1361 08d6 BA18     		add	r2, r7, r2
 1362 08d8 1360     		str	r3, [r2]
 1363 08da 0823     		mov	r3, #8
 1364 08dc 8422     		mov	r2, #132
 1365 08de BA18     		add	r2, r7, r2
 1366 08e0 1360     		str	r3, [r2]
 1367              	.LBB46:
 1368              	.LBB47:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1369              		.loc 2 699 0
 1370 08e2 0123     		mov	r3, #1
 1371 08e4 8022     		mov	r2, #128
 1372 08e6 BA18     		add	r2, r7, r2
 1373 08e8 1360     		str	r3, [r2]
 700:.\Include/arm_math.h ****     {
 1374              		.loc 2 700 0
 1375 08ea 0023     		mov	r3, #0
 1376 08ec FB67     		str	r3, [r7, #124]
 1377 08ee 09E0     		b	.L27
 1378              	.L28:
 702:.\Include/arm_math.h ****     }
 1379              		.loc 2 702 0
 1380 08f0 8023     		mov	r3, #128
 1381 08f2 FB18     		add	r3, r7, r3
 1382 08f4 1B68     		ldr	r3, [r3]
 1383 08f6 5B00     		lsl	r3, r3, #1
 1384 08f8 8022     		mov	r2, #128
 1385 08fa BA18     		add	r2, r7, r2
 1386 08fc 1360     		str	r3, [r2]
 700:.\Include/arm_math.h ****     {
 1387              		.loc 2 700 0
 1388 08fe FB6F     		ldr	r3, [r7, #124]
 1389 0900 0133     		add	r3, r3, #1
 1390 0902 FB67     		str	r3, [r7, #124]
 1391              	.L27:
 1392 0904 8423     		mov	r3, #132
 1393 0906 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 49


 1394 0908 1B68     		ldr	r3, [r3]
 1395 090a 013B     		sub	r3, r3, #1
 1396 090c FA6F     		ldr	r2, [r7, #124]
 1397 090e 9A42     		cmp	r2, r3
 1398 0910 EED3     		bcc	.L28
 705:.\Include/arm_math.h ****     {
 1399              		.loc 2 705 0
 1400 0912 8823     		mov	r3, #136
 1401 0914 FB18     		add	r3, r7, r3
 1402 0916 1B68     		ldr	r3, [r3]
 1403 0918 002B     		cmp	r3, #0
 1404 091a 15DD     		ble	.L29
 707:.\Include/arm_math.h **** 
 1405              		.loc 2 707 0
 1406 091c 8023     		mov	r3, #128
 1407 091e FB18     		add	r3, r7, r3
 1408 0920 1B68     		ldr	r3, [r3]
 1409 0922 013B     		sub	r3, r3, #1
 1410 0924 8022     		mov	r2, #128
 1411 0926 BA18     		add	r2, r7, r2
 1412 0928 1360     		str	r3, [r2]
 709:.\Include/arm_math.h ****       {
 1413              		.loc 2 709 0
 1414 092a 8823     		mov	r3, #136
 1415 092c FB18     		add	r3, r7, r3
 1416 092e 1A68     		ldr	r2, [r3]
 1417 0930 8023     		mov	r3, #128
 1418 0932 FB18     		add	r3, r7, r3
 1419 0934 1B68     		ldr	r3, [r3]
 1420 0936 9A42     		cmp	r2, r3
 1421 0938 16DD     		ble	.L66
 711:.\Include/arm_math.h ****       }
 1422              		.loc 2 711 0
 1423 093a 8023     		mov	r3, #128
 1424 093c FB18     		add	r3, r7, r3
 1425 093e 1B68     		ldr	r3, [r3]
 1426 0940 8822     		mov	r2, #136
 1427 0942 BA18     		add	r2, r7, r2
 1428 0944 1360     		str	r3, [r2]
 1429 0946 10E0     		b	.L31
 1430              	.L29:
 716:.\Include/arm_math.h **** 
 1431              		.loc 2 716 0
 1432 0948 8023     		mov	r3, #128
 1433 094a FB18     		add	r3, r7, r3
 1434 094c 1B68     		ldr	r3, [r3]
 1435 094e 5B42     		neg	r3, r3
 1436 0950 BB67     		str	r3, [r7, #120]
 718:.\Include/arm_math.h ****       {
 1437              		.loc 2 718 0
 1438 0952 8823     		mov	r3, #136
 1439 0954 FB18     		add	r3, r7, r3
 1440 0956 1A68     		ldr	r2, [r3]
 1441 0958 BB6F     		ldr	r3, [r7, #120]
 1442 095a 9A42     		cmp	r2, r3
 1443 095c 05DA     		bge	.L31
 720:.\Include/arm_math.h ****       }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 50


 1444              		.loc 2 720 0
 1445 095e BB6F     		ldr	r3, [r7, #120]
 1446 0960 8822     		mov	r2, #136
 1447 0962 BA18     		add	r2, r7, r2
 1448 0964 1360     		str	r3, [r2]
 1449 0966 00E0     		b	.L31
 1450              	.L66:
 711:.\Include/arm_math.h ****       }
 1451              		.loc 2 711 0
 1452 0968 C046     		mov	r8, r8
 1453              	.L31:
 723:.\Include/arm_math.h ****   }
 1454              		.loc 2 723 0
 1455 096a 8823     		mov	r3, #136
 1456 096c FB18     		add	r3, r7, r3
 1457 096e 1A68     		ldr	r2, [r3]
 1458              	.LBE47:
 1459              	.LBE46:
 1460              		.loc 1 335 0
 1461 0970 EF23     		mov	r3, #239
 1462 0972 FB18     		add	r3, r7, r3
 1463 0974 1A70     		strb	r2, [r3]
 336:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       out1 = (q7_t) (__SSAT(acc1 >> 7u, 8));
 1464              		.loc 1 336 0
 1465 0976 8C23     		mov	r3, #140
 1466 0978 5B00     		lsl	r3, r3, #1
 1467 097a FB18     		add	r3, r7, r3
 1468 097c 1B68     		ldr	r3, [r3]
 1469 097e DB11     		asr	r3, r3, #7
 1470 0980 7B67     		str	r3, [r7, #116]
 1471 0982 0823     		mov	r3, #8
 1472 0984 3B67     		str	r3, [r7, #112]
 1473              	.LBB48:
 1474              	.LBB49:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1475              		.loc 2 699 0
 1476 0986 0123     		mov	r3, #1
 1477 0988 FB66     		str	r3, [r7, #108]
 700:.\Include/arm_math.h ****     {
 1478              		.loc 2 700 0
 1479 098a 0023     		mov	r3, #0
 1480 098c BB66     		str	r3, [r7, #104]
 1481 098e 05E0     		b	.L33
 1482              	.L34:
 702:.\Include/arm_math.h ****     }
 1483              		.loc 2 702 0
 1484 0990 FB6E     		ldr	r3, [r7, #108]
 1485 0992 5B00     		lsl	r3, r3, #1
 1486 0994 FB66     		str	r3, [r7, #108]
 700:.\Include/arm_math.h ****     {
 1487              		.loc 2 700 0
 1488 0996 BB6E     		ldr	r3, [r7, #104]
 1489 0998 0133     		add	r3, r3, #1
 1490 099a BB66     		str	r3, [r7, #104]
 1491              	.L33:
 1492 099c 3B6F     		ldr	r3, [r7, #112]
 1493 099e 013B     		sub	r3, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 51


 1494 09a0 BA6E     		ldr	r2, [r7, #104]
 1495 09a2 9A42     		cmp	r2, r3
 1496 09a4 F4D3     		bcc	.L34
 705:.\Include/arm_math.h ****     {
 1497              		.loc 2 705 0
 1498 09a6 7B6F     		ldr	r3, [r7, #116]
 1499 09a8 002B     		cmp	r3, #0
 1500 09aa 09DD     		ble	.L35
 707:.\Include/arm_math.h **** 
 1501              		.loc 2 707 0
 1502 09ac FB6E     		ldr	r3, [r7, #108]
 1503 09ae 013B     		sub	r3, r3, #1
 1504 09b0 FB66     		str	r3, [r7, #108]
 709:.\Include/arm_math.h ****       {
 1505              		.loc 2 709 0
 1506 09b2 7A6F     		ldr	r2, [r7, #116]
 1507 09b4 FB6E     		ldr	r3, [r7, #108]
 1508 09b6 9A42     		cmp	r2, r3
 1509 09b8 0CDD     		ble	.L67
 711:.\Include/arm_math.h ****       }
 1510              		.loc 2 711 0
 1511 09ba FB6E     		ldr	r3, [r7, #108]
 1512 09bc 7B67     		str	r3, [r7, #116]
 1513 09be 0AE0     		b	.L37
 1514              	.L35:
 716:.\Include/arm_math.h **** 
 1515              		.loc 2 716 0
 1516 09c0 FB6E     		ldr	r3, [r7, #108]
 1517 09c2 5B42     		neg	r3, r3
 1518 09c4 7B66     		str	r3, [r7, #100]
 718:.\Include/arm_math.h ****       {
 1519              		.loc 2 718 0
 1520 09c6 7A6F     		ldr	r2, [r7, #116]
 1521 09c8 7B6E     		ldr	r3, [r7, #100]
 1522 09ca 9A42     		cmp	r2, r3
 1523 09cc 03DA     		bge	.L37
 720:.\Include/arm_math.h ****       }
 1524              		.loc 2 720 0
 1525 09ce 7B6E     		ldr	r3, [r7, #100]
 1526 09d0 7B67     		str	r3, [r7, #116]
 1527 09d2 00E0     		b	.L37
 1528              	.L67:
 711:.\Include/arm_math.h ****       }
 1529              		.loc 2 711 0
 1530 09d4 C046     		mov	r8, r8
 1531              	.L37:
 723:.\Include/arm_math.h ****   }
 1532              		.loc 2 723 0
 1533 09d6 7A6F     		ldr	r2, [r7, #116]
 1534              	.LBE49:
 1535              	.LBE48:
 1536              		.loc 1 336 0
 1537 09d8 EE23     		mov	r3, #238
 1538 09da FB18     		add	r3, r7, r3
 1539 09dc 1A70     		strb	r2, [r3]
 337:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       out2 = (q7_t) (__SSAT(acc2 >> 7u, 8));
 1540              		.loc 1 337 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 52


 1541 09de 8A23     		mov	r3, #138
 1542 09e0 5B00     		lsl	r3, r3, #1
 1543 09e2 FB18     		add	r3, r7, r3
 1544 09e4 1B68     		ldr	r3, [r3]
 1545 09e6 DB11     		asr	r3, r3, #7
 1546 09e8 3B66     		str	r3, [r7, #96]
 1547 09ea 0823     		mov	r3, #8
 1548 09ec FB65     		str	r3, [r7, #92]
 1549              	.LBB50:
 1550              	.LBB51:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1551              		.loc 2 699 0
 1552 09ee 0123     		mov	r3, #1
 1553 09f0 BB65     		str	r3, [r7, #88]
 700:.\Include/arm_math.h ****     {
 1554              		.loc 2 700 0
 1555 09f2 0023     		mov	r3, #0
 1556 09f4 7B65     		str	r3, [r7, #84]
 1557 09f6 05E0     		b	.L39
 1558              	.L40:
 702:.\Include/arm_math.h ****     }
 1559              		.loc 2 702 0
 1560 09f8 BB6D     		ldr	r3, [r7, #88]
 1561 09fa 5B00     		lsl	r3, r3, #1
 1562 09fc BB65     		str	r3, [r7, #88]
 700:.\Include/arm_math.h ****     {
 1563              		.loc 2 700 0
 1564 09fe 7B6D     		ldr	r3, [r7, #84]
 1565 0a00 0133     		add	r3, r3, #1
 1566 0a02 7B65     		str	r3, [r7, #84]
 1567              	.L39:
 1568 0a04 FB6D     		ldr	r3, [r7, #92]
 1569 0a06 013B     		sub	r3, r3, #1
 1570 0a08 7A6D     		ldr	r2, [r7, #84]
 1571 0a0a 9A42     		cmp	r2, r3
 1572 0a0c F4D3     		bcc	.L40
 705:.\Include/arm_math.h ****     {
 1573              		.loc 2 705 0
 1574 0a0e 3B6E     		ldr	r3, [r7, #96]
 1575 0a10 002B     		cmp	r3, #0
 1576 0a12 09DD     		ble	.L41
 707:.\Include/arm_math.h **** 
 1577              		.loc 2 707 0
 1578 0a14 BB6D     		ldr	r3, [r7, #88]
 1579 0a16 013B     		sub	r3, r3, #1
 1580 0a18 BB65     		str	r3, [r7, #88]
 709:.\Include/arm_math.h ****       {
 1581              		.loc 2 709 0
 1582 0a1a 3A6E     		ldr	r2, [r7, #96]
 1583 0a1c BB6D     		ldr	r3, [r7, #88]
 1584 0a1e 9A42     		cmp	r2, r3
 1585 0a20 0CDD     		ble	.L68
 711:.\Include/arm_math.h ****       }
 1586              		.loc 2 711 0
 1587 0a22 BB6D     		ldr	r3, [r7, #88]
 1588 0a24 3B66     		str	r3, [r7, #96]
 1589 0a26 0AE0     		b	.L43
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 53


 1590              	.L41:
 716:.\Include/arm_math.h **** 
 1591              		.loc 2 716 0
 1592 0a28 BB6D     		ldr	r3, [r7, #88]
 1593 0a2a 5B42     		neg	r3, r3
 1594 0a2c 3B65     		str	r3, [r7, #80]
 718:.\Include/arm_math.h ****       {
 1595              		.loc 2 718 0
 1596 0a2e 3A6E     		ldr	r2, [r7, #96]
 1597 0a30 3B6D     		ldr	r3, [r7, #80]
 1598 0a32 9A42     		cmp	r2, r3
 1599 0a34 03DA     		bge	.L43
 720:.\Include/arm_math.h ****       }
 1600              		.loc 2 720 0
 1601 0a36 3B6D     		ldr	r3, [r7, #80]
 1602 0a38 3B66     		str	r3, [r7, #96]
 1603 0a3a 00E0     		b	.L43
 1604              	.L68:
 711:.\Include/arm_math.h ****       }
 1605              		.loc 2 711 0
 1606 0a3c C046     		mov	r8, r8
 1607              	.L43:
 723:.\Include/arm_math.h ****   }
 1608              		.loc 2 723 0
 1609 0a3e 3A6E     		ldr	r2, [r7, #96]
 1610              	.LBE51:
 1611              	.LBE50:
 1612              		.loc 1 337 0
 1613 0a40 ED23     		mov	r3, #237
 1614 0a42 FB18     		add	r3, r7, r3
 1615 0a44 1A70     		strb	r2, [r3]
 338:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       out3 = (q7_t) (__SSAT(acc3 >> 7u, 8));
 1616              		.loc 1 338 0
 1617 0a46 8823     		mov	r3, #136
 1618 0a48 5B00     		lsl	r3, r3, #1
 1619 0a4a FB18     		add	r3, r7, r3
 1620 0a4c 1B68     		ldr	r3, [r3]
 1621 0a4e DB11     		asr	r3, r3, #7
 1622 0a50 FB64     		str	r3, [r7, #76]
 1623 0a52 0823     		mov	r3, #8
 1624 0a54 BB64     		str	r3, [r7, #72]
 1625              	.LBB52:
 1626              	.LBB53:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1627              		.loc 2 699 0
 1628 0a56 0123     		mov	r3, #1
 1629 0a58 7B64     		str	r3, [r7, #68]
 700:.\Include/arm_math.h ****     {
 1630              		.loc 2 700 0
 1631 0a5a 0023     		mov	r3, #0
 1632 0a5c 3B64     		str	r3, [r7, #64]
 1633 0a5e 05E0     		b	.L45
 1634              	.L46:
 702:.\Include/arm_math.h ****     }
 1635              		.loc 2 702 0
 1636 0a60 7B6C     		ldr	r3, [r7, #68]
 1637 0a62 5B00     		lsl	r3, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 54


 1638 0a64 7B64     		str	r3, [r7, #68]
 700:.\Include/arm_math.h ****     {
 1639              		.loc 2 700 0
 1640 0a66 3B6C     		ldr	r3, [r7, #64]
 1641 0a68 0133     		add	r3, r3, #1
 1642 0a6a 3B64     		str	r3, [r7, #64]
 1643              	.L45:
 1644 0a6c BB6C     		ldr	r3, [r7, #72]
 1645 0a6e 013B     		sub	r3, r3, #1
 1646 0a70 3A6C     		ldr	r2, [r7, #64]
 1647 0a72 9A42     		cmp	r2, r3
 1648 0a74 F4D3     		bcc	.L46
 705:.\Include/arm_math.h ****     {
 1649              		.loc 2 705 0
 1650 0a76 FB6C     		ldr	r3, [r7, #76]
 1651 0a78 002B     		cmp	r3, #0
 1652 0a7a 09DD     		ble	.L47
 707:.\Include/arm_math.h **** 
 1653              		.loc 2 707 0
 1654 0a7c 7B6C     		ldr	r3, [r7, #68]
 1655 0a7e 013B     		sub	r3, r3, #1
 1656 0a80 7B64     		str	r3, [r7, #68]
 709:.\Include/arm_math.h ****       {
 1657              		.loc 2 709 0
 1658 0a82 FA6C     		ldr	r2, [r7, #76]
 1659 0a84 7B6C     		ldr	r3, [r7, #68]
 1660 0a86 9A42     		cmp	r2, r3
 1661 0a88 0CDD     		ble	.L69
 711:.\Include/arm_math.h ****       }
 1662              		.loc 2 711 0
 1663 0a8a 7B6C     		ldr	r3, [r7, #68]
 1664 0a8c FB64     		str	r3, [r7, #76]
 1665 0a8e 0AE0     		b	.L49
 1666              	.L47:
 716:.\Include/arm_math.h **** 
 1667              		.loc 2 716 0
 1668 0a90 7B6C     		ldr	r3, [r7, #68]
 1669 0a92 5B42     		neg	r3, r3
 1670 0a94 FB63     		str	r3, [r7, #60]
 718:.\Include/arm_math.h ****       {
 1671              		.loc 2 718 0
 1672 0a96 FA6C     		ldr	r2, [r7, #76]
 1673 0a98 FB6B     		ldr	r3, [r7, #60]
 1674 0a9a 9A42     		cmp	r2, r3
 1675 0a9c 03DA     		bge	.L49
 720:.\Include/arm_math.h ****       }
 1676              		.loc 2 720 0
 1677 0a9e FB6B     		ldr	r3, [r7, #60]
 1678 0aa0 FB64     		str	r3, [r7, #76]
 1679 0aa2 00E0     		b	.L49
 1680              	.L69:
 711:.\Include/arm_math.h ****       }
 1681              		.loc 2 711 0
 1682 0aa4 C046     		mov	r8, r8
 1683              	.L49:
 723:.\Include/arm_math.h ****   }
 1684              		.loc 2 723 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 55


 1685 0aa6 FA6C     		ldr	r2, [r7, #76]
 1686              	.LBE53:
 1687              	.LBE52:
 1688              		.loc 1 338 0
 1689 0aa8 EC23     		mov	r3, #236
 1690 0aaa FB18     		add	r3, r7, r3
 1691 0aac 1A70     		strb	r2, [r3]
 339:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 340:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       *__SIMD32(pOut)++ = __PACKq7(out0, out1, out2, out3);
 1692              		.loc 1 340 0
 1693 0aae 1023     		mov	r3, #16
 1694 0ab0 FB18     		add	r3, r7, r3
 1695 0ab2 1A68     		ldr	r2, [r3]
 1696 0ab4 111D     		add	r1, r2, #4
 1697 0ab6 1960     		str	r1, [r3]
 1698 0ab8 EF23     		mov	r3, #239
 1699 0aba FB18     		add	r3, r7, r3
 1700 0abc 1B78     		ldrb	r3, [r3]
 1701 0abe 5BB2     		sxtb	r3, r3
 1702 0ac0 FF21     		mov	r1, #255
 1703 0ac2 1940     		and	r1, r3
 1704 0ac4 EE23     		mov	r3, #238
 1705 0ac6 FB18     		add	r3, r7, r3
 1706 0ac8 1B78     		ldrb	r3, [r3]
 1707 0aca 5BB2     		sxtb	r3, r3
 1708 0acc 1B02     		lsl	r3, r3, #8
 1709 0ace 1B04     		lsl	r3, r3, #16
 1710 0ad0 1B0C     		lsr	r3, r3, #16
 1711 0ad2 1943     		orr	r1, r3
 1712 0ad4 ED23     		mov	r3, #237
 1713 0ad6 FB18     		add	r3, r7, r3
 1714 0ad8 1B78     		ldrb	r3, [r3]
 1715 0ada 5BB2     		sxtb	r3, r3
 1716 0adc 1804     		lsl	r0, r3, #16
 1717 0ade FF23     		mov	r3, #255
 1718 0ae0 1B04     		lsl	r3, r3, #16
 1719 0ae2 0340     		and	r3, r0
 1720 0ae4 1943     		orr	r1, r3
 1721 0ae6 EC23     		mov	r3, #236
 1722 0ae8 FB18     		add	r3, r7, r3
 1723 0aea 1B78     		ldrb	r3, [r3]
 1724 0aec 5BB2     		sxtb	r3, r3
 1725 0aee 1B06     		lsl	r3, r3, #24
 1726 0af0 0B43     		orr	r3, r1
 1727 0af2 1360     		str	r3, [r2]
 341:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 342:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Initialization of inputB pointer */
 343:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       pScr2 = py;
 1728              		.loc 1 343 0
 1729 0af4 F823     		mov	r3, #248
 1730 0af6 FB18     		add	r3, r7, r3
 1731 0af8 1B68     		ldr	r3, [r3]
 1732 0afa BB61     		str	r3, [r7, #24]
 344:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 345:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       pScratch1 += 4u;
 1733              		.loc 1 345 0
 1734 0afc A623     		mov	r3, #166
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 56


 1735 0afe 5B00     		lsl	r3, r3, #1
 1736 0b00 FB18     		add	r3, r7, r3
 1737 0b02 1B68     		ldr	r3, [r3]
 1738 0b04 0833     		add	r3, r3, #8
 1739 0b06 A622     		mov	r2, #166
 1740 0b08 5200     		lsl	r2, r2, #1
 1741 0b0a BA18     		add	r2, r7, r2
 1742 0b0c 1360     		str	r3, [r2]
 1743              	.L14:
 231:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 1744              		.loc 1 231 0
 1745 0b0e 9423     		mov	r3, #148
 1746 0b10 5B00     		lsl	r3, r3, #1
 1747 0b12 FB18     		add	r3, r7, r3
 1748 0b14 1B68     		ldr	r3, [r3]
 1749 0b16 002B     		cmp	r3, #0
 1750 0b18 00D0     		beq	.LCB1572
 1751 0b1a 4BE4     		b	.L51	@long jump
 1752              	.LCB1572:
 346:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 347:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     }
 348:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 349:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     blkCnt = (numPoints) & 0x3;
 1753              		.loc 1 349 0
 1754 0b1c A423     		mov	r3, #164
 1755 0b1e 5B00     		lsl	r3, r3, #1
 1756 0b20 FB18     		add	r3, r7, r3
 1757 0b22 1B68     		ldr	r3, [r3]
 1758 0b24 0322     		mov	r2, #3
 1759 0b26 1340     		and	r3, r2
 1760 0b28 9422     		mov	r2, #148
 1761 0b2a 5200     		lsl	r2, r2, #1
 1762 0b2c BA18     		add	r2, r7, r2
 1763 0b2e 1360     		str	r3, [r2]
 350:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 351:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* Calculate convolution for remaining samples of Bigger length sequence */
 352:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     while (blkCnt > 0)
 1764              		.loc 1 352 0
 1765 0b30 CAE0     		b	.L52
 1766              	.L64:
 353:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 354:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Initialze temporary scratch pointer as scratch1 */
 355:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       pScr1 = pScratch1;
 1767              		.loc 1 355 0
 1768 0b32 A623     		mov	r3, #166
 1769 0b34 5B00     		lsl	r3, r3, #1
 1770 0b36 FB18     		add	r3, r7, r3
 1771 0b38 1B68     		ldr	r3, [r3]
 1772 0b3a 7B61     		str	r3, [r7, #20]
 356:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 357:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Clear Accumlators */
 358:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       acc0 = 0;
 1773              		.loc 1 358 0
 1774 0b3c 0023     		mov	r3, #0
 1775 0b3e 8E22     		mov	r2, #142
 1776 0b40 5200     		lsl	r2, r2, #1
 1777 0b42 BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 57


 1778 0b44 1360     		str	r3, [r2]
 359:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 360:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       tapCnt = (srcBLen) >> 1u;
 1779              		.loc 1 360 0
 1780 0b46 3B68     		ldr	r3, [r7]
 1781 0b48 5B08     		lsr	r3, r3, #1
 1782 0b4a 9222     		mov	r2, #146
 1783 0b4c 5200     		lsl	r2, r2, #1
 1784 0b4e BA18     		add	r2, r7, r2
 1785 0b50 1360     		str	r3, [r2]
 361:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 362:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       while (tapCnt > 0u)
 1786              		.loc 1 362 0
 1787 0b52 3CE0     		b	.L53
 1788              	.L55:
 363:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       {
 364:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 365:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* Read next two samples from scratch1 buffer */
 366:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         x1 = *__SIMD32(pScr1)++;
 1789              		.loc 1 366 0
 1790 0b54 1423     		mov	r3, #20
 1791 0b56 FB18     		add	r3, r7, r3
 1792 0b58 1A68     		ldr	r2, [r3]
 1793 0b5a 111D     		add	r1, r2, #4
 1794 0b5c 1960     		str	r1, [r3]
 1795 0b5e 1368     		ldr	r3, [r2]
 1796 0b60 8622     		mov	r2, #134
 1797 0b62 5200     		lsl	r2, r2, #1
 1798 0b64 BA18     		add	r2, r7, r2
 1799 0b66 1360     		str	r3, [r2]
 367:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 368:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* Read two samples from smaller buffer */
 369:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         y1 = *__SIMD32(pScr2)++;
 1800              		.loc 1 369 0
 1801 0b68 1823     		mov	r3, #24
 1802 0b6a FB18     		add	r3, r7, r3
 1803 0b6c 1A68     		ldr	r2, [r3]
 1804 0b6e 111D     		add	r1, r2, #4
 1805 0b70 1960     		str	r1, [r3]
 1806 0b72 1368     		ldr	r3, [r2]
 1807 0b74 F422     		mov	r2, #244
 1808 0b76 BA18     		add	r2, r7, r2
 1809 0b78 1360     		str	r3, [r2]
 370:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 371:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc0 = __SMLAD(x1, y1, acc0);
 1810              		.loc 1 371 0
 1811 0b7a 8623     		mov	r3, #134
 1812 0b7c 5B00     		lsl	r3, r3, #1
 1813 0b7e FB18     		add	r3, r7, r3
 1814 0b80 1968     		ldr	r1, [r3]
 1815 0b82 F423     		mov	r3, #244
 1816 0b84 FB18     		add	r3, r7, r3
 1817 0b86 1A68     		ldr	r2, [r3]
 1818 0b88 8E23     		mov	r3, #142
 1819 0b8a 5B00     		lsl	r3, r3, #1
 1820 0b8c FB18     		add	r3, r7, r3
 1821 0b8e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 58


 1822 0b90 B963     		str	r1, [r7, #56]
 1823 0b92 7A63     		str	r2, [r7, #52]
 1824 0b94 3B63     		str	r3, [r7, #48]
 1825              	.LBB54:
 1826              	.LBB55:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1827              		.loc 2 952 0
 1828 0b96 BB6B     		ldr	r3, [r7, #56]
 1829 0b98 1B04     		lsl	r3, r3, #16
 1830 0b9a 1B14     		asr	r3, r3, #16
 1831 0b9c 7A6B     		ldr	r2, [r7, #52]
 1832 0b9e 1204     		lsl	r2, r2, #16
 1833 0ba0 1214     		asr	r2, r2, #16
 1834 0ba2 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1835              		.loc 2 953 0
 1836 0ba4 BB6B     		ldr	r3, [r7, #56]
 1837 0ba6 1B14     		asr	r3, r3, #16
 1838 0ba8 796B     		ldr	r1, [r7, #52]
 1839 0baa 0914     		asr	r1, r1, #16
 1840 0bac 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1841              		.loc 2 952 0
 1842 0bae D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 1843              		.loc 2 954 0
 1844 0bb0 3B6B     		ldr	r3, [r7, #48]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1845              		.loc 2 953 0
 1846 0bb2 D318     		add	r3, r2, r3
 1847              	.LBE55:
 1848              	.LBE54:
 1849              		.loc 1 371 0
 1850 0bb4 8E22     		mov	r2, #142
 1851 0bb6 5200     		lsl	r2, r2, #1
 1852 0bb8 BA18     		add	r2, r7, r2
 1853 0bba 1360     		str	r3, [r2]
 372:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 373:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* Decrement the loop counter */
 374:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         tapCnt--;
 1854              		.loc 1 374 0
 1855 0bbc 9223     		mov	r3, #146
 1856 0bbe 5B00     		lsl	r3, r3, #1
 1857 0bc0 FB18     		add	r3, r7, r3
 1858 0bc2 1B68     		ldr	r3, [r3]
 1859 0bc4 013B     		sub	r3, r3, #1
 1860 0bc6 9222     		mov	r2, #146
 1861 0bc8 5200     		lsl	r2, r2, #1
 1862 0bca BA18     		add	r2, r7, r2
 1863 0bcc 1360     		str	r3, [r2]
 1864              	.L53:
 362:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       {
 1865              		.loc 1 362 0
 1866 0bce 9223     		mov	r3, #146
 1867 0bd0 5B00     		lsl	r3, r3, #1
 1868 0bd2 FB18     		add	r3, r7, r3
 1869 0bd4 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 59


 1870 0bd6 002B     		cmp	r3, #0
 1871 0bd8 BCD1     		bne	.L55
 375:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       }
 376:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 377:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       tapCnt = (srcBLen) & 1u;
 1872              		.loc 1 377 0
 1873 0bda 3B68     		ldr	r3, [r7]
 1874 0bdc 0122     		mov	r2, #1
 1875 0bde 1340     		and	r3, r2
 1876 0be0 9222     		mov	r2, #146
 1877 0be2 5200     		lsl	r2, r2, #1
 1878 0be4 BA18     		add	r2, r7, r2
 1879 0be6 1360     		str	r3, [r2]
 378:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 379:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* apply same above for remaining samples of smaller length sequence */
 380:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       while (tapCnt > 0u)
 1880              		.loc 1 380 0
 1881 0be8 1CE0     		b	.L56
 1882              	.L57:
 381:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       {
 382:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 383:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* accumlate the results */
 384:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         acc0 += (*pScr1++ * *pScr2++);
 1883              		.loc 1 384 0
 1884 0bea 7B69     		ldr	r3, [r7, #20]
 1885 0bec 9A1C     		add	r2, r3, #2
 1886 0bee 7A61     		str	r2, [r7, #20]
 1887 0bf0 1B88     		ldrh	r3, [r3]
 1888 0bf2 1AB2     		sxth	r2, r3
 1889 0bf4 BB69     		ldr	r3, [r7, #24]
 1890 0bf6 991C     		add	r1, r3, #2
 1891 0bf8 B961     		str	r1, [r7, #24]
 1892 0bfa 1B88     		ldrh	r3, [r3]
 1893 0bfc 1BB2     		sxth	r3, r3
 1894 0bfe 5343     		mul	r3, r2
 1895 0c00 8E22     		mov	r2, #142
 1896 0c02 5200     		lsl	r2, r2, #1
 1897 0c04 BA18     		add	r2, r7, r2
 1898 0c06 1268     		ldr	r2, [r2]
 1899 0c08 D318     		add	r3, r2, r3
 1900 0c0a 8E22     		mov	r2, #142
 1901 0c0c 5200     		lsl	r2, r2, #1
 1902 0c0e BA18     		add	r2, r7, r2
 1903 0c10 1360     		str	r3, [r2]
 385:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 386:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         /* Decrement the loop counter */
 387:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****         tapCnt--;
 1904              		.loc 1 387 0
 1905 0c12 9223     		mov	r3, #146
 1906 0c14 5B00     		lsl	r3, r3, #1
 1907 0c16 FB18     		add	r3, r7, r3
 1908 0c18 1B68     		ldr	r3, [r3]
 1909 0c1a 013B     		sub	r3, r3, #1
 1910 0c1c 9222     		mov	r2, #146
 1911 0c1e 5200     		lsl	r2, r2, #1
 1912 0c20 BA18     		add	r2, r7, r2
 1913 0c22 1360     		str	r3, [r2]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 60


 1914              	.L56:
 380:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       {
 1915              		.loc 1 380 0
 1916 0c24 9223     		mov	r3, #146
 1917 0c26 5B00     		lsl	r3, r3, #1
 1918 0c28 FB18     		add	r3, r7, r3
 1919 0c2a 1B68     		ldr	r3, [r3]
 1920 0c2c 002B     		cmp	r3, #0
 1921 0c2e DCD1     		bne	.L57
 388:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       }
 389:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 390:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       blkCnt--;
 1922              		.loc 1 390 0
 1923 0c30 9423     		mov	r3, #148
 1924 0c32 5B00     		lsl	r3, r3, #1
 1925 0c34 FB18     		add	r3, r7, r3
 1926 0c36 1B68     		ldr	r3, [r3]
 1927 0c38 013B     		sub	r3, r3, #1
 1928 0c3a 9422     		mov	r2, #148
 1929 0c3c 5200     		lsl	r2, r2, #1
 1930 0c3e BA18     		add	r2, r7, r2
 1931 0c40 1360     		str	r3, [r2]
 391:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 392:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Store the result in the accumulator in the destination buffer. */
 393:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       *pOut++ = (q7_t) (__SSAT(acc0 >> 7u, 8));
 1932              		.loc 1 393 0
 1933 0c42 3B69     		ldr	r3, [r7, #16]
 1934 0c44 5A1C     		add	r2, r3, #1
 1935 0c46 3A61     		str	r2, [r7, #16]
 1936 0c48 8E22     		mov	r2, #142
 1937 0c4a 5200     		lsl	r2, r2, #1
 1938 0c4c BA18     		add	r2, r7, r2
 1939 0c4e 1268     		ldr	r2, [r2]
 1940 0c50 D211     		asr	r2, r2, #7
 1941 0c52 FA62     		str	r2, [r7, #44]
 1942 0c54 0822     		mov	r2, #8
 1943 0c56 BA62     		str	r2, [r7, #40]
 1944              	.LBB56:
 1945              	.LBB57:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1946              		.loc 2 699 0
 1947 0c58 0122     		mov	r2, #1
 1948 0c5a 7A62     		str	r2, [r7, #36]
 700:.\Include/arm_math.h ****     {
 1949              		.loc 2 700 0
 1950 0c5c 0022     		mov	r2, #0
 1951 0c5e 3A62     		str	r2, [r7, #32]
 1952 0c60 05E0     		b	.L58
 1953              	.L59:
 702:.\Include/arm_math.h ****     }
 1954              		.loc 2 702 0
 1955 0c62 7A6A     		ldr	r2, [r7, #36]
 1956 0c64 5200     		lsl	r2, r2, #1
 1957 0c66 7A62     		str	r2, [r7, #36]
 700:.\Include/arm_math.h ****     {
 1958              		.loc 2 700 0
 1959 0c68 3A6A     		ldr	r2, [r7, #32]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 61


 1960 0c6a 0132     		add	r2, r2, #1
 1961 0c6c 3A62     		str	r2, [r7, #32]
 1962              	.L58:
 1963 0c6e BA6A     		ldr	r2, [r7, #40]
 1964 0c70 013A     		sub	r2, r2, #1
 1965 0c72 396A     		ldr	r1, [r7, #32]
 1966 0c74 9142     		cmp	r1, r2
 1967 0c76 F4D3     		bcc	.L59
 705:.\Include/arm_math.h ****     {
 1968              		.loc 2 705 0
 1969 0c78 FA6A     		ldr	r2, [r7, #44]
 1970 0c7a 002A     		cmp	r2, #0
 1971 0c7c 09DD     		ble	.L60
 707:.\Include/arm_math.h **** 
 1972              		.loc 2 707 0
 1973 0c7e 7A6A     		ldr	r2, [r7, #36]
 1974 0c80 013A     		sub	r2, r2, #1
 1975 0c82 7A62     		str	r2, [r7, #36]
 709:.\Include/arm_math.h ****       {
 1976              		.loc 2 709 0
 1977 0c84 F96A     		ldr	r1, [r7, #44]
 1978 0c86 7A6A     		ldr	r2, [r7, #36]
 1979 0c88 9142     		cmp	r1, r2
 1980 0c8a 0CDD     		ble	.L70
 711:.\Include/arm_math.h ****       }
 1981              		.loc 2 711 0
 1982 0c8c 7A6A     		ldr	r2, [r7, #36]
 1983 0c8e FA62     		str	r2, [r7, #44]
 1984 0c90 0AE0     		b	.L62
 1985              	.L60:
 716:.\Include/arm_math.h **** 
 1986              		.loc 2 716 0
 1987 0c92 7A6A     		ldr	r2, [r7, #36]
 1988 0c94 5242     		neg	r2, r2
 1989 0c96 FA61     		str	r2, [r7, #28]
 718:.\Include/arm_math.h ****       {
 1990              		.loc 2 718 0
 1991 0c98 F96A     		ldr	r1, [r7, #44]
 1992 0c9a FA69     		ldr	r2, [r7, #28]
 1993 0c9c 9142     		cmp	r1, r2
 1994 0c9e 03DA     		bge	.L62
 720:.\Include/arm_math.h ****       }
 1995              		.loc 2 720 0
 1996 0ca0 FA69     		ldr	r2, [r7, #28]
 1997 0ca2 FA62     		str	r2, [r7, #44]
 1998 0ca4 00E0     		b	.L62
 1999              	.L70:
 711:.\Include/arm_math.h ****       }
 2000              		.loc 2 711 0
 2001 0ca6 C046     		mov	r8, r8
 2002              	.L62:
 723:.\Include/arm_math.h ****   }
 2003              		.loc 2 723 0
 2004 0ca8 FA6A     		ldr	r2, [r7, #44]
 2005              	.LBE57:
 2006              	.LBE56:
 2007              		.loc 1 393 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 62


 2008 0caa D2B2     		uxtb	r2, r2
 2009 0cac 1A70     		strb	r2, [r3]
 394:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 395:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       /* Initialization of inputB pointer */
 396:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       pScr2 = py;
 2010              		.loc 1 396 0
 2011 0cae F823     		mov	r3, #248
 2012 0cb0 FB18     		add	r3, r7, r3
 2013 0cb2 1B68     		ldr	r3, [r3]
 2014 0cb4 BB61     		str	r3, [r7, #24]
 397:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 398:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****       pScratch1 += 1u;
 2015              		.loc 1 398 0
 2016 0cb6 A623     		mov	r3, #166
 2017 0cb8 5B00     		lsl	r3, r3, #1
 2018 0cba FB18     		add	r3, r7, r3
 2019 0cbc 1B68     		ldr	r3, [r3]
 2020 0cbe 0233     		add	r3, r3, #2
 2021 0cc0 A622     		mov	r2, #166
 2022 0cc2 5200     		lsl	r2, r2, #1
 2023 0cc4 BA18     		add	r2, r7, r2
 2024 0cc6 1360     		str	r3, [r2]
 2025              	.L52:
 352:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     {
 2026              		.loc 1 352 0
 2027 0cc8 9423     		mov	r3, #148
 2028 0cca 5B00     		lsl	r3, r3, #1
 2029 0ccc FB18     		add	r3, r7, r3
 2030 0cce 1B68     		ldr	r3, [r3]
 2031 0cd0 002B     		cmp	r3, #0
 2032 0cd2 00D0     		beq	.LCB1828
 2033 0cd4 2DE7     		b	.L64	@long jump
 2034              	.LCB1828:
 399:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 400:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     }
 401:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 402:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     /* set status as ARM_MATH_SUCCESS */
 403:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****     status = ARM_MATH_SUCCESS;
 2035              		.loc 1 403 0
 2036 0cd6 0823     		mov	r3, #8
 2037 0cd8 FF33     		add	r3, r3, #255
 2038 0cda FB18     		add	r3, r7, r3
 2039 0cdc 0022     		mov	r2, #0
 2040 0cde 1A70     		strb	r2, [r3]
 2041              	.L3:
 404:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 405:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 406:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   }
 407:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
 408:Source\FilteringFunctions/arm_conv_partial_opt_q7.c ****   return (status);
 2042              		.loc 1 408 0
 2043 0ce0 0823     		mov	r3, #8
 2044 0ce2 FF33     		add	r3, r3, #255
 2045 0ce4 FB18     		add	r3, r7, r3
 2046 0ce6 1B78     		ldrb	r3, [r3]
 2047 0ce8 5BB2     		sxtb	r3, r3
 409:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 63


 410:Source\FilteringFunctions/arm_conv_partial_opt_q7.c **** }
 2048              		.loc 1 410 0
 2049 0cea 181C     		mov	r0, r3
 2050 0cec BD46     		mov	sp, r7
 2051 0cee 4EB0     		add	sp, sp, #312
 2052              		@ sp needed
 2053 0cf0 80BD     		pop	{r7, pc}
 2054              		.cfi_endproc
 2055              	.LFE82:
 2056              		.size	arm_conv_partial_opt_q7, .-arm_conv_partial_opt_q7
 2057 0cf2 C046     		.text
 2058              	.Letext0:
 2059              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 2060              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 2061              		.section	.debug_info,"",%progbits
 2062              	.Ldebug_info0:
 2063 0000 1D070000 		.4byte	0x71d
 2064 0004 0400     		.2byte	0x4
 2065 0006 00000000 		.4byte	.Ldebug_abbrev0
 2066 000a 04       		.byte	0x4
 2067 000b 01       		.uleb128 0x1
 2068 000c A2010000 		.4byte	.LASF63
 2069 0010 01       		.byte	0x1
 2070 0011 D1020000 		.4byte	.LASF64
 2071 0015 47010000 		.4byte	.LASF65
 2072 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2073 001d 00000000 		.4byte	0
 2074 0021 00000000 		.4byte	.Ldebug_line0
 2075 0025 02       		.uleb128 0x2
 2076 0026 04010000 		.4byte	.LASF2
 2077 002a 03       		.byte	0x3
 2078 002b 1B       		.byte	0x1b
 2079 002c 30000000 		.4byte	0x30
 2080 0030 03       		.uleb128 0x3
 2081 0031 01       		.byte	0x1
 2082 0032 06       		.byte	0x6
 2083 0033 1B010000 		.4byte	.LASF0
 2084 0037 03       		.uleb128 0x3
 2085 0038 01       		.byte	0x1
 2086 0039 08       		.byte	0x8
 2087 003a 0D010000 		.4byte	.LASF1
 2088 003e 02       		.uleb128 0x2
 2089 003f 3F030000 		.4byte	.LASF3
 2090 0043 03       		.byte	0x3
 2091 0044 29       		.byte	0x29
 2092 0045 49000000 		.4byte	0x49
 2093 0049 03       		.uleb128 0x3
 2094 004a 02       		.byte	0x2
 2095 004b 05       		.byte	0x5
 2096 004c 50000000 		.4byte	.LASF4
 2097 0050 03       		.uleb128 0x3
 2098 0051 02       		.byte	0x2
 2099 0052 07       		.byte	0x7
 2100 0053 47020000 		.4byte	.LASF5
 2101 0057 02       		.uleb128 0x2
 2102 0058 05030000 		.4byte	.LASF6
 2103 005c 03       		.byte	0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 64


 2104 005d 3F       		.byte	0x3f
 2105 005e 62000000 		.4byte	0x62
 2106 0062 03       		.uleb128 0x3
 2107 0063 04       		.byte	0x4
 2108 0064 05       		.byte	0x5
 2109 0065 F6000000 		.4byte	.LASF7
 2110 0069 02       		.uleb128 0x2
 2111 006a 87000000 		.4byte	.LASF8
 2112 006e 03       		.byte	0x3
 2113 006f 41       		.byte	0x41
 2114 0070 74000000 		.4byte	0x74
 2115 0074 03       		.uleb128 0x3
 2116 0075 04       		.byte	0x4
 2117 0076 07       		.byte	0x7
 2118 0077 87020000 		.4byte	.LASF9
 2119 007b 03       		.uleb128 0x3
 2120 007c 08       		.byte	0x8
 2121 007d 05       		.byte	0x5
 2122 007e E2000000 		.4byte	.LASF10
 2123 0082 03       		.uleb128 0x3
 2124 0083 08       		.byte	0x8
 2125 0084 07       		.byte	0x7
 2126 0085 27010000 		.4byte	.LASF11
 2127 0089 04       		.uleb128 0x4
 2128 008a 04       		.byte	0x4
 2129 008b 05       		.byte	0x5
 2130 008c 696E7400 		.ascii	"int\000"
 2131 0090 03       		.uleb128 0x3
 2132 0091 04       		.byte	0x4
 2133 0092 07       		.byte	0x7
 2134 0093 8D010000 		.4byte	.LASF12
 2135 0097 02       		.uleb128 0x2
 2136 0098 2C000000 		.4byte	.LASF13
 2137 009c 04       		.byte	0x4
 2138 009d 14       		.byte	0x14
 2139 009e 25000000 		.4byte	0x25
 2140 00a2 02       		.uleb128 0x2
 2141 00a3 67020000 		.4byte	.LASF14
 2142 00a7 04       		.byte	0x4
 2143 00a8 20       		.byte	0x20
 2144 00a9 3E000000 		.4byte	0x3e
 2145 00ad 02       		.uleb128 0x2
 2146 00ae 5F020000 		.4byte	.LASF15
 2147 00b2 04       		.byte	0x4
 2148 00b3 2C       		.byte	0x2c
 2149 00b4 57000000 		.4byte	0x57
 2150 00b8 02       		.uleb128 0x2
 2151 00b9 3E010000 		.4byte	.LASF16
 2152 00bd 04       		.byte	0x4
 2153 00be 2D       		.byte	0x2d
 2154 00bf 69000000 		.4byte	0x69
 2155 00c3 03       		.uleb128 0x3
 2156 00c4 04       		.byte	0x4
 2157 00c5 07       		.byte	0x7
 2158 00c6 5A000000 		.4byte	.LASF17
 2159 00ca 03       		.uleb128 0x3
 2160 00cb 01       		.byte	0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 65


 2161 00cc 08       		.byte	0x8
 2162 00cd 5A020000 		.4byte	.LASF18
 2163 00d1 03       		.uleb128 0x3
 2164 00d2 08       		.byte	0x8
 2165 00d3 04       		.byte	0x4
 2166 00d4 B0020000 		.4byte	.LASF19
 2167 00d8 03       		.uleb128 0x3
 2168 00d9 04       		.byte	0x4
 2169 00da 04       		.byte	0x4
 2170 00db CF000000 		.4byte	.LASF20
 2171 00df 03       		.uleb128 0x3
 2172 00e0 08       		.byte	0x8
 2173 00e1 04       		.byte	0x4
 2174 00e2 7B000000 		.4byte	.LASF21
 2175 00e6 05       		.uleb128 0x5
 2176 00e7 01       		.byte	0x1
 2177 00e8 02       		.byte	0x2
 2178 00e9 8401     		.2byte	0x184
 2179 00eb 1A010000 		.4byte	0x11a
 2180 00ef 06       		.uleb128 0x6
 2181 00f0 6A000000 		.4byte	.LASF22
 2182 00f4 00       		.sleb128 0
 2183 00f5 06       		.uleb128 0x6
 2184 00f6 27030000 		.4byte	.LASF23
 2185 00fa 7F       		.sleb128 -1
 2186 00fb 06       		.uleb128 0x6
 2187 00fc 5F030000 		.4byte	.LASF24
 2188 0100 7E       		.sleb128 -2
 2189 0101 06       		.uleb128 0x6
 2190 0102 99020000 		.4byte	.LASF25
 2191 0106 7D       		.sleb128 -3
 2192 0107 06       		.uleb128 0x6
 2193 0108 C1020000 		.4byte	.LASF26
 2194 010c 7C       		.sleb128 -4
 2195 010d 06       		.uleb128 0x6
 2196 010e 33000000 		.4byte	.LASF27
 2197 0112 7B       		.sleb128 -5
 2198 0113 06       		.uleb128 0x6
 2199 0114 49030000 		.4byte	.LASF28
 2200 0118 7A       		.sleb128 -6
 2201 0119 00       		.byte	0
 2202 011a 07       		.uleb128 0x7
 2203 011b 45000000 		.4byte	.LASF29
 2204 011f 02       		.byte	0x2
 2205 0120 8C01     		.2byte	0x18c
 2206 0122 E6000000 		.4byte	0xe6
 2207 0126 07       		.uleb128 0x7
 2208 0127 FF000000 		.4byte	.LASF30
 2209 012b 02       		.byte	0x2
 2210 012c 9101     		.2byte	0x191
 2211 012e 97000000 		.4byte	0x97
 2212 0132 07       		.uleb128 0x7
 2213 0133 1C000000 		.4byte	.LASF31
 2214 0137 02       		.byte	0x2
 2215 0138 9601     		.2byte	0x196
 2216 013a A2000000 		.4byte	0xa2
 2217 013e 07       		.uleb128 0x7
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 66


 2218 013f 11000000 		.4byte	.LASF32
 2219 0143 02       		.byte	0x2
 2220 0144 9B01     		.2byte	0x19b
 2221 0146 AD000000 		.4byte	0xad
 2222 014a 08       		.uleb128 0x8
 2223 014b 04       		.byte	0x4
 2224 014c 26010000 		.4byte	0x126
 2225 0150 08       		.uleb128 0x8
 2226 0151 04       		.byte	0x4
 2227 0152 32010000 		.4byte	0x132
 2228 0156 09       		.uleb128 0x9
 2229 0157 C7000000 		.4byte	.LASF33
 2230 015b 02       		.byte	0x2
 2231 015c B303     		.2byte	0x3b3
 2232 015e B8000000 		.4byte	0xb8
 2233 0162 03       		.byte	0x3
 2234 0163 88010000 		.4byte	0x188
 2235 0167 0A       		.uleb128 0xa
 2236 0168 7800     		.ascii	"x\000"
 2237 016a 02       		.byte	0x2
 2238 016b B403     		.2byte	0x3b4
 2239 016d B8000000 		.4byte	0xb8
 2240 0171 0A       		.uleb128 0xa
 2241 0172 7900     		.ascii	"y\000"
 2242 0174 02       		.byte	0x2
 2243 0175 B503     		.2byte	0x3b5
 2244 0177 B8000000 		.4byte	0xb8
 2245 017b 0A       		.uleb128 0xa
 2246 017c 73756D00 		.ascii	"sum\000"
 2247 0180 02       		.byte	0x2
 2248 0181 B603     		.2byte	0x3b6
 2249 0183 B8000000 		.4byte	0xb8
 2250 0187 00       		.byte	0
 2251 0188 09       		.uleb128 0x9
 2252 0189 B6000000 		.4byte	.LASF34
 2253 018d 02       		.byte	0x2
 2254 018e C103     		.2byte	0x3c1
 2255 0190 B8000000 		.4byte	0xb8
 2256 0194 03       		.byte	0x3
 2257 0195 BA010000 		.4byte	0x1ba
 2258 0199 0A       		.uleb128 0xa
 2259 019a 7800     		.ascii	"x\000"
 2260 019c 02       		.byte	0x2
 2261 019d C203     		.2byte	0x3c2
 2262 019f B8000000 		.4byte	0xb8
 2263 01a3 0A       		.uleb128 0xa
 2264 01a4 7900     		.ascii	"y\000"
 2265 01a6 02       		.byte	0x2
 2266 01a7 C303     		.2byte	0x3c3
 2267 01a9 B8000000 		.4byte	0xb8
 2268 01ad 0A       		.uleb128 0xa
 2269 01ae 73756D00 		.ascii	"sum\000"
 2270 01b2 02       		.byte	0x2
 2271 01b3 C403     		.2byte	0x3c4
 2272 01b5 B8000000 		.4byte	0xb8
 2273 01b9 00       		.byte	0
 2274 01ba 09       		.uleb128 0x9
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 67


 2275 01bb 34020000 		.4byte	.LASF35
 2276 01bf 02       		.byte	0x2
 2277 01c0 B402     		.2byte	0x2b4
 2278 01c2 3E010000 		.4byte	0x13e
 2279 01c6 03       		.byte	0x3
 2280 01c7 02020000 		.4byte	0x202
 2281 01cb 0A       		.uleb128 0xa
 2282 01cc 7800     		.ascii	"x\000"
 2283 01ce 02       		.byte	0x2
 2284 01cf B502     		.2byte	0x2b5
 2285 01d1 3E010000 		.4byte	0x13e
 2286 01d5 0A       		.uleb128 0xa
 2287 01d6 7900     		.ascii	"y\000"
 2288 01d8 02       		.byte	0x2
 2289 01d9 B602     		.2byte	0x2b6
 2290 01db B8000000 		.4byte	0xb8
 2291 01df 0B       		.uleb128 0xb
 2292 01e0 80020000 		.4byte	.LASF36
 2293 01e4 02       		.byte	0x2
 2294 01e5 B802     		.2byte	0x2b8
 2295 01e7 AD000000 		.4byte	0xad
 2296 01eb 0B       		.uleb128 0xb
 2297 01ec 79020000 		.4byte	.LASF37
 2298 01f0 02       		.byte	0x2
 2299 01f1 B802     		.2byte	0x2b8
 2300 01f3 AD000000 		.4byte	0xad
 2301 01f7 0C       		.uleb128 0xc
 2302 01f8 6900     		.ascii	"i\000"
 2303 01fa 02       		.byte	0x2
 2304 01fb B902     		.2byte	0x2b9
 2305 01fd B8000000 		.4byte	0xb8
 2306 0201 00       		.byte	0
 2307 0202 0D       		.uleb128 0xd
 2308 0203 0F030000 		.4byte	.LASF66
 2309 0207 01       		.byte	0x1
 2310 0208 40       		.byte	0x40
 2311 0209 1A010000 		.4byte	0x11a
 2312 020d 00000000 		.4byte	.LFB82
 2313 0211 F20C0000 		.4byte	.LFE82-.LFB82
 2314 0215 01       		.uleb128 0x1
 2315 0216 9C       		.byte	0x9c
 2316 0217 0E       		.uleb128 0xe
 2317 0218 DC000000 		.4byte	.LASF38
 2318 021c 01       		.byte	0x1
 2319 021d 41       		.byte	0x41
 2320 021e 4A010000 		.4byte	0x14a
 2321 0222 03       		.uleb128 0x3
 2322 0223 91       		.byte	0x91
 2323 0224 CC7D     		.sleb128 -308
 2324 0226 0E       		.uleb128 0xe
 2325 0227 BF000000 		.4byte	.LASF39
 2326 022b 01       		.byte	0x1
 2327 022c 42       		.byte	0x42
 2328 022d B8000000 		.4byte	0xb8
 2329 0231 03       		.uleb128 0x3
 2330 0232 91       		.byte	0x91
 2331 0233 C87D     		.sleb128 -312
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 68


 2332 0235 0E       		.uleb128 0xe
 2333 0236 F0000000 		.4byte	.LASF40
 2334 023a 01       		.byte	0x1
 2335 023b 43       		.byte	0x43
 2336 023c 4A010000 		.4byte	0x14a
 2337 0240 03       		.uleb128 0x3
 2338 0241 91       		.byte	0x91
 2339 0242 C47D     		.sleb128 -316
 2340 0244 0E       		.uleb128 0xe
 2341 0245 9A010000 		.4byte	.LASF41
 2342 0249 01       		.byte	0x1
 2343 024a 44       		.byte	0x44
 2344 024b B8000000 		.4byte	0xb8
 2345 024f 03       		.uleb128 0x3
 2346 0250 91       		.byte	0x91
 2347 0251 C07D     		.sleb128 -320
 2348 0253 0E       		.uleb128 0xe
 2349 0254 0C000000 		.4byte	.LASF42
 2350 0258 01       		.byte	0x1
 2351 0259 45       		.byte	0x45
 2352 025a 4A010000 		.4byte	0x14a
 2353 025e 02       		.uleb128 0x2
 2354 025f 91       		.byte	0x91
 2355 0260 00       		.sleb128 0
 2356 0261 0E       		.uleb128 0xe
 2357 0262 A6000000 		.4byte	.LASF43
 2358 0266 01       		.byte	0x1
 2359 0267 46       		.byte	0x46
 2360 0268 B8000000 		.4byte	0xb8
 2361 026c 02       		.uleb128 0x2
 2362 026d 91       		.byte	0x91
 2363 026e 04       		.sleb128 4
 2364 026f 0E       		.uleb128 0xe
 2365 0270 6F020000 		.4byte	.LASF44
 2366 0274 01       		.byte	0x1
 2367 0275 47       		.byte	0x47
 2368 0276 B8000000 		.4byte	0xb8
 2369 027a 02       		.uleb128 0x2
 2370 027b 91       		.byte	0x91
 2371 027c 08       		.sleb128 8
 2372 027d 0E       		.uleb128 0xe
 2373 027e 92000000 		.4byte	.LASF45
 2374 0282 01       		.byte	0x1
 2375 0283 48       		.byte	0x48
 2376 0284 50010000 		.4byte	0x150
 2377 0288 02       		.uleb128 0x2
 2378 0289 91       		.byte	0x91
 2379 028a 0C       		.sleb128 12
 2380 028b 0E       		.uleb128 0xe
 2381 028c 9C000000 		.4byte	.LASF46
 2382 0290 01       		.byte	0x1
 2383 0291 49       		.byte	0x49
 2384 0292 50010000 		.4byte	0x150
 2385 0296 02       		.uleb128 0x2
 2386 0297 91       		.byte	0x91
 2387 0298 10       		.sleb128 16
 2388 0299 0F       		.uleb128 0xf
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 69


 2389 029a 06000000 		.4byte	.LASF47
 2390 029e 01       		.byte	0x1
 2391 029f 4C       		.byte	0x4c
 2392 02a0 50010000 		.4byte	0x150
 2393 02a4 03       		.uleb128 0x3
 2394 02a5 91       		.byte	0x91
 2395 02a6 D87D     		.sleb128 -296
 2396 02a8 0F       		.uleb128 0xf
 2397 02a9 00000000 		.4byte	.LASF48
 2398 02ad 01       		.byte	0x1
 2399 02ae 4C       		.byte	0x4c
 2400 02af 50010000 		.4byte	0x150
 2401 02b3 03       		.uleb128 0x3
 2402 02b4 91       		.byte	0x91
 2403 02b5 D47D     		.sleb128 -300
 2404 02b7 10       		.uleb128 0x10
 2405 02b8 783400   		.ascii	"x4\000"
 2406 02bb 01       		.byte	0x1
 2407 02bc 4D       		.byte	0x4d
 2408 02bd 32010000 		.4byte	0x132
 2409 02c1 03       		.uleb128 0x3
 2410 02c2 91       		.byte	0x91
 2411 02c3 BE7F     		.sleb128 -66
 2412 02c5 0F       		.uleb128 0xf
 2413 02c6 B7020000 		.4byte	.LASF49
 2414 02ca 01       		.byte	0x1
 2415 02cb 4E       		.byte	0x4e
 2416 02cc 4A010000 		.4byte	0x14a
 2417 02d0 02       		.uleb128 0x2
 2418 02d1 91       		.byte	0x91
 2419 02d2 74       		.sleb128 -12
 2420 02d3 0F       		.uleb128 0xf
 2421 02d4 BC020000 		.4byte	.LASF50
 2422 02d8 01       		.byte	0x1
 2423 02d9 4E       		.byte	0x4e
 2424 02da 4A010000 		.4byte	0x14a
 2425 02de 02       		.uleb128 0x2
 2426 02df 91       		.byte	0x91
 2427 02e0 70       		.sleb128 -16
 2428 02e1 10       		.uleb128 0x10
 2429 02e2 6A00     		.ascii	"j\000"
 2430 02e4 01       		.byte	0x1
 2431 02e5 4F       		.byte	0x4f
 2432 02e6 B8000000 		.4byte	0xb8
 2433 02ea 02       		.uleb128 0x2
 2434 02eb 91       		.byte	0x91
 2435 02ec 40       		.sleb128 -64
 2436 02ed 10       		.uleb128 0x10
 2437 02ee 6B00     		.ascii	"k\000"
 2438 02f0 01       		.byte	0x1
 2439 02f1 4F       		.byte	0x4f
 2440 02f2 B8000000 		.4byte	0xb8
 2441 02f6 02       		.uleb128 0x2
 2442 02f7 91       		.byte	0x91
 2443 02f8 6C       		.sleb128 -20
 2444 02f9 0F       		.uleb128 0xf
 2445 02fa D5000000 		.4byte	.LASF51
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 70


 2446 02fe 01       		.byte	0x1
 2447 02ff 4F       		.byte	0x4f
 2448 0300 B8000000 		.4byte	0xb8
 2449 0304 02       		.uleb128 0x2
 2450 0305 91       		.byte	0x91
 2451 0306 68       		.sleb128 -24
 2452 0307 0F       		.uleb128 0xf
 2453 0308 63000000 		.4byte	.LASF52
 2454 030c 01       		.byte	0x1
 2455 030d 4F       		.byte	0x4f
 2456 030e B8000000 		.4byte	0xb8
 2457 0312 02       		.uleb128 0x2
 2458 0313 91       		.byte	0x91
 2459 0314 64       		.sleb128 -28
 2460 0315 10       		.uleb128 0x10
 2461 0316 707800   		.ascii	"px\000"
 2462 0319 01       		.byte	0x1
 2463 031a 50       		.byte	0x50
 2464 031b 4A010000 		.4byte	0x14a
 2465 031f 02       		.uleb128 0x2
 2466 0320 91       		.byte	0x91
 2467 0321 60       		.sleb128 -32
 2468 0322 10       		.uleb128 0x10
 2469 0323 707900   		.ascii	"py\000"
 2470 0326 01       		.byte	0x1
 2471 0327 51       		.byte	0x51
 2472 0328 50010000 		.4byte	0x150
 2473 032c 03       		.uleb128 0x3
 2474 032d 91       		.byte	0x91
 2475 032e B87F     		.sleb128 -72
 2476 0330 0F       		.uleb128 0xf
 2477 0331 75030000 		.4byte	.LASF53
 2478 0335 01       		.byte	0x1
 2479 0336 52       		.byte	0x52
 2480 0337 3E010000 		.4byte	0x13e
 2481 033b 02       		.uleb128 0x2
 2482 033c 91       		.byte	0x91
 2483 033d 5C       		.sleb128 -36
 2484 033e 0F       		.uleb128 0xf
 2485 033f 7A030000 		.4byte	.LASF54
 2486 0343 01       		.byte	0x1
 2487 0344 52       		.byte	0x52
 2488 0345 3E010000 		.4byte	0x13e
 2489 0349 02       		.uleb128 0x2
 2490 034a 91       		.byte	0x91
 2491 034b 58       		.sleb128 -40
 2492 034c 0F       		.uleb128 0xf
 2493 034d 7F030000 		.4byte	.LASF55
 2494 0351 01       		.byte	0x1
 2495 0352 52       		.byte	0x52
 2496 0353 3E010000 		.4byte	0x13e
 2497 0357 02       		.uleb128 0x2
 2498 0358 91       		.byte	0x91
 2499 0359 54       		.sleb128 -44
 2500 035a 0F       		.uleb128 0xf
 2501 035b 84030000 		.4byte	.LASF56
 2502 035f 01       		.byte	0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 71


 2503 0360 52       		.byte	0x52
 2504 0361 3E010000 		.4byte	0x13e
 2505 0365 02       		.uleb128 0x2
 2506 0366 91       		.byte	0x91
 2507 0367 50       		.sleb128 -48
 2508 0368 10       		.uleb128 0x10
 2509 0369 783100   		.ascii	"x1\000"
 2510 036c 01       		.byte	0x1
 2511 036d 53       		.byte	0x53
 2512 036e 3E010000 		.4byte	0x13e
 2513 0372 02       		.uleb128 0x2
 2514 0373 91       		.byte	0x91
 2515 0374 4C       		.sleb128 -52
 2516 0375 10       		.uleb128 0x10
 2517 0376 783200   		.ascii	"x2\000"
 2518 0379 01       		.byte	0x1
 2519 037a 53       		.byte	0x53
 2520 037b 3E010000 		.4byte	0x13e
 2521 037f 02       		.uleb128 0x2
 2522 0380 91       		.byte	0x91
 2523 0381 48       		.sleb128 -56
 2524 0382 10       		.uleb128 0x10
 2525 0383 783300   		.ascii	"x3\000"
 2526 0386 01       		.byte	0x1
 2527 0387 53       		.byte	0x53
 2528 0388 3E010000 		.4byte	0x13e
 2529 038c 03       		.uleb128 0x3
 2530 038d 91       		.byte	0x91
 2531 038e B07F     		.sleb128 -80
 2532 0390 10       		.uleb128 0x10
 2533 0391 793100   		.ascii	"y1\000"
 2534 0394 01       		.byte	0x1
 2535 0395 53       		.byte	0x53
 2536 0396 3E010000 		.4byte	0x13e
 2537 039a 03       		.uleb128 0x3
 2538 039b 91       		.byte	0x91
 2539 039c B47F     		.sleb128 -76
 2540 039e 0F       		.uleb128 0xf
 2541 039f 40020000 		.4byte	.LASF57
 2542 03a3 01       		.byte	0x1
 2543 03a4 54       		.byte	0x54
 2544 03a5 1A010000 		.4byte	0x11a
 2545 03a9 02       		.uleb128 0x2
 2546 03aa 91       		.byte	0x91
 2547 03ab 47       		.sleb128 -57
 2548 03ac 0F       		.uleb128 0xf
 2549 03ad B1000000 		.4byte	.LASF58
 2550 03b1 01       		.byte	0x1
 2551 03b2 55       		.byte	0x55
 2552 03b3 4A010000 		.4byte	0x14a
 2553 03b7 03       		.uleb128 0x3
 2554 03b8 91       		.byte	0x91
 2555 03b9 D07D     		.sleb128 -304
 2556 03bb 0F       		.uleb128 0xf
 2557 03bc 17000000 		.4byte	.LASF59
 2558 03c0 01       		.byte	0x1
 2559 03c1 56       		.byte	0x56
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 72


 2560 03c2 26010000 		.4byte	0x126
 2561 03c6 03       		.uleb128 0x3
 2562 03c7 91       		.byte	0x91
 2563 03c8 AF7F     		.sleb128 -81
 2564 03ca 0F       		.uleb128 0xf
 2565 03cb 3B020000 		.4byte	.LASF60
 2566 03cf 01       		.byte	0x1
 2567 03d0 56       		.byte	0x56
 2568 03d1 26010000 		.4byte	0x126
 2569 03d5 03       		.uleb128 0x3
 2570 03d6 91       		.byte	0x91
 2571 03d7 AE7F     		.sleb128 -82
 2572 03d9 0F       		.uleb128 0xf
 2573 03da 22000000 		.4byte	.LASF61
 2574 03de 01       		.byte	0x1
 2575 03df 56       		.byte	0x56
 2576 03e0 26010000 		.4byte	0x126
 2577 03e4 03       		.uleb128 0x3
 2578 03e5 91       		.byte	0x91
 2579 03e6 AD7F     		.sleb128 -83
 2580 03e8 0F       		.uleb128 0xf
 2581 03e9 27000000 		.4byte	.LASF62
 2582 03ed 01       		.byte	0x1
 2583 03ee 56       		.byte	0x56
 2584 03ef 26010000 		.4byte	0x126
 2585 03f3 03       		.uleb128 0x3
 2586 03f4 91       		.byte	0x91
 2587 03f5 AC7F     		.sleb128 -84
 2588 03f7 11       		.uleb128 0x11
 2589 03f8 56010000 		.4byte	0x156
 2590 03fc 52040000 		.4byte	.LBB30
 2591 0400 32000000 		.4byte	.LBE30-.LBB30
 2592 0404 01       		.byte	0x1
 2593 0405 0101     		.2byte	0x101
 2594 0407 27040000 		.4byte	0x427
 2595 040b 12       		.uleb128 0x12
 2596 040c 7B010000 		.4byte	0x17b
 2597 0410 03       		.uleb128 0x3
 2598 0411 91       		.byte	0x91
 2599 0412 A07F     		.sleb128 -96
 2600 0414 12       		.uleb128 0x12
 2601 0415 71010000 		.4byte	0x171
 2602 0419 03       		.uleb128 0x3
 2603 041a 91       		.byte	0x91
 2604 041b A47F     		.sleb128 -92
 2605 041d 12       		.uleb128 0x12
 2606 041e 67010000 		.4byte	0x167
 2607 0422 03       		.uleb128 0x3
 2608 0423 91       		.byte	0x91
 2609 0424 A87F     		.sleb128 -88
 2610 0426 00       		.byte	0
 2611 0427 11       		.uleb128 0x11
 2612 0428 56010000 		.4byte	0x156
 2613 042c B4040000 		.4byte	.LBB32
 2614 0430 32000000 		.4byte	.LBE32-.LBB32
 2615 0434 01       		.byte	0x1
 2616 0435 0201     		.2byte	0x102
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 73


 2617 0437 57040000 		.4byte	0x457
 2618 043b 12       		.uleb128 0x12
 2619 043c 7B010000 		.4byte	0x17b
 2620 0440 03       		.uleb128 0x3
 2621 0441 91       		.byte	0x91
 2622 0442 947F     		.sleb128 -108
 2623 0444 12       		.uleb128 0x12
 2624 0445 71010000 		.4byte	0x171
 2625 0449 03       		.uleb128 0x3
 2626 044a 91       		.byte	0x91
 2627 044b 987F     		.sleb128 -104
 2628 044d 12       		.uleb128 0x12
 2629 044e 67010000 		.4byte	0x167
 2630 0452 03       		.uleb128 0x3
 2631 0453 91       		.byte	0x91
 2632 0454 9C7F     		.sleb128 -100
 2633 0456 00       		.byte	0
 2634 0457 11       		.uleb128 0x11
 2635 0458 88010000 		.4byte	0x188
 2636 045c 34050000 		.4byte	.LBB34
 2637 0460 32000000 		.4byte	.LBE34-.LBB34
 2638 0464 01       		.byte	0x1
 2639 0465 0C01     		.2byte	0x10c
 2640 0467 87040000 		.4byte	0x487
 2641 046b 12       		.uleb128 0x12
 2642 046c AD010000 		.4byte	0x1ad
 2643 0470 03       		.uleb128 0x3
 2644 0471 91       		.byte	0x91
 2645 0472 887F     		.sleb128 -120
 2646 0474 12       		.uleb128 0x12
 2647 0475 A3010000 		.4byte	0x1a3
 2648 0479 03       		.uleb128 0x3
 2649 047a 91       		.byte	0x91
 2650 047b 8C7F     		.sleb128 -116
 2651 047d 12       		.uleb128 0x12
 2652 047e 99010000 		.4byte	0x199
 2653 0482 03       		.uleb128 0x3
 2654 0483 91       		.byte	0x91
 2655 0484 907F     		.sleb128 -112
 2656 0486 00       		.byte	0
 2657 0487 11       		.uleb128 0x11
 2658 0488 88010000 		.4byte	0x188
 2659 048c C8050000 		.4byte	.LBB36
 2660 0490 32000000 		.4byte	.LBE36-.LBB36
 2661 0494 01       		.byte	0x1
 2662 0495 1801     		.2byte	0x118
 2663 0497 B7040000 		.4byte	0x4b7
 2664 049b 12       		.uleb128 0x12
 2665 049c AD010000 		.4byte	0x1ad
 2666 04a0 03       		.uleb128 0x3
 2667 04a1 91       		.byte	0x91
 2668 04a2 FC7E     		.sleb128 -132
 2669 04a4 12       		.uleb128 0x12
 2670 04a5 A3010000 		.4byte	0x1a3
 2671 04a9 03       		.uleb128 0x3
 2672 04aa 91       		.byte	0x91
 2673 04ab 807F     		.sleb128 -128
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 74


 2674 04ad 12       		.uleb128 0x12
 2675 04ae 99010000 		.4byte	0x199
 2676 04b2 03       		.uleb128 0x3
 2677 04b3 91       		.byte	0x91
 2678 04b4 847F     		.sleb128 -124
 2679 04b6 00       		.byte	0
 2680 04b7 11       		.uleb128 0x11
 2681 04b8 56010000 		.4byte	0x156
 2682 04bc 34060000 		.4byte	.LBB38
 2683 04c0 32000000 		.4byte	.LBE38-.LBB38
 2684 04c4 01       		.byte	0x1
 2685 04c5 1D01     		.2byte	0x11d
 2686 04c7 E7040000 		.4byte	0x4e7
 2687 04cb 12       		.uleb128 0x12
 2688 04cc 7B010000 		.4byte	0x17b
 2689 04d0 03       		.uleb128 0x3
 2690 04d1 91       		.byte	0x91
 2691 04d2 F07E     		.sleb128 -144
 2692 04d4 12       		.uleb128 0x12
 2693 04d5 71010000 		.4byte	0x171
 2694 04d9 03       		.uleb128 0x3
 2695 04da 91       		.byte	0x91
 2696 04db F47E     		.sleb128 -140
 2697 04dd 12       		.uleb128 0x12
 2698 04de 67010000 		.4byte	0x167
 2699 04e2 03       		.uleb128 0x3
 2700 04e3 91       		.byte	0x91
 2701 04e4 F87E     		.sleb128 -136
 2702 04e6 00       		.byte	0
 2703 04e7 11       		.uleb128 0x11
 2704 04e8 56010000 		.4byte	0x156
 2705 04ec 96060000 		.4byte	.LBB40
 2706 04f0 32000000 		.4byte	.LBE40-.LBB40
 2707 04f4 01       		.byte	0x1
 2708 04f5 1F01     		.2byte	0x11f
 2709 04f7 17050000 		.4byte	0x517
 2710 04fb 12       		.uleb128 0x12
 2711 04fc 7B010000 		.4byte	0x17b
 2712 0500 03       		.uleb128 0x3
 2713 0501 91       		.byte	0x91
 2714 0502 E47E     		.sleb128 -156
 2715 0504 12       		.uleb128 0x12
 2716 0505 71010000 		.4byte	0x171
 2717 0509 03       		.uleb128 0x3
 2718 050a 91       		.byte	0x91
 2719 050b E87E     		.sleb128 -152
 2720 050d 12       		.uleb128 0x12
 2721 050e 67010000 		.4byte	0x167
 2722 0512 03       		.uleb128 0x3
 2723 0513 91       		.byte	0x91
 2724 0514 EC7E     		.sleb128 -148
 2725 0516 00       		.byte	0
 2726 0517 11       		.uleb128 0x11
 2727 0518 88010000 		.4byte	0x188
 2728 051c F6060000 		.4byte	.LBB42
 2729 0520 32000000 		.4byte	.LBE42-.LBB42
 2730 0524 01       		.byte	0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 75


 2731 0525 2101     		.2byte	0x121
 2732 0527 47050000 		.4byte	0x547
 2733 052b 12       		.uleb128 0x12
 2734 052c AD010000 		.4byte	0x1ad
 2735 0530 03       		.uleb128 0x3
 2736 0531 91       		.byte	0x91
 2737 0532 D87E     		.sleb128 -168
 2738 0534 12       		.uleb128 0x12
 2739 0535 A3010000 		.4byte	0x1a3
 2740 0539 03       		.uleb128 0x3
 2741 053a 91       		.byte	0x91
 2742 053b DC7E     		.sleb128 -164
 2743 053d 12       		.uleb128 0x12
 2744 053e 99010000 		.4byte	0x199
 2745 0542 03       		.uleb128 0x3
 2746 0543 91       		.byte	0x91
 2747 0544 E07E     		.sleb128 -160
 2748 0546 00       		.byte	0
 2749 0547 11       		.uleb128 0x11
 2750 0548 88010000 		.4byte	0x188
 2751 054c 8A070000 		.4byte	.LBB44
 2752 0550 32000000 		.4byte	.LBE44-.LBB44
 2753 0554 01       		.byte	0x1
 2754 0555 2B01     		.2byte	0x12b
 2755 0557 77050000 		.4byte	0x577
 2756 055b 12       		.uleb128 0x12
 2757 055c AD010000 		.4byte	0x1ad
 2758 0560 03       		.uleb128 0x3
 2759 0561 91       		.byte	0x91
 2760 0562 CC7E     		.sleb128 -180
 2761 0564 12       		.uleb128 0x12
 2762 0565 A3010000 		.4byte	0x1a3
 2763 0569 03       		.uleb128 0x3
 2764 056a 91       		.byte	0x91
 2765 056b D07E     		.sleb128 -176
 2766 056d 12       		.uleb128 0x12
 2767 056e 99010000 		.4byte	0x199
 2768 0572 03       		.uleb128 0x3
 2769 0573 91       		.byte	0x91
 2770 0574 D47E     		.sleb128 -172
 2771 0576 00       		.byte	0
 2772 0577 11       		.uleb128 0x11
 2773 0578 BA010000 		.4byte	0x1ba
 2774 057c E2080000 		.4byte	.LBB46
 2775 0580 8E000000 		.4byte	.LBE46-.LBB46
 2776 0584 01       		.byte	0x1
 2777 0585 4F01     		.2byte	0x14f
 2778 0587 C3050000 		.4byte	0x5c3
 2779 058b 12       		.uleb128 0x12
 2780 058c D5010000 		.4byte	0x1d5
 2781 0590 03       		.uleb128 0x3
 2782 0591 91       		.byte	0x91
 2783 0592 C47E     		.sleb128 -188
 2784 0594 12       		.uleb128 0x12
 2785 0595 CB010000 		.4byte	0x1cb
 2786 0599 03       		.uleb128 0x3
 2787 059a 91       		.byte	0x91
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 76


 2788 059b C87E     		.sleb128 -184
 2789 059d 13       		.uleb128 0x13
 2790 059e E2080000 		.4byte	.LBB47
 2791 05a2 8E000000 		.4byte	.LBE47-.LBB47
 2792 05a6 14       		.uleb128 0x14
 2793 05a7 DF010000 		.4byte	0x1df
 2794 05ab 03       		.uleb128 0x3
 2795 05ac 91       		.byte	0x91
 2796 05ad C07E     		.sleb128 -192
 2797 05af 14       		.uleb128 0x14
 2798 05b0 EB010000 		.4byte	0x1eb
 2799 05b4 03       		.uleb128 0x3
 2800 05b5 91       		.byte	0x91
 2801 05b6 B87E     		.sleb128 -200
 2802 05b8 14       		.uleb128 0x14
 2803 05b9 F7010000 		.4byte	0x1f7
 2804 05bd 03       		.uleb128 0x3
 2805 05be 91       		.byte	0x91
 2806 05bf BC7E     		.sleb128 -196
 2807 05c1 00       		.byte	0
 2808 05c2 00       		.byte	0
 2809 05c3 11       		.uleb128 0x11
 2810 05c4 BA010000 		.4byte	0x1ba
 2811 05c8 86090000 		.4byte	.LBB48
 2812 05cc 52000000 		.4byte	.LBE48-.LBB48
 2813 05d0 01       		.byte	0x1
 2814 05d1 5001     		.2byte	0x150
 2815 05d3 0F060000 		.4byte	0x60f
 2816 05d7 12       		.uleb128 0x12
 2817 05d8 D5010000 		.4byte	0x1d5
 2818 05dc 03       		.uleb128 0x3
 2819 05dd 91       		.byte	0x91
 2820 05de B07E     		.sleb128 -208
 2821 05e0 12       		.uleb128 0x12
 2822 05e1 CB010000 		.4byte	0x1cb
 2823 05e5 03       		.uleb128 0x3
 2824 05e6 91       		.byte	0x91
 2825 05e7 B47E     		.sleb128 -204
 2826 05e9 13       		.uleb128 0x13
 2827 05ea 86090000 		.4byte	.LBB49
 2828 05ee 52000000 		.4byte	.LBE49-.LBB49
 2829 05f2 14       		.uleb128 0x14
 2830 05f3 DF010000 		.4byte	0x1df
 2831 05f7 03       		.uleb128 0x3
 2832 05f8 91       		.byte	0x91
 2833 05f9 AC7E     		.sleb128 -212
 2834 05fb 14       		.uleb128 0x14
 2835 05fc EB010000 		.4byte	0x1eb
 2836 0600 03       		.uleb128 0x3
 2837 0601 91       		.byte	0x91
 2838 0602 A47E     		.sleb128 -220
 2839 0604 14       		.uleb128 0x14
 2840 0605 F7010000 		.4byte	0x1f7
 2841 0609 03       		.uleb128 0x3
 2842 060a 91       		.byte	0x91
 2843 060b A87E     		.sleb128 -216
 2844 060d 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 77


 2845 060e 00       		.byte	0
 2846 060f 11       		.uleb128 0x11
 2847 0610 BA010000 		.4byte	0x1ba
 2848 0614 EE090000 		.4byte	.LBB50
 2849 0618 52000000 		.4byte	.LBE50-.LBB50
 2850 061c 01       		.byte	0x1
 2851 061d 5101     		.2byte	0x151
 2852 061f 5B060000 		.4byte	0x65b
 2853 0623 12       		.uleb128 0x12
 2854 0624 D5010000 		.4byte	0x1d5
 2855 0628 03       		.uleb128 0x3
 2856 0629 91       		.byte	0x91
 2857 062a 9C7E     		.sleb128 -228
 2858 062c 12       		.uleb128 0x12
 2859 062d CB010000 		.4byte	0x1cb
 2860 0631 03       		.uleb128 0x3
 2861 0632 91       		.byte	0x91
 2862 0633 A07E     		.sleb128 -224
 2863 0635 13       		.uleb128 0x13
 2864 0636 EE090000 		.4byte	.LBB51
 2865 063a 52000000 		.4byte	.LBE51-.LBB51
 2866 063e 14       		.uleb128 0x14
 2867 063f DF010000 		.4byte	0x1df
 2868 0643 03       		.uleb128 0x3
 2869 0644 91       		.byte	0x91
 2870 0645 987E     		.sleb128 -232
 2871 0647 14       		.uleb128 0x14
 2872 0648 EB010000 		.4byte	0x1eb
 2873 064c 03       		.uleb128 0x3
 2874 064d 91       		.byte	0x91
 2875 064e 907E     		.sleb128 -240
 2876 0650 14       		.uleb128 0x14
 2877 0651 F7010000 		.4byte	0x1f7
 2878 0655 03       		.uleb128 0x3
 2879 0656 91       		.byte	0x91
 2880 0657 947E     		.sleb128 -236
 2881 0659 00       		.byte	0
 2882 065a 00       		.byte	0
 2883 065b 11       		.uleb128 0x11
 2884 065c BA010000 		.4byte	0x1ba
 2885 0660 560A0000 		.4byte	.LBB52
 2886 0664 52000000 		.4byte	.LBE52-.LBB52
 2887 0668 01       		.byte	0x1
 2888 0669 5201     		.2byte	0x152
 2889 066b A7060000 		.4byte	0x6a7
 2890 066f 12       		.uleb128 0x12
 2891 0670 D5010000 		.4byte	0x1d5
 2892 0674 03       		.uleb128 0x3
 2893 0675 91       		.byte	0x91
 2894 0676 887E     		.sleb128 -248
 2895 0678 12       		.uleb128 0x12
 2896 0679 CB010000 		.4byte	0x1cb
 2897 067d 03       		.uleb128 0x3
 2898 067e 91       		.byte	0x91
 2899 067f 8C7E     		.sleb128 -244
 2900 0681 13       		.uleb128 0x13
 2901 0682 560A0000 		.4byte	.LBB53
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 78


 2902 0686 52000000 		.4byte	.LBE53-.LBB53
 2903 068a 14       		.uleb128 0x14
 2904 068b DF010000 		.4byte	0x1df
 2905 068f 03       		.uleb128 0x3
 2906 0690 91       		.byte	0x91
 2907 0691 847E     		.sleb128 -252
 2908 0693 14       		.uleb128 0x14
 2909 0694 EB010000 		.4byte	0x1eb
 2910 0698 03       		.uleb128 0x3
 2911 0699 91       		.byte	0x91
 2912 069a FC7D     		.sleb128 -260
 2913 069c 14       		.uleb128 0x14
 2914 069d F7010000 		.4byte	0x1f7
 2915 06a1 03       		.uleb128 0x3
 2916 06a2 91       		.byte	0x91
 2917 06a3 807E     		.sleb128 -256
 2918 06a5 00       		.byte	0
 2919 06a6 00       		.byte	0
 2920 06a7 11       		.uleb128 0x11
 2921 06a8 56010000 		.4byte	0x156
 2922 06ac 960B0000 		.4byte	.LBB54
 2923 06b0 1E000000 		.4byte	.LBE54-.LBB54
 2924 06b4 01       		.byte	0x1
 2925 06b5 7301     		.2byte	0x173
 2926 06b7 D7060000 		.4byte	0x6d7
 2927 06bb 12       		.uleb128 0x12
 2928 06bc 7B010000 		.4byte	0x17b
 2929 06c0 03       		.uleb128 0x3
 2930 06c1 91       		.byte	0x91
 2931 06c2 F07D     		.sleb128 -272
 2932 06c4 12       		.uleb128 0x12
 2933 06c5 71010000 		.4byte	0x171
 2934 06c9 03       		.uleb128 0x3
 2935 06ca 91       		.byte	0x91
 2936 06cb F47D     		.sleb128 -268
 2937 06cd 12       		.uleb128 0x12
 2938 06ce 67010000 		.4byte	0x167
 2939 06d2 03       		.uleb128 0x3
 2940 06d3 91       		.byte	0x91
 2941 06d4 F87D     		.sleb128 -264
 2942 06d6 00       		.byte	0
 2943 06d7 15       		.uleb128 0x15
 2944 06d8 BA010000 		.4byte	0x1ba
 2945 06dc 580C0000 		.4byte	.LBB56
 2946 06e0 52000000 		.4byte	.LBE56-.LBB56
 2947 06e4 01       		.byte	0x1
 2948 06e5 8901     		.2byte	0x189
 2949 06e7 12       		.uleb128 0x12
 2950 06e8 D5010000 		.4byte	0x1d5
 2951 06ec 03       		.uleb128 0x3
 2952 06ed 91       		.byte	0x91
 2953 06ee E87D     		.sleb128 -280
 2954 06f0 12       		.uleb128 0x12
 2955 06f1 CB010000 		.4byte	0x1cb
 2956 06f5 03       		.uleb128 0x3
 2957 06f6 91       		.byte	0x91
 2958 06f7 EC7D     		.sleb128 -276
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 79


 2959 06f9 13       		.uleb128 0x13
 2960 06fa 580C0000 		.4byte	.LBB57
 2961 06fe 52000000 		.4byte	.LBE57-.LBB57
 2962 0702 14       		.uleb128 0x14
 2963 0703 DF010000 		.4byte	0x1df
 2964 0707 03       		.uleb128 0x3
 2965 0708 91       		.byte	0x91
 2966 0709 E47D     		.sleb128 -284
 2967 070b 14       		.uleb128 0x14
 2968 070c EB010000 		.4byte	0x1eb
 2969 0710 03       		.uleb128 0x3
 2970 0711 91       		.byte	0x91
 2971 0712 DC7D     		.sleb128 -292
 2972 0714 14       		.uleb128 0x14
 2973 0715 F7010000 		.4byte	0x1f7
 2974 0719 03       		.uleb128 0x3
 2975 071a 91       		.byte	0x91
 2976 071b E07D     		.sleb128 -288
 2977 071d 00       		.byte	0
 2978 071e 00       		.byte	0
 2979 071f 00       		.byte	0
 2980 0720 00       		.byte	0
 2981              		.section	.debug_abbrev,"",%progbits
 2982              	.Ldebug_abbrev0:
 2983 0000 01       		.uleb128 0x1
 2984 0001 11       		.uleb128 0x11
 2985 0002 01       		.byte	0x1
 2986 0003 25       		.uleb128 0x25
 2987 0004 0E       		.uleb128 0xe
 2988 0005 13       		.uleb128 0x13
 2989 0006 0B       		.uleb128 0xb
 2990 0007 03       		.uleb128 0x3
 2991 0008 0E       		.uleb128 0xe
 2992 0009 1B       		.uleb128 0x1b
 2993 000a 0E       		.uleb128 0xe
 2994 000b 55       		.uleb128 0x55
 2995 000c 17       		.uleb128 0x17
 2996 000d 11       		.uleb128 0x11
 2997 000e 01       		.uleb128 0x1
 2998 000f 10       		.uleb128 0x10
 2999 0010 17       		.uleb128 0x17
 3000 0011 00       		.byte	0
 3001 0012 00       		.byte	0
 3002 0013 02       		.uleb128 0x2
 3003 0014 16       		.uleb128 0x16
 3004 0015 00       		.byte	0
 3005 0016 03       		.uleb128 0x3
 3006 0017 0E       		.uleb128 0xe
 3007 0018 3A       		.uleb128 0x3a
 3008 0019 0B       		.uleb128 0xb
 3009 001a 3B       		.uleb128 0x3b
 3010 001b 0B       		.uleb128 0xb
 3011 001c 49       		.uleb128 0x49
 3012 001d 13       		.uleb128 0x13
 3013 001e 00       		.byte	0
 3014 001f 00       		.byte	0
 3015 0020 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 80


 3016 0021 24       		.uleb128 0x24
 3017 0022 00       		.byte	0
 3018 0023 0B       		.uleb128 0xb
 3019 0024 0B       		.uleb128 0xb
 3020 0025 3E       		.uleb128 0x3e
 3021 0026 0B       		.uleb128 0xb
 3022 0027 03       		.uleb128 0x3
 3023 0028 0E       		.uleb128 0xe
 3024 0029 00       		.byte	0
 3025 002a 00       		.byte	0
 3026 002b 04       		.uleb128 0x4
 3027 002c 24       		.uleb128 0x24
 3028 002d 00       		.byte	0
 3029 002e 0B       		.uleb128 0xb
 3030 002f 0B       		.uleb128 0xb
 3031 0030 3E       		.uleb128 0x3e
 3032 0031 0B       		.uleb128 0xb
 3033 0032 03       		.uleb128 0x3
 3034 0033 08       		.uleb128 0x8
 3035 0034 00       		.byte	0
 3036 0035 00       		.byte	0
 3037 0036 05       		.uleb128 0x5
 3038 0037 04       		.uleb128 0x4
 3039 0038 01       		.byte	0x1
 3040 0039 0B       		.uleb128 0xb
 3041 003a 0B       		.uleb128 0xb
 3042 003b 3A       		.uleb128 0x3a
 3043 003c 0B       		.uleb128 0xb
 3044 003d 3B       		.uleb128 0x3b
 3045 003e 05       		.uleb128 0x5
 3046 003f 01       		.uleb128 0x1
 3047 0040 13       		.uleb128 0x13
 3048 0041 00       		.byte	0
 3049 0042 00       		.byte	0
 3050 0043 06       		.uleb128 0x6
 3051 0044 28       		.uleb128 0x28
 3052 0045 00       		.byte	0
 3053 0046 03       		.uleb128 0x3
 3054 0047 0E       		.uleb128 0xe
 3055 0048 1C       		.uleb128 0x1c
 3056 0049 0D       		.uleb128 0xd
 3057 004a 00       		.byte	0
 3058 004b 00       		.byte	0
 3059 004c 07       		.uleb128 0x7
 3060 004d 16       		.uleb128 0x16
 3061 004e 00       		.byte	0
 3062 004f 03       		.uleb128 0x3
 3063 0050 0E       		.uleb128 0xe
 3064 0051 3A       		.uleb128 0x3a
 3065 0052 0B       		.uleb128 0xb
 3066 0053 3B       		.uleb128 0x3b
 3067 0054 05       		.uleb128 0x5
 3068 0055 49       		.uleb128 0x49
 3069 0056 13       		.uleb128 0x13
 3070 0057 00       		.byte	0
 3071 0058 00       		.byte	0
 3072 0059 08       		.uleb128 0x8
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 81


 3073 005a 0F       		.uleb128 0xf
 3074 005b 00       		.byte	0
 3075 005c 0B       		.uleb128 0xb
 3076 005d 0B       		.uleb128 0xb
 3077 005e 49       		.uleb128 0x49
 3078 005f 13       		.uleb128 0x13
 3079 0060 00       		.byte	0
 3080 0061 00       		.byte	0
 3081 0062 09       		.uleb128 0x9
 3082 0063 2E       		.uleb128 0x2e
 3083 0064 01       		.byte	0x1
 3084 0065 03       		.uleb128 0x3
 3085 0066 0E       		.uleb128 0xe
 3086 0067 3A       		.uleb128 0x3a
 3087 0068 0B       		.uleb128 0xb
 3088 0069 3B       		.uleb128 0x3b
 3089 006a 05       		.uleb128 0x5
 3090 006b 27       		.uleb128 0x27
 3091 006c 19       		.uleb128 0x19
 3092 006d 49       		.uleb128 0x49
 3093 006e 13       		.uleb128 0x13
 3094 006f 20       		.uleb128 0x20
 3095 0070 0B       		.uleb128 0xb
 3096 0071 01       		.uleb128 0x1
 3097 0072 13       		.uleb128 0x13
 3098 0073 00       		.byte	0
 3099 0074 00       		.byte	0
 3100 0075 0A       		.uleb128 0xa
 3101 0076 05       		.uleb128 0x5
 3102 0077 00       		.byte	0
 3103 0078 03       		.uleb128 0x3
 3104 0079 08       		.uleb128 0x8
 3105 007a 3A       		.uleb128 0x3a
 3106 007b 0B       		.uleb128 0xb
 3107 007c 3B       		.uleb128 0x3b
 3108 007d 05       		.uleb128 0x5
 3109 007e 49       		.uleb128 0x49
 3110 007f 13       		.uleb128 0x13
 3111 0080 00       		.byte	0
 3112 0081 00       		.byte	0
 3113 0082 0B       		.uleb128 0xb
 3114 0083 34       		.uleb128 0x34
 3115 0084 00       		.byte	0
 3116 0085 03       		.uleb128 0x3
 3117 0086 0E       		.uleb128 0xe
 3118 0087 3A       		.uleb128 0x3a
 3119 0088 0B       		.uleb128 0xb
 3120 0089 3B       		.uleb128 0x3b
 3121 008a 05       		.uleb128 0x5
 3122 008b 49       		.uleb128 0x49
 3123 008c 13       		.uleb128 0x13
 3124 008d 00       		.byte	0
 3125 008e 00       		.byte	0
 3126 008f 0C       		.uleb128 0xc
 3127 0090 34       		.uleb128 0x34
 3128 0091 00       		.byte	0
 3129 0092 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 82


 3130 0093 08       		.uleb128 0x8
 3131 0094 3A       		.uleb128 0x3a
 3132 0095 0B       		.uleb128 0xb
 3133 0096 3B       		.uleb128 0x3b
 3134 0097 05       		.uleb128 0x5
 3135 0098 49       		.uleb128 0x49
 3136 0099 13       		.uleb128 0x13
 3137 009a 00       		.byte	0
 3138 009b 00       		.byte	0
 3139 009c 0D       		.uleb128 0xd
 3140 009d 2E       		.uleb128 0x2e
 3141 009e 01       		.byte	0x1
 3142 009f 3F       		.uleb128 0x3f
 3143 00a0 19       		.uleb128 0x19
 3144 00a1 03       		.uleb128 0x3
 3145 00a2 0E       		.uleb128 0xe
 3146 00a3 3A       		.uleb128 0x3a
 3147 00a4 0B       		.uleb128 0xb
 3148 00a5 3B       		.uleb128 0x3b
 3149 00a6 0B       		.uleb128 0xb
 3150 00a7 27       		.uleb128 0x27
 3151 00a8 19       		.uleb128 0x19
 3152 00a9 49       		.uleb128 0x49
 3153 00aa 13       		.uleb128 0x13
 3154 00ab 11       		.uleb128 0x11
 3155 00ac 01       		.uleb128 0x1
 3156 00ad 12       		.uleb128 0x12
 3157 00ae 06       		.uleb128 0x6
 3158 00af 40       		.uleb128 0x40
 3159 00b0 18       		.uleb128 0x18
 3160 00b1 9642     		.uleb128 0x2116
 3161 00b3 19       		.uleb128 0x19
 3162 00b4 00       		.byte	0
 3163 00b5 00       		.byte	0
 3164 00b6 0E       		.uleb128 0xe
 3165 00b7 05       		.uleb128 0x5
 3166 00b8 00       		.byte	0
 3167 00b9 03       		.uleb128 0x3
 3168 00ba 0E       		.uleb128 0xe
 3169 00bb 3A       		.uleb128 0x3a
 3170 00bc 0B       		.uleb128 0xb
 3171 00bd 3B       		.uleb128 0x3b
 3172 00be 0B       		.uleb128 0xb
 3173 00bf 49       		.uleb128 0x49
 3174 00c0 13       		.uleb128 0x13
 3175 00c1 02       		.uleb128 0x2
 3176 00c2 18       		.uleb128 0x18
 3177 00c3 00       		.byte	0
 3178 00c4 00       		.byte	0
 3179 00c5 0F       		.uleb128 0xf
 3180 00c6 34       		.uleb128 0x34
 3181 00c7 00       		.byte	0
 3182 00c8 03       		.uleb128 0x3
 3183 00c9 0E       		.uleb128 0xe
 3184 00ca 3A       		.uleb128 0x3a
 3185 00cb 0B       		.uleb128 0xb
 3186 00cc 3B       		.uleb128 0x3b
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 83


 3187 00cd 0B       		.uleb128 0xb
 3188 00ce 49       		.uleb128 0x49
 3189 00cf 13       		.uleb128 0x13
 3190 00d0 02       		.uleb128 0x2
 3191 00d1 18       		.uleb128 0x18
 3192 00d2 00       		.byte	0
 3193 00d3 00       		.byte	0
 3194 00d4 10       		.uleb128 0x10
 3195 00d5 34       		.uleb128 0x34
 3196 00d6 00       		.byte	0
 3197 00d7 03       		.uleb128 0x3
 3198 00d8 08       		.uleb128 0x8
 3199 00d9 3A       		.uleb128 0x3a
 3200 00da 0B       		.uleb128 0xb
 3201 00db 3B       		.uleb128 0x3b
 3202 00dc 0B       		.uleb128 0xb
 3203 00dd 49       		.uleb128 0x49
 3204 00de 13       		.uleb128 0x13
 3205 00df 02       		.uleb128 0x2
 3206 00e0 18       		.uleb128 0x18
 3207 00e1 00       		.byte	0
 3208 00e2 00       		.byte	0
 3209 00e3 11       		.uleb128 0x11
 3210 00e4 1D       		.uleb128 0x1d
 3211 00e5 01       		.byte	0x1
 3212 00e6 31       		.uleb128 0x31
 3213 00e7 13       		.uleb128 0x13
 3214 00e8 11       		.uleb128 0x11
 3215 00e9 01       		.uleb128 0x1
 3216 00ea 12       		.uleb128 0x12
 3217 00eb 06       		.uleb128 0x6
 3218 00ec 58       		.uleb128 0x58
 3219 00ed 0B       		.uleb128 0xb
 3220 00ee 59       		.uleb128 0x59
 3221 00ef 05       		.uleb128 0x5
 3222 00f0 01       		.uleb128 0x1
 3223 00f1 13       		.uleb128 0x13
 3224 00f2 00       		.byte	0
 3225 00f3 00       		.byte	0
 3226 00f4 12       		.uleb128 0x12
 3227 00f5 05       		.uleb128 0x5
 3228 00f6 00       		.byte	0
 3229 00f7 31       		.uleb128 0x31
 3230 00f8 13       		.uleb128 0x13
 3231 00f9 02       		.uleb128 0x2
 3232 00fa 18       		.uleb128 0x18
 3233 00fb 00       		.byte	0
 3234 00fc 00       		.byte	0
 3235 00fd 13       		.uleb128 0x13
 3236 00fe 0B       		.uleb128 0xb
 3237 00ff 01       		.byte	0x1
 3238 0100 11       		.uleb128 0x11
 3239 0101 01       		.uleb128 0x1
 3240 0102 12       		.uleb128 0x12
 3241 0103 06       		.uleb128 0x6
 3242 0104 00       		.byte	0
 3243 0105 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 84


 3244 0106 14       		.uleb128 0x14
 3245 0107 34       		.uleb128 0x34
 3246 0108 00       		.byte	0
 3247 0109 31       		.uleb128 0x31
 3248 010a 13       		.uleb128 0x13
 3249 010b 02       		.uleb128 0x2
 3250 010c 18       		.uleb128 0x18
 3251 010d 00       		.byte	0
 3252 010e 00       		.byte	0
 3253 010f 15       		.uleb128 0x15
 3254 0110 1D       		.uleb128 0x1d
 3255 0111 01       		.byte	0x1
 3256 0112 31       		.uleb128 0x31
 3257 0113 13       		.uleb128 0x13
 3258 0114 11       		.uleb128 0x11
 3259 0115 01       		.uleb128 0x1
 3260 0116 12       		.uleb128 0x12
 3261 0117 06       		.uleb128 0x6
 3262 0118 58       		.uleb128 0x58
 3263 0119 0B       		.uleb128 0xb
 3264 011a 59       		.uleb128 0x59
 3265 011b 05       		.uleb128 0x5
 3266 011c 00       		.byte	0
 3267 011d 00       		.byte	0
 3268 011e 00       		.byte	0
 3269              		.section	.debug_aranges,"",%progbits
 3270 0000 1C000000 		.4byte	0x1c
 3271 0004 0200     		.2byte	0x2
 3272 0006 00000000 		.4byte	.Ldebug_info0
 3273 000a 04       		.byte	0x4
 3274 000b 00       		.byte	0
 3275 000c 0000     		.2byte	0
 3276 000e 0000     		.2byte	0
 3277 0010 00000000 		.4byte	.LFB82
 3278 0014 F20C0000 		.4byte	.LFE82-.LFB82
 3279 0018 00000000 		.4byte	0
 3280 001c 00000000 		.4byte	0
 3281              		.section	.debug_ranges,"",%progbits
 3282              	.Ldebug_ranges0:
 3283 0000 00000000 		.4byte	.LFB82
 3284 0004 F20C0000 		.4byte	.LFE82
 3285 0008 00000000 		.4byte	0
 3286 000c 00000000 		.4byte	0
 3287              		.section	.debug_line,"",%progbits
 3288              	.Ldebug_line0:
 3289 0000 4A030000 		.section	.debug_str,"MS",%progbits,1
 3289      02005A01 
 3289      00000201 
 3289      FB0E0D00 
 3289      01010101 
 3290              	.LASF48:
 3291 0000 70536372 		.ascii	"pScr1\000"
 3291      3100
 3292              	.LASF47:
 3293 0006 70536372 		.ascii	"pScr2\000"
 3293      3200
 3294              	.LASF42:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 85


 3295 000c 70447374 		.ascii	"pDst\000"
 3295      00
 3296              	.LASF32:
 3297 0011 7133315F 		.ascii	"q31_t\000"
 3297      7400
 3298              	.LASF59:
 3299 0017 6F757430 		.ascii	"out0\000"
 3299      00
 3300              	.LASF31:
 3301 001c 7131355F 		.ascii	"q15_t\000"
 3301      7400
 3302              	.LASF61:
 3303 0022 6F757432 		.ascii	"out2\000"
 3303      00
 3304              	.LASF62:
 3305 0027 6F757433 		.ascii	"out3\000"
 3305      00
 3306              	.LASF13:
 3307 002c 696E7438 		.ascii	"int8_t\000"
 3307      5F7400
 3308              	.LASF27:
 3309 0033 41524D5F 		.ascii	"ARM_MATH_SINGULAR\000"
 3309      4D415448 
 3309      5F53494E 
 3309      47554C41 
 3309      5200
 3310              	.LASF29:
 3311 0045 61726D5F 		.ascii	"arm_status\000"
 3311      73746174 
 3311      757300
 3312              	.LASF4:
 3313 0050 73686F72 		.ascii	"short int\000"
 3313      7420696E 
 3313      7400
 3314              	.LASF17:
 3315 005a 73697A65 		.ascii	"sizetype\000"
 3315      74797065 
 3315      00
 3316              	.LASF52:
 3317 0063 74617043 		.ascii	"tapCnt\000"
 3317      6E7400
 3318              	.LASF22:
 3319 006a 41524D5F 		.ascii	"ARM_MATH_SUCCESS\000"
 3319      4D415448 
 3319      5F535543 
 3319      43455353 
 3319      00
 3320              	.LASF21:
 3321 007b 6C6F6E67 		.ascii	"long double\000"
 3321      20646F75 
 3321      626C6500 
 3322              	.LASF8:
 3323 0087 5F5F7569 		.ascii	"__uint32_t\000"
 3323      6E743332 
 3323      5F7400
 3324              	.LASF45:
 3325 0092 70536372 		.ascii	"pScratch1\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 86


 3325      61746368 
 3325      3100
 3326              	.LASF46:
 3327 009c 70536372 		.ascii	"pScratch2\000"
 3327      61746368 
 3327      3200
 3328              	.LASF43:
 3329 00a6 66697273 		.ascii	"firstIndex\000"
 3329      74496E64 
 3329      657800
 3330              	.LASF58:
 3331 00b1 704F7574 		.ascii	"pOut\000"
 3331      00
 3332              	.LASF34:
 3333 00b6 5F5F534D 		.ascii	"__SMLADX\000"
 3333      4C414458 
 3333      00
 3334              	.LASF39:
 3335 00bf 73726341 		.ascii	"srcALen\000"
 3335      4C656E00 
 3336              	.LASF33:
 3337 00c7 5F5F534D 		.ascii	"__SMLAD\000"
 3337      4C414400 
 3338              	.LASF20:
 3339 00cf 666C6F61 		.ascii	"float\000"
 3339      7400
 3340              	.LASF51:
 3341 00d5 626C6B43 		.ascii	"blkCnt\000"
 3341      6E7400
 3342              	.LASF38:
 3343 00dc 70537263 		.ascii	"pSrcA\000"
 3343      4100
 3344              	.LASF10:
 3345 00e2 6C6F6E67 		.ascii	"long long int\000"
 3345      206C6F6E 
 3345      6720696E 
 3345      7400
 3346              	.LASF40:
 3347 00f0 70537263 		.ascii	"pSrcB\000"
 3347      4200
 3348              	.LASF7:
 3349 00f6 6C6F6E67 		.ascii	"long int\000"
 3349      20696E74 
 3349      00
 3350              	.LASF30:
 3351 00ff 71375F74 		.ascii	"q7_t\000"
 3351      00
 3352              	.LASF2:
 3353 0104 5F5F696E 		.ascii	"__int8_t\000"
 3353      74385F74 
 3353      00
 3354              	.LASF1:
 3355 010d 756E7369 		.ascii	"unsigned char\000"
 3355      676E6564 
 3355      20636861 
 3355      7200
 3356              	.LASF0:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 87


 3357 011b 7369676E 		.ascii	"signed char\000"
 3357      65642063 
 3357      68617200 
 3358              	.LASF11:
 3359 0127 6C6F6E67 		.ascii	"long long unsigned int\000"
 3359      206C6F6E 
 3359      6720756E 
 3359      7369676E 
 3359      65642069 
 3360              	.LASF16:
 3361 013e 75696E74 		.ascii	"uint32_t\000"
 3361      33325F74 
 3361      00
 3362              	.LASF65:
 3363 0147 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 3363      73657273 
 3363      5C666E65 
 3363      7665735C 
 3363      446F6375 
 3364 0174 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 3364      655F7370 
 3364      6565645F 
 3364      73656E73 
 3364      6F722E63 
 3365              	.LASF12:
 3366 018d 756E7369 		.ascii	"unsigned int\000"
 3366      676E6564 
 3366      20696E74 
 3366      00
 3367              	.LASF41:
 3368 019a 73726342 		.ascii	"srcBLen\000"
 3368      4C656E00 
 3369              	.LASF63:
 3370 01a2 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3370      4320342E 
 3370      392E3320 
 3370      32303135 
 3370      30333033 
 3371 01d5 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 3371      20726576 
 3371      6973696F 
 3371      6E203232 
 3371      31323230 
 3372 0208 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 3372      30202D66 
 3372      66756E63 
 3372      74696F6E 
 3372      2D736563 
 3373              	.LASF35:
 3374 0234 5F5F5353 		.ascii	"__SSAT\000"
 3374      415400
 3375              	.LASF60:
 3376 023b 6F757431 		.ascii	"out1\000"
 3376      00
 3377              	.LASF57:
 3378 0240 73746174 		.ascii	"status\000"
 3378      757300
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 88


 3379              	.LASF5:
 3380 0247 73686F72 		.ascii	"short unsigned int\000"
 3380      7420756E 
 3380      7369676E 
 3380      65642069 
 3380      6E7400
 3381              	.LASF18:
 3382 025a 63686172 		.ascii	"char\000"
 3382      00
 3383              	.LASF15:
 3384 025f 696E7433 		.ascii	"int32_t\000"
 3384      325F7400 
 3385              	.LASF14:
 3386 0267 696E7431 		.ascii	"int16_t\000"
 3386      365F7400 
 3387              	.LASF44:
 3388 026f 6E756D50 		.ascii	"numPoints\000"
 3388      6F696E74 
 3388      7300
 3389              	.LASF37:
 3390 0279 6E65674D 		.ascii	"negMin\000"
 3390      696E00
 3391              	.LASF36:
 3392 0280 706F734D 		.ascii	"posMax\000"
 3392      617800
 3393              	.LASF9:
 3394 0287 6C6F6E67 		.ascii	"long unsigned int\000"
 3394      20756E73 
 3394      69676E65 
 3394      6420696E 
 3394      7400
 3395              	.LASF25:
 3396 0299 41524D5F 		.ascii	"ARM_MATH_SIZE_MISMATCH\000"
 3396      4D415448 
 3396      5F53495A 
 3396      455F4D49 
 3396      534D4154 
 3397              	.LASF19:
 3398 02b0 646F7562 		.ascii	"double\000"
 3398      6C6500
 3399              	.LASF49:
 3400 02b7 70496E31 		.ascii	"pIn1\000"
 3400      00
 3401              	.LASF50:
 3402 02bc 70496E32 		.ascii	"pIn2\000"
 3402      00
 3403              	.LASF26:
 3404 02c1 41524D5F 		.ascii	"ARM_MATH_NANINF\000"
 3404      4D415448 
 3404      5F4E414E 
 3404      494E4600 
 3405              	.LASF64:
 3406 02d1 536F7572 		.ascii	"Source\\FilteringFunctions\\arm_conv_partial_opt_q7"
 3406      63655C46 
 3406      696C7465 
 3406      72696E67 
 3406      46756E63 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccetisDa.s 			page 89


 3407 0302 2E6300   		.ascii	".c\000"
 3408              	.LASF6:
 3409 0305 5F5F696E 		.ascii	"__int32_t\000"
 3409      7433325F 
 3409      7400
 3410              	.LASF66:
 3411 030f 61726D5F 		.ascii	"arm_conv_partial_opt_q7\000"
 3411      636F6E76 
 3411      5F706172 
 3411      7469616C 
 3411      5F6F7074 
 3412              	.LASF23:
 3413 0327 41524D5F 		.ascii	"ARM_MATH_ARGUMENT_ERROR\000"
 3413      4D415448 
 3413      5F415247 
 3413      554D454E 
 3413      545F4552 
 3414              	.LASF3:
 3415 033f 5F5F696E 		.ascii	"__int16_t\000"
 3415      7431365F 
 3415      7400
 3416              	.LASF28:
 3417 0349 41524D5F 		.ascii	"ARM_MATH_TEST_FAILURE\000"
 3417      4D415448 
 3417      5F544553 
 3417      545F4641 
 3417      494C5552 
 3418              	.LASF24:
 3419 035f 41524D5F 		.ascii	"ARM_MATH_LENGTH_ERROR\000"
 3419      4D415448 
 3419      5F4C454E 
 3419      4754485F 
 3419      4552524F 
 3420              	.LASF53:
 3421 0375 61636330 		.ascii	"acc0\000"
 3421      00
 3422              	.LASF54:
 3423 037a 61636331 		.ascii	"acc1\000"
 3423      00
 3424              	.LASF55:
 3425 037f 61636332 		.ascii	"acc2\000"
 3425      00
 3426              	.LASF56:
 3427 0384 61636333 		.ascii	"acc3\000"
 3427      00
 3428              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
