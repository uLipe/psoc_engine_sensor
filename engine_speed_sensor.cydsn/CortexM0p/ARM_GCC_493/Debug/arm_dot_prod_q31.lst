ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccy7jzB4.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_dot_prod_q31.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_lmul
  18              		.section	.text.arm_dot_prod_q31,"ax",%progbits
  19              		.align	2
  20              		.global	arm_dot_prod_q31
  21              		.code	16
  22              		.thumb_func
  23              		.type	arm_dot_prod_q31, %function
  24              	arm_dot_prod_q31:
  25              	.LFB82:
  26              		.file 1 "Source\\BasicMathFunctions\\arm_dot_prod_q31.c"
   1:Source\BasicMathFunctions/arm_dot_prod_q31.c **** /* ----------------------------------------------------------------------
   2:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * Project:      CMSIS DSP Library
   3:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * Title:        arm_dot_prod_q31.c
   4:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * Description:  Q31 dot product
   5:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  *
   6:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * $Date:        27. January 2017
   7:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * $Revision:    V.1.5.1
   8:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  *
   9:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * Target Processor: Cortex-M cores
  10:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * -------------------------------------------------------------------- */
  11:Source\BasicMathFunctions/arm_dot_prod_q31.c **** /*
  12:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  *
  14:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  *
  16:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * not use this file except in compliance with the License.
  18:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * You may obtain a copy of the License at
  19:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  *
  20:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  *
  22:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * See the License for the specific language governing permissions and
  26:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * limitations under the License.
  27:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  */
  28:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
  29:Source\BasicMathFunctions/arm_dot_prod_q31.c **** #include "arm_math.h"
  30:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
  31:Source\BasicMathFunctions/arm_dot_prod_q31.c **** /**
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccy7jzB4.s 			page 2


  32:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * @ingroup groupMath
  33:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  */
  34:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
  35:Source\BasicMathFunctions/arm_dot_prod_q31.c **** /**
  36:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * @addtogroup dot_prod
  37:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * @{
  38:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  */
  39:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
  40:Source\BasicMathFunctions/arm_dot_prod_q31.c **** /**
  41:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * @brief Dot product of Q31 vectors.
  42:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * @param[in]       *pSrcA points to the first input vector
  43:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * @param[in]       *pSrcB points to the second input vector
  44:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * @param[in]       blockSize number of samples in each vector
  45:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * @param[out]      *result output result returned here
  46:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * @return none.
  47:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  *
  48:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * <b>Scaling and Overflow Behavior:</b>
  49:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * \par
  50:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * The intermediate multiplications are in 1.31 x 1.31 = 2.62 format and these
  51:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * are truncated to 2.48 format by discarding the lower 14 bits.
  52:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * The 2.48 result is then added without saturation to a 64-bit accumulator in 16.48 format.
  53:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * There are 15 guard bits in the accumulator and there is no risk of overflow as long as
  54:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * the length of the vectors is less than 2^16 elements.
  55:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  * The return result is in 16.48 format.
  56:Source\BasicMathFunctions/arm_dot_prod_q31.c ****  */
  57:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
  58:Source\BasicMathFunctions/arm_dot_prod_q31.c **** void arm_dot_prod_q31(
  59:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   q31_t * pSrcA,
  60:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   q31_t * pSrcB,
  61:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   uint32_t blockSize,
  62:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   q63_t * result)
  63:Source\BasicMathFunctions/arm_dot_prod_q31.c **** {
  27              		.loc 1 63 0
  28              		.cfi_startproc
  29 0000 B0B5     		push	{r4, r5, r7, lr}
  30              		.cfi_def_cfa_offset 16
  31              		.cfi_offset 4, -16
  32              		.cfi_offset 5, -12
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 8CB0     		sub	sp, sp, #48
  36              		.cfi_def_cfa_offset 64
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 F861     		str	r0, [r7, #28]
  40 0008 B961     		str	r1, [r7, #24]
  41 000a 7A61     		str	r2, [r7, #20]
  42 000c 3B61     		str	r3, [r7, #16]
  64:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   q63_t sum = 0;                                 /* Temporary result storage */
  43              		.loc 1 64 0
  44 000e 0022     		mov	r2, #0
  45 0010 0023     		mov	r3, #0
  46 0012 BA62     		str	r2, [r7, #40]
  47 0014 FB62     		str	r3, [r7, #44]
  65:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   uint32_t blkCnt;                               /* loop counter */
  66:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
  67:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccy7jzB4.s 			page 3


  68:Source\BasicMathFunctions/arm_dot_prod_q31.c **** #if defined (ARM_MATH_DSP)
  69:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
  70:Source\BasicMathFunctions/arm_dot_prod_q31.c **** /* Run the below code for Cortex-M4 and Cortex-M3 */
  71:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   q31_t inA1, inA2, inA3, inA4;
  72:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   q31_t inB1, inB2, inB3, inB4;
  73:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
  74:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   /*loop Unrolling */
  75:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   blkCnt = blockSize >> 2u;
  76:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
  77:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  78:Source\BasicMathFunctions/arm_dot_prod_q31.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  79:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   while (blkCnt > 0u)
  80:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   {
  81:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     /* C = A[0]* B[0] + A[1]* B[1] + A[2]* B[2] + .....+ A[blockSize-1]* B[blockSize-1] */
  82:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     /* Calculate dot product and then store the result in a temporary buffer. */
  83:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     inA1 = *pSrcA++;
  84:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     inA2 = *pSrcA++;
  85:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     inA3 = *pSrcA++;
  86:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     inA4 = *pSrcA++;
  87:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     inB1 = *pSrcB++;
  88:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     inB2 = *pSrcB++;
  89:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     inB3 = *pSrcB++;
  90:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     inB4 = *pSrcB++;
  91:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
  92:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     sum += ((q63_t) inA1 * inB1) >> 14u;
  93:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     sum += ((q63_t) inA2 * inB2) >> 14u;
  94:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     sum += ((q63_t) inA3 * inB3) >> 14u;
  95:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     sum += ((q63_t) inA4 * inB4) >> 14u;
  96:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
  97:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     /* Decrement the loop counter */
  98:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     blkCnt--;
  99:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   }
 100:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
 101:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 102:Source\BasicMathFunctions/arm_dot_prod_q31.c ****    ** No loop unrolling is used. */
 103:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   blkCnt = blockSize % 0x4u;
 104:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
 105:Source\BasicMathFunctions/arm_dot_prod_q31.c **** #else
 106:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
 107:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   /* Run the below code for Cortex-M0 */
 108:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
 109:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   /* Initialize blkCnt with number of samples */
 110:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   blkCnt = blockSize;
  48              		.loc 1 110 0
  49 0016 7B69     		ldr	r3, [r7, #20]
  50 0018 7B62     		str	r3, [r7, #36]
 111:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
 112:Source\BasicMathFunctions/arm_dot_prod_q31.c **** #endif /* #if defined (ARM_MATH_DSP) */
 113:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
 114:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
 115:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   while (blkCnt > 0u)
  51              		.loc 1 115 0
  52 001a 22E0     		b	.L2
  53              	.L3:
 116:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   {
 117:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     /* C = A[0]* B[0] + A[1]* B[1] + A[2]* B[2] + .....+ A[blockSize-1]* B[blockSize-1] */
 118:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     /* Calculate dot product and then store the result in a temporary buffer. */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccy7jzB4.s 			page 4


 119:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     sum += ((q63_t) * pSrcA++ * *pSrcB++) >> 14u;
  54              		.loc 1 119 0
  55 001c FB69     		ldr	r3, [r7, #28]
  56 001e 1A1D     		add	r2, r3, #4
  57 0020 FA61     		str	r2, [r7, #28]
  58 0022 1B68     		ldr	r3, [r3]
  59 0024 BB60     		str	r3, [r7, #8]
  60 0026 DB17     		asr	r3, r3, #31
  61 0028 FB60     		str	r3, [r7, #12]
  62 002a BB69     		ldr	r3, [r7, #24]
  63 002c 1A1D     		add	r2, r3, #4
  64 002e BA61     		str	r2, [r7, #24]
  65 0030 1B68     		ldr	r3, [r3]
  66 0032 3B60     		str	r3, [r7]
  67 0034 DB17     		asr	r3, r3, #31
  68 0036 7B60     		str	r3, [r7, #4]
  69 0038 B868     		ldr	r0, [r7, #8]
  70 003a F968     		ldr	r1, [r7, #12]
  71 003c 3A68     		ldr	r2, [r7]
  72 003e 7B68     		ldr	r3, [r7, #4]
  73 0040 FFF7FEFF 		bl	__aeabi_lmul
  74 0044 021C     		mov	r2, r0
  75 0046 0B1C     		mov	r3, r1
  76 0048 9904     		lsl	r1, r3, #18
  77 004a 940B     		lsr	r4, r2, #14
  78 004c 0C43     		orr	r4, r1
  79 004e 9D13     		asr	r5, r3, #14
  80 0050 BA6A     		ldr	r2, [r7, #40]
  81 0052 FB6A     		ldr	r3, [r7, #44]
  82 0054 1219     		add	r2, r2, r4
  83 0056 6B41     		adc	r3, r3, r5
  84 0058 BA62     		str	r2, [r7, #40]
  85 005a FB62     		str	r3, [r7, #44]
 120:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
 121:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     /* Decrement the loop counter */
 122:Source\BasicMathFunctions/arm_dot_prod_q31.c ****     blkCnt--;
  86              		.loc 1 122 0
  87 005c 7B6A     		ldr	r3, [r7, #36]
  88 005e 013B     		sub	r3, r3, #1
  89 0060 7B62     		str	r3, [r7, #36]
  90              	.L2:
 115:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   {
  91              		.loc 1 115 0
  92 0062 7B6A     		ldr	r3, [r7, #36]
  93 0064 002B     		cmp	r3, #0
  94 0066 D9D1     		bne	.L3
 123:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   }
 124:Source\BasicMathFunctions/arm_dot_prod_q31.c **** 
 125:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   /* Store the result in the destination buffer in 16.48 format */
 126:Source\BasicMathFunctions/arm_dot_prod_q31.c ****   *result = sum;
  95              		.loc 1 126 0
  96 0068 3A69     		ldr	r2, [r7, #16]
  97 006a BB6A     		ldr	r3, [r7, #40]
  98 006c FC6A     		ldr	r4, [r7, #44]
  99 006e 1360     		str	r3, [r2]
 100 0070 5460     		str	r4, [r2, #4]
 127:Source\BasicMathFunctions/arm_dot_prod_q31.c **** }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccy7jzB4.s 			page 5


 101              		.loc 1 127 0
 102 0072 BD46     		mov	sp, r7
 103 0074 0CB0     		add	sp, sp, #48
 104              		@ sp needed
 105 0076 B0BD     		pop	{r4, r5, r7, pc}
 106              		.cfi_endproc
 107              	.LFE82:
 108              		.size	arm_dot_prod_q31, .-arm_dot_prod_q31
 109              		.text
 110              	.Letext0:
 111              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 112              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 113              		.file 4 ".\\Include/arm_math.h"
 114              		.section	.debug_info,"",%progbits
 115              	.Ldebug_info0:
 116 0000 57010000 		.4byte	0x157
 117 0004 0400     		.2byte	0x4
 118 0006 00000000 		.4byte	.Ldebug_abbrev0
 119 000a 04       		.byte	0x4
 120 000b 01       		.uleb128 0x1
 121 000c EA000000 		.4byte	.LASF27
 122 0010 01       		.byte	0x1
 123 0011 FC010000 		.4byte	.LASF28
 124 0015 1E000000 		.4byte	.LASF29
 125 0019 00000000 		.4byte	.Ldebug_ranges0+0
 126 001d 00000000 		.4byte	0
 127 0021 00000000 		.4byte	.Ldebug_line0
 128 0025 02       		.uleb128 0x2
 129 0026 01       		.byte	0x1
 130 0027 06       		.byte	0x6
 131 0028 F0010000 		.4byte	.LASF0
 132 002c 02       		.uleb128 0x2
 133 002d 01       		.byte	0x1
 134 002e 08       		.byte	0x8
 135 002f 70000000 		.4byte	.LASF1
 136 0033 02       		.uleb128 0x2
 137 0034 02       		.byte	0x2
 138 0035 05       		.byte	0x5
 139 0036 B7010000 		.4byte	.LASF2
 140 003a 02       		.uleb128 0x2
 141 003b 02       		.byte	0x2
 142 003c 07       		.byte	0x7
 143 003d 97000000 		.4byte	.LASF3
 144 0041 03       		.uleb128 0x3
 145 0042 14000000 		.4byte	.LASF5
 146 0046 02       		.byte	0x2
 147 0047 3F       		.byte	0x3f
 148 0048 4C000000 		.4byte	0x4c
 149 004c 02       		.uleb128 0x2
 150 004d 04       		.byte	0x4
 151 004e 05       		.byte	0x5
 152 004f CA010000 		.4byte	.LASF4
 153 0053 03       		.uleb128 0x3
 154 0054 BB000000 		.4byte	.LASF6
 155 0058 02       		.byte	0x2
 156 0059 41       		.byte	0x41
 157 005a 5E000000 		.4byte	0x5e
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccy7jzB4.s 			page 6


 158 005e 02       		.uleb128 0x2
 159 005f 04       		.byte	0x4
 160 0060 07       		.byte	0x7
 161 0061 85000000 		.4byte	.LASF7
 162 0065 03       		.uleb128 0x3
 163 0066 AA000000 		.4byte	.LASF8
 164 006a 02       		.byte	0x2
 165 006b 59       		.byte	0x59
 166 006c 70000000 		.4byte	0x70
 167 0070 02       		.uleb128 0x2
 168 0071 08       		.byte	0x8
 169 0072 05       		.byte	0x5
 170 0073 9A010000 		.4byte	.LASF9
 171 0077 02       		.uleb128 0x2
 172 0078 08       		.byte	0x8
 173 0079 07       		.byte	0x7
 174 007a D3000000 		.4byte	.LASF10
 175 007e 04       		.uleb128 0x4
 176 007f 04       		.byte	0x4
 177 0080 05       		.byte	0x5
 178 0081 696E7400 		.ascii	"int\000"
 179 0085 02       		.uleb128 0x2
 180 0086 04       		.byte	0x4
 181 0087 07       		.byte	0x7
 182 0088 C6000000 		.4byte	.LASF11
 183 008c 03       		.uleb128 0x3
 184 008d 89010000 		.4byte	.LASF12
 185 0091 03       		.byte	0x3
 186 0092 2C       		.byte	0x2c
 187 0093 41000000 		.4byte	0x41
 188 0097 03       		.uleb128 0x3
 189 0098 C1010000 		.4byte	.LASF13
 190 009c 03       		.byte	0x3
 191 009d 2D       		.byte	0x2d
 192 009e 53000000 		.4byte	0x53
 193 00a2 03       		.uleb128 0x3
 194 00a3 00000000 		.4byte	.LASF14
 195 00a7 03       		.byte	0x3
 196 00a8 38       		.byte	0x38
 197 00a9 65000000 		.4byte	0x65
 198 00ad 02       		.uleb128 0x2
 199 00ae 04       		.byte	0x4
 200 00af 07       		.byte	0x7
 201 00b0 91010000 		.4byte	.LASF15
 202 00b4 02       		.uleb128 0x2
 203 00b5 01       		.byte	0x1
 204 00b6 08       		.byte	0x8
 205 00b7 B2010000 		.4byte	.LASF16
 206 00bb 02       		.uleb128 0x2
 207 00bc 08       		.byte	0x8
 208 00bd 04       		.byte	0x4
 209 00be B4000000 		.4byte	.LASF17
 210 00c2 02       		.uleb128 0x2
 211 00c3 04       		.byte	0x4
 212 00c4 04       		.byte	0x4
 213 00c5 64000000 		.4byte	.LASF18
 214 00c9 02       		.uleb128 0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccy7jzB4.s 			page 7


 215 00ca 08       		.byte	0x8
 216 00cb 04       		.byte	0x4
 217 00cc E4010000 		.4byte	.LASF19
 218 00d0 05       		.uleb128 0x5
 219 00d1 6A000000 		.4byte	.LASF20
 220 00d5 04       		.byte	0x4
 221 00d6 9B01     		.2byte	0x19b
 222 00d8 8C000000 		.4byte	0x8c
 223 00dc 05       		.uleb128 0x5
 224 00dd 83010000 		.4byte	.LASF21
 225 00e1 04       		.byte	0x4
 226 00e2 A001     		.2byte	0x1a0
 227 00e4 A2000000 		.4byte	0xa2
 228 00e8 06       		.uleb128 0x6
 229 00e9 04       		.byte	0x4
 230 00ea D0000000 		.4byte	0xd0
 231 00ee 06       		.uleb128 0x6
 232 00ef 04       		.byte	0x4
 233 00f0 DC000000 		.4byte	0xdc
 234 00f4 07       		.uleb128 0x7
 235 00f5 D3010000 		.4byte	.LASF30
 236 00f9 01       		.byte	0x1
 237 00fa 3A       		.byte	0x3a
 238 00fb 00000000 		.4byte	.LFB82
 239 00ff 78000000 		.4byte	.LFE82-.LFB82
 240 0103 01       		.uleb128 0x1
 241 0104 9C       		.byte	0x9c
 242 0105 08       		.uleb128 0x8
 243 0106 08000000 		.4byte	.LASF22
 244 010a 01       		.byte	0x1
 245 010b 3B       		.byte	0x3b
 246 010c E8000000 		.4byte	0xe8
 247 0110 02       		.uleb128 0x2
 248 0111 91       		.byte	0x91
 249 0112 5C       		.sleb128 -36
 250 0113 08       		.uleb128 0x8
 251 0114 0E000000 		.4byte	.LASF23
 252 0118 01       		.byte	0x1
 253 0119 3C       		.byte	0x3c
 254 011a E8000000 		.4byte	0xe8
 255 011e 02       		.uleb128 0x2
 256 011f 91       		.byte	0x91
 257 0120 58       		.sleb128 -40
 258 0121 08       		.uleb128 0x8
 259 0122 A8010000 		.4byte	.LASF24
 260 0126 01       		.byte	0x1
 261 0127 3D       		.byte	0x3d
 262 0128 97000000 		.4byte	0x97
 263 012c 02       		.uleb128 0x2
 264 012d 91       		.byte	0x91
 265 012e 54       		.sleb128 -44
 266 012f 08       		.uleb128 0x8
 267 0130 7C010000 		.4byte	.LASF25
 268 0134 01       		.byte	0x1
 269 0135 3E       		.byte	0x3e
 270 0136 EE000000 		.4byte	0xee
 271 013a 02       		.uleb128 0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccy7jzB4.s 			page 8


 272 013b 91       		.byte	0x91
 273 013c 50       		.sleb128 -48
 274 013d 09       		.uleb128 0x9
 275 013e 73756D00 		.ascii	"sum\000"
 276 0142 01       		.byte	0x1
 277 0143 40       		.byte	0x40
 278 0144 DC000000 		.4byte	0xdc
 279 0148 02       		.uleb128 0x2
 280 0149 91       		.byte	0x91
 281 014a 68       		.sleb128 -24
 282 014b 0A       		.uleb128 0xa
 283 014c 7E000000 		.4byte	.LASF26
 284 0150 01       		.byte	0x1
 285 0151 41       		.byte	0x41
 286 0152 97000000 		.4byte	0x97
 287 0156 02       		.uleb128 0x2
 288 0157 91       		.byte	0x91
 289 0158 64       		.sleb128 -28
 290 0159 00       		.byte	0
 291 015a 00       		.byte	0
 292              		.section	.debug_abbrev,"",%progbits
 293              	.Ldebug_abbrev0:
 294 0000 01       		.uleb128 0x1
 295 0001 11       		.uleb128 0x11
 296 0002 01       		.byte	0x1
 297 0003 25       		.uleb128 0x25
 298 0004 0E       		.uleb128 0xe
 299 0005 13       		.uleb128 0x13
 300 0006 0B       		.uleb128 0xb
 301 0007 03       		.uleb128 0x3
 302 0008 0E       		.uleb128 0xe
 303 0009 1B       		.uleb128 0x1b
 304 000a 0E       		.uleb128 0xe
 305 000b 55       		.uleb128 0x55
 306 000c 17       		.uleb128 0x17
 307 000d 11       		.uleb128 0x11
 308 000e 01       		.uleb128 0x1
 309 000f 10       		.uleb128 0x10
 310 0010 17       		.uleb128 0x17
 311 0011 00       		.byte	0
 312 0012 00       		.byte	0
 313 0013 02       		.uleb128 0x2
 314 0014 24       		.uleb128 0x24
 315 0015 00       		.byte	0
 316 0016 0B       		.uleb128 0xb
 317 0017 0B       		.uleb128 0xb
 318 0018 3E       		.uleb128 0x3e
 319 0019 0B       		.uleb128 0xb
 320 001a 03       		.uleb128 0x3
 321 001b 0E       		.uleb128 0xe
 322 001c 00       		.byte	0
 323 001d 00       		.byte	0
 324 001e 03       		.uleb128 0x3
 325 001f 16       		.uleb128 0x16
 326 0020 00       		.byte	0
 327 0021 03       		.uleb128 0x3
 328 0022 0E       		.uleb128 0xe
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccy7jzB4.s 			page 9


 329 0023 3A       		.uleb128 0x3a
 330 0024 0B       		.uleb128 0xb
 331 0025 3B       		.uleb128 0x3b
 332 0026 0B       		.uleb128 0xb
 333 0027 49       		.uleb128 0x49
 334 0028 13       		.uleb128 0x13
 335 0029 00       		.byte	0
 336 002a 00       		.byte	0
 337 002b 04       		.uleb128 0x4
 338 002c 24       		.uleb128 0x24
 339 002d 00       		.byte	0
 340 002e 0B       		.uleb128 0xb
 341 002f 0B       		.uleb128 0xb
 342 0030 3E       		.uleb128 0x3e
 343 0031 0B       		.uleb128 0xb
 344 0032 03       		.uleb128 0x3
 345 0033 08       		.uleb128 0x8
 346 0034 00       		.byte	0
 347 0035 00       		.byte	0
 348 0036 05       		.uleb128 0x5
 349 0037 16       		.uleb128 0x16
 350 0038 00       		.byte	0
 351 0039 03       		.uleb128 0x3
 352 003a 0E       		.uleb128 0xe
 353 003b 3A       		.uleb128 0x3a
 354 003c 0B       		.uleb128 0xb
 355 003d 3B       		.uleb128 0x3b
 356 003e 05       		.uleb128 0x5
 357 003f 49       		.uleb128 0x49
 358 0040 13       		.uleb128 0x13
 359 0041 00       		.byte	0
 360 0042 00       		.byte	0
 361 0043 06       		.uleb128 0x6
 362 0044 0F       		.uleb128 0xf
 363 0045 00       		.byte	0
 364 0046 0B       		.uleb128 0xb
 365 0047 0B       		.uleb128 0xb
 366 0048 49       		.uleb128 0x49
 367 0049 13       		.uleb128 0x13
 368 004a 00       		.byte	0
 369 004b 00       		.byte	0
 370 004c 07       		.uleb128 0x7
 371 004d 2E       		.uleb128 0x2e
 372 004e 01       		.byte	0x1
 373 004f 3F       		.uleb128 0x3f
 374 0050 19       		.uleb128 0x19
 375 0051 03       		.uleb128 0x3
 376 0052 0E       		.uleb128 0xe
 377 0053 3A       		.uleb128 0x3a
 378 0054 0B       		.uleb128 0xb
 379 0055 3B       		.uleb128 0x3b
 380 0056 0B       		.uleb128 0xb
 381 0057 27       		.uleb128 0x27
 382 0058 19       		.uleb128 0x19
 383 0059 11       		.uleb128 0x11
 384 005a 01       		.uleb128 0x1
 385 005b 12       		.uleb128 0x12
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccy7jzB4.s 			page 10


 386 005c 06       		.uleb128 0x6
 387 005d 40       		.uleb128 0x40
 388 005e 18       		.uleb128 0x18
 389 005f 9642     		.uleb128 0x2116
 390 0061 19       		.uleb128 0x19
 391 0062 00       		.byte	0
 392 0063 00       		.byte	0
 393 0064 08       		.uleb128 0x8
 394 0065 05       		.uleb128 0x5
 395 0066 00       		.byte	0
 396 0067 03       		.uleb128 0x3
 397 0068 0E       		.uleb128 0xe
 398 0069 3A       		.uleb128 0x3a
 399 006a 0B       		.uleb128 0xb
 400 006b 3B       		.uleb128 0x3b
 401 006c 0B       		.uleb128 0xb
 402 006d 49       		.uleb128 0x49
 403 006e 13       		.uleb128 0x13
 404 006f 02       		.uleb128 0x2
 405 0070 18       		.uleb128 0x18
 406 0071 00       		.byte	0
 407 0072 00       		.byte	0
 408 0073 09       		.uleb128 0x9
 409 0074 34       		.uleb128 0x34
 410 0075 00       		.byte	0
 411 0076 03       		.uleb128 0x3
 412 0077 08       		.uleb128 0x8
 413 0078 3A       		.uleb128 0x3a
 414 0079 0B       		.uleb128 0xb
 415 007a 3B       		.uleb128 0x3b
 416 007b 0B       		.uleb128 0xb
 417 007c 49       		.uleb128 0x49
 418 007d 13       		.uleb128 0x13
 419 007e 02       		.uleb128 0x2
 420 007f 18       		.uleb128 0x18
 421 0080 00       		.byte	0
 422 0081 00       		.byte	0
 423 0082 0A       		.uleb128 0xa
 424 0083 34       		.uleb128 0x34
 425 0084 00       		.byte	0
 426 0085 03       		.uleb128 0x3
 427 0086 0E       		.uleb128 0xe
 428 0087 3A       		.uleb128 0x3a
 429 0088 0B       		.uleb128 0xb
 430 0089 3B       		.uleb128 0x3b
 431 008a 0B       		.uleb128 0xb
 432 008b 49       		.uleb128 0x49
 433 008c 13       		.uleb128 0x13
 434 008d 02       		.uleb128 0x2
 435 008e 18       		.uleb128 0x18
 436 008f 00       		.byte	0
 437 0090 00       		.byte	0
 438 0091 00       		.byte	0
 439              		.section	.debug_aranges,"",%progbits
 440 0000 1C000000 		.4byte	0x1c
 441 0004 0200     		.2byte	0x2
 442 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccy7jzB4.s 			page 11


 443 000a 04       		.byte	0x4
 444 000b 00       		.byte	0
 445 000c 0000     		.2byte	0
 446 000e 0000     		.2byte	0
 447 0010 00000000 		.4byte	.LFB82
 448 0014 78000000 		.4byte	.LFE82-.LFB82
 449 0018 00000000 		.4byte	0
 450 001c 00000000 		.4byte	0
 451              		.section	.debug_ranges,"",%progbits
 452              	.Ldebug_ranges0:
 453 0000 00000000 		.4byte	.LFB82
 454 0004 78000000 		.4byte	.LFE82
 455 0008 00000000 		.4byte	0
 456 000c 00000000 		.4byte	0
 457              		.section	.debug_line,"",%progbits
 458              	.Ldebug_line0:
 459 0000 77010000 		.section	.debug_str,"MS",%progbits,1
 459      02005301 
 459      00000201 
 459      FB0E0D00 
 459      01010101 
 460              	.LASF14:
 461 0000 696E7436 		.ascii	"int64_t\000"
 461      345F7400 
 462              	.LASF22:
 463 0008 70537263 		.ascii	"pSrcA\000"
 463      4100
 464              	.LASF23:
 465 000e 70537263 		.ascii	"pSrcB\000"
 465      4200
 466              	.LASF5:
 467 0014 5F5F696E 		.ascii	"__int32_t\000"
 467      7433325F 
 467      7400
 468              	.LASF29:
 469 001e 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 469      73657273 
 469      5C666E65 
 469      7665735C 
 469      446F6375 
 470 004b 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 470      655F7370 
 470      6565645F 
 470      73656E73 
 470      6F722E63 
 471              	.LASF18:
 472 0064 666C6F61 		.ascii	"float\000"
 472      7400
 473              	.LASF20:
 474 006a 7133315F 		.ascii	"q31_t\000"
 474      7400
 475              	.LASF1:
 476 0070 756E7369 		.ascii	"unsigned char\000"
 476      676E6564 
 476      20636861 
 476      7200
 477              	.LASF26:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccy7jzB4.s 			page 12


 478 007e 626C6B43 		.ascii	"blkCnt\000"
 478      6E7400
 479              	.LASF7:
 480 0085 6C6F6E67 		.ascii	"long unsigned int\000"
 480      20756E73 
 480      69676E65 
 480      6420696E 
 480      7400
 481              	.LASF3:
 482 0097 73686F72 		.ascii	"short unsigned int\000"
 482      7420756E 
 482      7369676E 
 482      65642069 
 482      6E7400
 483              	.LASF8:
 484 00aa 5F5F696E 		.ascii	"__int64_t\000"
 484      7436345F 
 484      7400
 485              	.LASF17:
 486 00b4 646F7562 		.ascii	"double\000"
 486      6C6500
 487              	.LASF6:
 488 00bb 5F5F7569 		.ascii	"__uint32_t\000"
 488      6E743332 
 488      5F7400
 489              	.LASF11:
 490 00c6 756E7369 		.ascii	"unsigned int\000"
 490      676E6564 
 490      20696E74 
 490      00
 491              	.LASF10:
 492 00d3 6C6F6E67 		.ascii	"long long unsigned int\000"
 492      206C6F6E 
 492      6720756E 
 492      7369676E 
 492      65642069 
 493              	.LASF27:
 494 00ea 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 494      4320342E 
 494      392E3320 
 494      32303135 
 494      30333033 
 495 011d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 495      20726576 
 495      6973696F 
 495      6E203232 
 495      31323230 
 496 0150 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 496      30202D66 
 496      66756E63 
 496      74696F6E 
 496      2D736563 
 497              	.LASF25:
 498 017c 72657375 		.ascii	"result\000"
 498      6C7400
 499              	.LASF21:
 500 0183 7136335F 		.ascii	"q63_t\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccy7jzB4.s 			page 13


 500      7400
 501              	.LASF12:
 502 0189 696E7433 		.ascii	"int32_t\000"
 502      325F7400 
 503              	.LASF15:
 504 0191 73697A65 		.ascii	"sizetype\000"
 504      74797065 
 504      00
 505              	.LASF9:
 506 019a 6C6F6E67 		.ascii	"long long int\000"
 506      206C6F6E 
 506      6720696E 
 506      7400
 507              	.LASF24:
 508 01a8 626C6F63 		.ascii	"blockSize\000"
 508      6B53697A 
 508      6500
 509              	.LASF16:
 510 01b2 63686172 		.ascii	"char\000"
 510      00
 511              	.LASF2:
 512 01b7 73686F72 		.ascii	"short int\000"
 512      7420696E 
 512      7400
 513              	.LASF13:
 514 01c1 75696E74 		.ascii	"uint32_t\000"
 514      33325F74 
 514      00
 515              	.LASF4:
 516 01ca 6C6F6E67 		.ascii	"long int\000"
 516      20696E74 
 516      00
 517              	.LASF30:
 518 01d3 61726D5F 		.ascii	"arm_dot_prod_q31\000"
 518      646F745F 
 518      70726F64 
 518      5F713331 
 518      00
 519              	.LASF19:
 520 01e4 6C6F6E67 		.ascii	"long double\000"
 520      20646F75 
 520      626C6500 
 521              	.LASF0:
 522 01f0 7369676E 		.ascii	"signed char\000"
 522      65642063 
 522      68617200 
 523              	.LASF28:
 524 01fc 536F7572 		.ascii	"Source\\BasicMathFunctions\\arm_dot_prod_q31.c\000"
 524      63655C42 
 524      61736963 
 524      4D617468 
 524      46756E63 
 525              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
