ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccYfbw5x.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_abs_f32.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.arm_abs_f32,"ax",%progbits
  18              		.align	2
  19              		.global	arm_abs_f32
  20              		.code	16
  21              		.thumb_func
  22              		.type	arm_abs_f32, %function
  23              	arm_abs_f32:
  24              	.LFB82:
  25              		.file 1 "Source\\BasicMathFunctions\\arm_abs_f32.c"
   1:Source\BasicMathFunctions/arm_abs_f32.c **** /* ----------------------------------------------------------------------
   2:Source\BasicMathFunctions/arm_abs_f32.c ****  * Project:      CMSIS DSP Library
   3:Source\BasicMathFunctions/arm_abs_f32.c ****  * Title:        arm_abs_f32.c
   4:Source\BasicMathFunctions/arm_abs_f32.c ****  * Description:  Floating-point vector absolute value
   5:Source\BasicMathFunctions/arm_abs_f32.c ****  *
   6:Source\BasicMathFunctions/arm_abs_f32.c ****  * $Date:        27. January 2017
   7:Source\BasicMathFunctions/arm_abs_f32.c ****  * $Revision:    V.1.5.1
   8:Source\BasicMathFunctions/arm_abs_f32.c ****  *
   9:Source\BasicMathFunctions/arm_abs_f32.c ****  * Target Processor: Cortex-M cores
  10:Source\BasicMathFunctions/arm_abs_f32.c ****  * -------------------------------------------------------------------- */
  11:Source\BasicMathFunctions/arm_abs_f32.c **** /*
  12:Source\BasicMathFunctions/arm_abs_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\BasicMathFunctions/arm_abs_f32.c ****  *
  14:Source\BasicMathFunctions/arm_abs_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\BasicMathFunctions/arm_abs_f32.c ****  *
  16:Source\BasicMathFunctions/arm_abs_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\BasicMathFunctions/arm_abs_f32.c ****  * not use this file except in compliance with the License.
  18:Source\BasicMathFunctions/arm_abs_f32.c ****  * You may obtain a copy of the License at
  19:Source\BasicMathFunctions/arm_abs_f32.c ****  *
  20:Source\BasicMathFunctions/arm_abs_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\BasicMathFunctions/arm_abs_f32.c ****  *
  22:Source\BasicMathFunctions/arm_abs_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\BasicMathFunctions/arm_abs_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\BasicMathFunctions/arm_abs_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\BasicMathFunctions/arm_abs_f32.c ****  * See the License for the specific language governing permissions and
  26:Source\BasicMathFunctions/arm_abs_f32.c ****  * limitations under the License.
  27:Source\BasicMathFunctions/arm_abs_f32.c ****  */
  28:Source\BasicMathFunctions/arm_abs_f32.c **** 
  29:Source\BasicMathFunctions/arm_abs_f32.c **** #include "arm_math.h"
  30:Source\BasicMathFunctions/arm_abs_f32.c **** #include <math.h>
  31:Source\BasicMathFunctions/arm_abs_f32.c **** 
  32:Source\BasicMathFunctions/arm_abs_f32.c **** /**
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccYfbw5x.s 			page 2


  33:Source\BasicMathFunctions/arm_abs_f32.c ****  * @ingroup groupMath
  34:Source\BasicMathFunctions/arm_abs_f32.c ****  */
  35:Source\BasicMathFunctions/arm_abs_f32.c **** 
  36:Source\BasicMathFunctions/arm_abs_f32.c **** /**
  37:Source\BasicMathFunctions/arm_abs_f32.c ****  * @defgroup BasicAbs Vector Absolute Value
  38:Source\BasicMathFunctions/arm_abs_f32.c ****  *
  39:Source\BasicMathFunctions/arm_abs_f32.c ****  * Computes the absolute value of a vector on an element-by-element basis.
  40:Source\BasicMathFunctions/arm_abs_f32.c ****  *
  41:Source\BasicMathFunctions/arm_abs_f32.c ****  * <pre>
  42:Source\BasicMathFunctions/arm_abs_f32.c ****  *     pDst[n] = abs(pSrc[n]),   0 <= n < blockSize.
  43:Source\BasicMathFunctions/arm_abs_f32.c ****  * </pre>
  44:Source\BasicMathFunctions/arm_abs_f32.c ****  *
  45:Source\BasicMathFunctions/arm_abs_f32.c ****  * The functions support in-place computation allowing the source and
  46:Source\BasicMathFunctions/arm_abs_f32.c ****  * destination pointers to reference the same memory buffer.
  47:Source\BasicMathFunctions/arm_abs_f32.c ****  * There are separate functions for floating-point, Q7, Q15, and Q31 data types.
  48:Source\BasicMathFunctions/arm_abs_f32.c ****  */
  49:Source\BasicMathFunctions/arm_abs_f32.c **** 
  50:Source\BasicMathFunctions/arm_abs_f32.c **** /**
  51:Source\BasicMathFunctions/arm_abs_f32.c ****  * @addtogroup BasicAbs
  52:Source\BasicMathFunctions/arm_abs_f32.c ****  * @{
  53:Source\BasicMathFunctions/arm_abs_f32.c ****  */
  54:Source\BasicMathFunctions/arm_abs_f32.c **** 
  55:Source\BasicMathFunctions/arm_abs_f32.c **** /**
  56:Source\BasicMathFunctions/arm_abs_f32.c ****  * @brief Floating-point vector absolute value.
  57:Source\BasicMathFunctions/arm_abs_f32.c ****  * @param[in]       *pSrc points to the input buffer
  58:Source\BasicMathFunctions/arm_abs_f32.c ****  * @param[out]      *pDst points to the output buffer
  59:Source\BasicMathFunctions/arm_abs_f32.c ****  * @param[in]       blockSize number of samples in each vector
  60:Source\BasicMathFunctions/arm_abs_f32.c ****  * @return none.
  61:Source\BasicMathFunctions/arm_abs_f32.c ****  */
  62:Source\BasicMathFunctions/arm_abs_f32.c **** 
  63:Source\BasicMathFunctions/arm_abs_f32.c **** void arm_abs_f32(
  64:Source\BasicMathFunctions/arm_abs_f32.c ****   float32_t * pSrc,
  65:Source\BasicMathFunctions/arm_abs_f32.c ****   float32_t * pDst,
  66:Source\BasicMathFunctions/arm_abs_f32.c ****   uint32_t blockSize)
  67:Source\BasicMathFunctions/arm_abs_f32.c **** {
  26              		.loc 1 67 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 86B0     		sub	sp, sp, #24
  33              		.cfi_def_cfa_offset 32
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  36 0006 F860     		str	r0, [r7, #12]
  37 0008 B960     		str	r1, [r7, #8]
  38 000a 7A60     		str	r2, [r7, #4]
  68:Source\BasicMathFunctions/arm_abs_f32.c ****   uint32_t blkCnt;                               /* loop counter */
  69:Source\BasicMathFunctions/arm_abs_f32.c **** 
  70:Source\BasicMathFunctions/arm_abs_f32.c **** #if defined (ARM_MATH_DSP)
  71:Source\BasicMathFunctions/arm_abs_f32.c **** 
  72:Source\BasicMathFunctions/arm_abs_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  73:Source\BasicMathFunctions/arm_abs_f32.c ****   float32_t in1, in2, in3, in4;                  /* temporary variables */
  74:Source\BasicMathFunctions/arm_abs_f32.c **** 
  75:Source\BasicMathFunctions/arm_abs_f32.c ****   /*loop Unrolling */
  76:Source\BasicMathFunctions/arm_abs_f32.c ****   blkCnt = blockSize >> 2u;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccYfbw5x.s 			page 3


  77:Source\BasicMathFunctions/arm_abs_f32.c **** 
  78:Source\BasicMathFunctions/arm_abs_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  79:Source\BasicMathFunctions/arm_abs_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  80:Source\BasicMathFunctions/arm_abs_f32.c ****   while (blkCnt > 0u)
  81:Source\BasicMathFunctions/arm_abs_f32.c ****   {
  82:Source\BasicMathFunctions/arm_abs_f32.c ****     /* C = |A| */
  83:Source\BasicMathFunctions/arm_abs_f32.c ****     /* Calculate absolute and then store the results in the destination buffer. */
  84:Source\BasicMathFunctions/arm_abs_f32.c ****     /* read sample from source */
  85:Source\BasicMathFunctions/arm_abs_f32.c ****     in1 = *pSrc;
  86:Source\BasicMathFunctions/arm_abs_f32.c ****     in2 = *(pSrc + 1);
  87:Source\BasicMathFunctions/arm_abs_f32.c ****     in3 = *(pSrc + 2);
  88:Source\BasicMathFunctions/arm_abs_f32.c **** 
  89:Source\BasicMathFunctions/arm_abs_f32.c ****     /* find absolute value */
  90:Source\BasicMathFunctions/arm_abs_f32.c ****     in1 = fabsf(in1);
  91:Source\BasicMathFunctions/arm_abs_f32.c **** 
  92:Source\BasicMathFunctions/arm_abs_f32.c ****     /* read sample from source */
  93:Source\BasicMathFunctions/arm_abs_f32.c ****     in4 = *(pSrc + 3);
  94:Source\BasicMathFunctions/arm_abs_f32.c **** 
  95:Source\BasicMathFunctions/arm_abs_f32.c ****     /* find absolute value */
  96:Source\BasicMathFunctions/arm_abs_f32.c ****     in2 = fabsf(in2);
  97:Source\BasicMathFunctions/arm_abs_f32.c **** 
  98:Source\BasicMathFunctions/arm_abs_f32.c ****     /* read sample from source */
  99:Source\BasicMathFunctions/arm_abs_f32.c ****     *pDst = in1;
 100:Source\BasicMathFunctions/arm_abs_f32.c **** 
 101:Source\BasicMathFunctions/arm_abs_f32.c ****     /* find absolute value */
 102:Source\BasicMathFunctions/arm_abs_f32.c ****     in3 = fabsf(in3);
 103:Source\BasicMathFunctions/arm_abs_f32.c **** 
 104:Source\BasicMathFunctions/arm_abs_f32.c ****     /* find absolute value */
 105:Source\BasicMathFunctions/arm_abs_f32.c ****     in4 = fabsf(in4);
 106:Source\BasicMathFunctions/arm_abs_f32.c **** 
 107:Source\BasicMathFunctions/arm_abs_f32.c ****     /* store result to destination */
 108:Source\BasicMathFunctions/arm_abs_f32.c ****     *(pDst + 1) = in2;
 109:Source\BasicMathFunctions/arm_abs_f32.c **** 
 110:Source\BasicMathFunctions/arm_abs_f32.c ****     /* store result to destination */
 111:Source\BasicMathFunctions/arm_abs_f32.c ****     *(pDst + 2) = in3;
 112:Source\BasicMathFunctions/arm_abs_f32.c **** 
 113:Source\BasicMathFunctions/arm_abs_f32.c ****     /* store result to destination */
 114:Source\BasicMathFunctions/arm_abs_f32.c ****     *(pDst + 3) = in4;
 115:Source\BasicMathFunctions/arm_abs_f32.c **** 
 116:Source\BasicMathFunctions/arm_abs_f32.c **** 
 117:Source\BasicMathFunctions/arm_abs_f32.c ****     /* Update source pointer to process next sampels */
 118:Source\BasicMathFunctions/arm_abs_f32.c ****     pSrc += 4u;
 119:Source\BasicMathFunctions/arm_abs_f32.c **** 
 120:Source\BasicMathFunctions/arm_abs_f32.c ****     /* Update destination pointer to process next sampels */
 121:Source\BasicMathFunctions/arm_abs_f32.c ****     pDst += 4u;
 122:Source\BasicMathFunctions/arm_abs_f32.c **** 
 123:Source\BasicMathFunctions/arm_abs_f32.c ****     /* Decrement the loop counter */
 124:Source\BasicMathFunctions/arm_abs_f32.c ****     blkCnt--;
 125:Source\BasicMathFunctions/arm_abs_f32.c ****   }
 126:Source\BasicMathFunctions/arm_abs_f32.c **** 
 127:Source\BasicMathFunctions/arm_abs_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 128:Source\BasicMathFunctions/arm_abs_f32.c ****    ** No loop unrolling is used. */
 129:Source\BasicMathFunctions/arm_abs_f32.c ****   blkCnt = blockSize % 0x4u;
 130:Source\BasicMathFunctions/arm_abs_f32.c **** 
 131:Source\BasicMathFunctions/arm_abs_f32.c **** #else
 132:Source\BasicMathFunctions/arm_abs_f32.c **** 
 133:Source\BasicMathFunctions/arm_abs_f32.c ****   /* Run the below code for Cortex-M0 */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccYfbw5x.s 			page 4


 134:Source\BasicMathFunctions/arm_abs_f32.c **** 
 135:Source\BasicMathFunctions/arm_abs_f32.c ****   /* Initialize blkCnt with number of samples */
 136:Source\BasicMathFunctions/arm_abs_f32.c ****   blkCnt = blockSize;
  39              		.loc 1 136 0
  40 000c 7B68     		ldr	r3, [r7, #4]
  41 000e 7B61     		str	r3, [r7, #20]
 137:Source\BasicMathFunctions/arm_abs_f32.c **** 
 138:Source\BasicMathFunctions/arm_abs_f32.c **** #endif /*   #if defined (ARM_MATH_DSP)   */
 139:Source\BasicMathFunctions/arm_abs_f32.c **** 
 140:Source\BasicMathFunctions/arm_abs_f32.c ****   while (blkCnt > 0u)
  42              		.loc 1 140 0
  43 0010 0CE0     		b	.L2
  44              	.L3:
 141:Source\BasicMathFunctions/arm_abs_f32.c ****   {
 142:Source\BasicMathFunctions/arm_abs_f32.c ****     /* C = |A| */
 143:Source\BasicMathFunctions/arm_abs_f32.c ****     /* Calculate absolute and then store the results in the destination buffer. */
 144:Source\BasicMathFunctions/arm_abs_f32.c ****     *pDst++ = fabsf(*pSrc++);
  45              		.loc 1 144 0
  46 0012 BB68     		ldr	r3, [r7, #8]
  47 0014 1A1D     		add	r2, r3, #4
  48 0016 BA60     		str	r2, [r7, #8]
  49 0018 FA68     		ldr	r2, [r7, #12]
  50 001a 111D     		add	r1, r2, #4
  51 001c F960     		str	r1, [r7, #12]
  52 001e 1268     		ldr	r2, [r2]
  53 0020 5200     		lsl	r2, r2, #1
  54 0022 5208     		lsr	r2, r2, #1
  55 0024 1A60     		str	r2, [r3]
 145:Source\BasicMathFunctions/arm_abs_f32.c **** 
 146:Source\BasicMathFunctions/arm_abs_f32.c ****     /* Decrement the loop counter */
 147:Source\BasicMathFunctions/arm_abs_f32.c ****     blkCnt--;
  56              		.loc 1 147 0
  57 0026 7B69     		ldr	r3, [r7, #20]
  58 0028 013B     		sub	r3, r3, #1
  59 002a 7B61     		str	r3, [r7, #20]
  60              	.L2:
 140:Source\BasicMathFunctions/arm_abs_f32.c ****   {
  61              		.loc 1 140 0
  62 002c 7B69     		ldr	r3, [r7, #20]
  63 002e 002B     		cmp	r3, #0
  64 0030 EFD1     		bne	.L3
 148:Source\BasicMathFunctions/arm_abs_f32.c ****   }
 149:Source\BasicMathFunctions/arm_abs_f32.c **** }
  65              		.loc 1 149 0
  66 0032 BD46     		mov	sp, r7
  67 0034 06B0     		add	sp, sp, #24
  68              		@ sp needed
  69 0036 80BD     		pop	{r7, pc}
  70              		.cfi_endproc
  71              	.LFE82:
  72              		.size	arm_abs_f32, .-arm_abs_f32
  73              		.text
  74              	.Letext0:
  75              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
  76              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
  77              		.file 4 ".\\Include/arm_math.h"
  78              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccYfbw5x.s 			page 5


  79              	.Ldebug_info0:
  80 0000 FD000000 		.4byte	0xfd
  81 0004 0400     		.2byte	0x4
  82 0006 00000000 		.4byte	.Ldebug_abbrev0
  83 000a 04       		.byte	0x4
  84 000b 01       		.uleb128 0x1
  85 000c 5E010000 		.4byte	.LASF20
  86 0010 01       		.byte	0x1
  87 0011 AB000000 		.4byte	.LASF21
  88 0015 05010000 		.4byte	.LASF22
  89 0019 00000000 		.4byte	.Ldebug_ranges0+0
  90 001d 00000000 		.4byte	0
  91 0021 00000000 		.4byte	.Ldebug_line0
  92 0025 02       		.uleb128 0x2
  93 0026 01       		.byte	0x1
  94 0027 06       		.byte	0x6
  95 0028 ED000000 		.4byte	.LASF0
  96 002c 02       		.uleb128 0x2
  97 002d 01       		.byte	0x1
  98 002e 08       		.byte	0x8
  99 002f 7A000000 		.4byte	.LASF1
 100 0033 02       		.uleb128 0x2
 101 0034 02       		.byte	0x2
 102 0035 05       		.byte	0x5
 103 0036 54010000 		.4byte	.LASF2
 104 003a 02       		.uleb128 0x2
 105 003b 02       		.byte	0x2
 106 003c 07       		.byte	0x7
 107 003d DA000000 		.4byte	.LASF3
 108 0041 02       		.uleb128 0x2
 109 0042 04       		.byte	0x4
 110 0043 05       		.byte	0x5
 111 0044 96000000 		.4byte	.LASF4
 112 0048 03       		.uleb128 0x3
 113 0049 20000000 		.4byte	.LASF9
 114 004d 02       		.byte	0x2
 115 004e 41       		.byte	0x41
 116 004f 53000000 		.4byte	0x53
 117 0053 02       		.uleb128 0x2
 118 0054 04       		.byte	0x4
 119 0055 07       		.byte	0x7
 120 0056 37000000 		.4byte	.LASF5
 121 005a 02       		.uleb128 0x2
 122 005b 08       		.byte	0x8
 123 005c 05       		.byte	0x5
 124 005d 00000000 		.4byte	.LASF6
 125 0061 02       		.uleb128 0x2
 126 0062 08       		.byte	0x8
 127 0063 07       		.byte	0x7
 128 0064 49000000 		.4byte	.LASF7
 129 0068 04       		.uleb128 0x4
 130 0069 04       		.byte	0x4
 131 006a 05       		.byte	0x5
 132 006b 696E7400 		.ascii	"int\000"
 133 006f 02       		.uleb128 0x2
 134 0070 04       		.byte	0x4
 135 0071 07       		.byte	0x7
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccYfbw5x.s 			page 6


 136 0072 0E000000 		.4byte	.LASF8
 137 0076 03       		.uleb128 0x3
 138 0077 8D000000 		.4byte	.LASF10
 139 007b 03       		.byte	0x3
 140 007c 2D       		.byte	0x2d
 141 007d 48000000 		.4byte	0x48
 142 0081 02       		.uleb128 0x2
 143 0082 04       		.byte	0x4
 144 0083 07       		.byte	0x7
 145 0084 4B010000 		.4byte	.LASF11
 146 0088 02       		.uleb128 0x2
 147 0089 01       		.byte	0x1
 148 008a 08       		.byte	0x8
 149 008b 88000000 		.4byte	.LASF12
 150 008f 02       		.uleb128 0x2
 151 0090 08       		.byte	0x8
 152 0091 04       		.byte	0x4
 153 0092 A4000000 		.4byte	.LASF13
 154 0096 02       		.uleb128 0x2
 155 0097 04       		.byte	0x4
 156 0098 04       		.byte	0x4
 157 0099 60000000 		.4byte	.LASF14
 158 009d 02       		.uleb128 0x2
 159 009e 08       		.byte	0x8
 160 009f 04       		.byte	0x4
 161 00a0 F9000000 		.4byte	.LASF15
 162 00a4 05       		.uleb128 0x5
 163 00a5 66000000 		.4byte	.LASF16
 164 00a9 04       		.byte	0x4
 165 00aa A501     		.2byte	0x1a5
 166 00ac 96000000 		.4byte	0x96
 167 00b0 06       		.uleb128 0x6
 168 00b1 04       		.byte	0x4
 169 00b2 A4000000 		.4byte	0xa4
 170 00b6 07       		.uleb128 0x7
 171 00b7 2B000000 		.4byte	.LASF23
 172 00bb 01       		.byte	0x1
 173 00bc 3F       		.byte	0x3f
 174 00bd 00000000 		.4byte	.LFB82
 175 00c1 38000000 		.4byte	.LFE82-.LFB82
 176 00c5 01       		.uleb128 0x1
 177 00c6 9C       		.byte	0x9c
 178 00c7 08       		.uleb128 0x8
 179 00c8 9F000000 		.4byte	.LASF17
 180 00cc 01       		.byte	0x1
 181 00cd 40       		.byte	0x40
 182 00ce B0000000 		.4byte	0xb0
 183 00d2 02       		.uleb128 0x2
 184 00d3 91       		.byte	0x91
 185 00d4 6C       		.sleb128 -20
 186 00d5 08       		.uleb128 0x8
 187 00d6 1B000000 		.4byte	.LASF18
 188 00da 01       		.byte	0x1
 189 00db 41       		.byte	0x41
 190 00dc B0000000 		.4byte	0xb0
 191 00e0 02       		.uleb128 0x2
 192 00e1 91       		.byte	0x91
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccYfbw5x.s 			page 7


 193 00e2 68       		.sleb128 -24
 194 00e3 08       		.uleb128 0x8
 195 00e4 70000000 		.4byte	.LASF19
 196 00e8 01       		.byte	0x1
 197 00e9 42       		.byte	0x42
 198 00ea 76000000 		.4byte	0x76
 199 00ee 02       		.uleb128 0x2
 200 00ef 91       		.byte	0x91
 201 00f0 64       		.sleb128 -28
 202 00f1 09       		.uleb128 0x9
 203 00f2 D3000000 		.4byte	.LASF24
 204 00f6 01       		.byte	0x1
 205 00f7 44       		.byte	0x44
 206 00f8 76000000 		.4byte	0x76
 207 00fc 02       		.uleb128 0x2
 208 00fd 91       		.byte	0x91
 209 00fe 74       		.sleb128 -12
 210 00ff 00       		.byte	0
 211 0100 00       		.byte	0
 212              		.section	.debug_abbrev,"",%progbits
 213              	.Ldebug_abbrev0:
 214 0000 01       		.uleb128 0x1
 215 0001 11       		.uleb128 0x11
 216 0002 01       		.byte	0x1
 217 0003 25       		.uleb128 0x25
 218 0004 0E       		.uleb128 0xe
 219 0005 13       		.uleb128 0x13
 220 0006 0B       		.uleb128 0xb
 221 0007 03       		.uleb128 0x3
 222 0008 0E       		.uleb128 0xe
 223 0009 1B       		.uleb128 0x1b
 224 000a 0E       		.uleb128 0xe
 225 000b 55       		.uleb128 0x55
 226 000c 17       		.uleb128 0x17
 227 000d 11       		.uleb128 0x11
 228 000e 01       		.uleb128 0x1
 229 000f 10       		.uleb128 0x10
 230 0010 17       		.uleb128 0x17
 231 0011 00       		.byte	0
 232 0012 00       		.byte	0
 233 0013 02       		.uleb128 0x2
 234 0014 24       		.uleb128 0x24
 235 0015 00       		.byte	0
 236 0016 0B       		.uleb128 0xb
 237 0017 0B       		.uleb128 0xb
 238 0018 3E       		.uleb128 0x3e
 239 0019 0B       		.uleb128 0xb
 240 001a 03       		.uleb128 0x3
 241 001b 0E       		.uleb128 0xe
 242 001c 00       		.byte	0
 243 001d 00       		.byte	0
 244 001e 03       		.uleb128 0x3
 245 001f 16       		.uleb128 0x16
 246 0020 00       		.byte	0
 247 0021 03       		.uleb128 0x3
 248 0022 0E       		.uleb128 0xe
 249 0023 3A       		.uleb128 0x3a
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccYfbw5x.s 			page 8


 250 0024 0B       		.uleb128 0xb
 251 0025 3B       		.uleb128 0x3b
 252 0026 0B       		.uleb128 0xb
 253 0027 49       		.uleb128 0x49
 254 0028 13       		.uleb128 0x13
 255 0029 00       		.byte	0
 256 002a 00       		.byte	0
 257 002b 04       		.uleb128 0x4
 258 002c 24       		.uleb128 0x24
 259 002d 00       		.byte	0
 260 002e 0B       		.uleb128 0xb
 261 002f 0B       		.uleb128 0xb
 262 0030 3E       		.uleb128 0x3e
 263 0031 0B       		.uleb128 0xb
 264 0032 03       		.uleb128 0x3
 265 0033 08       		.uleb128 0x8
 266 0034 00       		.byte	0
 267 0035 00       		.byte	0
 268 0036 05       		.uleb128 0x5
 269 0037 16       		.uleb128 0x16
 270 0038 00       		.byte	0
 271 0039 03       		.uleb128 0x3
 272 003a 0E       		.uleb128 0xe
 273 003b 3A       		.uleb128 0x3a
 274 003c 0B       		.uleb128 0xb
 275 003d 3B       		.uleb128 0x3b
 276 003e 05       		.uleb128 0x5
 277 003f 49       		.uleb128 0x49
 278 0040 13       		.uleb128 0x13
 279 0041 00       		.byte	0
 280 0042 00       		.byte	0
 281 0043 06       		.uleb128 0x6
 282 0044 0F       		.uleb128 0xf
 283 0045 00       		.byte	0
 284 0046 0B       		.uleb128 0xb
 285 0047 0B       		.uleb128 0xb
 286 0048 49       		.uleb128 0x49
 287 0049 13       		.uleb128 0x13
 288 004a 00       		.byte	0
 289 004b 00       		.byte	0
 290 004c 07       		.uleb128 0x7
 291 004d 2E       		.uleb128 0x2e
 292 004e 01       		.byte	0x1
 293 004f 3F       		.uleb128 0x3f
 294 0050 19       		.uleb128 0x19
 295 0051 03       		.uleb128 0x3
 296 0052 0E       		.uleb128 0xe
 297 0053 3A       		.uleb128 0x3a
 298 0054 0B       		.uleb128 0xb
 299 0055 3B       		.uleb128 0x3b
 300 0056 0B       		.uleb128 0xb
 301 0057 27       		.uleb128 0x27
 302 0058 19       		.uleb128 0x19
 303 0059 11       		.uleb128 0x11
 304 005a 01       		.uleb128 0x1
 305 005b 12       		.uleb128 0x12
 306 005c 06       		.uleb128 0x6
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccYfbw5x.s 			page 9


 307 005d 40       		.uleb128 0x40
 308 005e 18       		.uleb128 0x18
 309 005f 9742     		.uleb128 0x2117
 310 0061 19       		.uleb128 0x19
 311 0062 00       		.byte	0
 312 0063 00       		.byte	0
 313 0064 08       		.uleb128 0x8
 314 0065 05       		.uleb128 0x5
 315 0066 00       		.byte	0
 316 0067 03       		.uleb128 0x3
 317 0068 0E       		.uleb128 0xe
 318 0069 3A       		.uleb128 0x3a
 319 006a 0B       		.uleb128 0xb
 320 006b 3B       		.uleb128 0x3b
 321 006c 0B       		.uleb128 0xb
 322 006d 49       		.uleb128 0x49
 323 006e 13       		.uleb128 0x13
 324 006f 02       		.uleb128 0x2
 325 0070 18       		.uleb128 0x18
 326 0071 00       		.byte	0
 327 0072 00       		.byte	0
 328 0073 09       		.uleb128 0x9
 329 0074 34       		.uleb128 0x34
 330 0075 00       		.byte	0
 331 0076 03       		.uleb128 0x3
 332 0077 0E       		.uleb128 0xe
 333 0078 3A       		.uleb128 0x3a
 334 0079 0B       		.uleb128 0xb
 335 007a 3B       		.uleb128 0x3b
 336 007b 0B       		.uleb128 0xb
 337 007c 49       		.uleb128 0x49
 338 007d 13       		.uleb128 0x13
 339 007e 02       		.uleb128 0x2
 340 007f 18       		.uleb128 0x18
 341 0080 00       		.byte	0
 342 0081 00       		.byte	0
 343 0082 00       		.byte	0
 344              		.section	.debug_aranges,"",%progbits
 345 0000 1C000000 		.4byte	0x1c
 346 0004 0200     		.2byte	0x2
 347 0006 00000000 		.4byte	.Ldebug_info0
 348 000a 04       		.byte	0x4
 349 000b 00       		.byte	0
 350 000c 0000     		.2byte	0
 351 000e 0000     		.2byte	0
 352 0010 00000000 		.4byte	.LFB82
 353 0014 38000000 		.4byte	.LFE82-.LFB82
 354 0018 00000000 		.4byte	0
 355 001c 00000000 		.4byte	0
 356              		.section	.debug_ranges,"",%progbits
 357              	.Ldebug_ranges0:
 358 0000 00000000 		.4byte	.LFB82
 359 0004 38000000 		.4byte	.LFE82
 360 0008 00000000 		.4byte	0
 361 000c 00000000 		.4byte	0
 362              		.section	.debug_line,"",%progbits
 363              	.Ldebug_line0:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccYfbw5x.s 			page 10


 364 0000 71010000 		.section	.debug_str,"MS",%progbits,1
 364      02004E01 
 364      00000201 
 364      FB0E0D00 
 364      01010101 
 365              	.LASF6:
 366 0000 6C6F6E67 		.ascii	"long long int\000"
 366      206C6F6E 
 366      6720696E 
 366      7400
 367              	.LASF8:
 368 000e 756E7369 		.ascii	"unsigned int\000"
 368      676E6564 
 368      20696E74 
 368      00
 369              	.LASF18:
 370 001b 70447374 		.ascii	"pDst\000"
 370      00
 371              	.LASF9:
 372 0020 5F5F7569 		.ascii	"__uint32_t\000"
 372      6E743332 
 372      5F7400
 373              	.LASF23:
 374 002b 61726D5F 		.ascii	"arm_abs_f32\000"
 374      6162735F 
 374      66333200 
 375              	.LASF5:
 376 0037 6C6F6E67 		.ascii	"long unsigned int\000"
 376      20756E73 
 376      69676E65 
 376      6420696E 
 376      7400
 377              	.LASF7:
 378 0049 6C6F6E67 		.ascii	"long long unsigned int\000"
 378      206C6F6E 
 378      6720756E 
 378      7369676E 
 378      65642069 
 379              	.LASF14:
 380 0060 666C6F61 		.ascii	"float\000"
 380      7400
 381              	.LASF16:
 382 0066 666C6F61 		.ascii	"float32_t\000"
 382      7433325F 
 382      7400
 383              	.LASF19:
 384 0070 626C6F63 		.ascii	"blockSize\000"
 384      6B53697A 
 384      6500
 385              	.LASF1:
 386 007a 756E7369 		.ascii	"unsigned char\000"
 386      676E6564 
 386      20636861 
 386      7200
 387              	.LASF12:
 388 0088 63686172 		.ascii	"char\000"
 388      00
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccYfbw5x.s 			page 11


 389              	.LASF10:
 390 008d 75696E74 		.ascii	"uint32_t\000"
 390      33325F74 
 390      00
 391              	.LASF4:
 392 0096 6C6F6E67 		.ascii	"long int\000"
 392      20696E74 
 392      00
 393              	.LASF17:
 394 009f 70537263 		.ascii	"pSrc\000"
 394      00
 395              	.LASF13:
 396 00a4 646F7562 		.ascii	"double\000"
 396      6C6500
 397              	.LASF21:
 398 00ab 536F7572 		.ascii	"Source\\BasicMathFunctions\\arm_abs_f32.c\000"
 398      63655C42 
 398      61736963 
 398      4D617468 
 398      46756E63 
 399              	.LASF24:
 400 00d3 626C6B43 		.ascii	"blkCnt\000"
 400      6E7400
 401              	.LASF3:
 402 00da 73686F72 		.ascii	"short unsigned int\000"
 402      7420756E 
 402      7369676E 
 402      65642069 
 402      6E7400
 403              	.LASF0:
 404 00ed 7369676E 		.ascii	"signed char\000"
 404      65642063 
 404      68617200 
 405              	.LASF15:
 406 00f9 6C6F6E67 		.ascii	"long double\000"
 406      20646F75 
 406      626C6500 
 407              	.LASF22:
 408 0105 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 408      73657273 
 408      5C666E65 
 408      7665735C 
 408      446F6375 
 409 0132 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 409      655F7370 
 409      6565645F 
 409      73656E73 
 409      6F722E63 
 410              	.LASF11:
 411 014b 73697A65 		.ascii	"sizetype\000"
 411      74797065 
 411      00
 412              	.LASF2:
 413 0154 73686F72 		.ascii	"short int\000"
 413      7420696E 
 413      7400
 414              	.LASF20:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccYfbw5x.s 			page 12


 415 015e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 415      4320342E 
 415      392E3320 
 415      32303135 
 415      30333033 
 416 0191 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 416      20726576 
 416      6973696F 
 416      6E203232 
 416      31323230 
 417 01c4 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 417      30202D66 
 417      66756E63 
 417      74696F6E 
 417      2D736563 
 418              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
