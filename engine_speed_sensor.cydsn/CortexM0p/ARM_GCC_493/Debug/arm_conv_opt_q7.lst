ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_conv_opt_q7.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.arm_conv_opt_q7,"ax",%progbits
  18              		.align	2
  19              		.global	arm_conv_opt_q7
  20              		.code	16
  21              		.thumb_func
  22              		.type	arm_conv_opt_q7, %function
  23              	arm_conv_opt_q7:
  24              	.LFB82:
  25              		.file 1 "Source\\FilteringFunctions\\arm_conv_opt_q7.c"
   1:Source\FilteringFunctions/arm_conv_opt_q7.c **** /* ----------------------------------------------------------------------
   2:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * Project:      CMSIS DSP Library
   3:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * Title:        arm_conv_opt_q7.c
   4:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * Description:  Convolution of Q7 sequences
   5:Source\FilteringFunctions/arm_conv_opt_q7.c ****  *
   6:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * $Date:        27. January 2017
   7:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * $Revision:    V.1.5.1
   8:Source\FilteringFunctions/arm_conv_opt_q7.c ****  *
   9:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * Target Processor: Cortex-M cores
  10:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * -------------------------------------------------------------------- */
  11:Source\FilteringFunctions/arm_conv_opt_q7.c **** /*
  12:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\FilteringFunctions/arm_conv_opt_q7.c ****  *
  14:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\FilteringFunctions/arm_conv_opt_q7.c ****  *
  16:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * not use this file except in compliance with the License.
  18:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * You may obtain a copy of the License at
  19:Source\FilteringFunctions/arm_conv_opt_q7.c ****  *
  20:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\FilteringFunctions/arm_conv_opt_q7.c ****  *
  22:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * See the License for the specific language governing permissions and
  26:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * limitations under the License.
  27:Source\FilteringFunctions/arm_conv_opt_q7.c ****  */
  28:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
  29:Source\FilteringFunctions/arm_conv_opt_q7.c **** #include "arm_math.h"
  30:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
  31:Source\FilteringFunctions/arm_conv_opt_q7.c **** /**
  32:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * @ingroup groupFilters
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 2


  33:Source\FilteringFunctions/arm_conv_opt_q7.c ****  */
  34:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
  35:Source\FilteringFunctions/arm_conv_opt_q7.c **** /**
  36:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * @addtogroup Conv
  37:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * @{
  38:Source\FilteringFunctions/arm_conv_opt_q7.c ****  */
  39:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
  40:Source\FilteringFunctions/arm_conv_opt_q7.c **** /**
  41:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * @brief Convolution of Q7 sequences.
  42:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * @param[in] *pSrcA points to the first input sequence.
  43:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * @param[in] srcALen length of the first input sequence.
  44:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * @param[in] *pSrcB points to the second input sequence.
  45:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * @param[in] srcBLen length of the second input sequence.
  46:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * @param[out] *pDst points to the location where the output result is written.  Length srcALen+src
  47:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * @param[in]  *pScratch1 points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) + 2
  48:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * @param[in]  *pScratch2 points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
  49:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * @return none.
  50:Source\FilteringFunctions/arm_conv_opt_q7.c ****  *
  51:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * \par Restrictions
  52:Source\FilteringFunctions/arm_conv_opt_q7.c ****  *  If the silicon does not support unaligned memory access enable the macro UNALIGNED_SUPPORT_DISA
  53:Source\FilteringFunctions/arm_conv_opt_q7.c ****  *	In this case input, output, scratch1 and scratch2 buffers should be aligned by 32-bit
  54:Source\FilteringFunctions/arm_conv_opt_q7.c ****  *
  55:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * @details
  56:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * <b>Scaling and Overflow Behavior:</b>
  57:Source\FilteringFunctions/arm_conv_opt_q7.c ****  *
  58:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * \par
  59:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * The function is implemented using a 32-bit internal accumulator.
  60:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * Both the inputs are represented in 1.7 format and multiplications yield a 2.14 result.
  61:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * The 2.14 intermediate results are accumulated in a 32-bit accumulator in 18.14 format.
  62:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * This approach provides 17 guard bits and there is no risk of overflow as long as <code>max(srcAL
  63:Source\FilteringFunctions/arm_conv_opt_q7.c ****  * The 18.14 result is then truncated to 18.7 format by discarding the low 7 bits and then saturate
  64:Source\FilteringFunctions/arm_conv_opt_q7.c ****  *
  65:Source\FilteringFunctions/arm_conv_opt_q7.c ****  */
  66:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
  67:Source\FilteringFunctions/arm_conv_opt_q7.c **** void arm_conv_opt_q7(
  68:Source\FilteringFunctions/arm_conv_opt_q7.c ****   q7_t * pSrcA,
  69:Source\FilteringFunctions/arm_conv_opt_q7.c ****   uint32_t srcALen,
  70:Source\FilteringFunctions/arm_conv_opt_q7.c ****   q7_t * pSrcB,
  71:Source\FilteringFunctions/arm_conv_opt_q7.c ****   uint32_t srcBLen,
  72:Source\FilteringFunctions/arm_conv_opt_q7.c ****   q7_t * pDst,
  73:Source\FilteringFunctions/arm_conv_opt_q7.c ****   q15_t * pScratch1,
  74:Source\FilteringFunctions/arm_conv_opt_q7.c ****   q15_t * pScratch2)
  75:Source\FilteringFunctions/arm_conv_opt_q7.c **** {
  26              		.loc 1 75 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 CAB0     		sub	sp, sp, #296
  33              		.cfi_def_cfa_offset 304
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  36 0006 F860     		str	r0, [r7, #12]
  37 0008 B960     		str	r1, [r7, #8]
  38 000a 7A60     		str	r2, [r7, #4]
  39 000c 3B60     		str	r3, [r7]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 3


  76:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
  77:Source\FilteringFunctions/arm_conv_opt_q7.c ****   q15_t *pScr2, *pScr1;                          /* Intermediate pointers for scratch pointers */
  78:Source\FilteringFunctions/arm_conv_opt_q7.c ****   q15_t x4;                                      /* Temporary input variable */
  79:Source\FilteringFunctions/arm_conv_opt_q7.c ****   q7_t *pIn1, *pIn2;                             /* inputA and inputB pointer */
  80:Source\FilteringFunctions/arm_conv_opt_q7.c ****   uint32_t j, k, blkCnt, tapCnt;                 /* loop counter */
  81:Source\FilteringFunctions/arm_conv_opt_q7.c ****   q7_t *px;                                      /* Temporary input1 pointer */
  82:Source\FilteringFunctions/arm_conv_opt_q7.c ****   q15_t *py;                                     /* Temporary input2 pointer */
  83:Source\FilteringFunctions/arm_conv_opt_q7.c ****   q31_t acc0, acc1, acc2, acc3;                  /* Accumulator */
  84:Source\FilteringFunctions/arm_conv_opt_q7.c ****   q31_t x1, x2, x3, y1;                          /* Temporary input variables */
  85:Source\FilteringFunctions/arm_conv_opt_q7.c ****   q7_t *pOut = pDst;                             /* output pointer */
  40              		.loc 1 85 0
  41 000e 9823     		mov	r3, #152
  42 0010 5B00     		lsl	r3, r3, #1
  43 0012 FB18     		add	r3, r7, r3
  44 0014 1B68     		ldr	r3, [r3]
  45 0016 3B61     		str	r3, [r7, #16]
  86:Source\FilteringFunctions/arm_conv_opt_q7.c ****   q7_t out0, out1, out2, out3;                   /* temporary variables */
  87:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
  88:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
  89:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* srcB is always made to slide across srcA. */
  90:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
  91:Source\FilteringFunctions/arm_conv_opt_q7.c ****   if (srcALen >= srcBLen)
  46              		.loc 1 91 0
  47 0018 BA68     		ldr	r2, [r7, #8]
  48 001a 3B68     		ldr	r3, [r7]
  49 001c 9A42     		cmp	r2, r3
  50 001e 0AD3     		bcc	.L2
  92:Source\FilteringFunctions/arm_conv_opt_q7.c ****   {
  93:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Initialization of inputA pointer */
  94:Source\FilteringFunctions/arm_conv_opt_q7.c ****     pIn1 = pSrcA;
  51              		.loc 1 94 0
  52 0020 FB68     		ldr	r3, [r7, #12]
  53 0022 9022     		mov	r2, #144
  54 0024 5200     		lsl	r2, r2, #1
  55 0026 BA18     		add	r2, r7, r2
  56 0028 1360     		str	r3, [r2]
  95:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
  96:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Initialization of inputB pointer */
  97:Source\FilteringFunctions/arm_conv_opt_q7.c ****     pIn2 = pSrcB;
  57              		.loc 1 97 0
  58 002a 7B68     		ldr	r3, [r7, #4]
  59 002c 8E22     		mov	r2, #142
  60 002e 5200     		lsl	r2, r2, #1
  61 0030 BA18     		add	r2, r7, r2
  62 0032 1360     		str	r3, [r2]
  63 0034 13E0     		b	.L3
  64              	.L2:
  98:Source\FilteringFunctions/arm_conv_opt_q7.c ****   }
  99:Source\FilteringFunctions/arm_conv_opt_q7.c ****   else
 100:Source\FilteringFunctions/arm_conv_opt_q7.c ****   {
 101:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Initialization of inputA pointer */
 102:Source\FilteringFunctions/arm_conv_opt_q7.c ****     pIn1 = pSrcB;
  65              		.loc 1 102 0
  66 0036 7B68     		ldr	r3, [r7, #4]
  67 0038 9022     		mov	r2, #144
  68 003a 5200     		lsl	r2, r2, #1
  69 003c BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 4


  70 003e 1360     		str	r3, [r2]
 103:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 104:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Initialization of inputB pointer */
 105:Source\FilteringFunctions/arm_conv_opt_q7.c ****     pIn2 = pSrcA;
  71              		.loc 1 105 0
  72 0040 FB68     		ldr	r3, [r7, #12]
  73 0042 8E22     		mov	r2, #142
  74 0044 5200     		lsl	r2, r2, #1
  75 0046 BA18     		add	r2, r7, r2
  76 0048 1360     		str	r3, [r2]
 106:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 107:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 108:Source\FilteringFunctions/arm_conv_opt_q7.c ****     j = srcBLen;
  77              		.loc 1 108 0
  78 004a 3B68     		ldr	r3, [r7]
  79 004c F022     		mov	r2, #240
  80 004e BA18     		add	r2, r7, r2
  81 0050 1360     		str	r3, [r2]
 109:Source\FilteringFunctions/arm_conv_opt_q7.c ****     srcBLen = srcALen;
  82              		.loc 1 109 0
  83 0052 BB68     		ldr	r3, [r7, #8]
  84 0054 3B60     		str	r3, [r7]
 110:Source\FilteringFunctions/arm_conv_opt_q7.c ****     srcALen = j;
  85              		.loc 1 110 0
  86 0056 F023     		mov	r3, #240
  87 0058 FB18     		add	r3, r7, r3
  88 005a 1B68     		ldr	r3, [r3]
  89 005c BB60     		str	r3, [r7, #8]
  90              	.L3:
 111:Source\FilteringFunctions/arm_conv_opt_q7.c ****   }
 112:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 113:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* pointer to take end of scratch2 buffer */
 114:Source\FilteringFunctions/arm_conv_opt_q7.c ****   pScr2 = pScratch2;
  91              		.loc 1 114 0
  92 005e 9C23     		mov	r3, #156
  93 0060 5B00     		lsl	r3, r3, #1
  94 0062 FB18     		add	r3, r7, r3
  95 0064 1B68     		ldr	r3, [r3]
  96 0066 9222     		mov	r2, #146
  97 0068 5200     		lsl	r2, r2, #1
  98 006a BA18     		add	r2, r7, r2
  99 006c 1360     		str	r3, [r2]
 115:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 116:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* points to smaller length sequence */
 117:Source\FilteringFunctions/arm_conv_opt_q7.c ****   px = pIn2 + srcBLen - 1;
 100              		.loc 1 117 0
 101 006e 3B68     		ldr	r3, [r7]
 102 0070 013B     		sub	r3, r3, #1
 103 0072 8E22     		mov	r2, #142
 104 0074 5200     		lsl	r2, r2, #1
 105 0076 BA18     		add	r2, r7, r2
 106 0078 1268     		ldr	r2, [r2]
 107 007a D318     		add	r3, r2, r3
 108 007c 8622     		mov	r2, #134
 109 007e 5200     		lsl	r2, r2, #1
 110 0080 BA18     		add	r2, r7, r2
 111 0082 1360     		str	r3, [r2]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 5


 118:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 119:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* Apply loop unrolling and do 4 Copies simultaneously. */
 120:Source\FilteringFunctions/arm_conv_opt_q7.c ****   k = srcBLen >> 2u;
 112              		.loc 1 120 0
 113 0084 3B68     		ldr	r3, [r7]
 114 0086 9B08     		lsr	r3, r3, #2
 115 0088 8C22     		mov	r2, #140
 116 008a 5200     		lsl	r2, r2, #1
 117 008c BA18     		add	r2, r7, r2
 118 008e 1360     		str	r3, [r2]
 121:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 122:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 123:Source\FilteringFunctions/arm_conv_opt_q7.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
 124:Source\FilteringFunctions/arm_conv_opt_q7.c ****   while (k > 0u)
 119              		.loc 1 124 0
 120 0090 74E0     		b	.L4
 121              	.L5:
 125:Source\FilteringFunctions/arm_conv_opt_q7.c ****   {
 126:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* copy second buffer in reversal manner */
 127:Source\FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) * px--;
 122              		.loc 1 127 0
 123 0092 8623     		mov	r3, #134
 124 0094 5B00     		lsl	r3, r3, #1
 125 0096 FB18     		add	r3, r7, r3
 126 0098 1B68     		ldr	r3, [r3]
 127 009a 5A1E     		sub	r2, r3, #1
 128 009c 8621     		mov	r1, #134
 129 009e 4900     		lsl	r1, r1, #1
 130 00a0 7918     		add	r1, r7, r1
 131 00a2 0A60     		str	r2, [r1]
 132 00a4 1A78     		ldrb	r2, [r3]
 133 00a6 EE23     		mov	r3, #238
 134 00a8 FB18     		add	r3, r7, r3
 135 00aa 52B2     		sxtb	r2, r2
 136 00ac 1A80     		strh	r2, [r3]
 128:Source\FilteringFunctions/arm_conv_opt_q7.c ****     *pScr2++ = x4;
 137              		.loc 1 128 0
 138 00ae 9223     		mov	r3, #146
 139 00b0 5B00     		lsl	r3, r3, #1
 140 00b2 FB18     		add	r3, r7, r3
 141 00b4 1B68     		ldr	r3, [r3]
 142 00b6 9A1C     		add	r2, r3, #2
 143 00b8 9221     		mov	r1, #146
 144 00ba 4900     		lsl	r1, r1, #1
 145 00bc 7918     		add	r1, r7, r1
 146 00be 0A60     		str	r2, [r1]
 147 00c0 EE22     		mov	r2, #238
 148 00c2 BA18     		add	r2, r7, r2
 149 00c4 1288     		ldrh	r2, [r2]
 150 00c6 1A80     		strh	r2, [r3]
 129:Source\FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) * px--;
 151              		.loc 1 129 0
 152 00c8 8623     		mov	r3, #134
 153 00ca 5B00     		lsl	r3, r3, #1
 154 00cc FB18     		add	r3, r7, r3
 155 00ce 1B68     		ldr	r3, [r3]
 156 00d0 5A1E     		sub	r2, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 6


 157 00d2 8621     		mov	r1, #134
 158 00d4 4900     		lsl	r1, r1, #1
 159 00d6 7918     		add	r1, r7, r1
 160 00d8 0A60     		str	r2, [r1]
 161 00da 1A78     		ldrb	r2, [r3]
 162 00dc EE23     		mov	r3, #238
 163 00de FB18     		add	r3, r7, r3
 164 00e0 52B2     		sxtb	r2, r2
 165 00e2 1A80     		strh	r2, [r3]
 130:Source\FilteringFunctions/arm_conv_opt_q7.c ****     *pScr2++ = x4;
 166              		.loc 1 130 0
 167 00e4 9223     		mov	r3, #146
 168 00e6 5B00     		lsl	r3, r3, #1
 169 00e8 FB18     		add	r3, r7, r3
 170 00ea 1B68     		ldr	r3, [r3]
 171 00ec 9A1C     		add	r2, r3, #2
 172 00ee 9221     		mov	r1, #146
 173 00f0 4900     		lsl	r1, r1, #1
 174 00f2 7918     		add	r1, r7, r1
 175 00f4 0A60     		str	r2, [r1]
 176 00f6 EE22     		mov	r2, #238
 177 00f8 BA18     		add	r2, r7, r2
 178 00fa 1288     		ldrh	r2, [r2]
 179 00fc 1A80     		strh	r2, [r3]
 131:Source\FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) * px--;
 180              		.loc 1 131 0
 181 00fe 8623     		mov	r3, #134
 182 0100 5B00     		lsl	r3, r3, #1
 183 0102 FB18     		add	r3, r7, r3
 184 0104 1B68     		ldr	r3, [r3]
 185 0106 5A1E     		sub	r2, r3, #1
 186 0108 8621     		mov	r1, #134
 187 010a 4900     		lsl	r1, r1, #1
 188 010c 7918     		add	r1, r7, r1
 189 010e 0A60     		str	r2, [r1]
 190 0110 1A78     		ldrb	r2, [r3]
 191 0112 EE23     		mov	r3, #238
 192 0114 FB18     		add	r3, r7, r3
 193 0116 52B2     		sxtb	r2, r2
 194 0118 1A80     		strh	r2, [r3]
 132:Source\FilteringFunctions/arm_conv_opt_q7.c ****     *pScr2++ = x4;
 195              		.loc 1 132 0
 196 011a 9223     		mov	r3, #146
 197 011c 5B00     		lsl	r3, r3, #1
 198 011e FB18     		add	r3, r7, r3
 199 0120 1B68     		ldr	r3, [r3]
 200 0122 9A1C     		add	r2, r3, #2
 201 0124 9221     		mov	r1, #146
 202 0126 4900     		lsl	r1, r1, #1
 203 0128 7918     		add	r1, r7, r1
 204 012a 0A60     		str	r2, [r1]
 205 012c EE22     		mov	r2, #238
 206 012e BA18     		add	r2, r7, r2
 207 0130 1288     		ldrh	r2, [r2]
 208 0132 1A80     		strh	r2, [r3]
 133:Source\FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) * px--;
 209              		.loc 1 133 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 7


 210 0134 8623     		mov	r3, #134
 211 0136 5B00     		lsl	r3, r3, #1
 212 0138 FB18     		add	r3, r7, r3
 213 013a 1B68     		ldr	r3, [r3]
 214 013c 5A1E     		sub	r2, r3, #1
 215 013e 8621     		mov	r1, #134
 216 0140 4900     		lsl	r1, r1, #1
 217 0142 7918     		add	r1, r7, r1
 218 0144 0A60     		str	r2, [r1]
 219 0146 1A78     		ldrb	r2, [r3]
 220 0148 EE23     		mov	r3, #238
 221 014a FB18     		add	r3, r7, r3
 222 014c 52B2     		sxtb	r2, r2
 223 014e 1A80     		strh	r2, [r3]
 134:Source\FilteringFunctions/arm_conv_opt_q7.c ****     *pScr2++ = x4;
 224              		.loc 1 134 0
 225 0150 9223     		mov	r3, #146
 226 0152 5B00     		lsl	r3, r3, #1
 227 0154 FB18     		add	r3, r7, r3
 228 0156 1B68     		ldr	r3, [r3]
 229 0158 9A1C     		add	r2, r3, #2
 230 015a 9221     		mov	r1, #146
 231 015c 4900     		lsl	r1, r1, #1
 232 015e 7918     		add	r1, r7, r1
 233 0160 0A60     		str	r2, [r1]
 234 0162 EE22     		mov	r2, #238
 235 0164 BA18     		add	r2, r7, r2
 236 0166 1288     		ldrh	r2, [r2]
 237 0168 1A80     		strh	r2, [r3]
 135:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 136:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Decrement the loop counter */
 137:Source\FilteringFunctions/arm_conv_opt_q7.c ****     k--;
 238              		.loc 1 137 0
 239 016a 8C23     		mov	r3, #140
 240 016c 5B00     		lsl	r3, r3, #1
 241 016e FB18     		add	r3, r7, r3
 242 0170 1B68     		ldr	r3, [r3]
 243 0172 013B     		sub	r3, r3, #1
 244 0174 8C22     		mov	r2, #140
 245 0176 5200     		lsl	r2, r2, #1
 246 0178 BA18     		add	r2, r7, r2
 247 017a 1360     		str	r3, [r2]
 248              	.L4:
 124:Source\FilteringFunctions/arm_conv_opt_q7.c ****   {
 249              		.loc 1 124 0
 250 017c 8C23     		mov	r3, #140
 251 017e 5B00     		lsl	r3, r3, #1
 252 0180 FB18     		add	r3, r7, r3
 253 0182 1B68     		ldr	r3, [r3]
 254 0184 002B     		cmp	r3, #0
 255 0186 84D1     		bne	.L5
 138:Source\FilteringFunctions/arm_conv_opt_q7.c ****   }
 139:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 140:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 141:Source\FilteringFunctions/arm_conv_opt_q7.c ****    ** No loop unrolling is used. */
 142:Source\FilteringFunctions/arm_conv_opt_q7.c ****   k = srcBLen % 0x4u;
 256              		.loc 1 142 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 8


 257 0188 3B68     		ldr	r3, [r7]
 258 018a 0322     		mov	r2, #3
 259 018c 1340     		and	r3, r2
 260 018e 8C22     		mov	r2, #140
 261 0190 5200     		lsl	r2, r2, #1
 262 0192 BA18     		add	r2, r7, r2
 263 0194 1360     		str	r3, [r2]
 143:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 144:Source\FilteringFunctions/arm_conv_opt_q7.c ****   while (k > 0u)
 264              		.loc 1 144 0
 265 0196 23E0     		b	.L6
 266              	.L7:
 145:Source\FilteringFunctions/arm_conv_opt_q7.c ****   {
 146:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* copy second buffer in reversal manner for remaining samples */
 147:Source\FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) * px--;
 267              		.loc 1 147 0
 268 0198 8623     		mov	r3, #134
 269 019a 5B00     		lsl	r3, r3, #1
 270 019c FB18     		add	r3, r7, r3
 271 019e 1B68     		ldr	r3, [r3]
 272 01a0 5A1E     		sub	r2, r3, #1
 273 01a2 8621     		mov	r1, #134
 274 01a4 4900     		lsl	r1, r1, #1
 275 01a6 7918     		add	r1, r7, r1
 276 01a8 0A60     		str	r2, [r1]
 277 01aa 1A78     		ldrb	r2, [r3]
 278 01ac EE23     		mov	r3, #238
 279 01ae FB18     		add	r3, r7, r3
 280 01b0 52B2     		sxtb	r2, r2
 281 01b2 1A80     		strh	r2, [r3]
 148:Source\FilteringFunctions/arm_conv_opt_q7.c ****     *pScr2++ = x4;
 282              		.loc 1 148 0
 283 01b4 9223     		mov	r3, #146
 284 01b6 5B00     		lsl	r3, r3, #1
 285 01b8 FB18     		add	r3, r7, r3
 286 01ba 1B68     		ldr	r3, [r3]
 287 01bc 9A1C     		add	r2, r3, #2
 288 01be 9221     		mov	r1, #146
 289 01c0 4900     		lsl	r1, r1, #1
 290 01c2 7918     		add	r1, r7, r1
 291 01c4 0A60     		str	r2, [r1]
 292 01c6 EE22     		mov	r2, #238
 293 01c8 BA18     		add	r2, r7, r2
 294 01ca 1288     		ldrh	r2, [r2]
 295 01cc 1A80     		strh	r2, [r3]
 149:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 150:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Decrement the loop counter */
 151:Source\FilteringFunctions/arm_conv_opt_q7.c ****     k--;
 296              		.loc 1 151 0
 297 01ce 8C23     		mov	r3, #140
 298 01d0 5B00     		lsl	r3, r3, #1
 299 01d2 FB18     		add	r3, r7, r3
 300 01d4 1B68     		ldr	r3, [r3]
 301 01d6 013B     		sub	r3, r3, #1
 302 01d8 8C22     		mov	r2, #140
 303 01da 5200     		lsl	r2, r2, #1
 304 01dc BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 9


 305 01de 1360     		str	r3, [r2]
 306              	.L6:
 144:Source\FilteringFunctions/arm_conv_opt_q7.c ****   {
 307              		.loc 1 144 0
 308 01e0 8C23     		mov	r3, #140
 309 01e2 5B00     		lsl	r3, r3, #1
 310 01e4 FB18     		add	r3, r7, r3
 311 01e6 1B68     		ldr	r3, [r3]
 312 01e8 002B     		cmp	r3, #0
 313 01ea D5D1     		bne	.L7
 152:Source\FilteringFunctions/arm_conv_opt_q7.c ****   }
 153:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 154:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* Initialze temporary scratch pointer */
 155:Source\FilteringFunctions/arm_conv_opt_q7.c ****   pScr1 = pScratch1;
 314              		.loc 1 155 0
 315 01ec 9A23     		mov	r3, #154
 316 01ee 5B00     		lsl	r3, r3, #1
 317 01f0 FB18     		add	r3, r7, r3
 318 01f2 1B68     		ldr	r3, [r3]
 319 01f4 7B61     		str	r3, [r7, #20]
 156:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 157:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* Fill (srcBLen - 1u) zeros in scratch buffer */
 158:Source\FilteringFunctions/arm_conv_opt_q7.c ****   arm_fill_q15(0, pScr1, (srcBLen - 1u));
 320              		.loc 1 158 0
 321 01f6 7A69     		ldr	r2, [r7, #20]
 322 01f8 3B68     		ldr	r3, [r7]
 323 01fa 013B     		sub	r3, r3, #1
 324 01fc 0020     		mov	r0, #0
 325 01fe 111C     		mov	r1, r2
 326 0200 1A1C     		mov	r2, r3
 327 0202 FFF7FEFF 		bl	arm_fill_q15
 159:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 160:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* Update temporary scratch pointer */
 161:Source\FilteringFunctions/arm_conv_opt_q7.c ****   pScr1 += (srcBLen - 1u);
 328              		.loc 1 161 0
 329 0206 7A69     		ldr	r2, [r7, #20]
 330 0208 3B68     		ldr	r3, [r7]
 331 020a 7D49     		ldr	r1, .L67
 332 020c 8C46     		mov	ip, r1
 333 020e 6344     		add	r3, r3, ip
 334 0210 5B00     		lsl	r3, r3, #1
 335 0212 D318     		add	r3, r2, r3
 336 0214 7B61     		str	r3, [r7, #20]
 162:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 163:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* Copy (srcALen) samples in scratch buffer */
 164:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* Apply loop unrolling and do 4 Copies simultaneously. */
 165:Source\FilteringFunctions/arm_conv_opt_q7.c ****   k = srcALen >> 2u;
 337              		.loc 1 165 0
 338 0216 BB68     		ldr	r3, [r7, #8]
 339 0218 9B08     		lsr	r3, r3, #2
 340 021a 8C22     		mov	r2, #140
 341 021c 5200     		lsl	r2, r2, #1
 342 021e BA18     		add	r2, r7, r2
 343 0220 1360     		str	r3, [r2]
 166:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 167:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 168:Source\FilteringFunctions/arm_conv_opt_q7.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 10


 169:Source\FilteringFunctions/arm_conv_opt_q7.c ****   while (k > 0u)
 344              		.loc 1 169 0
 345 0222 5CE0     		b	.L8
 346              	.L9:
 170:Source\FilteringFunctions/arm_conv_opt_q7.c ****   {
 171:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* copy second buffer in reversal manner */
 172:Source\FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) * pIn1++;
 347              		.loc 1 172 0
 348 0224 9023     		mov	r3, #144
 349 0226 5B00     		lsl	r3, r3, #1
 350 0228 FB18     		add	r3, r7, r3
 351 022a 1B68     		ldr	r3, [r3]
 352 022c 5A1C     		add	r2, r3, #1
 353 022e 9021     		mov	r1, #144
 354 0230 4900     		lsl	r1, r1, #1
 355 0232 7918     		add	r1, r7, r1
 356 0234 0A60     		str	r2, [r1]
 357 0236 1A78     		ldrb	r2, [r3]
 358 0238 EE23     		mov	r3, #238
 359 023a FB18     		add	r3, r7, r3
 360 023c 52B2     		sxtb	r2, r2
 361 023e 1A80     		strh	r2, [r3]
 173:Source\FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = x4;
 362              		.loc 1 173 0
 363 0240 7B69     		ldr	r3, [r7, #20]
 364 0242 9A1C     		add	r2, r3, #2
 365 0244 7A61     		str	r2, [r7, #20]
 366 0246 EE22     		mov	r2, #238
 367 0248 BA18     		add	r2, r7, r2
 368 024a 1288     		ldrh	r2, [r2]
 369 024c 1A80     		strh	r2, [r3]
 174:Source\FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) * pIn1++;
 370              		.loc 1 174 0
 371 024e 9023     		mov	r3, #144
 372 0250 5B00     		lsl	r3, r3, #1
 373 0252 FB18     		add	r3, r7, r3
 374 0254 1B68     		ldr	r3, [r3]
 375 0256 5A1C     		add	r2, r3, #1
 376 0258 9021     		mov	r1, #144
 377 025a 4900     		lsl	r1, r1, #1
 378 025c 7918     		add	r1, r7, r1
 379 025e 0A60     		str	r2, [r1]
 380 0260 1A78     		ldrb	r2, [r3]
 381 0262 EE23     		mov	r3, #238
 382 0264 FB18     		add	r3, r7, r3
 383 0266 52B2     		sxtb	r2, r2
 384 0268 1A80     		strh	r2, [r3]
 175:Source\FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = x4;
 385              		.loc 1 175 0
 386 026a 7B69     		ldr	r3, [r7, #20]
 387 026c 9A1C     		add	r2, r3, #2
 388 026e 7A61     		str	r2, [r7, #20]
 389 0270 EE22     		mov	r2, #238
 390 0272 BA18     		add	r2, r7, r2
 391 0274 1288     		ldrh	r2, [r2]
 392 0276 1A80     		strh	r2, [r3]
 176:Source\FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) * pIn1++;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 11


 393              		.loc 1 176 0
 394 0278 9023     		mov	r3, #144
 395 027a 5B00     		lsl	r3, r3, #1
 396 027c FB18     		add	r3, r7, r3
 397 027e 1B68     		ldr	r3, [r3]
 398 0280 5A1C     		add	r2, r3, #1
 399 0282 9021     		mov	r1, #144
 400 0284 4900     		lsl	r1, r1, #1
 401 0286 7918     		add	r1, r7, r1
 402 0288 0A60     		str	r2, [r1]
 403 028a 1A78     		ldrb	r2, [r3]
 404 028c EE23     		mov	r3, #238
 405 028e FB18     		add	r3, r7, r3
 406 0290 52B2     		sxtb	r2, r2
 407 0292 1A80     		strh	r2, [r3]
 177:Source\FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = x4;
 408              		.loc 1 177 0
 409 0294 7B69     		ldr	r3, [r7, #20]
 410 0296 9A1C     		add	r2, r3, #2
 411 0298 7A61     		str	r2, [r7, #20]
 412 029a EE22     		mov	r2, #238
 413 029c BA18     		add	r2, r7, r2
 414 029e 1288     		ldrh	r2, [r2]
 415 02a0 1A80     		strh	r2, [r3]
 178:Source\FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) * pIn1++;
 416              		.loc 1 178 0
 417 02a2 9023     		mov	r3, #144
 418 02a4 5B00     		lsl	r3, r3, #1
 419 02a6 FB18     		add	r3, r7, r3
 420 02a8 1B68     		ldr	r3, [r3]
 421 02aa 5A1C     		add	r2, r3, #1
 422 02ac 9021     		mov	r1, #144
 423 02ae 4900     		lsl	r1, r1, #1
 424 02b0 7918     		add	r1, r7, r1
 425 02b2 0A60     		str	r2, [r1]
 426 02b4 1A78     		ldrb	r2, [r3]
 427 02b6 EE23     		mov	r3, #238
 428 02b8 FB18     		add	r3, r7, r3
 429 02ba 52B2     		sxtb	r2, r2
 430 02bc 1A80     		strh	r2, [r3]
 179:Source\FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = x4;
 431              		.loc 1 179 0
 432 02be 7B69     		ldr	r3, [r7, #20]
 433 02c0 9A1C     		add	r2, r3, #2
 434 02c2 7A61     		str	r2, [r7, #20]
 435 02c4 EE22     		mov	r2, #238
 436 02c6 BA18     		add	r2, r7, r2
 437 02c8 1288     		ldrh	r2, [r2]
 438 02ca 1A80     		strh	r2, [r3]
 180:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 181:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Decrement the loop counter */
 182:Source\FilteringFunctions/arm_conv_opt_q7.c ****     k--;
 439              		.loc 1 182 0
 440 02cc 8C23     		mov	r3, #140
 441 02ce 5B00     		lsl	r3, r3, #1
 442 02d0 FB18     		add	r3, r7, r3
 443 02d2 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 12


 444 02d4 013B     		sub	r3, r3, #1
 445 02d6 8C22     		mov	r2, #140
 446 02d8 5200     		lsl	r2, r2, #1
 447 02da BA18     		add	r2, r7, r2
 448 02dc 1360     		str	r3, [r2]
 449              	.L8:
 169:Source\FilteringFunctions/arm_conv_opt_q7.c ****   {
 450              		.loc 1 169 0
 451 02de 8C23     		mov	r3, #140
 452 02e0 5B00     		lsl	r3, r3, #1
 453 02e2 FB18     		add	r3, r7, r3
 454 02e4 1B68     		ldr	r3, [r3]
 455 02e6 002B     		cmp	r3, #0
 456 02e8 9CD1     		bne	.L9
 183:Source\FilteringFunctions/arm_conv_opt_q7.c ****   }
 184:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 185:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 186:Source\FilteringFunctions/arm_conv_opt_q7.c ****    ** No loop unrolling is used. */
 187:Source\FilteringFunctions/arm_conv_opt_q7.c ****   k = srcALen % 0x4u;
 457              		.loc 1 187 0
 458 02ea BB68     		ldr	r3, [r7, #8]
 459 02ec 0322     		mov	r2, #3
 460 02ee 1340     		and	r3, r2
 461 02f0 8C22     		mov	r2, #140
 462 02f2 5200     		lsl	r2, r2, #1
 463 02f4 BA18     		add	r2, r7, r2
 464 02f6 1360     		str	r3, [r2]
 188:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 189:Source\FilteringFunctions/arm_conv_opt_q7.c ****   while (k > 0u)
 465              		.loc 1 189 0
 466 02f8 1DE0     		b	.L10
 467              	.L11:
 190:Source\FilteringFunctions/arm_conv_opt_q7.c ****   {
 191:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* copy second buffer in reversal manner for remaining samples */
 192:Source\FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) * pIn1++;
 468              		.loc 1 192 0
 469 02fa 9023     		mov	r3, #144
 470 02fc 5B00     		lsl	r3, r3, #1
 471 02fe FB18     		add	r3, r7, r3
 472 0300 1B68     		ldr	r3, [r3]
 473 0302 5A1C     		add	r2, r3, #1
 474 0304 9021     		mov	r1, #144
 475 0306 4900     		lsl	r1, r1, #1
 476 0308 7918     		add	r1, r7, r1
 477 030a 0A60     		str	r2, [r1]
 478 030c 1A78     		ldrb	r2, [r3]
 479 030e EE23     		mov	r3, #238
 480 0310 FB18     		add	r3, r7, r3
 481 0312 52B2     		sxtb	r2, r2
 482 0314 1A80     		strh	r2, [r3]
 193:Source\FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = x4;
 483              		.loc 1 193 0
 484 0316 7B69     		ldr	r3, [r7, #20]
 485 0318 9A1C     		add	r2, r3, #2
 486 031a 7A61     		str	r2, [r7, #20]
 487 031c EE22     		mov	r2, #238
 488 031e BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 13


 489 0320 1288     		ldrh	r2, [r2]
 490 0322 1A80     		strh	r2, [r3]
 194:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 195:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Decrement the loop counter */
 196:Source\FilteringFunctions/arm_conv_opt_q7.c ****     k--;
 491              		.loc 1 196 0
 492 0324 8C23     		mov	r3, #140
 493 0326 5B00     		lsl	r3, r3, #1
 494 0328 FB18     		add	r3, r7, r3
 495 032a 1B68     		ldr	r3, [r3]
 496 032c 013B     		sub	r3, r3, #1
 497 032e 8C22     		mov	r2, #140
 498 0330 5200     		lsl	r2, r2, #1
 499 0332 BA18     		add	r2, r7, r2
 500 0334 1360     		str	r3, [r2]
 501              	.L10:
 189:Source\FilteringFunctions/arm_conv_opt_q7.c ****   {
 502              		.loc 1 189 0
 503 0336 8C23     		mov	r3, #140
 504 0338 5B00     		lsl	r3, r3, #1
 505 033a FB18     		add	r3, r7, r3
 506 033c 1B68     		ldr	r3, [r3]
 507 033e 002B     		cmp	r3, #0
 508 0340 DBD1     		bne	.L11
 197:Source\FilteringFunctions/arm_conv_opt_q7.c ****   }
 198:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 199:Source\FilteringFunctions/arm_conv_opt_q7.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
 200:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 201:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* Fill (srcBLen - 1u) zeros at end of scratch buffer */
 202:Source\FilteringFunctions/arm_conv_opt_q7.c ****   arm_fill_q15(0, pScr1, (srcBLen - 1u));
 509              		.loc 1 202 0
 510 0342 7A69     		ldr	r2, [r7, #20]
 511 0344 3B68     		ldr	r3, [r7]
 512 0346 013B     		sub	r3, r3, #1
 513 0348 0020     		mov	r0, #0
 514 034a 111C     		mov	r1, r2
 515 034c 1A1C     		mov	r2, r3
 516 034e FFF7FEFF 		bl	arm_fill_q15
 203:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 204:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* Update pointer */
 205:Source\FilteringFunctions/arm_conv_opt_q7.c ****   pScr1 += (srcBLen - 1u);
 517              		.loc 1 205 0
 518 0352 7A69     		ldr	r2, [r7, #20]
 519 0354 3B68     		ldr	r3, [r7]
 520 0356 2A49     		ldr	r1, .L67
 521 0358 8C46     		mov	ip, r1
 522 035a 6344     		add	r3, r3, ip
 523 035c 5B00     		lsl	r3, r3, #1
 524 035e D318     		add	r3, r2, r3
 525 0360 7B61     		str	r3, [r7, #20]
 206:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 207:Source\FilteringFunctions/arm_conv_opt_q7.c **** #else
 208:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 209:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* Apply loop unrolling and do 4 Copies simultaneously. */
 210:Source\FilteringFunctions/arm_conv_opt_q7.c ****   k = (srcBLen - 1u) >> 2u;
 211:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 212:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 14


 213:Source\FilteringFunctions/arm_conv_opt_q7.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
 214:Source\FilteringFunctions/arm_conv_opt_q7.c ****   while (k > 0u)
 215:Source\FilteringFunctions/arm_conv_opt_q7.c ****   {
 216:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* copy second buffer in reversal manner */
 217:Source\FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = 0;
 218:Source\FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = 0;
 219:Source\FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = 0;
 220:Source\FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = 0;
 221:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 222:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Decrement the loop counter */
 223:Source\FilteringFunctions/arm_conv_opt_q7.c ****     k--;
 224:Source\FilteringFunctions/arm_conv_opt_q7.c ****   }
 225:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 226:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 227:Source\FilteringFunctions/arm_conv_opt_q7.c ****    ** No loop unrolling is used. */
 228:Source\FilteringFunctions/arm_conv_opt_q7.c ****   k = (srcBLen - 1u) % 0x4u;
 229:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 230:Source\FilteringFunctions/arm_conv_opt_q7.c ****   while (k > 0u)
 231:Source\FilteringFunctions/arm_conv_opt_q7.c ****   {
 232:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* copy second buffer in reversal manner for remaining samples */
 233:Source\FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = 0;
 234:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 235:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Decrement the loop counter */
 236:Source\FilteringFunctions/arm_conv_opt_q7.c ****     k--;
 237:Source\FilteringFunctions/arm_conv_opt_q7.c ****   }
 238:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 239:Source\FilteringFunctions/arm_conv_opt_q7.c **** #endif
 240:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 241:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* Temporary pointer for scratch2 */
 242:Source\FilteringFunctions/arm_conv_opt_q7.c ****   py = pScratch2;
 526              		.loc 1 242 0
 527 0362 9C23     		mov	r3, #156
 528 0364 5B00     		lsl	r3, r3, #1
 529 0366 FB18     		add	r3, r7, r3
 530 0368 1B68     		ldr	r3, [r3]
 531 036a E822     		mov	r2, #232
 532 036c BA18     		add	r2, r7, r2
 533 036e 1360     		str	r3, [r2]
 243:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 244:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* Initialization of pIn2 pointer */
 245:Source\FilteringFunctions/arm_conv_opt_q7.c ****   pIn2 = (q7_t *) py;
 534              		.loc 1 245 0
 535 0370 E823     		mov	r3, #232
 536 0372 FB18     		add	r3, r7, r3
 537 0374 1B68     		ldr	r3, [r3]
 538 0376 8E22     		mov	r2, #142
 539 0378 5200     		lsl	r2, r2, #1
 540 037a BA18     		add	r2, r7, r2
 541 037c 1360     		str	r3, [r2]
 246:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 247:Source\FilteringFunctions/arm_conv_opt_q7.c ****   pScr2 = py;
 542              		.loc 1 247 0
 543 037e E823     		mov	r3, #232
 544 0380 FB18     		add	r3, r7, r3
 545 0382 1B68     		ldr	r3, [r3]
 546 0384 9222     		mov	r2, #146
 547 0386 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 15


 548 0388 BA18     		add	r2, r7, r2
 549 038a 1360     		str	r3, [r2]
 248:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 249:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* Actual convolution process starts here */
 250:Source\FilteringFunctions/arm_conv_opt_q7.c ****   blkCnt = (srcALen + srcBLen - 1u) >> 2;
 550              		.loc 1 250 0
 551 038c BA68     		ldr	r2, [r7, #8]
 552 038e 3B68     		ldr	r3, [r7]
 553 0390 D318     		add	r3, r2, r3
 554 0392 013B     		sub	r3, r3, #1
 555 0394 9B08     		lsr	r3, r3, #2
 556 0396 8A22     		mov	r2, #138
 557 0398 5200     		lsl	r2, r2, #1
 558 039a BA18     		add	r2, r7, r2
 559 039c 1360     		str	r3, [r2]
 251:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 252:Source\FilteringFunctions/arm_conv_opt_q7.c ****   while (blkCnt > 0)
 560              		.loc 1 252 0
 561 039e 7FE3     		b	.L12
 562              	.L49:
 253:Source\FilteringFunctions/arm_conv_opt_q7.c ****   {
 254:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Initialze temporary scratch pointer as scratch1 */
 255:Source\FilteringFunctions/arm_conv_opt_q7.c ****     pScr1 = pScratch1;
 563              		.loc 1 255 0
 564 03a0 9A23     		mov	r3, #154
 565 03a2 5B00     		lsl	r3, r3, #1
 566 03a4 FB18     		add	r3, r7, r3
 567 03a6 1B68     		ldr	r3, [r3]
 568 03a8 7B61     		str	r3, [r7, #20]
 256:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 257:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Clear Accumlators */
 258:Source\FilteringFunctions/arm_conv_opt_q7.c ****     acc0 = 0;
 569              		.loc 1 258 0
 570 03aa 0023     		mov	r3, #0
 571 03ac 8422     		mov	r2, #132
 572 03ae 5200     		lsl	r2, r2, #1
 573 03b0 BA18     		add	r2, r7, r2
 574 03b2 1360     		str	r3, [r2]
 259:Source\FilteringFunctions/arm_conv_opt_q7.c ****     acc1 = 0;
 575              		.loc 1 259 0
 576 03b4 0023     		mov	r3, #0
 577 03b6 7A1D     		add	r2, r7, #5
 578 03b8 FF32     		add	r2, r2, #255
 579 03ba 1360     		str	r3, [r2]
 260:Source\FilteringFunctions/arm_conv_opt_q7.c ****     acc2 = 0;
 580              		.loc 1 260 0
 581 03bc 0023     		mov	r3, #0
 582 03be 7A1C     		add	r2, r7, #1
 583 03c0 FF32     		add	r2, r2, #255
 584 03c2 1360     		str	r3, [r2]
 261:Source\FilteringFunctions/arm_conv_opt_q7.c ****     acc3 = 0;
 585              		.loc 1 261 0
 586 03c4 0023     		mov	r3, #0
 587 03c6 FC22     		mov	r2, #252
 588 03c8 BA18     		add	r2, r7, r2
 589 03ca 1360     		str	r3, [r2]
 262:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 16


 263:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Read two samples from scratch1 buffer */
 264:Source\FilteringFunctions/arm_conv_opt_q7.c ****     x1 = *__SIMD32(pScr1)++;
 590              		.loc 1 264 0
 591 03cc 1423     		mov	r3, #20
 592 03ce FB18     		add	r3, r7, r3
 593 03d0 1A68     		ldr	r2, [r3]
 594 03d2 111D     		add	r1, r2, #4
 595 03d4 1960     		str	r1, [r3]
 596 03d6 1368     		ldr	r3, [r2]
 597 03d8 F822     		mov	r2, #248
 598 03da BA18     		add	r2, r7, r2
 599 03dc 1360     		str	r3, [r2]
 265:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 266:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Read next two samples from scratch1 buffer */
 267:Source\FilteringFunctions/arm_conv_opt_q7.c ****     x2 = *__SIMD32(pScr1)++;
 600              		.loc 1 267 0
 601 03de 1423     		mov	r3, #20
 602 03e0 FB18     		add	r3, r7, r3
 603 03e2 1A68     		ldr	r2, [r3]
 604 03e4 111D     		add	r1, r2, #4
 605 03e6 1960     		str	r1, [r3]
 606 03e8 1368     		ldr	r3, [r2]
 607 03ea F422     		mov	r2, #244
 608 03ec BA18     		add	r2, r7, r2
 609 03ee 1360     		str	r3, [r2]
 268:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 269:Source\FilteringFunctions/arm_conv_opt_q7.c ****     tapCnt = (srcBLen) >> 2u;
 610              		.loc 1 269 0
 611 03f0 3B68     		ldr	r3, [r7]
 612 03f2 9B08     		lsr	r3, r3, #2
 613 03f4 8822     		mov	r2, #136
 614 03f6 5200     		lsl	r2, r2, #1
 615 03f8 BA18     		add	r2, r7, r2
 616 03fa 1360     		str	r3, [r2]
 270:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 271:Source\FilteringFunctions/arm_conv_opt_q7.c ****     while (tapCnt > 0u)
 617              		.loc 1 271 0
 618 03fc D0E1     		b	.L13
 619              	.L68:
 620 03fe C046     		.align	2
 621              	.L67:
 622 0400 FFFFFF7F 		.word	2147483647
 623              	.L22:
 272:Source\FilteringFunctions/arm_conv_opt_q7.c ****     {
 273:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 274:Source\FilteringFunctions/arm_conv_opt_q7.c ****       /* Read four samples from smaller buffer */
 275:Source\FilteringFunctions/arm_conv_opt_q7.c ****       y1 = _SIMD32_OFFSET(pScr2);
 624              		.loc 1 275 0
 625 0404 9223     		mov	r3, #146
 626 0406 5B00     		lsl	r3, r3, #1
 627 0408 FB18     		add	r3, r7, r3
 628 040a 1B68     		ldr	r3, [r3]
 629 040c 1B68     		ldr	r3, [r3]
 630 040e E422     		mov	r2, #228
 631 0410 BA18     		add	r2, r7, r2
 632 0412 1360     		str	r3, [r2]
 276:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 17


 277:Source\FilteringFunctions/arm_conv_opt_q7.c ****       /* multiply and accumlate */
 278:Source\FilteringFunctions/arm_conv_opt_q7.c ****       acc0 = __SMLAD(x1, y1, acc0);
 633              		.loc 1 278 0
 634 0414 F823     		mov	r3, #248
 635 0416 FB18     		add	r3, r7, r3
 636 0418 1968     		ldr	r1, [r3]
 637 041a E423     		mov	r3, #228
 638 041c FB18     		add	r3, r7, r3
 639 041e 1A68     		ldr	r2, [r3]
 640 0420 8423     		mov	r3, #132
 641 0422 5B00     		lsl	r3, r3, #1
 642 0424 FB18     		add	r3, r7, r3
 643 0426 1B68     		ldr	r3, [r3]
 644 0428 D820     		mov	r0, #216
 645 042a 3818     		add	r0, r7, r0
 646 042c 0160     		str	r1, [r0]
 647 042e D421     		mov	r1, #212
 648 0430 7918     		add	r1, r7, r1
 649 0432 0A60     		str	r2, [r1]
 650 0434 D022     		mov	r2, #208
 651 0436 BA18     		add	r2, r7, r2
 652 0438 1360     		str	r3, [r2]
 653              	.LBB28:
 654              	.LBB29:
 655              		.file 2 ".\\Include/arm_math.h"
   1:.\Include/arm_math.h **** /* ----------------------------------------------------------------------
   2:.\Include/arm_math.h ****  * Project:      CMSIS DSP Library
   3:.\Include/arm_math.h ****  * Title:        arm_math.h
   4:.\Include/arm_math.h ****  * Description:  Public header file for CMSIS DSP Library
   5:.\Include/arm_math.h ****  *
   6:.\Include/arm_math.h ****  * $Date:        27. January 2017
   7:.\Include/arm_math.h ****  * $Revision:    V.1.5.1
   8:.\Include/arm_math.h ****  *
   9:.\Include/arm_math.h ****  * Target Processor: Cortex-M cores
  10:.\Include/arm_math.h ****  * -------------------------------------------------------------------- */
  11:.\Include/arm_math.h **** /*
  12:.\Include/arm_math.h ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:.\Include/arm_math.h ****  *
  14:.\Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  15:.\Include/arm_math.h ****  *
  16:.\Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.\Include/arm_math.h ****  * not use this file except in compliance with the License.
  18:.\Include/arm_math.h ****  * You may obtain a copy of the License at
  19:.\Include/arm_math.h ****  *
  20:.\Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  21:.\Include/arm_math.h ****  *
  22:.\Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  23:.\Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.\Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.\Include/arm_math.h ****  * See the License for the specific language governing permissions and
  26:.\Include/arm_math.h ****  * limitations under the License.
  27:.\Include/arm_math.h ****  */
  28:.\Include/arm_math.h **** 
  29:.\Include/arm_math.h **** /**
  30:.\Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  31:.\Include/arm_math.h ****    *
  32:.\Include/arm_math.h ****    * Introduction
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 18


  33:.\Include/arm_math.h ****    * ------------
  34:.\Include/arm_math.h ****    *
  35:.\Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  36:.\Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  37:.\Include/arm_math.h ****    *
  38:.\Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  39:.\Include/arm_math.h ****    * - Basic math functions
  40:.\Include/arm_math.h ****    * - Fast math functions
  41:.\Include/arm_math.h ****    * - Complex math functions
  42:.\Include/arm_math.h ****    * - Filters
  43:.\Include/arm_math.h ****    * - Matrix functions
  44:.\Include/arm_math.h ****    * - Transforms
  45:.\Include/arm_math.h ****    * - Motor control functions
  46:.\Include/arm_math.h ****    * - Statistical functions
  47:.\Include/arm_math.h ****    * - Support functions
  48:.\Include/arm_math.h ****    * - Interpolation functions
  49:.\Include/arm_math.h ****    *
  50:.\Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  51:.\Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  52:.\Include/arm_math.h ****    *
  53:.\Include/arm_math.h ****    * Using the Library
  54:.\Include/arm_math.h ****    * ------------
  55:.\Include/arm_math.h ****    *
  56:.\Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  57:.\Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  58:.\Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  59:.\Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  60:.\Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  61:.\Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  62:.\Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  63:.\Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  64:.\Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  65:.\Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  66:.\Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  67:.\Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  68:.\Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  69:.\Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  70:.\Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  71:.\Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (ARMv8M Baseline, Little endian)
  72:.\Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (ARMv8M Mainline, Little endian)
  73:.\Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (ARMv8M Mainline, Little endian, Single Precision Floating Point U
  74:.\Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (ARMv8M Mainline, Little endian, DSP instructions)
  75:.\Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (ARMv8M Mainline, Little endian, DSP instructions, Single Precisi
  76:.\Include/arm_math.h ****    *
  77:.\Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  78:.\Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  79:.\Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  80:.\Include/arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  81:.\Include/arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  82:.\Include/arm_math.h ****    * For ARMv8M cores define pre processor MACRO ARM_MATH_ARMV8MBL or ARM_MATH_ARMV8MML.
  83:.\Include/arm_math.h ****    * Set Pre processor MACRO __DSP_PRESENT if ARMv8M Mainline core supports DSP instructions.
  84:.\Include/arm_math.h ****    * 
  85:.\Include/arm_math.h ****    *
  86:.\Include/arm_math.h ****    * Examples
  87:.\Include/arm_math.h ****    * --------
  88:.\Include/arm_math.h ****    *
  89:.\Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 19


  90:.\Include/arm_math.h ****    *
  91:.\Include/arm_math.h ****    * Toolchain Support
  92:.\Include/arm_math.h ****    * ------------
  93:.\Include/arm_math.h ****    *
  94:.\Include/arm_math.h ****    * The library has been developed and tested with MDK-ARM version 5.14.0.0
  95:.\Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  96:.\Include/arm_math.h ****    *
  97:.\Include/arm_math.h ****    * Building the Library
  98:.\Include/arm_math.h ****    * ------------
  99:.\Include/arm_math.h ****    *
 100:.\Include/arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 101:.\Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
 102:.\Include/arm_math.h ****    *
 103:.\Include/arm_math.h ****    *
 104:.\Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 105:.\Include/arm_math.h ****    *
 106:.\Include/arm_math.h ****    * Pre-processor Macros
 107:.\Include/arm_math.h ****    * ------------
 108:.\Include/arm_math.h ****    *
 109:.\Include/arm_math.h ****    * Each library project have differant pre-processor macros.
 110:.\Include/arm_math.h ****    *
 111:.\Include/arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 112:.\Include/arm_math.h ****    *
 113:.\Include/arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 114:.\Include/arm_math.h ****    *
 115:.\Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 116:.\Include/arm_math.h ****    *
 117:.\Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 118:.\Include/arm_math.h ****    *
 119:.\Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 120:.\Include/arm_math.h ****    *
 121:.\Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 122:.\Include/arm_math.h ****    *
 123:.\Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 124:.\Include/arm_math.h ****    *
 125:.\Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 126:.\Include/arm_math.h ****    *
 127:.\Include/arm_math.h ****    * - ARM_MATH_CMx:
 128:.\Include/arm_math.h ****    *
 129:.\Include/arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 130:.\Include/arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 131:.\Include/arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 132:.\Include/arm_math.h ****    *
 133:.\Include/arm_math.h ****    * - ARM_MATH_ARMV8MxL:
 134:.\Include/arm_math.h ****    *
 135:.\Include/arm_math.h ****    * Define macro ARM_MATH_ARMV8MBL for building the library on ARMv8M Baseline target, ARM_MATH_AR
 136:.\Include/arm_math.h ****    * on ARMv8M Mainline target.
 137:.\Include/arm_math.h ****    *
 138:.\Include/arm_math.h ****    * - __FPU_PRESENT:
 139:.\Include/arm_math.h ****    *
 140:.\Include/arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 141:.\Include/arm_math.h ****    *
 142:.\Include/arm_math.h ****    * - __DSP_PRESENT:
 143:.\Include/arm_math.h ****    *
 144:.\Include/arm_math.h ****    * Initialize macro __DSP_PRESENT = 1 when ARMv8M Mainline core supports DSP instructions.
 145:.\Include/arm_math.h ****    *
 146:.\Include/arm_math.h ****    * <hr>
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 20


 147:.\Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 148:.\Include/arm_math.h ****    * -----------------------------
 149:.\Include/arm_math.h ****    *
 150:.\Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 151:.\Include/arm_math.h ****    * |File/Folder                   |Content                                                       
 152:.\Include/arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 153:.\Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 154:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 155:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 156:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 157:.\Include/arm_math.h ****    *
 158:.\Include/arm_math.h ****    * <hr>
 159:.\Include/arm_math.h ****    * Revision History of CMSIS-DSP
 160:.\Include/arm_math.h ****    * ------------
 161:.\Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 162:.\Include/arm_math.h ****    *
 163:.\Include/arm_math.h ****    * Copyright Notice
 164:.\Include/arm_math.h ****    * ------------
 165:.\Include/arm_math.h ****    *
 166:.\Include/arm_math.h ****    * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
 167:.\Include/arm_math.h ****    */
 168:.\Include/arm_math.h **** 
 169:.\Include/arm_math.h **** 
 170:.\Include/arm_math.h **** /**
 171:.\Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 172:.\Include/arm_math.h ****  */
 173:.\Include/arm_math.h **** 
 174:.\Include/arm_math.h **** /**
 175:.\Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 176:.\Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 177:.\Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 178:.\Include/arm_math.h ****  * operate on individual values and not arrays.
 179:.\Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 180:.\Include/arm_math.h ****  *
 181:.\Include/arm_math.h ****  */
 182:.\Include/arm_math.h **** 
 183:.\Include/arm_math.h **** /**
 184:.\Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 185:.\Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 186:.\Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 187:.\Include/arm_math.h ****  * (real, imag, real, imag, ...).
 188:.\Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 189:.\Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 190:.\Include/arm_math.h ****  * real values.
 191:.\Include/arm_math.h ****  */
 192:.\Include/arm_math.h **** 
 193:.\Include/arm_math.h **** /**
 194:.\Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 195:.\Include/arm_math.h ****  */
 196:.\Include/arm_math.h **** 
 197:.\Include/arm_math.h **** /**
 198:.\Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 199:.\Include/arm_math.h ****  *
 200:.\Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 201:.\Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 202:.\Include/arm_math.h ****  * the type
 203:.\Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 21


 204:.\Include/arm_math.h ****  * below:
 205:.\Include/arm_math.h ****  * <pre>
 206:.\Include/arm_math.h ****  *     typedef struct
 207:.\Include/arm_math.h ****  *     {
 208:.\Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 209:.\Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 210:.\Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 211:.\Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 212:.\Include/arm_math.h ****  * </pre>
 213:.\Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 214:.\Include/arm_math.h ****  *
 215:.\Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 216:.\Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 217:.\Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 218:.\Include/arm_math.h ****  * matrix element (i, j) is stored at:
 219:.\Include/arm_math.h ****  * <pre>
 220:.\Include/arm_math.h ****  *     pData[i*numCols + j]
 221:.\Include/arm_math.h ****  * </pre>
 222:.\Include/arm_math.h ****  *
 223:.\Include/arm_math.h ****  * \par Init Functions
 224:.\Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 225:.\Include/arm_math.h ****  * data structure.
 226:.\Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 227:.\Include/arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 228:.\Include/arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 229:.\Include/arm_math.h ****  *
 230:.\Include/arm_math.h ****  * \par
 231:.\Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 232:.\Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 233:.\Include/arm_math.h ****  * To place the instance structure in a const data
 234:.\Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 235:.\Include/arm_math.h ****  * <pre>
 236:.\Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 237:.\Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 238:.\Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 239:.\Include/arm_math.h ****  * </pre>
 240:.\Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 241:.\Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 242:.\Include/arm_math.h ****  * data array.
 243:.\Include/arm_math.h ****  *
 244:.\Include/arm_math.h ****  * \par Size Checking
 245:.\Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 246:.\Include/arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 247:.\Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 248:.\Include/arm_math.h ****  * columns.  If the size check fails the functions return:
 249:.\Include/arm_math.h ****  * <pre>
 250:.\Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 251:.\Include/arm_math.h ****  * </pre>
 252:.\Include/arm_math.h ****  * Otherwise the functions return
 253:.\Include/arm_math.h ****  * <pre>
 254:.\Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 255:.\Include/arm_math.h ****  * </pre>
 256:.\Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 257:.\Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 258:.\Include/arm_math.h ****  * <pre>
 259:.\Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 260:.\Include/arm_math.h ****  * </pre>
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 22


 261:.\Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 262:.\Include/arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 263:.\Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 264:.\Include/arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
 265:.\Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 266:.\Include/arm_math.h ****  */
 267:.\Include/arm_math.h **** 
 268:.\Include/arm_math.h **** /**
 269:.\Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 270:.\Include/arm_math.h ****  */
 271:.\Include/arm_math.h **** 
 272:.\Include/arm_math.h **** /**
 273:.\Include/arm_math.h ****  * @defgroup groupController Controller Functions
 274:.\Include/arm_math.h ****  */
 275:.\Include/arm_math.h **** 
 276:.\Include/arm_math.h **** /**
 277:.\Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 278:.\Include/arm_math.h ****  */
 279:.\Include/arm_math.h **** /**
 280:.\Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 281:.\Include/arm_math.h ****  */
 282:.\Include/arm_math.h **** 
 283:.\Include/arm_math.h **** /**
 284:.\Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 285:.\Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 286:.\Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 287:.\Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 288:.\Include/arm_math.h ****  */
 289:.\Include/arm_math.h **** 
 290:.\Include/arm_math.h **** /**
 291:.\Include/arm_math.h ****  * @defgroup groupExamples Examples
 292:.\Include/arm_math.h ****  */
 293:.\Include/arm_math.h **** #ifndef _ARM_MATH_H
 294:.\Include/arm_math.h **** #define _ARM_MATH_H
 295:.\Include/arm_math.h **** 
 296:.\Include/arm_math.h **** /* ignore some GCC warnings */
 297:.\Include/arm_math.h **** #if defined ( __GNUC__ )
 298:.\Include/arm_math.h **** #pragma GCC diagnostic push
 299:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 300:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 301:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 302:.\Include/arm_math.h **** #endif
 303:.\Include/arm_math.h **** 
 304:.\Include/arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 305:.\Include/arm_math.h **** 
 306:.\Include/arm_math.h **** #if defined(ARM_MATH_CM7)
 307:.\Include/arm_math.h ****   #include "core_cm7.h"
 308:.\Include/arm_math.h ****   #define ARM_MATH_DSP
 309:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM4)
 310:.\Include/arm_math.h ****   #include "core_cm4.h"
 311:.\Include/arm_math.h ****   #define ARM_MATH_DSP
 312:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM3)
 313:.\Include/arm_math.h ****   #include "core_cm3.h"
 314:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM0)
 315:.\Include/arm_math.h ****   #include "core_cm0.h"
 316:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 317:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 23


 318:.\Include/arm_math.h ****   #include "core_cm0plus.h"
 319:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 320:.\Include/arm_math.h **** #elif defined (ARM_MATH_ARMV8MBL)
 321:.\Include/arm_math.h ****   #include "core_armv8mbl.h"
 322:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 323:.\Include/arm_math.h **** #elif defined (ARM_MATH_ARMV8MML)
 324:.\Include/arm_math.h ****   #include "core_armv8mml.h"
 325:.\Include/arm_math.h ****   #if (defined (__DSP_PRESENT) && (__DSP_PRESENT == 1))
 326:.\Include/arm_math.h ****     #define ARM_MATH_DSP
 327:.\Include/arm_math.h ****   #endif
 328:.\Include/arm_math.h **** #else
 329:.\Include/arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 330:.\Include/arm_math.h **** #endif
 331:.\Include/arm_math.h **** 
 332:.\Include/arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 333:.\Include/arm_math.h **** #include "string.h"
 334:.\Include/arm_math.h **** #include "math.h"
 335:.\Include/arm_math.h **** #ifdef   __cplusplus
 336:.\Include/arm_math.h **** extern "C"
 337:.\Include/arm_math.h **** {
 338:.\Include/arm_math.h **** #endif
 339:.\Include/arm_math.h **** 
 340:.\Include/arm_math.h **** 
 341:.\Include/arm_math.h ****   /**
 342:.\Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:.\Include/arm_math.h ****    */
 344:.\Include/arm_math.h **** 
 345:.\Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:.\Include/arm_math.h **** #define DELTA_Q15          0x5
 347:.\Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:.\Include/arm_math.h **** #ifndef PI
 349:.\Include/arm_math.h ****   #define PI               3.14159265358979f
 350:.\Include/arm_math.h **** #endif
 351:.\Include/arm_math.h **** 
 352:.\Include/arm_math.h ****   /**
 353:.\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:.\Include/arm_math.h ****    */
 355:.\Include/arm_math.h **** 
 356:.\Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:.\Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:.\Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:.\Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:.\Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:.\Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:.\Include/arm_math.h **** 
 363:.\Include/arm_math.h ****   /**
 364:.\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:.\Include/arm_math.h ****    */
 366:.\Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:.\Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:.\Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:.\Include/arm_math.h **** 
 370:.\Include/arm_math.h ****   /**
 371:.\Include/arm_math.h ****    * @brief Macro for Unaligned Support
 372:.\Include/arm_math.h ****    */
 373:.\Include/arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 374:.\Include/arm_math.h ****     #define ALIGN4
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 24


 375:.\Include/arm_math.h **** #else
 376:.\Include/arm_math.h ****   #if defined  (__GNUC__)
 377:.\Include/arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 378:.\Include/arm_math.h ****   #else
 379:.\Include/arm_math.h ****     #define ALIGN4 __align(4)
 380:.\Include/arm_math.h ****   #endif
 381:.\Include/arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 382:.\Include/arm_math.h **** 
 383:.\Include/arm_math.h ****   /**
 384:.\Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 385:.\Include/arm_math.h ****    */
 386:.\Include/arm_math.h **** 
 387:.\Include/arm_math.h ****   typedef enum
 388:.\Include/arm_math.h ****   {
 389:.\Include/arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 390:.\Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 391:.\Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 392:.\Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 393:.\Include/arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 394:.\Include/arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 395:.\Include/arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 396:.\Include/arm_math.h ****   } arm_status;
 397:.\Include/arm_math.h **** 
 398:.\Include/arm_math.h ****   /**
 399:.\Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 400:.\Include/arm_math.h ****    */
 401:.\Include/arm_math.h ****   typedef int8_t q7_t;
 402:.\Include/arm_math.h **** 
 403:.\Include/arm_math.h ****   /**
 404:.\Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 405:.\Include/arm_math.h ****    */
 406:.\Include/arm_math.h ****   typedef int16_t q15_t;
 407:.\Include/arm_math.h **** 
 408:.\Include/arm_math.h ****   /**
 409:.\Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 410:.\Include/arm_math.h ****    */
 411:.\Include/arm_math.h ****   typedef int32_t q31_t;
 412:.\Include/arm_math.h **** 
 413:.\Include/arm_math.h ****   /**
 414:.\Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 415:.\Include/arm_math.h ****    */
 416:.\Include/arm_math.h ****   typedef int64_t q63_t;
 417:.\Include/arm_math.h **** 
 418:.\Include/arm_math.h ****   /**
 419:.\Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 420:.\Include/arm_math.h ****    */
 421:.\Include/arm_math.h ****   typedef float float32_t;
 422:.\Include/arm_math.h **** 
 423:.\Include/arm_math.h ****   /**
 424:.\Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 425:.\Include/arm_math.h ****    */
 426:.\Include/arm_math.h ****   typedef double float64_t;
 427:.\Include/arm_math.h **** 
 428:.\Include/arm_math.h ****   /**
 429:.\Include/arm_math.h ****    * @brief definition to read/write two 16 bit values.
 430:.\Include/arm_math.h ****    */
 431:.\Include/arm_math.h **** #if   defined ( __CC_ARM )
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 25


 432:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 433:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 434:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 435:.\Include/arm_math.h **** 
 436:.\Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 437:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 438:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 439:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 440:.\Include/arm_math.h **** 
 441:.\Include/arm_math.h **** #elif defined ( __GNUC__ )
 442:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 443:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 444:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 445:.\Include/arm_math.h **** 
 446:.\Include/arm_math.h **** #elif defined ( __ICCARM__ )
 447:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 448:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 449:.\Include/arm_math.h ****   #define CMSIS_INLINE
 450:.\Include/arm_math.h **** 
 451:.\Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 452:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 453:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 454:.\Include/arm_math.h ****   #define CMSIS_INLINE
 455:.\Include/arm_math.h **** 
 456:.\Include/arm_math.h **** #elif defined ( __CSMC__ )
 457:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 458:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 459:.\Include/arm_math.h ****   #define CMSIS_INLINE
 460:.\Include/arm_math.h **** 
 461:.\Include/arm_math.h **** #elif defined ( __TASKING__ )
 462:.\Include/arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 463:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 464:.\Include/arm_math.h ****   #define CMSIS_INLINE
 465:.\Include/arm_math.h **** 
 466:.\Include/arm_math.h **** #else
 467:.\Include/arm_math.h ****   #error Unknown compiler
 468:.\Include/arm_math.h **** #endif
 469:.\Include/arm_math.h **** 
 470:.\Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 471:.\Include/arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 472:.\Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 473:.\Include/arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 474:.\Include/arm_math.h **** 
 475:.\Include/arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 476:.\Include/arm_math.h **** #if !defined (ARM_MATH_DSP)
 477:.\Include/arm_math.h ****   /**
 478:.\Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 479:.\Include/arm_math.h ****    */
 480:.\Include/arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 481:.\Include/arm_math.h ****                                     (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 482:.\Include/arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 483:.\Include/arm_math.h ****                                     (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 484:.\Include/arm_math.h **** 
 485:.\Include/arm_math.h **** /* #endif // defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 486:.\Include/arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
 487:.\Include/arm_math.h **** 
 488:.\Include/arm_math.h ****    /**
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 26


 489:.\Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
 490:.\Include/arm_math.h ****    */
 491:.\Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 492:.\Include/arm_math.h **** 
 493:.\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 494:.\Include/arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 495:.\Include/arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 496:.\Include/arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 497:.\Include/arm_math.h **** #else
 498:.\Include/arm_math.h **** 
 499:.\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 500:.\Include/arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 501:.\Include/arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 502:.\Include/arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 503:.\Include/arm_math.h **** 
 504:.\Include/arm_math.h **** #endif
 505:.\Include/arm_math.h **** 
 506:.\Include/arm_math.h **** 
 507:.\Include/arm_math.h ****   /**
 508:.\Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 509:.\Include/arm_math.h ****    */
 510:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t clip_q63_to_q31(
 511:.\Include/arm_math.h ****   q63_t x)
 512:.\Include/arm_math.h ****   {
 513:.\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 514:.\Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 515:.\Include/arm_math.h ****   }
 516:.\Include/arm_math.h **** 
 517:.\Include/arm_math.h ****   /**
 518:.\Include/arm_math.h ****    * @brief Clips Q63 to Q15 values.
 519:.\Include/arm_math.h ****    */
 520:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q63_to_q15(
 521:.\Include/arm_math.h ****   q63_t x)
 522:.\Include/arm_math.h ****   {
 523:.\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 524:.\Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 525:.\Include/arm_math.h ****   }
 526:.\Include/arm_math.h **** 
 527:.\Include/arm_math.h ****   /**
 528:.\Include/arm_math.h ****    * @brief Clips Q31 to Q7 values.
 529:.\Include/arm_math.h ****    */
 530:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q7_t clip_q31_to_q7(
 531:.\Include/arm_math.h ****   q31_t x)
 532:.\Include/arm_math.h ****   {
 533:.\Include/arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 534:.\Include/arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 535:.\Include/arm_math.h ****   }
 536:.\Include/arm_math.h **** 
 537:.\Include/arm_math.h ****   /**
 538:.\Include/arm_math.h ****    * @brief Clips Q31 to Q15 values.
 539:.\Include/arm_math.h ****    */
 540:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q31_to_q15(
 541:.\Include/arm_math.h ****   q31_t x)
 542:.\Include/arm_math.h ****   {
 543:.\Include/arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 544:.\Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 545:.\Include/arm_math.h ****   }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 27


 546:.\Include/arm_math.h **** 
 547:.\Include/arm_math.h ****   /**
 548:.\Include/arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 549:.\Include/arm_math.h ****    */
 550:.\Include/arm_math.h **** 
 551:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q63_t mult32x64(
 552:.\Include/arm_math.h ****   q63_t x,
 553:.\Include/arm_math.h ****   q31_t y)
 554:.\Include/arm_math.h ****   {
 555:.\Include/arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 556:.\Include/arm_math.h ****             (((q63_t) (x >> 32) * y)));
 557:.\Include/arm_math.h ****   }
 558:.\Include/arm_math.h **** 
 559:.\Include/arm_math.h **** /*
 560:.\Include/arm_math.h ****   #if defined (ARM_MATH_CM0_FAMILY) && defined ( __CC_ARM   )
 561:.\Include/arm_math.h ****   #define __CLZ __clz
 562:.\Include/arm_math.h ****   #endif
 563:.\Include/arm_math.h ****  */
 564:.\Include/arm_math.h **** /* note: function can be removed when all toolchain support __CLZ for Cortex-M0 */
 565:.\Include/arm_math.h **** #if defined (ARM_MATH_CM0_FAMILY) && ((defined (__ICCARM__))  )
 566:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 567:.\Include/arm_math.h ****   q31_t data);
 568:.\Include/arm_math.h **** 
 569:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 570:.\Include/arm_math.h ****   q31_t data)
 571:.\Include/arm_math.h ****   {
 572:.\Include/arm_math.h ****     uint32_t count = 0;
 573:.\Include/arm_math.h ****     uint32_t mask = 0x80000000;
 574:.\Include/arm_math.h **** 
 575:.\Include/arm_math.h ****     while ((data & mask) == 0)
 576:.\Include/arm_math.h ****     {
 577:.\Include/arm_math.h ****       count += 1u;
 578:.\Include/arm_math.h ****       mask = mask >> 1u;
 579:.\Include/arm_math.h ****     }
 580:.\Include/arm_math.h **** 
 581:.\Include/arm_math.h ****     return (count);
 582:.\Include/arm_math.h ****   }
 583:.\Include/arm_math.h **** #endif
 584:.\Include/arm_math.h **** 
 585:.\Include/arm_math.h ****   /**
 586:.\Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 587:.\Include/arm_math.h ****    */
 588:.\Include/arm_math.h **** 
 589:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q31(
 590:.\Include/arm_math.h ****   q31_t in,
 591:.\Include/arm_math.h ****   q31_t * dst,
 592:.\Include/arm_math.h ****   q31_t * pRecipTable)
 593:.\Include/arm_math.h ****   {
 594:.\Include/arm_math.h ****     q31_t out;
 595:.\Include/arm_math.h ****     uint32_t tempVal;
 596:.\Include/arm_math.h ****     uint32_t index, i;
 597:.\Include/arm_math.h ****     uint32_t signBits;
 598:.\Include/arm_math.h **** 
 599:.\Include/arm_math.h ****     if (in > 0)
 600:.\Include/arm_math.h ****     {
 601:.\Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 602:.\Include/arm_math.h ****     }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 28


 603:.\Include/arm_math.h ****     else
 604:.\Include/arm_math.h ****     {
 605:.\Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 606:.\Include/arm_math.h ****     }
 607:.\Include/arm_math.h **** 
 608:.\Include/arm_math.h ****     /* Convert input sample to 1.31 format */
 609:.\Include/arm_math.h ****     in = (in << signBits);
 610:.\Include/arm_math.h **** 
 611:.\Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 612:.\Include/arm_math.h ****     index = (uint32_t)(in >> 24);
 613:.\Include/arm_math.h ****     index = (index & INDEX_MASK);
 614:.\Include/arm_math.h **** 
 615:.\Include/arm_math.h ****     /* 1.31 with exp 1 */
 616:.\Include/arm_math.h ****     out = pRecipTable[index];
 617:.\Include/arm_math.h **** 
 618:.\Include/arm_math.h ****     /* calculation of reciprocal value */
 619:.\Include/arm_math.h ****     /* running approximation for two iterations */
 620:.\Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 621:.\Include/arm_math.h ****     {
 622:.\Include/arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 623:.\Include/arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 624:.\Include/arm_math.h ****       /*      1.31 with exp 1 */
 625:.\Include/arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 626:.\Include/arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 627:.\Include/arm_math.h ****     }
 628:.\Include/arm_math.h **** 
 629:.\Include/arm_math.h ****     /* write output */
 630:.\Include/arm_math.h ****     *dst = out;
 631:.\Include/arm_math.h **** 
 632:.\Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 633:.\Include/arm_math.h ****     return (signBits + 1u);
 634:.\Include/arm_math.h ****   }
 635:.\Include/arm_math.h **** 
 636:.\Include/arm_math.h **** 
 637:.\Include/arm_math.h ****   /**
 638:.\Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
 639:.\Include/arm_math.h ****    */
 640:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q15(
 641:.\Include/arm_math.h ****   q15_t in,
 642:.\Include/arm_math.h ****   q15_t * dst,
 643:.\Include/arm_math.h ****   q15_t * pRecipTable)
 644:.\Include/arm_math.h ****   {
 645:.\Include/arm_math.h ****     q15_t out = 0;
 646:.\Include/arm_math.h ****     uint32_t tempVal = 0;
 647:.\Include/arm_math.h ****     uint32_t index = 0, i = 0;
 648:.\Include/arm_math.h ****     uint32_t signBits = 0;
 649:.\Include/arm_math.h **** 
 650:.\Include/arm_math.h ****     if (in > 0)
 651:.\Include/arm_math.h ****     {
 652:.\Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
 653:.\Include/arm_math.h ****     }
 654:.\Include/arm_math.h ****     else
 655:.\Include/arm_math.h ****     {
 656:.\Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
 657:.\Include/arm_math.h ****     }
 658:.\Include/arm_math.h **** 
 659:.\Include/arm_math.h ****     /* Convert input sample to 1.15 format */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 29


 660:.\Include/arm_math.h ****     in = (in << signBits);
 661:.\Include/arm_math.h **** 
 662:.\Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 663:.\Include/arm_math.h ****     index = (uint32_t)(in >>  8);
 664:.\Include/arm_math.h ****     index = (index & INDEX_MASK);
 665:.\Include/arm_math.h **** 
 666:.\Include/arm_math.h ****     /*      1.15 with exp 1  */
 667:.\Include/arm_math.h ****     out = pRecipTable[index];
 668:.\Include/arm_math.h **** 
 669:.\Include/arm_math.h ****     /* calculation of reciprocal value */
 670:.\Include/arm_math.h ****     /* running approximation for two iterations */
 671:.\Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 672:.\Include/arm_math.h ****     {
 673:.\Include/arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
 674:.\Include/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 675:.\Include/arm_math.h ****       /*      1.15 with exp 1 */
 676:.\Include/arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
 677:.\Include/arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
 678:.\Include/arm_math.h ****     }
 679:.\Include/arm_math.h **** 
 680:.\Include/arm_math.h ****     /* write output */
 681:.\Include/arm_math.h ****     *dst = out;
 682:.\Include/arm_math.h **** 
 683:.\Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 684:.\Include/arm_math.h ****     return (signBits + 1);
 685:.\Include/arm_math.h ****   }
 686:.\Include/arm_math.h **** 
 687:.\Include/arm_math.h **** 
 688:.\Include/arm_math.h ****   /*
 689:.\Include/arm_math.h ****    * @brief C custom defined intrinisic function for only M0 processors
 690:.\Include/arm_math.h ****    */
 691:.\Include/arm_math.h **** #if defined(ARM_MATH_CM0_FAMILY)
 692:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t __SSAT(
 693:.\Include/arm_math.h ****   q31_t x,
 694:.\Include/arm_math.h ****   uint32_t y)
 695:.\Include/arm_math.h ****   {
 696:.\Include/arm_math.h ****     int32_t posMax, negMin;
 697:.\Include/arm_math.h ****     uint32_t i;
 698:.\Include/arm_math.h **** 
 699:.\Include/arm_math.h ****     posMax = 1;
 700:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 701:.\Include/arm_math.h ****     {
 702:.\Include/arm_math.h ****       posMax = posMax * 2;
 703:.\Include/arm_math.h ****     }
 704:.\Include/arm_math.h **** 
 705:.\Include/arm_math.h ****     if (x > 0)
 706:.\Include/arm_math.h ****     {
 707:.\Include/arm_math.h ****       posMax = (posMax - 1);
 708:.\Include/arm_math.h **** 
 709:.\Include/arm_math.h ****       if (x > posMax)
 710:.\Include/arm_math.h ****       {
 711:.\Include/arm_math.h ****         x = posMax;
 712:.\Include/arm_math.h ****       }
 713:.\Include/arm_math.h ****     }
 714:.\Include/arm_math.h ****     else
 715:.\Include/arm_math.h ****     {
 716:.\Include/arm_math.h ****       negMin = -posMax;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 30


 717:.\Include/arm_math.h **** 
 718:.\Include/arm_math.h ****       if (x < negMin)
 719:.\Include/arm_math.h ****       {
 720:.\Include/arm_math.h ****         x = negMin;
 721:.\Include/arm_math.h ****       }
 722:.\Include/arm_math.h ****     }
 723:.\Include/arm_math.h ****     return (x);
 724:.\Include/arm_math.h ****   }
 725:.\Include/arm_math.h **** #endif /* end of ARM_MATH_CM0_FAMILY */
 726:.\Include/arm_math.h **** 
 727:.\Include/arm_math.h **** 
 728:.\Include/arm_math.h ****   /*
 729:.\Include/arm_math.h ****    * @brief C custom defined intrinsic function for M3 and M0 processors
 730:.\Include/arm_math.h ****    */
 731:.\Include/arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 732:.\Include/arm_math.h **** #if !defined (ARM_MATH_DSP)
 733:.\Include/arm_math.h **** 
 734:.\Include/arm_math.h ****   /*
 735:.\Include/arm_math.h ****    * @brief C custom defined QADD8 for M3 and M0 processors
 736:.\Include/arm_math.h ****    */
 737:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD8(
 738:.\Include/arm_math.h ****   uint32_t x,
 739:.\Include/arm_math.h ****   uint32_t y)
 740:.\Include/arm_math.h ****   {
 741:.\Include/arm_math.h ****     q31_t r, s, t, u;
 742:.\Include/arm_math.h **** 
 743:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) + (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 744:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) + (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 745:.\Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) + (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 746:.\Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) + (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 747:.\Include/arm_math.h **** 
 748:.\Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 749:.\Include/arm_math.h ****   }
 750:.\Include/arm_math.h **** 
 751:.\Include/arm_math.h **** 
 752:.\Include/arm_math.h ****   /*
 753:.\Include/arm_math.h ****    * @brief C custom defined QSUB8 for M3 and M0 processors
 754:.\Include/arm_math.h ****    */
 755:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB8(
 756:.\Include/arm_math.h ****   uint32_t x,
 757:.\Include/arm_math.h ****   uint32_t y)
 758:.\Include/arm_math.h ****   {
 759:.\Include/arm_math.h ****     q31_t r, s, t, u;
 760:.\Include/arm_math.h **** 
 761:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) - (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 762:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) - (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 763:.\Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) - (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 764:.\Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) - (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 765:.\Include/arm_math.h **** 
 766:.\Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 767:.\Include/arm_math.h ****   }
 768:.\Include/arm_math.h **** 
 769:.\Include/arm_math.h **** 
 770:.\Include/arm_math.h ****   /*
 771:.\Include/arm_math.h ****    * @brief C custom defined QADD16 for M3 and M0 processors
 772:.\Include/arm_math.h ****    */
 773:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD16(
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 31


 774:.\Include/arm_math.h ****   uint32_t x,
 775:.\Include/arm_math.h ****   uint32_t y)
 776:.\Include/arm_math.h ****   {
 777:.\Include/arm_math.h **** /*  q31_t r,     s;  without initialisation 'arm_offset_q15 test' fails  but 'intrinsic' tests pass
 778:.\Include/arm_math.h ****     q31_t r = 0, s = 0;
 779:.\Include/arm_math.h **** 
 780:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 781:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 782:.\Include/arm_math.h **** 
 783:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 784:.\Include/arm_math.h ****   }
 785:.\Include/arm_math.h **** 
 786:.\Include/arm_math.h **** 
 787:.\Include/arm_math.h ****   /*
 788:.\Include/arm_math.h ****    * @brief C custom defined SHADD16 for M3 and M0 processors
 789:.\Include/arm_math.h ****    */
 790:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHADD16(
 791:.\Include/arm_math.h ****   uint32_t x,
 792:.\Include/arm_math.h ****   uint32_t y)
 793:.\Include/arm_math.h ****   {
 794:.\Include/arm_math.h ****     q31_t r, s;
 795:.\Include/arm_math.h **** 
 796:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 797:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 798:.\Include/arm_math.h **** 
 799:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 800:.\Include/arm_math.h ****   }
 801:.\Include/arm_math.h **** 
 802:.\Include/arm_math.h **** 
 803:.\Include/arm_math.h ****   /*
 804:.\Include/arm_math.h ****    * @brief C custom defined QSUB16 for M3 and M0 processors
 805:.\Include/arm_math.h ****    */
 806:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB16(
 807:.\Include/arm_math.h ****   uint32_t x,
 808:.\Include/arm_math.h ****   uint32_t y)
 809:.\Include/arm_math.h ****   {
 810:.\Include/arm_math.h ****     q31_t r, s;
 811:.\Include/arm_math.h **** 
 812:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 813:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 814:.\Include/arm_math.h **** 
 815:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 816:.\Include/arm_math.h ****   }
 817:.\Include/arm_math.h **** 
 818:.\Include/arm_math.h **** 
 819:.\Include/arm_math.h ****   /*
 820:.\Include/arm_math.h ****    * @brief C custom defined SHSUB16 for M3 and M0 processors
 821:.\Include/arm_math.h ****    */
 822:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSUB16(
 823:.\Include/arm_math.h ****   uint32_t x,
 824:.\Include/arm_math.h ****   uint32_t y)
 825:.\Include/arm_math.h ****   {
 826:.\Include/arm_math.h ****     q31_t r, s;
 827:.\Include/arm_math.h **** 
 828:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 829:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 830:.\Include/arm_math.h **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 32


 831:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 832:.\Include/arm_math.h ****   }
 833:.\Include/arm_math.h **** 
 834:.\Include/arm_math.h **** 
 835:.\Include/arm_math.h ****   /*
 836:.\Include/arm_math.h ****    * @brief C custom defined QASX for M3 and M0 processors
 837:.\Include/arm_math.h ****    */
 838:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QASX(
 839:.\Include/arm_math.h ****   uint32_t x,
 840:.\Include/arm_math.h ****   uint32_t y)
 841:.\Include/arm_math.h ****   {
 842:.\Include/arm_math.h ****     q31_t r, s;
 843:.\Include/arm_math.h **** 
 844:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 845:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 846:.\Include/arm_math.h **** 
 847:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 848:.\Include/arm_math.h ****   }
 849:.\Include/arm_math.h **** 
 850:.\Include/arm_math.h **** 
 851:.\Include/arm_math.h ****   /*
 852:.\Include/arm_math.h ****    * @brief C custom defined SHASX for M3 and M0 processors
 853:.\Include/arm_math.h ****    */
 854:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHASX(
 855:.\Include/arm_math.h ****   uint32_t x,
 856:.\Include/arm_math.h ****   uint32_t y)
 857:.\Include/arm_math.h ****   {
 858:.\Include/arm_math.h ****     q31_t r, s;
 859:.\Include/arm_math.h **** 
 860:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 861:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 862:.\Include/arm_math.h **** 
 863:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 864:.\Include/arm_math.h ****   }
 865:.\Include/arm_math.h **** 
 866:.\Include/arm_math.h **** 
 867:.\Include/arm_math.h ****   /*
 868:.\Include/arm_math.h ****    * @brief C custom defined QSAX for M3 and M0 processors
 869:.\Include/arm_math.h ****    */
 870:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSAX(
 871:.\Include/arm_math.h ****   uint32_t x,
 872:.\Include/arm_math.h ****   uint32_t y)
 873:.\Include/arm_math.h ****   {
 874:.\Include/arm_math.h ****     q31_t r, s;
 875:.\Include/arm_math.h **** 
 876:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 877:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 878:.\Include/arm_math.h **** 
 879:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 880:.\Include/arm_math.h ****   }
 881:.\Include/arm_math.h **** 
 882:.\Include/arm_math.h **** 
 883:.\Include/arm_math.h ****   /*
 884:.\Include/arm_math.h ****    * @brief C custom defined SHSAX for M3 and M0 processors
 885:.\Include/arm_math.h ****    */
 886:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSAX(
 887:.\Include/arm_math.h ****   uint32_t x,
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 33


 888:.\Include/arm_math.h ****   uint32_t y)
 889:.\Include/arm_math.h ****   {
 890:.\Include/arm_math.h ****     q31_t r, s;
 891:.\Include/arm_math.h **** 
 892:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 893:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 894:.\Include/arm_math.h **** 
 895:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 896:.\Include/arm_math.h ****   }
 897:.\Include/arm_math.h **** 
 898:.\Include/arm_math.h **** 
 899:.\Include/arm_math.h ****   /*
 900:.\Include/arm_math.h ****    * @brief C custom defined SMUSDX for M3 and M0 processors
 901:.\Include/arm_math.h ****    */
 902:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUSDX(
 903:.\Include/arm_math.h ****   uint32_t x,
 904:.\Include/arm_math.h ****   uint32_t y)
 905:.\Include/arm_math.h ****   {
 906:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 907:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 908:.\Include/arm_math.h ****   }
 909:.\Include/arm_math.h **** 
 910:.\Include/arm_math.h ****   /*
 911:.\Include/arm_math.h ****    * @brief C custom defined SMUADX for M3 and M0 processors
 912:.\Include/arm_math.h ****    */
 913:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUADX(
 914:.\Include/arm_math.h ****   uint32_t x,
 915:.\Include/arm_math.h ****   uint32_t y)
 916:.\Include/arm_math.h ****   {
 917:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 918:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 919:.\Include/arm_math.h ****   }
 920:.\Include/arm_math.h **** 
 921:.\Include/arm_math.h **** 
 922:.\Include/arm_math.h ****   /*
 923:.\Include/arm_math.h ****    * @brief C custom defined QADD for M3 and M0 processors
 924:.\Include/arm_math.h ****    */
 925:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QADD(
 926:.\Include/arm_math.h ****   int32_t x,
 927:.\Include/arm_math.h ****   int32_t y)
 928:.\Include/arm_math.h ****   {
 929:.\Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x + (q31_t)y)));
 930:.\Include/arm_math.h ****   }
 931:.\Include/arm_math.h **** 
 932:.\Include/arm_math.h **** 
 933:.\Include/arm_math.h ****   /*
 934:.\Include/arm_math.h ****    * @brief C custom defined QSUB for M3 and M0 processors
 935:.\Include/arm_math.h ****    */
 936:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QSUB(
 937:.\Include/arm_math.h ****   int32_t x,
 938:.\Include/arm_math.h ****   int32_t y)
 939:.\Include/arm_math.h ****   {
 940:.\Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x - (q31_t)y)));
 941:.\Include/arm_math.h ****   }
 942:.\Include/arm_math.h **** 
 943:.\Include/arm_math.h **** 
 944:.\Include/arm_math.h ****   /*
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 34


 945:.\Include/arm_math.h ****    * @brief C custom defined SMLAD for M3 and M0 processors
 946:.\Include/arm_math.h ****    */
 947:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLAD(
 948:.\Include/arm_math.h ****   uint32_t x,
 949:.\Include/arm_math.h ****   uint32_t y,
 950:.\Include/arm_math.h ****   uint32_t sum)
 951:.\Include/arm_math.h ****   {
 952:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 656              		.loc 2 952 0
 657 043a D823     		mov	r3, #216
 658 043c FB18     		add	r3, r7, r3
 659 043e 1B68     		ldr	r3, [r3]
 660 0440 1B04     		lsl	r3, r3, #16
 661 0442 1B14     		asr	r3, r3, #16
 662 0444 D422     		mov	r2, #212
 663 0446 BA18     		add	r2, r7, r2
 664 0448 1268     		ldr	r2, [r2]
 665 044a 1204     		lsl	r2, r2, #16
 666 044c 1214     		asr	r2, r2, #16
 667 044e 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 668              		.loc 2 953 0
 669 0450 D823     		mov	r3, #216
 670 0452 FB18     		add	r3, r7, r3
 671 0454 1B68     		ldr	r3, [r3]
 672 0456 1B14     		asr	r3, r3, #16
 673 0458 D421     		mov	r1, #212
 674 045a 7918     		add	r1, r7, r1
 675 045c 0968     		ldr	r1, [r1]
 676 045e 0914     		asr	r1, r1, #16
 677 0460 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 678              		.loc 2 952 0
 679 0462 D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 680              		.loc 2 954 0
 681 0464 D023     		mov	r3, #208
 682 0466 FB18     		add	r3, r7, r3
 683 0468 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 684              		.loc 2 953 0
 685 046a D318     		add	r3, r2, r3
 686              	.LBE29:
 687              	.LBE28:
 688              		.loc 1 278 0
 689 046c 8422     		mov	r2, #132
 690 046e 5200     		lsl	r2, r2, #1
 691 0470 BA18     		add	r2, r7, r2
 692 0472 1360     		str	r3, [r2]
 279:Source\FilteringFunctions/arm_conv_opt_q7.c ****       acc2 = __SMLAD(x2, y1, acc2);
 693              		.loc 1 279 0
 694 0474 F423     		mov	r3, #244
 695 0476 FB18     		add	r3, r7, r3
 696 0478 1968     		ldr	r1, [r3]
 697 047a E423     		mov	r3, #228
 698 047c FB18     		add	r3, r7, r3
 699 047e 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 35


 700 0480 7B1C     		add	r3, r7, #1
 701 0482 FF33     		add	r3, r3, #255
 702 0484 1B68     		ldr	r3, [r3]
 703 0486 CC20     		mov	r0, #204
 704 0488 3818     		add	r0, r7, r0
 705 048a 0160     		str	r1, [r0]
 706 048c C821     		mov	r1, #200
 707 048e 7918     		add	r1, r7, r1
 708 0490 0A60     		str	r2, [r1]
 709 0492 C422     		mov	r2, #196
 710 0494 BA18     		add	r2, r7, r2
 711 0496 1360     		str	r3, [r2]
 712              	.LBB30:
 713              	.LBB31:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 714              		.loc 2 952 0
 715 0498 CC23     		mov	r3, #204
 716 049a FB18     		add	r3, r7, r3
 717 049c 1B68     		ldr	r3, [r3]
 718 049e 1B04     		lsl	r3, r3, #16
 719 04a0 1B14     		asr	r3, r3, #16
 720 04a2 C822     		mov	r2, #200
 721 04a4 BA18     		add	r2, r7, r2
 722 04a6 1268     		ldr	r2, [r2]
 723 04a8 1204     		lsl	r2, r2, #16
 724 04aa 1214     		asr	r2, r2, #16
 725 04ac 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 726              		.loc 2 953 0
 727 04ae CC23     		mov	r3, #204
 728 04b0 FB18     		add	r3, r7, r3
 729 04b2 1B68     		ldr	r3, [r3]
 730 04b4 1B14     		asr	r3, r3, #16
 731 04b6 C821     		mov	r1, #200
 732 04b8 7918     		add	r1, r7, r1
 733 04ba 0968     		ldr	r1, [r1]
 734 04bc 0914     		asr	r1, r1, #16
 735 04be 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 736              		.loc 2 952 0
 737 04c0 D218     		add	r2, r2, r3
 738              		.loc 2 954 0
 739 04c2 C423     		mov	r3, #196
 740 04c4 FB18     		add	r3, r7, r3
 741 04c6 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 742              		.loc 2 953 0
 743 04c8 D318     		add	r3, r2, r3
 744              	.LBE31:
 745              	.LBE30:
 746              		.loc 1 279 0
 747 04ca 7A1C     		add	r2, r7, #1
 748 04cc FF32     		add	r2, r2, #255
 749 04ce 1360     		str	r3, [r2]
 280:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 281:Source\FilteringFunctions/arm_conv_opt_q7.c ****       /* pack input data */
 282:Source\FilteringFunctions/arm_conv_opt_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 36


 283:Source\FilteringFunctions/arm_conv_opt_q7.c ****       x3 = __PKHBT(x2, x1, 0);
 750              		.loc 1 283 0
 751 04d0 F423     		mov	r3, #244
 752 04d2 FB18     		add	r3, r7, r3
 753 04d4 1B68     		ldr	r3, [r3]
 754 04d6 1B04     		lsl	r3, r3, #16
 755 04d8 1A0C     		lsr	r2, r3, #16
 756 04da F823     		mov	r3, #248
 757 04dc FB18     		add	r3, r7, r3
 758 04de 1B68     		ldr	r3, [r3]
 759 04e0 1B0C     		lsr	r3, r3, #16
 760 04e2 1B04     		lsl	r3, r3, #16
 761 04e4 1343     		orr	r3, r2
 762 04e6 E022     		mov	r2, #224
 763 04e8 BA18     		add	r2, r7, r2
 764 04ea 1360     		str	r3, [r2]
 284:Source\FilteringFunctions/arm_conv_opt_q7.c **** #else
 285:Source\FilteringFunctions/arm_conv_opt_q7.c ****       x3 = __PKHBT(x1, x2, 0);
 286:Source\FilteringFunctions/arm_conv_opt_q7.c **** #endif
 287:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 288:Source\FilteringFunctions/arm_conv_opt_q7.c ****       /* multiply and accumlate */
 289:Source\FilteringFunctions/arm_conv_opt_q7.c ****       acc1 = __SMLADX(x3, y1, acc1);
 765              		.loc 1 289 0
 766 04ec E023     		mov	r3, #224
 767 04ee FB18     		add	r3, r7, r3
 768 04f0 1968     		ldr	r1, [r3]
 769 04f2 E423     		mov	r3, #228
 770 04f4 FB18     		add	r3, r7, r3
 771 04f6 1A68     		ldr	r2, [r3]
 772 04f8 7B1D     		add	r3, r7, #5
 773 04fa FF33     		add	r3, r3, #255
 774 04fc 1B68     		ldr	r3, [r3]
 775 04fe C020     		mov	r0, #192
 776 0500 3818     		add	r0, r7, r0
 777 0502 0160     		str	r1, [r0]
 778 0504 BC21     		mov	r1, #188
 779 0506 7918     		add	r1, r7, r1
 780 0508 0A60     		str	r2, [r1]
 781 050a B822     		mov	r2, #184
 782 050c BA18     		add	r2, r7, r2
 783 050e 1360     		str	r3, [r2]
 784              	.LBB32:
 785              	.LBB33:
 955:.\Include/arm_math.h ****   }
 956:.\Include/arm_math.h **** 
 957:.\Include/arm_math.h **** 
 958:.\Include/arm_math.h ****   /*
 959:.\Include/arm_math.h ****    * @brief C custom defined SMLADX for M3 and M0 processors
 960:.\Include/arm_math.h ****    */
 961:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLADX(
 962:.\Include/arm_math.h ****   uint32_t x,
 963:.\Include/arm_math.h ****   uint32_t y,
 964:.\Include/arm_math.h ****   uint32_t sum)
 965:.\Include/arm_math.h ****   {
 966:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 786              		.loc 2 966 0
 787 0510 C023     		mov	r3, #192
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 37


 788 0512 FB18     		add	r3, r7, r3
 789 0514 1B68     		ldr	r3, [r3]
 790 0516 1B04     		lsl	r3, r3, #16
 791 0518 1B14     		asr	r3, r3, #16
 792 051a BC22     		mov	r2, #188
 793 051c BA18     		add	r2, r7, r2
 794 051e 1268     		ldr	r2, [r2]
 795 0520 1214     		asr	r2, r2, #16
 796 0522 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 797              		.loc 2 967 0
 798 0524 C023     		mov	r3, #192
 799 0526 FB18     		add	r3, r7, r3
 800 0528 1B68     		ldr	r3, [r3]
 801 052a 1B14     		asr	r3, r3, #16
 802 052c BC21     		mov	r1, #188
 803 052e 7918     		add	r1, r7, r1
 804 0530 0968     		ldr	r1, [r1]
 805 0532 0904     		lsl	r1, r1, #16
 806 0534 0914     		asr	r1, r1, #16
 807 0536 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 808              		.loc 2 966 0
 809 0538 D218     		add	r2, r2, r3
 968:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 810              		.loc 2 968 0
 811 053a B823     		mov	r3, #184
 812 053c FB18     		add	r3, r7, r3
 813 053e 1B68     		ldr	r3, [r3]
 967:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 814              		.loc 2 967 0
 815 0540 D318     		add	r3, r2, r3
 816              	.LBE33:
 817              	.LBE32:
 818              		.loc 1 289 0
 819 0542 7A1D     		add	r2, r7, #5
 820 0544 FF32     		add	r2, r2, #255
 821 0546 1360     		str	r3, [r2]
 290:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 291:Source\FilteringFunctions/arm_conv_opt_q7.c ****       /* Read next two samples from scratch1 buffer */
 292:Source\FilteringFunctions/arm_conv_opt_q7.c ****       x1 = *__SIMD32(pScr1)++;
 822              		.loc 1 292 0
 823 0548 1423     		mov	r3, #20
 824 054a FB18     		add	r3, r7, r3
 825 054c 1A68     		ldr	r2, [r3]
 826 054e 111D     		add	r1, r2, #4
 827 0550 1960     		str	r1, [r3]
 828 0552 1368     		ldr	r3, [r2]
 829 0554 F822     		mov	r2, #248
 830 0556 BA18     		add	r2, r7, r2
 831 0558 1360     		str	r3, [r2]
 293:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 294:Source\FilteringFunctions/arm_conv_opt_q7.c ****       /* pack input data */
 295:Source\FilteringFunctions/arm_conv_opt_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
 296:Source\FilteringFunctions/arm_conv_opt_q7.c ****       x3 = __PKHBT(x1, x2, 0);
 832              		.loc 1 296 0
 833 055a F823     		mov	r3, #248
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 38


 834 055c FB18     		add	r3, r7, r3
 835 055e 1B68     		ldr	r3, [r3]
 836 0560 1B04     		lsl	r3, r3, #16
 837 0562 1A0C     		lsr	r2, r3, #16
 838 0564 F423     		mov	r3, #244
 839 0566 FB18     		add	r3, r7, r3
 840 0568 1B68     		ldr	r3, [r3]
 841 056a 1B0C     		lsr	r3, r3, #16
 842 056c 1B04     		lsl	r3, r3, #16
 843 056e 1343     		orr	r3, r2
 844 0570 E022     		mov	r2, #224
 845 0572 BA18     		add	r2, r7, r2
 846 0574 1360     		str	r3, [r2]
 297:Source\FilteringFunctions/arm_conv_opt_q7.c **** #else
 298:Source\FilteringFunctions/arm_conv_opt_q7.c ****       x3 = __PKHBT(x2, x1, 0);
 299:Source\FilteringFunctions/arm_conv_opt_q7.c **** #endif
 300:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 301:Source\FilteringFunctions/arm_conv_opt_q7.c ****       acc3 = __SMLADX(x3, y1, acc3);
 847              		.loc 1 301 0
 848 0576 E023     		mov	r3, #224
 849 0578 FB18     		add	r3, r7, r3
 850 057a 1968     		ldr	r1, [r3]
 851 057c E423     		mov	r3, #228
 852 057e FB18     		add	r3, r7, r3
 853 0580 1A68     		ldr	r2, [r3]
 854 0582 FC23     		mov	r3, #252
 855 0584 FB18     		add	r3, r7, r3
 856 0586 1B68     		ldr	r3, [r3]
 857 0588 B420     		mov	r0, #180
 858 058a 3818     		add	r0, r7, r0
 859 058c 0160     		str	r1, [r0]
 860 058e B021     		mov	r1, #176
 861 0590 7918     		add	r1, r7, r1
 862 0592 0A60     		str	r2, [r1]
 863 0594 AC22     		mov	r2, #172
 864 0596 BA18     		add	r2, r7, r2
 865 0598 1360     		str	r3, [r2]
 866              	.LBB34:
 867              	.LBB35:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 868              		.loc 2 966 0
 869 059a B423     		mov	r3, #180
 870 059c FB18     		add	r3, r7, r3
 871 059e 1B68     		ldr	r3, [r3]
 872 05a0 1B04     		lsl	r3, r3, #16
 873 05a2 1B14     		asr	r3, r3, #16
 874 05a4 B022     		mov	r2, #176
 875 05a6 BA18     		add	r2, r7, r2
 876 05a8 1268     		ldr	r2, [r2]
 877 05aa 1214     		asr	r2, r2, #16
 878 05ac 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 879              		.loc 2 967 0
 880 05ae B423     		mov	r3, #180
 881 05b0 FB18     		add	r3, r7, r3
 882 05b2 1B68     		ldr	r3, [r3]
 883 05b4 1B14     		asr	r3, r3, #16
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 39


 884 05b6 B021     		mov	r1, #176
 885 05b8 7918     		add	r1, r7, r1
 886 05ba 0968     		ldr	r1, [r1]
 887 05bc 0904     		lsl	r1, r1, #16
 888 05be 0914     		asr	r1, r1, #16
 889 05c0 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 890              		.loc 2 966 0
 891 05c2 D218     		add	r2, r2, r3
 892              		.loc 2 968 0
 893 05c4 AC23     		mov	r3, #172
 894 05c6 FB18     		add	r3, r7, r3
 895 05c8 1B68     		ldr	r3, [r3]
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 896              		.loc 2 967 0
 897 05ca D318     		add	r3, r2, r3
 898              	.LBE35:
 899              	.LBE34:
 900              		.loc 1 301 0
 901 05cc FC22     		mov	r2, #252
 902 05ce BA18     		add	r2, r7, r2
 903 05d0 1360     		str	r3, [r2]
 302:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 303:Source\FilteringFunctions/arm_conv_opt_q7.c ****       /* Read four samples from smaller buffer */
 304:Source\FilteringFunctions/arm_conv_opt_q7.c ****       y1 = _SIMD32_OFFSET(pScr2 + 2u);
 904              		.loc 1 304 0
 905 05d2 9223     		mov	r3, #146
 906 05d4 5B00     		lsl	r3, r3, #1
 907 05d6 FB18     		add	r3, r7, r3
 908 05d8 1B68     		ldr	r3, [r3]
 909 05da 5B68     		ldr	r3, [r3, #4]
 910 05dc E422     		mov	r2, #228
 911 05de BA18     		add	r2, r7, r2
 912 05e0 1360     		str	r3, [r2]
 305:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 306:Source\FilteringFunctions/arm_conv_opt_q7.c ****       acc0 = __SMLAD(x2, y1, acc0);
 913              		.loc 1 306 0
 914 05e2 F423     		mov	r3, #244
 915 05e4 FB18     		add	r3, r7, r3
 916 05e6 1968     		ldr	r1, [r3]
 917 05e8 E423     		mov	r3, #228
 918 05ea FB18     		add	r3, r7, r3
 919 05ec 1A68     		ldr	r2, [r3]
 920 05ee 8423     		mov	r3, #132
 921 05f0 5B00     		lsl	r3, r3, #1
 922 05f2 FB18     		add	r3, r7, r3
 923 05f4 1B68     		ldr	r3, [r3]
 924 05f6 A820     		mov	r0, #168
 925 05f8 3818     		add	r0, r7, r0
 926 05fa 0160     		str	r1, [r0]
 927 05fc A421     		mov	r1, #164
 928 05fe 7918     		add	r1, r7, r1
 929 0600 0A60     		str	r2, [r1]
 930 0602 A022     		mov	r2, #160
 931 0604 BA18     		add	r2, r7, r2
 932 0606 1360     		str	r3, [r2]
 933              	.LBB36:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 40


 934              	.LBB37:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 935              		.loc 2 952 0
 936 0608 A823     		mov	r3, #168
 937 060a FB18     		add	r3, r7, r3
 938 060c 1B68     		ldr	r3, [r3]
 939 060e 1B04     		lsl	r3, r3, #16
 940 0610 1B14     		asr	r3, r3, #16
 941 0612 A422     		mov	r2, #164
 942 0614 BA18     		add	r2, r7, r2
 943 0616 1268     		ldr	r2, [r2]
 944 0618 1204     		lsl	r2, r2, #16
 945 061a 1214     		asr	r2, r2, #16
 946 061c 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 947              		.loc 2 953 0
 948 061e A823     		mov	r3, #168
 949 0620 FB18     		add	r3, r7, r3
 950 0622 1B68     		ldr	r3, [r3]
 951 0624 1B14     		asr	r3, r3, #16
 952 0626 A421     		mov	r1, #164
 953 0628 7918     		add	r1, r7, r1
 954 062a 0968     		ldr	r1, [r1]
 955 062c 0914     		asr	r1, r1, #16
 956 062e 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 957              		.loc 2 952 0
 958 0630 D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 959              		.loc 2 954 0
 960 0632 A023     		mov	r3, #160
 961 0634 FB18     		add	r3, r7, r3
 962 0636 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 963              		.loc 2 953 0
 964 0638 D318     		add	r3, r2, r3
 965              	.LBE37:
 966              	.LBE36:
 967              		.loc 1 306 0
 968 063a 8422     		mov	r2, #132
 969 063c 5200     		lsl	r2, r2, #1
 970 063e BA18     		add	r2, r7, r2
 971 0640 1360     		str	r3, [r2]
 307:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 308:Source\FilteringFunctions/arm_conv_opt_q7.c ****       acc2 = __SMLAD(x1, y1, acc2);
 972              		.loc 1 308 0
 973 0642 F823     		mov	r3, #248
 974 0644 FB18     		add	r3, r7, r3
 975 0646 1968     		ldr	r1, [r3]
 976 0648 E423     		mov	r3, #228
 977 064a FB18     		add	r3, r7, r3
 978 064c 1A68     		ldr	r2, [r3]
 979 064e 7B1C     		add	r3, r7, #1
 980 0650 FF33     		add	r3, r3, #255
 981 0652 1B68     		ldr	r3, [r3]
 982 0654 9C20     		mov	r0, #156
 983 0656 3818     		add	r0, r7, r0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 41


 984 0658 0160     		str	r1, [r0]
 985 065a 9821     		mov	r1, #152
 986 065c 7918     		add	r1, r7, r1
 987 065e 0A60     		str	r2, [r1]
 988 0660 9422     		mov	r2, #148
 989 0662 BA18     		add	r2, r7, r2
 990 0664 1360     		str	r3, [r2]
 991              	.LBB38:
 992              	.LBB39:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 993              		.loc 2 952 0
 994 0666 9C23     		mov	r3, #156
 995 0668 FB18     		add	r3, r7, r3
 996 066a 1B68     		ldr	r3, [r3]
 997 066c 1B04     		lsl	r3, r3, #16
 998 066e 1B14     		asr	r3, r3, #16
 999 0670 9822     		mov	r2, #152
 1000 0672 BA18     		add	r2, r7, r2
 1001 0674 1268     		ldr	r2, [r2]
 1002 0676 1204     		lsl	r2, r2, #16
 1003 0678 1214     		asr	r2, r2, #16
 1004 067a 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1005              		.loc 2 953 0
 1006 067c 9C23     		mov	r3, #156
 1007 067e FB18     		add	r3, r7, r3
 1008 0680 1B68     		ldr	r3, [r3]
 1009 0682 1B14     		asr	r3, r3, #16
 1010 0684 9821     		mov	r1, #152
 1011 0686 7918     		add	r1, r7, r1
 1012 0688 0968     		ldr	r1, [r1]
 1013 068a 0914     		asr	r1, r1, #16
 1014 068c 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1015              		.loc 2 952 0
 1016 068e D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 1017              		.loc 2 954 0
 1018 0690 9423     		mov	r3, #148
 1019 0692 FB18     		add	r3, r7, r3
 1020 0694 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1021              		.loc 2 953 0
 1022 0696 D318     		add	r3, r2, r3
 1023              	.LBE39:
 1024              	.LBE38:
 1025              		.loc 1 308 0
 1026 0698 7A1C     		add	r2, r7, #1
 1027 069a FF32     		add	r2, r2, #255
 1028 069c 1360     		str	r3, [r2]
 309:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 310:Source\FilteringFunctions/arm_conv_opt_q7.c ****       acc1 = __SMLADX(x3, y1, acc1);
 1029              		.loc 1 310 0
 1030 069e E023     		mov	r3, #224
 1031 06a0 FB18     		add	r3, r7, r3
 1032 06a2 1968     		ldr	r1, [r3]
 1033 06a4 E423     		mov	r3, #228
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 42


 1034 06a6 FB18     		add	r3, r7, r3
 1035 06a8 1A68     		ldr	r2, [r3]
 1036 06aa 7B1D     		add	r3, r7, #5
 1037 06ac FF33     		add	r3, r3, #255
 1038 06ae 1B68     		ldr	r3, [r3]
 1039 06b0 9020     		mov	r0, #144
 1040 06b2 3818     		add	r0, r7, r0
 1041 06b4 0160     		str	r1, [r0]
 1042 06b6 8C21     		mov	r1, #140
 1043 06b8 7918     		add	r1, r7, r1
 1044 06ba 0A60     		str	r2, [r1]
 1045 06bc 8822     		mov	r2, #136
 1046 06be BA18     		add	r2, r7, r2
 1047 06c0 1360     		str	r3, [r2]
 1048              	.LBB40:
 1049              	.LBB41:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 1050              		.loc 2 966 0
 1051 06c2 9023     		mov	r3, #144
 1052 06c4 FB18     		add	r3, r7, r3
 1053 06c6 1B68     		ldr	r3, [r3]
 1054 06c8 1B04     		lsl	r3, r3, #16
 1055 06ca 1B14     		asr	r3, r3, #16
 1056 06cc 8C22     		mov	r2, #140
 1057 06ce BA18     		add	r2, r7, r2
 1058 06d0 1268     		ldr	r2, [r2]
 1059 06d2 1214     		asr	r2, r2, #16
 1060 06d4 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1061              		.loc 2 967 0
 1062 06d6 9023     		mov	r3, #144
 1063 06d8 FB18     		add	r3, r7, r3
 1064 06da 1B68     		ldr	r3, [r3]
 1065 06dc 1B14     		asr	r3, r3, #16
 1066 06de 8C21     		mov	r1, #140
 1067 06e0 7918     		add	r1, r7, r1
 1068 06e2 0968     		ldr	r1, [r1]
 1069 06e4 0904     		lsl	r1, r1, #16
 1070 06e6 0914     		asr	r1, r1, #16
 1071 06e8 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 1072              		.loc 2 966 0
 1073 06ea D218     		add	r2, r2, r3
 1074              		.loc 2 968 0
 1075 06ec 8823     		mov	r3, #136
 1076 06ee FB18     		add	r3, r7, r3
 1077 06f0 1B68     		ldr	r3, [r3]
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1078              		.loc 2 967 0
 1079 06f2 D318     		add	r3, r2, r3
 1080              	.LBE41:
 1081              	.LBE40:
 1082              		.loc 1 310 0
 1083 06f4 7A1D     		add	r2, r7, #5
 1084 06f6 FF32     		add	r2, r2, #255
 1085 06f8 1360     		str	r3, [r2]
 311:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 43


 312:Source\FilteringFunctions/arm_conv_opt_q7.c ****       x2 = *__SIMD32(pScr1)++;
 1086              		.loc 1 312 0
 1087 06fa 1423     		mov	r3, #20
 1088 06fc FB18     		add	r3, r7, r3
 1089 06fe 1A68     		ldr	r2, [r3]
 1090 0700 111D     		add	r1, r2, #4
 1091 0702 1960     		str	r1, [r3]
 1092 0704 1368     		ldr	r3, [r2]
 1093 0706 F422     		mov	r2, #244
 1094 0708 BA18     		add	r2, r7, r2
 1095 070a 1360     		str	r3, [r2]
 313:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 314:Source\FilteringFunctions/arm_conv_opt_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
 315:Source\FilteringFunctions/arm_conv_opt_q7.c ****       x3 = __PKHBT(x2, x1, 0);
 1096              		.loc 1 315 0
 1097 070c F423     		mov	r3, #244
 1098 070e FB18     		add	r3, r7, r3
 1099 0710 1B68     		ldr	r3, [r3]
 1100 0712 1B04     		lsl	r3, r3, #16
 1101 0714 1A0C     		lsr	r2, r3, #16
 1102 0716 F823     		mov	r3, #248
 1103 0718 FB18     		add	r3, r7, r3
 1104 071a 1B68     		ldr	r3, [r3]
 1105 071c 1B0C     		lsr	r3, r3, #16
 1106 071e 1B04     		lsl	r3, r3, #16
 1107 0720 1343     		orr	r3, r2
 1108 0722 E022     		mov	r2, #224
 1109 0724 BA18     		add	r2, r7, r2
 1110 0726 1360     		str	r3, [r2]
 316:Source\FilteringFunctions/arm_conv_opt_q7.c **** #else
 317:Source\FilteringFunctions/arm_conv_opt_q7.c ****       x3 = __PKHBT(x1, x2, 0);
 318:Source\FilteringFunctions/arm_conv_opt_q7.c **** #endif
 319:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 320:Source\FilteringFunctions/arm_conv_opt_q7.c ****       acc3 = __SMLADX(x3, y1, acc3);
 1111              		.loc 1 320 0
 1112 0728 E023     		mov	r3, #224
 1113 072a FB18     		add	r3, r7, r3
 1114 072c 1968     		ldr	r1, [r3]
 1115 072e E423     		mov	r3, #228
 1116 0730 FB18     		add	r3, r7, r3
 1117 0732 1A68     		ldr	r2, [r3]
 1118 0734 FC23     		mov	r3, #252
 1119 0736 FB18     		add	r3, r7, r3
 1120 0738 1B68     		ldr	r3, [r3]
 1121 073a 8420     		mov	r0, #132
 1122 073c 3818     		add	r0, r7, r0
 1123 073e 0160     		str	r1, [r0]
 1124 0740 8021     		mov	r1, #128
 1125 0742 7918     		add	r1, r7, r1
 1126 0744 0A60     		str	r2, [r1]
 1127 0746 FB67     		str	r3, [r7, #124]
 1128              	.LBB42:
 1129              	.LBB43:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 1130              		.loc 2 966 0
 1131 0748 8423     		mov	r3, #132
 1132 074a FB18     		add	r3, r7, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 44


 1133 074c 1B68     		ldr	r3, [r3]
 1134 074e 1B04     		lsl	r3, r3, #16
 1135 0750 1B14     		asr	r3, r3, #16
 1136 0752 8022     		mov	r2, #128
 1137 0754 BA18     		add	r2, r7, r2
 1138 0756 1268     		ldr	r2, [r2]
 1139 0758 1214     		asr	r2, r2, #16
 1140 075a 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1141              		.loc 2 967 0
 1142 075c 8423     		mov	r3, #132
 1143 075e FB18     		add	r3, r7, r3
 1144 0760 1B68     		ldr	r3, [r3]
 1145 0762 1B14     		asr	r3, r3, #16
 1146 0764 8021     		mov	r1, #128
 1147 0766 7918     		add	r1, r7, r1
 1148 0768 0968     		ldr	r1, [r1]
 1149 076a 0904     		lsl	r1, r1, #16
 1150 076c 0914     		asr	r1, r1, #16
 1151 076e 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 1152              		.loc 2 966 0
 1153 0770 D218     		add	r2, r2, r3
 1154              		.loc 2 968 0
 1155 0772 FB6F     		ldr	r3, [r7, #124]
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1156              		.loc 2 967 0
 1157 0774 D318     		add	r3, r2, r3
 1158              	.LBE43:
 1159              	.LBE42:
 1160              		.loc 1 320 0
 1161 0776 FC22     		mov	r2, #252
 1162 0778 BA18     		add	r2, r7, r2
 1163 077a 1360     		str	r3, [r2]
 321:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 322:Source\FilteringFunctions/arm_conv_opt_q7.c ****       pScr2 += 4u;
 1164              		.loc 1 322 0
 1165 077c 9223     		mov	r3, #146
 1166 077e 5B00     		lsl	r3, r3, #1
 1167 0780 FB18     		add	r3, r7, r3
 1168 0782 1B68     		ldr	r3, [r3]
 1169 0784 0833     		add	r3, r3, #8
 1170 0786 9222     		mov	r2, #146
 1171 0788 5200     		lsl	r2, r2, #1
 1172 078a BA18     		add	r2, r7, r2
 1173 078c 1360     		str	r3, [r2]
 323:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 324:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 325:Source\FilteringFunctions/arm_conv_opt_q7.c ****       /* Decrement the loop counter */
 326:Source\FilteringFunctions/arm_conv_opt_q7.c ****       tapCnt--;
 1174              		.loc 1 326 0
 1175 078e 8823     		mov	r3, #136
 1176 0790 5B00     		lsl	r3, r3, #1
 1177 0792 FB18     		add	r3, r7, r3
 1178 0794 1B68     		ldr	r3, [r3]
 1179 0796 013B     		sub	r3, r3, #1
 1180 0798 8822     		mov	r2, #136
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 45


 1181 079a 5200     		lsl	r2, r2, #1
 1182 079c BA18     		add	r2, r7, r2
 1183 079e 1360     		str	r3, [r2]
 1184              	.L13:
 271:Source\FilteringFunctions/arm_conv_opt_q7.c ****     {
 1185              		.loc 1 271 0
 1186 07a0 8823     		mov	r3, #136
 1187 07a2 5B00     		lsl	r3, r3, #1
 1188 07a4 FB18     		add	r3, r7, r3
 1189 07a6 1B68     		ldr	r3, [r3]
 1190 07a8 002B     		cmp	r3, #0
 1191 07aa 00D0     		beq	.LCB1056
 1192 07ac 2AE6     		b	.L22	@long jump
 1193              	.LCB1056:
 327:Source\FilteringFunctions/arm_conv_opt_q7.c ****     }
 328:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 329:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 330:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 331:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Update scratch pointer for remaining samples of smaller length sequence */
 332:Source\FilteringFunctions/arm_conv_opt_q7.c ****     pScr1 -= 4u;
 1194              		.loc 1 332 0
 1195 07ae 7B69     		ldr	r3, [r7, #20]
 1196 07b0 083B     		sub	r3, r3, #8
 1197 07b2 7B61     		str	r3, [r7, #20]
 333:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 334:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 335:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* apply same above for remaining samples of smaller length sequence */
 336:Source\FilteringFunctions/arm_conv_opt_q7.c ****     tapCnt = (srcBLen) & 3u;
 1198              		.loc 1 336 0
 1199 07b4 3B68     		ldr	r3, [r7]
 1200 07b6 0322     		mov	r2, #3
 1201 07b8 1340     		and	r3, r2
 1202 07ba 8822     		mov	r2, #136
 1203 07bc 5200     		lsl	r2, r2, #1
 1204 07be BA18     		add	r2, r7, r2
 1205 07c0 1360     		str	r3, [r2]
 337:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 338:Source\FilteringFunctions/arm_conv_opt_q7.c ****     while (tapCnt > 0u)
 1206              		.loc 1 338 0
 1207 07c2 5EE0     		b	.L23
 1208              	.L24:
 339:Source\FilteringFunctions/arm_conv_opt_q7.c ****     {
 340:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 341:Source\FilteringFunctions/arm_conv_opt_q7.c ****       /* accumlate the results */
 342:Source\FilteringFunctions/arm_conv_opt_q7.c ****       acc0 += (*pScr1++ * *pScr2);
 1209              		.loc 1 342 0
 1210 07c4 7B69     		ldr	r3, [r7, #20]
 1211 07c6 9A1C     		add	r2, r3, #2
 1212 07c8 7A61     		str	r2, [r7, #20]
 1213 07ca 1B88     		ldrh	r3, [r3]
 1214 07cc 1BB2     		sxth	r3, r3
 1215 07ce 9222     		mov	r2, #146
 1216 07d0 5200     		lsl	r2, r2, #1
 1217 07d2 BA18     		add	r2, r7, r2
 1218 07d4 1268     		ldr	r2, [r2]
 1219 07d6 1288     		ldrh	r2, [r2]
 1220 07d8 12B2     		sxth	r2, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 46


 1221 07da 5343     		mul	r3, r2
 1222 07dc 8422     		mov	r2, #132
 1223 07de 5200     		lsl	r2, r2, #1
 1224 07e0 BA18     		add	r2, r7, r2
 1225 07e2 1268     		ldr	r2, [r2]
 1226 07e4 D318     		add	r3, r2, r3
 1227 07e6 8422     		mov	r2, #132
 1228 07e8 5200     		lsl	r2, r2, #1
 1229 07ea BA18     		add	r2, r7, r2
 1230 07ec 1360     		str	r3, [r2]
 343:Source\FilteringFunctions/arm_conv_opt_q7.c ****       acc1 += (*pScr1++ * *pScr2);
 1231              		.loc 1 343 0
 1232 07ee 7B69     		ldr	r3, [r7, #20]
 1233 07f0 9A1C     		add	r2, r3, #2
 1234 07f2 7A61     		str	r2, [r7, #20]
 1235 07f4 1B88     		ldrh	r3, [r3]
 1236 07f6 1BB2     		sxth	r3, r3
 1237 07f8 9222     		mov	r2, #146
 1238 07fa 5200     		lsl	r2, r2, #1
 1239 07fc BA18     		add	r2, r7, r2
 1240 07fe 1268     		ldr	r2, [r2]
 1241 0800 1288     		ldrh	r2, [r2]
 1242 0802 12B2     		sxth	r2, r2
 1243 0804 5343     		mul	r3, r2
 1244 0806 7A1D     		add	r2, r7, #5
 1245 0808 FF32     		add	r2, r2, #255
 1246 080a 1268     		ldr	r2, [r2]
 1247 080c D318     		add	r3, r2, r3
 1248 080e 7A1D     		add	r2, r7, #5
 1249 0810 FF32     		add	r2, r2, #255
 1250 0812 1360     		str	r3, [r2]
 344:Source\FilteringFunctions/arm_conv_opt_q7.c ****       acc2 += (*pScr1++ * *pScr2);
 1251              		.loc 1 344 0
 1252 0814 7B69     		ldr	r3, [r7, #20]
 1253 0816 9A1C     		add	r2, r3, #2
 1254 0818 7A61     		str	r2, [r7, #20]
 1255 081a 1B88     		ldrh	r3, [r3]
 1256 081c 1BB2     		sxth	r3, r3
 1257 081e 9222     		mov	r2, #146
 1258 0820 5200     		lsl	r2, r2, #1
 1259 0822 BA18     		add	r2, r7, r2
 1260 0824 1268     		ldr	r2, [r2]
 1261 0826 1288     		ldrh	r2, [r2]
 1262 0828 12B2     		sxth	r2, r2
 1263 082a 5343     		mul	r3, r2
 1264 082c 7A1C     		add	r2, r7, #1
 1265 082e FF32     		add	r2, r2, #255
 1266 0830 1268     		ldr	r2, [r2]
 1267 0832 D318     		add	r3, r2, r3
 1268 0834 7A1C     		add	r2, r7, #1
 1269 0836 FF32     		add	r2, r2, #255
 1270 0838 1360     		str	r3, [r2]
 345:Source\FilteringFunctions/arm_conv_opt_q7.c ****       acc3 += (*pScr1++ * *pScr2++);
 1271              		.loc 1 345 0
 1272 083a 7B69     		ldr	r3, [r7, #20]
 1273 083c 9A1C     		add	r2, r3, #2
 1274 083e 7A61     		str	r2, [r7, #20]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 47


 1275 0840 1B88     		ldrh	r3, [r3]
 1276 0842 1AB2     		sxth	r2, r3
 1277 0844 9223     		mov	r3, #146
 1278 0846 5B00     		lsl	r3, r3, #1
 1279 0848 FB18     		add	r3, r7, r3
 1280 084a 1B68     		ldr	r3, [r3]
 1281 084c 991C     		add	r1, r3, #2
 1282 084e 9220     		mov	r0, #146
 1283 0850 4000     		lsl	r0, r0, #1
 1284 0852 3818     		add	r0, r7, r0
 1285 0854 0160     		str	r1, [r0]
 1286 0856 1B88     		ldrh	r3, [r3]
 1287 0858 1BB2     		sxth	r3, r3
 1288 085a 5343     		mul	r3, r2
 1289 085c FC22     		mov	r2, #252
 1290 085e BA18     		add	r2, r7, r2
 1291 0860 1268     		ldr	r2, [r2]
 1292 0862 D318     		add	r3, r2, r3
 1293 0864 FC22     		mov	r2, #252
 1294 0866 BA18     		add	r2, r7, r2
 1295 0868 1360     		str	r3, [r2]
 346:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 347:Source\FilteringFunctions/arm_conv_opt_q7.c ****       pScr1 -= 3u;
 1296              		.loc 1 347 0
 1297 086a 7B69     		ldr	r3, [r7, #20]
 1298 086c 063B     		sub	r3, r3, #6
 1299 086e 7B61     		str	r3, [r7, #20]
 348:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 349:Source\FilteringFunctions/arm_conv_opt_q7.c ****       /* Decrement the loop counter */
 350:Source\FilteringFunctions/arm_conv_opt_q7.c ****       tapCnt--;
 1300              		.loc 1 350 0
 1301 0870 8823     		mov	r3, #136
 1302 0872 5B00     		lsl	r3, r3, #1
 1303 0874 FB18     		add	r3, r7, r3
 1304 0876 1B68     		ldr	r3, [r3]
 1305 0878 013B     		sub	r3, r3, #1
 1306 087a 8822     		mov	r2, #136
 1307 087c 5200     		lsl	r2, r2, #1
 1308 087e BA18     		add	r2, r7, r2
 1309 0880 1360     		str	r3, [r2]
 1310              	.L23:
 338:Source\FilteringFunctions/arm_conv_opt_q7.c ****     {
 1311              		.loc 1 338 0
 1312 0882 8823     		mov	r3, #136
 1313 0884 5B00     		lsl	r3, r3, #1
 1314 0886 FB18     		add	r3, r7, r3
 1315 0888 1B68     		ldr	r3, [r3]
 1316 088a 002B     		cmp	r3, #0
 1317 088c 9AD1     		bne	.L24
 351:Source\FilteringFunctions/arm_conv_opt_q7.c ****     }
 352:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 353:Source\FilteringFunctions/arm_conv_opt_q7.c ****     blkCnt--;
 1318              		.loc 1 353 0
 1319 088e 8A23     		mov	r3, #138
 1320 0890 5B00     		lsl	r3, r3, #1
 1321 0892 FB18     		add	r3, r7, r3
 1322 0894 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 48


 1323 0896 013B     		sub	r3, r3, #1
 1324 0898 8A22     		mov	r2, #138
 1325 089a 5200     		lsl	r2, r2, #1
 1326 089c BA18     		add	r2, r7, r2
 1327 089e 1360     		str	r3, [r2]
 354:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 355:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Store the result in the accumulator in the destination buffer. */
 356:Source\FilteringFunctions/arm_conv_opt_q7.c ****     out0 = (q7_t) (__SSAT(acc0 >> 7u, 8));
 1328              		.loc 1 356 0
 1329 08a0 8423     		mov	r3, #132
 1330 08a2 5B00     		lsl	r3, r3, #1
 1331 08a4 FB18     		add	r3, r7, r3
 1332 08a6 1B68     		ldr	r3, [r3]
 1333 08a8 DB11     		asr	r3, r3, #7
 1334 08aa BB67     		str	r3, [r7, #120]
 1335 08ac 0823     		mov	r3, #8
 1336 08ae 7B67     		str	r3, [r7, #116]
 1337              	.LBB44:
 1338              	.LBB45:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1339              		.loc 2 699 0
 1340 08b0 0123     		mov	r3, #1
 1341 08b2 3B67     		str	r3, [r7, #112]
 700:.\Include/arm_math.h ****     {
 1342              		.loc 2 700 0
 1343 08b4 0023     		mov	r3, #0
 1344 08b6 FB66     		str	r3, [r7, #108]
 1345 08b8 05E0     		b	.L25
 1346              	.L26:
 702:.\Include/arm_math.h ****     }
 1347              		.loc 2 702 0
 1348 08ba 3B6F     		ldr	r3, [r7, #112]
 1349 08bc 5B00     		lsl	r3, r3, #1
 1350 08be 3B67     		str	r3, [r7, #112]
 700:.\Include/arm_math.h ****     {
 1351              		.loc 2 700 0
 1352 08c0 FB6E     		ldr	r3, [r7, #108]
 1353 08c2 0133     		add	r3, r3, #1
 1354 08c4 FB66     		str	r3, [r7, #108]
 1355              	.L25:
 1356 08c6 7B6F     		ldr	r3, [r7, #116]
 1357 08c8 013B     		sub	r3, r3, #1
 1358 08ca FA6E     		ldr	r2, [r7, #108]
 1359 08cc 9A42     		cmp	r2, r3
 1360 08ce F4D3     		bcc	.L26
 705:.\Include/arm_math.h ****     {
 1361              		.loc 2 705 0
 1362 08d0 BB6F     		ldr	r3, [r7, #120]
 1363 08d2 002B     		cmp	r3, #0
 1364 08d4 09DD     		ble	.L27
 707:.\Include/arm_math.h **** 
 1365              		.loc 2 707 0
 1366 08d6 3B6F     		ldr	r3, [r7, #112]
 1367 08d8 013B     		sub	r3, r3, #1
 1368 08da 3B67     		str	r3, [r7, #112]
 709:.\Include/arm_math.h ****       {
 1369              		.loc 2 709 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 49


 1370 08dc BA6F     		ldr	r2, [r7, #120]
 1371 08de 3B6F     		ldr	r3, [r7, #112]
 1372 08e0 9A42     		cmp	r2, r3
 1373 08e2 0CDD     		ble	.L62
 711:.\Include/arm_math.h ****       }
 1374              		.loc 2 711 0
 1375 08e4 3B6F     		ldr	r3, [r7, #112]
 1376 08e6 BB67     		str	r3, [r7, #120]
 1377 08e8 0AE0     		b	.L29
 1378              	.L27:
 716:.\Include/arm_math.h **** 
 1379              		.loc 2 716 0
 1380 08ea 3B6F     		ldr	r3, [r7, #112]
 1381 08ec 5B42     		neg	r3, r3
 1382 08ee BB66     		str	r3, [r7, #104]
 718:.\Include/arm_math.h ****       {
 1383              		.loc 2 718 0
 1384 08f0 BA6F     		ldr	r2, [r7, #120]
 1385 08f2 BB6E     		ldr	r3, [r7, #104]
 1386 08f4 9A42     		cmp	r2, r3
 1387 08f6 03DA     		bge	.L29
 720:.\Include/arm_math.h ****       }
 1388              		.loc 2 720 0
 1389 08f8 BB6E     		ldr	r3, [r7, #104]
 1390 08fa BB67     		str	r3, [r7, #120]
 1391 08fc 00E0     		b	.L29
 1392              	.L62:
 711:.\Include/arm_math.h ****       }
 1393              		.loc 2 711 0
 1394 08fe C046     		mov	r8, r8
 1395              	.L29:
 723:.\Include/arm_math.h ****   }
 1396              		.loc 2 723 0
 1397 0900 BA6F     		ldr	r2, [r7, #120]
 1398              	.LBE45:
 1399              	.LBE44:
 1400              		.loc 1 356 0
 1401 0902 DF23     		mov	r3, #223
 1402 0904 FB18     		add	r3, r7, r3
 1403 0906 1A70     		strb	r2, [r3]
 357:Source\FilteringFunctions/arm_conv_opt_q7.c ****     out1 = (q7_t) (__SSAT(acc1 >> 7u, 8));
 1404              		.loc 1 357 0
 1405 0908 7B1D     		add	r3, r7, #5
 1406 090a FF33     		add	r3, r3, #255
 1407 090c 1B68     		ldr	r3, [r3]
 1408 090e DB11     		asr	r3, r3, #7
 1409 0910 7B66     		str	r3, [r7, #100]
 1410 0912 0823     		mov	r3, #8
 1411 0914 3B66     		str	r3, [r7, #96]
 1412              	.LBB46:
 1413              	.LBB47:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1414              		.loc 2 699 0
 1415 0916 0123     		mov	r3, #1
 1416 0918 FB65     		str	r3, [r7, #92]
 700:.\Include/arm_math.h ****     {
 1417              		.loc 2 700 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 50


 1418 091a 0023     		mov	r3, #0
 1419 091c BB65     		str	r3, [r7, #88]
 1420 091e 05E0     		b	.L31
 1421              	.L32:
 702:.\Include/arm_math.h ****     }
 1422              		.loc 2 702 0
 1423 0920 FB6D     		ldr	r3, [r7, #92]
 1424 0922 5B00     		lsl	r3, r3, #1
 1425 0924 FB65     		str	r3, [r7, #92]
 700:.\Include/arm_math.h ****     {
 1426              		.loc 2 700 0
 1427 0926 BB6D     		ldr	r3, [r7, #88]
 1428 0928 0133     		add	r3, r3, #1
 1429 092a BB65     		str	r3, [r7, #88]
 1430              	.L31:
 1431 092c 3B6E     		ldr	r3, [r7, #96]
 1432 092e 013B     		sub	r3, r3, #1
 1433 0930 BA6D     		ldr	r2, [r7, #88]
 1434 0932 9A42     		cmp	r2, r3
 1435 0934 F4D3     		bcc	.L32
 705:.\Include/arm_math.h ****     {
 1436              		.loc 2 705 0
 1437 0936 7B6E     		ldr	r3, [r7, #100]
 1438 0938 002B     		cmp	r3, #0
 1439 093a 09DD     		ble	.L33
 707:.\Include/arm_math.h **** 
 1440              		.loc 2 707 0
 1441 093c FB6D     		ldr	r3, [r7, #92]
 1442 093e 013B     		sub	r3, r3, #1
 1443 0940 FB65     		str	r3, [r7, #92]
 709:.\Include/arm_math.h ****       {
 1444              		.loc 2 709 0
 1445 0942 7A6E     		ldr	r2, [r7, #100]
 1446 0944 FB6D     		ldr	r3, [r7, #92]
 1447 0946 9A42     		cmp	r2, r3
 1448 0948 0CDD     		ble	.L63
 711:.\Include/arm_math.h ****       }
 1449              		.loc 2 711 0
 1450 094a FB6D     		ldr	r3, [r7, #92]
 1451 094c 7B66     		str	r3, [r7, #100]
 1452 094e 0AE0     		b	.L35
 1453              	.L33:
 716:.\Include/arm_math.h **** 
 1454              		.loc 2 716 0
 1455 0950 FB6D     		ldr	r3, [r7, #92]
 1456 0952 5B42     		neg	r3, r3
 1457 0954 7B65     		str	r3, [r7, #84]
 718:.\Include/arm_math.h ****       {
 1458              		.loc 2 718 0
 1459 0956 7A6E     		ldr	r2, [r7, #100]
 1460 0958 7B6D     		ldr	r3, [r7, #84]
 1461 095a 9A42     		cmp	r2, r3
 1462 095c 03DA     		bge	.L35
 720:.\Include/arm_math.h ****       }
 1463              		.loc 2 720 0
 1464 095e 7B6D     		ldr	r3, [r7, #84]
 1465 0960 7B66     		str	r3, [r7, #100]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 51


 1466 0962 00E0     		b	.L35
 1467              	.L63:
 711:.\Include/arm_math.h ****       }
 1468              		.loc 2 711 0
 1469 0964 C046     		mov	r8, r8
 1470              	.L35:
 723:.\Include/arm_math.h ****   }
 1471              		.loc 2 723 0
 1472 0966 7A6E     		ldr	r2, [r7, #100]
 1473              	.LBE47:
 1474              	.LBE46:
 1475              		.loc 1 357 0
 1476 0968 DE23     		mov	r3, #222
 1477 096a FB18     		add	r3, r7, r3
 1478 096c 1A70     		strb	r2, [r3]
 358:Source\FilteringFunctions/arm_conv_opt_q7.c ****     out2 = (q7_t) (__SSAT(acc2 >> 7u, 8));
 1479              		.loc 1 358 0
 1480 096e 7B1C     		add	r3, r7, #1
 1481 0970 FF33     		add	r3, r3, #255
 1482 0972 1B68     		ldr	r3, [r3]
 1483 0974 DB11     		asr	r3, r3, #7
 1484 0976 3B65     		str	r3, [r7, #80]
 1485 0978 0823     		mov	r3, #8
 1486 097a FB64     		str	r3, [r7, #76]
 1487              	.LBB48:
 1488              	.LBB49:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1489              		.loc 2 699 0
 1490 097c 0123     		mov	r3, #1
 1491 097e BB64     		str	r3, [r7, #72]
 700:.\Include/arm_math.h ****     {
 1492              		.loc 2 700 0
 1493 0980 0023     		mov	r3, #0
 1494 0982 7B64     		str	r3, [r7, #68]
 1495 0984 05E0     		b	.L37
 1496              	.L38:
 702:.\Include/arm_math.h ****     }
 1497              		.loc 2 702 0
 1498 0986 BB6C     		ldr	r3, [r7, #72]
 1499 0988 5B00     		lsl	r3, r3, #1
 1500 098a BB64     		str	r3, [r7, #72]
 700:.\Include/arm_math.h ****     {
 1501              		.loc 2 700 0
 1502 098c 7B6C     		ldr	r3, [r7, #68]
 1503 098e 0133     		add	r3, r3, #1
 1504 0990 7B64     		str	r3, [r7, #68]
 1505              	.L37:
 1506 0992 FB6C     		ldr	r3, [r7, #76]
 1507 0994 013B     		sub	r3, r3, #1
 1508 0996 7A6C     		ldr	r2, [r7, #68]
 1509 0998 9A42     		cmp	r2, r3
 1510 099a F4D3     		bcc	.L38
 705:.\Include/arm_math.h ****     {
 1511              		.loc 2 705 0
 1512 099c 3B6D     		ldr	r3, [r7, #80]
 1513 099e 002B     		cmp	r3, #0
 1514 09a0 09DD     		ble	.L39
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 52


 707:.\Include/arm_math.h **** 
 1515              		.loc 2 707 0
 1516 09a2 BB6C     		ldr	r3, [r7, #72]
 1517 09a4 013B     		sub	r3, r3, #1
 1518 09a6 BB64     		str	r3, [r7, #72]
 709:.\Include/arm_math.h ****       {
 1519              		.loc 2 709 0
 1520 09a8 3A6D     		ldr	r2, [r7, #80]
 1521 09aa BB6C     		ldr	r3, [r7, #72]
 1522 09ac 9A42     		cmp	r2, r3
 1523 09ae 0CDD     		ble	.L64
 711:.\Include/arm_math.h ****       }
 1524              		.loc 2 711 0
 1525 09b0 BB6C     		ldr	r3, [r7, #72]
 1526 09b2 3B65     		str	r3, [r7, #80]
 1527 09b4 0AE0     		b	.L41
 1528              	.L39:
 716:.\Include/arm_math.h **** 
 1529              		.loc 2 716 0
 1530 09b6 BB6C     		ldr	r3, [r7, #72]
 1531 09b8 5B42     		neg	r3, r3
 1532 09ba 3B64     		str	r3, [r7, #64]
 718:.\Include/arm_math.h ****       {
 1533              		.loc 2 718 0
 1534 09bc 3A6D     		ldr	r2, [r7, #80]
 1535 09be 3B6C     		ldr	r3, [r7, #64]
 1536 09c0 9A42     		cmp	r2, r3
 1537 09c2 03DA     		bge	.L41
 720:.\Include/arm_math.h ****       }
 1538              		.loc 2 720 0
 1539 09c4 3B6C     		ldr	r3, [r7, #64]
 1540 09c6 3B65     		str	r3, [r7, #80]
 1541 09c8 00E0     		b	.L41
 1542              	.L64:
 711:.\Include/arm_math.h ****       }
 1543              		.loc 2 711 0
 1544 09ca C046     		mov	r8, r8
 1545              	.L41:
 723:.\Include/arm_math.h ****   }
 1546              		.loc 2 723 0
 1547 09cc 3A6D     		ldr	r2, [r7, #80]
 1548              	.LBE49:
 1549              	.LBE48:
 1550              		.loc 1 358 0
 1551 09ce DD23     		mov	r3, #221
 1552 09d0 FB18     		add	r3, r7, r3
 1553 09d2 1A70     		strb	r2, [r3]
 359:Source\FilteringFunctions/arm_conv_opt_q7.c ****     out3 = (q7_t) (__SSAT(acc3 >> 7u, 8));
 1554              		.loc 1 359 0
 1555 09d4 FC23     		mov	r3, #252
 1556 09d6 FB18     		add	r3, r7, r3
 1557 09d8 1B68     		ldr	r3, [r3]
 1558 09da DB11     		asr	r3, r3, #7
 1559 09dc FB63     		str	r3, [r7, #60]
 1560 09de 0823     		mov	r3, #8
 1561 09e0 BB63     		str	r3, [r7, #56]
 1562              	.LBB50:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 53


 1563              	.LBB51:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1564              		.loc 2 699 0
 1565 09e2 0123     		mov	r3, #1
 1566 09e4 7B63     		str	r3, [r7, #52]
 700:.\Include/arm_math.h ****     {
 1567              		.loc 2 700 0
 1568 09e6 0023     		mov	r3, #0
 1569 09e8 3B63     		str	r3, [r7, #48]
 1570 09ea 05E0     		b	.L43
 1571              	.L44:
 702:.\Include/arm_math.h ****     }
 1572              		.loc 2 702 0
 1573 09ec 7B6B     		ldr	r3, [r7, #52]
 1574 09ee 5B00     		lsl	r3, r3, #1
 1575 09f0 7B63     		str	r3, [r7, #52]
 700:.\Include/arm_math.h ****     {
 1576              		.loc 2 700 0
 1577 09f2 3B6B     		ldr	r3, [r7, #48]
 1578 09f4 0133     		add	r3, r3, #1
 1579 09f6 3B63     		str	r3, [r7, #48]
 1580              	.L43:
 1581 09f8 BB6B     		ldr	r3, [r7, #56]
 1582 09fa 013B     		sub	r3, r3, #1
 1583 09fc 3A6B     		ldr	r2, [r7, #48]
 1584 09fe 9A42     		cmp	r2, r3
 1585 0a00 F4D3     		bcc	.L44
 705:.\Include/arm_math.h ****     {
 1586              		.loc 2 705 0
 1587 0a02 FB6B     		ldr	r3, [r7, #60]
 1588 0a04 002B     		cmp	r3, #0
 1589 0a06 09DD     		ble	.L45
 707:.\Include/arm_math.h **** 
 1590              		.loc 2 707 0
 1591 0a08 7B6B     		ldr	r3, [r7, #52]
 1592 0a0a 013B     		sub	r3, r3, #1
 1593 0a0c 7B63     		str	r3, [r7, #52]
 709:.\Include/arm_math.h ****       {
 1594              		.loc 2 709 0
 1595 0a0e FA6B     		ldr	r2, [r7, #60]
 1596 0a10 7B6B     		ldr	r3, [r7, #52]
 1597 0a12 9A42     		cmp	r2, r3
 1598 0a14 0CDD     		ble	.L65
 711:.\Include/arm_math.h ****       }
 1599              		.loc 2 711 0
 1600 0a16 7B6B     		ldr	r3, [r7, #52]
 1601 0a18 FB63     		str	r3, [r7, #60]
 1602 0a1a 0AE0     		b	.L47
 1603              	.L45:
 716:.\Include/arm_math.h **** 
 1604              		.loc 2 716 0
 1605 0a1c 7B6B     		ldr	r3, [r7, #52]
 1606 0a1e 5B42     		neg	r3, r3
 1607 0a20 FB62     		str	r3, [r7, #44]
 718:.\Include/arm_math.h ****       {
 1608              		.loc 2 718 0
 1609 0a22 FA6B     		ldr	r2, [r7, #60]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 54


 1610 0a24 FB6A     		ldr	r3, [r7, #44]
 1611 0a26 9A42     		cmp	r2, r3
 1612 0a28 03DA     		bge	.L47
 720:.\Include/arm_math.h ****       }
 1613              		.loc 2 720 0
 1614 0a2a FB6A     		ldr	r3, [r7, #44]
 1615 0a2c FB63     		str	r3, [r7, #60]
 1616 0a2e 00E0     		b	.L47
 1617              	.L65:
 711:.\Include/arm_math.h ****       }
 1618              		.loc 2 711 0
 1619 0a30 C046     		mov	r8, r8
 1620              	.L47:
 723:.\Include/arm_math.h ****   }
 1621              		.loc 2 723 0
 1622 0a32 FA6B     		ldr	r2, [r7, #60]
 1623              	.LBE51:
 1624              	.LBE50:
 1625              		.loc 1 359 0
 1626 0a34 DC23     		mov	r3, #220
 1627 0a36 FB18     		add	r3, r7, r3
 1628 0a38 1A70     		strb	r2, [r3]
 360:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 361:Source\FilteringFunctions/arm_conv_opt_q7.c ****     *__SIMD32(pOut)++ = __PACKq7(out0, out1, out2, out3);
 1629              		.loc 1 361 0
 1630 0a3a 1023     		mov	r3, #16
 1631 0a3c FB18     		add	r3, r7, r3
 1632 0a3e 1A68     		ldr	r2, [r3]
 1633 0a40 111D     		add	r1, r2, #4
 1634 0a42 1960     		str	r1, [r3]
 1635 0a44 DF23     		mov	r3, #223
 1636 0a46 FB18     		add	r3, r7, r3
 1637 0a48 1B78     		ldrb	r3, [r3]
 1638 0a4a 5BB2     		sxtb	r3, r3
 1639 0a4c FF21     		mov	r1, #255
 1640 0a4e 1940     		and	r1, r3
 1641 0a50 DE23     		mov	r3, #222
 1642 0a52 FB18     		add	r3, r7, r3
 1643 0a54 1B78     		ldrb	r3, [r3]
 1644 0a56 5BB2     		sxtb	r3, r3
 1645 0a58 1B02     		lsl	r3, r3, #8
 1646 0a5a 1B04     		lsl	r3, r3, #16
 1647 0a5c 1B0C     		lsr	r3, r3, #16
 1648 0a5e 1943     		orr	r1, r3
 1649 0a60 DD23     		mov	r3, #221
 1650 0a62 FB18     		add	r3, r7, r3
 1651 0a64 1B78     		ldrb	r3, [r3]
 1652 0a66 5BB2     		sxtb	r3, r3
 1653 0a68 1804     		lsl	r0, r3, #16
 1654 0a6a FF23     		mov	r3, #255
 1655 0a6c 1B04     		lsl	r3, r3, #16
 1656 0a6e 0340     		and	r3, r0
 1657 0a70 1943     		orr	r1, r3
 1658 0a72 DC23     		mov	r3, #220
 1659 0a74 FB18     		add	r3, r7, r3
 1660 0a76 1B78     		ldrb	r3, [r3]
 1661 0a78 5BB2     		sxtb	r3, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 55


 1662 0a7a 1B06     		lsl	r3, r3, #24
 1663 0a7c 0B43     		orr	r3, r1
 1664 0a7e 1360     		str	r3, [r2]
 362:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 363:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Initialization of inputB pointer */
 364:Source\FilteringFunctions/arm_conv_opt_q7.c ****     pScr2 = py;
 1665              		.loc 1 364 0
 1666 0a80 E823     		mov	r3, #232
 1667 0a82 FB18     		add	r3, r7, r3
 1668 0a84 1B68     		ldr	r3, [r3]
 1669 0a86 9222     		mov	r2, #146
 1670 0a88 5200     		lsl	r2, r2, #1
 1671 0a8a BA18     		add	r2, r7, r2
 1672 0a8c 1360     		str	r3, [r2]
 365:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 366:Source\FilteringFunctions/arm_conv_opt_q7.c ****     pScratch1 += 4u;
 1673              		.loc 1 366 0
 1674 0a8e 9A23     		mov	r3, #154
 1675 0a90 5B00     		lsl	r3, r3, #1
 1676 0a92 FB18     		add	r3, r7, r3
 1677 0a94 1B68     		ldr	r3, [r3]
 1678 0a96 0833     		add	r3, r3, #8
 1679 0a98 9A22     		mov	r2, #154
 1680 0a9a 5200     		lsl	r2, r2, #1
 1681 0a9c BA18     		add	r2, r7, r2
 1682 0a9e 1360     		str	r3, [r2]
 1683              	.L12:
 252:Source\FilteringFunctions/arm_conv_opt_q7.c ****   {
 1684              		.loc 1 252 0
 1685 0aa0 8A23     		mov	r3, #138
 1686 0aa2 5B00     		lsl	r3, r3, #1
 1687 0aa4 FB18     		add	r3, r7, r3
 1688 0aa6 1B68     		ldr	r3, [r3]
 1689 0aa8 002B     		cmp	r3, #0
 1690 0aaa 00D0     		beq	.LCB1514
 1691 0aac 78E4     		b	.L49	@long jump
 1692              	.LCB1514:
 367:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 368:Source\FilteringFunctions/arm_conv_opt_q7.c ****   }
 369:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 370:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 371:Source\FilteringFunctions/arm_conv_opt_q7.c ****   blkCnt = (srcALen + srcBLen - 1u) & 0x3;
 1693              		.loc 1 371 0
 1694 0aae BA68     		ldr	r2, [r7, #8]
 1695 0ab0 3B68     		ldr	r3, [r7]
 1696 0ab2 D318     		add	r3, r2, r3
 1697 0ab4 013B     		sub	r3, r3, #1
 1698 0ab6 0322     		mov	r2, #3
 1699 0ab8 1340     		and	r3, r2
 1700 0aba 8A22     		mov	r2, #138
 1701 0abc 5200     		lsl	r2, r2, #1
 1702 0abe BA18     		add	r2, r7, r2
 1703 0ac0 1360     		str	r3, [r2]
 372:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 373:Source\FilteringFunctions/arm_conv_opt_q7.c ****   /* Calculate convolution for remaining samples of Bigger length sequence */
 374:Source\FilteringFunctions/arm_conv_opt_q7.c ****   while (blkCnt > 0)
 1704              		.loc 1 374 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 56


 1705 0ac2 D3E0     		b	.L50
 1706              	.L61:
 375:Source\FilteringFunctions/arm_conv_opt_q7.c ****   {
 376:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Initialze temporary scratch pointer as scratch1 */
 377:Source\FilteringFunctions/arm_conv_opt_q7.c ****     pScr1 = pScratch1;
 1707              		.loc 1 377 0
 1708 0ac4 9A23     		mov	r3, #154
 1709 0ac6 5B00     		lsl	r3, r3, #1
 1710 0ac8 FB18     		add	r3, r7, r3
 1711 0aca 1B68     		ldr	r3, [r3]
 1712 0acc 7B61     		str	r3, [r7, #20]
 378:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 379:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Clear Accumlators */
 380:Source\FilteringFunctions/arm_conv_opt_q7.c ****     acc0 = 0;
 1713              		.loc 1 380 0
 1714 0ace 0023     		mov	r3, #0
 1715 0ad0 8422     		mov	r2, #132
 1716 0ad2 5200     		lsl	r2, r2, #1
 1717 0ad4 BA18     		add	r2, r7, r2
 1718 0ad6 1360     		str	r3, [r2]
 381:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 382:Source\FilteringFunctions/arm_conv_opt_q7.c ****     tapCnt = (srcBLen) >> 1u;
 1719              		.loc 1 382 0
 1720 0ad8 3B68     		ldr	r3, [r7]
 1721 0ada 5B08     		lsr	r3, r3, #1
 1722 0adc 8822     		mov	r2, #136
 1723 0ade 5200     		lsl	r2, r2, #1
 1724 0ae0 BA18     		add	r2, r7, r2
 1725 0ae2 1360     		str	r3, [r2]
 383:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 384:Source\FilteringFunctions/arm_conv_opt_q7.c ****     while (tapCnt > 0u)
 1726              		.loc 1 384 0
 1727 0ae4 3CE0     		b	.L51
 1728              	.L52:
 385:Source\FilteringFunctions/arm_conv_opt_q7.c ****     {
 386:Source\FilteringFunctions/arm_conv_opt_q7.c ****       acc0 += (*pScr1++ * *pScr2++);
 1729              		.loc 1 386 0
 1730 0ae6 7B69     		ldr	r3, [r7, #20]
 1731 0ae8 9A1C     		add	r2, r3, #2
 1732 0aea 7A61     		str	r2, [r7, #20]
 1733 0aec 1B88     		ldrh	r3, [r3]
 1734 0aee 1AB2     		sxth	r2, r3
 1735 0af0 9223     		mov	r3, #146
 1736 0af2 5B00     		lsl	r3, r3, #1
 1737 0af4 FB18     		add	r3, r7, r3
 1738 0af6 1B68     		ldr	r3, [r3]
 1739 0af8 991C     		add	r1, r3, #2
 1740 0afa 9220     		mov	r0, #146
 1741 0afc 4000     		lsl	r0, r0, #1
 1742 0afe 3818     		add	r0, r7, r0
 1743 0b00 0160     		str	r1, [r0]
 1744 0b02 1B88     		ldrh	r3, [r3]
 1745 0b04 1BB2     		sxth	r3, r3
 1746 0b06 5343     		mul	r3, r2
 1747 0b08 8422     		mov	r2, #132
 1748 0b0a 5200     		lsl	r2, r2, #1
 1749 0b0c BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 57


 1750 0b0e 1268     		ldr	r2, [r2]
 1751 0b10 D318     		add	r3, r2, r3
 1752 0b12 8422     		mov	r2, #132
 1753 0b14 5200     		lsl	r2, r2, #1
 1754 0b16 BA18     		add	r2, r7, r2
 1755 0b18 1360     		str	r3, [r2]
 387:Source\FilteringFunctions/arm_conv_opt_q7.c ****       acc0 += (*pScr1++ * *pScr2++);
 1756              		.loc 1 387 0
 1757 0b1a 7B69     		ldr	r3, [r7, #20]
 1758 0b1c 9A1C     		add	r2, r3, #2
 1759 0b1e 7A61     		str	r2, [r7, #20]
 1760 0b20 1B88     		ldrh	r3, [r3]
 1761 0b22 1AB2     		sxth	r2, r3
 1762 0b24 9223     		mov	r3, #146
 1763 0b26 5B00     		lsl	r3, r3, #1
 1764 0b28 FB18     		add	r3, r7, r3
 1765 0b2a 1B68     		ldr	r3, [r3]
 1766 0b2c 991C     		add	r1, r3, #2
 1767 0b2e 9220     		mov	r0, #146
 1768 0b30 4000     		lsl	r0, r0, #1
 1769 0b32 3818     		add	r0, r7, r0
 1770 0b34 0160     		str	r1, [r0]
 1771 0b36 1B88     		ldrh	r3, [r3]
 1772 0b38 1BB2     		sxth	r3, r3
 1773 0b3a 5343     		mul	r3, r2
 1774 0b3c 8422     		mov	r2, #132
 1775 0b3e 5200     		lsl	r2, r2, #1
 1776 0b40 BA18     		add	r2, r7, r2
 1777 0b42 1268     		ldr	r2, [r2]
 1778 0b44 D318     		add	r3, r2, r3
 1779 0b46 8422     		mov	r2, #132
 1780 0b48 5200     		lsl	r2, r2, #1
 1781 0b4a BA18     		add	r2, r7, r2
 1782 0b4c 1360     		str	r3, [r2]
 388:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 389:Source\FilteringFunctions/arm_conv_opt_q7.c ****       /* Decrement the loop counter */
 390:Source\FilteringFunctions/arm_conv_opt_q7.c ****       tapCnt--;
 1783              		.loc 1 390 0
 1784 0b4e 8823     		mov	r3, #136
 1785 0b50 5B00     		lsl	r3, r3, #1
 1786 0b52 FB18     		add	r3, r7, r3
 1787 0b54 1B68     		ldr	r3, [r3]
 1788 0b56 013B     		sub	r3, r3, #1
 1789 0b58 8822     		mov	r2, #136
 1790 0b5a 5200     		lsl	r2, r2, #1
 1791 0b5c BA18     		add	r2, r7, r2
 1792 0b5e 1360     		str	r3, [r2]
 1793              	.L51:
 384:Source\FilteringFunctions/arm_conv_opt_q7.c ****     {
 1794              		.loc 1 384 0
 1795 0b60 8823     		mov	r3, #136
 1796 0b62 5B00     		lsl	r3, r3, #1
 1797 0b64 FB18     		add	r3, r7, r3
 1798 0b66 1B68     		ldr	r3, [r3]
 1799 0b68 002B     		cmp	r3, #0
 1800 0b6a BCD1     		bne	.L52
 391:Source\FilteringFunctions/arm_conv_opt_q7.c ****     }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 58


 392:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 393:Source\FilteringFunctions/arm_conv_opt_q7.c ****     tapCnt = (srcBLen) & 1u;
 1801              		.loc 1 393 0
 1802 0b6c 3B68     		ldr	r3, [r7]
 1803 0b6e 0122     		mov	r2, #1
 1804 0b70 1340     		and	r3, r2
 1805 0b72 8822     		mov	r2, #136
 1806 0b74 5200     		lsl	r2, r2, #1
 1807 0b76 BA18     		add	r2, r7, r2
 1808 0b78 1360     		str	r3, [r2]
 394:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 395:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* apply same above for remaining samples of smaller length sequence */
 396:Source\FilteringFunctions/arm_conv_opt_q7.c ****     while (tapCnt > 0u)
 1809              		.loc 1 396 0
 1810 0b7a 22E0     		b	.L53
 1811              	.L54:
 397:Source\FilteringFunctions/arm_conv_opt_q7.c ****     {
 398:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 399:Source\FilteringFunctions/arm_conv_opt_q7.c ****       /* accumlate the results */
 400:Source\FilteringFunctions/arm_conv_opt_q7.c ****       acc0 += (*pScr1++ * *pScr2++);
 1812              		.loc 1 400 0
 1813 0b7c 7B69     		ldr	r3, [r7, #20]
 1814 0b7e 9A1C     		add	r2, r3, #2
 1815 0b80 7A61     		str	r2, [r7, #20]
 1816 0b82 1B88     		ldrh	r3, [r3]
 1817 0b84 1AB2     		sxth	r2, r3
 1818 0b86 9223     		mov	r3, #146
 1819 0b88 5B00     		lsl	r3, r3, #1
 1820 0b8a FB18     		add	r3, r7, r3
 1821 0b8c 1B68     		ldr	r3, [r3]
 1822 0b8e 991C     		add	r1, r3, #2
 1823 0b90 9220     		mov	r0, #146
 1824 0b92 4000     		lsl	r0, r0, #1
 1825 0b94 3818     		add	r0, r7, r0
 1826 0b96 0160     		str	r1, [r0]
 1827 0b98 1B88     		ldrh	r3, [r3]
 1828 0b9a 1BB2     		sxth	r3, r3
 1829 0b9c 5343     		mul	r3, r2
 1830 0b9e 8422     		mov	r2, #132
 1831 0ba0 5200     		lsl	r2, r2, #1
 1832 0ba2 BA18     		add	r2, r7, r2
 1833 0ba4 1268     		ldr	r2, [r2]
 1834 0ba6 D318     		add	r3, r2, r3
 1835 0ba8 8422     		mov	r2, #132
 1836 0baa 5200     		lsl	r2, r2, #1
 1837 0bac BA18     		add	r2, r7, r2
 1838 0bae 1360     		str	r3, [r2]
 401:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 402:Source\FilteringFunctions/arm_conv_opt_q7.c ****       /* Decrement the loop counter */
 403:Source\FilteringFunctions/arm_conv_opt_q7.c ****       tapCnt--;
 1839              		.loc 1 403 0
 1840 0bb0 8823     		mov	r3, #136
 1841 0bb2 5B00     		lsl	r3, r3, #1
 1842 0bb4 FB18     		add	r3, r7, r3
 1843 0bb6 1B68     		ldr	r3, [r3]
 1844 0bb8 013B     		sub	r3, r3, #1
 1845 0bba 8822     		mov	r2, #136
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 59


 1846 0bbc 5200     		lsl	r2, r2, #1
 1847 0bbe BA18     		add	r2, r7, r2
 1848 0bc0 1360     		str	r3, [r2]
 1849              	.L53:
 396:Source\FilteringFunctions/arm_conv_opt_q7.c ****     {
 1850              		.loc 1 396 0
 1851 0bc2 8823     		mov	r3, #136
 1852 0bc4 5B00     		lsl	r3, r3, #1
 1853 0bc6 FB18     		add	r3, r7, r3
 1854 0bc8 1B68     		ldr	r3, [r3]
 1855 0bca 002B     		cmp	r3, #0
 1856 0bcc D6D1     		bne	.L54
 404:Source\FilteringFunctions/arm_conv_opt_q7.c ****     }
 405:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 406:Source\FilteringFunctions/arm_conv_opt_q7.c ****     blkCnt--;
 1857              		.loc 1 406 0
 1858 0bce 8A23     		mov	r3, #138
 1859 0bd0 5B00     		lsl	r3, r3, #1
 1860 0bd2 FB18     		add	r3, r7, r3
 1861 0bd4 1B68     		ldr	r3, [r3]
 1862 0bd6 013B     		sub	r3, r3, #1
 1863 0bd8 8A22     		mov	r2, #138
 1864 0bda 5200     		lsl	r2, r2, #1
 1865 0bdc BA18     		add	r2, r7, r2
 1866 0bde 1360     		str	r3, [r2]
 407:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 408:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Store the result in the accumulator in the destination buffer. */
 409:Source\FilteringFunctions/arm_conv_opt_q7.c ****     *pOut++ = (q7_t) (__SSAT(acc0 >> 7u, 8));
 1867              		.loc 1 409 0
 1868 0be0 3B69     		ldr	r3, [r7, #16]
 1869 0be2 5A1C     		add	r2, r3, #1
 1870 0be4 3A61     		str	r2, [r7, #16]
 1871 0be6 8422     		mov	r2, #132
 1872 0be8 5200     		lsl	r2, r2, #1
 1873 0bea BA18     		add	r2, r7, r2
 1874 0bec 1268     		ldr	r2, [r2]
 1875 0bee D211     		asr	r2, r2, #7
 1876 0bf0 BA62     		str	r2, [r7, #40]
 1877 0bf2 0822     		mov	r2, #8
 1878 0bf4 7A62     		str	r2, [r7, #36]
 1879              	.LBB52:
 1880              	.LBB53:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1881              		.loc 2 699 0
 1882 0bf6 0122     		mov	r2, #1
 1883 0bf8 3A62     		str	r2, [r7, #32]
 700:.\Include/arm_math.h ****     {
 1884              		.loc 2 700 0
 1885 0bfa 0022     		mov	r2, #0
 1886 0bfc FA61     		str	r2, [r7, #28]
 1887 0bfe 05E0     		b	.L55
 1888              	.L56:
 702:.\Include/arm_math.h ****     }
 1889              		.loc 2 702 0
 1890 0c00 3A6A     		ldr	r2, [r7, #32]
 1891 0c02 5200     		lsl	r2, r2, #1
 1892 0c04 3A62     		str	r2, [r7, #32]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 60


 700:.\Include/arm_math.h ****     {
 1893              		.loc 2 700 0
 1894 0c06 FA69     		ldr	r2, [r7, #28]
 1895 0c08 0132     		add	r2, r2, #1
 1896 0c0a FA61     		str	r2, [r7, #28]
 1897              	.L55:
 1898 0c0c 7A6A     		ldr	r2, [r7, #36]
 1899 0c0e 013A     		sub	r2, r2, #1
 1900 0c10 F969     		ldr	r1, [r7, #28]
 1901 0c12 9142     		cmp	r1, r2
 1902 0c14 F4D3     		bcc	.L56
 705:.\Include/arm_math.h ****     {
 1903              		.loc 2 705 0
 1904 0c16 BA6A     		ldr	r2, [r7, #40]
 1905 0c18 002A     		cmp	r2, #0
 1906 0c1a 09DD     		ble	.L57
 707:.\Include/arm_math.h **** 
 1907              		.loc 2 707 0
 1908 0c1c 3A6A     		ldr	r2, [r7, #32]
 1909 0c1e 013A     		sub	r2, r2, #1
 1910 0c20 3A62     		str	r2, [r7, #32]
 709:.\Include/arm_math.h ****       {
 1911              		.loc 2 709 0
 1912 0c22 B96A     		ldr	r1, [r7, #40]
 1913 0c24 3A6A     		ldr	r2, [r7, #32]
 1914 0c26 9142     		cmp	r1, r2
 1915 0c28 0CDD     		ble	.L66
 711:.\Include/arm_math.h ****       }
 1916              		.loc 2 711 0
 1917 0c2a 3A6A     		ldr	r2, [r7, #32]
 1918 0c2c BA62     		str	r2, [r7, #40]
 1919 0c2e 0AE0     		b	.L59
 1920              	.L57:
 716:.\Include/arm_math.h **** 
 1921              		.loc 2 716 0
 1922 0c30 3A6A     		ldr	r2, [r7, #32]
 1923 0c32 5242     		neg	r2, r2
 1924 0c34 BA61     		str	r2, [r7, #24]
 718:.\Include/arm_math.h ****       {
 1925              		.loc 2 718 0
 1926 0c36 B96A     		ldr	r1, [r7, #40]
 1927 0c38 BA69     		ldr	r2, [r7, #24]
 1928 0c3a 9142     		cmp	r1, r2
 1929 0c3c 03DA     		bge	.L59
 720:.\Include/arm_math.h ****       }
 1930              		.loc 2 720 0
 1931 0c3e BA69     		ldr	r2, [r7, #24]
 1932 0c40 BA62     		str	r2, [r7, #40]
 1933 0c42 00E0     		b	.L59
 1934              	.L66:
 711:.\Include/arm_math.h ****       }
 1935              		.loc 2 711 0
 1936 0c44 C046     		mov	r8, r8
 1937              	.L59:
 723:.\Include/arm_math.h ****   }
 1938              		.loc 2 723 0
 1939 0c46 BA6A     		ldr	r2, [r7, #40]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 61


 1940              	.LBE53:
 1941              	.LBE52:
 1942              		.loc 1 409 0
 1943 0c48 D2B2     		uxtb	r2, r2
 1944 0c4a 1A70     		strb	r2, [r3]
 410:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 411:Source\FilteringFunctions/arm_conv_opt_q7.c ****     /* Initialization of inputB pointer */
 412:Source\FilteringFunctions/arm_conv_opt_q7.c ****     pScr2 = py;
 1945              		.loc 1 412 0
 1946 0c4c E823     		mov	r3, #232
 1947 0c4e FB18     		add	r3, r7, r3
 1948 0c50 1B68     		ldr	r3, [r3]
 1949 0c52 9222     		mov	r2, #146
 1950 0c54 5200     		lsl	r2, r2, #1
 1951 0c56 BA18     		add	r2, r7, r2
 1952 0c58 1360     		str	r3, [r2]
 413:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 414:Source\FilteringFunctions/arm_conv_opt_q7.c ****     pScratch1 += 1u;
 1953              		.loc 1 414 0
 1954 0c5a 9A23     		mov	r3, #154
 1955 0c5c 5B00     		lsl	r3, r3, #1
 1956 0c5e FB18     		add	r3, r7, r3
 1957 0c60 1B68     		ldr	r3, [r3]
 1958 0c62 0233     		add	r3, r3, #2
 1959 0c64 9A22     		mov	r2, #154
 1960 0c66 5200     		lsl	r2, r2, #1
 1961 0c68 BA18     		add	r2, r7, r2
 1962 0c6a 1360     		str	r3, [r2]
 1963              	.L50:
 374:Source\FilteringFunctions/arm_conv_opt_q7.c ****   {
 1964              		.loc 1 374 0
 1965 0c6c 8A23     		mov	r3, #138
 1966 0c6e 5B00     		lsl	r3, r3, #1
 1967 0c70 FB18     		add	r3, r7, r3
 1968 0c72 1B68     		ldr	r3, [r3]
 1969 0c74 002B     		cmp	r3, #0
 1970 0c76 00D0     		beq	.LCB1775
 1971 0c78 24E7     		b	.L61	@long jump
 1972              	.LCB1775:
 415:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 416:Source\FilteringFunctions/arm_conv_opt_q7.c ****   }
 417:Source\FilteringFunctions/arm_conv_opt_q7.c **** 
 418:Source\FilteringFunctions/arm_conv_opt_q7.c **** }
 1973              		.loc 1 418 0
 1974 0c7a BD46     		mov	sp, r7
 1975 0c7c 4AB0     		add	sp, sp, #296
 1976              		@ sp needed
 1977 0c7e 80BD     		pop	{r7, pc}
 1978              		.cfi_endproc
 1979              	.LFE82:
 1980              		.size	arm_conv_opt_q7, .-arm_conv_opt_q7
 1981              		.text
 1982              	.Letext0:
 1983              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1984              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1985              		.section	.debug_info,"",%progbits
 1986              	.Ldebug_info0:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 62


 1987 0000 7E060000 		.4byte	0x67e
 1988 0004 0400     		.2byte	0x4
 1989 0006 00000000 		.4byte	.Ldebug_abbrev0
 1990 000a 04       		.byte	0x4
 1991 000b 01       		.uleb128 0x1
 1992 000c 69010000 		.4byte	.LASF52
 1993 0010 01       		.byte	0x1
 1994 0011 84020000 		.4byte	.LASF53
 1995 0015 0E010000 		.4byte	.LASF54
 1996 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1997 001d 00000000 		.4byte	0
 1998 0021 00000000 		.4byte	.Ldebug_line0
 1999 0025 02       		.uleb128 0x2
 2000 0026 CB000000 		.4byte	.LASF2
 2001 002a 03       		.byte	0x3
 2002 002b 1B       		.byte	0x1b
 2003 002c 30000000 		.4byte	0x30
 2004 0030 03       		.uleb128 0x3
 2005 0031 01       		.byte	0x1
 2006 0032 06       		.byte	0x6
 2007 0033 E2000000 		.4byte	.LASF0
 2008 0037 03       		.uleb128 0x3
 2009 0038 01       		.byte	0x1
 2010 0039 08       		.byte	0x8
 2011 003a D4000000 		.4byte	.LASF1
 2012 003e 02       		.uleb128 0x2
 2013 003f 7A020000 		.4byte	.LASF3
 2014 0043 03       		.byte	0x3
 2015 0044 29       		.byte	0x29
 2016 0045 49000000 		.4byte	0x49
 2017 0049 03       		.uleb128 0x3
 2018 004a 02       		.byte	0x2
 2019 004b 05       		.byte	0x5
 2020 004c 33000000 		.4byte	.LASF4
 2021 0050 03       		.uleb128 0x3
 2022 0051 02       		.byte	0x2
 2023 0052 07       		.byte	0x7
 2024 0053 07020000 		.4byte	.LASF5
 2025 0057 02       		.uleb128 0x2
 2026 0058 70020000 		.4byte	.LASF6
 2027 005c 03       		.byte	0x3
 2028 005d 3F       		.byte	0x3f
 2029 005e 62000000 		.4byte	0x62
 2030 0062 03       		.uleb128 0x3
 2031 0063 04       		.byte	0x4
 2032 0064 05       		.byte	0x5
 2033 0065 BD000000 		.4byte	.LASF7
 2034 0069 02       		.uleb128 0x2
 2035 006a 59000000 		.4byte	.LASF8
 2036 006e 03       		.byte	0x3
 2037 006f 41       		.byte	0x41
 2038 0070 74000000 		.4byte	0x74
 2039 0074 03       		.uleb128 0x3
 2040 0075 04       		.byte	0x4
 2041 0076 07       		.byte	0x7
 2042 0077 3D020000 		.4byte	.LASF9
 2043 007b 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 63


 2044 007c 08       		.byte	0x8
 2045 007d 05       		.byte	0x5
 2046 007e A9000000 		.4byte	.LASF10
 2047 0082 03       		.uleb128 0x3
 2048 0083 08       		.byte	0x8
 2049 0084 07       		.byte	0x7
 2050 0085 EE000000 		.4byte	.LASF11
 2051 0089 04       		.uleb128 0x4
 2052 008a 04       		.byte	0x4
 2053 008b 05       		.byte	0x5
 2054 008c 696E7400 		.ascii	"int\000"
 2055 0090 03       		.uleb128 0x3
 2056 0091 04       		.byte	0x4
 2057 0092 07       		.byte	0x7
 2058 0093 54010000 		.4byte	.LASF12
 2059 0097 02       		.uleb128 0x2
 2060 0098 2C000000 		.4byte	.LASF13
 2061 009c 04       		.byte	0x4
 2062 009d 14       		.byte	0x14
 2063 009e 25000000 		.4byte	0x25
 2064 00a2 02       		.uleb128 0x2
 2065 00a3 27020000 		.4byte	.LASF14
 2066 00a7 04       		.byte	0x4
 2067 00a8 20       		.byte	0x20
 2068 00a9 3E000000 		.4byte	0x3e
 2069 00ad 02       		.uleb128 0x2
 2070 00ae 1F020000 		.4byte	.LASF15
 2071 00b2 04       		.byte	0x4
 2072 00b3 2C       		.byte	0x2c
 2073 00b4 57000000 		.4byte	0x57
 2074 00b8 02       		.uleb128 0x2
 2075 00b9 05010000 		.4byte	.LASF16
 2076 00bd 04       		.byte	0x4
 2077 00be 2D       		.byte	0x2d
 2078 00bf 69000000 		.4byte	0x69
 2079 00c3 03       		.uleb128 0x3
 2080 00c4 04       		.byte	0x4
 2081 00c5 07       		.byte	0x7
 2082 00c6 3D000000 		.4byte	.LASF17
 2083 00ca 03       		.uleb128 0x3
 2084 00cb 01       		.byte	0x1
 2085 00cc 08       		.byte	0x8
 2086 00cd 1A020000 		.4byte	.LASF18
 2087 00d1 03       		.uleb128 0x3
 2088 00d2 08       		.byte	0x8
 2089 00d3 04       		.byte	0x4
 2090 00d4 4F020000 		.4byte	.LASF19
 2091 00d8 03       		.uleb128 0x3
 2092 00d9 04       		.byte	0x4
 2093 00da 04       		.byte	0x4
 2094 00db 96000000 		.4byte	.LASF20
 2095 00df 03       		.uleb128 0x3
 2096 00e0 08       		.byte	0x8
 2097 00e1 04       		.byte	0x4
 2098 00e2 4D000000 		.4byte	.LASF21
 2099 00e6 05       		.uleb128 0x5
 2100 00e7 C6000000 		.4byte	.LASF22
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 64


 2101 00eb 02       		.byte	0x2
 2102 00ec 9101     		.2byte	0x191
 2103 00ee 97000000 		.4byte	0x97
 2104 00f2 05       		.uleb128 0x5
 2105 00f3 1C000000 		.4byte	.LASF23
 2106 00f7 02       		.byte	0x2
 2107 00f8 9601     		.2byte	0x196
 2108 00fa A2000000 		.4byte	0xa2
 2109 00fe 05       		.uleb128 0x5
 2110 00ff 11000000 		.4byte	.LASF24
 2111 0103 02       		.byte	0x2
 2112 0104 9B01     		.2byte	0x19b
 2113 0106 AD000000 		.4byte	0xad
 2114 010a 06       		.uleb128 0x6
 2115 010b 04       		.byte	0x4
 2116 010c E6000000 		.4byte	0xe6
 2117 0110 06       		.uleb128 0x6
 2118 0111 04       		.byte	0x4
 2119 0112 F2000000 		.4byte	0xf2
 2120 0116 07       		.uleb128 0x7
 2121 0117 8E000000 		.4byte	.LASF25
 2122 011b 02       		.byte	0x2
 2123 011c B303     		.2byte	0x3b3
 2124 011e B8000000 		.4byte	0xb8
 2125 0122 03       		.byte	0x3
 2126 0123 48010000 		.4byte	0x148
 2127 0127 08       		.uleb128 0x8
 2128 0128 7800     		.ascii	"x\000"
 2129 012a 02       		.byte	0x2
 2130 012b B403     		.2byte	0x3b4
 2131 012d B8000000 		.4byte	0xb8
 2132 0131 08       		.uleb128 0x8
 2133 0132 7900     		.ascii	"y\000"
 2134 0134 02       		.byte	0x2
 2135 0135 B503     		.2byte	0x3b5
 2136 0137 B8000000 		.4byte	0xb8
 2137 013b 08       		.uleb128 0x8
 2138 013c 73756D00 		.ascii	"sum\000"
 2139 0140 02       		.byte	0x2
 2140 0141 B603     		.2byte	0x3b6
 2141 0143 B8000000 		.4byte	0xb8
 2142 0147 00       		.byte	0
 2143 0148 07       		.uleb128 0x7
 2144 0149 7D000000 		.4byte	.LASF26
 2145 014d 02       		.byte	0x2
 2146 014e C103     		.2byte	0x3c1
 2147 0150 B8000000 		.4byte	0xb8
 2148 0154 03       		.byte	0x3
 2149 0155 7A010000 		.4byte	0x17a
 2150 0159 08       		.uleb128 0x8
 2151 015a 7800     		.ascii	"x\000"
 2152 015c 02       		.byte	0x2
 2153 015d C203     		.2byte	0x3c2
 2154 015f B8000000 		.4byte	0xb8
 2155 0163 08       		.uleb128 0x8
 2156 0164 7900     		.ascii	"y\000"
 2157 0166 02       		.byte	0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 65


 2158 0167 C303     		.2byte	0x3c3
 2159 0169 B8000000 		.4byte	0xb8
 2160 016d 08       		.uleb128 0x8
 2161 016e 73756D00 		.ascii	"sum\000"
 2162 0172 02       		.byte	0x2
 2163 0173 C403     		.2byte	0x3c4
 2164 0175 B8000000 		.4byte	0xb8
 2165 0179 00       		.byte	0
 2166 017a 07       		.uleb128 0x7
 2167 017b FB010000 		.4byte	.LASF27
 2168 017f 02       		.byte	0x2
 2169 0180 B402     		.2byte	0x2b4
 2170 0182 FE000000 		.4byte	0xfe
 2171 0186 03       		.byte	0x3
 2172 0187 C2010000 		.4byte	0x1c2
 2173 018b 08       		.uleb128 0x8
 2174 018c 7800     		.ascii	"x\000"
 2175 018e 02       		.byte	0x2
 2176 018f B502     		.2byte	0x2b5
 2177 0191 FE000000 		.4byte	0xfe
 2178 0195 08       		.uleb128 0x8
 2179 0196 7900     		.ascii	"y\000"
 2180 0198 02       		.byte	0x2
 2181 0199 B602     		.2byte	0x2b6
 2182 019b B8000000 		.4byte	0xb8
 2183 019f 09       		.uleb128 0x9
 2184 01a0 36020000 		.4byte	.LASF28
 2185 01a4 02       		.byte	0x2
 2186 01a5 B802     		.2byte	0x2b8
 2187 01a7 AD000000 		.4byte	0xad
 2188 01ab 09       		.uleb128 0x9
 2189 01ac 2F020000 		.4byte	.LASF29
 2190 01b0 02       		.byte	0x2
 2191 01b1 B802     		.2byte	0x2b8
 2192 01b3 AD000000 		.4byte	0xad
 2193 01b7 0A       		.uleb128 0xa
 2194 01b8 6900     		.ascii	"i\000"
 2195 01ba 02       		.byte	0x2
 2196 01bb B902     		.2byte	0x2b9
 2197 01bd B8000000 		.4byte	0xb8
 2198 01c1 00       		.byte	0
 2199 01c2 0B       		.uleb128 0xb
 2200 01c3 56020000 		.4byte	.LASF55
 2201 01c7 01       		.byte	0x1
 2202 01c8 43       		.byte	0x43
 2203 01c9 00000000 		.4byte	.LFB82
 2204 01cd 800C0000 		.4byte	.LFE82-.LFB82
 2205 01d1 01       		.uleb128 0x1
 2206 01d2 9C       		.byte	0x9c
 2207 01d3 0C       		.uleb128 0xc
 2208 01d4 A3000000 		.4byte	.LASF30
 2209 01d8 01       		.byte	0x1
 2210 01d9 44       		.byte	0x44
 2211 01da 0A010000 		.4byte	0x10a
 2212 01de 03       		.uleb128 0x3
 2213 01df 91       		.byte	0x91
 2214 01e0 DC7D     		.sleb128 -292
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 66


 2215 01e2 0C       		.uleb128 0xc
 2216 01e3 86000000 		.4byte	.LASF31
 2217 01e7 01       		.byte	0x1
 2218 01e8 45       		.byte	0x45
 2219 01e9 B8000000 		.4byte	0xb8
 2220 01ed 03       		.uleb128 0x3
 2221 01ee 91       		.byte	0x91
 2222 01ef D87D     		.sleb128 -296
 2223 01f1 0C       		.uleb128 0xc
 2224 01f2 B7000000 		.4byte	.LASF32
 2225 01f6 01       		.byte	0x1
 2226 01f7 46       		.byte	0x46
 2227 01f8 0A010000 		.4byte	0x10a
 2228 01fc 03       		.uleb128 0x3
 2229 01fd 91       		.byte	0x91
 2230 01fe D47D     		.sleb128 -300
 2231 0200 0C       		.uleb128 0xc
 2232 0201 61010000 		.4byte	.LASF33
 2233 0205 01       		.byte	0x1
 2234 0206 47       		.byte	0x47
 2235 0207 B8000000 		.4byte	0xb8
 2236 020b 03       		.uleb128 0x3
 2237 020c 91       		.byte	0x91
 2238 020d D07D     		.sleb128 -304
 2239 020f 0C       		.uleb128 0xc
 2240 0210 0C000000 		.4byte	.LASF34
 2241 0214 01       		.byte	0x1
 2242 0215 48       		.byte	0x48
 2243 0216 0A010000 		.4byte	0x10a
 2244 021a 02       		.uleb128 0x2
 2245 021b 91       		.byte	0x91
 2246 021c 00       		.sleb128 0
 2247 021d 0C       		.uleb128 0xc
 2248 021e 64000000 		.4byte	.LASF35
 2249 0222 01       		.byte	0x1
 2250 0223 49       		.byte	0x49
 2251 0224 10010000 		.4byte	0x110
 2252 0228 02       		.uleb128 0x2
 2253 0229 91       		.byte	0x91
 2254 022a 04       		.sleb128 4
 2255 022b 0C       		.uleb128 0xc
 2256 022c 6E000000 		.4byte	.LASF36
 2257 0230 01       		.byte	0x1
 2258 0231 4A       		.byte	0x4a
 2259 0232 10010000 		.4byte	0x110
 2260 0236 02       		.uleb128 0x2
 2261 0237 91       		.byte	0x91
 2262 0238 08       		.sleb128 8
 2263 0239 0D       		.uleb128 0xd
 2264 023a 06000000 		.4byte	.LASF37
 2265 023e 01       		.byte	0x1
 2266 023f 4D       		.byte	0x4d
 2267 0240 10010000 		.4byte	0x110
 2268 0244 02       		.uleb128 0x2
 2269 0245 91       		.byte	0x91
 2270 0246 74       		.sleb128 -12
 2271 0247 0D       		.uleb128 0xd
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 67


 2272 0248 00000000 		.4byte	.LASF38
 2273 024c 01       		.byte	0x1
 2274 024d 4D       		.byte	0x4d
 2275 024e 10010000 		.4byte	0x110
 2276 0252 03       		.uleb128 0x3
 2277 0253 91       		.byte	0x91
 2278 0254 E47D     		.sleb128 -284
 2279 0256 0E       		.uleb128 0xe
 2280 0257 783400   		.ascii	"x4\000"
 2281 025a 01       		.byte	0x1
 2282 025b 4E       		.byte	0x4e
 2283 025c F2000000 		.4byte	0xf2
 2284 0260 03       		.uleb128 0x3
 2285 0261 91       		.byte	0x91
 2286 0262 BE7F     		.sleb128 -66
 2287 0264 0D       		.uleb128 0xd
 2288 0265 66020000 		.4byte	.LASF39
 2289 0269 01       		.byte	0x1
 2290 026a 4F       		.byte	0x4f
 2291 026b 0A010000 		.4byte	0x10a
 2292 026f 02       		.uleb128 0x2
 2293 0270 91       		.byte	0x91
 2294 0271 70       		.sleb128 -16
 2295 0272 0D       		.uleb128 0xd
 2296 0273 6B020000 		.4byte	.LASF40
 2297 0277 01       		.byte	0x1
 2298 0278 4F       		.byte	0x4f
 2299 0279 0A010000 		.4byte	0x10a
 2300 027d 02       		.uleb128 0x2
 2301 027e 91       		.byte	0x91
 2302 027f 6C       		.sleb128 -20
 2303 0280 0E       		.uleb128 0xe
 2304 0281 6A00     		.ascii	"j\000"
 2305 0283 01       		.byte	0x1
 2306 0284 50       		.byte	0x50
 2307 0285 B8000000 		.4byte	0xb8
 2308 0289 02       		.uleb128 0x2
 2309 028a 91       		.byte	0x91
 2310 028b 40       		.sleb128 -64
 2311 028c 0E       		.uleb128 0xe
 2312 028d 6B00     		.ascii	"k\000"
 2313 028f 01       		.byte	0x1
 2314 0290 50       		.byte	0x50
 2315 0291 B8000000 		.4byte	0xb8
 2316 0295 02       		.uleb128 0x2
 2317 0296 91       		.byte	0x91
 2318 0297 68       		.sleb128 -24
 2319 0298 0D       		.uleb128 0xd
 2320 0299 9C000000 		.4byte	.LASF41
 2321 029d 01       		.byte	0x1
 2322 029e 50       		.byte	0x50
 2323 029f B8000000 		.4byte	0xb8
 2324 02a3 02       		.uleb128 0x2
 2325 02a4 91       		.byte	0x91
 2326 02a5 64       		.sleb128 -28
 2327 02a6 0D       		.uleb128 0xd
 2328 02a7 46000000 		.4byte	.LASF42
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 68


 2329 02ab 01       		.byte	0x1
 2330 02ac 50       		.byte	0x50
 2331 02ad B8000000 		.4byte	0xb8
 2332 02b1 02       		.uleb128 0x2
 2333 02b2 91       		.byte	0x91
 2334 02b3 60       		.sleb128 -32
 2335 02b4 0E       		.uleb128 0xe
 2336 02b5 707800   		.ascii	"px\000"
 2337 02b8 01       		.byte	0x1
 2338 02b9 51       		.byte	0x51
 2339 02ba 0A010000 		.4byte	0x10a
 2340 02be 02       		.uleb128 0x2
 2341 02bf 91       		.byte	0x91
 2342 02c0 5C       		.sleb128 -36
 2343 02c1 0E       		.uleb128 0xe
 2344 02c2 707900   		.ascii	"py\000"
 2345 02c5 01       		.byte	0x1
 2346 02c6 52       		.byte	0x52
 2347 02c7 10010000 		.4byte	0x110
 2348 02cb 03       		.uleb128 0x3
 2349 02cc 91       		.byte	0x91
 2350 02cd B87F     		.sleb128 -72
 2351 02cf 0D       		.uleb128 0xd
 2352 02d0 B0020000 		.4byte	.LASF43
 2353 02d4 01       		.byte	0x1
 2354 02d5 53       		.byte	0x53
 2355 02d6 FE000000 		.4byte	0xfe
 2356 02da 02       		.uleb128 0x2
 2357 02db 91       		.byte	0x91
 2358 02dc 58       		.sleb128 -40
 2359 02dd 0D       		.uleb128 0xd
 2360 02de B5020000 		.4byte	.LASF44
 2361 02e2 01       		.byte	0x1
 2362 02e3 53       		.byte	0x53
 2363 02e4 FE000000 		.4byte	0xfe
 2364 02e8 02       		.uleb128 0x2
 2365 02e9 91       		.byte	0x91
 2366 02ea 54       		.sleb128 -44
 2367 02eb 0D       		.uleb128 0xd
 2368 02ec BA020000 		.4byte	.LASF45
 2369 02f0 01       		.byte	0x1
 2370 02f1 53       		.byte	0x53
 2371 02f2 FE000000 		.4byte	0xfe
 2372 02f6 02       		.uleb128 0x2
 2373 02f7 91       		.byte	0x91
 2374 02f8 50       		.sleb128 -48
 2375 02f9 0D       		.uleb128 0xd
 2376 02fa BF020000 		.4byte	.LASF46
 2377 02fe 01       		.byte	0x1
 2378 02ff 53       		.byte	0x53
 2379 0300 FE000000 		.4byte	0xfe
 2380 0304 02       		.uleb128 0x2
 2381 0305 91       		.byte	0x91
 2382 0306 4C       		.sleb128 -52
 2383 0307 0E       		.uleb128 0xe
 2384 0308 783100   		.ascii	"x1\000"
 2385 030b 01       		.byte	0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 69


 2386 030c 54       		.byte	0x54
 2387 030d FE000000 		.4byte	0xfe
 2388 0311 02       		.uleb128 0x2
 2389 0312 91       		.byte	0x91
 2390 0313 48       		.sleb128 -56
 2391 0314 0E       		.uleb128 0xe
 2392 0315 783200   		.ascii	"x2\000"
 2393 0318 01       		.byte	0x1
 2394 0319 54       		.byte	0x54
 2395 031a FE000000 		.4byte	0xfe
 2396 031e 02       		.uleb128 0x2
 2397 031f 91       		.byte	0x91
 2398 0320 44       		.sleb128 -60
 2399 0321 0E       		.uleb128 0xe
 2400 0322 783300   		.ascii	"x3\000"
 2401 0325 01       		.byte	0x1
 2402 0326 54       		.byte	0x54
 2403 0327 FE000000 		.4byte	0xfe
 2404 032b 03       		.uleb128 0x3
 2405 032c 91       		.byte	0x91
 2406 032d B07F     		.sleb128 -80
 2407 032f 0E       		.uleb128 0xe
 2408 0330 793100   		.ascii	"y1\000"
 2409 0333 01       		.byte	0x1
 2410 0334 54       		.byte	0x54
 2411 0335 FE000000 		.4byte	0xfe
 2412 0339 03       		.uleb128 0x3
 2413 033a 91       		.byte	0x91
 2414 033b B47F     		.sleb128 -76
 2415 033d 0D       		.uleb128 0xd
 2416 033e 78000000 		.4byte	.LASF47
 2417 0342 01       		.byte	0x1
 2418 0343 55       		.byte	0x55
 2419 0344 0A010000 		.4byte	0x10a
 2420 0348 03       		.uleb128 0x3
 2421 0349 91       		.byte	0x91
 2422 034a E07D     		.sleb128 -288
 2423 034c 0D       		.uleb128 0xd
 2424 034d 17000000 		.4byte	.LASF48
 2425 0351 01       		.byte	0x1
 2426 0352 56       		.byte	0x56
 2427 0353 E6000000 		.4byte	0xe6
 2428 0357 03       		.uleb128 0x3
 2429 0358 91       		.byte	0x91
 2430 0359 AF7F     		.sleb128 -81
 2431 035b 0D       		.uleb128 0xd
 2432 035c 02020000 		.4byte	.LASF49
 2433 0360 01       		.byte	0x1
 2434 0361 56       		.byte	0x56
 2435 0362 E6000000 		.4byte	0xe6
 2436 0366 03       		.uleb128 0x3
 2437 0367 91       		.byte	0x91
 2438 0368 AE7F     		.sleb128 -82
 2439 036a 0D       		.uleb128 0xd
 2440 036b 22000000 		.4byte	.LASF50
 2441 036f 01       		.byte	0x1
 2442 0370 56       		.byte	0x56
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 70


 2443 0371 E6000000 		.4byte	0xe6
 2444 0375 03       		.uleb128 0x3
 2445 0376 91       		.byte	0x91
 2446 0377 AD7F     		.sleb128 -83
 2447 0379 0D       		.uleb128 0xd
 2448 037a 27000000 		.4byte	.LASF51
 2449 037e 01       		.byte	0x1
 2450 037f 56       		.byte	0x56
 2451 0380 E6000000 		.4byte	0xe6
 2452 0384 03       		.uleb128 0x3
 2453 0385 91       		.byte	0x91
 2454 0386 AC7F     		.sleb128 -84
 2455 0388 0F       		.uleb128 0xf
 2456 0389 16010000 		.4byte	0x116
 2457 038d 3A040000 		.4byte	.LBB28
 2458 0391 32000000 		.4byte	.LBE28-.LBB28
 2459 0395 01       		.byte	0x1
 2460 0396 1601     		.2byte	0x116
 2461 0398 B8030000 		.4byte	0x3b8
 2462 039c 10       		.uleb128 0x10
 2463 039d 3B010000 		.4byte	0x13b
 2464 03a1 03       		.uleb128 0x3
 2465 03a2 91       		.byte	0x91
 2466 03a3 A07F     		.sleb128 -96
 2467 03a5 10       		.uleb128 0x10
 2468 03a6 31010000 		.4byte	0x131
 2469 03aa 03       		.uleb128 0x3
 2470 03ab 91       		.byte	0x91
 2471 03ac A47F     		.sleb128 -92
 2472 03ae 10       		.uleb128 0x10
 2473 03af 27010000 		.4byte	0x127
 2474 03b3 03       		.uleb128 0x3
 2475 03b4 91       		.byte	0x91
 2476 03b5 A87F     		.sleb128 -88
 2477 03b7 00       		.byte	0
 2478 03b8 0F       		.uleb128 0xf
 2479 03b9 16010000 		.4byte	0x116
 2480 03bd 98040000 		.4byte	.LBB30
 2481 03c1 32000000 		.4byte	.LBE30-.LBB30
 2482 03c5 01       		.byte	0x1
 2483 03c6 1701     		.2byte	0x117
 2484 03c8 E8030000 		.4byte	0x3e8
 2485 03cc 10       		.uleb128 0x10
 2486 03cd 3B010000 		.4byte	0x13b
 2487 03d1 03       		.uleb128 0x3
 2488 03d2 91       		.byte	0x91
 2489 03d3 947F     		.sleb128 -108
 2490 03d5 10       		.uleb128 0x10
 2491 03d6 31010000 		.4byte	0x131
 2492 03da 03       		.uleb128 0x3
 2493 03db 91       		.byte	0x91
 2494 03dc 987F     		.sleb128 -104
 2495 03de 10       		.uleb128 0x10
 2496 03df 27010000 		.4byte	0x127
 2497 03e3 03       		.uleb128 0x3
 2498 03e4 91       		.byte	0x91
 2499 03e5 9C7F     		.sleb128 -100
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 71


 2500 03e7 00       		.byte	0
 2501 03e8 0F       		.uleb128 0xf
 2502 03e9 48010000 		.4byte	0x148
 2503 03ed 10050000 		.4byte	.LBB32
 2504 03f1 32000000 		.4byte	.LBE32-.LBB32
 2505 03f5 01       		.byte	0x1
 2506 03f6 2101     		.2byte	0x121
 2507 03f8 18040000 		.4byte	0x418
 2508 03fc 10       		.uleb128 0x10
 2509 03fd 6D010000 		.4byte	0x16d
 2510 0401 03       		.uleb128 0x3
 2511 0402 91       		.byte	0x91
 2512 0403 887F     		.sleb128 -120
 2513 0405 10       		.uleb128 0x10
 2514 0406 63010000 		.4byte	0x163
 2515 040a 03       		.uleb128 0x3
 2516 040b 91       		.byte	0x91
 2517 040c 8C7F     		.sleb128 -116
 2518 040e 10       		.uleb128 0x10
 2519 040f 59010000 		.4byte	0x159
 2520 0413 03       		.uleb128 0x3
 2521 0414 91       		.byte	0x91
 2522 0415 907F     		.sleb128 -112
 2523 0417 00       		.byte	0
 2524 0418 0F       		.uleb128 0xf
 2525 0419 48010000 		.4byte	0x148
 2526 041d 9A050000 		.4byte	.LBB34
 2527 0421 32000000 		.4byte	.LBE34-.LBB34
 2528 0425 01       		.byte	0x1
 2529 0426 2D01     		.2byte	0x12d
 2530 0428 48040000 		.4byte	0x448
 2531 042c 10       		.uleb128 0x10
 2532 042d 6D010000 		.4byte	0x16d
 2533 0431 03       		.uleb128 0x3
 2534 0432 91       		.byte	0x91
 2535 0433 FC7E     		.sleb128 -132
 2536 0435 10       		.uleb128 0x10
 2537 0436 63010000 		.4byte	0x163
 2538 043a 03       		.uleb128 0x3
 2539 043b 91       		.byte	0x91
 2540 043c 807F     		.sleb128 -128
 2541 043e 10       		.uleb128 0x10
 2542 043f 59010000 		.4byte	0x159
 2543 0443 03       		.uleb128 0x3
 2544 0444 91       		.byte	0x91
 2545 0445 847F     		.sleb128 -124
 2546 0447 00       		.byte	0
 2547 0448 0F       		.uleb128 0xf
 2548 0449 16010000 		.4byte	0x116
 2549 044d 08060000 		.4byte	.LBB36
 2550 0451 32000000 		.4byte	.LBE36-.LBB36
 2551 0455 01       		.byte	0x1
 2552 0456 3201     		.2byte	0x132
 2553 0458 78040000 		.4byte	0x478
 2554 045c 10       		.uleb128 0x10
 2555 045d 3B010000 		.4byte	0x13b
 2556 0461 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 72


 2557 0462 91       		.byte	0x91
 2558 0463 F07E     		.sleb128 -144
 2559 0465 10       		.uleb128 0x10
 2560 0466 31010000 		.4byte	0x131
 2561 046a 03       		.uleb128 0x3
 2562 046b 91       		.byte	0x91
 2563 046c F47E     		.sleb128 -140
 2564 046e 10       		.uleb128 0x10
 2565 046f 27010000 		.4byte	0x127
 2566 0473 03       		.uleb128 0x3
 2567 0474 91       		.byte	0x91
 2568 0475 F87E     		.sleb128 -136
 2569 0477 00       		.byte	0
 2570 0478 0F       		.uleb128 0xf
 2571 0479 16010000 		.4byte	0x116
 2572 047d 66060000 		.4byte	.LBB38
 2573 0481 32000000 		.4byte	.LBE38-.LBB38
 2574 0485 01       		.byte	0x1
 2575 0486 3401     		.2byte	0x134
 2576 0488 A8040000 		.4byte	0x4a8
 2577 048c 10       		.uleb128 0x10
 2578 048d 3B010000 		.4byte	0x13b
 2579 0491 03       		.uleb128 0x3
 2580 0492 91       		.byte	0x91
 2581 0493 E47E     		.sleb128 -156
 2582 0495 10       		.uleb128 0x10
 2583 0496 31010000 		.4byte	0x131
 2584 049a 03       		.uleb128 0x3
 2585 049b 91       		.byte	0x91
 2586 049c E87E     		.sleb128 -152
 2587 049e 10       		.uleb128 0x10
 2588 049f 27010000 		.4byte	0x127
 2589 04a3 03       		.uleb128 0x3
 2590 04a4 91       		.byte	0x91
 2591 04a5 EC7E     		.sleb128 -148
 2592 04a7 00       		.byte	0
 2593 04a8 0F       		.uleb128 0xf
 2594 04a9 48010000 		.4byte	0x148
 2595 04ad C2060000 		.4byte	.LBB40
 2596 04b1 32000000 		.4byte	.LBE40-.LBB40
 2597 04b5 01       		.byte	0x1
 2598 04b6 3601     		.2byte	0x136
 2599 04b8 D8040000 		.4byte	0x4d8
 2600 04bc 10       		.uleb128 0x10
 2601 04bd 6D010000 		.4byte	0x16d
 2602 04c1 03       		.uleb128 0x3
 2603 04c2 91       		.byte	0x91
 2604 04c3 D87E     		.sleb128 -168
 2605 04c5 10       		.uleb128 0x10
 2606 04c6 63010000 		.4byte	0x163
 2607 04ca 03       		.uleb128 0x3
 2608 04cb 91       		.byte	0x91
 2609 04cc DC7E     		.sleb128 -164
 2610 04ce 10       		.uleb128 0x10
 2611 04cf 59010000 		.4byte	0x159
 2612 04d3 03       		.uleb128 0x3
 2613 04d4 91       		.byte	0x91
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 73


 2614 04d5 E07E     		.sleb128 -160
 2615 04d7 00       		.byte	0
 2616 04d8 0F       		.uleb128 0xf
 2617 04d9 48010000 		.4byte	0x148
 2618 04dd 48070000 		.4byte	.LBB42
 2619 04e1 2E000000 		.4byte	.LBE42-.LBB42
 2620 04e5 01       		.byte	0x1
 2621 04e6 4001     		.2byte	0x140
 2622 04e8 08050000 		.4byte	0x508
 2623 04ec 10       		.uleb128 0x10
 2624 04ed 6D010000 		.4byte	0x16d
 2625 04f1 03       		.uleb128 0x3
 2626 04f2 91       		.byte	0x91
 2627 04f3 CC7E     		.sleb128 -180
 2628 04f5 10       		.uleb128 0x10
 2629 04f6 63010000 		.4byte	0x163
 2630 04fa 03       		.uleb128 0x3
 2631 04fb 91       		.byte	0x91
 2632 04fc D07E     		.sleb128 -176
 2633 04fe 10       		.uleb128 0x10
 2634 04ff 59010000 		.4byte	0x159
 2635 0503 03       		.uleb128 0x3
 2636 0504 91       		.byte	0x91
 2637 0505 D47E     		.sleb128 -172
 2638 0507 00       		.byte	0
 2639 0508 0F       		.uleb128 0xf
 2640 0509 7A010000 		.4byte	0x17a
 2641 050d B0080000 		.4byte	.LBB44
 2642 0511 52000000 		.4byte	.LBE44-.LBB44
 2643 0515 01       		.byte	0x1
 2644 0516 6401     		.2byte	0x164
 2645 0518 54050000 		.4byte	0x554
 2646 051c 10       		.uleb128 0x10
 2647 051d 95010000 		.4byte	0x195
 2648 0521 03       		.uleb128 0x3
 2649 0522 91       		.byte	0x91
 2650 0523 C47E     		.sleb128 -188
 2651 0525 10       		.uleb128 0x10
 2652 0526 8B010000 		.4byte	0x18b
 2653 052a 03       		.uleb128 0x3
 2654 052b 91       		.byte	0x91
 2655 052c C87E     		.sleb128 -184
 2656 052e 11       		.uleb128 0x11
 2657 052f B0080000 		.4byte	.LBB45
 2658 0533 52000000 		.4byte	.LBE45-.LBB45
 2659 0537 12       		.uleb128 0x12
 2660 0538 9F010000 		.4byte	0x19f
 2661 053c 03       		.uleb128 0x3
 2662 053d 91       		.byte	0x91
 2663 053e C07E     		.sleb128 -192
 2664 0540 12       		.uleb128 0x12
 2665 0541 AB010000 		.4byte	0x1ab
 2666 0545 03       		.uleb128 0x3
 2667 0546 91       		.byte	0x91
 2668 0547 B87E     		.sleb128 -200
 2669 0549 12       		.uleb128 0x12
 2670 054a B7010000 		.4byte	0x1b7
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 74


 2671 054e 03       		.uleb128 0x3
 2672 054f 91       		.byte	0x91
 2673 0550 BC7E     		.sleb128 -196
 2674 0552 00       		.byte	0
 2675 0553 00       		.byte	0
 2676 0554 0F       		.uleb128 0xf
 2677 0555 7A010000 		.4byte	0x17a
 2678 0559 16090000 		.4byte	.LBB46
 2679 055d 52000000 		.4byte	.LBE46-.LBB46
 2680 0561 01       		.byte	0x1
 2681 0562 6501     		.2byte	0x165
 2682 0564 A0050000 		.4byte	0x5a0
 2683 0568 10       		.uleb128 0x10
 2684 0569 95010000 		.4byte	0x195
 2685 056d 03       		.uleb128 0x3
 2686 056e 91       		.byte	0x91
 2687 056f B07E     		.sleb128 -208
 2688 0571 10       		.uleb128 0x10
 2689 0572 8B010000 		.4byte	0x18b
 2690 0576 03       		.uleb128 0x3
 2691 0577 91       		.byte	0x91
 2692 0578 B47E     		.sleb128 -204
 2693 057a 11       		.uleb128 0x11
 2694 057b 16090000 		.4byte	.LBB47
 2695 057f 52000000 		.4byte	.LBE47-.LBB47
 2696 0583 12       		.uleb128 0x12
 2697 0584 9F010000 		.4byte	0x19f
 2698 0588 03       		.uleb128 0x3
 2699 0589 91       		.byte	0x91
 2700 058a AC7E     		.sleb128 -212
 2701 058c 12       		.uleb128 0x12
 2702 058d AB010000 		.4byte	0x1ab
 2703 0591 03       		.uleb128 0x3
 2704 0592 91       		.byte	0x91
 2705 0593 A47E     		.sleb128 -220
 2706 0595 12       		.uleb128 0x12
 2707 0596 B7010000 		.4byte	0x1b7
 2708 059a 03       		.uleb128 0x3
 2709 059b 91       		.byte	0x91
 2710 059c A87E     		.sleb128 -216
 2711 059e 00       		.byte	0
 2712 059f 00       		.byte	0
 2713 05a0 0F       		.uleb128 0xf
 2714 05a1 7A010000 		.4byte	0x17a
 2715 05a5 7C090000 		.4byte	.LBB48
 2716 05a9 52000000 		.4byte	.LBE48-.LBB48
 2717 05ad 01       		.byte	0x1
 2718 05ae 6601     		.2byte	0x166
 2719 05b0 EC050000 		.4byte	0x5ec
 2720 05b4 10       		.uleb128 0x10
 2721 05b5 95010000 		.4byte	0x195
 2722 05b9 03       		.uleb128 0x3
 2723 05ba 91       		.byte	0x91
 2724 05bb 9C7E     		.sleb128 -228
 2725 05bd 10       		.uleb128 0x10
 2726 05be 8B010000 		.4byte	0x18b
 2727 05c2 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 75


 2728 05c3 91       		.byte	0x91
 2729 05c4 A07E     		.sleb128 -224
 2730 05c6 11       		.uleb128 0x11
 2731 05c7 7C090000 		.4byte	.LBB49
 2732 05cb 52000000 		.4byte	.LBE49-.LBB49
 2733 05cf 12       		.uleb128 0x12
 2734 05d0 9F010000 		.4byte	0x19f
 2735 05d4 03       		.uleb128 0x3
 2736 05d5 91       		.byte	0x91
 2737 05d6 987E     		.sleb128 -232
 2738 05d8 12       		.uleb128 0x12
 2739 05d9 AB010000 		.4byte	0x1ab
 2740 05dd 03       		.uleb128 0x3
 2741 05de 91       		.byte	0x91
 2742 05df 907E     		.sleb128 -240
 2743 05e1 12       		.uleb128 0x12
 2744 05e2 B7010000 		.4byte	0x1b7
 2745 05e6 03       		.uleb128 0x3
 2746 05e7 91       		.byte	0x91
 2747 05e8 947E     		.sleb128 -236
 2748 05ea 00       		.byte	0
 2749 05eb 00       		.byte	0
 2750 05ec 0F       		.uleb128 0xf
 2751 05ed 7A010000 		.4byte	0x17a
 2752 05f1 E2090000 		.4byte	.LBB50
 2753 05f5 52000000 		.4byte	.LBE50-.LBB50
 2754 05f9 01       		.byte	0x1
 2755 05fa 6701     		.2byte	0x167
 2756 05fc 38060000 		.4byte	0x638
 2757 0600 10       		.uleb128 0x10
 2758 0601 95010000 		.4byte	0x195
 2759 0605 03       		.uleb128 0x3
 2760 0606 91       		.byte	0x91
 2761 0607 887E     		.sleb128 -248
 2762 0609 10       		.uleb128 0x10
 2763 060a 8B010000 		.4byte	0x18b
 2764 060e 03       		.uleb128 0x3
 2765 060f 91       		.byte	0x91
 2766 0610 8C7E     		.sleb128 -244
 2767 0612 11       		.uleb128 0x11
 2768 0613 E2090000 		.4byte	.LBB51
 2769 0617 52000000 		.4byte	.LBE51-.LBB51
 2770 061b 12       		.uleb128 0x12
 2771 061c 9F010000 		.4byte	0x19f
 2772 0620 03       		.uleb128 0x3
 2773 0621 91       		.byte	0x91
 2774 0622 847E     		.sleb128 -252
 2775 0624 12       		.uleb128 0x12
 2776 0625 AB010000 		.4byte	0x1ab
 2777 0629 03       		.uleb128 0x3
 2778 062a 91       		.byte	0x91
 2779 062b FC7D     		.sleb128 -260
 2780 062d 12       		.uleb128 0x12
 2781 062e B7010000 		.4byte	0x1b7
 2782 0632 03       		.uleb128 0x3
 2783 0633 91       		.byte	0x91
 2784 0634 807E     		.sleb128 -256
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 76


 2785 0636 00       		.byte	0
 2786 0637 00       		.byte	0
 2787 0638 13       		.uleb128 0x13
 2788 0639 7A010000 		.4byte	0x17a
 2789 063d F60B0000 		.4byte	.LBB52
 2790 0641 52000000 		.4byte	.LBE52-.LBB52
 2791 0645 01       		.byte	0x1
 2792 0646 9901     		.2byte	0x199
 2793 0648 10       		.uleb128 0x10
 2794 0649 95010000 		.4byte	0x195
 2795 064d 03       		.uleb128 0x3
 2796 064e 91       		.byte	0x91
 2797 064f F47D     		.sleb128 -268
 2798 0651 10       		.uleb128 0x10
 2799 0652 8B010000 		.4byte	0x18b
 2800 0656 03       		.uleb128 0x3
 2801 0657 91       		.byte	0x91
 2802 0658 F87D     		.sleb128 -264
 2803 065a 11       		.uleb128 0x11
 2804 065b F60B0000 		.4byte	.LBB53
 2805 065f 52000000 		.4byte	.LBE53-.LBB53
 2806 0663 12       		.uleb128 0x12
 2807 0664 9F010000 		.4byte	0x19f
 2808 0668 03       		.uleb128 0x3
 2809 0669 91       		.byte	0x91
 2810 066a F07D     		.sleb128 -272
 2811 066c 12       		.uleb128 0x12
 2812 066d AB010000 		.4byte	0x1ab
 2813 0671 03       		.uleb128 0x3
 2814 0672 91       		.byte	0x91
 2815 0673 E87D     		.sleb128 -280
 2816 0675 12       		.uleb128 0x12
 2817 0676 B7010000 		.4byte	0x1b7
 2818 067a 03       		.uleb128 0x3
 2819 067b 91       		.byte	0x91
 2820 067c EC7D     		.sleb128 -276
 2821 067e 00       		.byte	0
 2822 067f 00       		.byte	0
 2823 0680 00       		.byte	0
 2824 0681 00       		.byte	0
 2825              		.section	.debug_abbrev,"",%progbits
 2826              	.Ldebug_abbrev0:
 2827 0000 01       		.uleb128 0x1
 2828 0001 11       		.uleb128 0x11
 2829 0002 01       		.byte	0x1
 2830 0003 25       		.uleb128 0x25
 2831 0004 0E       		.uleb128 0xe
 2832 0005 13       		.uleb128 0x13
 2833 0006 0B       		.uleb128 0xb
 2834 0007 03       		.uleb128 0x3
 2835 0008 0E       		.uleb128 0xe
 2836 0009 1B       		.uleb128 0x1b
 2837 000a 0E       		.uleb128 0xe
 2838 000b 55       		.uleb128 0x55
 2839 000c 17       		.uleb128 0x17
 2840 000d 11       		.uleb128 0x11
 2841 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 77


 2842 000f 10       		.uleb128 0x10
 2843 0010 17       		.uleb128 0x17
 2844 0011 00       		.byte	0
 2845 0012 00       		.byte	0
 2846 0013 02       		.uleb128 0x2
 2847 0014 16       		.uleb128 0x16
 2848 0015 00       		.byte	0
 2849 0016 03       		.uleb128 0x3
 2850 0017 0E       		.uleb128 0xe
 2851 0018 3A       		.uleb128 0x3a
 2852 0019 0B       		.uleb128 0xb
 2853 001a 3B       		.uleb128 0x3b
 2854 001b 0B       		.uleb128 0xb
 2855 001c 49       		.uleb128 0x49
 2856 001d 13       		.uleb128 0x13
 2857 001e 00       		.byte	0
 2858 001f 00       		.byte	0
 2859 0020 03       		.uleb128 0x3
 2860 0021 24       		.uleb128 0x24
 2861 0022 00       		.byte	0
 2862 0023 0B       		.uleb128 0xb
 2863 0024 0B       		.uleb128 0xb
 2864 0025 3E       		.uleb128 0x3e
 2865 0026 0B       		.uleb128 0xb
 2866 0027 03       		.uleb128 0x3
 2867 0028 0E       		.uleb128 0xe
 2868 0029 00       		.byte	0
 2869 002a 00       		.byte	0
 2870 002b 04       		.uleb128 0x4
 2871 002c 24       		.uleb128 0x24
 2872 002d 00       		.byte	0
 2873 002e 0B       		.uleb128 0xb
 2874 002f 0B       		.uleb128 0xb
 2875 0030 3E       		.uleb128 0x3e
 2876 0031 0B       		.uleb128 0xb
 2877 0032 03       		.uleb128 0x3
 2878 0033 08       		.uleb128 0x8
 2879 0034 00       		.byte	0
 2880 0035 00       		.byte	0
 2881 0036 05       		.uleb128 0x5
 2882 0037 16       		.uleb128 0x16
 2883 0038 00       		.byte	0
 2884 0039 03       		.uleb128 0x3
 2885 003a 0E       		.uleb128 0xe
 2886 003b 3A       		.uleb128 0x3a
 2887 003c 0B       		.uleb128 0xb
 2888 003d 3B       		.uleb128 0x3b
 2889 003e 05       		.uleb128 0x5
 2890 003f 49       		.uleb128 0x49
 2891 0040 13       		.uleb128 0x13
 2892 0041 00       		.byte	0
 2893 0042 00       		.byte	0
 2894 0043 06       		.uleb128 0x6
 2895 0044 0F       		.uleb128 0xf
 2896 0045 00       		.byte	0
 2897 0046 0B       		.uleb128 0xb
 2898 0047 0B       		.uleb128 0xb
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 78


 2899 0048 49       		.uleb128 0x49
 2900 0049 13       		.uleb128 0x13
 2901 004a 00       		.byte	0
 2902 004b 00       		.byte	0
 2903 004c 07       		.uleb128 0x7
 2904 004d 2E       		.uleb128 0x2e
 2905 004e 01       		.byte	0x1
 2906 004f 03       		.uleb128 0x3
 2907 0050 0E       		.uleb128 0xe
 2908 0051 3A       		.uleb128 0x3a
 2909 0052 0B       		.uleb128 0xb
 2910 0053 3B       		.uleb128 0x3b
 2911 0054 05       		.uleb128 0x5
 2912 0055 27       		.uleb128 0x27
 2913 0056 19       		.uleb128 0x19
 2914 0057 49       		.uleb128 0x49
 2915 0058 13       		.uleb128 0x13
 2916 0059 20       		.uleb128 0x20
 2917 005a 0B       		.uleb128 0xb
 2918 005b 01       		.uleb128 0x1
 2919 005c 13       		.uleb128 0x13
 2920 005d 00       		.byte	0
 2921 005e 00       		.byte	0
 2922 005f 08       		.uleb128 0x8
 2923 0060 05       		.uleb128 0x5
 2924 0061 00       		.byte	0
 2925 0062 03       		.uleb128 0x3
 2926 0063 08       		.uleb128 0x8
 2927 0064 3A       		.uleb128 0x3a
 2928 0065 0B       		.uleb128 0xb
 2929 0066 3B       		.uleb128 0x3b
 2930 0067 05       		.uleb128 0x5
 2931 0068 49       		.uleb128 0x49
 2932 0069 13       		.uleb128 0x13
 2933 006a 00       		.byte	0
 2934 006b 00       		.byte	0
 2935 006c 09       		.uleb128 0x9
 2936 006d 34       		.uleb128 0x34
 2937 006e 00       		.byte	0
 2938 006f 03       		.uleb128 0x3
 2939 0070 0E       		.uleb128 0xe
 2940 0071 3A       		.uleb128 0x3a
 2941 0072 0B       		.uleb128 0xb
 2942 0073 3B       		.uleb128 0x3b
 2943 0074 05       		.uleb128 0x5
 2944 0075 49       		.uleb128 0x49
 2945 0076 13       		.uleb128 0x13
 2946 0077 00       		.byte	0
 2947 0078 00       		.byte	0
 2948 0079 0A       		.uleb128 0xa
 2949 007a 34       		.uleb128 0x34
 2950 007b 00       		.byte	0
 2951 007c 03       		.uleb128 0x3
 2952 007d 08       		.uleb128 0x8
 2953 007e 3A       		.uleb128 0x3a
 2954 007f 0B       		.uleb128 0xb
 2955 0080 3B       		.uleb128 0x3b
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 79


 2956 0081 05       		.uleb128 0x5
 2957 0082 49       		.uleb128 0x49
 2958 0083 13       		.uleb128 0x13
 2959 0084 00       		.byte	0
 2960 0085 00       		.byte	0
 2961 0086 0B       		.uleb128 0xb
 2962 0087 2E       		.uleb128 0x2e
 2963 0088 01       		.byte	0x1
 2964 0089 3F       		.uleb128 0x3f
 2965 008a 19       		.uleb128 0x19
 2966 008b 03       		.uleb128 0x3
 2967 008c 0E       		.uleb128 0xe
 2968 008d 3A       		.uleb128 0x3a
 2969 008e 0B       		.uleb128 0xb
 2970 008f 3B       		.uleb128 0x3b
 2971 0090 0B       		.uleb128 0xb
 2972 0091 27       		.uleb128 0x27
 2973 0092 19       		.uleb128 0x19
 2974 0093 11       		.uleb128 0x11
 2975 0094 01       		.uleb128 0x1
 2976 0095 12       		.uleb128 0x12
 2977 0096 06       		.uleb128 0x6
 2978 0097 40       		.uleb128 0x40
 2979 0098 18       		.uleb128 0x18
 2980 0099 9642     		.uleb128 0x2116
 2981 009b 19       		.uleb128 0x19
 2982 009c 00       		.byte	0
 2983 009d 00       		.byte	0
 2984 009e 0C       		.uleb128 0xc
 2985 009f 05       		.uleb128 0x5
 2986 00a0 00       		.byte	0
 2987 00a1 03       		.uleb128 0x3
 2988 00a2 0E       		.uleb128 0xe
 2989 00a3 3A       		.uleb128 0x3a
 2990 00a4 0B       		.uleb128 0xb
 2991 00a5 3B       		.uleb128 0x3b
 2992 00a6 0B       		.uleb128 0xb
 2993 00a7 49       		.uleb128 0x49
 2994 00a8 13       		.uleb128 0x13
 2995 00a9 02       		.uleb128 0x2
 2996 00aa 18       		.uleb128 0x18
 2997 00ab 00       		.byte	0
 2998 00ac 00       		.byte	0
 2999 00ad 0D       		.uleb128 0xd
 3000 00ae 34       		.uleb128 0x34
 3001 00af 00       		.byte	0
 3002 00b0 03       		.uleb128 0x3
 3003 00b1 0E       		.uleb128 0xe
 3004 00b2 3A       		.uleb128 0x3a
 3005 00b3 0B       		.uleb128 0xb
 3006 00b4 3B       		.uleb128 0x3b
 3007 00b5 0B       		.uleb128 0xb
 3008 00b6 49       		.uleb128 0x49
 3009 00b7 13       		.uleb128 0x13
 3010 00b8 02       		.uleb128 0x2
 3011 00b9 18       		.uleb128 0x18
 3012 00ba 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 80


 3013 00bb 00       		.byte	0
 3014 00bc 0E       		.uleb128 0xe
 3015 00bd 34       		.uleb128 0x34
 3016 00be 00       		.byte	0
 3017 00bf 03       		.uleb128 0x3
 3018 00c0 08       		.uleb128 0x8
 3019 00c1 3A       		.uleb128 0x3a
 3020 00c2 0B       		.uleb128 0xb
 3021 00c3 3B       		.uleb128 0x3b
 3022 00c4 0B       		.uleb128 0xb
 3023 00c5 49       		.uleb128 0x49
 3024 00c6 13       		.uleb128 0x13
 3025 00c7 02       		.uleb128 0x2
 3026 00c8 18       		.uleb128 0x18
 3027 00c9 00       		.byte	0
 3028 00ca 00       		.byte	0
 3029 00cb 0F       		.uleb128 0xf
 3030 00cc 1D       		.uleb128 0x1d
 3031 00cd 01       		.byte	0x1
 3032 00ce 31       		.uleb128 0x31
 3033 00cf 13       		.uleb128 0x13
 3034 00d0 11       		.uleb128 0x11
 3035 00d1 01       		.uleb128 0x1
 3036 00d2 12       		.uleb128 0x12
 3037 00d3 06       		.uleb128 0x6
 3038 00d4 58       		.uleb128 0x58
 3039 00d5 0B       		.uleb128 0xb
 3040 00d6 59       		.uleb128 0x59
 3041 00d7 05       		.uleb128 0x5
 3042 00d8 01       		.uleb128 0x1
 3043 00d9 13       		.uleb128 0x13
 3044 00da 00       		.byte	0
 3045 00db 00       		.byte	0
 3046 00dc 10       		.uleb128 0x10
 3047 00dd 05       		.uleb128 0x5
 3048 00de 00       		.byte	0
 3049 00df 31       		.uleb128 0x31
 3050 00e0 13       		.uleb128 0x13
 3051 00e1 02       		.uleb128 0x2
 3052 00e2 18       		.uleb128 0x18
 3053 00e3 00       		.byte	0
 3054 00e4 00       		.byte	0
 3055 00e5 11       		.uleb128 0x11
 3056 00e6 0B       		.uleb128 0xb
 3057 00e7 01       		.byte	0x1
 3058 00e8 11       		.uleb128 0x11
 3059 00e9 01       		.uleb128 0x1
 3060 00ea 12       		.uleb128 0x12
 3061 00eb 06       		.uleb128 0x6
 3062 00ec 00       		.byte	0
 3063 00ed 00       		.byte	0
 3064 00ee 12       		.uleb128 0x12
 3065 00ef 34       		.uleb128 0x34
 3066 00f0 00       		.byte	0
 3067 00f1 31       		.uleb128 0x31
 3068 00f2 13       		.uleb128 0x13
 3069 00f3 02       		.uleb128 0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 81


 3070 00f4 18       		.uleb128 0x18
 3071 00f5 00       		.byte	0
 3072 00f6 00       		.byte	0
 3073 00f7 13       		.uleb128 0x13
 3074 00f8 1D       		.uleb128 0x1d
 3075 00f9 01       		.byte	0x1
 3076 00fa 31       		.uleb128 0x31
 3077 00fb 13       		.uleb128 0x13
 3078 00fc 11       		.uleb128 0x11
 3079 00fd 01       		.uleb128 0x1
 3080 00fe 12       		.uleb128 0x12
 3081 00ff 06       		.uleb128 0x6
 3082 0100 58       		.uleb128 0x58
 3083 0101 0B       		.uleb128 0xb
 3084 0102 59       		.uleb128 0x59
 3085 0103 05       		.uleb128 0x5
 3086 0104 00       		.byte	0
 3087 0105 00       		.byte	0
 3088 0106 00       		.byte	0
 3089              		.section	.debug_aranges,"",%progbits
 3090 0000 1C000000 		.4byte	0x1c
 3091 0004 0200     		.2byte	0x2
 3092 0006 00000000 		.4byte	.Ldebug_info0
 3093 000a 04       		.byte	0x4
 3094 000b 00       		.byte	0
 3095 000c 0000     		.2byte	0
 3096 000e 0000     		.2byte	0
 3097 0010 00000000 		.4byte	.LFB82
 3098 0014 800C0000 		.4byte	.LFE82-.LFB82
 3099 0018 00000000 		.4byte	0
 3100 001c 00000000 		.4byte	0
 3101              		.section	.debug_ranges,"",%progbits
 3102              	.Ldebug_ranges0:
 3103 0000 00000000 		.4byte	.LFB82
 3104 0004 800C0000 		.4byte	.LFE82
 3105 0008 00000000 		.4byte	0
 3106 000c 00000000 		.4byte	0
 3107              		.section	.debug_line,"",%progbits
 3108              	.Ldebug_line0:
 3109 0000 2E030000 		.section	.debug_str,"MS",%progbits,1
 3109      02005201 
 3109      00000201 
 3109      FB0E0D00 
 3109      01010101 
 3110              	.LASF38:
 3111 0000 70536372 		.ascii	"pScr1\000"
 3111      3100
 3112              	.LASF37:
 3113 0006 70536372 		.ascii	"pScr2\000"
 3113      3200
 3114              	.LASF34:
 3115 000c 70447374 		.ascii	"pDst\000"
 3115      00
 3116              	.LASF24:
 3117 0011 7133315F 		.ascii	"q31_t\000"
 3117      7400
 3118              	.LASF48:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 82


 3119 0017 6F757430 		.ascii	"out0\000"
 3119      00
 3120              	.LASF23:
 3121 001c 7131355F 		.ascii	"q15_t\000"
 3121      7400
 3122              	.LASF50:
 3123 0022 6F757432 		.ascii	"out2\000"
 3123      00
 3124              	.LASF51:
 3125 0027 6F757433 		.ascii	"out3\000"
 3125      00
 3126              	.LASF13:
 3127 002c 696E7438 		.ascii	"int8_t\000"
 3127      5F7400
 3128              	.LASF4:
 3129 0033 73686F72 		.ascii	"short int\000"
 3129      7420696E 
 3129      7400
 3130              	.LASF17:
 3131 003d 73697A65 		.ascii	"sizetype\000"
 3131      74797065 
 3131      00
 3132              	.LASF42:
 3133 0046 74617043 		.ascii	"tapCnt\000"
 3133      6E7400
 3134              	.LASF21:
 3135 004d 6C6F6E67 		.ascii	"long double\000"
 3135      20646F75 
 3135      626C6500 
 3136              	.LASF8:
 3137 0059 5F5F7569 		.ascii	"__uint32_t\000"
 3137      6E743332 
 3137      5F7400
 3138              	.LASF35:
 3139 0064 70536372 		.ascii	"pScratch1\000"
 3139      61746368 
 3139      3100
 3140              	.LASF36:
 3141 006e 70536372 		.ascii	"pScratch2\000"
 3141      61746368 
 3141      3200
 3142              	.LASF47:
 3143 0078 704F7574 		.ascii	"pOut\000"
 3143      00
 3144              	.LASF26:
 3145 007d 5F5F534D 		.ascii	"__SMLADX\000"
 3145      4C414458 
 3145      00
 3146              	.LASF31:
 3147 0086 73726341 		.ascii	"srcALen\000"
 3147      4C656E00 
 3148              	.LASF25:
 3149 008e 5F5F534D 		.ascii	"__SMLAD\000"
 3149      4C414400 
 3150              	.LASF20:
 3151 0096 666C6F61 		.ascii	"float\000"
 3151      7400
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 83


 3152              	.LASF41:
 3153 009c 626C6B43 		.ascii	"blkCnt\000"
 3153      6E7400
 3154              	.LASF30:
 3155 00a3 70537263 		.ascii	"pSrcA\000"
 3155      4100
 3156              	.LASF10:
 3157 00a9 6C6F6E67 		.ascii	"long long int\000"
 3157      206C6F6E 
 3157      6720696E 
 3157      7400
 3158              	.LASF32:
 3159 00b7 70537263 		.ascii	"pSrcB\000"
 3159      4200
 3160              	.LASF7:
 3161 00bd 6C6F6E67 		.ascii	"long int\000"
 3161      20696E74 
 3161      00
 3162              	.LASF22:
 3163 00c6 71375F74 		.ascii	"q7_t\000"
 3163      00
 3164              	.LASF2:
 3165 00cb 5F5F696E 		.ascii	"__int8_t\000"
 3165      74385F74 
 3165      00
 3166              	.LASF1:
 3167 00d4 756E7369 		.ascii	"unsigned char\000"
 3167      676E6564 
 3167      20636861 
 3167      7200
 3168              	.LASF0:
 3169 00e2 7369676E 		.ascii	"signed char\000"
 3169      65642063 
 3169      68617200 
 3170              	.LASF11:
 3171 00ee 6C6F6E67 		.ascii	"long long unsigned int\000"
 3171      206C6F6E 
 3171      6720756E 
 3171      7369676E 
 3171      65642069 
 3172              	.LASF16:
 3173 0105 75696E74 		.ascii	"uint32_t\000"
 3173      33325F74 
 3173      00
 3174              	.LASF54:
 3175 010e 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 3175      73657273 
 3175      5C666E65 
 3175      7665735C 
 3175      446F6375 
 3176 013b 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 3176      655F7370 
 3176      6565645F 
 3176      73656E73 
 3176      6F722E63 
 3177              	.LASF12:
 3178 0154 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 84


 3178      676E6564 
 3178      20696E74 
 3178      00
 3179              	.LASF33:
 3180 0161 73726342 		.ascii	"srcBLen\000"
 3180      4C656E00 
 3181              	.LASF52:
 3182 0169 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3182      4320342E 
 3182      392E3320 
 3182      32303135 
 3182      30333033 
 3183 019c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 3183      20726576 
 3183      6973696F 
 3183      6E203232 
 3183      31323230 
 3184 01cf 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 3184      30202D66 
 3184      66756E63 
 3184      74696F6E 
 3184      2D736563 
 3185              	.LASF27:
 3186 01fb 5F5F5353 		.ascii	"__SSAT\000"
 3186      415400
 3187              	.LASF49:
 3188 0202 6F757431 		.ascii	"out1\000"
 3188      00
 3189              	.LASF5:
 3190 0207 73686F72 		.ascii	"short unsigned int\000"
 3190      7420756E 
 3190      7369676E 
 3190      65642069 
 3190      6E7400
 3191              	.LASF18:
 3192 021a 63686172 		.ascii	"char\000"
 3192      00
 3193              	.LASF15:
 3194 021f 696E7433 		.ascii	"int32_t\000"
 3194      325F7400 
 3195              	.LASF14:
 3196 0227 696E7431 		.ascii	"int16_t\000"
 3196      365F7400 
 3197              	.LASF29:
 3198 022f 6E65674D 		.ascii	"negMin\000"
 3198      696E00
 3199              	.LASF28:
 3200 0236 706F734D 		.ascii	"posMax\000"
 3200      617800
 3201              	.LASF9:
 3202 023d 6C6F6E67 		.ascii	"long unsigned int\000"
 3202      20756E73 
 3202      69676E65 
 3202      6420696E 
 3202      7400
 3203              	.LASF19:
 3204 024f 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc4yZGKe.s 			page 85


 3204      6C6500
 3205              	.LASF55:
 3206 0256 61726D5F 		.ascii	"arm_conv_opt_q7\000"
 3206      636F6E76 
 3206      5F6F7074 
 3206      5F713700 
 3207              	.LASF39:
 3208 0266 70496E31 		.ascii	"pIn1\000"
 3208      00
 3209              	.LASF40:
 3210 026b 70496E32 		.ascii	"pIn2\000"
 3210      00
 3211              	.LASF6:
 3212 0270 5F5F696E 		.ascii	"__int32_t\000"
 3212      7433325F 
 3212      7400
 3213              	.LASF3:
 3214 027a 5F5F696E 		.ascii	"__int16_t\000"
 3214      7431365F 
 3214      7400
 3215              	.LASF53:
 3216 0284 536F7572 		.ascii	"Source\\FilteringFunctions\\arm_conv_opt_q7.c\000"
 3216      63655C46 
 3216      696C7465 
 3216      72696E67 
 3216      46756E63 
 3217              	.LASF43:
 3218 02b0 61636330 		.ascii	"acc0\000"
 3218      00
 3219              	.LASF44:
 3220 02b5 61636331 		.ascii	"acc1\000"
 3220      00
 3221              	.LASF45:
 3222 02ba 61636332 		.ascii	"acc2\000"
 3222      00
 3223              	.LASF46:
 3224 02bf 61636333 		.ascii	"acc3\000"
 3224      00
 3225              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
