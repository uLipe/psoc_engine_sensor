ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_mat_sub_q15.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.arm_mat_sub_q15,"ax",%progbits
  18              		.align	2
  19              		.global	arm_mat_sub_q15
  20              		.code	16
  21              		.thumb_func
  22              		.type	arm_mat_sub_q15, %function
  23              	arm_mat_sub_q15:
  24              	.LFB82:
  25              		.file 1 "Source\\MatrixFunctions\\arm_mat_sub_q15.c"
   1:Source\MatrixFunctions/arm_mat_sub_q15.c **** /* ----------------------------------------------------------------------
   2:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * Project:      CMSIS DSP Library
   3:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * Title:        arm_mat_sub_q15.c
   4:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * Description:  Q15 Matrix subtraction
   5:Source\MatrixFunctions/arm_mat_sub_q15.c ****  *
   6:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * $Date:        27. January 2017
   7:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * $Revision:    V.1.5.1
   8:Source\MatrixFunctions/arm_mat_sub_q15.c ****  *
   9:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * Target Processor: Cortex-M cores
  10:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * -------------------------------------------------------------------- */
  11:Source\MatrixFunctions/arm_mat_sub_q15.c **** /*
  12:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\MatrixFunctions/arm_mat_sub_q15.c ****  *
  14:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\MatrixFunctions/arm_mat_sub_q15.c ****  *
  16:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * not use this file except in compliance with the License.
  18:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * You may obtain a copy of the License at
  19:Source\MatrixFunctions/arm_mat_sub_q15.c ****  *
  20:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\MatrixFunctions/arm_mat_sub_q15.c ****  *
  22:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * See the License for the specific language governing permissions and
  26:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * limitations under the License.
  27:Source\MatrixFunctions/arm_mat_sub_q15.c ****  */
  28:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
  29:Source\MatrixFunctions/arm_mat_sub_q15.c **** #include "arm_math.h"
  30:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
  31:Source\MatrixFunctions/arm_mat_sub_q15.c **** /**
  32:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * @ingroup groupMatrix
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 2


  33:Source\MatrixFunctions/arm_mat_sub_q15.c ****  */
  34:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
  35:Source\MatrixFunctions/arm_mat_sub_q15.c **** /**
  36:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * @addtogroup MatrixSub
  37:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * @{
  38:Source\MatrixFunctions/arm_mat_sub_q15.c ****  */
  39:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
  40:Source\MatrixFunctions/arm_mat_sub_q15.c **** /**
  41:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * @brief Q15 matrix subtraction.
  42:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * @param[in]       *pSrcA points to the first input matrix structure
  43:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * @param[in]       *pSrcB points to the second input matrix structure
  44:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * @param[out]      *pDst points to output matrix structure
  45:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * @return     		The function returns either
  46:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of siz
  47:Source\MatrixFunctions/arm_mat_sub_q15.c ****  *
  48:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * <b>Scaling and Overflow Behavior:</b>
  49:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * \par
  50:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * The function uses saturating arithmetic.
  51:Source\MatrixFunctions/arm_mat_sub_q15.c ****  * Results outside of the allowable Q15 range [0x8000 0x7FFF] will be saturated.
  52:Source\MatrixFunctions/arm_mat_sub_q15.c ****  */
  53:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
  54:Source\MatrixFunctions/arm_mat_sub_q15.c **** arm_status arm_mat_sub_q15(
  55:Source\MatrixFunctions/arm_mat_sub_q15.c ****   const arm_matrix_instance_q15 * pSrcA,
  56:Source\MatrixFunctions/arm_mat_sub_q15.c ****   const arm_matrix_instance_q15 * pSrcB,
  57:Source\MatrixFunctions/arm_mat_sub_q15.c ****   arm_matrix_instance_q15 * pDst)
  58:Source\MatrixFunctions/arm_mat_sub_q15.c **** {
  26              		.loc 1 58 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 90B0     		sub	sp, sp, #64
  33              		.cfi_def_cfa_offset 72
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  36 0006 F860     		str	r0, [r7, #12]
  37 0008 B960     		str	r1, [r7, #8]
  38 000a 7A60     		str	r2, [r7, #4]
  59:Source\MatrixFunctions/arm_mat_sub_q15.c ****   q15_t *pInA = pSrcA->pData;                    /* input data matrix pointer A */
  39              		.loc 1 59 0
  40 000c FB68     		ldr	r3, [r7, #12]
  41 000e 5B68     		ldr	r3, [r3, #4]
  42 0010 FB63     		str	r3, [r7, #60]
  60:Source\MatrixFunctions/arm_mat_sub_q15.c ****   q15_t *pInB = pSrcB->pData;                    /* input data matrix pointer B */
  43              		.loc 1 60 0
  44 0012 BB68     		ldr	r3, [r7, #8]
  45 0014 5B68     		ldr	r3, [r3, #4]
  46 0016 BB63     		str	r3, [r7, #56]
  61:Source\MatrixFunctions/arm_mat_sub_q15.c ****   q15_t *pOut = pDst->pData;                     /* output data matrix pointer */
  47              		.loc 1 61 0
  48 0018 7B68     		ldr	r3, [r7, #4]
  49 001a 5B68     		ldr	r3, [r3, #4]
  50 001c 7B63     		str	r3, [r7, #52]
  62:Source\MatrixFunctions/arm_mat_sub_q15.c ****   uint32_t numSamples;                           /* total number of elements in the matrix */
  63:Source\MatrixFunctions/arm_mat_sub_q15.c ****   uint32_t blkCnt;                               /* loop counters  */
  64:Source\MatrixFunctions/arm_mat_sub_q15.c ****   arm_status status;                             /* status of matrix subtraction  */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 3


  65:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
  66:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
  67:Source\MatrixFunctions/arm_mat_sub_q15.c **** #ifdef ARM_MATH_MATRIX_CHECK
  68:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
  69:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
  70:Source\MatrixFunctions/arm_mat_sub_q15.c ****   /* Check for matrix mismatch condition */
  71:Source\MatrixFunctions/arm_mat_sub_q15.c ****   if ((pSrcA->numRows != pSrcB->numRows) ||
  72:Source\MatrixFunctions/arm_mat_sub_q15.c ****      (pSrcA->numCols != pSrcB->numCols) ||
  73:Source\MatrixFunctions/arm_mat_sub_q15.c ****      (pSrcA->numRows != pDst->numRows) || (pSrcA->numCols != pDst->numCols))
  74:Source\MatrixFunctions/arm_mat_sub_q15.c ****   {
  75:Source\MatrixFunctions/arm_mat_sub_q15.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
  76:Source\MatrixFunctions/arm_mat_sub_q15.c ****     status = ARM_MATH_SIZE_MISMATCH;
  77:Source\MatrixFunctions/arm_mat_sub_q15.c ****   }
  78:Source\MatrixFunctions/arm_mat_sub_q15.c ****   else
  79:Source\MatrixFunctions/arm_mat_sub_q15.c **** #endif /*    #ifdef ARM_MATH_MATRIX_CHECK    */
  80:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
  81:Source\MatrixFunctions/arm_mat_sub_q15.c ****   {
  82:Source\MatrixFunctions/arm_mat_sub_q15.c ****     /* Total number of samples in the input matrix */
  83:Source\MatrixFunctions/arm_mat_sub_q15.c ****     numSamples = (uint32_t) pSrcA->numRows * pSrcA->numCols;
  51              		.loc 1 83 0
  52 001e FB68     		ldr	r3, [r7, #12]
  53 0020 1B88     		ldrh	r3, [r3]
  54 0022 1A1C     		mov	r2, r3
  55 0024 FB68     		ldr	r3, [r7, #12]
  56 0026 5B88     		ldrh	r3, [r3, #2]
  57 0028 5343     		mul	r3, r2
  58 002a FB62     		str	r3, [r7, #44]
  84:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
  85:Source\MatrixFunctions/arm_mat_sub_q15.c **** #if defined (ARM_MATH_DSP)
  86:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
  87:Source\MatrixFunctions/arm_mat_sub_q15.c ****     /* Run the below code for Cortex-M4 and Cortex-M3 */
  88:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
  89:Source\MatrixFunctions/arm_mat_sub_q15.c ****     /* Apply loop unrolling */
  90:Source\MatrixFunctions/arm_mat_sub_q15.c ****     blkCnt = numSamples >> 2u;
  91:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
  92:Source\MatrixFunctions/arm_mat_sub_q15.c ****     /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  93:Source\MatrixFunctions/arm_mat_sub_q15.c ****      ** a second loop below computes the remaining 1 to 3 samples. */
  94:Source\MatrixFunctions/arm_mat_sub_q15.c ****     while (blkCnt > 0u)
  95:Source\MatrixFunctions/arm_mat_sub_q15.c ****     {
  96:Source\MatrixFunctions/arm_mat_sub_q15.c ****       /* C(m,n) = A(m,n) - B(m,n) */
  97:Source\MatrixFunctions/arm_mat_sub_q15.c ****       /* Subtract, Saturate and then store the results in the destination buffer. */
  98:Source\MatrixFunctions/arm_mat_sub_q15.c ****       *__SIMD32(pOut)++ = __QSUB16(*__SIMD32(pInA)++, *__SIMD32(pInB)++);
  99:Source\MatrixFunctions/arm_mat_sub_q15.c ****       *__SIMD32(pOut)++ = __QSUB16(*__SIMD32(pInA)++, *__SIMD32(pInB)++);
 100:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
 101:Source\MatrixFunctions/arm_mat_sub_q15.c ****       /* Decrement the loop counter */
 102:Source\MatrixFunctions/arm_mat_sub_q15.c ****       blkCnt--;
 103:Source\MatrixFunctions/arm_mat_sub_q15.c ****     }
 104:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
 105:Source\MatrixFunctions/arm_mat_sub_q15.c ****     /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 106:Source\MatrixFunctions/arm_mat_sub_q15.c ****      ** No loop unrolling is used. */
 107:Source\MatrixFunctions/arm_mat_sub_q15.c ****     blkCnt = numSamples % 0x4u;
 108:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
 109:Source\MatrixFunctions/arm_mat_sub_q15.c ****     while (blkCnt > 0u)
 110:Source\MatrixFunctions/arm_mat_sub_q15.c ****     {
 111:Source\MatrixFunctions/arm_mat_sub_q15.c ****       /* C(m,n) = A(m,n) - B(m,n) */
 112:Source\MatrixFunctions/arm_mat_sub_q15.c ****       /* Subtract and then store the results in the destination buffer. */
 113:Source\MatrixFunctions/arm_mat_sub_q15.c ****       *pOut++ = (q15_t) __QSUB16(*pInA++, *pInB++);
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 4


 114:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
 115:Source\MatrixFunctions/arm_mat_sub_q15.c ****       /* Decrement the loop counter */
 116:Source\MatrixFunctions/arm_mat_sub_q15.c ****       blkCnt--;
 117:Source\MatrixFunctions/arm_mat_sub_q15.c ****     }
 118:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
 119:Source\MatrixFunctions/arm_mat_sub_q15.c **** #else
 120:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
 121:Source\MatrixFunctions/arm_mat_sub_q15.c ****     /* Run the below code for Cortex-M0 */
 122:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
 123:Source\MatrixFunctions/arm_mat_sub_q15.c ****     /* Initialize blkCnt with number of samples */
 124:Source\MatrixFunctions/arm_mat_sub_q15.c ****     blkCnt = numSamples;
  59              		.loc 1 124 0
  60 002c FB6A     		ldr	r3, [r7, #44]
  61 002e 3B63     		str	r3, [r7, #48]
 125:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
 126:Source\MatrixFunctions/arm_mat_sub_q15.c ****     while (blkCnt > 0u)
  62              		.loc 1 126 0
  63 0030 3EE0     		b	.L2
  64              	.L9:
 127:Source\MatrixFunctions/arm_mat_sub_q15.c ****     {
 128:Source\MatrixFunctions/arm_mat_sub_q15.c ****       /* C(m,n) = A(m,n) - B(m,n) */
 129:Source\MatrixFunctions/arm_mat_sub_q15.c ****       /* Subtract and then store the results in the destination buffer. */
 130:Source\MatrixFunctions/arm_mat_sub_q15.c ****       *pOut++ = (q15_t) __SSAT(((q31_t) * pInA++ - *pInB++), 16);
  65              		.loc 1 130 0
  66 0032 7B6B     		ldr	r3, [r7, #52]
  67 0034 9A1C     		add	r2, r3, #2
  68 0036 7A63     		str	r2, [r7, #52]
  69 0038 FA6B     		ldr	r2, [r7, #60]
  70 003a 911C     		add	r1, r2, #2
  71 003c F963     		str	r1, [r7, #60]
  72 003e 1288     		ldrh	r2, [r2]
  73 0040 11B2     		sxth	r1, r2
  74 0042 BA6B     		ldr	r2, [r7, #56]
  75 0044 901C     		add	r0, r2, #2
  76 0046 B863     		str	r0, [r7, #56]
  77 0048 1288     		ldrh	r2, [r2]
  78 004a 12B2     		sxth	r2, r2
  79 004c 8A1A     		sub	r2, r1, r2
  80 004e 7A62     		str	r2, [r7, #36]
  81 0050 1022     		mov	r2, #16
  82 0052 3A62     		str	r2, [r7, #32]
  83              	.LBB4:
  84              	.LBB5:
  85              		.file 2 ".\\Include/arm_math.h"
   1:.\Include/arm_math.h **** /* ----------------------------------------------------------------------
   2:.\Include/arm_math.h ****  * Project:      CMSIS DSP Library
   3:.\Include/arm_math.h ****  * Title:        arm_math.h
   4:.\Include/arm_math.h ****  * Description:  Public header file for CMSIS DSP Library
   5:.\Include/arm_math.h ****  *
   6:.\Include/arm_math.h ****  * $Date:        27. January 2017
   7:.\Include/arm_math.h ****  * $Revision:    V.1.5.1
   8:.\Include/arm_math.h ****  *
   9:.\Include/arm_math.h ****  * Target Processor: Cortex-M cores
  10:.\Include/arm_math.h ****  * -------------------------------------------------------------------- */
  11:.\Include/arm_math.h **** /*
  12:.\Include/arm_math.h ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:.\Include/arm_math.h ****  *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 5


  14:.\Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  15:.\Include/arm_math.h ****  *
  16:.\Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.\Include/arm_math.h ****  * not use this file except in compliance with the License.
  18:.\Include/arm_math.h ****  * You may obtain a copy of the License at
  19:.\Include/arm_math.h ****  *
  20:.\Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  21:.\Include/arm_math.h ****  *
  22:.\Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  23:.\Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.\Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.\Include/arm_math.h ****  * See the License for the specific language governing permissions and
  26:.\Include/arm_math.h ****  * limitations under the License.
  27:.\Include/arm_math.h ****  */
  28:.\Include/arm_math.h **** 
  29:.\Include/arm_math.h **** /**
  30:.\Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  31:.\Include/arm_math.h ****    *
  32:.\Include/arm_math.h ****    * Introduction
  33:.\Include/arm_math.h ****    * ------------
  34:.\Include/arm_math.h ****    *
  35:.\Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  36:.\Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  37:.\Include/arm_math.h ****    *
  38:.\Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  39:.\Include/arm_math.h ****    * - Basic math functions
  40:.\Include/arm_math.h ****    * - Fast math functions
  41:.\Include/arm_math.h ****    * - Complex math functions
  42:.\Include/arm_math.h ****    * - Filters
  43:.\Include/arm_math.h ****    * - Matrix functions
  44:.\Include/arm_math.h ****    * - Transforms
  45:.\Include/arm_math.h ****    * - Motor control functions
  46:.\Include/arm_math.h ****    * - Statistical functions
  47:.\Include/arm_math.h ****    * - Support functions
  48:.\Include/arm_math.h ****    * - Interpolation functions
  49:.\Include/arm_math.h ****    *
  50:.\Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  51:.\Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  52:.\Include/arm_math.h ****    *
  53:.\Include/arm_math.h ****    * Using the Library
  54:.\Include/arm_math.h ****    * ------------
  55:.\Include/arm_math.h ****    *
  56:.\Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  57:.\Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  58:.\Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  59:.\Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  60:.\Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  61:.\Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  62:.\Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  63:.\Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  64:.\Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  65:.\Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  66:.\Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  67:.\Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  68:.\Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  69:.\Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  70:.\Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 6


  71:.\Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (ARMv8M Baseline, Little endian)
  72:.\Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (ARMv8M Mainline, Little endian)
  73:.\Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (ARMv8M Mainline, Little endian, Single Precision Floating Point U
  74:.\Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (ARMv8M Mainline, Little endian, DSP instructions)
  75:.\Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (ARMv8M Mainline, Little endian, DSP instructions, Single Precisi
  76:.\Include/arm_math.h ****    *
  77:.\Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  78:.\Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  79:.\Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  80:.\Include/arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  81:.\Include/arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  82:.\Include/arm_math.h ****    * For ARMv8M cores define pre processor MACRO ARM_MATH_ARMV8MBL or ARM_MATH_ARMV8MML.
  83:.\Include/arm_math.h ****    * Set Pre processor MACRO __DSP_PRESENT if ARMv8M Mainline core supports DSP instructions.
  84:.\Include/arm_math.h ****    * 
  85:.\Include/arm_math.h ****    *
  86:.\Include/arm_math.h ****    * Examples
  87:.\Include/arm_math.h ****    * --------
  88:.\Include/arm_math.h ****    *
  89:.\Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  90:.\Include/arm_math.h ****    *
  91:.\Include/arm_math.h ****    * Toolchain Support
  92:.\Include/arm_math.h ****    * ------------
  93:.\Include/arm_math.h ****    *
  94:.\Include/arm_math.h ****    * The library has been developed and tested with MDK-ARM version 5.14.0.0
  95:.\Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  96:.\Include/arm_math.h ****    *
  97:.\Include/arm_math.h ****    * Building the Library
  98:.\Include/arm_math.h ****    * ------------
  99:.\Include/arm_math.h ****    *
 100:.\Include/arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 101:.\Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
 102:.\Include/arm_math.h ****    *
 103:.\Include/arm_math.h ****    *
 104:.\Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 105:.\Include/arm_math.h ****    *
 106:.\Include/arm_math.h ****    * Pre-processor Macros
 107:.\Include/arm_math.h ****    * ------------
 108:.\Include/arm_math.h ****    *
 109:.\Include/arm_math.h ****    * Each library project have differant pre-processor macros.
 110:.\Include/arm_math.h ****    *
 111:.\Include/arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 112:.\Include/arm_math.h ****    *
 113:.\Include/arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 114:.\Include/arm_math.h ****    *
 115:.\Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 116:.\Include/arm_math.h ****    *
 117:.\Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 118:.\Include/arm_math.h ****    *
 119:.\Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 120:.\Include/arm_math.h ****    *
 121:.\Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 122:.\Include/arm_math.h ****    *
 123:.\Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 124:.\Include/arm_math.h ****    *
 125:.\Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 126:.\Include/arm_math.h ****    *
 127:.\Include/arm_math.h ****    * - ARM_MATH_CMx:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 7


 128:.\Include/arm_math.h ****    *
 129:.\Include/arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 130:.\Include/arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 131:.\Include/arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 132:.\Include/arm_math.h ****    *
 133:.\Include/arm_math.h ****    * - ARM_MATH_ARMV8MxL:
 134:.\Include/arm_math.h ****    *
 135:.\Include/arm_math.h ****    * Define macro ARM_MATH_ARMV8MBL for building the library on ARMv8M Baseline target, ARM_MATH_AR
 136:.\Include/arm_math.h ****    * on ARMv8M Mainline target.
 137:.\Include/arm_math.h ****    *
 138:.\Include/arm_math.h ****    * - __FPU_PRESENT:
 139:.\Include/arm_math.h ****    *
 140:.\Include/arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 141:.\Include/arm_math.h ****    *
 142:.\Include/arm_math.h ****    * - __DSP_PRESENT:
 143:.\Include/arm_math.h ****    *
 144:.\Include/arm_math.h ****    * Initialize macro __DSP_PRESENT = 1 when ARMv8M Mainline core supports DSP instructions.
 145:.\Include/arm_math.h ****    *
 146:.\Include/arm_math.h ****    * <hr>
 147:.\Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 148:.\Include/arm_math.h ****    * -----------------------------
 149:.\Include/arm_math.h ****    *
 150:.\Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 151:.\Include/arm_math.h ****    * |File/Folder                   |Content                                                       
 152:.\Include/arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 153:.\Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 154:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 155:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 156:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 157:.\Include/arm_math.h ****    *
 158:.\Include/arm_math.h ****    * <hr>
 159:.\Include/arm_math.h ****    * Revision History of CMSIS-DSP
 160:.\Include/arm_math.h ****    * ------------
 161:.\Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 162:.\Include/arm_math.h ****    *
 163:.\Include/arm_math.h ****    * Copyright Notice
 164:.\Include/arm_math.h ****    * ------------
 165:.\Include/arm_math.h ****    *
 166:.\Include/arm_math.h ****    * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
 167:.\Include/arm_math.h ****    */
 168:.\Include/arm_math.h **** 
 169:.\Include/arm_math.h **** 
 170:.\Include/arm_math.h **** /**
 171:.\Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 172:.\Include/arm_math.h ****  */
 173:.\Include/arm_math.h **** 
 174:.\Include/arm_math.h **** /**
 175:.\Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 176:.\Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 177:.\Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 178:.\Include/arm_math.h ****  * operate on individual values and not arrays.
 179:.\Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 180:.\Include/arm_math.h ****  *
 181:.\Include/arm_math.h ****  */
 182:.\Include/arm_math.h **** 
 183:.\Include/arm_math.h **** /**
 184:.\Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 8


 185:.\Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 186:.\Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 187:.\Include/arm_math.h ****  * (real, imag, real, imag, ...).
 188:.\Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 189:.\Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 190:.\Include/arm_math.h ****  * real values.
 191:.\Include/arm_math.h ****  */
 192:.\Include/arm_math.h **** 
 193:.\Include/arm_math.h **** /**
 194:.\Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 195:.\Include/arm_math.h ****  */
 196:.\Include/arm_math.h **** 
 197:.\Include/arm_math.h **** /**
 198:.\Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 199:.\Include/arm_math.h ****  *
 200:.\Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 201:.\Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 202:.\Include/arm_math.h ****  * the type
 203:.\Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 204:.\Include/arm_math.h ****  * below:
 205:.\Include/arm_math.h ****  * <pre>
 206:.\Include/arm_math.h ****  *     typedef struct
 207:.\Include/arm_math.h ****  *     {
 208:.\Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 209:.\Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 210:.\Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 211:.\Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 212:.\Include/arm_math.h ****  * </pre>
 213:.\Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 214:.\Include/arm_math.h ****  *
 215:.\Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 216:.\Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 217:.\Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 218:.\Include/arm_math.h ****  * matrix element (i, j) is stored at:
 219:.\Include/arm_math.h ****  * <pre>
 220:.\Include/arm_math.h ****  *     pData[i*numCols + j]
 221:.\Include/arm_math.h ****  * </pre>
 222:.\Include/arm_math.h ****  *
 223:.\Include/arm_math.h ****  * \par Init Functions
 224:.\Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 225:.\Include/arm_math.h ****  * data structure.
 226:.\Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 227:.\Include/arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 228:.\Include/arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 229:.\Include/arm_math.h ****  *
 230:.\Include/arm_math.h ****  * \par
 231:.\Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 232:.\Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 233:.\Include/arm_math.h ****  * To place the instance structure in a const data
 234:.\Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 235:.\Include/arm_math.h ****  * <pre>
 236:.\Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 237:.\Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 238:.\Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 239:.\Include/arm_math.h ****  * </pre>
 240:.\Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 241:.\Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 9


 242:.\Include/arm_math.h ****  * data array.
 243:.\Include/arm_math.h ****  *
 244:.\Include/arm_math.h ****  * \par Size Checking
 245:.\Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 246:.\Include/arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 247:.\Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 248:.\Include/arm_math.h ****  * columns.  If the size check fails the functions return:
 249:.\Include/arm_math.h ****  * <pre>
 250:.\Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 251:.\Include/arm_math.h ****  * </pre>
 252:.\Include/arm_math.h ****  * Otherwise the functions return
 253:.\Include/arm_math.h ****  * <pre>
 254:.\Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 255:.\Include/arm_math.h ****  * </pre>
 256:.\Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 257:.\Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 258:.\Include/arm_math.h ****  * <pre>
 259:.\Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 260:.\Include/arm_math.h ****  * </pre>
 261:.\Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 262:.\Include/arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 263:.\Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 264:.\Include/arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
 265:.\Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 266:.\Include/arm_math.h ****  */
 267:.\Include/arm_math.h **** 
 268:.\Include/arm_math.h **** /**
 269:.\Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 270:.\Include/arm_math.h ****  */
 271:.\Include/arm_math.h **** 
 272:.\Include/arm_math.h **** /**
 273:.\Include/arm_math.h ****  * @defgroup groupController Controller Functions
 274:.\Include/arm_math.h ****  */
 275:.\Include/arm_math.h **** 
 276:.\Include/arm_math.h **** /**
 277:.\Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 278:.\Include/arm_math.h ****  */
 279:.\Include/arm_math.h **** /**
 280:.\Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 281:.\Include/arm_math.h ****  */
 282:.\Include/arm_math.h **** 
 283:.\Include/arm_math.h **** /**
 284:.\Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 285:.\Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 286:.\Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 287:.\Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 288:.\Include/arm_math.h ****  */
 289:.\Include/arm_math.h **** 
 290:.\Include/arm_math.h **** /**
 291:.\Include/arm_math.h ****  * @defgroup groupExamples Examples
 292:.\Include/arm_math.h ****  */
 293:.\Include/arm_math.h **** #ifndef _ARM_MATH_H
 294:.\Include/arm_math.h **** #define _ARM_MATH_H
 295:.\Include/arm_math.h **** 
 296:.\Include/arm_math.h **** /* ignore some GCC warnings */
 297:.\Include/arm_math.h **** #if defined ( __GNUC__ )
 298:.\Include/arm_math.h **** #pragma GCC diagnostic push
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 10


 299:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 300:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 301:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 302:.\Include/arm_math.h **** #endif
 303:.\Include/arm_math.h **** 
 304:.\Include/arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 305:.\Include/arm_math.h **** 
 306:.\Include/arm_math.h **** #if defined(ARM_MATH_CM7)
 307:.\Include/arm_math.h ****   #include "core_cm7.h"
 308:.\Include/arm_math.h ****   #define ARM_MATH_DSP
 309:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM4)
 310:.\Include/arm_math.h ****   #include "core_cm4.h"
 311:.\Include/arm_math.h ****   #define ARM_MATH_DSP
 312:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM3)
 313:.\Include/arm_math.h ****   #include "core_cm3.h"
 314:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM0)
 315:.\Include/arm_math.h ****   #include "core_cm0.h"
 316:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 317:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
 318:.\Include/arm_math.h ****   #include "core_cm0plus.h"
 319:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 320:.\Include/arm_math.h **** #elif defined (ARM_MATH_ARMV8MBL)
 321:.\Include/arm_math.h ****   #include "core_armv8mbl.h"
 322:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 323:.\Include/arm_math.h **** #elif defined (ARM_MATH_ARMV8MML)
 324:.\Include/arm_math.h ****   #include "core_armv8mml.h"
 325:.\Include/arm_math.h ****   #if (defined (__DSP_PRESENT) && (__DSP_PRESENT == 1))
 326:.\Include/arm_math.h ****     #define ARM_MATH_DSP
 327:.\Include/arm_math.h ****   #endif
 328:.\Include/arm_math.h **** #else
 329:.\Include/arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 330:.\Include/arm_math.h **** #endif
 331:.\Include/arm_math.h **** 
 332:.\Include/arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 333:.\Include/arm_math.h **** #include "string.h"
 334:.\Include/arm_math.h **** #include "math.h"
 335:.\Include/arm_math.h **** #ifdef   __cplusplus
 336:.\Include/arm_math.h **** extern "C"
 337:.\Include/arm_math.h **** {
 338:.\Include/arm_math.h **** #endif
 339:.\Include/arm_math.h **** 
 340:.\Include/arm_math.h **** 
 341:.\Include/arm_math.h ****   /**
 342:.\Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:.\Include/arm_math.h ****    */
 344:.\Include/arm_math.h **** 
 345:.\Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:.\Include/arm_math.h **** #define DELTA_Q15          0x5
 347:.\Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:.\Include/arm_math.h **** #ifndef PI
 349:.\Include/arm_math.h ****   #define PI               3.14159265358979f
 350:.\Include/arm_math.h **** #endif
 351:.\Include/arm_math.h **** 
 352:.\Include/arm_math.h ****   /**
 353:.\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:.\Include/arm_math.h ****    */
 355:.\Include/arm_math.h **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 11


 356:.\Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:.\Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:.\Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:.\Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:.\Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:.\Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:.\Include/arm_math.h **** 
 363:.\Include/arm_math.h ****   /**
 364:.\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:.\Include/arm_math.h ****    */
 366:.\Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:.\Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:.\Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:.\Include/arm_math.h **** 
 370:.\Include/arm_math.h ****   /**
 371:.\Include/arm_math.h ****    * @brief Macro for Unaligned Support
 372:.\Include/arm_math.h ****    */
 373:.\Include/arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 374:.\Include/arm_math.h ****     #define ALIGN4
 375:.\Include/arm_math.h **** #else
 376:.\Include/arm_math.h ****   #if defined  (__GNUC__)
 377:.\Include/arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 378:.\Include/arm_math.h ****   #else
 379:.\Include/arm_math.h ****     #define ALIGN4 __align(4)
 380:.\Include/arm_math.h ****   #endif
 381:.\Include/arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 382:.\Include/arm_math.h **** 
 383:.\Include/arm_math.h ****   /**
 384:.\Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 385:.\Include/arm_math.h ****    */
 386:.\Include/arm_math.h **** 
 387:.\Include/arm_math.h ****   typedef enum
 388:.\Include/arm_math.h ****   {
 389:.\Include/arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 390:.\Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 391:.\Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 392:.\Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 393:.\Include/arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 394:.\Include/arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 395:.\Include/arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 396:.\Include/arm_math.h ****   } arm_status;
 397:.\Include/arm_math.h **** 
 398:.\Include/arm_math.h ****   /**
 399:.\Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 400:.\Include/arm_math.h ****    */
 401:.\Include/arm_math.h ****   typedef int8_t q7_t;
 402:.\Include/arm_math.h **** 
 403:.\Include/arm_math.h ****   /**
 404:.\Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 405:.\Include/arm_math.h ****    */
 406:.\Include/arm_math.h ****   typedef int16_t q15_t;
 407:.\Include/arm_math.h **** 
 408:.\Include/arm_math.h ****   /**
 409:.\Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 410:.\Include/arm_math.h ****    */
 411:.\Include/arm_math.h ****   typedef int32_t q31_t;
 412:.\Include/arm_math.h **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 12


 413:.\Include/arm_math.h ****   /**
 414:.\Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 415:.\Include/arm_math.h ****    */
 416:.\Include/arm_math.h ****   typedef int64_t q63_t;
 417:.\Include/arm_math.h **** 
 418:.\Include/arm_math.h ****   /**
 419:.\Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 420:.\Include/arm_math.h ****    */
 421:.\Include/arm_math.h ****   typedef float float32_t;
 422:.\Include/arm_math.h **** 
 423:.\Include/arm_math.h ****   /**
 424:.\Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 425:.\Include/arm_math.h ****    */
 426:.\Include/arm_math.h ****   typedef double float64_t;
 427:.\Include/arm_math.h **** 
 428:.\Include/arm_math.h ****   /**
 429:.\Include/arm_math.h ****    * @brief definition to read/write two 16 bit values.
 430:.\Include/arm_math.h ****    */
 431:.\Include/arm_math.h **** #if   defined ( __CC_ARM )
 432:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 433:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 434:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 435:.\Include/arm_math.h **** 
 436:.\Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 437:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 438:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 439:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 440:.\Include/arm_math.h **** 
 441:.\Include/arm_math.h **** #elif defined ( __GNUC__ )
 442:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 443:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 444:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 445:.\Include/arm_math.h **** 
 446:.\Include/arm_math.h **** #elif defined ( __ICCARM__ )
 447:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 448:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 449:.\Include/arm_math.h ****   #define CMSIS_INLINE
 450:.\Include/arm_math.h **** 
 451:.\Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 452:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 453:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 454:.\Include/arm_math.h ****   #define CMSIS_INLINE
 455:.\Include/arm_math.h **** 
 456:.\Include/arm_math.h **** #elif defined ( __CSMC__ )
 457:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 458:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 459:.\Include/arm_math.h ****   #define CMSIS_INLINE
 460:.\Include/arm_math.h **** 
 461:.\Include/arm_math.h **** #elif defined ( __TASKING__ )
 462:.\Include/arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 463:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 464:.\Include/arm_math.h ****   #define CMSIS_INLINE
 465:.\Include/arm_math.h **** 
 466:.\Include/arm_math.h **** #else
 467:.\Include/arm_math.h ****   #error Unknown compiler
 468:.\Include/arm_math.h **** #endif
 469:.\Include/arm_math.h **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 13


 470:.\Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 471:.\Include/arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 472:.\Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 473:.\Include/arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 474:.\Include/arm_math.h **** 
 475:.\Include/arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 476:.\Include/arm_math.h **** #if !defined (ARM_MATH_DSP)
 477:.\Include/arm_math.h ****   /**
 478:.\Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 479:.\Include/arm_math.h ****    */
 480:.\Include/arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 481:.\Include/arm_math.h ****                                     (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 482:.\Include/arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 483:.\Include/arm_math.h ****                                     (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 484:.\Include/arm_math.h **** 
 485:.\Include/arm_math.h **** /* #endif // defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 486:.\Include/arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
 487:.\Include/arm_math.h **** 
 488:.\Include/arm_math.h ****    /**
 489:.\Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
 490:.\Include/arm_math.h ****    */
 491:.\Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 492:.\Include/arm_math.h **** 
 493:.\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 494:.\Include/arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 495:.\Include/arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 496:.\Include/arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 497:.\Include/arm_math.h **** #else
 498:.\Include/arm_math.h **** 
 499:.\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 500:.\Include/arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 501:.\Include/arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 502:.\Include/arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 503:.\Include/arm_math.h **** 
 504:.\Include/arm_math.h **** #endif
 505:.\Include/arm_math.h **** 
 506:.\Include/arm_math.h **** 
 507:.\Include/arm_math.h ****   /**
 508:.\Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 509:.\Include/arm_math.h ****    */
 510:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t clip_q63_to_q31(
 511:.\Include/arm_math.h ****   q63_t x)
 512:.\Include/arm_math.h ****   {
 513:.\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 514:.\Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 515:.\Include/arm_math.h ****   }
 516:.\Include/arm_math.h **** 
 517:.\Include/arm_math.h ****   /**
 518:.\Include/arm_math.h ****    * @brief Clips Q63 to Q15 values.
 519:.\Include/arm_math.h ****    */
 520:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q63_to_q15(
 521:.\Include/arm_math.h ****   q63_t x)
 522:.\Include/arm_math.h ****   {
 523:.\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 524:.\Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 525:.\Include/arm_math.h ****   }
 526:.\Include/arm_math.h **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 14


 527:.\Include/arm_math.h ****   /**
 528:.\Include/arm_math.h ****    * @brief Clips Q31 to Q7 values.
 529:.\Include/arm_math.h ****    */
 530:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q7_t clip_q31_to_q7(
 531:.\Include/arm_math.h ****   q31_t x)
 532:.\Include/arm_math.h ****   {
 533:.\Include/arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 534:.\Include/arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 535:.\Include/arm_math.h ****   }
 536:.\Include/arm_math.h **** 
 537:.\Include/arm_math.h ****   /**
 538:.\Include/arm_math.h ****    * @brief Clips Q31 to Q15 values.
 539:.\Include/arm_math.h ****    */
 540:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q31_to_q15(
 541:.\Include/arm_math.h ****   q31_t x)
 542:.\Include/arm_math.h ****   {
 543:.\Include/arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 544:.\Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 545:.\Include/arm_math.h ****   }
 546:.\Include/arm_math.h **** 
 547:.\Include/arm_math.h ****   /**
 548:.\Include/arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 549:.\Include/arm_math.h ****    */
 550:.\Include/arm_math.h **** 
 551:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q63_t mult32x64(
 552:.\Include/arm_math.h ****   q63_t x,
 553:.\Include/arm_math.h ****   q31_t y)
 554:.\Include/arm_math.h ****   {
 555:.\Include/arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 556:.\Include/arm_math.h ****             (((q63_t) (x >> 32) * y)));
 557:.\Include/arm_math.h ****   }
 558:.\Include/arm_math.h **** 
 559:.\Include/arm_math.h **** /*
 560:.\Include/arm_math.h ****   #if defined (ARM_MATH_CM0_FAMILY) && defined ( __CC_ARM   )
 561:.\Include/arm_math.h ****   #define __CLZ __clz
 562:.\Include/arm_math.h ****   #endif
 563:.\Include/arm_math.h ****  */
 564:.\Include/arm_math.h **** /* note: function can be removed when all toolchain support __CLZ for Cortex-M0 */
 565:.\Include/arm_math.h **** #if defined (ARM_MATH_CM0_FAMILY) && ((defined (__ICCARM__))  )
 566:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 567:.\Include/arm_math.h ****   q31_t data);
 568:.\Include/arm_math.h **** 
 569:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 570:.\Include/arm_math.h ****   q31_t data)
 571:.\Include/arm_math.h ****   {
 572:.\Include/arm_math.h ****     uint32_t count = 0;
 573:.\Include/arm_math.h ****     uint32_t mask = 0x80000000;
 574:.\Include/arm_math.h **** 
 575:.\Include/arm_math.h ****     while ((data & mask) == 0)
 576:.\Include/arm_math.h ****     {
 577:.\Include/arm_math.h ****       count += 1u;
 578:.\Include/arm_math.h ****       mask = mask >> 1u;
 579:.\Include/arm_math.h ****     }
 580:.\Include/arm_math.h **** 
 581:.\Include/arm_math.h ****     return (count);
 582:.\Include/arm_math.h ****   }
 583:.\Include/arm_math.h **** #endif
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 15


 584:.\Include/arm_math.h **** 
 585:.\Include/arm_math.h ****   /**
 586:.\Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 587:.\Include/arm_math.h ****    */
 588:.\Include/arm_math.h **** 
 589:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q31(
 590:.\Include/arm_math.h ****   q31_t in,
 591:.\Include/arm_math.h ****   q31_t * dst,
 592:.\Include/arm_math.h ****   q31_t * pRecipTable)
 593:.\Include/arm_math.h ****   {
 594:.\Include/arm_math.h ****     q31_t out;
 595:.\Include/arm_math.h ****     uint32_t tempVal;
 596:.\Include/arm_math.h ****     uint32_t index, i;
 597:.\Include/arm_math.h ****     uint32_t signBits;
 598:.\Include/arm_math.h **** 
 599:.\Include/arm_math.h ****     if (in > 0)
 600:.\Include/arm_math.h ****     {
 601:.\Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 602:.\Include/arm_math.h ****     }
 603:.\Include/arm_math.h ****     else
 604:.\Include/arm_math.h ****     {
 605:.\Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 606:.\Include/arm_math.h ****     }
 607:.\Include/arm_math.h **** 
 608:.\Include/arm_math.h ****     /* Convert input sample to 1.31 format */
 609:.\Include/arm_math.h ****     in = (in << signBits);
 610:.\Include/arm_math.h **** 
 611:.\Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 612:.\Include/arm_math.h ****     index = (uint32_t)(in >> 24);
 613:.\Include/arm_math.h ****     index = (index & INDEX_MASK);
 614:.\Include/arm_math.h **** 
 615:.\Include/arm_math.h ****     /* 1.31 with exp 1 */
 616:.\Include/arm_math.h ****     out = pRecipTable[index];
 617:.\Include/arm_math.h **** 
 618:.\Include/arm_math.h ****     /* calculation of reciprocal value */
 619:.\Include/arm_math.h ****     /* running approximation for two iterations */
 620:.\Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 621:.\Include/arm_math.h ****     {
 622:.\Include/arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 623:.\Include/arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 624:.\Include/arm_math.h ****       /*      1.31 with exp 1 */
 625:.\Include/arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 626:.\Include/arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 627:.\Include/arm_math.h ****     }
 628:.\Include/arm_math.h **** 
 629:.\Include/arm_math.h ****     /* write output */
 630:.\Include/arm_math.h ****     *dst = out;
 631:.\Include/arm_math.h **** 
 632:.\Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 633:.\Include/arm_math.h ****     return (signBits + 1u);
 634:.\Include/arm_math.h ****   }
 635:.\Include/arm_math.h **** 
 636:.\Include/arm_math.h **** 
 637:.\Include/arm_math.h ****   /**
 638:.\Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
 639:.\Include/arm_math.h ****    */
 640:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q15(
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 16


 641:.\Include/arm_math.h ****   q15_t in,
 642:.\Include/arm_math.h ****   q15_t * dst,
 643:.\Include/arm_math.h ****   q15_t * pRecipTable)
 644:.\Include/arm_math.h ****   {
 645:.\Include/arm_math.h ****     q15_t out = 0;
 646:.\Include/arm_math.h ****     uint32_t tempVal = 0;
 647:.\Include/arm_math.h ****     uint32_t index = 0, i = 0;
 648:.\Include/arm_math.h ****     uint32_t signBits = 0;
 649:.\Include/arm_math.h **** 
 650:.\Include/arm_math.h ****     if (in > 0)
 651:.\Include/arm_math.h ****     {
 652:.\Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
 653:.\Include/arm_math.h ****     }
 654:.\Include/arm_math.h ****     else
 655:.\Include/arm_math.h ****     {
 656:.\Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
 657:.\Include/arm_math.h ****     }
 658:.\Include/arm_math.h **** 
 659:.\Include/arm_math.h ****     /* Convert input sample to 1.15 format */
 660:.\Include/arm_math.h ****     in = (in << signBits);
 661:.\Include/arm_math.h **** 
 662:.\Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 663:.\Include/arm_math.h ****     index = (uint32_t)(in >>  8);
 664:.\Include/arm_math.h ****     index = (index & INDEX_MASK);
 665:.\Include/arm_math.h **** 
 666:.\Include/arm_math.h ****     /*      1.15 with exp 1  */
 667:.\Include/arm_math.h ****     out = pRecipTable[index];
 668:.\Include/arm_math.h **** 
 669:.\Include/arm_math.h ****     /* calculation of reciprocal value */
 670:.\Include/arm_math.h ****     /* running approximation for two iterations */
 671:.\Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 672:.\Include/arm_math.h ****     {
 673:.\Include/arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
 674:.\Include/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 675:.\Include/arm_math.h ****       /*      1.15 with exp 1 */
 676:.\Include/arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
 677:.\Include/arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
 678:.\Include/arm_math.h ****     }
 679:.\Include/arm_math.h **** 
 680:.\Include/arm_math.h ****     /* write output */
 681:.\Include/arm_math.h ****     *dst = out;
 682:.\Include/arm_math.h **** 
 683:.\Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 684:.\Include/arm_math.h ****     return (signBits + 1);
 685:.\Include/arm_math.h ****   }
 686:.\Include/arm_math.h **** 
 687:.\Include/arm_math.h **** 
 688:.\Include/arm_math.h ****   /*
 689:.\Include/arm_math.h ****    * @brief C custom defined intrinisic function for only M0 processors
 690:.\Include/arm_math.h ****    */
 691:.\Include/arm_math.h **** #if defined(ARM_MATH_CM0_FAMILY)
 692:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t __SSAT(
 693:.\Include/arm_math.h ****   q31_t x,
 694:.\Include/arm_math.h ****   uint32_t y)
 695:.\Include/arm_math.h ****   {
 696:.\Include/arm_math.h ****     int32_t posMax, negMin;
 697:.\Include/arm_math.h ****     uint32_t i;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 17


 698:.\Include/arm_math.h **** 
 699:.\Include/arm_math.h ****     posMax = 1;
  86              		.loc 2 699 0
  87 0054 0122     		mov	r2, #1
  88 0056 FA61     		str	r2, [r7, #28]
 700:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
  89              		.loc 2 700 0
  90 0058 0022     		mov	r2, #0
  91 005a BA61     		str	r2, [r7, #24]
  92 005c 05E0     		b	.L3
  93              	.L4:
 701:.\Include/arm_math.h ****     {
 702:.\Include/arm_math.h ****       posMax = posMax * 2;
  94              		.loc 2 702 0
  95 005e FA69     		ldr	r2, [r7, #28]
  96 0060 5200     		lsl	r2, r2, #1
  97 0062 FA61     		str	r2, [r7, #28]
 700:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
  98              		.loc 2 700 0
  99 0064 BA69     		ldr	r2, [r7, #24]
 100 0066 0132     		add	r2, r2, #1
 101 0068 BA61     		str	r2, [r7, #24]
 102              	.L3:
 103 006a 3A6A     		ldr	r2, [r7, #32]
 104 006c 013A     		sub	r2, r2, #1
 105 006e B969     		ldr	r1, [r7, #24]
 106 0070 9142     		cmp	r1, r2
 107 0072 F4D3     		bcc	.L4
 703:.\Include/arm_math.h ****     }
 704:.\Include/arm_math.h **** 
 705:.\Include/arm_math.h ****     if (x > 0)
 108              		.loc 2 705 0
 109 0074 7A6A     		ldr	r2, [r7, #36]
 110 0076 002A     		cmp	r2, #0
 111 0078 09DD     		ble	.L5
 706:.\Include/arm_math.h ****     {
 707:.\Include/arm_math.h ****       posMax = (posMax - 1);
 112              		.loc 2 707 0
 113 007a FA69     		ldr	r2, [r7, #28]
 114 007c 013A     		sub	r2, r2, #1
 115 007e FA61     		str	r2, [r7, #28]
 708:.\Include/arm_math.h **** 
 709:.\Include/arm_math.h ****       if (x > posMax)
 116              		.loc 2 709 0
 117 0080 796A     		ldr	r1, [r7, #36]
 118 0082 FA69     		ldr	r2, [r7, #28]
 119 0084 9142     		cmp	r1, r2
 120 0086 0CDD     		ble	.L11
 710:.\Include/arm_math.h ****       {
 711:.\Include/arm_math.h ****         x = posMax;
 121              		.loc 2 711 0
 122 0088 FA69     		ldr	r2, [r7, #28]
 123 008a 7A62     		str	r2, [r7, #36]
 124 008c 0AE0     		b	.L7
 125              	.L5:
 712:.\Include/arm_math.h ****       }
 713:.\Include/arm_math.h ****     }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 18


 714:.\Include/arm_math.h ****     else
 715:.\Include/arm_math.h ****     {
 716:.\Include/arm_math.h ****       negMin = -posMax;
 126              		.loc 2 716 0
 127 008e FA69     		ldr	r2, [r7, #28]
 128 0090 5242     		neg	r2, r2
 129 0092 7A61     		str	r2, [r7, #20]
 717:.\Include/arm_math.h **** 
 718:.\Include/arm_math.h ****       if (x < negMin)
 130              		.loc 2 718 0
 131 0094 796A     		ldr	r1, [r7, #36]
 132 0096 7A69     		ldr	r2, [r7, #20]
 133 0098 9142     		cmp	r1, r2
 134 009a 03DA     		bge	.L7
 719:.\Include/arm_math.h ****       {
 720:.\Include/arm_math.h ****         x = negMin;
 135              		.loc 2 720 0
 136 009c 7A69     		ldr	r2, [r7, #20]
 137 009e 7A62     		str	r2, [r7, #36]
 138 00a0 00E0     		b	.L7
 139              	.L11:
 711:.\Include/arm_math.h ****       }
 140              		.loc 2 711 0
 141 00a2 C046     		mov	r8, r8
 142              	.L7:
 721:.\Include/arm_math.h ****       }
 722:.\Include/arm_math.h ****     }
 723:.\Include/arm_math.h ****     return (x);
 143              		.loc 2 723 0
 144 00a4 7A6A     		ldr	r2, [r7, #36]
 145              	.LBE5:
 146              	.LBE4:
 147              		.loc 1 130 0
 148 00a6 92B2     		uxth	r2, r2
 149 00a8 1A80     		strh	r2, [r3]
 131:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
 132:Source\MatrixFunctions/arm_mat_sub_q15.c ****       /* Decrement the loop counter */
 133:Source\MatrixFunctions/arm_mat_sub_q15.c ****       blkCnt--;
 150              		.loc 1 133 0
 151 00aa 3B6B     		ldr	r3, [r7, #48]
 152 00ac 013B     		sub	r3, r3, #1
 153 00ae 3B63     		str	r3, [r7, #48]
 154              	.L2:
 126:Source\MatrixFunctions/arm_mat_sub_q15.c ****     {
 155              		.loc 1 126 0
 156 00b0 3B6B     		ldr	r3, [r7, #48]
 157 00b2 002B     		cmp	r3, #0
 158 00b4 BDD1     		bne	.L9
 134:Source\MatrixFunctions/arm_mat_sub_q15.c ****     }
 135:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
 136:Source\MatrixFunctions/arm_mat_sub_q15.c **** #endif /* #if defined (ARM_MATH_DSP) */
 137:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
 138:Source\MatrixFunctions/arm_mat_sub_q15.c ****     /* Set status as ARM_MATH_SUCCESS */
 139:Source\MatrixFunctions/arm_mat_sub_q15.c ****     status = ARM_MATH_SUCCESS;
 159              		.loc 1 139 0
 160 00b6 2B23     		mov	r3, #43
 161 00b8 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 19


 162 00ba 0022     		mov	r2, #0
 163 00bc 1A70     		strb	r2, [r3]
 140:Source\MatrixFunctions/arm_mat_sub_q15.c ****   }
 141:Source\MatrixFunctions/arm_mat_sub_q15.c **** 
 142:Source\MatrixFunctions/arm_mat_sub_q15.c ****   /* Return to application */
 143:Source\MatrixFunctions/arm_mat_sub_q15.c ****   return (status);
 164              		.loc 1 143 0
 165 00be 2B23     		mov	r3, #43
 166 00c0 FB18     		add	r3, r7, r3
 167 00c2 1B78     		ldrb	r3, [r3]
 168 00c4 5BB2     		sxtb	r3, r3
 144:Source\MatrixFunctions/arm_mat_sub_q15.c **** }
 169              		.loc 1 144 0
 170 00c6 181C     		mov	r0, r3
 171 00c8 BD46     		mov	sp, r7
 172 00ca 10B0     		add	sp, sp, #64
 173              		@ sp needed
 174 00cc 80BD     		pop	{r7, pc}
 175              		.cfi_endproc
 176              	.LFE82:
 177              		.size	arm_mat_sub_q15, .-arm_mat_sub_q15
 178 00ce C046     		.text
 179              	.Letext0:
 180              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 181              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 182              		.section	.debug_info,"",%progbits
 183              	.Ldebug_info0:
 184 0000 B2020000 		.4byte	0x2b2
 185 0004 0400     		.2byte	0x4
 186 0006 00000000 		.4byte	.Ldebug_abbrev0
 187 000a 04       		.byte	0x4
 188 000b 01       		.uleb128 0x1
 189 000c 95010000 		.4byte	.LASF47
 190 0010 01       		.byte	0x1
 191 0011 8E000000 		.4byte	.LASF48
 192 0015 3B000000 		.4byte	.LASF49
 193 0019 00000000 		.4byte	.Ldebug_ranges0+0
 194 001d 00000000 		.4byte	0
 195 0021 00000000 		.4byte	.Ldebug_line0
 196 0025 02       		.uleb128 0x2
 197 0026 01       		.byte	0x1
 198 0027 06       		.byte	0x6
 199 0028 E5020000 		.4byte	.LASF0
 200 002c 02       		.uleb128 0x2
 201 002d 01       		.byte	0x1
 202 002e 08       		.byte	0x8
 203 002f C8000000 		.4byte	.LASF1
 204 0033 03       		.uleb128 0x3
 205 0034 16000000 		.4byte	.LASF3
 206 0038 03       		.byte	0x3
 207 0039 29       		.byte	0x29
 208 003a 3E000000 		.4byte	0x3e
 209 003e 02       		.uleb128 0x2
 210 003f 02       		.byte	0x2
 211 0040 05       		.byte	0x5
 212 0041 92020000 		.4byte	.LASF2
 213 0045 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 20


 214 0046 3C010000 		.4byte	.LASF4
 215 004a 03       		.byte	0x3
 216 004b 2B       		.byte	0x2b
 217 004c 50000000 		.4byte	0x50
 218 0050 02       		.uleb128 0x2
 219 0051 02       		.byte	0x2
 220 0052 07       		.byte	0x7
 221 0053 1D010000 		.4byte	.LASF5
 222 0057 03       		.uleb128 0x3
 223 0058 31000000 		.4byte	.LASF6
 224 005c 03       		.byte	0x3
 225 005d 3F       		.byte	0x3f
 226 005e 62000000 		.4byte	0x62
 227 0062 02       		.uleb128 0x2
 228 0063 04       		.byte	0x4
 229 0064 05       		.byte	0x5
 230 0065 C5020000 		.4byte	.LASF7
 231 0069 03       		.uleb128 0x3
 232 006a 4E010000 		.4byte	.LASF8
 233 006e 03       		.byte	0x3
 234 006f 41       		.byte	0x41
 235 0070 74000000 		.4byte	0x74
 236 0074 02       		.uleb128 0x2
 237 0075 04       		.byte	0x4
 238 0076 07       		.byte	0x7
 239 0077 0B010000 		.4byte	.LASF9
 240 007b 02       		.uleb128 0x2
 241 007c 08       		.byte	0x8
 242 007d 05       		.byte	0x5
 243 007e 6E020000 		.4byte	.LASF10
 244 0082 02       		.uleb128 0x2
 245 0083 08       		.byte	0x8
 246 0084 07       		.byte	0x7
 247 0085 7E010000 		.4byte	.LASF11
 248 0089 04       		.uleb128 0x4
 249 008a 04       		.byte	0x4
 250 008b 05       		.byte	0x5
 251 008c 696E7400 		.ascii	"int\000"
 252 0090 02       		.uleb128 0x2
 253 0091 04       		.byte	0x4
 254 0092 07       		.byte	0x7
 255 0093 71010000 		.4byte	.LASF12
 256 0097 03       		.uleb128 0x3
 257 0098 4E020000 		.4byte	.LASF13
 258 009c 04       		.byte	0x4
 259 009d 20       		.byte	0x20
 260 009e 33000000 		.4byte	0x33
 261 00a2 03       		.uleb128 0x3
 262 00a3 9C020000 		.4byte	.LASF14
 263 00a7 04       		.byte	0x4
 264 00a8 21       		.byte	0x21
 265 00a9 45000000 		.4byte	0x45
 266 00ad 03       		.uleb128 0x3
 267 00ae 5D020000 		.4byte	.LASF15
 268 00b2 04       		.byte	0x4
 269 00b3 2C       		.byte	0x2c
 270 00b4 57000000 		.4byte	0x57
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 21


 271 00b8 03       		.uleb128 0x3
 272 00b9 BC020000 		.4byte	.LASF16
 273 00bd 04       		.byte	0x4
 274 00be 2D       		.byte	0x2d
 275 00bf 69000000 		.4byte	0x69
 276 00c3 02       		.uleb128 0x2
 277 00c4 04       		.byte	0x4
 278 00c5 07       		.byte	0x7
 279 00c6 65020000 		.4byte	.LASF17
 280 00ca 02       		.uleb128 0x2
 281 00cb 01       		.byte	0x1
 282 00cc 08       		.byte	0x8
 283 00cd 7C020000 		.4byte	.LASF18
 284 00d1 02       		.uleb128 0x2
 285 00d2 08       		.byte	0x8
 286 00d3 04       		.byte	0x4
 287 00d4 47010000 		.4byte	.LASF19
 288 00d8 02       		.uleb128 0x2
 289 00d9 04       		.byte	0x4
 290 00da 04       		.byte	0x4
 291 00db DF020000 		.4byte	.LASF20
 292 00df 02       		.uleb128 0x2
 293 00e0 08       		.byte	0x8
 294 00e1 04       		.byte	0x4
 295 00e2 D3020000 		.4byte	.LASF21
 296 00e6 05       		.uleb128 0x5
 297 00e7 01       		.byte	0x1
 298 00e8 02       		.byte	0x2
 299 00e9 8401     		.2byte	0x184
 300 00eb 1A010000 		.4byte	0x11a
 301 00ef 06       		.uleb128 0x6
 302 00f0 81020000 		.4byte	.LASF22
 303 00f4 00       		.sleb128 0
 304 00f5 06       		.uleb128 0x6
 305 00f6 59010000 		.4byte	.LASF23
 306 00fa 7F       		.sleb128 -1
 307 00fb 06       		.uleb128 0x6
 308 00fc 00000000 		.4byte	.LASF24
 309 0100 7E       		.sleb128 -2
 310 0101 06       		.uleb128 0x6
 311 0102 27020000 		.4byte	.LASF25
 312 0106 7D       		.sleb128 -3
 313 0107 06       		.uleb128 0x6
 314 0108 3E020000 		.4byte	.LASF26
 315 010c 7C       		.sleb128 -4
 316 010d 06       		.uleb128 0x6
 317 010e 17030000 		.4byte	.LASF27
 318 0112 7B       		.sleb128 -5
 319 0113 06       		.uleb128 0x6
 320 0114 F5000000 		.4byte	.LASF28
 321 0118 7A       		.sleb128 -6
 322 0119 00       		.byte	0
 323 011a 07       		.uleb128 0x7
 324 011b 0C030000 		.4byte	.LASF29
 325 011f 02       		.byte	0x2
 326 0120 8C01     		.2byte	0x18c
 327 0122 E6000000 		.4byte	0xe6
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 22


 328 0126 07       		.uleb128 0x7
 329 0127 B7000000 		.4byte	.LASF30
 330 012b 02       		.byte	0x2
 331 012c 9601     		.2byte	0x196
 332 012e 97000000 		.4byte	0x97
 333 0132 07       		.uleb128 0x7
 334 0133 C2000000 		.4byte	.LASF31
 335 0137 02       		.byte	0x2
 336 0138 9B01     		.2byte	0x19b
 337 013a AD000000 		.4byte	0xad
 338 013e 08       		.uleb128 0x8
 339 013f 04       		.byte	0x4
 340 0140 26010000 		.4byte	0x126
 341 0144 09       		.uleb128 0x9
 342 0145 08       		.byte	0x8
 343 0146 02       		.byte	0x2
 344 0147 AF05     		.2byte	0x5af
 345 0149 75010000 		.4byte	0x175
 346 014d 0A       		.uleb128 0xa
 347 014e F1020000 		.4byte	.LASF32
 348 0152 02       		.byte	0x2
 349 0153 B105     		.2byte	0x5b1
 350 0155 A2000000 		.4byte	0xa2
 351 0159 00       		.byte	0
 352 015a 0A       		.uleb128 0xa
 353 015b F9020000 		.4byte	.LASF33
 354 015f 02       		.byte	0x2
 355 0160 B205     		.2byte	0x5b2
 356 0162 A2000000 		.4byte	0xa2
 357 0166 02       		.byte	0x2
 358 0167 0A       		.uleb128 0xa
 359 0168 88000000 		.4byte	.LASF34
 360 016c 02       		.byte	0x2
 361 016d B305     		.2byte	0x5b3
 362 016f 3E010000 		.4byte	0x13e
 363 0173 04       		.byte	0x4
 364 0174 00       		.byte	0
 365 0175 07       		.uleb128 0x7
 366 0176 DD000000 		.4byte	.LASF35
 367 017a 02       		.byte	0x2
 368 017b B405     		.2byte	0x5b4
 369 017d 44010000 		.4byte	0x144
 370 0181 0B       		.uleb128 0xb
 371 0182 56020000 		.4byte	.LASF50
 372 0186 02       		.byte	0x2
 373 0187 B402     		.2byte	0x2b4
 374 0189 32010000 		.4byte	0x132
 375 018d 03       		.byte	0x3
 376 018e C9010000 		.4byte	0x1c9
 377 0192 0C       		.uleb128 0xc
 378 0193 7800     		.ascii	"x\000"
 379 0195 02       		.byte	0x2
 380 0196 B502     		.2byte	0x2b5
 381 0198 32010000 		.4byte	0x132
 382 019c 0C       		.uleb128 0xc
 383 019d 7900     		.ascii	"y\000"
 384 019f 02       		.byte	0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 23


 385 01a0 B602     		.2byte	0x2b6
 386 01a2 B8000000 		.4byte	0xb8
 387 01a6 0D       		.uleb128 0xd
 388 01a7 A5020000 		.4byte	.LASF36
 389 01ab 02       		.byte	0x2
 390 01ac B802     		.2byte	0x2b8
 391 01ae AD000000 		.4byte	0xad
 392 01b2 0D       		.uleb128 0xd
 393 01b3 35010000 		.4byte	.LASF37
 394 01b7 02       		.byte	0x2
 395 01b8 B802     		.2byte	0x2b8
 396 01ba AD000000 		.4byte	0xad
 397 01be 0E       		.uleb128 0xe
 398 01bf 6900     		.ascii	"i\000"
 399 01c1 02       		.byte	0x2
 400 01c2 B902     		.2byte	0x2b9
 401 01c4 B8000000 		.4byte	0xb8
 402 01c8 00       		.byte	0
 403 01c9 0F       		.uleb128 0xf
 404 01ca AC020000 		.4byte	.LASF51
 405 01ce 01       		.byte	0x1
 406 01cf 36       		.byte	0x36
 407 01d0 1A010000 		.4byte	0x11a
 408 01d4 00000000 		.4byte	.LFB82
 409 01d8 CE000000 		.4byte	.LFE82-.LFB82
 410 01dc 01       		.uleb128 0x1
 411 01dd 9C       		.byte	0x9c
 412 01de A4020000 		.4byte	0x2a4
 413 01e2 10       		.uleb128 0x10
 414 01e3 20000000 		.4byte	.LASF38
 415 01e7 01       		.byte	0x1
 416 01e8 37       		.byte	0x37
 417 01e9 A4020000 		.4byte	0x2a4
 418 01ed 02       		.uleb128 0x2
 419 01ee 91       		.byte	0x91
 420 01ef 44       		.sleb128 -60
 421 01f0 10       		.uleb128 0x10
 422 01f1 26000000 		.4byte	.LASF39
 423 01f5 01       		.byte	0x1
 424 01f6 38       		.byte	0x38
 425 01f7 A4020000 		.4byte	0x2a4
 426 01fb 02       		.uleb128 0x2
 427 01fc 91       		.byte	0x91
 428 01fd 40       		.sleb128 -64
 429 01fe 10       		.uleb128 0x10
 430 01ff 30010000 		.4byte	.LASF40
 431 0203 01       		.byte	0x1
 432 0204 39       		.byte	0x39
 433 0205 AF020000 		.4byte	0x2af
 434 0209 03       		.uleb128 0x3
 435 020a 91       		.byte	0x91
 436 020b BC7F     		.sleb128 -68
 437 020d 11       		.uleb128 0x11
 438 020e CE020000 		.4byte	.LASF41
 439 0212 01       		.byte	0x1
 440 0213 3B       		.byte	0x3b
 441 0214 3E010000 		.4byte	0x13e
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 24


 442 0218 02       		.uleb128 0x2
 443 0219 91       		.byte	0x91
 444 021a 74       		.sleb128 -12
 445 021b 11       		.uleb128 0x11
 446 021c 2C000000 		.4byte	.LASF42
 447 0220 01       		.byte	0x1
 448 0221 3C       		.byte	0x3c
 449 0222 3E010000 		.4byte	0x13e
 450 0226 02       		.uleb128 0x2
 451 0227 91       		.byte	0x91
 452 0228 70       		.sleb128 -16
 453 0229 11       		.uleb128 0x11
 454 022a BD000000 		.4byte	.LASF43
 455 022e 01       		.byte	0x1
 456 022f 3D       		.byte	0x3d
 457 0230 3E010000 		.4byte	0x13e
 458 0234 02       		.uleb128 0x2
 459 0235 91       		.byte	0x91
 460 0236 6C       		.sleb128 -20
 461 0237 11       		.uleb128 0x11
 462 0238 01030000 		.4byte	.LASF44
 463 023c 01       		.byte	0x1
 464 023d 3E       		.byte	0x3e
 465 023e B8000000 		.4byte	0xb8
 466 0242 02       		.uleb128 0x2
 467 0243 91       		.byte	0x91
 468 0244 64       		.sleb128 -28
 469 0245 11       		.uleb128 0x11
 470 0246 D6000000 		.4byte	.LASF45
 471 024a 01       		.byte	0x1
 472 024b 3F       		.byte	0x3f
 473 024c B8000000 		.4byte	0xb8
 474 0250 02       		.uleb128 0x2
 475 0251 91       		.byte	0x91
 476 0252 68       		.sleb128 -24
 477 0253 11       		.uleb128 0x11
 478 0254 81000000 		.4byte	.LASF46
 479 0258 01       		.byte	0x1
 480 0259 40       		.byte	0x40
 481 025a 1A010000 		.4byte	0x11a
 482 025e 02       		.uleb128 0x2
 483 025f 91       		.byte	0x91
 484 0260 63       		.sleb128 -29
 485 0261 12       		.uleb128 0x12
 486 0262 81010000 		.4byte	0x181
 487 0266 54000000 		.4byte	.LBB4
 488 026a 52000000 		.4byte	.LBE4-.LBB4
 489 026e 01       		.byte	0x1
 490 026f 82       		.byte	0x82
 491 0270 13       		.uleb128 0x13
 492 0271 9C010000 		.4byte	0x19c
 493 0275 02       		.uleb128 0x2
 494 0276 91       		.byte	0x91
 495 0277 58       		.sleb128 -40
 496 0278 13       		.uleb128 0x13
 497 0279 92010000 		.4byte	0x192
 498 027d 02       		.uleb128 0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 25


 499 027e 91       		.byte	0x91
 500 027f 5C       		.sleb128 -36
 501 0280 14       		.uleb128 0x14
 502 0281 54000000 		.4byte	.LBB5
 503 0285 52000000 		.4byte	.LBE5-.LBB5
 504 0289 15       		.uleb128 0x15
 505 028a A6010000 		.4byte	0x1a6
 506 028e 02       		.uleb128 0x2
 507 028f 91       		.byte	0x91
 508 0290 54       		.sleb128 -44
 509 0291 15       		.uleb128 0x15
 510 0292 B2010000 		.4byte	0x1b2
 511 0296 02       		.uleb128 0x2
 512 0297 91       		.byte	0x91
 513 0298 4C       		.sleb128 -52
 514 0299 15       		.uleb128 0x15
 515 029a BE010000 		.4byte	0x1be
 516 029e 02       		.uleb128 0x2
 517 029f 91       		.byte	0x91
 518 02a0 50       		.sleb128 -48
 519 02a1 00       		.byte	0
 520 02a2 00       		.byte	0
 521 02a3 00       		.byte	0
 522 02a4 08       		.uleb128 0x8
 523 02a5 04       		.byte	0x4
 524 02a6 AA020000 		.4byte	0x2aa
 525 02aa 16       		.uleb128 0x16
 526 02ab 75010000 		.4byte	0x175
 527 02af 08       		.uleb128 0x8
 528 02b0 04       		.byte	0x4
 529 02b1 75010000 		.4byte	0x175
 530 02b5 00       		.byte	0
 531              		.section	.debug_abbrev,"",%progbits
 532              	.Ldebug_abbrev0:
 533 0000 01       		.uleb128 0x1
 534 0001 11       		.uleb128 0x11
 535 0002 01       		.byte	0x1
 536 0003 25       		.uleb128 0x25
 537 0004 0E       		.uleb128 0xe
 538 0005 13       		.uleb128 0x13
 539 0006 0B       		.uleb128 0xb
 540 0007 03       		.uleb128 0x3
 541 0008 0E       		.uleb128 0xe
 542 0009 1B       		.uleb128 0x1b
 543 000a 0E       		.uleb128 0xe
 544 000b 55       		.uleb128 0x55
 545 000c 17       		.uleb128 0x17
 546 000d 11       		.uleb128 0x11
 547 000e 01       		.uleb128 0x1
 548 000f 10       		.uleb128 0x10
 549 0010 17       		.uleb128 0x17
 550 0011 00       		.byte	0
 551 0012 00       		.byte	0
 552 0013 02       		.uleb128 0x2
 553 0014 24       		.uleb128 0x24
 554 0015 00       		.byte	0
 555 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 26


 556 0017 0B       		.uleb128 0xb
 557 0018 3E       		.uleb128 0x3e
 558 0019 0B       		.uleb128 0xb
 559 001a 03       		.uleb128 0x3
 560 001b 0E       		.uleb128 0xe
 561 001c 00       		.byte	0
 562 001d 00       		.byte	0
 563 001e 03       		.uleb128 0x3
 564 001f 16       		.uleb128 0x16
 565 0020 00       		.byte	0
 566 0021 03       		.uleb128 0x3
 567 0022 0E       		.uleb128 0xe
 568 0023 3A       		.uleb128 0x3a
 569 0024 0B       		.uleb128 0xb
 570 0025 3B       		.uleb128 0x3b
 571 0026 0B       		.uleb128 0xb
 572 0027 49       		.uleb128 0x49
 573 0028 13       		.uleb128 0x13
 574 0029 00       		.byte	0
 575 002a 00       		.byte	0
 576 002b 04       		.uleb128 0x4
 577 002c 24       		.uleb128 0x24
 578 002d 00       		.byte	0
 579 002e 0B       		.uleb128 0xb
 580 002f 0B       		.uleb128 0xb
 581 0030 3E       		.uleb128 0x3e
 582 0031 0B       		.uleb128 0xb
 583 0032 03       		.uleb128 0x3
 584 0033 08       		.uleb128 0x8
 585 0034 00       		.byte	0
 586 0035 00       		.byte	0
 587 0036 05       		.uleb128 0x5
 588 0037 04       		.uleb128 0x4
 589 0038 01       		.byte	0x1
 590 0039 0B       		.uleb128 0xb
 591 003a 0B       		.uleb128 0xb
 592 003b 3A       		.uleb128 0x3a
 593 003c 0B       		.uleb128 0xb
 594 003d 3B       		.uleb128 0x3b
 595 003e 05       		.uleb128 0x5
 596 003f 01       		.uleb128 0x1
 597 0040 13       		.uleb128 0x13
 598 0041 00       		.byte	0
 599 0042 00       		.byte	0
 600 0043 06       		.uleb128 0x6
 601 0044 28       		.uleb128 0x28
 602 0045 00       		.byte	0
 603 0046 03       		.uleb128 0x3
 604 0047 0E       		.uleb128 0xe
 605 0048 1C       		.uleb128 0x1c
 606 0049 0D       		.uleb128 0xd
 607 004a 00       		.byte	0
 608 004b 00       		.byte	0
 609 004c 07       		.uleb128 0x7
 610 004d 16       		.uleb128 0x16
 611 004e 00       		.byte	0
 612 004f 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 27


 613 0050 0E       		.uleb128 0xe
 614 0051 3A       		.uleb128 0x3a
 615 0052 0B       		.uleb128 0xb
 616 0053 3B       		.uleb128 0x3b
 617 0054 05       		.uleb128 0x5
 618 0055 49       		.uleb128 0x49
 619 0056 13       		.uleb128 0x13
 620 0057 00       		.byte	0
 621 0058 00       		.byte	0
 622 0059 08       		.uleb128 0x8
 623 005a 0F       		.uleb128 0xf
 624 005b 00       		.byte	0
 625 005c 0B       		.uleb128 0xb
 626 005d 0B       		.uleb128 0xb
 627 005e 49       		.uleb128 0x49
 628 005f 13       		.uleb128 0x13
 629 0060 00       		.byte	0
 630 0061 00       		.byte	0
 631 0062 09       		.uleb128 0x9
 632 0063 13       		.uleb128 0x13
 633 0064 01       		.byte	0x1
 634 0065 0B       		.uleb128 0xb
 635 0066 0B       		.uleb128 0xb
 636 0067 3A       		.uleb128 0x3a
 637 0068 0B       		.uleb128 0xb
 638 0069 3B       		.uleb128 0x3b
 639 006a 05       		.uleb128 0x5
 640 006b 01       		.uleb128 0x1
 641 006c 13       		.uleb128 0x13
 642 006d 00       		.byte	0
 643 006e 00       		.byte	0
 644 006f 0A       		.uleb128 0xa
 645 0070 0D       		.uleb128 0xd
 646 0071 00       		.byte	0
 647 0072 03       		.uleb128 0x3
 648 0073 0E       		.uleb128 0xe
 649 0074 3A       		.uleb128 0x3a
 650 0075 0B       		.uleb128 0xb
 651 0076 3B       		.uleb128 0x3b
 652 0077 05       		.uleb128 0x5
 653 0078 49       		.uleb128 0x49
 654 0079 13       		.uleb128 0x13
 655 007a 38       		.uleb128 0x38
 656 007b 0B       		.uleb128 0xb
 657 007c 00       		.byte	0
 658 007d 00       		.byte	0
 659 007e 0B       		.uleb128 0xb
 660 007f 2E       		.uleb128 0x2e
 661 0080 01       		.byte	0x1
 662 0081 03       		.uleb128 0x3
 663 0082 0E       		.uleb128 0xe
 664 0083 3A       		.uleb128 0x3a
 665 0084 0B       		.uleb128 0xb
 666 0085 3B       		.uleb128 0x3b
 667 0086 05       		.uleb128 0x5
 668 0087 27       		.uleb128 0x27
 669 0088 19       		.uleb128 0x19
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 28


 670 0089 49       		.uleb128 0x49
 671 008a 13       		.uleb128 0x13
 672 008b 20       		.uleb128 0x20
 673 008c 0B       		.uleb128 0xb
 674 008d 01       		.uleb128 0x1
 675 008e 13       		.uleb128 0x13
 676 008f 00       		.byte	0
 677 0090 00       		.byte	0
 678 0091 0C       		.uleb128 0xc
 679 0092 05       		.uleb128 0x5
 680 0093 00       		.byte	0
 681 0094 03       		.uleb128 0x3
 682 0095 08       		.uleb128 0x8
 683 0096 3A       		.uleb128 0x3a
 684 0097 0B       		.uleb128 0xb
 685 0098 3B       		.uleb128 0x3b
 686 0099 05       		.uleb128 0x5
 687 009a 49       		.uleb128 0x49
 688 009b 13       		.uleb128 0x13
 689 009c 00       		.byte	0
 690 009d 00       		.byte	0
 691 009e 0D       		.uleb128 0xd
 692 009f 34       		.uleb128 0x34
 693 00a0 00       		.byte	0
 694 00a1 03       		.uleb128 0x3
 695 00a2 0E       		.uleb128 0xe
 696 00a3 3A       		.uleb128 0x3a
 697 00a4 0B       		.uleb128 0xb
 698 00a5 3B       		.uleb128 0x3b
 699 00a6 05       		.uleb128 0x5
 700 00a7 49       		.uleb128 0x49
 701 00a8 13       		.uleb128 0x13
 702 00a9 00       		.byte	0
 703 00aa 00       		.byte	0
 704 00ab 0E       		.uleb128 0xe
 705 00ac 34       		.uleb128 0x34
 706 00ad 00       		.byte	0
 707 00ae 03       		.uleb128 0x3
 708 00af 08       		.uleb128 0x8
 709 00b0 3A       		.uleb128 0x3a
 710 00b1 0B       		.uleb128 0xb
 711 00b2 3B       		.uleb128 0x3b
 712 00b3 05       		.uleb128 0x5
 713 00b4 49       		.uleb128 0x49
 714 00b5 13       		.uleb128 0x13
 715 00b6 00       		.byte	0
 716 00b7 00       		.byte	0
 717 00b8 0F       		.uleb128 0xf
 718 00b9 2E       		.uleb128 0x2e
 719 00ba 01       		.byte	0x1
 720 00bb 3F       		.uleb128 0x3f
 721 00bc 19       		.uleb128 0x19
 722 00bd 03       		.uleb128 0x3
 723 00be 0E       		.uleb128 0xe
 724 00bf 3A       		.uleb128 0x3a
 725 00c0 0B       		.uleb128 0xb
 726 00c1 3B       		.uleb128 0x3b
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 29


 727 00c2 0B       		.uleb128 0xb
 728 00c3 27       		.uleb128 0x27
 729 00c4 19       		.uleb128 0x19
 730 00c5 49       		.uleb128 0x49
 731 00c6 13       		.uleb128 0x13
 732 00c7 11       		.uleb128 0x11
 733 00c8 01       		.uleb128 0x1
 734 00c9 12       		.uleb128 0x12
 735 00ca 06       		.uleb128 0x6
 736 00cb 40       		.uleb128 0x40
 737 00cc 18       		.uleb128 0x18
 738 00cd 9742     		.uleb128 0x2117
 739 00cf 19       		.uleb128 0x19
 740 00d0 01       		.uleb128 0x1
 741 00d1 13       		.uleb128 0x13
 742 00d2 00       		.byte	0
 743 00d3 00       		.byte	0
 744 00d4 10       		.uleb128 0x10
 745 00d5 05       		.uleb128 0x5
 746 00d6 00       		.byte	0
 747 00d7 03       		.uleb128 0x3
 748 00d8 0E       		.uleb128 0xe
 749 00d9 3A       		.uleb128 0x3a
 750 00da 0B       		.uleb128 0xb
 751 00db 3B       		.uleb128 0x3b
 752 00dc 0B       		.uleb128 0xb
 753 00dd 49       		.uleb128 0x49
 754 00de 13       		.uleb128 0x13
 755 00df 02       		.uleb128 0x2
 756 00e0 18       		.uleb128 0x18
 757 00e1 00       		.byte	0
 758 00e2 00       		.byte	0
 759 00e3 11       		.uleb128 0x11
 760 00e4 34       		.uleb128 0x34
 761 00e5 00       		.byte	0
 762 00e6 03       		.uleb128 0x3
 763 00e7 0E       		.uleb128 0xe
 764 00e8 3A       		.uleb128 0x3a
 765 00e9 0B       		.uleb128 0xb
 766 00ea 3B       		.uleb128 0x3b
 767 00eb 0B       		.uleb128 0xb
 768 00ec 49       		.uleb128 0x49
 769 00ed 13       		.uleb128 0x13
 770 00ee 02       		.uleb128 0x2
 771 00ef 18       		.uleb128 0x18
 772 00f0 00       		.byte	0
 773 00f1 00       		.byte	0
 774 00f2 12       		.uleb128 0x12
 775 00f3 1D       		.uleb128 0x1d
 776 00f4 01       		.byte	0x1
 777 00f5 31       		.uleb128 0x31
 778 00f6 13       		.uleb128 0x13
 779 00f7 11       		.uleb128 0x11
 780 00f8 01       		.uleb128 0x1
 781 00f9 12       		.uleb128 0x12
 782 00fa 06       		.uleb128 0x6
 783 00fb 58       		.uleb128 0x58
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 30


 784 00fc 0B       		.uleb128 0xb
 785 00fd 59       		.uleb128 0x59
 786 00fe 0B       		.uleb128 0xb
 787 00ff 00       		.byte	0
 788 0100 00       		.byte	0
 789 0101 13       		.uleb128 0x13
 790 0102 05       		.uleb128 0x5
 791 0103 00       		.byte	0
 792 0104 31       		.uleb128 0x31
 793 0105 13       		.uleb128 0x13
 794 0106 02       		.uleb128 0x2
 795 0107 18       		.uleb128 0x18
 796 0108 00       		.byte	0
 797 0109 00       		.byte	0
 798 010a 14       		.uleb128 0x14
 799 010b 0B       		.uleb128 0xb
 800 010c 01       		.byte	0x1
 801 010d 11       		.uleb128 0x11
 802 010e 01       		.uleb128 0x1
 803 010f 12       		.uleb128 0x12
 804 0110 06       		.uleb128 0x6
 805 0111 00       		.byte	0
 806 0112 00       		.byte	0
 807 0113 15       		.uleb128 0x15
 808 0114 34       		.uleb128 0x34
 809 0115 00       		.byte	0
 810 0116 31       		.uleb128 0x31
 811 0117 13       		.uleb128 0x13
 812 0118 02       		.uleb128 0x2
 813 0119 18       		.uleb128 0x18
 814 011a 00       		.byte	0
 815 011b 00       		.byte	0
 816 011c 16       		.uleb128 0x16
 817 011d 26       		.uleb128 0x26
 818 011e 00       		.byte	0
 819 011f 49       		.uleb128 0x49
 820 0120 13       		.uleb128 0x13
 821 0121 00       		.byte	0
 822 0122 00       		.byte	0
 823 0123 00       		.byte	0
 824              		.section	.debug_aranges,"",%progbits
 825 0000 1C000000 		.4byte	0x1c
 826 0004 0200     		.2byte	0x2
 827 0006 00000000 		.4byte	.Ldebug_info0
 828 000a 04       		.byte	0x4
 829 000b 00       		.byte	0
 830 000c 0000     		.2byte	0
 831 000e 0000     		.2byte	0
 832 0010 00000000 		.4byte	.LFB82
 833 0014 CE000000 		.4byte	.LFE82-.LFB82
 834 0018 00000000 		.4byte	0
 835 001c 00000000 		.4byte	0
 836              		.section	.debug_ranges,"",%progbits
 837              	.Ldebug_ranges0:
 838 0000 00000000 		.4byte	.LFB82
 839 0004 CE000000 		.4byte	.LFE82
 840 0008 00000000 		.4byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 31


 841 000c 00000000 		.4byte	0
 842              		.section	.debug_line,"",%progbits
 843              	.Ldebug_line0:
 844 0000 95010000 		.section	.debug_str,"MS",%progbits,1
 844      02004F01 
 844      00000201 
 844      FB0E0D00 
 844      01010101 
 845              	.LASF24:
 846 0000 41524D5F 		.ascii	"ARM_MATH_LENGTH_ERROR\000"
 846      4D415448 
 846      5F4C454E 
 846      4754485F 
 846      4552524F 
 847              	.LASF3:
 848 0016 5F5F696E 		.ascii	"__int16_t\000"
 848      7431365F 
 848      7400
 849              	.LASF38:
 850 0020 70537263 		.ascii	"pSrcA\000"
 850      4100
 851              	.LASF39:
 852 0026 70537263 		.ascii	"pSrcB\000"
 852      4200
 853              	.LASF42:
 854 002c 70496E42 		.ascii	"pInB\000"
 854      00
 855              	.LASF6:
 856 0031 5F5F696E 		.ascii	"__int32_t\000"
 856      7433325F 
 856      7400
 857              	.LASF49:
 858 003b 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 858      73657273 
 858      5C666E65 
 858      7665735C 
 858      446F6375 
 859 0068 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 859      655F7370 
 859      6565645F 
 859      73656E73 
 859      6F722E63 
 860              	.LASF46:
 861 0081 73746174 		.ascii	"status\000"
 861      757300
 862              	.LASF34:
 863 0088 70446174 		.ascii	"pData\000"
 863      6100
 864              	.LASF48:
 865 008e 536F7572 		.ascii	"Source\\MatrixFunctions\\arm_mat_sub_q15.c\000"
 865      63655C4D 
 865      61747269 
 865      7846756E 
 865      6374696F 
 866              	.LASF30:
 867 00b7 7131355F 		.ascii	"q15_t\000"
 867      7400
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 32


 868              	.LASF43:
 869 00bd 704F7574 		.ascii	"pOut\000"
 869      00
 870              	.LASF31:
 871 00c2 7133315F 		.ascii	"q31_t\000"
 871      7400
 872              	.LASF1:
 873 00c8 756E7369 		.ascii	"unsigned char\000"
 873      676E6564 
 873      20636861 
 873      7200
 874              	.LASF45:
 875 00d6 626C6B43 		.ascii	"blkCnt\000"
 875      6E7400
 876              	.LASF35:
 877 00dd 61726D5F 		.ascii	"arm_matrix_instance_q15\000"
 877      6D617472 
 877      69785F69 
 877      6E737461 
 877      6E63655F 
 878              	.LASF28:
 879 00f5 41524D5F 		.ascii	"ARM_MATH_TEST_FAILURE\000"
 879      4D415448 
 879      5F544553 
 879      545F4641 
 879      494C5552 
 880              	.LASF9:
 881 010b 6C6F6E67 		.ascii	"long unsigned int\000"
 881      20756E73 
 881      69676E65 
 881      6420696E 
 881      7400
 882              	.LASF5:
 883 011d 73686F72 		.ascii	"short unsigned int\000"
 883      7420756E 
 883      7369676E 
 883      65642069 
 883      6E7400
 884              	.LASF40:
 885 0130 70447374 		.ascii	"pDst\000"
 885      00
 886              	.LASF37:
 887 0135 6E65674D 		.ascii	"negMin\000"
 887      696E00
 888              	.LASF4:
 889 013c 5F5F7569 		.ascii	"__uint16_t\000"
 889      6E743136 
 889      5F7400
 890              	.LASF19:
 891 0147 646F7562 		.ascii	"double\000"
 891      6C6500
 892              	.LASF8:
 893 014e 5F5F7569 		.ascii	"__uint32_t\000"
 893      6E743332 
 893      5F7400
 894              	.LASF23:
 895 0159 41524D5F 		.ascii	"ARM_MATH_ARGUMENT_ERROR\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 33


 895      4D415448 
 895      5F415247 
 895      554D454E 
 895      545F4552 
 896              	.LASF12:
 897 0171 756E7369 		.ascii	"unsigned int\000"
 897      676E6564 
 897      20696E74 
 897      00
 898              	.LASF11:
 899 017e 6C6F6E67 		.ascii	"long long unsigned int\000"
 899      206C6F6E 
 899      6720756E 
 899      7369676E 
 899      65642069 
 900              	.LASF47:
 901 0195 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 901      4320342E 
 901      392E3320 
 901      32303135 
 901      30333033 
 902 01c8 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 902      20726576 
 902      6973696F 
 902      6E203232 
 902      31323230 
 903 01fb 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 903      30202D66 
 903      66756E63 
 903      74696F6E 
 903      2D736563 
 904              	.LASF25:
 905 0227 41524D5F 		.ascii	"ARM_MATH_SIZE_MISMATCH\000"
 905      4D415448 
 905      5F53495A 
 905      455F4D49 
 905      534D4154 
 906              	.LASF26:
 907 023e 41524D5F 		.ascii	"ARM_MATH_NANINF\000"
 907      4D415448 
 907      5F4E414E 
 907      494E4600 
 908              	.LASF13:
 909 024e 696E7431 		.ascii	"int16_t\000"
 909      365F7400 
 910              	.LASF50:
 911 0256 5F5F5353 		.ascii	"__SSAT\000"
 911      415400
 912              	.LASF15:
 913 025d 696E7433 		.ascii	"int32_t\000"
 913      325F7400 
 914              	.LASF17:
 915 0265 73697A65 		.ascii	"sizetype\000"
 915      74797065 
 915      00
 916              	.LASF10:
 917 026e 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 34


 917      206C6F6E 
 917      6720696E 
 917      7400
 918              	.LASF18:
 919 027c 63686172 		.ascii	"char\000"
 919      00
 920              	.LASF22:
 921 0281 41524D5F 		.ascii	"ARM_MATH_SUCCESS\000"
 921      4D415448 
 921      5F535543 
 921      43455353 
 921      00
 922              	.LASF2:
 923 0292 73686F72 		.ascii	"short int\000"
 923      7420696E 
 923      7400
 924              	.LASF14:
 925 029c 75696E74 		.ascii	"uint16_t\000"
 925      31365F74 
 925      00
 926              	.LASF36:
 927 02a5 706F734D 		.ascii	"posMax\000"
 927      617800
 928              	.LASF51:
 929 02ac 61726D5F 		.ascii	"arm_mat_sub_q15\000"
 929      6D61745F 
 929      7375625F 
 929      71313500 
 930              	.LASF16:
 931 02bc 75696E74 		.ascii	"uint32_t\000"
 931      33325F74 
 931      00
 932              	.LASF7:
 933 02c5 6C6F6E67 		.ascii	"long int\000"
 933      20696E74 
 933      00
 934              	.LASF41:
 935 02ce 70496E41 		.ascii	"pInA\000"
 935      00
 936              	.LASF21:
 937 02d3 6C6F6E67 		.ascii	"long double\000"
 937      20646F75 
 937      626C6500 
 938              	.LASF20:
 939 02df 666C6F61 		.ascii	"float\000"
 939      7400
 940              	.LASF0:
 941 02e5 7369676E 		.ascii	"signed char\000"
 941      65642063 
 941      68617200 
 942              	.LASF32:
 943 02f1 6E756D52 		.ascii	"numRows\000"
 943      6F777300 
 944              	.LASF33:
 945 02f9 6E756D43 		.ascii	"numCols\000"
 945      6F6C7300 
 946              	.LASF44:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc6YVNDe.s 			page 35


 947 0301 6E756D53 		.ascii	"numSamples\000"
 947      616D706C 
 947      657300
 948              	.LASF29:
 949 030c 61726D5F 		.ascii	"arm_status\000"
 949      73746174 
 949      757300
 950              	.LASF27:
 951 0317 41524D5F 		.ascii	"ARM_MATH_SINGULAR\000"
 951      4D415448 
 951      5F53494E 
 951      47554C41 
 951      5200
 952              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
