ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_mat_cmplx_mult_q31.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_lmul
  18              		.section	.text.arm_mat_cmplx_mult_q31,"ax",%progbits
  19              		.align	2
  20              		.global	arm_mat_cmplx_mult_q31
  21              		.code	16
  22              		.thumb_func
  23              		.type	arm_mat_cmplx_mult_q31, %function
  24              	arm_mat_cmplx_mult_q31:
  25              	.LFB82:
  26              		.file 1 "Source\\MatrixFunctions\\arm_mat_cmplx_mult_q31.c"
   1:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /* ----------------------------------------------------------------------
   2:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Project:      CMSIS DSP Library
   3:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Title:        arm_mat_cmplx_mult_q31.c
   4:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Description:  Floating-point matrix multiplication
   5:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
   6:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * $Date:        27. January 2017
   7:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * $Revision:    V.1.5.1
   8:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
   9:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Target Processor: Cortex-M cores
  10:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * -------------------------------------------------------------------- */
  11:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /*
  12:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
  14:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
  16:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * not use this file except in compliance with the License.
  18:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * You may obtain a copy of the License at
  19:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
  20:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
  22:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * See the License for the specific language governing permissions and
  26:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * limitations under the License.
  27:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  */
  28:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  29:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #include "arm_math.h"
  30:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  31:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /**
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 2


  32:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * @ingroup groupMatrix
  33:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  */
  34:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  35:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /**
  36:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * @addtogroup CmplxMatrixMult
  37:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * @{
  38:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  */
  39:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  40:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /**
  41:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * @brief Q31 Complex matrix multiplication
  42:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * @param[in]       *pSrcA points to the first input complex matrix structure
  43:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * @param[in]       *pSrcB points to the second input complex matrix structure
  44:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * @param[out]      *pDst points to output complex matrix structure
  45:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * @return     		The function returns either
  46:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of siz
  47:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
  48:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * @details
  49:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * <b>Scaling and Overflow Behavior:</b>
  50:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
  51:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * \par
  52:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * The function is implemented using an internal 64-bit accumulator.
  53:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * The accumulator has a 2.62 format and maintains full precision of the intermediate
  54:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * multiplication results but provides only a single guard bit. There is no saturation
  55:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * on intermediate additions. Thus, if the accumulator overflows it wraps around and
  56:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * distorts the result. The input signals should be scaled down to avoid intermediate
  57:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * overflows. The input is thus scaled down by log2(numColsA) bits
  58:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * to avoid overflows, as a total of numColsA additions are performed internally.
  59:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * The 2.62 accumulator is right shifted by 31 bits and saturated to 1.31 format to yield the final
  60:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
  61:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
  62:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  */
  63:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  64:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** arm_status arm_mat_cmplx_mult_q31(
  65:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   const arm_matrix_instance_q31 * pSrcA,
  66:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   const arm_matrix_instance_q31 * pSrcB,
  67:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   arm_matrix_instance_q31 * pDst)
  68:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** {
  27              		.loc 1 68 0
  28              		.cfi_startproc
  29 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  30              		.cfi_def_cfa_offset 20
  31              		.cfi_offset 4, -20
  32              		.cfi_offset 5, -16
  33              		.cfi_offset 6, -12
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 FBB0     		sub	sp, sp, #492
  37              		.cfi_def_cfa_offset 512
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 BA23     		mov	r3, #186
  41 0008 5B00     		lsl	r3, r3, #1
  42 000a FB18     		add	r3, r7, r3
  43 000c 1860     		str	r0, [r3]
  44 000e B823     		mov	r3, #184
  45 0010 5B00     		lsl	r3, r3, #1
  46 0012 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 3


  47 0014 1960     		str	r1, [r3]
  48 0016 B623     		mov	r3, #182
  49 0018 5B00     		lsl	r3, r3, #1
  50 001a FB18     		add	r3, r7, r3
  51 001c 1A60     		str	r2, [r3]
  69:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pIn1 = pSrcA->pData;                    /* input data matrix pointer A */
  52              		.loc 1 69 0
  53 001e BA23     		mov	r3, #186
  54 0020 5B00     		lsl	r3, r3, #1
  55 0022 FB18     		add	r3, r7, r3
  56 0024 1B68     		ldr	r3, [r3]
  57 0026 5B68     		ldr	r3, [r3, #4]
  58 0028 F222     		mov	r2, #242
  59 002a 5200     		lsl	r2, r2, #1
  60 002c BA18     		add	r2, r7, r2
  61 002e 1360     		str	r3, [r2]
  70:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pIn2 = pSrcB->pData;                    /* input data matrix pointer B */
  62              		.loc 1 70 0
  63 0030 B823     		mov	r3, #184
  64 0032 5B00     		lsl	r3, r3, #1
  65 0034 FB18     		add	r3, r7, r3
  66 0036 1B68     		ldr	r3, [r3]
  67 0038 5B68     		ldr	r3, [r3, #4]
  68 003a F022     		mov	r2, #240
  69 003c 5200     		lsl	r2, r2, #1
  70 003e BA18     		add	r2, r7, r2
  71 0040 1360     		str	r3, [r2]
  71:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pInA = pSrcA->pData;                    /* input data matrix pointer A  */
  72              		.loc 1 71 0
  73 0042 BA23     		mov	r3, #186
  74 0044 5B00     		lsl	r3, r3, #1
  75 0046 FB18     		add	r3, r7, r3
  76 0048 1B68     		ldr	r3, [r3]
  77 004a 5B68     		ldr	r3, [r3, #4]
  78 004c EE22     		mov	r2, #238
  79 004e 5200     		lsl	r2, r2, #1
  80 0050 BA18     		add	r2, r7, r2
  81 0052 1360     		str	r3, [r2]
  72:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pOut = pDst->pData;                     /* output data matrix pointer */
  82              		.loc 1 72 0
  83 0054 B623     		mov	r3, #182
  84 0056 5B00     		lsl	r3, r3, #1
  85 0058 FB18     		add	r3, r7, r3
  86 005a 1B68     		ldr	r3, [r3]
  87 005c 5B68     		ldr	r3, [r3, #4]
  88 005e DC22     		mov	r2, #220
  89 0060 5200     		lsl	r2, r2, #1
  90 0062 BA18     		add	r2, r7, r2
  91 0064 1360     		str	r3, [r2]
  73:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *px;                                     /* Temporary output data matrix pointer */
  74:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint16_t numRowsA = pSrcA->numRows;            /* number of rows of input matrix A */
  92              		.loc 1 74 0
  93 0066 4E23     		mov	r3, #78
  94 0068 B422     		mov	r2, #180
  95 006a 5200     		lsl	r2, r2, #1
  96 006c BA18     		add	r2, r7, r2
  97 006e D218     		add	r2, r2, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 4


  98 0070 BA23     		mov	r3, #186
  99 0072 5B00     		lsl	r3, r3, #1
 100 0074 FB18     		add	r3, r7, r3
 101 0076 1B68     		ldr	r3, [r3]
 102 0078 1B88     		ldrh	r3, [r3]
 103 007a 1380     		strh	r3, [r2]
  75:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint16_t numColsB = pSrcB->numCols;            /* number of columns of input matrix B */
 104              		.loc 1 75 0
 105 007c 4C23     		mov	r3, #76
 106 007e B422     		mov	r2, #180
 107 0080 5200     		lsl	r2, r2, #1
 108 0082 BA18     		add	r2, r7, r2
 109 0084 D218     		add	r2, r2, r3
 110 0086 B823     		mov	r3, #184
 111 0088 5B00     		lsl	r3, r3, #1
 112 008a FB18     		add	r3, r7, r3
 113 008c 1B68     		ldr	r3, [r3]
 114 008e 5B88     		ldrh	r3, [r3, #2]
 115 0090 1380     		strh	r3, [r2]
  76:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint16_t numColsA = pSrcA->numCols;            /* number of columns of input matrix A */
 116              		.loc 1 76 0
 117 0092 4A23     		mov	r3, #74
 118 0094 B422     		mov	r2, #180
 119 0096 5200     		lsl	r2, r2, #1
 120 0098 BA18     		add	r2, r7, r2
 121 009a D218     		add	r2, r2, r3
 122 009c BA23     		mov	r3, #186
 123 009e 5B00     		lsl	r3, r3, #1
 124 00a0 FB18     		add	r3, r7, r3
 125 00a2 1B68     		ldr	r3, [r3]
 126 00a4 5B88     		ldrh	r3, [r3, #2]
 127 00a6 1380     		strh	r3, [r2]
  77:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q63_t sumReal1, sumImag1;                      /* accumulator */
  78:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t a0, b0, c0, d0;
  79:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t a1, b1, c1, d1;
  80:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  81:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  82:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  83:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  84:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint16_t col, i = 0u, j, row = numRowsA, colCnt;      /* loop counters */
 128              		.loc 1 84 0
 129 00a8 5C23     		mov	r3, #92
 130 00aa B422     		mov	r2, #180
 131 00ac 5200     		lsl	r2, r2, #1
 132 00ae BA18     		add	r2, r7, r2
 133 00b0 D218     		add	r2, r2, r3
 134 00b2 0023     		mov	r3, #0
 135 00b4 1380     		strh	r3, [r2]
 136 00b6 5823     		mov	r3, #88
 137 00b8 B422     		mov	r2, #180
 138 00ba 5200     		lsl	r2, r2, #1
 139 00bc BA18     		add	r2, r7, r2
 140 00be D218     		add	r2, r2, r3
 141 00c0 4E23     		mov	r3, #78
 142 00c2 B421     		mov	r1, #180
 143 00c4 4900     		lsl	r1, r1, #1
 144 00c6 8C46     		mov	ip, r1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 5


 145 00c8 BC44     		add	ip, ip, r7
 146 00ca 6344     		add	r3, r3, ip
 147 00cc 1B88     		ldrh	r3, [r3]
 148 00ce 1380     		strh	r3, [r2]
 149              	.L13:
  85:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   arm_status status;                             /* status of matrix multiplication */
  86:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  87:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #ifdef ARM_MATH_MATRIX_CHECK
  88:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  89:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  90:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   /* Check for matrix mismatch condition */
  91:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   if ((pSrcA->numCols != pSrcB->numRows) ||
  92:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****      (pSrcA->numRows != pDst->numRows) || (pSrcB->numCols != pDst->numCols))
  93:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   {
  94:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  95:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
  96:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     status = ARM_MATH_SIZE_MISMATCH;
  97:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   }
  98:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   else
  99:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #endif /*      #ifdef ARM_MATH_MATRIX_CHECK    */
 100:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 101:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   {
 102:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     /* The following loop performs the dot-product of each row in pSrcA with each column in pSrcB *
 103:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     /* row loop */
 104:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     do
 105:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     {
 106:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* Output pointer is set to starting address of the row being processed */
 107:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       px = pOut + 2 * i;
 150              		.loc 1 107 0
 151 00d0 5C23     		mov	r3, #92
 152 00d2 B422     		mov	r2, #180
 153 00d4 5200     		lsl	r2, r2, #1
 154 00d6 9446     		mov	ip, r2
 155 00d8 BC44     		add	ip, ip, r7
 156 00da 6344     		add	r3, r3, ip
 157 00dc 1B88     		ldrh	r3, [r3]
 158 00de DB00     		lsl	r3, r3, #3
 159 00e0 1A1C     		mov	r2, r3
 160 00e2 DC23     		mov	r3, #220
 161 00e4 5B00     		lsl	r3, r3, #1
 162 00e6 FB18     		add	r3, r7, r3
 163 00e8 1B68     		ldr	r3, [r3]
 164 00ea 9B18     		add	r3, r3, r2
 165 00ec EC22     		mov	r2, #236
 166 00ee 5200     		lsl	r2, r2, #1
 167 00f0 BA18     		add	r2, r7, r2
 168 00f2 1360     		str	r3, [r2]
 108:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 109:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* For every row wise process, the column loop counter is to be initiated */
 110:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       col = numColsB;
 169              		.loc 1 110 0
 170 00f4 5E23     		mov	r3, #94
 171 00f6 B422     		mov	r2, #180
 172 00f8 5200     		lsl	r2, r2, #1
 173 00fa BA18     		add	r2, r7, r2
 174 00fc D218     		add	r2, r2, r3
 175 00fe 4C23     		mov	r3, #76
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 6


 176 0100 B421     		mov	r1, #180
 177 0102 4900     		lsl	r1, r1, #1
 178 0104 8C46     		mov	ip, r1
 179 0106 BC44     		add	ip, ip, r7
 180 0108 6344     		add	r3, r3, ip
 181 010a 1B88     		ldrh	r3, [r3]
 182 010c 1380     		strh	r3, [r2]
 111:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 112:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* For every row wise process, the pIn2 pointer is set
 113:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****        ** to the starting address of the pSrcB data */
 114:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       pIn2 = pSrcB->pData;
 183              		.loc 1 114 0
 184 010e B823     		mov	r3, #184
 185 0110 5B00     		lsl	r3, r3, #1
 186 0112 FB18     		add	r3, r7, r3
 187 0114 1B68     		ldr	r3, [r3]
 188 0116 5B68     		ldr	r3, [r3, #4]
 189 0118 F022     		mov	r2, #240
 190 011a 5200     		lsl	r2, r2, #1
 191 011c BA18     		add	r2, r7, r2
 192 011e 1360     		str	r3, [r2]
 115:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 116:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       j = 0u;
 193              		.loc 1 116 0
 194 0120 5A23     		mov	r3, #90
 195 0122 B422     		mov	r2, #180
 196 0124 5200     		lsl	r2, r2, #1
 197 0126 BA18     		add	r2, r7, r2
 198 0128 D218     		add	r2, r2, r3
 199 012a 0023     		mov	r3, #0
 200 012c 1380     		strh	r3, [r2]
 201              	.L12:
 117:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 118:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* column loop */
 119:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       do
 120:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       {
 121:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Set the variable sum, that acts as accumulator, to zero */
 122:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         sumReal1 = 0.0;
 202              		.loc 1 122 0
 203 012e 0023     		mov	r3, #0
 204 0130 0024     		mov	r4, #0
 205 0132 E822     		mov	r2, #232
 206 0134 5200     		lsl	r2, r2, #1
 207 0136 BA18     		add	r2, r7, r2
 208 0138 1360     		str	r3, [r2]
 209 013a 5460     		str	r4, [r2, #4]
 123:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         sumImag1 = 0.0;
 210              		.loc 1 123 0
 211 013c 0023     		mov	r3, #0
 212 013e 0024     		mov	r4, #0
 213 0140 E422     		mov	r2, #228
 214 0142 5200     		lsl	r2, r2, #1
 215 0144 BA18     		add	r2, r7, r2
 216 0146 1360     		str	r3, [r2]
 217 0148 5460     		str	r4, [r2, #4]
 124:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 125:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Initiate the pointer pIn1 to point to the starting address of the column being processed
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 7


 126:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         pIn1 = pInA;
 218              		.loc 1 126 0
 219 014a EE23     		mov	r3, #238
 220 014c 5B00     		lsl	r3, r3, #1
 221 014e FB18     		add	r3, r7, r3
 222 0150 1B68     		ldr	r3, [r3]
 223 0152 F222     		mov	r2, #242
 224 0154 5200     		lsl	r2, r2, #1
 225 0156 BA18     		add	r2, r7, r2
 226 0158 1360     		str	r3, [r2]
 127:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 128:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Apply loop unrolling and compute 4 MACs simultaneously. */
 129:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         colCnt = numColsA >> 2;
 227              		.loc 1 129 0
 228 015a 5623     		mov	r3, #86
 229 015c B422     		mov	r2, #180
 230 015e 5200     		lsl	r2, r2, #1
 231 0160 BA18     		add	r2, r7, r2
 232 0162 D218     		add	r2, r2, r3
 233 0164 4A23     		mov	r3, #74
 234 0166 B421     		mov	r1, #180
 235 0168 4900     		lsl	r1, r1, #1
 236 016a 8C46     		mov	ip, r1
 237 016c BC44     		add	ip, ip, r7
 238 016e 6344     		add	r3, r3, ip
 239 0170 1B88     		ldrh	r3, [r3]
 240 0172 9B08     		lsr	r3, r3, #2
 241 0174 1380     		strh	r3, [r2]
 130:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 131:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* matrix multiplication        */
 132:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         while (colCnt > 0u)
 242              		.loc 1 132 0
 243 0176 00F014FC 		bl	.L2	@ far jump
 244              	.L3:
 133:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 134:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 135:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Reading real part of complex matrix A */
 136:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a0 = *pIn1;
 245              		.loc 1 136 0
 246 017a F223     		mov	r3, #242
 247 017c 5B00     		lsl	r3, r3, #1
 248 017e FB18     		add	r3, r7, r3
 249 0180 1B68     		ldr	r3, [r3]
 250 0182 1B68     		ldr	r3, [r3]
 251 0184 D622     		mov	r2, #214
 252 0186 5200     		lsl	r2, r2, #1
 253 0188 BA18     		add	r2, r7, r2
 254 018a 1360     		str	r3, [r2]
 137:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 138:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Reading real part of complex matrix B */
 139:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c0 = *pIn2;
 255              		.loc 1 139 0
 256 018c F023     		mov	r3, #240
 257 018e 5B00     		lsl	r3, r3, #1
 258 0190 FB18     		add	r3, r7, r3
 259 0192 1B68     		ldr	r3, [r3]
 260 0194 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 8


 261 0196 D422     		mov	r2, #212
 262 0198 5200     		lsl	r2, r2, #1
 263 019a BA18     		add	r2, r7, r2
 264 019c 1360     		str	r3, [r2]
 140:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 141:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Reading imaginary part of complex matrix A */
 142:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b0 = *(pIn1 + 1u);
 265              		.loc 1 142 0
 266 019e F223     		mov	r3, #242
 267 01a0 5B00     		lsl	r3, r3, #1
 268 01a2 FB18     		add	r3, r7, r3
 269 01a4 1B68     		ldr	r3, [r3]
 270 01a6 5B68     		ldr	r3, [r3, #4]
 271 01a8 D222     		mov	r2, #210
 272 01aa 5200     		lsl	r2, r2, #1
 273 01ac BA18     		add	r2, r7, r2
 274 01ae 1360     		str	r3, [r2]
 143:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 144:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Reading imaginary part of complex matrix B */
 145:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d0 = *(pIn2 + 1u);
 275              		.loc 1 145 0
 276 01b0 F023     		mov	r3, #240
 277 01b2 5B00     		lsl	r3, r3, #1
 278 01b4 FB18     		add	r3, r7, r3
 279 01b6 1B68     		ldr	r3, [r3]
 280 01b8 5B68     		ldr	r3, [r3, #4]
 281 01ba D022     		mov	r2, #208
 282 01bc 5200     		lsl	r2, r2, #1
 283 01be BA18     		add	r2, r7, r2
 284 01c0 1360     		str	r3, [r2]
 146:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 147:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 148:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 += (q63_t) a0 *c0;
 285              		.loc 1 148 0
 286 01c2 D623     		mov	r3, #214
 287 01c4 5B00     		lsl	r3, r3, #1
 288 01c6 FB18     		add	r3, r7, r3
 289 01c8 1B68     		ldr	r3, [r3]
 290 01ca AC22     		mov	r2, #172
 291 01cc 5200     		lsl	r2, r2, #1
 292 01ce BA18     		add	r2, r7, r2
 293 01d0 1360     		str	r3, [r2]
 294 01d2 DB17     		asr	r3, r3, #31
 295 01d4 AE22     		mov	r2, #174
 296 01d6 5200     		lsl	r2, r2, #1
 297 01d8 BA18     		add	r2, r7, r2
 298 01da 1360     		str	r3, [r2]
 299 01dc D423     		mov	r3, #212
 300 01de 5B00     		lsl	r3, r3, #1
 301 01e0 FB18     		add	r3, r7, r3
 302 01e2 1B68     		ldr	r3, [r3]
 303 01e4 A822     		mov	r2, #168
 304 01e6 5200     		lsl	r2, r2, #1
 305 01e8 BA18     		add	r2, r7, r2
 306 01ea 1360     		str	r3, [r2]
 307 01ec DB17     		asr	r3, r3, #31
 308 01ee AA22     		mov	r2, #170
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 9


 309 01f0 5200     		lsl	r2, r2, #1
 310 01f2 BA18     		add	r2, r7, r2
 311 01f4 1360     		str	r3, [r2]
 312 01f6 AC23     		mov	r3, #172
 313 01f8 5B00     		lsl	r3, r3, #1
 314 01fa FB18     		add	r3, r7, r3
 315 01fc 1868     		ldr	r0, [r3]
 316 01fe 5968     		ldr	r1, [r3, #4]
 317 0200 A823     		mov	r3, #168
 318 0202 5B00     		lsl	r3, r3, #1
 319 0204 FB18     		add	r3, r7, r3
 320 0206 1A68     		ldr	r2, [r3]
 321 0208 5B68     		ldr	r3, [r3, #4]
 322 020a FFF7FEFF 		bl	__aeabi_lmul
 323 020e 031C     		mov	r3, r0
 324 0210 0C1C     		mov	r4, r1
 325 0212 191C     		mov	r1, r3
 326 0214 221C     		mov	r2, r4
 327 0216 E823     		mov	r3, #232
 328 0218 5B00     		lsl	r3, r3, #1
 329 021a FB18     		add	r3, r7, r3
 330 021c 5C68     		ldr	r4, [r3, #4]
 331 021e 1B68     		ldr	r3, [r3]
 332 0220 5B18     		add	r3, r3, r1
 333 0222 5441     		adc	r4, r4, r2
 334 0224 E822     		mov	r2, #232
 335 0226 5200     		lsl	r2, r2, #1
 336 0228 BA18     		add	r2, r7, r2
 337 022a 1360     		str	r3, [r2]
 338 022c 5460     		str	r4, [r2, #4]
 149:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) b0 *c0;
 339              		.loc 1 149 0
 340 022e D223     		mov	r3, #210
 341 0230 5B00     		lsl	r3, r3, #1
 342 0232 FB18     		add	r3, r7, r3
 343 0234 1B68     		ldr	r3, [r3]
 344 0236 A422     		mov	r2, #164
 345 0238 5200     		lsl	r2, r2, #1
 346 023a BA18     		add	r2, r7, r2
 347 023c 1360     		str	r3, [r2]
 348 023e DB17     		asr	r3, r3, #31
 349 0240 A622     		mov	r2, #166
 350 0242 5200     		lsl	r2, r2, #1
 351 0244 BA18     		add	r2, r7, r2
 352 0246 1360     		str	r3, [r2]
 353 0248 D423     		mov	r3, #212
 354 024a 5B00     		lsl	r3, r3, #1
 355 024c FB18     		add	r3, r7, r3
 356 024e 1B68     		ldr	r3, [r3]
 357 0250 A022     		mov	r2, #160
 358 0252 5200     		lsl	r2, r2, #1
 359 0254 BA18     		add	r2, r7, r2
 360 0256 1360     		str	r3, [r2]
 361 0258 DB17     		asr	r3, r3, #31
 362 025a A222     		mov	r2, #162
 363 025c 5200     		lsl	r2, r2, #1
 364 025e BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 10


 365 0260 1360     		str	r3, [r2]
 366 0262 A423     		mov	r3, #164
 367 0264 5B00     		lsl	r3, r3, #1
 368 0266 FB18     		add	r3, r7, r3
 369 0268 1868     		ldr	r0, [r3]
 370 026a 5968     		ldr	r1, [r3, #4]
 371 026c A023     		mov	r3, #160
 372 026e 5B00     		lsl	r3, r3, #1
 373 0270 FB18     		add	r3, r7, r3
 374 0272 1A68     		ldr	r2, [r3]
 375 0274 5B68     		ldr	r3, [r3, #4]
 376 0276 FFF7FEFF 		bl	__aeabi_lmul
 377 027a 031C     		mov	r3, r0
 378 027c 0C1C     		mov	r4, r1
 379 027e 191C     		mov	r1, r3
 380 0280 221C     		mov	r2, r4
 381 0282 E423     		mov	r3, #228
 382 0284 5B00     		lsl	r3, r3, #1
 383 0286 FB18     		add	r3, r7, r3
 384 0288 5C68     		ldr	r4, [r3, #4]
 385 028a 1B68     		ldr	r3, [r3]
 386 028c 5B18     		add	r3, r3, r1
 387 028e 5441     		adc	r4, r4, r2
 388 0290 E422     		mov	r2, #228
 389 0292 5200     		lsl	r2, r2, #1
 390 0294 BA18     		add	r2, r7, r2
 391 0296 1360     		str	r3, [r2]
 392 0298 5460     		str	r4, [r2, #4]
 150:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 151:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 152:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2u;
 393              		.loc 1 152 0
 394 029a F223     		mov	r3, #242
 395 029c 5B00     		lsl	r3, r3, #1
 396 029e FB18     		add	r3, r7, r3
 397 02a0 1B68     		ldr	r3, [r3]
 398 02a2 0833     		add	r3, r3, #8
 399 02a4 F222     		mov	r2, #242
 400 02a6 5200     		lsl	r2, r2, #1
 401 02a8 BA18     		add	r2, r7, r2
 402 02aa 1360     		str	r3, [r2]
 153:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 403              		.loc 1 153 0
 404 02ac 4C23     		mov	r3, #76
 405 02ae B422     		mov	r2, #180
 406 02b0 5200     		lsl	r2, r2, #1
 407 02b2 9446     		mov	ip, r2
 408 02b4 BC44     		add	ip, ip, r7
 409 02b6 6344     		add	r3, r3, ip
 410 02b8 1B88     		ldrh	r3, [r3]
 411 02ba DB00     		lsl	r3, r3, #3
 412 02bc 1A1C     		mov	r2, r3
 413 02be F023     		mov	r3, #240
 414 02c0 5B00     		lsl	r3, r3, #1
 415 02c2 FB18     		add	r3, r7, r3
 416 02c4 1B68     		ldr	r3, [r3]
 417 02c6 9B18     		add	r3, r3, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 11


 418 02c8 F022     		mov	r2, #240
 419 02ca 5200     		lsl	r2, r2, #1
 420 02cc BA18     		add	r2, r7, r2
 421 02ce 1360     		str	r3, [r2]
 154:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 155:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 156:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 -= (q63_t) b0 *d0;
 422              		.loc 1 156 0
 423 02d0 D223     		mov	r3, #210
 424 02d2 5B00     		lsl	r3, r3, #1
 425 02d4 FB18     		add	r3, r7, r3
 426 02d6 1B68     		ldr	r3, [r3]
 427 02d8 9C22     		mov	r2, #156
 428 02da 5200     		lsl	r2, r2, #1
 429 02dc BA18     		add	r2, r7, r2
 430 02de 1360     		str	r3, [r2]
 431 02e0 DB17     		asr	r3, r3, #31
 432 02e2 9E22     		mov	r2, #158
 433 02e4 5200     		lsl	r2, r2, #1
 434 02e6 BA18     		add	r2, r7, r2
 435 02e8 1360     		str	r3, [r2]
 436 02ea D023     		mov	r3, #208
 437 02ec 5B00     		lsl	r3, r3, #1
 438 02ee FB18     		add	r3, r7, r3
 439 02f0 1B68     		ldr	r3, [r3]
 440 02f2 9822     		mov	r2, #152
 441 02f4 5200     		lsl	r2, r2, #1
 442 02f6 BA18     		add	r2, r7, r2
 443 02f8 1360     		str	r3, [r2]
 444 02fa DB17     		asr	r3, r3, #31
 445 02fc 9A22     		mov	r2, #154
 446 02fe 5200     		lsl	r2, r2, #1
 447 0300 BA18     		add	r2, r7, r2
 448 0302 1360     		str	r3, [r2]
 449 0304 9C23     		mov	r3, #156
 450 0306 5B00     		lsl	r3, r3, #1
 451 0308 FB18     		add	r3, r7, r3
 452 030a 1868     		ldr	r0, [r3]
 453 030c 5968     		ldr	r1, [r3, #4]
 454 030e 9823     		mov	r3, #152
 455 0310 5B00     		lsl	r3, r3, #1
 456 0312 FB18     		add	r3, r7, r3
 457 0314 1A68     		ldr	r2, [r3]
 458 0316 5B68     		ldr	r3, [r3, #4]
 459 0318 FFF7FEFF 		bl	__aeabi_lmul
 460 031c 031C     		mov	r3, r0
 461 031e 0C1C     		mov	r4, r1
 462 0320 191C     		mov	r1, r3
 463 0322 221C     		mov	r2, r4
 464 0324 E823     		mov	r3, #232
 465 0326 5B00     		lsl	r3, r3, #1
 466 0328 FB18     		add	r3, r7, r3
 467 032a 5C68     		ldr	r4, [r3, #4]
 468 032c 1B68     		ldr	r3, [r3]
 469 032e 5B1A     		sub	r3, r3, r1
 470 0330 9441     		sbc	r4, r4, r2
 471 0332 E822     		mov	r2, #232
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 12


 472 0334 5200     		lsl	r2, r2, #1
 473 0336 BA18     		add	r2, r7, r2
 474 0338 1360     		str	r3, [r2]
 475 033a 5460     		str	r4, [r2, #4]
 157:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) a0 *d0;
 476              		.loc 1 157 0
 477 033c D623     		mov	r3, #214
 478 033e 5B00     		lsl	r3, r3, #1
 479 0340 FB18     		add	r3, r7, r3
 480 0342 1B68     		ldr	r3, [r3]
 481 0344 9422     		mov	r2, #148
 482 0346 5200     		lsl	r2, r2, #1
 483 0348 BA18     		add	r2, r7, r2
 484 034a 1360     		str	r3, [r2]
 485 034c DB17     		asr	r3, r3, #31
 486 034e 9622     		mov	r2, #150
 487 0350 5200     		lsl	r2, r2, #1
 488 0352 BA18     		add	r2, r7, r2
 489 0354 1360     		str	r3, [r2]
 490 0356 D023     		mov	r3, #208
 491 0358 5B00     		lsl	r3, r3, #1
 492 035a FB18     		add	r3, r7, r3
 493 035c 1B68     		ldr	r3, [r3]
 494 035e 9022     		mov	r2, #144
 495 0360 5200     		lsl	r2, r2, #1
 496 0362 BA18     		add	r2, r7, r2
 497 0364 1360     		str	r3, [r2]
 498 0366 DB17     		asr	r3, r3, #31
 499 0368 9222     		mov	r2, #146
 500 036a 5200     		lsl	r2, r2, #1
 501 036c BA18     		add	r2, r7, r2
 502 036e 1360     		str	r3, [r2]
 503 0370 9423     		mov	r3, #148
 504 0372 5B00     		lsl	r3, r3, #1
 505 0374 FB18     		add	r3, r7, r3
 506 0376 1868     		ldr	r0, [r3]
 507 0378 5968     		ldr	r1, [r3, #4]
 508 037a 9023     		mov	r3, #144
 509 037c 5B00     		lsl	r3, r3, #1
 510 037e FB18     		add	r3, r7, r3
 511 0380 1A68     		ldr	r2, [r3]
 512 0382 5B68     		ldr	r3, [r3, #4]
 513 0384 FFF7FEFF 		bl	__aeabi_lmul
 514 0388 031C     		mov	r3, r0
 515 038a 0C1C     		mov	r4, r1
 516 038c 191C     		mov	r1, r3
 517 038e 221C     		mov	r2, r4
 518 0390 E423     		mov	r3, #228
 519 0392 5B00     		lsl	r3, r3, #1
 520 0394 FB18     		add	r3, r7, r3
 521 0396 5C68     		ldr	r4, [r3, #4]
 522 0398 1B68     		ldr	r3, [r3]
 523 039a 5B18     		add	r3, r3, r1
 524 039c 5441     		adc	r4, r4, r2
 525 039e E422     		mov	r2, #228
 526 03a0 5200     		lsl	r2, r2, #1
 527 03a2 BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 13


 528 03a4 1360     		str	r3, [r2]
 529 03a6 5460     		str	r4, [r2, #4]
 158:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 159:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* c(m,n) = a(1,1)*b(1,1) + a(1,2) * b(2,1) + .... + a(m,p)*b(p,n) */
 160:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 161:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* read real and imag values from pSrcA and pSrcB buffer */
 162:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a1 = *pIn1;
 530              		.loc 1 162 0
 531 03a8 F223     		mov	r3, #242
 532 03aa 5B00     		lsl	r3, r3, #1
 533 03ac FB18     		add	r3, r7, r3
 534 03ae 1B68     		ldr	r3, [r3]
 535 03b0 1B68     		ldr	r3, [r3]
 536 03b2 CE22     		mov	r2, #206
 537 03b4 5200     		lsl	r2, r2, #1
 538 03b6 BA18     		add	r2, r7, r2
 539 03b8 1360     		str	r3, [r2]
 163:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c1 = *pIn2;
 540              		.loc 1 163 0
 541 03ba F023     		mov	r3, #240
 542 03bc 5B00     		lsl	r3, r3, #1
 543 03be FB18     		add	r3, r7, r3
 544 03c0 1B68     		ldr	r3, [r3]
 545 03c2 1B68     		ldr	r3, [r3]
 546 03c4 CC22     		mov	r2, #204
 547 03c6 5200     		lsl	r2, r2, #1
 548 03c8 BA18     		add	r2, r7, r2
 549 03ca 1360     		str	r3, [r2]
 164:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b1 = *(pIn1 + 1u);
 550              		.loc 1 164 0
 551 03cc F223     		mov	r3, #242
 552 03ce 5B00     		lsl	r3, r3, #1
 553 03d0 FB18     		add	r3, r7, r3
 554 03d2 1B68     		ldr	r3, [r3]
 555 03d4 5B68     		ldr	r3, [r3, #4]
 556 03d6 CA22     		mov	r2, #202
 557 03d8 5200     		lsl	r2, r2, #1
 558 03da BA18     		add	r2, r7, r2
 559 03dc 1360     		str	r3, [r2]
 165:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d1 = *(pIn2 + 1u);
 560              		.loc 1 165 0
 561 03de F023     		mov	r3, #240
 562 03e0 5B00     		lsl	r3, r3, #1
 563 03e2 FB18     		add	r3, r7, r3
 564 03e4 1B68     		ldr	r3, [r3]
 565 03e6 5B68     		ldr	r3, [r3, #4]
 566 03e8 C822     		mov	r2, #200
 567 03ea 5200     		lsl	r2, r2, #1
 568 03ec BA18     		add	r2, r7, r2
 569 03ee 1360     		str	r3, [r2]
 166:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 167:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 168:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 += (q63_t) a1 *c1;
 570              		.loc 1 168 0
 571 03f0 CE23     		mov	r3, #206
 572 03f2 5B00     		lsl	r3, r3, #1
 573 03f4 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 14


 574 03f6 1B68     		ldr	r3, [r3]
 575 03f8 8C22     		mov	r2, #140
 576 03fa 5200     		lsl	r2, r2, #1
 577 03fc BA18     		add	r2, r7, r2
 578 03fe 1360     		str	r3, [r2]
 579 0400 DB17     		asr	r3, r3, #31
 580 0402 8E22     		mov	r2, #142
 581 0404 5200     		lsl	r2, r2, #1
 582 0406 BA18     		add	r2, r7, r2
 583 0408 1360     		str	r3, [r2]
 584 040a CC23     		mov	r3, #204
 585 040c 5B00     		lsl	r3, r3, #1
 586 040e FB18     		add	r3, r7, r3
 587 0410 1B68     		ldr	r3, [r3]
 588 0412 8822     		mov	r2, #136
 589 0414 5200     		lsl	r2, r2, #1
 590 0416 BA18     		add	r2, r7, r2
 591 0418 1360     		str	r3, [r2]
 592 041a DB17     		asr	r3, r3, #31
 593 041c 8A22     		mov	r2, #138
 594 041e 5200     		lsl	r2, r2, #1
 595 0420 BA18     		add	r2, r7, r2
 596 0422 1360     		str	r3, [r2]
 597 0424 8C23     		mov	r3, #140
 598 0426 5B00     		lsl	r3, r3, #1
 599 0428 FB18     		add	r3, r7, r3
 600 042a 1868     		ldr	r0, [r3]
 601 042c 5968     		ldr	r1, [r3, #4]
 602 042e 8823     		mov	r3, #136
 603 0430 5B00     		lsl	r3, r3, #1
 604 0432 FB18     		add	r3, r7, r3
 605 0434 1A68     		ldr	r2, [r3]
 606 0436 5B68     		ldr	r3, [r3, #4]
 607 0438 FFF7FEFF 		bl	__aeabi_lmul
 608 043c 031C     		mov	r3, r0
 609 043e 0C1C     		mov	r4, r1
 610 0440 191C     		mov	r1, r3
 611 0442 221C     		mov	r2, r4
 612 0444 E823     		mov	r3, #232
 613 0446 5B00     		lsl	r3, r3, #1
 614 0448 FB18     		add	r3, r7, r3
 615 044a 5C68     		ldr	r4, [r3, #4]
 616 044c 1B68     		ldr	r3, [r3]
 617 044e 5B18     		add	r3, r3, r1
 618 0450 5441     		adc	r4, r4, r2
 619 0452 E822     		mov	r2, #232
 620 0454 5200     		lsl	r2, r2, #1
 621 0456 BA18     		add	r2, r7, r2
 622 0458 1360     		str	r3, [r2]
 623 045a 5460     		str	r4, [r2, #4]
 169:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) b1 *c1;
 624              		.loc 1 169 0
 625 045c CA23     		mov	r3, #202
 626 045e 5B00     		lsl	r3, r3, #1
 627 0460 FB18     		add	r3, r7, r3
 628 0462 1B68     		ldr	r3, [r3]
 629 0464 8422     		mov	r2, #132
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 15


 630 0466 5200     		lsl	r2, r2, #1
 631 0468 BA18     		add	r2, r7, r2
 632 046a 1360     		str	r3, [r2]
 633 046c DB17     		asr	r3, r3, #31
 634 046e 8622     		mov	r2, #134
 635 0470 5200     		lsl	r2, r2, #1
 636 0472 BA18     		add	r2, r7, r2
 637 0474 1360     		str	r3, [r2]
 638 0476 CC23     		mov	r3, #204
 639 0478 5B00     		lsl	r3, r3, #1
 640 047a FB18     		add	r3, r7, r3
 641 047c 1B68     		ldr	r3, [r3]
 642 047e 7A1C     		add	r2, r7, #1
 643 0480 FF32     		add	r2, r2, #255
 644 0482 1360     		str	r3, [r2]
 645 0484 DB17     		asr	r3, r3, #31
 646 0486 7A1D     		add	r2, r7, #5
 647 0488 FF32     		add	r2, r2, #255
 648 048a 1360     		str	r3, [r2]
 649 048c 8423     		mov	r3, #132
 650 048e 5B00     		lsl	r3, r3, #1
 651 0490 FB18     		add	r3, r7, r3
 652 0492 1868     		ldr	r0, [r3]
 653 0494 5968     		ldr	r1, [r3, #4]
 654 0496 7B1C     		add	r3, r7, #1
 655 0498 FF33     		add	r3, r3, #255
 656 049a 1A68     		ldr	r2, [r3]
 657 049c 5B68     		ldr	r3, [r3, #4]
 658 049e FFF7FEFF 		bl	__aeabi_lmul
 659 04a2 031C     		mov	r3, r0
 660 04a4 0C1C     		mov	r4, r1
 661 04a6 191C     		mov	r1, r3
 662 04a8 221C     		mov	r2, r4
 663 04aa E423     		mov	r3, #228
 664 04ac 5B00     		lsl	r3, r3, #1
 665 04ae FB18     		add	r3, r7, r3
 666 04b0 5C68     		ldr	r4, [r3, #4]
 667 04b2 1B68     		ldr	r3, [r3]
 668 04b4 5B18     		add	r3, r3, r1
 669 04b6 5441     		adc	r4, r4, r2
 670 04b8 E422     		mov	r2, #228
 671 04ba 5200     		lsl	r2, r2, #1
 672 04bc BA18     		add	r2, r7, r2
 673 04be 1360     		str	r3, [r2]
 674 04c0 5460     		str	r4, [r2, #4]
 170:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 171:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 172:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2u;
 675              		.loc 1 172 0
 676 04c2 F223     		mov	r3, #242
 677 04c4 5B00     		lsl	r3, r3, #1
 678 04c6 FB18     		add	r3, r7, r3
 679 04c8 1B68     		ldr	r3, [r3]
 680 04ca 0833     		add	r3, r3, #8
 681 04cc F222     		mov	r2, #242
 682 04ce 5200     		lsl	r2, r2, #1
 683 04d0 BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 16


 684 04d2 1360     		str	r3, [r2]
 173:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 685              		.loc 1 173 0
 686 04d4 4C23     		mov	r3, #76
 687 04d6 B422     		mov	r2, #180
 688 04d8 5200     		lsl	r2, r2, #1
 689 04da 9446     		mov	ip, r2
 690 04dc BC44     		add	ip, ip, r7
 691 04de 6344     		add	r3, r3, ip
 692 04e0 1B88     		ldrh	r3, [r3]
 693 04e2 DB00     		lsl	r3, r3, #3
 694 04e4 1A1C     		mov	r2, r3
 695 04e6 F023     		mov	r3, #240
 696 04e8 5B00     		lsl	r3, r3, #1
 697 04ea FB18     		add	r3, r7, r3
 698 04ec 1B68     		ldr	r3, [r3]
 699 04ee 9B18     		add	r3, r3, r2
 700 04f0 F022     		mov	r2, #240
 701 04f2 5200     		lsl	r2, r2, #1
 702 04f4 BA18     		add	r2, r7, r2
 703 04f6 1360     		str	r3, [r2]
 174:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 175:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 176:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 -= (q63_t) b1 *d1;
 704              		.loc 1 176 0
 705 04f8 CA23     		mov	r3, #202
 706 04fa 5B00     		lsl	r3, r3, #1
 707 04fc FB18     		add	r3, r7, r3
 708 04fe 1B68     		ldr	r3, [r3]
 709 0500 F822     		mov	r2, #248
 710 0502 BA18     		add	r2, r7, r2
 711 0504 1360     		str	r3, [r2]
 712 0506 DB17     		asr	r3, r3, #31
 713 0508 FC22     		mov	r2, #252
 714 050a BA18     		add	r2, r7, r2
 715 050c 1360     		str	r3, [r2]
 716 050e C823     		mov	r3, #200
 717 0510 5B00     		lsl	r3, r3, #1
 718 0512 FB18     		add	r3, r7, r3
 719 0514 1B68     		ldr	r3, [r3]
 720 0516 F022     		mov	r2, #240
 721 0518 BA18     		add	r2, r7, r2
 722 051a 1360     		str	r3, [r2]
 723 051c DB17     		asr	r3, r3, #31
 724 051e F422     		mov	r2, #244
 725 0520 BA18     		add	r2, r7, r2
 726 0522 1360     		str	r3, [r2]
 727 0524 F823     		mov	r3, #248
 728 0526 FB18     		add	r3, r7, r3
 729 0528 1868     		ldr	r0, [r3]
 730 052a 5968     		ldr	r1, [r3, #4]
 731 052c F023     		mov	r3, #240
 732 052e FB18     		add	r3, r7, r3
 733 0530 1A68     		ldr	r2, [r3]
 734 0532 5B68     		ldr	r3, [r3, #4]
 735 0534 FFF7FEFF 		bl	__aeabi_lmul
 736 0538 031C     		mov	r3, r0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 17


 737 053a 0C1C     		mov	r4, r1
 738 053c 191C     		mov	r1, r3
 739 053e 221C     		mov	r2, r4
 740 0540 E823     		mov	r3, #232
 741 0542 5B00     		lsl	r3, r3, #1
 742 0544 FB18     		add	r3, r7, r3
 743 0546 5C68     		ldr	r4, [r3, #4]
 744 0548 1B68     		ldr	r3, [r3]
 745 054a 5B1A     		sub	r3, r3, r1
 746 054c 9441     		sbc	r4, r4, r2
 747 054e E822     		mov	r2, #232
 748 0550 5200     		lsl	r2, r2, #1
 749 0552 BA18     		add	r2, r7, r2
 750 0554 1360     		str	r3, [r2]
 751 0556 5460     		str	r4, [r2, #4]
 177:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) a1 *d1;
 752              		.loc 1 177 0
 753 0558 CE23     		mov	r3, #206
 754 055a 5B00     		lsl	r3, r3, #1
 755 055c FB18     		add	r3, r7, r3
 756 055e 1B68     		ldr	r3, [r3]
 757 0560 E822     		mov	r2, #232
 758 0562 BA18     		add	r2, r7, r2
 759 0564 1360     		str	r3, [r2]
 760 0566 DB17     		asr	r3, r3, #31
 761 0568 EC22     		mov	r2, #236
 762 056a BA18     		add	r2, r7, r2
 763 056c 1360     		str	r3, [r2]
 764 056e C823     		mov	r3, #200
 765 0570 5B00     		lsl	r3, r3, #1
 766 0572 FB18     		add	r3, r7, r3
 767 0574 1B68     		ldr	r3, [r3]
 768 0576 E022     		mov	r2, #224
 769 0578 BA18     		add	r2, r7, r2
 770 057a 1360     		str	r3, [r2]
 771 057c DB17     		asr	r3, r3, #31
 772 057e E422     		mov	r2, #228
 773 0580 BA18     		add	r2, r7, r2
 774 0582 1360     		str	r3, [r2]
 775 0584 E823     		mov	r3, #232
 776 0586 FB18     		add	r3, r7, r3
 777 0588 1868     		ldr	r0, [r3]
 778 058a 5968     		ldr	r1, [r3, #4]
 779 058c E023     		mov	r3, #224
 780 058e FB18     		add	r3, r7, r3
 781 0590 1A68     		ldr	r2, [r3]
 782 0592 5B68     		ldr	r3, [r3, #4]
 783 0594 FFF7FEFF 		bl	__aeabi_lmul
 784 0598 031C     		mov	r3, r0
 785 059a 0C1C     		mov	r4, r1
 786 059c 191C     		mov	r1, r3
 787 059e 221C     		mov	r2, r4
 788 05a0 E423     		mov	r3, #228
 789 05a2 5B00     		lsl	r3, r3, #1
 790 05a4 FB18     		add	r3, r7, r3
 791 05a6 5C68     		ldr	r4, [r3, #4]
 792 05a8 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 18


 793 05aa 5B18     		add	r3, r3, r1
 794 05ac 5441     		adc	r4, r4, r2
 795 05ae E422     		mov	r2, #228
 796 05b0 5200     		lsl	r2, r2, #1
 797 05b2 BA18     		add	r2, r7, r2
 798 05b4 1360     		str	r3, [r2]
 799 05b6 5460     		str	r4, [r2, #4]
 178:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 179:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a0 = *pIn1;
 800              		.loc 1 179 0
 801 05b8 F223     		mov	r3, #242
 802 05ba 5B00     		lsl	r3, r3, #1
 803 05bc FB18     		add	r3, r7, r3
 804 05be 1B68     		ldr	r3, [r3]
 805 05c0 1B68     		ldr	r3, [r3]
 806 05c2 D622     		mov	r2, #214
 807 05c4 5200     		lsl	r2, r2, #1
 808 05c6 BA18     		add	r2, r7, r2
 809 05c8 1360     		str	r3, [r2]
 180:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c0 = *pIn2;
 810              		.loc 1 180 0
 811 05ca F023     		mov	r3, #240
 812 05cc 5B00     		lsl	r3, r3, #1
 813 05ce FB18     		add	r3, r7, r3
 814 05d0 1B68     		ldr	r3, [r3]
 815 05d2 1B68     		ldr	r3, [r3]
 816 05d4 D422     		mov	r2, #212
 817 05d6 5200     		lsl	r2, r2, #1
 818 05d8 BA18     		add	r2, r7, r2
 819 05da 1360     		str	r3, [r2]
 181:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 182:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b0 = *(pIn1 + 1u);
 820              		.loc 1 182 0
 821 05dc F223     		mov	r3, #242
 822 05de 5B00     		lsl	r3, r3, #1
 823 05e0 FB18     		add	r3, r7, r3
 824 05e2 1B68     		ldr	r3, [r3]
 825 05e4 5B68     		ldr	r3, [r3, #4]
 826 05e6 D222     		mov	r2, #210
 827 05e8 5200     		lsl	r2, r2, #1
 828 05ea BA18     		add	r2, r7, r2
 829 05ec 1360     		str	r3, [r2]
 183:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d0 = *(pIn2 + 1u);
 830              		.loc 1 183 0
 831 05ee F023     		mov	r3, #240
 832 05f0 5B00     		lsl	r3, r3, #1
 833 05f2 FB18     		add	r3, r7, r3
 834 05f4 1B68     		ldr	r3, [r3]
 835 05f6 5B68     		ldr	r3, [r3, #4]
 836 05f8 D022     		mov	r2, #208
 837 05fa 5200     		lsl	r2, r2, #1
 838 05fc BA18     		add	r2, r7, r2
 839 05fe 1360     		str	r3, [r2]
 184:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 185:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 186:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 += (q63_t) a0 *c0;
 840              		.loc 1 186 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 19


 841 0600 D623     		mov	r3, #214
 842 0602 5B00     		lsl	r3, r3, #1
 843 0604 FB18     		add	r3, r7, r3
 844 0606 1B68     		ldr	r3, [r3]
 845 0608 D822     		mov	r2, #216
 846 060a BA18     		add	r2, r7, r2
 847 060c 1360     		str	r3, [r2]
 848 060e DB17     		asr	r3, r3, #31
 849 0610 DC22     		mov	r2, #220
 850 0612 BA18     		add	r2, r7, r2
 851 0614 1360     		str	r3, [r2]
 852 0616 D423     		mov	r3, #212
 853 0618 5B00     		lsl	r3, r3, #1
 854 061a FB18     		add	r3, r7, r3
 855 061c 1B68     		ldr	r3, [r3]
 856 061e D022     		mov	r2, #208
 857 0620 BA18     		add	r2, r7, r2
 858 0622 1360     		str	r3, [r2]
 859 0624 DB17     		asr	r3, r3, #31
 860 0626 D422     		mov	r2, #212
 861 0628 BA18     		add	r2, r7, r2
 862 062a 1360     		str	r3, [r2]
 863 062c D823     		mov	r3, #216
 864 062e FB18     		add	r3, r7, r3
 865 0630 1868     		ldr	r0, [r3]
 866 0632 5968     		ldr	r1, [r3, #4]
 867 0634 D023     		mov	r3, #208
 868 0636 FB18     		add	r3, r7, r3
 869 0638 1A68     		ldr	r2, [r3]
 870 063a 5B68     		ldr	r3, [r3, #4]
 871 063c FFF7FEFF 		bl	__aeabi_lmul
 872 0640 031C     		mov	r3, r0
 873 0642 0C1C     		mov	r4, r1
 874 0644 191C     		mov	r1, r3
 875 0646 221C     		mov	r2, r4
 876 0648 E823     		mov	r3, #232
 877 064a 5B00     		lsl	r3, r3, #1
 878 064c FB18     		add	r3, r7, r3
 879 064e 5C68     		ldr	r4, [r3, #4]
 880 0650 1B68     		ldr	r3, [r3]
 881 0652 5B18     		add	r3, r3, r1
 882 0654 5441     		adc	r4, r4, r2
 883 0656 E822     		mov	r2, #232
 884 0658 5200     		lsl	r2, r2, #1
 885 065a BA18     		add	r2, r7, r2
 886 065c 1360     		str	r3, [r2]
 887 065e 5460     		str	r4, [r2, #4]
 187:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) b0 *c0;
 888              		.loc 1 187 0
 889 0660 D223     		mov	r3, #210
 890 0662 5B00     		lsl	r3, r3, #1
 891 0664 FB18     		add	r3, r7, r3
 892 0666 1B68     		ldr	r3, [r3]
 893 0668 C822     		mov	r2, #200
 894 066a BA18     		add	r2, r7, r2
 895 066c 1360     		str	r3, [r2]
 896 066e DB17     		asr	r3, r3, #31
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 20


 897 0670 CC22     		mov	r2, #204
 898 0672 BA18     		add	r2, r7, r2
 899 0674 1360     		str	r3, [r2]
 900 0676 D423     		mov	r3, #212
 901 0678 5B00     		lsl	r3, r3, #1
 902 067a FB18     		add	r3, r7, r3
 903 067c 1B68     		ldr	r3, [r3]
 904 067e C022     		mov	r2, #192
 905 0680 BA18     		add	r2, r7, r2
 906 0682 1360     		str	r3, [r2]
 907 0684 DB17     		asr	r3, r3, #31
 908 0686 C422     		mov	r2, #196
 909 0688 BA18     		add	r2, r7, r2
 910 068a 1360     		str	r3, [r2]
 911 068c C823     		mov	r3, #200
 912 068e FB18     		add	r3, r7, r3
 913 0690 1868     		ldr	r0, [r3]
 914 0692 5968     		ldr	r1, [r3, #4]
 915 0694 C023     		mov	r3, #192
 916 0696 FB18     		add	r3, r7, r3
 917 0698 1A68     		ldr	r2, [r3]
 918 069a 5B68     		ldr	r3, [r3, #4]
 919 069c FFF7FEFF 		bl	__aeabi_lmul
 920 06a0 031C     		mov	r3, r0
 921 06a2 0C1C     		mov	r4, r1
 922 06a4 191C     		mov	r1, r3
 923 06a6 221C     		mov	r2, r4
 924 06a8 E423     		mov	r3, #228
 925 06aa 5B00     		lsl	r3, r3, #1
 926 06ac FB18     		add	r3, r7, r3
 927 06ae 5C68     		ldr	r4, [r3, #4]
 928 06b0 1B68     		ldr	r3, [r3]
 929 06b2 5B18     		add	r3, r3, r1
 930 06b4 5441     		adc	r4, r4, r2
 931 06b6 E422     		mov	r2, #228
 932 06b8 5200     		lsl	r2, r2, #1
 933 06ba BA18     		add	r2, r7, r2
 934 06bc 1360     		str	r3, [r2]
 935 06be 5460     		str	r4, [r2, #4]
 188:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 189:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 190:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2u;
 936              		.loc 1 190 0
 937 06c0 F223     		mov	r3, #242
 938 06c2 5B00     		lsl	r3, r3, #1
 939 06c4 FB18     		add	r3, r7, r3
 940 06c6 1B68     		ldr	r3, [r3]
 941 06c8 0833     		add	r3, r3, #8
 942 06ca F222     		mov	r2, #242
 943 06cc 5200     		lsl	r2, r2, #1
 944 06ce BA18     		add	r2, r7, r2
 945 06d0 1360     		str	r3, [r2]
 191:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 946              		.loc 1 191 0
 947 06d2 4C23     		mov	r3, #76
 948 06d4 B422     		mov	r2, #180
 949 06d6 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 21


 950 06d8 9446     		mov	ip, r2
 951 06da BC44     		add	ip, ip, r7
 952 06dc 6344     		add	r3, r3, ip
 953 06de 1B88     		ldrh	r3, [r3]
 954 06e0 DB00     		lsl	r3, r3, #3
 955 06e2 1A1C     		mov	r2, r3
 956 06e4 F023     		mov	r3, #240
 957 06e6 5B00     		lsl	r3, r3, #1
 958 06e8 FB18     		add	r3, r7, r3
 959 06ea 1B68     		ldr	r3, [r3]
 960 06ec 9B18     		add	r3, r3, r2
 961 06ee F022     		mov	r2, #240
 962 06f0 5200     		lsl	r2, r2, #1
 963 06f2 BA18     		add	r2, r7, r2
 964 06f4 1360     		str	r3, [r2]
 192:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 193:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 194:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 -= (q63_t) b0 *d0;
 965              		.loc 1 194 0
 966 06f6 D223     		mov	r3, #210
 967 06f8 5B00     		lsl	r3, r3, #1
 968 06fa FB18     		add	r3, r7, r3
 969 06fc 1B68     		ldr	r3, [r3]
 970 06fe B822     		mov	r2, #184
 971 0700 BA18     		add	r2, r7, r2
 972 0702 1360     		str	r3, [r2]
 973 0704 DB17     		asr	r3, r3, #31
 974 0706 BC22     		mov	r2, #188
 975 0708 BA18     		add	r2, r7, r2
 976 070a 1360     		str	r3, [r2]
 977 070c D023     		mov	r3, #208
 978 070e 5B00     		lsl	r3, r3, #1
 979 0710 FB18     		add	r3, r7, r3
 980 0712 1B68     		ldr	r3, [r3]
 981 0714 B022     		mov	r2, #176
 982 0716 BA18     		add	r2, r7, r2
 983 0718 1360     		str	r3, [r2]
 984 071a DB17     		asr	r3, r3, #31
 985 071c B422     		mov	r2, #180
 986 071e BA18     		add	r2, r7, r2
 987 0720 1360     		str	r3, [r2]
 988 0722 B823     		mov	r3, #184
 989 0724 FB18     		add	r3, r7, r3
 990 0726 1868     		ldr	r0, [r3]
 991 0728 5968     		ldr	r1, [r3, #4]
 992 072a B023     		mov	r3, #176
 993 072c FB18     		add	r3, r7, r3
 994 072e 1A68     		ldr	r2, [r3]
 995 0730 5B68     		ldr	r3, [r3, #4]
 996 0732 FFF7FEFF 		bl	__aeabi_lmul
 997 0736 031C     		mov	r3, r0
 998 0738 0C1C     		mov	r4, r1
 999 073a 191C     		mov	r1, r3
 1000 073c 221C     		mov	r2, r4
 1001 073e E823     		mov	r3, #232
 1002 0740 5B00     		lsl	r3, r3, #1
 1003 0742 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 22


 1004 0744 5C68     		ldr	r4, [r3, #4]
 1005 0746 1B68     		ldr	r3, [r3]
 1006 0748 5B1A     		sub	r3, r3, r1
 1007 074a 9441     		sbc	r4, r4, r2
 1008 074c E822     		mov	r2, #232
 1009 074e 5200     		lsl	r2, r2, #1
 1010 0750 BA18     		add	r2, r7, r2
 1011 0752 1360     		str	r3, [r2]
 1012 0754 5460     		str	r4, [r2, #4]
 195:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) a0 *d0;
 1013              		.loc 1 195 0
 1014 0756 D623     		mov	r3, #214
 1015 0758 5B00     		lsl	r3, r3, #1
 1016 075a FB18     		add	r3, r7, r3
 1017 075c 1B68     		ldr	r3, [r3]
 1018 075e A822     		mov	r2, #168
 1019 0760 BA18     		add	r2, r7, r2
 1020 0762 1360     		str	r3, [r2]
 1021 0764 DB17     		asr	r3, r3, #31
 1022 0766 AC22     		mov	r2, #172
 1023 0768 BA18     		add	r2, r7, r2
 1024 076a 1360     		str	r3, [r2]
 1025 076c D023     		mov	r3, #208
 1026 076e 5B00     		lsl	r3, r3, #1
 1027 0770 FB18     		add	r3, r7, r3
 1028 0772 1B68     		ldr	r3, [r3]
 1029 0774 A022     		mov	r2, #160
 1030 0776 BA18     		add	r2, r7, r2
 1031 0778 1360     		str	r3, [r2]
 1032 077a DB17     		asr	r3, r3, #31
 1033 077c A422     		mov	r2, #164
 1034 077e BA18     		add	r2, r7, r2
 1035 0780 1360     		str	r3, [r2]
 1036 0782 A823     		mov	r3, #168
 1037 0784 FB18     		add	r3, r7, r3
 1038 0786 1868     		ldr	r0, [r3]
 1039 0788 5968     		ldr	r1, [r3, #4]
 1040 078a A023     		mov	r3, #160
 1041 078c FB18     		add	r3, r7, r3
 1042 078e 1A68     		ldr	r2, [r3]
 1043 0790 5B68     		ldr	r3, [r3, #4]
 1044 0792 FFF7FEFF 		bl	__aeabi_lmul
 1045 0796 031C     		mov	r3, r0
 1046 0798 0C1C     		mov	r4, r1
 1047 079a 191C     		mov	r1, r3
 1048 079c 221C     		mov	r2, r4
 1049 079e E423     		mov	r3, #228
 1050 07a0 5B00     		lsl	r3, r3, #1
 1051 07a2 FB18     		add	r3, r7, r3
 1052 07a4 5C68     		ldr	r4, [r3, #4]
 1053 07a6 1B68     		ldr	r3, [r3]
 1054 07a8 5B18     		add	r3, r3, r1
 1055 07aa 5441     		adc	r4, r4, r2
 1056 07ac E422     		mov	r2, #228
 1057 07ae 5200     		lsl	r2, r2, #1
 1058 07b0 BA18     		add	r2, r7, r2
 1059 07b2 1360     		str	r3, [r2]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 23


 1060 07b4 5460     		str	r4, [r2, #4]
 196:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 197:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* c(m,n) = a(1,1)*b(1,1) + a(1,2) * b(2,1) + .... + a(m,p)*b(p,n) */
 198:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 199:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a1 = *pIn1;
 1061              		.loc 1 199 0
 1062 07b6 F223     		mov	r3, #242
 1063 07b8 5B00     		lsl	r3, r3, #1
 1064 07ba FB18     		add	r3, r7, r3
 1065 07bc 1B68     		ldr	r3, [r3]
 1066 07be 1B68     		ldr	r3, [r3]
 1067 07c0 CE22     		mov	r2, #206
 1068 07c2 5200     		lsl	r2, r2, #1
 1069 07c4 BA18     		add	r2, r7, r2
 1070 07c6 1360     		str	r3, [r2]
 200:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c1 = *pIn2;
 1071              		.loc 1 200 0
 1072 07c8 F023     		mov	r3, #240
 1073 07ca 5B00     		lsl	r3, r3, #1
 1074 07cc FB18     		add	r3, r7, r3
 1075 07ce 1B68     		ldr	r3, [r3]
 1076 07d0 1B68     		ldr	r3, [r3]
 1077 07d2 CC22     		mov	r2, #204
 1078 07d4 5200     		lsl	r2, r2, #1
 1079 07d6 BA18     		add	r2, r7, r2
 1080 07d8 1360     		str	r3, [r2]
 201:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 202:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b1 = *(pIn1 + 1u);
 1081              		.loc 1 202 0
 1082 07da F223     		mov	r3, #242
 1083 07dc 5B00     		lsl	r3, r3, #1
 1084 07de FB18     		add	r3, r7, r3
 1085 07e0 1B68     		ldr	r3, [r3]
 1086 07e2 5B68     		ldr	r3, [r3, #4]
 1087 07e4 CA22     		mov	r2, #202
 1088 07e6 5200     		lsl	r2, r2, #1
 1089 07e8 BA18     		add	r2, r7, r2
 1090 07ea 1360     		str	r3, [r2]
 203:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d1 = *(pIn2 + 1u);
 1091              		.loc 1 203 0
 1092 07ec F023     		mov	r3, #240
 1093 07ee 5B00     		lsl	r3, r3, #1
 1094 07f0 FB18     		add	r3, r7, r3
 1095 07f2 1B68     		ldr	r3, [r3]
 1096 07f4 5B68     		ldr	r3, [r3, #4]
 1097 07f6 C822     		mov	r2, #200
 1098 07f8 5200     		lsl	r2, r2, #1
 1099 07fa BA18     		add	r2, r7, r2
 1100 07fc 1360     		str	r3, [r2]
 204:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 205:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 206:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 += (q63_t) a1 *c1;
 1101              		.loc 1 206 0
 1102 07fe CE23     		mov	r3, #206
 1103 0800 5B00     		lsl	r3, r3, #1
 1104 0802 FB18     		add	r3, r7, r3
 1105 0804 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 24


 1106 0806 9822     		mov	r2, #152
 1107 0808 BA18     		add	r2, r7, r2
 1108 080a 1360     		str	r3, [r2]
 1109 080c DB17     		asr	r3, r3, #31
 1110 080e 9C22     		mov	r2, #156
 1111 0810 BA18     		add	r2, r7, r2
 1112 0812 1360     		str	r3, [r2]
 1113 0814 CC23     		mov	r3, #204
 1114 0816 5B00     		lsl	r3, r3, #1
 1115 0818 FB18     		add	r3, r7, r3
 1116 081a 1B68     		ldr	r3, [r3]
 1117 081c 9022     		mov	r2, #144
 1118 081e BA18     		add	r2, r7, r2
 1119 0820 1360     		str	r3, [r2]
 1120 0822 DB17     		asr	r3, r3, #31
 1121 0824 9422     		mov	r2, #148
 1122 0826 BA18     		add	r2, r7, r2
 1123 0828 1360     		str	r3, [r2]
 1124 082a 9823     		mov	r3, #152
 1125 082c FB18     		add	r3, r7, r3
 1126 082e 1868     		ldr	r0, [r3]
 1127 0830 5968     		ldr	r1, [r3, #4]
 1128 0832 9023     		mov	r3, #144
 1129 0834 FB18     		add	r3, r7, r3
 1130 0836 1A68     		ldr	r2, [r3]
 1131 0838 5B68     		ldr	r3, [r3, #4]
 1132 083a FFF7FEFF 		bl	__aeabi_lmul
 1133 083e 031C     		mov	r3, r0
 1134 0840 0C1C     		mov	r4, r1
 1135 0842 191C     		mov	r1, r3
 1136 0844 221C     		mov	r2, r4
 1137 0846 E823     		mov	r3, #232
 1138 0848 5B00     		lsl	r3, r3, #1
 1139 084a FB18     		add	r3, r7, r3
 1140 084c 5C68     		ldr	r4, [r3, #4]
 1141 084e 1B68     		ldr	r3, [r3]
 1142 0850 5B18     		add	r3, r3, r1
 1143 0852 5441     		adc	r4, r4, r2
 1144 0854 E822     		mov	r2, #232
 1145 0856 5200     		lsl	r2, r2, #1
 1146 0858 BA18     		add	r2, r7, r2
 1147 085a 1360     		str	r3, [r2]
 1148 085c 5460     		str	r4, [r2, #4]
 207:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) b1 *c1;
 1149              		.loc 1 207 0
 1150 085e CA23     		mov	r3, #202
 1151 0860 5B00     		lsl	r3, r3, #1
 1152 0862 FB18     		add	r3, r7, r3
 1153 0864 1B68     		ldr	r3, [r3]
 1154 0866 8822     		mov	r2, #136
 1155 0868 BA18     		add	r2, r7, r2
 1156 086a 1360     		str	r3, [r2]
 1157 086c DB17     		asr	r3, r3, #31
 1158 086e 8C22     		mov	r2, #140
 1159 0870 BA18     		add	r2, r7, r2
 1160 0872 1360     		str	r3, [r2]
 1161 0874 CC23     		mov	r3, #204
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 25


 1162 0876 5B00     		lsl	r3, r3, #1
 1163 0878 FB18     		add	r3, r7, r3
 1164 087a 1B68     		ldr	r3, [r3]
 1165 087c 8022     		mov	r2, #128
 1166 087e BA18     		add	r2, r7, r2
 1167 0880 1360     		str	r3, [r2]
 1168 0882 DB17     		asr	r3, r3, #31
 1169 0884 8422     		mov	r2, #132
 1170 0886 BA18     		add	r2, r7, r2
 1171 0888 1360     		str	r3, [r2]
 1172 088a 8823     		mov	r3, #136
 1173 088c FB18     		add	r3, r7, r3
 1174 088e 1868     		ldr	r0, [r3]
 1175 0890 5968     		ldr	r1, [r3, #4]
 1176 0892 8023     		mov	r3, #128
 1177 0894 FB18     		add	r3, r7, r3
 1178 0896 1A68     		ldr	r2, [r3]
 1179 0898 5B68     		ldr	r3, [r3, #4]
 1180 089a FFF7FEFF 		bl	__aeabi_lmul
 1181 089e 031C     		mov	r3, r0
 1182 08a0 0C1C     		mov	r4, r1
 1183 08a2 191C     		mov	r1, r3
 1184 08a4 221C     		mov	r2, r4
 1185 08a6 E423     		mov	r3, #228
 1186 08a8 5B00     		lsl	r3, r3, #1
 1187 08aa FB18     		add	r3, r7, r3
 1188 08ac 5C68     		ldr	r4, [r3, #4]
 1189 08ae 1B68     		ldr	r3, [r3]
 1190 08b0 5B18     		add	r3, r3, r1
 1191 08b2 5441     		adc	r4, r4, r2
 1192 08b4 E422     		mov	r2, #228
 1193 08b6 5200     		lsl	r2, r2, #1
 1194 08b8 BA18     		add	r2, r7, r2
 1195 08ba 1360     		str	r3, [r2]
 1196 08bc 5460     		str	r4, [r2, #4]
 208:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 209:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 210:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2u;
 1197              		.loc 1 210 0
 1198 08be F223     		mov	r3, #242
 1199 08c0 5B00     		lsl	r3, r3, #1
 1200 08c2 FB18     		add	r3, r7, r3
 1201 08c4 1B68     		ldr	r3, [r3]
 1202 08c6 0833     		add	r3, r3, #8
 1203 08c8 F222     		mov	r2, #242
 1204 08ca 5200     		lsl	r2, r2, #1
 1205 08cc BA18     		add	r2, r7, r2
 1206 08ce 1360     		str	r3, [r2]
 211:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 1207              		.loc 1 211 0
 1208 08d0 4C23     		mov	r3, #76
 1209 08d2 B422     		mov	r2, #180
 1210 08d4 5200     		lsl	r2, r2, #1
 1211 08d6 9446     		mov	ip, r2
 1212 08d8 BC44     		add	ip, ip, r7
 1213 08da 6344     		add	r3, r3, ip
 1214 08dc 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 26


 1215 08de DB00     		lsl	r3, r3, #3
 1216 08e0 1A1C     		mov	r2, r3
 1217 08e2 F023     		mov	r3, #240
 1218 08e4 5B00     		lsl	r3, r3, #1
 1219 08e6 FB18     		add	r3, r7, r3
 1220 08e8 1B68     		ldr	r3, [r3]
 1221 08ea 9B18     		add	r3, r3, r2
 1222 08ec F022     		mov	r2, #240
 1223 08ee 5200     		lsl	r2, r2, #1
 1224 08f0 BA18     		add	r2, r7, r2
 1225 08f2 1360     		str	r3, [r2]
 212:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 213:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 214:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 -= (q63_t) b1 *d1;
 1226              		.loc 1 214 0
 1227 08f4 CA23     		mov	r3, #202
 1228 08f6 5B00     		lsl	r3, r3, #1
 1229 08f8 FB18     		add	r3, r7, r3
 1230 08fa 1B68     		ldr	r3, [r3]
 1231 08fc BB67     		str	r3, [r7, #120]
 1232 08fe DB17     		asr	r3, r3, #31
 1233 0900 FB67     		str	r3, [r7, #124]
 1234 0902 C823     		mov	r3, #200
 1235 0904 5B00     		lsl	r3, r3, #1
 1236 0906 FB18     		add	r3, r7, r3
 1237 0908 1B68     		ldr	r3, [r3]
 1238 090a 3B67     		str	r3, [r7, #112]
 1239 090c DB17     		asr	r3, r3, #31
 1240 090e 7B67     		str	r3, [r7, #116]
 1241 0910 B86F     		ldr	r0, [r7, #120]
 1242 0912 F96F     		ldr	r1, [r7, #124]
 1243 0914 3A6F     		ldr	r2, [r7, #112]
 1244 0916 7B6F     		ldr	r3, [r7, #116]
 1245 0918 FFF7FEFF 		bl	__aeabi_lmul
 1246 091c 031C     		mov	r3, r0
 1247 091e 0C1C     		mov	r4, r1
 1248 0920 191C     		mov	r1, r3
 1249 0922 221C     		mov	r2, r4
 1250 0924 E823     		mov	r3, #232
 1251 0926 5B00     		lsl	r3, r3, #1
 1252 0928 FB18     		add	r3, r7, r3
 1253 092a 5C68     		ldr	r4, [r3, #4]
 1254 092c 1B68     		ldr	r3, [r3]
 1255 092e 5B1A     		sub	r3, r3, r1
 1256 0930 9441     		sbc	r4, r4, r2
 1257 0932 E822     		mov	r2, #232
 1258 0934 5200     		lsl	r2, r2, #1
 1259 0936 BA18     		add	r2, r7, r2
 1260 0938 1360     		str	r3, [r2]
 1261 093a 5460     		str	r4, [r2, #4]
 215:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) a1 *d1;
 1262              		.loc 1 215 0
 1263 093c CE23     		mov	r3, #206
 1264 093e 5B00     		lsl	r3, r3, #1
 1265 0940 FB18     		add	r3, r7, r3
 1266 0942 1B68     		ldr	r3, [r3]
 1267 0944 BB66     		str	r3, [r7, #104]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 27


 1268 0946 DB17     		asr	r3, r3, #31
 1269 0948 FB66     		str	r3, [r7, #108]
 1270 094a C823     		mov	r3, #200
 1271 094c 5B00     		lsl	r3, r3, #1
 1272 094e FB18     		add	r3, r7, r3
 1273 0950 1B68     		ldr	r3, [r3]
 1274 0952 3B66     		str	r3, [r7, #96]
 1275 0954 DB17     		asr	r3, r3, #31
 1276 0956 7B66     		str	r3, [r7, #100]
 1277 0958 B86E     		ldr	r0, [r7, #104]
 1278 095a F96E     		ldr	r1, [r7, #108]
 1279 095c 3A6E     		ldr	r2, [r7, #96]
 1280 095e 7B6E     		ldr	r3, [r7, #100]
 1281 0960 FFF7FEFF 		bl	__aeabi_lmul
 1282 0964 031C     		mov	r3, r0
 1283 0966 0C1C     		mov	r4, r1
 1284 0968 191C     		mov	r1, r3
 1285 096a 221C     		mov	r2, r4
 1286 096c E423     		mov	r3, #228
 1287 096e 5B00     		lsl	r3, r3, #1
 1288 0970 FB18     		add	r3, r7, r3
 1289 0972 5C68     		ldr	r4, [r3, #4]
 1290 0974 1B68     		ldr	r3, [r3]
 1291 0976 5B18     		add	r3, r3, r1
 1292 0978 5441     		adc	r4, r4, r2
 1293 097a E422     		mov	r2, #228
 1294 097c 5200     		lsl	r2, r2, #1
 1295 097e BA18     		add	r2, r7, r2
 1296 0980 1360     		str	r3, [r2]
 1297 0982 5460     		str	r4, [r2, #4]
 216:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 217:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Decrement the loop count */
 218:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           colCnt--;
 1298              		.loc 1 218 0
 1299 0984 5623     		mov	r3, #86
 1300 0986 B422     		mov	r2, #180
 1301 0988 5200     		lsl	r2, r2, #1
 1302 098a 9446     		mov	ip, r2
 1303 098c BC44     		add	ip, ip, r7
 1304 098e 6344     		add	r3, r3, ip
 1305 0990 1B88     		ldrh	r3, [r3]
 1306 0992 5622     		mov	r2, #86
 1307 0994 B421     		mov	r1, #180
 1308 0996 4900     		lsl	r1, r1, #1
 1309 0998 8C46     		mov	ip, r1
 1310 099a BC44     		add	ip, ip, r7
 1311 099c 6244     		add	r2, r2, ip
 1312 099e 013B     		sub	r3, r3, #1
 1313 09a0 1380     		strh	r3, [r2]
 1314              	.L2:
 132:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 1315              		.loc 1 132 0
 1316 09a2 5623     		mov	r3, #86
 1317 09a4 B422     		mov	r2, #180
 1318 09a6 5200     		lsl	r2, r2, #1
 1319 09a8 9446     		mov	ip, r2
 1320 09aa BC44     		add	ip, ip, r7
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 28


 1321 09ac 6344     		add	r3, r3, ip
 1322 09ae 1B88     		ldrh	r3, [r3]
 1323 09b0 002B     		cmp	r3, #0
 1324 09b2 01D0     		beq	.LCB1163
 1325 09b4 FFF7E1FB 		bl	.L3	@far jump
 1326              	.LCB1163:
 219:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         }
 220:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 221:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* If the columns of pSrcA is not a multiple of 4, compute any remaining MACs here.
 222:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****          ** No loop unrolling is used. */
 223:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         colCnt = numColsA % 0x4u;
 1327              		.loc 1 223 0
 1328 09b8 5623     		mov	r3, #86
 1329 09ba B422     		mov	r2, #180
 1330 09bc 5200     		lsl	r2, r2, #1
 1331 09be BA18     		add	r2, r7, r2
 1332 09c0 D118     		add	r1, r2, r3
 1333 09c2 4A23     		mov	r3, #74
 1334 09c4 B422     		mov	r2, #180
 1335 09c6 5200     		lsl	r2, r2, #1
 1336 09c8 9446     		mov	ip, r2
 1337 09ca BC44     		add	ip, ip, r7
 1338 09cc 6344     		add	r3, r3, ip
 1339 09ce 1A88     		ldrh	r2, [r3]
 1340 09d0 0323     		mov	r3, #3
 1341 09d2 1340     		and	r3, r2
 1342 09d4 0B80     		strh	r3, [r1]
 224:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 225:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         while (colCnt > 0u)
 1343              		.loc 1 225 0
 1344 09d6 DDE0     		b	.L4
 1345              	.L5:
 226:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 227:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* c(m,n) = a(1,1)*b(1,1) + a(1,2) * b(2,1) + .... + a(m,p)*b(p,n) */
 228:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a1 = *pIn1;
 1346              		.loc 1 228 0
 1347 09d8 F223     		mov	r3, #242
 1348 09da 5B00     		lsl	r3, r3, #1
 1349 09dc FB18     		add	r3, r7, r3
 1350 09de 1B68     		ldr	r3, [r3]
 1351 09e0 1B68     		ldr	r3, [r3]
 1352 09e2 CE22     		mov	r2, #206
 1353 09e4 5200     		lsl	r2, r2, #1
 1354 09e6 BA18     		add	r2, r7, r2
 1355 09e8 1360     		str	r3, [r2]
 229:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c1 = *pIn2;
 1356              		.loc 1 229 0
 1357 09ea F023     		mov	r3, #240
 1358 09ec 5B00     		lsl	r3, r3, #1
 1359 09ee FB18     		add	r3, r7, r3
 1360 09f0 1B68     		ldr	r3, [r3]
 1361 09f2 1B68     		ldr	r3, [r3]
 1362 09f4 CC22     		mov	r2, #204
 1363 09f6 5200     		lsl	r2, r2, #1
 1364 09f8 BA18     		add	r2, r7, r2
 1365 09fa 1360     		str	r3, [r2]
 230:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 29


 231:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b1 = *(pIn1 + 1u);
 1366              		.loc 1 231 0
 1367 09fc F223     		mov	r3, #242
 1368 09fe 5B00     		lsl	r3, r3, #1
 1369 0a00 FB18     		add	r3, r7, r3
 1370 0a02 1B68     		ldr	r3, [r3]
 1371 0a04 5B68     		ldr	r3, [r3, #4]
 1372 0a06 CA22     		mov	r2, #202
 1373 0a08 5200     		lsl	r2, r2, #1
 1374 0a0a BA18     		add	r2, r7, r2
 1375 0a0c 1360     		str	r3, [r2]
 232:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d1 = *(pIn2 + 1u);
 1376              		.loc 1 232 0
 1377 0a0e F023     		mov	r3, #240
 1378 0a10 5B00     		lsl	r3, r3, #1
 1379 0a12 FB18     		add	r3, r7, r3
 1380 0a14 1B68     		ldr	r3, [r3]
 1381 0a16 5B68     		ldr	r3, [r3, #4]
 1382 0a18 C822     		mov	r2, #200
 1383 0a1a 5200     		lsl	r2, r2, #1
 1384 0a1c BA18     		add	r2, r7, r2
 1385 0a1e 1360     		str	r3, [r2]
 233:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 234:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 235:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 += (q63_t) a1 *c1;
 1386              		.loc 1 235 0
 1387 0a20 CE23     		mov	r3, #206
 1388 0a22 5B00     		lsl	r3, r3, #1
 1389 0a24 FB18     		add	r3, r7, r3
 1390 0a26 1B68     		ldr	r3, [r3]
 1391 0a28 BB65     		str	r3, [r7, #88]
 1392 0a2a DB17     		asr	r3, r3, #31
 1393 0a2c FB65     		str	r3, [r7, #92]
 1394 0a2e CC23     		mov	r3, #204
 1395 0a30 5B00     		lsl	r3, r3, #1
 1396 0a32 FB18     		add	r3, r7, r3
 1397 0a34 1B68     		ldr	r3, [r3]
 1398 0a36 3B65     		str	r3, [r7, #80]
 1399 0a38 DB17     		asr	r3, r3, #31
 1400 0a3a 7B65     		str	r3, [r7, #84]
 1401 0a3c B86D     		ldr	r0, [r7, #88]
 1402 0a3e F96D     		ldr	r1, [r7, #92]
 1403 0a40 3A6D     		ldr	r2, [r7, #80]
 1404 0a42 7B6D     		ldr	r3, [r7, #84]
 1405 0a44 FFF7FEFF 		bl	__aeabi_lmul
 1406 0a48 031C     		mov	r3, r0
 1407 0a4a 0C1C     		mov	r4, r1
 1408 0a4c 191C     		mov	r1, r3
 1409 0a4e 221C     		mov	r2, r4
 1410 0a50 E823     		mov	r3, #232
 1411 0a52 5B00     		lsl	r3, r3, #1
 1412 0a54 FB18     		add	r3, r7, r3
 1413 0a56 5C68     		ldr	r4, [r3, #4]
 1414 0a58 1B68     		ldr	r3, [r3]
 1415 0a5a 5B18     		add	r3, r3, r1
 1416 0a5c 5441     		adc	r4, r4, r2
 1417 0a5e E822     		mov	r2, #232
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 30


 1418 0a60 5200     		lsl	r2, r2, #1
 1419 0a62 BA18     		add	r2, r7, r2
 1420 0a64 1360     		str	r3, [r2]
 1421 0a66 5460     		str	r4, [r2, #4]
 236:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) b1 *c1;
 1422              		.loc 1 236 0
 1423 0a68 CA23     		mov	r3, #202
 1424 0a6a 5B00     		lsl	r3, r3, #1
 1425 0a6c FB18     		add	r3, r7, r3
 1426 0a6e 1B68     		ldr	r3, [r3]
 1427 0a70 BB64     		str	r3, [r7, #72]
 1428 0a72 DB17     		asr	r3, r3, #31
 1429 0a74 FB64     		str	r3, [r7, #76]
 1430 0a76 CC23     		mov	r3, #204
 1431 0a78 5B00     		lsl	r3, r3, #1
 1432 0a7a FB18     		add	r3, r7, r3
 1433 0a7c 1B68     		ldr	r3, [r3]
 1434 0a7e 3B64     		str	r3, [r7, #64]
 1435 0a80 DB17     		asr	r3, r3, #31
 1436 0a82 7B64     		str	r3, [r7, #68]
 1437 0a84 B86C     		ldr	r0, [r7, #72]
 1438 0a86 F96C     		ldr	r1, [r7, #76]
 1439 0a88 3A6C     		ldr	r2, [r7, #64]
 1440 0a8a 7B6C     		ldr	r3, [r7, #68]
 1441 0a8c FFF7FEFF 		bl	__aeabi_lmul
 1442 0a90 031C     		mov	r3, r0
 1443 0a92 0C1C     		mov	r4, r1
 1444 0a94 191C     		mov	r1, r3
 1445 0a96 221C     		mov	r2, r4
 1446 0a98 E423     		mov	r3, #228
 1447 0a9a 5B00     		lsl	r3, r3, #1
 1448 0a9c FB18     		add	r3, r7, r3
 1449 0a9e 5C68     		ldr	r4, [r3, #4]
 1450 0aa0 1B68     		ldr	r3, [r3]
 1451 0aa2 5B18     		add	r3, r3, r1
 1452 0aa4 5441     		adc	r4, r4, r2
 1453 0aa6 E422     		mov	r2, #228
 1454 0aa8 5200     		lsl	r2, r2, #1
 1455 0aaa BA18     		add	r2, r7, r2
 1456 0aac 1360     		str	r3, [r2]
 1457 0aae 5460     		str	r4, [r2, #4]
 237:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 238:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 239:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2u;
 1458              		.loc 1 239 0
 1459 0ab0 F223     		mov	r3, #242
 1460 0ab2 5B00     		lsl	r3, r3, #1
 1461 0ab4 FB18     		add	r3, r7, r3
 1462 0ab6 1B68     		ldr	r3, [r3]
 1463 0ab8 0833     		add	r3, r3, #8
 1464 0aba F222     		mov	r2, #242
 1465 0abc 5200     		lsl	r2, r2, #1
 1466 0abe BA18     		add	r2, r7, r2
 1467 0ac0 1360     		str	r3, [r2]
 240:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 1468              		.loc 1 240 0
 1469 0ac2 4C23     		mov	r3, #76
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 31


 1470 0ac4 B422     		mov	r2, #180
 1471 0ac6 5200     		lsl	r2, r2, #1
 1472 0ac8 9446     		mov	ip, r2
 1473 0aca BC44     		add	ip, ip, r7
 1474 0acc 6344     		add	r3, r3, ip
 1475 0ace 1B88     		ldrh	r3, [r3]
 1476 0ad0 DB00     		lsl	r3, r3, #3
 1477 0ad2 1A1C     		mov	r2, r3
 1478 0ad4 F023     		mov	r3, #240
 1479 0ad6 5B00     		lsl	r3, r3, #1
 1480 0ad8 FB18     		add	r3, r7, r3
 1481 0ada 1B68     		ldr	r3, [r3]
 1482 0adc 9B18     		add	r3, r3, r2
 1483 0ade F022     		mov	r2, #240
 1484 0ae0 5200     		lsl	r2, r2, #1
 1485 0ae2 BA18     		add	r2, r7, r2
 1486 0ae4 1360     		str	r3, [r2]
 241:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 242:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 243:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 -= (q63_t) b1 *d1;
 1487              		.loc 1 243 0
 1488 0ae6 CA23     		mov	r3, #202
 1489 0ae8 5B00     		lsl	r3, r3, #1
 1490 0aea FB18     		add	r3, r7, r3
 1491 0aec 1B68     		ldr	r3, [r3]
 1492 0aee BB63     		str	r3, [r7, #56]
 1493 0af0 DB17     		asr	r3, r3, #31
 1494 0af2 FB63     		str	r3, [r7, #60]
 1495 0af4 C823     		mov	r3, #200
 1496 0af6 5B00     		lsl	r3, r3, #1
 1497 0af8 FB18     		add	r3, r7, r3
 1498 0afa 1B68     		ldr	r3, [r3]
 1499 0afc 3B63     		str	r3, [r7, #48]
 1500 0afe DB17     		asr	r3, r3, #31
 1501 0b00 7B63     		str	r3, [r7, #52]
 1502 0b02 B86B     		ldr	r0, [r7, #56]
 1503 0b04 F96B     		ldr	r1, [r7, #60]
 1504 0b06 3A6B     		ldr	r2, [r7, #48]
 1505 0b08 7B6B     		ldr	r3, [r7, #52]
 1506 0b0a FFF7FEFF 		bl	__aeabi_lmul
 1507 0b0e 031C     		mov	r3, r0
 1508 0b10 0C1C     		mov	r4, r1
 1509 0b12 191C     		mov	r1, r3
 1510 0b14 221C     		mov	r2, r4
 1511 0b16 E823     		mov	r3, #232
 1512 0b18 5B00     		lsl	r3, r3, #1
 1513 0b1a FB18     		add	r3, r7, r3
 1514 0b1c 5C68     		ldr	r4, [r3, #4]
 1515 0b1e 1B68     		ldr	r3, [r3]
 1516 0b20 5B1A     		sub	r3, r3, r1
 1517 0b22 9441     		sbc	r4, r4, r2
 1518 0b24 E822     		mov	r2, #232
 1519 0b26 5200     		lsl	r2, r2, #1
 1520 0b28 BA18     		add	r2, r7, r2
 1521 0b2a 1360     		str	r3, [r2]
 1522 0b2c 5460     		str	r4, [r2, #4]
 244:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) a1 *d1;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 32


 1523              		.loc 1 244 0
 1524 0b2e CE23     		mov	r3, #206
 1525 0b30 5B00     		lsl	r3, r3, #1
 1526 0b32 FB18     		add	r3, r7, r3
 1527 0b34 1B68     		ldr	r3, [r3]
 1528 0b36 BB62     		str	r3, [r7, #40]
 1529 0b38 DB17     		asr	r3, r3, #31
 1530 0b3a FB62     		str	r3, [r7, #44]
 1531 0b3c C823     		mov	r3, #200
 1532 0b3e 5B00     		lsl	r3, r3, #1
 1533 0b40 FB18     		add	r3, r7, r3
 1534 0b42 1B68     		ldr	r3, [r3]
 1535 0b44 3B62     		str	r3, [r7, #32]
 1536 0b46 DB17     		asr	r3, r3, #31
 1537 0b48 7B62     		str	r3, [r7, #36]
 1538 0b4a B86A     		ldr	r0, [r7, #40]
 1539 0b4c F96A     		ldr	r1, [r7, #44]
 1540 0b4e 3A6A     		ldr	r2, [r7, #32]
 1541 0b50 7B6A     		ldr	r3, [r7, #36]
 1542 0b52 FFF7FEFF 		bl	__aeabi_lmul
 1543 0b56 031C     		mov	r3, r0
 1544 0b58 0C1C     		mov	r4, r1
 1545 0b5a 191C     		mov	r1, r3
 1546 0b5c 221C     		mov	r2, r4
 1547 0b5e E423     		mov	r3, #228
 1548 0b60 5B00     		lsl	r3, r3, #1
 1549 0b62 FB18     		add	r3, r7, r3
 1550 0b64 5C68     		ldr	r4, [r3, #4]
 1551 0b66 1B68     		ldr	r3, [r3]
 1552 0b68 5B18     		add	r3, r3, r1
 1553 0b6a 5441     		adc	r4, r4, r2
 1554 0b6c E422     		mov	r2, #228
 1555 0b6e 5200     		lsl	r2, r2, #1
 1556 0b70 BA18     		add	r2, r7, r2
 1557 0b72 1360     		str	r3, [r2]
 1558 0b74 5460     		str	r4, [r2, #4]
 245:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 246:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Decrement the loop counter */
 247:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           colCnt--;
 1559              		.loc 1 247 0
 1560 0b76 5623     		mov	r3, #86
 1561 0b78 B422     		mov	r2, #180
 1562 0b7a 5200     		lsl	r2, r2, #1
 1563 0b7c 9446     		mov	ip, r2
 1564 0b7e BC44     		add	ip, ip, r7
 1565 0b80 6344     		add	r3, r3, ip
 1566 0b82 1B88     		ldrh	r3, [r3]
 1567 0b84 5622     		mov	r2, #86
 1568 0b86 B421     		mov	r1, #180
 1569 0b88 4900     		lsl	r1, r1, #1
 1570 0b8a 8C46     		mov	ip, r1
 1571 0b8c BC44     		add	ip, ip, r7
 1572 0b8e 6244     		add	r2, r2, ip
 1573 0b90 013B     		sub	r3, r3, #1
 1574 0b92 1380     		strh	r3, [r2]
 1575              	.L4:
 225:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 33


 1576              		.loc 1 225 0
 1577 0b94 5623     		mov	r3, #86
 1578 0b96 B422     		mov	r2, #180
 1579 0b98 5200     		lsl	r2, r2, #1
 1580 0b9a 9446     		mov	ip, r2
 1581 0b9c BC44     		add	ip, ip, r7
 1582 0b9e 6344     		add	r3, r3, ip
 1583 0ba0 1B88     		ldrh	r3, [r3]
 1584 0ba2 002B     		cmp	r3, #0
 1585 0ba4 00D0     		beq	.LCB1391
 1586 0ba6 17E7     		b	.L5	@long jump
 1587              	.LCB1391:
 248:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         }
 249:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 250:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Store the result in the destination buffer */
 251:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         *px++ = (q31_t) clip_q63_to_q31(sumReal1 >> 31);
 1588              		.loc 1 251 0
 1589 0ba8 EC23     		mov	r3, #236
 1590 0baa 5B00     		lsl	r3, r3, #1
 1591 0bac FB18     		add	r3, r7, r3
 1592 0bae 1968     		ldr	r1, [r3]
 1593 0bb0 0B1D     		add	r3, r1, #4
 1594 0bb2 EC22     		mov	r2, #236
 1595 0bb4 5200     		lsl	r2, r2, #1
 1596 0bb6 BA18     		add	r2, r7, r2
 1597 0bb8 1360     		str	r3, [r2]
 1598 0bba EA23     		mov	r3, #234
 1599 0bbc 5B00     		lsl	r3, r3, #1
 1600 0bbe FB18     		add	r3, r7, r3
 1601 0bc0 1B68     		ldr	r3, [r3]
 1602 0bc2 5A00     		lsl	r2, r3, #1
 1603 0bc4 E823     		mov	r3, #232
 1604 0bc6 5B00     		lsl	r3, r3, #1
 1605 0bc8 FB18     		add	r3, r7, r3
 1606 0bca 1B68     		ldr	r3, [r3]
 1607 0bcc DD0F     		lsr	r5, r3, #31
 1608 0bce 1543     		orr	r5, r2
 1609 0bd0 EA23     		mov	r3, #234
 1610 0bd2 5B00     		lsl	r3, r3, #1
 1611 0bd4 FB18     		add	r3, r7, r3
 1612 0bd6 1B68     		ldr	r3, [r3]
 1613 0bd8 DE17     		asr	r6, r3, #31
 1614 0bda C023     		mov	r3, #192
 1615 0bdc 5B00     		lsl	r3, r3, #1
 1616 0bde FB18     		add	r3, r7, r3
 1617 0be0 1D60     		str	r5, [r3]
 1618 0be2 5E60     		str	r6, [r3, #4]
 1619              	.LBB6:
 1620              	.LBB7:
 1621              		.file 2 ".\\Include/arm_math.h"
   1:.\Include/arm_math.h **** /* ----------------------------------------------------------------------
   2:.\Include/arm_math.h ****  * Project:      CMSIS DSP Library
   3:.\Include/arm_math.h ****  * Title:        arm_math.h
   4:.\Include/arm_math.h ****  * Description:  Public header file for CMSIS DSP Library
   5:.\Include/arm_math.h ****  *
   6:.\Include/arm_math.h ****  * $Date:        27. January 2017
   7:.\Include/arm_math.h ****  * $Revision:    V.1.5.1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 34


   8:.\Include/arm_math.h ****  *
   9:.\Include/arm_math.h ****  * Target Processor: Cortex-M cores
  10:.\Include/arm_math.h ****  * -------------------------------------------------------------------- */
  11:.\Include/arm_math.h **** /*
  12:.\Include/arm_math.h ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:.\Include/arm_math.h ****  *
  14:.\Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  15:.\Include/arm_math.h ****  *
  16:.\Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.\Include/arm_math.h ****  * not use this file except in compliance with the License.
  18:.\Include/arm_math.h ****  * You may obtain a copy of the License at
  19:.\Include/arm_math.h ****  *
  20:.\Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  21:.\Include/arm_math.h ****  *
  22:.\Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  23:.\Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.\Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.\Include/arm_math.h ****  * See the License for the specific language governing permissions and
  26:.\Include/arm_math.h ****  * limitations under the License.
  27:.\Include/arm_math.h ****  */
  28:.\Include/arm_math.h **** 
  29:.\Include/arm_math.h **** /**
  30:.\Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  31:.\Include/arm_math.h ****    *
  32:.\Include/arm_math.h ****    * Introduction
  33:.\Include/arm_math.h ****    * ------------
  34:.\Include/arm_math.h ****    *
  35:.\Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  36:.\Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  37:.\Include/arm_math.h ****    *
  38:.\Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  39:.\Include/arm_math.h ****    * - Basic math functions
  40:.\Include/arm_math.h ****    * - Fast math functions
  41:.\Include/arm_math.h ****    * - Complex math functions
  42:.\Include/arm_math.h ****    * - Filters
  43:.\Include/arm_math.h ****    * - Matrix functions
  44:.\Include/arm_math.h ****    * - Transforms
  45:.\Include/arm_math.h ****    * - Motor control functions
  46:.\Include/arm_math.h ****    * - Statistical functions
  47:.\Include/arm_math.h ****    * - Support functions
  48:.\Include/arm_math.h ****    * - Interpolation functions
  49:.\Include/arm_math.h ****    *
  50:.\Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  51:.\Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  52:.\Include/arm_math.h ****    *
  53:.\Include/arm_math.h ****    * Using the Library
  54:.\Include/arm_math.h ****    * ------------
  55:.\Include/arm_math.h ****    *
  56:.\Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  57:.\Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  58:.\Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  59:.\Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  60:.\Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  61:.\Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  62:.\Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  63:.\Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  64:.\Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 35


  65:.\Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  66:.\Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  67:.\Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  68:.\Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  69:.\Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  70:.\Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  71:.\Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (ARMv8M Baseline, Little endian)
  72:.\Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (ARMv8M Mainline, Little endian)
  73:.\Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (ARMv8M Mainline, Little endian, Single Precision Floating Point U
  74:.\Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (ARMv8M Mainline, Little endian, DSP instructions)
  75:.\Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (ARMv8M Mainline, Little endian, DSP instructions, Single Precisi
  76:.\Include/arm_math.h ****    *
  77:.\Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  78:.\Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  79:.\Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  80:.\Include/arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  81:.\Include/arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  82:.\Include/arm_math.h ****    * For ARMv8M cores define pre processor MACRO ARM_MATH_ARMV8MBL or ARM_MATH_ARMV8MML.
  83:.\Include/arm_math.h ****    * Set Pre processor MACRO __DSP_PRESENT if ARMv8M Mainline core supports DSP instructions.
  84:.\Include/arm_math.h ****    * 
  85:.\Include/arm_math.h ****    *
  86:.\Include/arm_math.h ****    * Examples
  87:.\Include/arm_math.h ****    * --------
  88:.\Include/arm_math.h ****    *
  89:.\Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  90:.\Include/arm_math.h ****    *
  91:.\Include/arm_math.h ****    * Toolchain Support
  92:.\Include/arm_math.h ****    * ------------
  93:.\Include/arm_math.h ****    *
  94:.\Include/arm_math.h ****    * The library has been developed and tested with MDK-ARM version 5.14.0.0
  95:.\Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  96:.\Include/arm_math.h ****    *
  97:.\Include/arm_math.h ****    * Building the Library
  98:.\Include/arm_math.h ****    * ------------
  99:.\Include/arm_math.h ****    *
 100:.\Include/arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 101:.\Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
 102:.\Include/arm_math.h ****    *
 103:.\Include/arm_math.h ****    *
 104:.\Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 105:.\Include/arm_math.h ****    *
 106:.\Include/arm_math.h ****    * Pre-processor Macros
 107:.\Include/arm_math.h ****    * ------------
 108:.\Include/arm_math.h ****    *
 109:.\Include/arm_math.h ****    * Each library project have differant pre-processor macros.
 110:.\Include/arm_math.h ****    *
 111:.\Include/arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 112:.\Include/arm_math.h ****    *
 113:.\Include/arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 114:.\Include/arm_math.h ****    *
 115:.\Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 116:.\Include/arm_math.h ****    *
 117:.\Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 118:.\Include/arm_math.h ****    *
 119:.\Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 120:.\Include/arm_math.h ****    *
 121:.\Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 36


 122:.\Include/arm_math.h ****    *
 123:.\Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 124:.\Include/arm_math.h ****    *
 125:.\Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 126:.\Include/arm_math.h ****    *
 127:.\Include/arm_math.h ****    * - ARM_MATH_CMx:
 128:.\Include/arm_math.h ****    *
 129:.\Include/arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 130:.\Include/arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 131:.\Include/arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 132:.\Include/arm_math.h ****    *
 133:.\Include/arm_math.h ****    * - ARM_MATH_ARMV8MxL:
 134:.\Include/arm_math.h ****    *
 135:.\Include/arm_math.h ****    * Define macro ARM_MATH_ARMV8MBL for building the library on ARMv8M Baseline target, ARM_MATH_AR
 136:.\Include/arm_math.h ****    * on ARMv8M Mainline target.
 137:.\Include/arm_math.h ****    *
 138:.\Include/arm_math.h ****    * - __FPU_PRESENT:
 139:.\Include/arm_math.h ****    *
 140:.\Include/arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 141:.\Include/arm_math.h ****    *
 142:.\Include/arm_math.h ****    * - __DSP_PRESENT:
 143:.\Include/arm_math.h ****    *
 144:.\Include/arm_math.h ****    * Initialize macro __DSP_PRESENT = 1 when ARMv8M Mainline core supports DSP instructions.
 145:.\Include/arm_math.h ****    *
 146:.\Include/arm_math.h ****    * <hr>
 147:.\Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 148:.\Include/arm_math.h ****    * -----------------------------
 149:.\Include/arm_math.h ****    *
 150:.\Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 151:.\Include/arm_math.h ****    * |File/Folder                   |Content                                                       
 152:.\Include/arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 153:.\Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 154:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 155:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 156:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 157:.\Include/arm_math.h ****    *
 158:.\Include/arm_math.h ****    * <hr>
 159:.\Include/arm_math.h ****    * Revision History of CMSIS-DSP
 160:.\Include/arm_math.h ****    * ------------
 161:.\Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 162:.\Include/arm_math.h ****    *
 163:.\Include/arm_math.h ****    * Copyright Notice
 164:.\Include/arm_math.h ****    * ------------
 165:.\Include/arm_math.h ****    *
 166:.\Include/arm_math.h ****    * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
 167:.\Include/arm_math.h ****    */
 168:.\Include/arm_math.h **** 
 169:.\Include/arm_math.h **** 
 170:.\Include/arm_math.h **** /**
 171:.\Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 172:.\Include/arm_math.h ****  */
 173:.\Include/arm_math.h **** 
 174:.\Include/arm_math.h **** /**
 175:.\Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 176:.\Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 177:.\Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 178:.\Include/arm_math.h ****  * operate on individual values and not arrays.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 37


 179:.\Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 180:.\Include/arm_math.h ****  *
 181:.\Include/arm_math.h ****  */
 182:.\Include/arm_math.h **** 
 183:.\Include/arm_math.h **** /**
 184:.\Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 185:.\Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 186:.\Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 187:.\Include/arm_math.h ****  * (real, imag, real, imag, ...).
 188:.\Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 189:.\Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 190:.\Include/arm_math.h ****  * real values.
 191:.\Include/arm_math.h ****  */
 192:.\Include/arm_math.h **** 
 193:.\Include/arm_math.h **** /**
 194:.\Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 195:.\Include/arm_math.h ****  */
 196:.\Include/arm_math.h **** 
 197:.\Include/arm_math.h **** /**
 198:.\Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 199:.\Include/arm_math.h ****  *
 200:.\Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 201:.\Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 202:.\Include/arm_math.h ****  * the type
 203:.\Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 204:.\Include/arm_math.h ****  * below:
 205:.\Include/arm_math.h ****  * <pre>
 206:.\Include/arm_math.h ****  *     typedef struct
 207:.\Include/arm_math.h ****  *     {
 208:.\Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 209:.\Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 210:.\Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 211:.\Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 212:.\Include/arm_math.h ****  * </pre>
 213:.\Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 214:.\Include/arm_math.h ****  *
 215:.\Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 216:.\Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 217:.\Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 218:.\Include/arm_math.h ****  * matrix element (i, j) is stored at:
 219:.\Include/arm_math.h ****  * <pre>
 220:.\Include/arm_math.h ****  *     pData[i*numCols + j]
 221:.\Include/arm_math.h ****  * </pre>
 222:.\Include/arm_math.h ****  *
 223:.\Include/arm_math.h ****  * \par Init Functions
 224:.\Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 225:.\Include/arm_math.h ****  * data structure.
 226:.\Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 227:.\Include/arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 228:.\Include/arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 229:.\Include/arm_math.h ****  *
 230:.\Include/arm_math.h ****  * \par
 231:.\Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 232:.\Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 233:.\Include/arm_math.h ****  * To place the instance structure in a const data
 234:.\Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 235:.\Include/arm_math.h ****  * <pre>
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 38


 236:.\Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 237:.\Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 238:.\Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 239:.\Include/arm_math.h ****  * </pre>
 240:.\Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 241:.\Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 242:.\Include/arm_math.h ****  * data array.
 243:.\Include/arm_math.h ****  *
 244:.\Include/arm_math.h ****  * \par Size Checking
 245:.\Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 246:.\Include/arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 247:.\Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 248:.\Include/arm_math.h ****  * columns.  If the size check fails the functions return:
 249:.\Include/arm_math.h ****  * <pre>
 250:.\Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 251:.\Include/arm_math.h ****  * </pre>
 252:.\Include/arm_math.h ****  * Otherwise the functions return
 253:.\Include/arm_math.h ****  * <pre>
 254:.\Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 255:.\Include/arm_math.h ****  * </pre>
 256:.\Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 257:.\Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 258:.\Include/arm_math.h ****  * <pre>
 259:.\Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 260:.\Include/arm_math.h ****  * </pre>
 261:.\Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 262:.\Include/arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 263:.\Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 264:.\Include/arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
 265:.\Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 266:.\Include/arm_math.h ****  */
 267:.\Include/arm_math.h **** 
 268:.\Include/arm_math.h **** /**
 269:.\Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 270:.\Include/arm_math.h ****  */
 271:.\Include/arm_math.h **** 
 272:.\Include/arm_math.h **** /**
 273:.\Include/arm_math.h ****  * @defgroup groupController Controller Functions
 274:.\Include/arm_math.h ****  */
 275:.\Include/arm_math.h **** 
 276:.\Include/arm_math.h **** /**
 277:.\Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 278:.\Include/arm_math.h ****  */
 279:.\Include/arm_math.h **** /**
 280:.\Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 281:.\Include/arm_math.h ****  */
 282:.\Include/arm_math.h **** 
 283:.\Include/arm_math.h **** /**
 284:.\Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 285:.\Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 286:.\Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 287:.\Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 288:.\Include/arm_math.h ****  */
 289:.\Include/arm_math.h **** 
 290:.\Include/arm_math.h **** /**
 291:.\Include/arm_math.h ****  * @defgroup groupExamples Examples
 292:.\Include/arm_math.h ****  */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 39


 293:.\Include/arm_math.h **** #ifndef _ARM_MATH_H
 294:.\Include/arm_math.h **** #define _ARM_MATH_H
 295:.\Include/arm_math.h **** 
 296:.\Include/arm_math.h **** /* ignore some GCC warnings */
 297:.\Include/arm_math.h **** #if defined ( __GNUC__ )
 298:.\Include/arm_math.h **** #pragma GCC diagnostic push
 299:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 300:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 301:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 302:.\Include/arm_math.h **** #endif
 303:.\Include/arm_math.h **** 
 304:.\Include/arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 305:.\Include/arm_math.h **** 
 306:.\Include/arm_math.h **** #if defined(ARM_MATH_CM7)
 307:.\Include/arm_math.h ****   #include "core_cm7.h"
 308:.\Include/arm_math.h ****   #define ARM_MATH_DSP
 309:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM4)
 310:.\Include/arm_math.h ****   #include "core_cm4.h"
 311:.\Include/arm_math.h ****   #define ARM_MATH_DSP
 312:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM3)
 313:.\Include/arm_math.h ****   #include "core_cm3.h"
 314:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM0)
 315:.\Include/arm_math.h ****   #include "core_cm0.h"
 316:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 317:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
 318:.\Include/arm_math.h ****   #include "core_cm0plus.h"
 319:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 320:.\Include/arm_math.h **** #elif defined (ARM_MATH_ARMV8MBL)
 321:.\Include/arm_math.h ****   #include "core_armv8mbl.h"
 322:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 323:.\Include/arm_math.h **** #elif defined (ARM_MATH_ARMV8MML)
 324:.\Include/arm_math.h ****   #include "core_armv8mml.h"
 325:.\Include/arm_math.h ****   #if (defined (__DSP_PRESENT) && (__DSP_PRESENT == 1))
 326:.\Include/arm_math.h ****     #define ARM_MATH_DSP
 327:.\Include/arm_math.h ****   #endif
 328:.\Include/arm_math.h **** #else
 329:.\Include/arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 330:.\Include/arm_math.h **** #endif
 331:.\Include/arm_math.h **** 
 332:.\Include/arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 333:.\Include/arm_math.h **** #include "string.h"
 334:.\Include/arm_math.h **** #include "math.h"
 335:.\Include/arm_math.h **** #ifdef   __cplusplus
 336:.\Include/arm_math.h **** extern "C"
 337:.\Include/arm_math.h **** {
 338:.\Include/arm_math.h **** #endif
 339:.\Include/arm_math.h **** 
 340:.\Include/arm_math.h **** 
 341:.\Include/arm_math.h ****   /**
 342:.\Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:.\Include/arm_math.h ****    */
 344:.\Include/arm_math.h **** 
 345:.\Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:.\Include/arm_math.h **** #define DELTA_Q15          0x5
 347:.\Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:.\Include/arm_math.h **** #ifndef PI
 349:.\Include/arm_math.h ****   #define PI               3.14159265358979f
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 40


 350:.\Include/arm_math.h **** #endif
 351:.\Include/arm_math.h **** 
 352:.\Include/arm_math.h ****   /**
 353:.\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:.\Include/arm_math.h ****    */
 355:.\Include/arm_math.h **** 
 356:.\Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:.\Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:.\Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:.\Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:.\Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:.\Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:.\Include/arm_math.h **** 
 363:.\Include/arm_math.h ****   /**
 364:.\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:.\Include/arm_math.h ****    */
 366:.\Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:.\Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:.\Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:.\Include/arm_math.h **** 
 370:.\Include/arm_math.h ****   /**
 371:.\Include/arm_math.h ****    * @brief Macro for Unaligned Support
 372:.\Include/arm_math.h ****    */
 373:.\Include/arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 374:.\Include/arm_math.h ****     #define ALIGN4
 375:.\Include/arm_math.h **** #else
 376:.\Include/arm_math.h ****   #if defined  (__GNUC__)
 377:.\Include/arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 378:.\Include/arm_math.h ****   #else
 379:.\Include/arm_math.h ****     #define ALIGN4 __align(4)
 380:.\Include/arm_math.h ****   #endif
 381:.\Include/arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 382:.\Include/arm_math.h **** 
 383:.\Include/arm_math.h ****   /**
 384:.\Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 385:.\Include/arm_math.h ****    */
 386:.\Include/arm_math.h **** 
 387:.\Include/arm_math.h ****   typedef enum
 388:.\Include/arm_math.h ****   {
 389:.\Include/arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 390:.\Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 391:.\Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 392:.\Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 393:.\Include/arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 394:.\Include/arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 395:.\Include/arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 396:.\Include/arm_math.h ****   } arm_status;
 397:.\Include/arm_math.h **** 
 398:.\Include/arm_math.h ****   /**
 399:.\Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 400:.\Include/arm_math.h ****    */
 401:.\Include/arm_math.h ****   typedef int8_t q7_t;
 402:.\Include/arm_math.h **** 
 403:.\Include/arm_math.h ****   /**
 404:.\Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 405:.\Include/arm_math.h ****    */
 406:.\Include/arm_math.h ****   typedef int16_t q15_t;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 41


 407:.\Include/arm_math.h **** 
 408:.\Include/arm_math.h ****   /**
 409:.\Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 410:.\Include/arm_math.h ****    */
 411:.\Include/arm_math.h ****   typedef int32_t q31_t;
 412:.\Include/arm_math.h **** 
 413:.\Include/arm_math.h ****   /**
 414:.\Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 415:.\Include/arm_math.h ****    */
 416:.\Include/arm_math.h ****   typedef int64_t q63_t;
 417:.\Include/arm_math.h **** 
 418:.\Include/arm_math.h ****   /**
 419:.\Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 420:.\Include/arm_math.h ****    */
 421:.\Include/arm_math.h ****   typedef float float32_t;
 422:.\Include/arm_math.h **** 
 423:.\Include/arm_math.h ****   /**
 424:.\Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 425:.\Include/arm_math.h ****    */
 426:.\Include/arm_math.h ****   typedef double float64_t;
 427:.\Include/arm_math.h **** 
 428:.\Include/arm_math.h ****   /**
 429:.\Include/arm_math.h ****    * @brief definition to read/write two 16 bit values.
 430:.\Include/arm_math.h ****    */
 431:.\Include/arm_math.h **** #if   defined ( __CC_ARM )
 432:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 433:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 434:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 435:.\Include/arm_math.h **** 
 436:.\Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 437:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 438:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 439:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 440:.\Include/arm_math.h **** 
 441:.\Include/arm_math.h **** #elif defined ( __GNUC__ )
 442:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 443:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 444:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 445:.\Include/arm_math.h **** 
 446:.\Include/arm_math.h **** #elif defined ( __ICCARM__ )
 447:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 448:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 449:.\Include/arm_math.h ****   #define CMSIS_INLINE
 450:.\Include/arm_math.h **** 
 451:.\Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 452:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 453:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 454:.\Include/arm_math.h ****   #define CMSIS_INLINE
 455:.\Include/arm_math.h **** 
 456:.\Include/arm_math.h **** #elif defined ( __CSMC__ )
 457:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 458:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 459:.\Include/arm_math.h ****   #define CMSIS_INLINE
 460:.\Include/arm_math.h **** 
 461:.\Include/arm_math.h **** #elif defined ( __TASKING__ )
 462:.\Include/arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 463:.\Include/arm_math.h ****   #define CMSIS_UNUSED
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 42


 464:.\Include/arm_math.h ****   #define CMSIS_INLINE
 465:.\Include/arm_math.h **** 
 466:.\Include/arm_math.h **** #else
 467:.\Include/arm_math.h ****   #error Unknown compiler
 468:.\Include/arm_math.h **** #endif
 469:.\Include/arm_math.h **** 
 470:.\Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 471:.\Include/arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 472:.\Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 473:.\Include/arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 474:.\Include/arm_math.h **** 
 475:.\Include/arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 476:.\Include/arm_math.h **** #if !defined (ARM_MATH_DSP)
 477:.\Include/arm_math.h ****   /**
 478:.\Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 479:.\Include/arm_math.h ****    */
 480:.\Include/arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 481:.\Include/arm_math.h ****                                     (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 482:.\Include/arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 483:.\Include/arm_math.h ****                                     (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 484:.\Include/arm_math.h **** 
 485:.\Include/arm_math.h **** /* #endif // defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 486:.\Include/arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
 487:.\Include/arm_math.h **** 
 488:.\Include/arm_math.h ****    /**
 489:.\Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
 490:.\Include/arm_math.h ****    */
 491:.\Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 492:.\Include/arm_math.h **** 
 493:.\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 494:.\Include/arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 495:.\Include/arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 496:.\Include/arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 497:.\Include/arm_math.h **** #else
 498:.\Include/arm_math.h **** 
 499:.\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 500:.\Include/arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 501:.\Include/arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 502:.\Include/arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 503:.\Include/arm_math.h **** 
 504:.\Include/arm_math.h **** #endif
 505:.\Include/arm_math.h **** 
 506:.\Include/arm_math.h **** 
 507:.\Include/arm_math.h ****   /**
 508:.\Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 509:.\Include/arm_math.h ****    */
 510:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t clip_q63_to_q31(
 511:.\Include/arm_math.h ****   q63_t x)
 512:.\Include/arm_math.h ****   {
 513:.\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 1622              		.loc 2 513 0
 1623 0be4 C223     		mov	r3, #194
 1624 0be6 5B00     		lsl	r3, r3, #1
 1625 0be8 FB18     		add	r3, r7, r3
 1626 0bea 1B68     		ldr	r3, [r3]
 1627 0bec 1B00     		asr	r3, r3, #0
 1628 0bee BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 43


 1629 0bf0 C223     		mov	r3, #194
 1630 0bf2 5B00     		lsl	r3, r3, #1
 1631 0bf4 FB18     		add	r3, r7, r3
 1632 0bf6 1B68     		ldr	r3, [r3]
 1633 0bf8 DB17     		asr	r3, r3, #31
 1634 0bfa FB61     		str	r3, [r7, #28]
 1635 0bfc BA69     		ldr	r2, [r7, #24]
 1636 0bfe C023     		mov	r3, #192
 1637 0c00 5B00     		lsl	r3, r3, #1
 1638 0c02 FB18     		add	r3, r7, r3
 1639 0c04 1B68     		ldr	r3, [r3]
 1640 0c06 DB17     		asr	r3, r3, #31
 514:.\Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 1641              		.loc 2 514 0
 1642 0c08 9A42     		cmp	r2, r3
 1643 0c0a 0FD0     		beq	.L6
 1644 0c0c C223     		mov	r3, #194
 1645 0c0e 5B00     		lsl	r3, r3, #1
 1646 0c10 FB18     		add	r3, r7, r3
 1647 0c12 1B68     		ldr	r3, [r3]
 1648 0c14 DB17     		asr	r3, r3, #31
 1649 0c16 3B61     		str	r3, [r7, #16]
 1650 0c18 C223     		mov	r3, #194
 1651 0c1a 5B00     		lsl	r3, r3, #1
 1652 0c1c FB18     		add	r3, r7, r3
 1653 0c1e 1B68     		ldr	r3, [r3]
 1654 0c20 DB17     		asr	r3, r3, #31
 1655 0c22 7B61     		str	r3, [r7, #20]
 1656 0c24 3A69     		ldr	r2, [r7, #16]
 1657 0c26 794B     		ldr	r3, .L16
 1658 0c28 5340     		eor	r3, r2
 1659 0c2a 03E0     		b	.L8
 1660              	.L6:
 1661 0c2c C023     		mov	r3, #192
 1662 0c2e 5B00     		lsl	r3, r3, #1
 1663 0c30 FB18     		add	r3, r7, r3
 1664 0c32 1B68     		ldr	r3, [r3]
 1665              	.L8:
 1666              	.LBE7:
 1667              	.LBE6:
 1668              		.loc 1 251 0
 1669 0c34 0B60     		str	r3, [r1]
 252:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         *px++ = (q31_t) clip_q63_to_q31(sumImag1 >> 31);
 1670              		.loc 1 252 0
 1671 0c36 EC23     		mov	r3, #236
 1672 0c38 5B00     		lsl	r3, r3, #1
 1673 0c3a FB18     		add	r3, r7, r3
 1674 0c3c 1968     		ldr	r1, [r3]
 1675 0c3e 0B1D     		add	r3, r1, #4
 1676 0c40 EC22     		mov	r2, #236
 1677 0c42 5200     		lsl	r2, r2, #1
 1678 0c44 BA18     		add	r2, r7, r2
 1679 0c46 1360     		str	r3, [r2]
 1680 0c48 E623     		mov	r3, #230
 1681 0c4a 5B00     		lsl	r3, r3, #1
 1682 0c4c FB18     		add	r3, r7, r3
 1683 0c4e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 44


 1684 0c50 5A00     		lsl	r2, r3, #1
 1685 0c52 E423     		mov	r3, #228
 1686 0c54 5B00     		lsl	r3, r3, #1
 1687 0c56 FB18     		add	r3, r7, r3
 1688 0c58 1B68     		ldr	r3, [r3]
 1689 0c5a DB0F     		lsr	r3, r3, #31
 1690 0c5c B020     		mov	r0, #176
 1691 0c5e 4000     		lsl	r0, r0, #1
 1692 0c60 3818     		add	r0, r7, r0
 1693 0c62 0360     		str	r3, [r0]
 1694 0c64 B023     		mov	r3, #176
 1695 0c66 5B00     		lsl	r3, r3, #1
 1696 0c68 FB18     		add	r3, r7, r3
 1697 0c6a 1B68     		ldr	r3, [r3]
 1698 0c6c 1343     		orr	r3, r2
 1699 0c6e B022     		mov	r2, #176
 1700 0c70 5200     		lsl	r2, r2, #1
 1701 0c72 BA18     		add	r2, r7, r2
 1702 0c74 1360     		str	r3, [r2]
 1703 0c76 E623     		mov	r3, #230
 1704 0c78 5B00     		lsl	r3, r3, #1
 1705 0c7a FB18     		add	r3, r7, r3
 1706 0c7c 1B68     		ldr	r3, [r3]
 1707 0c7e DB17     		asr	r3, r3, #31
 1708 0c80 B222     		mov	r2, #178
 1709 0c82 5200     		lsl	r2, r2, #1
 1710 0c84 BA18     		add	r2, r7, r2
 1711 0c86 1360     		str	r3, [r2]
 1712 0c88 B023     		mov	r3, #176
 1713 0c8a 5B00     		lsl	r3, r3, #1
 1714 0c8c FB18     		add	r3, r7, r3
 1715 0c8e 5C68     		ldr	r4, [r3, #4]
 1716 0c90 1B68     		ldr	r3, [r3]
 1717 0c92 BC22     		mov	r2, #188
 1718 0c94 5200     		lsl	r2, r2, #1
 1719 0c96 BA18     		add	r2, r7, r2
 1720 0c98 1360     		str	r3, [r2]
 1721 0c9a 5460     		str	r4, [r2, #4]
 1722              	.LBB8:
 1723              	.LBB9:
 513:.\Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 1724              		.loc 2 513 0
 1725 0c9c BE23     		mov	r3, #190
 1726 0c9e 5B00     		lsl	r3, r3, #1
 1727 0ca0 FB18     		add	r3, r7, r3
 1728 0ca2 1B68     		ldr	r3, [r3]
 1729 0ca4 1B00     		asr	r3, r3, #0
 1730 0ca6 BB60     		str	r3, [r7, #8]
 1731 0ca8 BE23     		mov	r3, #190
 1732 0caa 5B00     		lsl	r3, r3, #1
 1733 0cac FB18     		add	r3, r7, r3
 1734 0cae 1B68     		ldr	r3, [r3]
 1735 0cb0 DB17     		asr	r3, r3, #31
 1736 0cb2 FB60     		str	r3, [r7, #12]
 1737 0cb4 BA68     		ldr	r2, [r7, #8]
 1738 0cb6 BC23     		mov	r3, #188
 1739 0cb8 5B00     		lsl	r3, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 45


 1740 0cba FB18     		add	r3, r7, r3
 1741 0cbc 1B68     		ldr	r3, [r3]
 1742 0cbe DB17     		asr	r3, r3, #31
 1743              		.loc 2 514 0
 1744 0cc0 9A42     		cmp	r2, r3
 1745 0cc2 0FD0     		beq	.L9
 1746 0cc4 BE23     		mov	r3, #190
 1747 0cc6 5B00     		lsl	r3, r3, #1
 1748 0cc8 FB18     		add	r3, r7, r3
 1749 0cca 1B68     		ldr	r3, [r3]
 1750 0ccc DB17     		asr	r3, r3, #31
 1751 0cce 3B60     		str	r3, [r7]
 1752 0cd0 BE23     		mov	r3, #190
 1753 0cd2 5B00     		lsl	r3, r3, #1
 1754 0cd4 FB18     		add	r3, r7, r3
 1755 0cd6 1B68     		ldr	r3, [r3]
 1756 0cd8 DB17     		asr	r3, r3, #31
 1757 0cda 7B60     		str	r3, [r7, #4]
 1758 0cdc 3A68     		ldr	r2, [r7]
 1759 0cde 4B4B     		ldr	r3, .L16
 1760 0ce0 5340     		eor	r3, r2
 1761 0ce2 03E0     		b	.L15
 1762              	.L9:
 1763 0ce4 BC23     		mov	r3, #188
 1764 0ce6 5B00     		lsl	r3, r3, #1
 1765 0ce8 FB18     		add	r3, r7, r3
 1766 0cea 1B68     		ldr	r3, [r3]
 1767              	.L15:
 1768              	.LBE9:
 1769              	.LBE8:
 1770              		.loc 1 252 0
 1771 0cec 0B60     		str	r3, [r1]
 253:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 254:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Update the pointer pIn2 to point to the  starting address of the next column */
 255:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         j++;
 1772              		.loc 1 255 0
 1773 0cee 5A23     		mov	r3, #90
 1774 0cf0 B422     		mov	r2, #180
 1775 0cf2 5200     		lsl	r2, r2, #1
 1776 0cf4 9446     		mov	ip, r2
 1777 0cf6 BC44     		add	ip, ip, r7
 1778 0cf8 6344     		add	r3, r3, ip
 1779 0cfa 1B88     		ldrh	r3, [r3]
 1780 0cfc 5A22     		mov	r2, #90
 1781 0cfe B421     		mov	r1, #180
 1782 0d00 4900     		lsl	r1, r1, #1
 1783 0d02 8C46     		mov	ip, r1
 1784 0d04 BC44     		add	ip, ip, r7
 1785 0d06 6244     		add	r2, r2, ip
 1786 0d08 0133     		add	r3, r3, #1
 1787 0d0a 1380     		strh	r3, [r2]
 256:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         pIn2 = pSrcB->pData + 2u * j;
 1788              		.loc 1 256 0
 1789 0d0c B823     		mov	r3, #184
 1790 0d0e 5B00     		lsl	r3, r3, #1
 1791 0d10 FB18     		add	r3, r7, r3
 1792 0d12 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 46


 1793 0d14 5A68     		ldr	r2, [r3, #4]
 1794 0d16 5A23     		mov	r3, #90
 1795 0d18 B421     		mov	r1, #180
 1796 0d1a 4900     		lsl	r1, r1, #1
 1797 0d1c 8C46     		mov	ip, r1
 1798 0d1e BC44     		add	ip, ip, r7
 1799 0d20 6344     		add	r3, r3, ip
 1800 0d22 1B88     		ldrh	r3, [r3]
 1801 0d24 DB00     		lsl	r3, r3, #3
 1802 0d26 D318     		add	r3, r2, r3
 1803 0d28 F022     		mov	r2, #240
 1804 0d2a 5200     		lsl	r2, r2, #1
 1805 0d2c BA18     		add	r2, r7, r2
 1806 0d2e 1360     		str	r3, [r2]
 257:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 258:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Decrement the column loop counter */
 259:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         col--;
 1807              		.loc 1 259 0
 1808 0d30 5E23     		mov	r3, #94
 1809 0d32 B422     		mov	r2, #180
 1810 0d34 5200     		lsl	r2, r2, #1
 1811 0d36 9446     		mov	ip, r2
 1812 0d38 BC44     		add	ip, ip, r7
 1813 0d3a 6344     		add	r3, r3, ip
 1814 0d3c 1B88     		ldrh	r3, [r3]
 1815 0d3e 5E22     		mov	r2, #94
 1816 0d40 B421     		mov	r1, #180
 1817 0d42 4900     		lsl	r1, r1, #1
 1818 0d44 8C46     		mov	ip, r1
 1819 0d46 BC44     		add	ip, ip, r7
 1820 0d48 6244     		add	r2, r2, ip
 1821 0d4a 013B     		sub	r3, r3, #1
 1822 0d4c 1380     		strh	r3, [r2]
 260:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 261:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       } while (col > 0u);
 1823              		.loc 1 261 0
 1824 0d4e 5E23     		mov	r3, #94
 1825 0d50 B422     		mov	r2, #180
 1826 0d52 5200     		lsl	r2, r2, #1
 1827 0d54 9446     		mov	ip, r2
 1828 0d56 BC44     		add	ip, ip, r7
 1829 0d58 6344     		add	r3, r3, ip
 1830 0d5a 1B88     		ldrh	r3, [r3]
 1831 0d5c 002B     		cmp	r3, #0
 1832 0d5e 01D0     		beq	.LCB1626
 1833 0d60 FFF7E5F9 		bl	.L12	@far jump
 1834              	.LCB1626:
 262:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 263:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* Update the pointer pInA to point to the  starting address of the next row */
 264:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       i = i + numColsB;
 1835              		.loc 1 264 0
 1836 0d64 5C23     		mov	r3, #92
 1837 0d66 B422     		mov	r2, #180
 1838 0d68 5200     		lsl	r2, r2, #1
 1839 0d6a BA18     		add	r2, r7, r2
 1840 0d6c D118     		add	r1, r2, r3
 1841 0d6e 5C23     		mov	r3, #92
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 47


 1842 0d70 B422     		mov	r2, #180
 1843 0d72 5200     		lsl	r2, r2, #1
 1844 0d74 BA18     		add	r2, r7, r2
 1845 0d76 D218     		add	r2, r2, r3
 1846 0d78 4C23     		mov	r3, #76
 1847 0d7a B420     		mov	r0, #180
 1848 0d7c 4000     		lsl	r0, r0, #1
 1849 0d7e 8446     		mov	ip, r0
 1850 0d80 BC44     		add	ip, ip, r7
 1851 0d82 6344     		add	r3, r3, ip
 1852 0d84 1288     		ldrh	r2, [r2]
 1853 0d86 1B88     		ldrh	r3, [r3]
 1854 0d88 D318     		add	r3, r2, r3
 1855 0d8a 0B80     		strh	r3, [r1]
 265:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       pInA = pInA + 2 * numColsA;
 1856              		.loc 1 265 0
 1857 0d8c 4A23     		mov	r3, #74
 1858 0d8e B422     		mov	r2, #180
 1859 0d90 5200     		lsl	r2, r2, #1
 1860 0d92 9446     		mov	ip, r2
 1861 0d94 BC44     		add	ip, ip, r7
 1862 0d96 6344     		add	r3, r3, ip
 1863 0d98 1B88     		ldrh	r3, [r3]
 1864 0d9a DB00     		lsl	r3, r3, #3
 1865 0d9c 1A1C     		mov	r2, r3
 1866 0d9e EE23     		mov	r3, #238
 1867 0da0 5B00     		lsl	r3, r3, #1
 1868 0da2 FB18     		add	r3, r7, r3
 1869 0da4 1B68     		ldr	r3, [r3]
 1870 0da6 9B18     		add	r3, r3, r2
 1871 0da8 EE22     		mov	r2, #238
 1872 0daa 5200     		lsl	r2, r2, #1
 1873 0dac BA18     		add	r2, r7, r2
 1874 0dae 1360     		str	r3, [r2]
 266:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 267:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* Decrement the row loop counter */
 268:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       row--;
 1875              		.loc 1 268 0
 1876 0db0 5823     		mov	r3, #88
 1877 0db2 B422     		mov	r2, #180
 1878 0db4 5200     		lsl	r2, r2, #1
 1879 0db6 9446     		mov	ip, r2
 1880 0db8 BC44     		add	ip, ip, r7
 1881 0dba 6344     		add	r3, r3, ip
 1882 0dbc 1B88     		ldrh	r3, [r3]
 1883 0dbe 5822     		mov	r2, #88
 1884 0dc0 B421     		mov	r1, #180
 1885 0dc2 4900     		lsl	r1, r1, #1
 1886 0dc4 8C46     		mov	ip, r1
 1887 0dc6 BC44     		add	ip, ip, r7
 1888 0dc8 6244     		add	r2, r2, ip
 1889 0dca 013B     		sub	r3, r3, #1
 1890 0dcc 1380     		strh	r3, [r2]
 269:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 270:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     } while (row > 0u);
 1891              		.loc 1 270 0
 1892 0dce 5823     		mov	r3, #88
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 48


 1893 0dd0 B422     		mov	r2, #180
 1894 0dd2 5200     		lsl	r2, r2, #1
 1895 0dd4 9446     		mov	ip, r2
 1896 0dd6 BC44     		add	ip, ip, r7
 1897 0dd8 6344     		add	r3, r3, ip
 1898 0dda 1B88     		ldrh	r3, [r3]
 1899 0ddc 002B     		cmp	r3, #0
 1900 0dde 01D0     		beq	.LCB1688
 1901 0de0 FFF776F9 		bl	.L13	@far jump
 1902              	.LCB1688:
 271:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 272:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     /* Set status as ARM_MATH_SUCCESS */
 273:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     status = ARM_MATH_SUCCESS;
 1903              		.loc 1 273 0
 1904 0de4 2723     		mov	r3, #39
 1905 0de6 B422     		mov	r2, #180
 1906 0de8 5200     		lsl	r2, r2, #1
 1907 0dea 9446     		mov	ip, r2
 1908 0dec BC44     		add	ip, ip, r7
 1909 0dee 6344     		add	r3, r3, ip
 1910 0df0 0022     		mov	r2, #0
 1911 0df2 1A70     		strb	r2, [r3]
 274:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   }
 275:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 276:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   /* Return to application */
 277:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   return (status);
 1912              		.loc 1 277 0
 1913 0df4 2723     		mov	r3, #39
 1914 0df6 B422     		mov	r2, #180
 1915 0df8 5200     		lsl	r2, r2, #1
 1916 0dfa 9446     		mov	ip, r2
 1917 0dfc BC44     		add	ip, ip, r7
 1918 0dfe 6344     		add	r3, r3, ip
 1919 0e00 1B78     		ldrb	r3, [r3]
 1920 0e02 5BB2     		sxtb	r3, r3
 278:Source\MatrixFunctions/arm_mat_cmplx_mult_q31.c **** }
 1921              		.loc 1 278 0
 1922 0e04 181C     		mov	r0, r3
 1923 0e06 BD46     		mov	sp, r7
 1924 0e08 7BB0     		add	sp, sp, #492
 1925              		@ sp needed
 1926 0e0a F0BD     		pop	{r4, r5, r6, r7, pc}
 1927              	.L17:
 1928              		.align	2
 1929              	.L16:
 1930 0e0c FFFFFF7F 		.word	2147483647
 1931              		.cfi_endproc
 1932              	.LFE82:
 1933              		.size	arm_mat_cmplx_mult_q31, .-arm_mat_cmplx_mult_q31
 1934              		.text
 1935              	.Letext0:
 1936              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1937              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1938              		.section	.debug_info,"",%progbits
 1939              	.Ldebug_info0:
 1940 0000 63030000 		.4byte	0x363
 1941 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 49


 1942 0006 00000000 		.4byte	.Ldebug_abbrev0
 1943 000a 04       		.byte	0x4
 1944 000b 01       		.uleb128 0x1
 1945 000c F2000000 		.4byte	.LASF48
 1946 0010 01       		.byte	0x1
 1947 0011 9B000000 		.4byte	.LASF49
 1948 0015 8E020000 		.4byte	.LASF50
 1949 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1950 001d 00000000 		.4byte	0
 1951 0021 00000000 		.4byte	.Ldebug_line0
 1952 0025 02       		.uleb128 0x2
 1953 0026 01       		.byte	0x1
 1954 0027 06       		.byte	0x6
 1955 0028 4D000000 		.4byte	.LASF0
 1956 002c 02       		.uleb128 0x2
 1957 002d 01       		.byte	0x1
 1958 002e 08       		.byte	0x8
 1959 002f 5E020000 		.4byte	.LASF1
 1960 0033 02       		.uleb128 0x2
 1961 0034 02       		.byte	0x2
 1962 0035 05       		.byte	0x5
 1963 0036 6C020000 		.4byte	.LASF2
 1964 003a 03       		.uleb128 0x3
 1965 003b FF020000 		.4byte	.LASF4
 1966 003f 03       		.byte	0x3
 1967 0040 2B       		.byte	0x2b
 1968 0041 45000000 		.4byte	0x45
 1969 0045 02       		.uleb128 0x2
 1970 0046 02       		.byte	0x2
 1971 0047 07       		.byte	0x7
 1972 0048 84010000 		.4byte	.LASF3
 1973 004c 03       		.uleb128 0x3
 1974 004d 21030000 		.4byte	.LASF5
 1975 0051 03       		.byte	0x3
 1976 0052 3F       		.byte	0x3f
 1977 0053 57000000 		.4byte	0x57
 1978 0057 02       		.uleb128 0x2
 1979 0058 04       		.byte	0x4
 1980 0059 05       		.byte	0x5
 1981 005a 59000000 		.4byte	.LASF6
 1982 005e 02       		.uleb128 0x2
 1983 005f 04       		.byte	0x4
 1984 0060 07       		.byte	0x7
 1985 0061 E0000000 		.4byte	.LASF7
 1986 0065 03       		.uleb128 0x3
 1987 0066 35000000 		.4byte	.LASF8
 1988 006a 03       		.byte	0x3
 1989 006b 59       		.byte	0x59
 1990 006c 70000000 		.4byte	0x70
 1991 0070 02       		.uleb128 0x2
 1992 0071 08       		.byte	0x8
 1993 0072 05       		.byte	0x5
 1994 0073 3F000000 		.4byte	.LASF9
 1995 0077 02       		.uleb128 0x2
 1996 0078 08       		.byte	0x8
 1997 0079 07       		.byte	0x7
 1998 007a 1E000000 		.4byte	.LASF10
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 50


 1999 007e 04       		.uleb128 0x4
 2000 007f 04       		.byte	0x4
 2001 0080 05       		.byte	0x5
 2002 0081 696E7400 		.ascii	"int\000"
 2003 0085 02       		.uleb128 0x2
 2004 0086 04       		.byte	0x4
 2005 0087 07       		.byte	0x7
 2006 0088 D3000000 		.4byte	.LASF11
 2007 008c 03       		.uleb128 0x3
 2008 008d 67000000 		.4byte	.LASF12
 2009 0091 04       		.byte	0x4
 2010 0092 21       		.byte	0x21
 2011 0093 3A000000 		.4byte	0x3a
 2012 0097 03       		.uleb128 0x3
 2013 0098 56020000 		.4byte	.LASF13
 2014 009c 04       		.byte	0x4
 2015 009d 2C       		.byte	0x2c
 2016 009e 4C000000 		.4byte	0x4c
 2017 00a2 03       		.uleb128 0x3
 2018 00a3 3D030000 		.4byte	.LASF14
 2019 00a7 04       		.byte	0x4
 2020 00a8 38       		.byte	0x38
 2021 00a9 65000000 		.4byte	0x65
 2022 00ad 02       		.uleb128 0x2
 2023 00ae 04       		.byte	0x4
 2024 00af 07       		.byte	0x7
 2025 00b0 DB010000 		.4byte	.LASF15
 2026 00b4 02       		.uleb128 0x2
 2027 00b5 01       		.byte	0x1
 2028 00b6 08       		.byte	0x8
 2029 00b7 FA020000 		.4byte	.LASF16
 2030 00bb 02       		.uleb128 0x2
 2031 00bc 08       		.byte	0x8
 2032 00bd 04       		.byte	0x4
 2033 00be 70000000 		.4byte	.LASF17
 2034 00c2 02       		.uleb128 0x2
 2035 00c3 04       		.byte	0x4
 2036 00c4 04       		.byte	0x4
 2037 00c5 25020000 		.4byte	.LASF18
 2038 00c9 02       		.uleb128 0x2
 2039 00ca 08       		.byte	0x8
 2040 00cb 04       		.byte	0x4
 2041 00cc E4010000 		.4byte	.LASF19
 2042 00d0 05       		.uleb128 0x5
 2043 00d1 01       		.byte	0x1
 2044 00d2 02       		.byte	0x2
 2045 00d3 8401     		.2byte	0x184
 2046 00d5 04010000 		.4byte	0x104
 2047 00d9 06       		.uleb128 0x6
 2048 00da 0D000000 		.4byte	.LASF20
 2049 00de 00       		.sleb128 0
 2050 00df 06       		.uleb128 0x6
 2051 00e0 76020000 		.4byte	.LASF21
 2052 00e4 7F       		.sleb128 -1
 2053 00e5 06       		.uleb128 0x6
 2054 00e6 0F020000 		.4byte	.LASF22
 2055 00ea 7E       		.sleb128 -2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 51


 2056 00eb 06       		.uleb128 0x6
 2057 00ec 0A030000 		.4byte	.LASF23
 2058 00f0 7D       		.sleb128 -3
 2059 00f1 06       		.uleb128 0x6
 2060 00f2 46020000 		.4byte	.LASF24
 2061 00f6 7C       		.sleb128 -4
 2062 00f7 06       		.uleb128 0x6
 2063 00f8 2B020000 		.4byte	.LASF25
 2064 00fc 7B       		.sleb128 -5
 2065 00fd 06       		.uleb128 0x6
 2066 00fe B8010000 		.4byte	.LASF26
 2067 0102 7A       		.sleb128 -6
 2068 0103 00       		.byte	0
 2069 0104 07       		.uleb128 0x7
 2070 0105 32030000 		.4byte	.LASF27
 2071 0109 02       		.byte	0x2
 2072 010a 8C01     		.2byte	0x18c
 2073 010c D0000000 		.4byte	0xd0
 2074 0110 07       		.uleb128 0x7
 2075 0111 DD020000 		.4byte	.LASF28
 2076 0115 02       		.byte	0x2
 2077 0116 9B01     		.2byte	0x19b
 2078 0118 97000000 		.4byte	0x97
 2079 011c 07       		.uleb128 0x7
 2080 011d 07000000 		.4byte	.LASF29
 2081 0121 02       		.byte	0x2
 2082 0122 A001     		.2byte	0x1a0
 2083 0124 A2000000 		.4byte	0xa2
 2084 0128 08       		.uleb128 0x8
 2085 0129 04       		.byte	0x4
 2086 012a 10010000 		.4byte	0x110
 2087 012e 09       		.uleb128 0x9
 2088 012f 08       		.byte	0x8
 2089 0130 02       		.byte	0x2
 2090 0131 B905     		.2byte	0x5b9
 2091 0133 5F010000 		.4byte	0x15f
 2092 0137 0A       		.uleb128 0xa
 2093 0138 CB000000 		.4byte	.LASF30
 2094 013c 02       		.byte	0x2
 2095 013d BB05     		.2byte	0x5bb
 2096 013f 8C000000 		.4byte	0x8c
 2097 0143 00       		.byte	0
 2098 0144 0A       		.uleb128 0xa
 2099 0145 D3010000 		.4byte	.LASF31
 2100 0149 02       		.byte	0x2
 2101 014a BC05     		.2byte	0x5bc
 2102 014c 8C000000 		.4byte	0x8c
 2103 0150 02       		.byte	0x2
 2104 0151 0A       		.uleb128 0xa
 2105 0152 95000000 		.4byte	.LASF32
 2106 0156 02       		.byte	0x2
 2107 0157 BD05     		.2byte	0x5bd
 2108 0159 28010000 		.4byte	0x128
 2109 015d 04       		.byte	0x4
 2110 015e 00       		.byte	0
 2111 015f 07       		.uleb128 0x7
 2112 0160 97010000 		.4byte	.LASF33
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 52


 2113 0164 02       		.byte	0x2
 2114 0165 BE05     		.2byte	0x5be
 2115 0167 2E010000 		.4byte	0x12e
 2116 016b 0B       		.uleb128 0xb
 2117 016c FA010000 		.4byte	.LASF51
 2118 0170 02       		.byte	0x2
 2119 0171 FE01     		.2byte	0x1fe
 2120 0173 10010000 		.4byte	0x110
 2121 0177 03       		.byte	0x3
 2122 0178 87010000 		.4byte	0x187
 2123 017c 0C       		.uleb128 0xc
 2124 017d 7800     		.ascii	"x\000"
 2125 017f 02       		.byte	0x2
 2126 0180 FF01     		.2byte	0x1ff
 2127 0182 1C010000 		.4byte	0x11c
 2128 0186 00       		.byte	0
 2129 0187 0D       		.uleb128 0xd
 2130 0188 E3020000 		.4byte	.LASF52
 2131 018c 01       		.byte	0x1
 2132 018d 40       		.byte	0x40
 2133 018e 04010000 		.4byte	0x104
 2134 0192 00000000 		.4byte	.LFB82
 2135 0196 100E0000 		.4byte	.LFE82-.LFB82
 2136 019a 01       		.uleb128 0x1
 2137 019b 9C       		.byte	0x9c
 2138 019c 55030000 		.4byte	0x355
 2139 01a0 0E       		.uleb128 0xe
 2140 01a1 89000000 		.4byte	.LASF34
 2141 01a5 01       		.byte	0x1
 2142 01a6 41       		.byte	0x41
 2143 01a7 55030000 		.4byte	0x355
 2144 01ab 03       		.uleb128 0x3
 2145 01ac 91       		.byte	0x91
 2146 01ad F47E     		.sleb128 -140
 2147 01af 0E       		.uleb128 0xe
 2148 01b0 8F000000 		.4byte	.LASF35
 2149 01b4 01       		.byte	0x1
 2150 01b5 42       		.byte	0x42
 2151 01b6 55030000 		.4byte	0x355
 2152 01ba 03       		.uleb128 0x3
 2153 01bb 91       		.byte	0x91
 2154 01bc F07E     		.sleb128 -144
 2155 01be 0E       		.uleb128 0xe
 2156 01bf 62000000 		.4byte	.LASF36
 2157 01c3 01       		.byte	0x1
 2158 01c4 43       		.byte	0x43
 2159 01c5 60030000 		.4byte	0x360
 2160 01c9 03       		.uleb128 0x3
 2161 01ca 91       		.byte	0x91
 2162 01cb EC7E     		.sleb128 -148
 2163 01cd 0F       		.uleb128 0xf
 2164 01ce F0010000 		.4byte	.LASF37
 2165 01d2 01       		.byte	0x1
 2166 01d3 45       		.byte	0x45
 2167 01d4 28010000 		.4byte	0x128
 2168 01d8 02       		.uleb128 0x2
 2169 01d9 91       		.byte	0x91
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 53


 2170 01da 64       		.sleb128 -28
 2171 01db 0F       		.uleb128 0xf
 2172 01dc F5010000 		.4byte	.LASF38
 2173 01e0 01       		.byte	0x1
 2174 01e1 46       		.byte	0x46
 2175 01e2 28010000 		.4byte	0x128
 2176 01e6 02       		.uleb128 0x2
 2177 01e7 91       		.byte	0x91
 2178 01e8 60       		.sleb128 -32
 2179 01e9 0F       		.uleb128 0xf
 2180 01ea 0A020000 		.4byte	.LASF39
 2181 01ee 01       		.byte	0x1
 2182 01ef 47       		.byte	0x47
 2183 01f0 28010000 		.4byte	0x128
 2184 01f4 02       		.uleb128 0x2
 2185 01f5 91       		.byte	0x91
 2186 01f6 5C       		.sleb128 -36
 2187 01f7 0F       		.uleb128 0xf
 2188 01f8 CE010000 		.4byte	.LASF40
 2189 01fc 01       		.byte	0x1
 2190 01fd 48       		.byte	0x48
 2191 01fe 28010000 		.4byte	0x128
 2192 0202 03       		.uleb128 0x3
 2193 0203 91       		.byte	0x91
 2194 0204 B87F     		.sleb128 -72
 2195 0206 10       		.uleb128 0x10
 2196 0207 707800   		.ascii	"px\000"
 2197 020a 01       		.byte	0x1
 2198 020b 49       		.byte	0x49
 2199 020c 28010000 		.4byte	0x128
 2200 0210 02       		.uleb128 0x2
 2201 0211 91       		.byte	0x91
 2202 0212 58       		.sleb128 -40
 2203 0213 0F       		.uleb128 0xf
 2204 0214 D4020000 		.4byte	.LASF41
 2205 0218 01       		.byte	0x1
 2206 0219 4A       		.byte	0x4a
 2207 021a 8C000000 		.4byte	0x8c
 2208 021e 03       		.uleb128 0x3
 2209 021f 91       		.byte	0x91
 2210 0220 B67F     		.sleb128 -74
 2211 0222 0F       		.uleb128 0xf
 2212 0223 80000000 		.4byte	.LASF42
 2213 0227 01       		.byte	0x1
 2214 0228 4B       		.byte	0x4b
 2215 0229 8C000000 		.4byte	0x8c
 2216 022d 03       		.uleb128 0x3
 2217 022e 91       		.byte	0x91
 2218 022f B47F     		.sleb128 -76
 2219 0231 0F       		.uleb128 0xf
 2220 0232 77000000 		.4byte	.LASF43
 2221 0236 01       		.byte	0x1
 2222 0237 4C       		.byte	0x4c
 2223 0238 8C000000 		.4byte	0x8c
 2224 023c 03       		.uleb128 0x3
 2225 023d 91       		.byte	0x91
 2226 023e B27F     		.sleb128 -78
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 54


 2227 0240 0F       		.uleb128 0xf
 2228 0241 3D020000 		.4byte	.LASF44
 2229 0245 01       		.byte	0x1
 2230 0246 4D       		.byte	0x4d
 2231 0247 1C010000 		.4byte	0x11c
 2232 024b 02       		.uleb128 0x2
 2233 024c 91       		.byte	0x91
 2234 024d 50       		.sleb128 -48
 2235 024e 0F       		.uleb128 0xf
 2236 024f AF010000 		.4byte	.LASF45
 2237 0253 01       		.byte	0x1
 2238 0254 4D       		.byte	0x4d
 2239 0255 1C010000 		.4byte	0x11c
 2240 0259 02       		.uleb128 0x2
 2241 025a 91       		.byte	0x91
 2242 025b 48       		.sleb128 -56
 2243 025c 10       		.uleb128 0x10
 2244 025d 613000   		.ascii	"a0\000"
 2245 0260 01       		.byte	0x1
 2246 0261 4E       		.byte	0x4e
 2247 0262 10010000 		.4byte	0x110
 2248 0266 03       		.uleb128 0x3
 2249 0267 91       		.byte	0x91
 2250 0268 AC7F     		.sleb128 -84
 2251 026a 10       		.uleb128 0x10
 2252 026b 623000   		.ascii	"b0\000"
 2253 026e 01       		.byte	0x1
 2254 026f 4E       		.byte	0x4e
 2255 0270 10010000 		.4byte	0x110
 2256 0274 03       		.uleb128 0x3
 2257 0275 91       		.byte	0x91
 2258 0276 A47F     		.sleb128 -92
 2259 0278 10       		.uleb128 0x10
 2260 0279 633000   		.ascii	"c0\000"
 2261 027c 01       		.byte	0x1
 2262 027d 4E       		.byte	0x4e
 2263 027e 10010000 		.4byte	0x110
 2264 0282 03       		.uleb128 0x3
 2265 0283 91       		.byte	0x91
 2266 0284 A87F     		.sleb128 -88
 2267 0286 10       		.uleb128 0x10
 2268 0287 643000   		.ascii	"d0\000"
 2269 028a 01       		.byte	0x1
 2270 028b 4E       		.byte	0x4e
 2271 028c 10010000 		.4byte	0x110
 2272 0290 03       		.uleb128 0x3
 2273 0291 91       		.byte	0x91
 2274 0292 A07F     		.sleb128 -96
 2275 0294 10       		.uleb128 0x10
 2276 0295 613100   		.ascii	"a1\000"
 2277 0298 01       		.byte	0x1
 2278 0299 4F       		.byte	0x4f
 2279 029a 10010000 		.4byte	0x110
 2280 029e 03       		.uleb128 0x3
 2281 029f 91       		.byte	0x91
 2282 02a0 9C7F     		.sleb128 -100
 2283 02a2 10       		.uleb128 0x10
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 55


 2284 02a3 623100   		.ascii	"b1\000"
 2285 02a6 01       		.byte	0x1
 2286 02a7 4F       		.byte	0x4f
 2287 02a8 10010000 		.4byte	0x110
 2288 02ac 03       		.uleb128 0x3
 2289 02ad 91       		.byte	0x91
 2290 02ae 947F     		.sleb128 -108
 2291 02b0 10       		.uleb128 0x10
 2292 02b1 633100   		.ascii	"c1\000"
 2293 02b4 01       		.byte	0x1
 2294 02b5 4F       		.byte	0x4f
 2295 02b6 10010000 		.4byte	0x110
 2296 02ba 03       		.uleb128 0x3
 2297 02bb 91       		.byte	0x91
 2298 02bc 987F     		.sleb128 -104
 2299 02be 10       		.uleb128 0x10
 2300 02bf 643100   		.ascii	"d1\000"
 2301 02c2 01       		.byte	0x1
 2302 02c3 4F       		.byte	0x4f
 2303 02c4 10010000 		.4byte	0x110
 2304 02c8 03       		.uleb128 0x3
 2305 02c9 91       		.byte	0x91
 2306 02ca 907F     		.sleb128 -112
 2307 02cc 10       		.uleb128 0x10
 2308 02cd 636F6C00 		.ascii	"col\000"
 2309 02d1 01       		.byte	0x1
 2310 02d2 54       		.byte	0x54
 2311 02d3 8C000000 		.4byte	0x8c
 2312 02d7 02       		.uleb128 0x2
 2313 02d8 91       		.byte	0x91
 2314 02d9 46       		.sleb128 -58
 2315 02da 10       		.uleb128 0x10
 2316 02db 6900     		.ascii	"i\000"
 2317 02dd 01       		.byte	0x1
 2318 02de 54       		.byte	0x54
 2319 02df 8C000000 		.4byte	0x8c
 2320 02e3 02       		.uleb128 0x2
 2321 02e4 91       		.byte	0x91
 2322 02e5 44       		.sleb128 -60
 2323 02e6 10       		.uleb128 0x10
 2324 02e7 6A00     		.ascii	"j\000"
 2325 02e9 01       		.byte	0x1
 2326 02ea 54       		.byte	0x54
 2327 02eb 8C000000 		.4byte	0x8c
 2328 02ef 02       		.uleb128 0x2
 2329 02f0 91       		.byte	0x91
 2330 02f1 42       		.sleb128 -62
 2331 02f2 10       		.uleb128 0x10
 2332 02f3 726F7700 		.ascii	"row\000"
 2333 02f7 01       		.byte	0x1
 2334 02f8 54       		.byte	0x54
 2335 02f9 8C000000 		.4byte	0x8c
 2336 02fd 02       		.uleb128 0x2
 2337 02fe 91       		.byte	0x91
 2338 02ff 40       		.sleb128 -64
 2339 0300 0F       		.uleb128 0xf
 2340 0301 00000000 		.4byte	.LASF46
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 56


 2341 0305 01       		.byte	0x1
 2342 0306 54       		.byte	0x54
 2343 0307 8C000000 		.4byte	0x8c
 2344 030b 03       		.uleb128 0x3
 2345 030c 91       		.byte	0x91
 2346 030d BE7F     		.sleb128 -66
 2347 030f 0F       		.uleb128 0xf
 2348 0310 2B030000 		.4byte	.LASF47
 2349 0314 01       		.byte	0x1
 2350 0315 55       		.byte	0x55
 2351 0316 04010000 		.4byte	0x104
 2352 031a 03       		.uleb128 0x3
 2353 031b 91       		.byte	0x91
 2354 031c 8F7F     		.sleb128 -113
 2355 031e 11       		.uleb128 0x11
 2356 031f 6B010000 		.4byte	0x16b
 2357 0323 E40B0000 		.4byte	.LBB6
 2358 0327 50000000 		.4byte	.LBE6-.LBB6
 2359 032b 01       		.byte	0x1
 2360 032c FB       		.byte	0xfb
 2361 032d 3B030000 		.4byte	0x33b
 2362 0331 12       		.uleb128 0x12
 2363 0332 7C010000 		.4byte	0x17c
 2364 0336 03       		.uleb128 0x3
 2365 0337 91       		.byte	0x91
 2366 0338 807F     		.sleb128 -128
 2367 033a 00       		.byte	0
 2368 033b 13       		.uleb128 0x13
 2369 033c 6B010000 		.4byte	0x16b
 2370 0340 9C0C0000 		.4byte	.LBB8
 2371 0344 50000000 		.4byte	.LBE8-.LBB8
 2372 0348 01       		.byte	0x1
 2373 0349 FC       		.byte	0xfc
 2374 034a 12       		.uleb128 0x12
 2375 034b 7C010000 		.4byte	0x17c
 2376 034f 03       		.uleb128 0x3
 2377 0350 91       		.byte	0x91
 2378 0351 F87E     		.sleb128 -136
 2379 0353 00       		.byte	0
 2380 0354 00       		.byte	0
 2381 0355 08       		.uleb128 0x8
 2382 0356 04       		.byte	0x4
 2383 0357 5B030000 		.4byte	0x35b
 2384 035b 14       		.uleb128 0x14
 2385 035c 5F010000 		.4byte	0x15f
 2386 0360 08       		.uleb128 0x8
 2387 0361 04       		.byte	0x4
 2388 0362 5F010000 		.4byte	0x15f
 2389 0366 00       		.byte	0
 2390              		.section	.debug_abbrev,"",%progbits
 2391              	.Ldebug_abbrev0:
 2392 0000 01       		.uleb128 0x1
 2393 0001 11       		.uleb128 0x11
 2394 0002 01       		.byte	0x1
 2395 0003 25       		.uleb128 0x25
 2396 0004 0E       		.uleb128 0xe
 2397 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 57


 2398 0006 0B       		.uleb128 0xb
 2399 0007 03       		.uleb128 0x3
 2400 0008 0E       		.uleb128 0xe
 2401 0009 1B       		.uleb128 0x1b
 2402 000a 0E       		.uleb128 0xe
 2403 000b 55       		.uleb128 0x55
 2404 000c 17       		.uleb128 0x17
 2405 000d 11       		.uleb128 0x11
 2406 000e 01       		.uleb128 0x1
 2407 000f 10       		.uleb128 0x10
 2408 0010 17       		.uleb128 0x17
 2409 0011 00       		.byte	0
 2410 0012 00       		.byte	0
 2411 0013 02       		.uleb128 0x2
 2412 0014 24       		.uleb128 0x24
 2413 0015 00       		.byte	0
 2414 0016 0B       		.uleb128 0xb
 2415 0017 0B       		.uleb128 0xb
 2416 0018 3E       		.uleb128 0x3e
 2417 0019 0B       		.uleb128 0xb
 2418 001a 03       		.uleb128 0x3
 2419 001b 0E       		.uleb128 0xe
 2420 001c 00       		.byte	0
 2421 001d 00       		.byte	0
 2422 001e 03       		.uleb128 0x3
 2423 001f 16       		.uleb128 0x16
 2424 0020 00       		.byte	0
 2425 0021 03       		.uleb128 0x3
 2426 0022 0E       		.uleb128 0xe
 2427 0023 3A       		.uleb128 0x3a
 2428 0024 0B       		.uleb128 0xb
 2429 0025 3B       		.uleb128 0x3b
 2430 0026 0B       		.uleb128 0xb
 2431 0027 49       		.uleb128 0x49
 2432 0028 13       		.uleb128 0x13
 2433 0029 00       		.byte	0
 2434 002a 00       		.byte	0
 2435 002b 04       		.uleb128 0x4
 2436 002c 24       		.uleb128 0x24
 2437 002d 00       		.byte	0
 2438 002e 0B       		.uleb128 0xb
 2439 002f 0B       		.uleb128 0xb
 2440 0030 3E       		.uleb128 0x3e
 2441 0031 0B       		.uleb128 0xb
 2442 0032 03       		.uleb128 0x3
 2443 0033 08       		.uleb128 0x8
 2444 0034 00       		.byte	0
 2445 0035 00       		.byte	0
 2446 0036 05       		.uleb128 0x5
 2447 0037 04       		.uleb128 0x4
 2448 0038 01       		.byte	0x1
 2449 0039 0B       		.uleb128 0xb
 2450 003a 0B       		.uleb128 0xb
 2451 003b 3A       		.uleb128 0x3a
 2452 003c 0B       		.uleb128 0xb
 2453 003d 3B       		.uleb128 0x3b
 2454 003e 05       		.uleb128 0x5
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 58


 2455 003f 01       		.uleb128 0x1
 2456 0040 13       		.uleb128 0x13
 2457 0041 00       		.byte	0
 2458 0042 00       		.byte	0
 2459 0043 06       		.uleb128 0x6
 2460 0044 28       		.uleb128 0x28
 2461 0045 00       		.byte	0
 2462 0046 03       		.uleb128 0x3
 2463 0047 0E       		.uleb128 0xe
 2464 0048 1C       		.uleb128 0x1c
 2465 0049 0D       		.uleb128 0xd
 2466 004a 00       		.byte	0
 2467 004b 00       		.byte	0
 2468 004c 07       		.uleb128 0x7
 2469 004d 16       		.uleb128 0x16
 2470 004e 00       		.byte	0
 2471 004f 03       		.uleb128 0x3
 2472 0050 0E       		.uleb128 0xe
 2473 0051 3A       		.uleb128 0x3a
 2474 0052 0B       		.uleb128 0xb
 2475 0053 3B       		.uleb128 0x3b
 2476 0054 05       		.uleb128 0x5
 2477 0055 49       		.uleb128 0x49
 2478 0056 13       		.uleb128 0x13
 2479 0057 00       		.byte	0
 2480 0058 00       		.byte	0
 2481 0059 08       		.uleb128 0x8
 2482 005a 0F       		.uleb128 0xf
 2483 005b 00       		.byte	0
 2484 005c 0B       		.uleb128 0xb
 2485 005d 0B       		.uleb128 0xb
 2486 005e 49       		.uleb128 0x49
 2487 005f 13       		.uleb128 0x13
 2488 0060 00       		.byte	0
 2489 0061 00       		.byte	0
 2490 0062 09       		.uleb128 0x9
 2491 0063 13       		.uleb128 0x13
 2492 0064 01       		.byte	0x1
 2493 0065 0B       		.uleb128 0xb
 2494 0066 0B       		.uleb128 0xb
 2495 0067 3A       		.uleb128 0x3a
 2496 0068 0B       		.uleb128 0xb
 2497 0069 3B       		.uleb128 0x3b
 2498 006a 05       		.uleb128 0x5
 2499 006b 01       		.uleb128 0x1
 2500 006c 13       		.uleb128 0x13
 2501 006d 00       		.byte	0
 2502 006e 00       		.byte	0
 2503 006f 0A       		.uleb128 0xa
 2504 0070 0D       		.uleb128 0xd
 2505 0071 00       		.byte	0
 2506 0072 03       		.uleb128 0x3
 2507 0073 0E       		.uleb128 0xe
 2508 0074 3A       		.uleb128 0x3a
 2509 0075 0B       		.uleb128 0xb
 2510 0076 3B       		.uleb128 0x3b
 2511 0077 05       		.uleb128 0x5
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 59


 2512 0078 49       		.uleb128 0x49
 2513 0079 13       		.uleb128 0x13
 2514 007a 38       		.uleb128 0x38
 2515 007b 0B       		.uleb128 0xb
 2516 007c 00       		.byte	0
 2517 007d 00       		.byte	0
 2518 007e 0B       		.uleb128 0xb
 2519 007f 2E       		.uleb128 0x2e
 2520 0080 01       		.byte	0x1
 2521 0081 03       		.uleb128 0x3
 2522 0082 0E       		.uleb128 0xe
 2523 0083 3A       		.uleb128 0x3a
 2524 0084 0B       		.uleb128 0xb
 2525 0085 3B       		.uleb128 0x3b
 2526 0086 05       		.uleb128 0x5
 2527 0087 27       		.uleb128 0x27
 2528 0088 19       		.uleb128 0x19
 2529 0089 49       		.uleb128 0x49
 2530 008a 13       		.uleb128 0x13
 2531 008b 20       		.uleb128 0x20
 2532 008c 0B       		.uleb128 0xb
 2533 008d 01       		.uleb128 0x1
 2534 008e 13       		.uleb128 0x13
 2535 008f 00       		.byte	0
 2536 0090 00       		.byte	0
 2537 0091 0C       		.uleb128 0xc
 2538 0092 05       		.uleb128 0x5
 2539 0093 00       		.byte	0
 2540 0094 03       		.uleb128 0x3
 2541 0095 08       		.uleb128 0x8
 2542 0096 3A       		.uleb128 0x3a
 2543 0097 0B       		.uleb128 0xb
 2544 0098 3B       		.uleb128 0x3b
 2545 0099 05       		.uleb128 0x5
 2546 009a 49       		.uleb128 0x49
 2547 009b 13       		.uleb128 0x13
 2548 009c 00       		.byte	0
 2549 009d 00       		.byte	0
 2550 009e 0D       		.uleb128 0xd
 2551 009f 2E       		.uleb128 0x2e
 2552 00a0 01       		.byte	0x1
 2553 00a1 3F       		.uleb128 0x3f
 2554 00a2 19       		.uleb128 0x19
 2555 00a3 03       		.uleb128 0x3
 2556 00a4 0E       		.uleb128 0xe
 2557 00a5 3A       		.uleb128 0x3a
 2558 00a6 0B       		.uleb128 0xb
 2559 00a7 3B       		.uleb128 0x3b
 2560 00a8 0B       		.uleb128 0xb
 2561 00a9 27       		.uleb128 0x27
 2562 00aa 19       		.uleb128 0x19
 2563 00ab 49       		.uleb128 0x49
 2564 00ac 13       		.uleb128 0x13
 2565 00ad 11       		.uleb128 0x11
 2566 00ae 01       		.uleb128 0x1
 2567 00af 12       		.uleb128 0x12
 2568 00b0 06       		.uleb128 0x6
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 60


 2569 00b1 40       		.uleb128 0x40
 2570 00b2 18       		.uleb128 0x18
 2571 00b3 9642     		.uleb128 0x2116
 2572 00b5 19       		.uleb128 0x19
 2573 00b6 01       		.uleb128 0x1
 2574 00b7 13       		.uleb128 0x13
 2575 00b8 00       		.byte	0
 2576 00b9 00       		.byte	0
 2577 00ba 0E       		.uleb128 0xe
 2578 00bb 05       		.uleb128 0x5
 2579 00bc 00       		.byte	0
 2580 00bd 03       		.uleb128 0x3
 2581 00be 0E       		.uleb128 0xe
 2582 00bf 3A       		.uleb128 0x3a
 2583 00c0 0B       		.uleb128 0xb
 2584 00c1 3B       		.uleb128 0x3b
 2585 00c2 0B       		.uleb128 0xb
 2586 00c3 49       		.uleb128 0x49
 2587 00c4 13       		.uleb128 0x13
 2588 00c5 02       		.uleb128 0x2
 2589 00c6 18       		.uleb128 0x18
 2590 00c7 00       		.byte	0
 2591 00c8 00       		.byte	0
 2592 00c9 0F       		.uleb128 0xf
 2593 00ca 34       		.uleb128 0x34
 2594 00cb 00       		.byte	0
 2595 00cc 03       		.uleb128 0x3
 2596 00cd 0E       		.uleb128 0xe
 2597 00ce 3A       		.uleb128 0x3a
 2598 00cf 0B       		.uleb128 0xb
 2599 00d0 3B       		.uleb128 0x3b
 2600 00d1 0B       		.uleb128 0xb
 2601 00d2 49       		.uleb128 0x49
 2602 00d3 13       		.uleb128 0x13
 2603 00d4 02       		.uleb128 0x2
 2604 00d5 18       		.uleb128 0x18
 2605 00d6 00       		.byte	0
 2606 00d7 00       		.byte	0
 2607 00d8 10       		.uleb128 0x10
 2608 00d9 34       		.uleb128 0x34
 2609 00da 00       		.byte	0
 2610 00db 03       		.uleb128 0x3
 2611 00dc 08       		.uleb128 0x8
 2612 00dd 3A       		.uleb128 0x3a
 2613 00de 0B       		.uleb128 0xb
 2614 00df 3B       		.uleb128 0x3b
 2615 00e0 0B       		.uleb128 0xb
 2616 00e1 49       		.uleb128 0x49
 2617 00e2 13       		.uleb128 0x13
 2618 00e3 02       		.uleb128 0x2
 2619 00e4 18       		.uleb128 0x18
 2620 00e5 00       		.byte	0
 2621 00e6 00       		.byte	0
 2622 00e7 11       		.uleb128 0x11
 2623 00e8 1D       		.uleb128 0x1d
 2624 00e9 01       		.byte	0x1
 2625 00ea 31       		.uleb128 0x31
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 61


 2626 00eb 13       		.uleb128 0x13
 2627 00ec 11       		.uleb128 0x11
 2628 00ed 01       		.uleb128 0x1
 2629 00ee 12       		.uleb128 0x12
 2630 00ef 06       		.uleb128 0x6
 2631 00f0 58       		.uleb128 0x58
 2632 00f1 0B       		.uleb128 0xb
 2633 00f2 59       		.uleb128 0x59
 2634 00f3 0B       		.uleb128 0xb
 2635 00f4 01       		.uleb128 0x1
 2636 00f5 13       		.uleb128 0x13
 2637 00f6 00       		.byte	0
 2638 00f7 00       		.byte	0
 2639 00f8 12       		.uleb128 0x12
 2640 00f9 05       		.uleb128 0x5
 2641 00fa 00       		.byte	0
 2642 00fb 31       		.uleb128 0x31
 2643 00fc 13       		.uleb128 0x13
 2644 00fd 02       		.uleb128 0x2
 2645 00fe 18       		.uleb128 0x18
 2646 00ff 00       		.byte	0
 2647 0100 00       		.byte	0
 2648 0101 13       		.uleb128 0x13
 2649 0102 1D       		.uleb128 0x1d
 2650 0103 01       		.byte	0x1
 2651 0104 31       		.uleb128 0x31
 2652 0105 13       		.uleb128 0x13
 2653 0106 11       		.uleb128 0x11
 2654 0107 01       		.uleb128 0x1
 2655 0108 12       		.uleb128 0x12
 2656 0109 06       		.uleb128 0x6
 2657 010a 58       		.uleb128 0x58
 2658 010b 0B       		.uleb128 0xb
 2659 010c 59       		.uleb128 0x59
 2660 010d 0B       		.uleb128 0xb
 2661 010e 00       		.byte	0
 2662 010f 00       		.byte	0
 2663 0110 14       		.uleb128 0x14
 2664 0111 26       		.uleb128 0x26
 2665 0112 00       		.byte	0
 2666 0113 49       		.uleb128 0x49
 2667 0114 13       		.uleb128 0x13
 2668 0115 00       		.byte	0
 2669 0116 00       		.byte	0
 2670 0117 00       		.byte	0
 2671              		.section	.debug_aranges,"",%progbits
 2672 0000 1C000000 		.4byte	0x1c
 2673 0004 0200     		.2byte	0x2
 2674 0006 00000000 		.4byte	.Ldebug_info0
 2675 000a 04       		.byte	0x4
 2676 000b 00       		.byte	0
 2677 000c 0000     		.2byte	0
 2678 000e 0000     		.2byte	0
 2679 0010 00000000 		.4byte	.LFB82
 2680 0014 100E0000 		.4byte	.LFE82-.LFB82
 2681 0018 00000000 		.4byte	0
 2682 001c 00000000 		.4byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 62


 2683              		.section	.debug_ranges,"",%progbits
 2684              	.Ldebug_ranges0:
 2685 0000 00000000 		.4byte	.LFB82
 2686 0004 100E0000 		.4byte	.LFE82
 2687 0008 00000000 		.4byte	0
 2688 000c 00000000 		.4byte	0
 2689              		.section	.debug_line,"",%progbits
 2690              	.Ldebug_line0:
 2691 0000 21020000 		.section	.debug_str,"MS",%progbits,1
 2691      02005601 
 2691      00000201 
 2691      FB0E0D00 
 2691      01010101 
 2692              	.LASF46:
 2693 0000 636F6C43 		.ascii	"colCnt\000"
 2693      6E7400
 2694              	.LASF29:
 2695 0007 7136335F 		.ascii	"q63_t\000"
 2695      7400
 2696              	.LASF20:
 2697 000d 41524D5F 		.ascii	"ARM_MATH_SUCCESS\000"
 2697      4D415448 
 2697      5F535543 
 2697      43455353 
 2697      00
 2698              	.LASF10:
 2699 001e 6C6F6E67 		.ascii	"long long unsigned int\000"
 2699      206C6F6E 
 2699      6720756E 
 2699      7369676E 
 2699      65642069 
 2700              	.LASF8:
 2701 0035 5F5F696E 		.ascii	"__int64_t\000"
 2701      7436345F 
 2701      7400
 2702              	.LASF9:
 2703 003f 6C6F6E67 		.ascii	"long long int\000"
 2703      206C6F6E 
 2703      6720696E 
 2703      7400
 2704              	.LASF0:
 2705 004d 7369676E 		.ascii	"signed char\000"
 2705      65642063 
 2705      68617200 
 2706              	.LASF6:
 2707 0059 6C6F6E67 		.ascii	"long int\000"
 2707      20696E74 
 2707      00
 2708              	.LASF36:
 2709 0062 70447374 		.ascii	"pDst\000"
 2709      00
 2710              	.LASF12:
 2711 0067 75696E74 		.ascii	"uint16_t\000"
 2711      31365F74 
 2711      00
 2712              	.LASF17:
 2713 0070 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 63


 2713      6C6500
 2714              	.LASF43:
 2715 0077 6E756D43 		.ascii	"numColsA\000"
 2715      6F6C7341 
 2715      00
 2716              	.LASF42:
 2717 0080 6E756D43 		.ascii	"numColsB\000"
 2717      6F6C7342 
 2717      00
 2718              	.LASF34:
 2719 0089 70537263 		.ascii	"pSrcA\000"
 2719      4100
 2720              	.LASF35:
 2721 008f 70537263 		.ascii	"pSrcB\000"
 2721      4200
 2722              	.LASF32:
 2723 0095 70446174 		.ascii	"pData\000"
 2723      6100
 2724              	.LASF49:
 2725 009b 536F7572 		.ascii	"Source\\MatrixFunctions\\arm_mat_cmplx_mult_q31.c\000"
 2725      63655C4D 
 2725      61747269 
 2725      7846756E 
 2725      6374696F 
 2726              	.LASF30:
 2727 00cb 6E756D52 		.ascii	"numRows\000"
 2727      6F777300 
 2728              	.LASF11:
 2729 00d3 756E7369 		.ascii	"unsigned int\000"
 2729      676E6564 
 2729      20696E74 
 2729      00
 2730              	.LASF7:
 2731 00e0 6C6F6E67 		.ascii	"long unsigned int\000"
 2731      20756E73 
 2731      69676E65 
 2731      6420696E 
 2731      7400
 2732              	.LASF48:
 2733 00f2 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2733      4320342E 
 2733      392E3320 
 2733      32303135 
 2733      30333033 
 2734 0125 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 2734      20726576 
 2734      6973696F 
 2734      6E203232 
 2734      31323230 
 2735 0158 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 2735      30202D66 
 2735      66756E63 
 2735      74696F6E 
 2735      2D736563 
 2736              	.LASF3:
 2737 0184 73686F72 		.ascii	"short unsigned int\000"
 2737      7420756E 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 64


 2737      7369676E 
 2737      65642069 
 2737      6E7400
 2738              	.LASF33:
 2739 0197 61726D5F 		.ascii	"arm_matrix_instance_q31\000"
 2739      6D617472 
 2739      69785F69 
 2739      6E737461 
 2739      6E63655F 
 2740              	.LASF45:
 2741 01af 73756D49 		.ascii	"sumImag1\000"
 2741      6D616731 
 2741      00
 2742              	.LASF26:
 2743 01b8 41524D5F 		.ascii	"ARM_MATH_TEST_FAILURE\000"
 2743      4D415448 
 2743      5F544553 
 2743      545F4641 
 2743      494C5552 
 2744              	.LASF40:
 2745 01ce 704F7574 		.ascii	"pOut\000"
 2745      00
 2746              	.LASF31:
 2747 01d3 6E756D43 		.ascii	"numCols\000"
 2747      6F6C7300 
 2748              	.LASF15:
 2749 01db 73697A65 		.ascii	"sizetype\000"
 2749      74797065 
 2749      00
 2750              	.LASF19:
 2751 01e4 6C6F6E67 		.ascii	"long double\000"
 2751      20646F75 
 2751      626C6500 
 2752              	.LASF37:
 2753 01f0 70496E31 		.ascii	"pIn1\000"
 2753      00
 2754              	.LASF38:
 2755 01f5 70496E32 		.ascii	"pIn2\000"
 2755      00
 2756              	.LASF51:
 2757 01fa 636C6970 		.ascii	"clip_q63_to_q31\000"
 2757      5F713633 
 2757      5F746F5F 
 2757      71333100 
 2758              	.LASF39:
 2759 020a 70496E41 		.ascii	"pInA\000"
 2759      00
 2760              	.LASF22:
 2761 020f 41524D5F 		.ascii	"ARM_MATH_LENGTH_ERROR\000"
 2761      4D415448 
 2761      5F4C454E 
 2761      4754485F 
 2761      4552524F 
 2762              	.LASF18:
 2763 0225 666C6F61 		.ascii	"float\000"
 2763      7400
 2764              	.LASF25:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 65


 2765 022b 41524D5F 		.ascii	"ARM_MATH_SINGULAR\000"
 2765      4D415448 
 2765      5F53494E 
 2765      47554C41 
 2765      5200
 2766              	.LASF44:
 2767 023d 73756D52 		.ascii	"sumReal1\000"
 2767      65616C31 
 2767      00
 2768              	.LASF24:
 2769 0246 41524D5F 		.ascii	"ARM_MATH_NANINF\000"
 2769      4D415448 
 2769      5F4E414E 
 2769      494E4600 
 2770              	.LASF13:
 2771 0256 696E7433 		.ascii	"int32_t\000"
 2771      325F7400 
 2772              	.LASF1:
 2773 025e 756E7369 		.ascii	"unsigned char\000"
 2773      676E6564 
 2773      20636861 
 2773      7200
 2774              	.LASF2:
 2775 026c 73686F72 		.ascii	"short int\000"
 2775      7420696E 
 2775      7400
 2776              	.LASF21:
 2777 0276 41524D5F 		.ascii	"ARM_MATH_ARGUMENT_ERROR\000"
 2777      4D415448 
 2777      5F415247 
 2777      554D454E 
 2777      545F4552 
 2778              	.LASF50:
 2779 028e 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 2779      73657273 
 2779      5C666E65 
 2779      7665735C 
 2779      446F6375 
 2780 02bb 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 2780      655F7370 
 2780      6565645F 
 2780      73656E73 
 2780      6F722E63 
 2781              	.LASF41:
 2782 02d4 6E756D52 		.ascii	"numRowsA\000"
 2782      6F777341 
 2782      00
 2783              	.LASF28:
 2784 02dd 7133315F 		.ascii	"q31_t\000"
 2784      7400
 2785              	.LASF52:
 2786 02e3 61726D5F 		.ascii	"arm_mat_cmplx_mult_q31\000"
 2786      6D61745F 
 2786      636D706C 
 2786      785F6D75 
 2786      6C745F71 
 2787              	.LASF16:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccRa3ZAi.s 			page 66


 2788 02fa 63686172 		.ascii	"char\000"
 2788      00
 2789              	.LASF4:
 2790 02ff 5F5F7569 		.ascii	"__uint16_t\000"
 2790      6E743136 
 2790      5F7400
 2791              	.LASF23:
 2792 030a 41524D5F 		.ascii	"ARM_MATH_SIZE_MISMATCH\000"
 2792      4D415448 
 2792      5F53495A 
 2792      455F4D49 
 2792      534D4154 
 2793              	.LASF5:
 2794 0321 5F5F696E 		.ascii	"__int32_t\000"
 2794      7433325F 
 2794      7400
 2795              	.LASF47:
 2796 032b 73746174 		.ascii	"status\000"
 2796      757300
 2797              	.LASF27:
 2798 0332 61726D5F 		.ascii	"arm_status\000"
 2798      73746174 
 2798      757300
 2799              	.LASF14:
 2800 033d 696E7436 		.ascii	"int64_t\000"
 2800      345F7400 
 2801              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
