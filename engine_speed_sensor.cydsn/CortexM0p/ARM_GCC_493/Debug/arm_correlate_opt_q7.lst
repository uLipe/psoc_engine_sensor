ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_correlate_opt_q7.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.arm_correlate_opt_q7,"ax",%progbits
  18              		.align	2
  19              		.global	arm_correlate_opt_q7
  20              		.code	16
  21              		.thumb_func
  22              		.type	arm_correlate_opt_q7, %function
  23              	arm_correlate_opt_q7:
  24              	.LFB82:
  25              		.file 1 "Source\\FilteringFunctions\\arm_correlate_opt_q7.c"
   1:Source\FilteringFunctions/arm_correlate_opt_q7.c **** /* ----------------------------------------------------------------------
   2:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * Project:      CMSIS DSP Library
   3:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * Title:        arm_correlate_opt_q7.c
   4:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * Description:  Correlation of Q7 sequences
   5:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  *
   6:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * $Date:        27. January 2017
   7:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * $Revision:    V.1.5.1
   8:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  *
   9:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * Target Processor: Cortex-M cores
  10:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * -------------------------------------------------------------------- */
  11:Source\FilteringFunctions/arm_correlate_opt_q7.c **** /*
  12:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  *
  14:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  *
  16:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * not use this file except in compliance with the License.
  18:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * You may obtain a copy of the License at
  19:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  *
  20:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  *
  22:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * See the License for the specific language governing permissions and
  26:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * limitations under the License.
  27:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  */
  28:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
  29:Source\FilteringFunctions/arm_correlate_opt_q7.c **** #include "arm_math.h"
  30:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
  31:Source\FilteringFunctions/arm_correlate_opt_q7.c **** /**
  32:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * @ingroup groupFilters
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 2


  33:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  */
  34:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
  35:Source\FilteringFunctions/arm_correlate_opt_q7.c **** /**
  36:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * @addtogroup Corr
  37:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * @{
  38:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  */
  39:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
  40:Source\FilteringFunctions/arm_correlate_opt_q7.c **** /**
  41:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * @brief Correlation of Q7 sequences.
  42:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * @param[in] *pSrcA points to the first input sequence.
  43:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * @param[in] srcALen length of the first input sequence.
  44:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * @param[in] *pSrcB points to the second input sequence.
  45:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * @param[in] srcBLen length of the second input sequence.
  46:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * @param[out] *pDst points to the location where the output result is written.  Length 2 * max(src
  47:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * @param[in]  *pScratch1 points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) + 2
  48:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * @param[in]  *pScratch2 points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
  49:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * @return none.
  50:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  *
  51:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  *
  52:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * \par Restrictions
  53:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  *  If the silicon does not support unaligned memory access enable the macro UNALIGNED_SUPPORT_DISA
  54:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  *	In this case input, output, scratch1 and scratch2 buffers should be aligned by 32-bit
  55:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  *
  56:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * @details
  57:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * <b>Scaling and Overflow Behavior:</b>
  58:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  *
  59:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * \par
  60:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * The function is implemented using a 32-bit internal accumulator.
  61:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * Both the inputs are represented in 1.7 format and multiplications yield a 2.14 result.
  62:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * The 2.14 intermediate results are accumulated in a 32-bit accumulator in 18.14 format.
  63:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * This approach provides 17 guard bits and there is no risk of overflow as long as <code>max(srcAL
  64:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  * The 18.14 result is then truncated to 18.7 format by discarding the low 7 bits and saturated to 
  65:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  *
  66:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  *
  67:Source\FilteringFunctions/arm_correlate_opt_q7.c ****  */
  68:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
  69:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
  70:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
  71:Source\FilteringFunctions/arm_correlate_opt_q7.c **** void arm_correlate_opt_q7(
  72:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   q7_t * pSrcA,
  73:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   uint32_t srcALen,
  74:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   q7_t * pSrcB,
  75:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   uint32_t srcBLen,
  76:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   q7_t * pDst,
  77:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   q15_t * pScratch1,
  78:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   q15_t * pScratch2)
  79:Source\FilteringFunctions/arm_correlate_opt_q7.c **** {
  26              		.loc 1 79 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 CAB0     		sub	sp, sp, #296
  33              		.cfi_def_cfa_offset 304
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 3


  36 0006 F860     		str	r0, [r7, #12]
  37 0008 B960     		str	r1, [r7, #8]
  38 000a 7A60     		str	r2, [r7, #4]
  39 000c 3B60     		str	r3, [r7]
  80:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   q7_t *pOut = pDst;                             /* output pointer                */
  40              		.loc 1 80 0
  41 000e 9823     		mov	r3, #152
  42 0010 5B00     		lsl	r3, r3, #1
  43 0012 FB18     		add	r3, r7, r3
  44 0014 1B68     		ldr	r3, [r3]
  45 0016 9222     		mov	r2, #146
  46 0018 5200     		lsl	r2, r2, #1
  47 001a BA18     		add	r2, r7, r2
  48 001c 1360     		str	r3, [r2]
  81:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   q15_t *pScr1 = pScratch1;                      /* Temporary pointer for scratch */
  49              		.loc 1 81 0
  50 001e 9A23     		mov	r3, #154
  51 0020 5B00     		lsl	r3, r3, #1
  52 0022 FB18     		add	r3, r7, r3
  53 0024 1B68     		ldr	r3, [r3]
  54 0026 3B61     		str	r3, [r7, #16]
  82:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   q15_t *pScr2 = pScratch2;                      /* Temporary pointer for scratch */
  55              		.loc 1 82 0
  56 0028 9C23     		mov	r3, #156
  57 002a 5B00     		lsl	r3, r3, #1
  58 002c FB18     		add	r3, r7, r3
  59 002e 1B68     		ldr	r3, [r3]
  60 0030 9022     		mov	r2, #144
  61 0032 5200     		lsl	r2, r2, #1
  62 0034 BA18     		add	r2, r7, r2
  63 0036 1360     		str	r3, [r2]
  83:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   q7_t *pIn1;                                    /* inputA pointer                */
  84:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   q7_t *pIn2;                                    /* inputB pointer                */
  85:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   q15_t *py;                                     /* Intermediate inputB pointer   */
  86:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   q31_t acc0, acc1, acc2, acc3;                  /* Accumulators                  */
  87:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   uint32_t j, k = 0u, blkCnt;                    /* loop counter                  */
  64              		.loc 1 87 0
  65 0038 0023     		mov	r3, #0
  66 003a 7A1D     		add	r2, r7, #5
  67 003c FF32     		add	r2, r2, #255
  68 003e 1360     		str	r3, [r2]
  88:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   int32_t inc = 1;                               /* output pointer increment          */
  69              		.loc 1 88 0
  70 0040 0123     		mov	r3, #1
  71 0042 FC22     		mov	r2, #252
  72 0044 BA18     		add	r2, r7, r2
  73 0046 1360     		str	r3, [r2]
  89:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   uint32_t outBlockSize;                         /* loop counter                  */
  90:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   q15_t x4;                                      /* Temporary input variable      */
  91:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   uint32_t tapCnt;                               /* loop counter                  */
  92:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   q31_t x1, x2, x3, y1;                          /* Temporary input variables     */
  93:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
  94:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
  95:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* srcB is always made to slide across srcA. */
  96:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
  97:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* But CORR(x, y) is reverse of CORR(y, x) */
  98:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* So, when srcBLen > srcALen, output pointer is made to point to the end of the output buffer */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 4


  99:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* and the destination pointer modifier, inc is set to -1 */
 100:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* If srcALen > srcBLen, zero pad has to be done to srcB to make the two inputs of same length */
 101:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* But to improve the performance,
 102:Source\FilteringFunctions/arm_correlate_opt_q7.c ****    * we include zeroes in the output instead of zero padding either of the the inputs*/
 103:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* If srcALen > srcBLen,
 104:Source\FilteringFunctions/arm_correlate_opt_q7.c ****    * (srcALen - srcBLen) zeroes has to included in the starting of the output buffer */
 105:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* If srcALen < srcBLen,
 106:Source\FilteringFunctions/arm_correlate_opt_q7.c ****    * (srcALen - srcBLen) zeroes has to included in the ending of the output buffer */
 107:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   if (srcALen >= srcBLen)
  74              		.loc 1 107 0
  75 0048 BA68     		ldr	r2, [r7, #8]
  76 004a 3B68     		ldr	r3, [r7]
  77 004c 9A42     		cmp	r2, r3
  78 004e 27D3     		bcc	.L2
 108:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   {
 109:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Initialization of inputA pointer */
 110:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     pIn1 = (pSrcA);
  79              		.loc 1 110 0
  80 0050 FB68     		ldr	r3, [r7, #12]
  81 0052 8E22     		mov	r2, #142
  82 0054 5200     		lsl	r2, r2, #1
  83 0056 BA18     		add	r2, r7, r2
  84 0058 1360     		str	r3, [r2]
 111:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 112:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Initialization of inputB pointer */
 113:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     pIn2 = (pSrcB);
  85              		.loc 1 113 0
  86 005a 7B68     		ldr	r3, [r7, #4]
  87 005c 8C22     		mov	r2, #140
  88 005e 5200     		lsl	r2, r2, #1
  89 0060 BA18     		add	r2, r7, r2
  90 0062 1360     		str	r3, [r2]
 114:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 115:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Number of output samples is calculated */
 116:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     outBlockSize = (2u * srcALen) - 1u;
  91              		.loc 1 116 0
  92 0064 BB68     		ldr	r3, [r7, #8]
  93 0066 5B00     		lsl	r3, r3, #1
  94 0068 013B     		sub	r3, r3, #1
  95 006a EC22     		mov	r2, #236
  96 006c BA18     		add	r2, r7, r2
  97 006e 1360     		str	r3, [r2]
 117:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 118:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* When srcALen > srcBLen, zero padding is done to srcB
 119:Source\FilteringFunctions/arm_correlate_opt_q7.c ****      * to make their lengths equal.
 120:Source\FilteringFunctions/arm_correlate_opt_q7.c ****      * Instead, (outBlockSize - (srcALen + srcBLen - 1))
 121:Source\FilteringFunctions/arm_correlate_opt_q7.c ****      * number of output samples are made zero */
 122:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     j = outBlockSize - (srcALen + (srcBLen - 1u));
  98              		.loc 1 122 0
  99 0070 3A68     		ldr	r2, [r7]
 100 0072 BB68     		ldr	r3, [r7, #8]
 101 0074 D318     		add	r3, r2, r3
 102 0076 EC22     		mov	r2, #236
 103 0078 BA18     		add	r2, r7, r2
 104 007a 1268     		ldr	r2, [r2]
 105 007c D31A     		sub	r3, r2, r3
 106 007e 0133     		add	r3, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 5


 107 0080 E822     		mov	r2, #232
 108 0082 BA18     		add	r2, r7, r2
 109 0084 1360     		str	r3, [r2]
 123:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 124:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Updating the pointer position to non zero value */
 125:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     pOut += j;
 110              		.loc 1 125 0
 111 0086 9223     		mov	r3, #146
 112 0088 5B00     		lsl	r3, r3, #1
 113 008a FB18     		add	r3, r7, r3
 114 008c 1A68     		ldr	r2, [r3]
 115 008e E823     		mov	r3, #232
 116 0090 FB18     		add	r3, r7, r3
 117 0092 1B68     		ldr	r3, [r3]
 118 0094 D318     		add	r3, r2, r3
 119 0096 9222     		mov	r2, #146
 120 0098 5200     		lsl	r2, r2, #1
 121 009a BA18     		add	r2, r7, r2
 122 009c 1360     		str	r3, [r2]
 123 009e 25E0     		b	.L3
 124              	.L2:
 126:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 127:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   }
 128:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   else
 129:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   {
 130:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Initialization of inputA pointer */
 131:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     pIn1 = (pSrcB);
 125              		.loc 1 131 0
 126 00a0 7B68     		ldr	r3, [r7, #4]
 127 00a2 8E22     		mov	r2, #142
 128 00a4 5200     		lsl	r2, r2, #1
 129 00a6 BA18     		add	r2, r7, r2
 130 00a8 1360     		str	r3, [r2]
 132:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 133:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Initialization of inputB pointer */
 134:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     pIn2 = (pSrcA);
 131              		.loc 1 134 0
 132 00aa FB68     		ldr	r3, [r7, #12]
 133 00ac 8C22     		mov	r2, #140
 134 00ae 5200     		lsl	r2, r2, #1
 135 00b0 BA18     		add	r2, r7, r2
 136 00b2 1360     		str	r3, [r2]
 135:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 136:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 137:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     j = srcBLen;
 137              		.loc 1 137 0
 138 00b4 3B68     		ldr	r3, [r7]
 139 00b6 E822     		mov	r2, #232
 140 00b8 BA18     		add	r2, r7, r2
 141 00ba 1360     		str	r3, [r2]
 138:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     srcBLen = srcALen;
 142              		.loc 1 138 0
 143 00bc BB68     		ldr	r3, [r7, #8]
 144 00be 3B60     		str	r3, [r7]
 139:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     srcALen = j;
 145              		.loc 1 139 0
 146 00c0 E823     		mov	r3, #232
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 6


 147 00c2 FB18     		add	r3, r7, r3
 148 00c4 1B68     		ldr	r3, [r3]
 149 00c6 BB60     		str	r3, [r7, #8]
 140:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 141:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* CORR(x, y) = Reverse order(CORR(y, x)) */
 142:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Hence set the destination pointer to point to the last output sample */
 143:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     pOut = pDst + ((srcALen + srcBLen) - 2u);
 150              		.loc 1 143 0
 151 00c8 BA68     		ldr	r2, [r7, #8]
 152 00ca 3B68     		ldr	r3, [r7]
 153 00cc D318     		add	r3, r2, r3
 154 00ce 023B     		sub	r3, r3, #2
 155 00d0 9822     		mov	r2, #152
 156 00d2 5200     		lsl	r2, r2, #1
 157 00d4 BA18     		add	r2, r7, r2
 158 00d6 1268     		ldr	r2, [r2]
 159 00d8 D318     		add	r3, r2, r3
 160 00da 9222     		mov	r2, #146
 161 00dc 5200     		lsl	r2, r2, #1
 162 00de BA18     		add	r2, r7, r2
 163 00e0 1360     		str	r3, [r2]
 144:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 145:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Destination address modifier is set to -1 */
 146:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     inc = -1;
 164              		.loc 1 146 0
 165 00e2 0123     		mov	r3, #1
 166 00e4 5B42     		neg	r3, r3
 167 00e6 FC22     		mov	r2, #252
 168 00e8 BA18     		add	r2, r7, r2
 169 00ea 1360     		str	r3, [r2]
 170              	.L3:
 147:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 148:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   }
 149:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 150:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 151:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* Copy (srcBLen) samples in scratch buffer */
 152:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   k = srcBLen >> 2u;
 171              		.loc 1 152 0
 172 00ec 3B68     		ldr	r3, [r7]
 173 00ee 9B08     		lsr	r3, r3, #2
 174 00f0 7A1D     		add	r2, r7, #5
 175 00f2 FF32     		add	r2, r2, #255
 176 00f4 1360     		str	r3, [r2]
 153:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 154:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 155:Source\FilteringFunctions/arm_correlate_opt_q7.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
 156:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   while (k > 0u)
 177              		.loc 1 156 0
 178 00f6 72E0     		b	.L4
 179              	.L5:
 157:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   {
 158:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* copy second buffer in reversal manner */
 159:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) * pIn2++;
 180              		.loc 1 159 0
 181 00f8 8C23     		mov	r3, #140
 182 00fa 5B00     		lsl	r3, r3, #1
 183 00fc FB18     		add	r3, r7, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 7


 184 00fe 1B68     		ldr	r3, [r3]
 185 0100 5A1C     		add	r2, r3, #1
 186 0102 8C21     		mov	r1, #140
 187 0104 4900     		lsl	r1, r1, #1
 188 0106 7918     		add	r1, r7, r1
 189 0108 0A60     		str	r2, [r1]
 190 010a 1A78     		ldrb	r2, [r3]
 191 010c E623     		mov	r3, #230
 192 010e FB18     		add	r3, r7, r3
 193 0110 52B2     		sxtb	r2, r2
 194 0112 1A80     		strh	r2, [r3]
 160:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr2++ = x4;
 195              		.loc 1 160 0
 196 0114 9023     		mov	r3, #144
 197 0116 5B00     		lsl	r3, r3, #1
 198 0118 FB18     		add	r3, r7, r3
 199 011a 1B68     		ldr	r3, [r3]
 200 011c 9A1C     		add	r2, r3, #2
 201 011e 9021     		mov	r1, #144
 202 0120 4900     		lsl	r1, r1, #1
 203 0122 7918     		add	r1, r7, r1
 204 0124 0A60     		str	r2, [r1]
 205 0126 E622     		mov	r2, #230
 206 0128 BA18     		add	r2, r7, r2
 207 012a 1288     		ldrh	r2, [r2]
 208 012c 1A80     		strh	r2, [r3]
 161:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) * pIn2++;
 209              		.loc 1 161 0
 210 012e 8C23     		mov	r3, #140
 211 0130 5B00     		lsl	r3, r3, #1
 212 0132 FB18     		add	r3, r7, r3
 213 0134 1B68     		ldr	r3, [r3]
 214 0136 5A1C     		add	r2, r3, #1
 215 0138 8C21     		mov	r1, #140
 216 013a 4900     		lsl	r1, r1, #1
 217 013c 7918     		add	r1, r7, r1
 218 013e 0A60     		str	r2, [r1]
 219 0140 1A78     		ldrb	r2, [r3]
 220 0142 E623     		mov	r3, #230
 221 0144 FB18     		add	r3, r7, r3
 222 0146 52B2     		sxtb	r2, r2
 223 0148 1A80     		strh	r2, [r3]
 162:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr2++ = x4;
 224              		.loc 1 162 0
 225 014a 9023     		mov	r3, #144
 226 014c 5B00     		lsl	r3, r3, #1
 227 014e FB18     		add	r3, r7, r3
 228 0150 1B68     		ldr	r3, [r3]
 229 0152 9A1C     		add	r2, r3, #2
 230 0154 9021     		mov	r1, #144
 231 0156 4900     		lsl	r1, r1, #1
 232 0158 7918     		add	r1, r7, r1
 233 015a 0A60     		str	r2, [r1]
 234 015c E622     		mov	r2, #230
 235 015e BA18     		add	r2, r7, r2
 236 0160 1288     		ldrh	r2, [r2]
 237 0162 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 8


 163:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) * pIn2++;
 238              		.loc 1 163 0
 239 0164 8C23     		mov	r3, #140
 240 0166 5B00     		lsl	r3, r3, #1
 241 0168 FB18     		add	r3, r7, r3
 242 016a 1B68     		ldr	r3, [r3]
 243 016c 5A1C     		add	r2, r3, #1
 244 016e 8C21     		mov	r1, #140
 245 0170 4900     		lsl	r1, r1, #1
 246 0172 7918     		add	r1, r7, r1
 247 0174 0A60     		str	r2, [r1]
 248 0176 1A78     		ldrb	r2, [r3]
 249 0178 E623     		mov	r3, #230
 250 017a FB18     		add	r3, r7, r3
 251 017c 52B2     		sxtb	r2, r2
 252 017e 1A80     		strh	r2, [r3]
 164:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr2++ = x4;
 253              		.loc 1 164 0
 254 0180 9023     		mov	r3, #144
 255 0182 5B00     		lsl	r3, r3, #1
 256 0184 FB18     		add	r3, r7, r3
 257 0186 1B68     		ldr	r3, [r3]
 258 0188 9A1C     		add	r2, r3, #2
 259 018a 9021     		mov	r1, #144
 260 018c 4900     		lsl	r1, r1, #1
 261 018e 7918     		add	r1, r7, r1
 262 0190 0A60     		str	r2, [r1]
 263 0192 E622     		mov	r2, #230
 264 0194 BA18     		add	r2, r7, r2
 265 0196 1288     		ldrh	r2, [r2]
 266 0198 1A80     		strh	r2, [r3]
 165:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) * pIn2++;
 267              		.loc 1 165 0
 268 019a 8C23     		mov	r3, #140
 269 019c 5B00     		lsl	r3, r3, #1
 270 019e FB18     		add	r3, r7, r3
 271 01a0 1B68     		ldr	r3, [r3]
 272 01a2 5A1C     		add	r2, r3, #1
 273 01a4 8C21     		mov	r1, #140
 274 01a6 4900     		lsl	r1, r1, #1
 275 01a8 7918     		add	r1, r7, r1
 276 01aa 0A60     		str	r2, [r1]
 277 01ac 1A78     		ldrb	r2, [r3]
 278 01ae E623     		mov	r3, #230
 279 01b0 FB18     		add	r3, r7, r3
 280 01b2 52B2     		sxtb	r2, r2
 281 01b4 1A80     		strh	r2, [r3]
 166:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr2++ = x4;
 282              		.loc 1 166 0
 283 01b6 9023     		mov	r3, #144
 284 01b8 5B00     		lsl	r3, r3, #1
 285 01ba FB18     		add	r3, r7, r3
 286 01bc 1B68     		ldr	r3, [r3]
 287 01be 9A1C     		add	r2, r3, #2
 288 01c0 9021     		mov	r1, #144
 289 01c2 4900     		lsl	r1, r1, #1
 290 01c4 7918     		add	r1, r7, r1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 9


 291 01c6 0A60     		str	r2, [r1]
 292 01c8 E622     		mov	r2, #230
 293 01ca BA18     		add	r2, r7, r2
 294 01cc 1288     		ldrh	r2, [r2]
 295 01ce 1A80     		strh	r2, [r3]
 167:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 168:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Decrement the loop counter */
 169:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     k--;
 296              		.loc 1 169 0
 297 01d0 7B1D     		add	r3, r7, #5
 298 01d2 FF33     		add	r3, r3, #255
 299 01d4 1B68     		ldr	r3, [r3]
 300 01d6 013B     		sub	r3, r3, #1
 301 01d8 7A1D     		add	r2, r7, #5
 302 01da FF32     		add	r2, r2, #255
 303 01dc 1360     		str	r3, [r2]
 304              	.L4:
 156:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   {
 305              		.loc 1 156 0
 306 01de 7B1D     		add	r3, r7, #5
 307 01e0 FF33     		add	r3, r3, #255
 308 01e2 1B68     		ldr	r3, [r3]
 309 01e4 002B     		cmp	r3, #0
 310 01e6 87D1     		bne	.L5
 170:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   }
 171:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 172:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 173:Source\FilteringFunctions/arm_correlate_opt_q7.c ****    ** No loop unrolling is used. */
 174:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   k = srcBLen % 0x4u;
 311              		.loc 1 174 0
 312 01e8 3B68     		ldr	r3, [r7]
 313 01ea 0322     		mov	r2, #3
 314 01ec 1340     		and	r3, r2
 315 01ee 7A1D     		add	r2, r7, #5
 316 01f0 FF32     		add	r2, r2, #255
 317 01f2 1360     		str	r3, [r2]
 175:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 176:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   while (k > 0u)
 318              		.loc 1 176 0
 319 01f4 21E0     		b	.L6
 320              	.L7:
 177:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   {
 178:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* copy second buffer in reversal manner for remaining samples */
 179:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) * pIn2++;
 321              		.loc 1 179 0
 322 01f6 8C23     		mov	r3, #140
 323 01f8 5B00     		lsl	r3, r3, #1
 324 01fa FB18     		add	r3, r7, r3
 325 01fc 1B68     		ldr	r3, [r3]
 326 01fe 5A1C     		add	r2, r3, #1
 327 0200 8C21     		mov	r1, #140
 328 0202 4900     		lsl	r1, r1, #1
 329 0204 7918     		add	r1, r7, r1
 330 0206 0A60     		str	r2, [r1]
 331 0208 1A78     		ldrb	r2, [r3]
 332 020a E623     		mov	r3, #230
 333 020c FB18     		add	r3, r7, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 10


 334 020e 52B2     		sxtb	r2, r2
 335 0210 1A80     		strh	r2, [r3]
 180:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr2++ = x4;
 336              		.loc 1 180 0
 337 0212 9023     		mov	r3, #144
 338 0214 5B00     		lsl	r3, r3, #1
 339 0216 FB18     		add	r3, r7, r3
 340 0218 1B68     		ldr	r3, [r3]
 341 021a 9A1C     		add	r2, r3, #2
 342 021c 9021     		mov	r1, #144
 343 021e 4900     		lsl	r1, r1, #1
 344 0220 7918     		add	r1, r7, r1
 345 0222 0A60     		str	r2, [r1]
 346 0224 E622     		mov	r2, #230
 347 0226 BA18     		add	r2, r7, r2
 348 0228 1288     		ldrh	r2, [r2]
 349 022a 1A80     		strh	r2, [r3]
 181:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 182:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Decrement the loop counter */
 183:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     k--;
 350              		.loc 1 183 0
 351 022c 7B1D     		add	r3, r7, #5
 352 022e FF33     		add	r3, r3, #255
 353 0230 1B68     		ldr	r3, [r3]
 354 0232 013B     		sub	r3, r3, #1
 355 0234 7A1D     		add	r2, r7, #5
 356 0236 FF32     		add	r2, r2, #255
 357 0238 1360     		str	r3, [r2]
 358              	.L6:
 176:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   {
 359              		.loc 1 176 0
 360 023a 7B1D     		add	r3, r7, #5
 361 023c FF33     		add	r3, r3, #255
 362 023e 1B68     		ldr	r3, [r3]
 363 0240 002B     		cmp	r3, #0
 364 0242 D8D1     		bne	.L7
 184:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   }
 185:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 186:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* Fill (srcBLen - 1u) zeros in scratch buffer */
 187:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   arm_fill_q15(0, pScr1, (srcBLen - 1u));
 365              		.loc 1 187 0
 366 0244 3A69     		ldr	r2, [r7, #16]
 367 0246 3B68     		ldr	r3, [r7]
 368 0248 013B     		sub	r3, r3, #1
 369 024a 0020     		mov	r0, #0
 370 024c 111C     		mov	r1, r2
 371 024e 1A1C     		mov	r2, r3
 372 0250 FFF7FEFF 		bl	arm_fill_q15
 188:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 189:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* Update temporary scratch pointer */
 190:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   pScr1 += (srcBLen - 1u);
 373              		.loc 1 190 0
 374 0254 3A69     		ldr	r2, [r7, #16]
 375 0256 3B68     		ldr	r3, [r7]
 376 0258 7649     		ldr	r1, .L67
 377 025a 8C46     		mov	ip, r1
 378 025c 6344     		add	r3, r3, ip
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 11


 379 025e 5B00     		lsl	r3, r3, #1
 380 0260 D318     		add	r3, r2, r3
 381 0262 3B61     		str	r3, [r7, #16]
 191:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 192:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* Copy (srcALen) samples in scratch buffer */
 193:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   k = srcALen >> 2u;
 382              		.loc 1 193 0
 383 0264 BB68     		ldr	r3, [r7, #8]
 384 0266 9B08     		lsr	r3, r3, #2
 385 0268 7A1D     		add	r2, r7, #5
 386 026a FF32     		add	r2, r2, #255
 387 026c 1360     		str	r3, [r2]
 194:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 195:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 196:Source\FilteringFunctions/arm_correlate_opt_q7.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
 197:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   while (k > 0u)
 388              		.loc 1 197 0
 389 026e 5AE0     		b	.L8
 390              	.L9:
 198:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   {
 199:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* copy second buffer in reversal manner */
 200:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) * pIn1++;
 391              		.loc 1 200 0
 392 0270 8E23     		mov	r3, #142
 393 0272 5B00     		lsl	r3, r3, #1
 394 0274 FB18     		add	r3, r7, r3
 395 0276 1B68     		ldr	r3, [r3]
 396 0278 5A1C     		add	r2, r3, #1
 397 027a 8E21     		mov	r1, #142
 398 027c 4900     		lsl	r1, r1, #1
 399 027e 7918     		add	r1, r7, r1
 400 0280 0A60     		str	r2, [r1]
 401 0282 1A78     		ldrb	r2, [r3]
 402 0284 E623     		mov	r3, #230
 403 0286 FB18     		add	r3, r7, r3
 404 0288 52B2     		sxtb	r2, r2
 405 028a 1A80     		strh	r2, [r3]
 201:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr1++ = x4;
 406              		.loc 1 201 0
 407 028c 3B69     		ldr	r3, [r7, #16]
 408 028e 9A1C     		add	r2, r3, #2
 409 0290 3A61     		str	r2, [r7, #16]
 410 0292 E622     		mov	r2, #230
 411 0294 BA18     		add	r2, r7, r2
 412 0296 1288     		ldrh	r2, [r2]
 413 0298 1A80     		strh	r2, [r3]
 202:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) * pIn1++;
 414              		.loc 1 202 0
 415 029a 8E23     		mov	r3, #142
 416 029c 5B00     		lsl	r3, r3, #1
 417 029e FB18     		add	r3, r7, r3
 418 02a0 1B68     		ldr	r3, [r3]
 419 02a2 5A1C     		add	r2, r3, #1
 420 02a4 8E21     		mov	r1, #142
 421 02a6 4900     		lsl	r1, r1, #1
 422 02a8 7918     		add	r1, r7, r1
 423 02aa 0A60     		str	r2, [r1]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 12


 424 02ac 1A78     		ldrb	r2, [r3]
 425 02ae E623     		mov	r3, #230
 426 02b0 FB18     		add	r3, r7, r3
 427 02b2 52B2     		sxtb	r2, r2
 428 02b4 1A80     		strh	r2, [r3]
 203:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr1++ = x4;
 429              		.loc 1 203 0
 430 02b6 3B69     		ldr	r3, [r7, #16]
 431 02b8 9A1C     		add	r2, r3, #2
 432 02ba 3A61     		str	r2, [r7, #16]
 433 02bc E622     		mov	r2, #230
 434 02be BA18     		add	r2, r7, r2
 435 02c0 1288     		ldrh	r2, [r2]
 436 02c2 1A80     		strh	r2, [r3]
 204:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) * pIn1++;
 437              		.loc 1 204 0
 438 02c4 8E23     		mov	r3, #142
 439 02c6 5B00     		lsl	r3, r3, #1
 440 02c8 FB18     		add	r3, r7, r3
 441 02ca 1B68     		ldr	r3, [r3]
 442 02cc 5A1C     		add	r2, r3, #1
 443 02ce 8E21     		mov	r1, #142
 444 02d0 4900     		lsl	r1, r1, #1
 445 02d2 7918     		add	r1, r7, r1
 446 02d4 0A60     		str	r2, [r1]
 447 02d6 1A78     		ldrb	r2, [r3]
 448 02d8 E623     		mov	r3, #230
 449 02da FB18     		add	r3, r7, r3
 450 02dc 52B2     		sxtb	r2, r2
 451 02de 1A80     		strh	r2, [r3]
 205:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr1++ = x4;
 452              		.loc 1 205 0
 453 02e0 3B69     		ldr	r3, [r7, #16]
 454 02e2 9A1C     		add	r2, r3, #2
 455 02e4 3A61     		str	r2, [r7, #16]
 456 02e6 E622     		mov	r2, #230
 457 02e8 BA18     		add	r2, r7, r2
 458 02ea 1288     		ldrh	r2, [r2]
 459 02ec 1A80     		strh	r2, [r3]
 206:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) * pIn1++;
 460              		.loc 1 206 0
 461 02ee 8E23     		mov	r3, #142
 462 02f0 5B00     		lsl	r3, r3, #1
 463 02f2 FB18     		add	r3, r7, r3
 464 02f4 1B68     		ldr	r3, [r3]
 465 02f6 5A1C     		add	r2, r3, #1
 466 02f8 8E21     		mov	r1, #142
 467 02fa 4900     		lsl	r1, r1, #1
 468 02fc 7918     		add	r1, r7, r1
 469 02fe 0A60     		str	r2, [r1]
 470 0300 1A78     		ldrb	r2, [r3]
 471 0302 E623     		mov	r3, #230
 472 0304 FB18     		add	r3, r7, r3
 473 0306 52B2     		sxtb	r2, r2
 474 0308 1A80     		strh	r2, [r3]
 207:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr1++ = x4;
 475              		.loc 1 207 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 13


 476 030a 3B69     		ldr	r3, [r7, #16]
 477 030c 9A1C     		add	r2, r3, #2
 478 030e 3A61     		str	r2, [r7, #16]
 479 0310 E622     		mov	r2, #230
 480 0312 BA18     		add	r2, r7, r2
 481 0314 1288     		ldrh	r2, [r2]
 482 0316 1A80     		strh	r2, [r3]
 208:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 209:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Decrement the loop counter */
 210:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     k--;
 483              		.loc 1 210 0
 484 0318 7B1D     		add	r3, r7, #5
 485 031a FF33     		add	r3, r3, #255
 486 031c 1B68     		ldr	r3, [r3]
 487 031e 013B     		sub	r3, r3, #1
 488 0320 7A1D     		add	r2, r7, #5
 489 0322 FF32     		add	r2, r2, #255
 490 0324 1360     		str	r3, [r2]
 491              	.L8:
 197:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   {
 492              		.loc 1 197 0
 493 0326 7B1D     		add	r3, r7, #5
 494 0328 FF33     		add	r3, r3, #255
 495 032a 1B68     		ldr	r3, [r3]
 496 032c 002B     		cmp	r3, #0
 497 032e 9FD1     		bne	.L9
 211:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   }
 212:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 213:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 214:Source\FilteringFunctions/arm_correlate_opt_q7.c ****    ** No loop unrolling is used. */
 215:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   k = srcALen % 0x4u;
 498              		.loc 1 215 0
 499 0330 BB68     		ldr	r3, [r7, #8]
 500 0332 0322     		mov	r2, #3
 501 0334 1340     		and	r3, r2
 502 0336 7A1D     		add	r2, r7, #5
 503 0338 FF32     		add	r2, r2, #255
 504 033a 1360     		str	r3, [r2]
 216:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 217:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   while (k > 0u)
 505              		.loc 1 217 0
 506 033c 1BE0     		b	.L10
 507              	.L11:
 218:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   {
 219:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* copy second buffer in reversal manner for remaining samples */
 220:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) * pIn1++;
 508              		.loc 1 220 0
 509 033e 8E23     		mov	r3, #142
 510 0340 5B00     		lsl	r3, r3, #1
 511 0342 FB18     		add	r3, r7, r3
 512 0344 1B68     		ldr	r3, [r3]
 513 0346 5A1C     		add	r2, r3, #1
 514 0348 8E21     		mov	r1, #142
 515 034a 4900     		lsl	r1, r1, #1
 516 034c 7918     		add	r1, r7, r1
 517 034e 0A60     		str	r2, [r1]
 518 0350 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 14


 519 0352 E623     		mov	r3, #230
 520 0354 FB18     		add	r3, r7, r3
 521 0356 52B2     		sxtb	r2, r2
 522 0358 1A80     		strh	r2, [r3]
 221:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr1++ = x4;
 523              		.loc 1 221 0
 524 035a 3B69     		ldr	r3, [r7, #16]
 525 035c 9A1C     		add	r2, r3, #2
 526 035e 3A61     		str	r2, [r7, #16]
 527 0360 E622     		mov	r2, #230
 528 0362 BA18     		add	r2, r7, r2
 529 0364 1288     		ldrh	r2, [r2]
 530 0366 1A80     		strh	r2, [r3]
 222:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 223:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Decrement the loop counter */
 224:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     k--;
 531              		.loc 1 224 0
 532 0368 7B1D     		add	r3, r7, #5
 533 036a FF33     		add	r3, r3, #255
 534 036c 1B68     		ldr	r3, [r3]
 535 036e 013B     		sub	r3, r3, #1
 536 0370 7A1D     		add	r2, r7, #5
 537 0372 FF32     		add	r2, r2, #255
 538 0374 1360     		str	r3, [r2]
 539              	.L10:
 217:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   {
 540              		.loc 1 217 0
 541 0376 7B1D     		add	r3, r7, #5
 542 0378 FF33     		add	r3, r3, #255
 543 037a 1B68     		ldr	r3, [r3]
 544 037c 002B     		cmp	r3, #0
 545 037e DED1     		bne	.L11
 225:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   }
 226:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 227:Source\FilteringFunctions/arm_correlate_opt_q7.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
 228:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 229:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* Fill (srcBLen - 1u) zeros at end of scratch buffer */
 230:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   arm_fill_q15(0, pScr1, (srcBLen - 1u));
 546              		.loc 1 230 0
 547 0380 3A69     		ldr	r2, [r7, #16]
 548 0382 3B68     		ldr	r3, [r7]
 549 0384 013B     		sub	r3, r3, #1
 550 0386 0020     		mov	r0, #0
 551 0388 111C     		mov	r1, r2
 552 038a 1A1C     		mov	r2, r3
 553 038c FFF7FEFF 		bl	arm_fill_q15
 231:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 232:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* Update pointer */
 233:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   pScr1 += (srcBLen - 1u);
 554              		.loc 1 233 0
 555 0390 3A69     		ldr	r2, [r7, #16]
 556 0392 3B68     		ldr	r3, [r7]
 557 0394 2749     		ldr	r1, .L67
 558 0396 8C46     		mov	ip, r1
 559 0398 6344     		add	r3, r3, ip
 560 039a 5B00     		lsl	r3, r3, #1
 561 039c D318     		add	r3, r2, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 15


 562 039e 3B61     		str	r3, [r7, #16]
 234:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 235:Source\FilteringFunctions/arm_correlate_opt_q7.c **** #else
 236:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 237:Source\FilteringFunctions/arm_correlate_opt_q7.c **** /* Apply loop unrolling and do 4 Copies simultaneously. */
 238:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   k = (srcBLen - 1u) >> 2u;
 239:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 240:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 241:Source\FilteringFunctions/arm_correlate_opt_q7.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
 242:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   while (k > 0u)
 243:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   {
 244:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* copy second buffer in reversal manner */
 245:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr1++ = 0;
 246:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr1++ = 0;
 247:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr1++ = 0;
 248:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr1++ = 0;
 249:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 250:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Decrement the loop counter */
 251:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     k--;
 252:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   }
 253:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 254:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 255:Source\FilteringFunctions/arm_correlate_opt_q7.c ****    ** No loop unrolling is used. */
 256:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   k = (srcBLen - 1u) % 0x4u;
 257:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 258:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   while (k > 0u)
 259:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   {
 260:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* copy second buffer in reversal manner for remaining samples */
 261:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr1++ = 0;
 262:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 263:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Decrement the loop counter */
 264:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     k--;
 265:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   }
 266:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 267:Source\FilteringFunctions/arm_correlate_opt_q7.c **** #endif	/*	#ifndef UNALIGNED_SUPPORT_DISABLE	*/
 268:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 269:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* Temporary pointer for second sequence */
 270:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   py = pScratch2;
 563              		.loc 1 270 0
 564 03a0 9C23     		mov	r3, #156
 565 03a2 5B00     		lsl	r3, r3, #1
 566 03a4 FB18     		add	r3, r7, r3
 567 03a6 1B68     		ldr	r3, [r3]
 568 03a8 E022     		mov	r2, #224
 569 03aa BA18     		add	r2, r7, r2
 570 03ac 1360     		str	r3, [r2]
 271:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 272:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* Initialization of pScr2 pointer */
 273:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   pScr2 = pScratch2;
 571              		.loc 1 273 0
 572 03ae 9C23     		mov	r3, #156
 573 03b0 5B00     		lsl	r3, r3, #1
 574 03b2 FB18     		add	r3, r7, r3
 575 03b4 1B68     		ldr	r3, [r3]
 576 03b6 9022     		mov	r2, #144
 577 03b8 5200     		lsl	r2, r2, #1
 578 03ba BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 16


 579 03bc 1360     		str	r3, [r2]
 274:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 275:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* Actual correlation process starts here */
 276:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   blkCnt = (srcALen + srcBLen - 1u) >> 2;
 580              		.loc 1 276 0
 581 03be BA68     		ldr	r2, [r7, #8]
 582 03c0 3B68     		ldr	r3, [r7]
 583 03c2 D318     		add	r3, r2, r3
 584 03c4 013B     		sub	r3, r3, #1
 585 03c6 9B08     		lsr	r3, r3, #2
 586 03c8 7A1C     		add	r2, r7, #1
 587 03ca FF32     		add	r2, r2, #255
 588 03cc 1360     		str	r3, [r2]
 277:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 278:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   while (blkCnt > 0)
 589              		.loc 1 278 0
 590 03ce A0E3     		b	.L12
 591              	.L49:
 279:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   {
 280:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Initialze temporary scratch pointer as scratch1 */
 281:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     pScr1 = pScratch1;
 592              		.loc 1 281 0
 593 03d0 9A23     		mov	r3, #154
 594 03d2 5B00     		lsl	r3, r3, #1
 595 03d4 FB18     		add	r3, r7, r3
 596 03d6 1B68     		ldr	r3, [r3]
 597 03d8 3B61     		str	r3, [r7, #16]
 282:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 283:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Clear Accumlators */
 284:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     acc0 = 0;
 598              		.loc 1 284 0
 599 03da 0023     		mov	r3, #0
 600 03dc 8A22     		mov	r2, #138
 601 03de 5200     		lsl	r2, r2, #1
 602 03e0 BA18     		add	r2, r7, r2
 603 03e2 1360     		str	r3, [r2]
 285:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     acc1 = 0;
 604              		.loc 1 285 0
 605 03e4 0023     		mov	r3, #0
 606 03e6 8822     		mov	r2, #136
 607 03e8 5200     		lsl	r2, r2, #1
 608 03ea BA18     		add	r2, r7, r2
 609 03ec 1360     		str	r3, [r2]
 286:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     acc2 = 0;
 610              		.loc 1 286 0
 611 03ee 0023     		mov	r3, #0
 612 03f0 8622     		mov	r2, #134
 613 03f2 5200     		lsl	r2, r2, #1
 614 03f4 BA18     		add	r2, r7, r2
 615 03f6 1360     		str	r3, [r2]
 287:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     acc3 = 0;
 616              		.loc 1 287 0
 617 03f8 0023     		mov	r3, #0
 618 03fa 8422     		mov	r2, #132
 619 03fc 5200     		lsl	r2, r2, #1
 620 03fe BA18     		add	r2, r7, r2
 621 0400 1360     		str	r3, [r2]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 17


 288:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 289:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Read two samples from scratch1 buffer */
 290:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     x1 = *__SIMD32(pScr1)++;
 622              		.loc 1 290 0
 623 0402 1023     		mov	r3, #16
 624 0404 FB18     		add	r3, r7, r3
 625 0406 1A68     		ldr	r2, [r3]
 626 0408 111D     		add	r1, r2, #4
 627 040a 1960     		str	r1, [r3]
 628 040c 1368     		ldr	r3, [r2]
 629 040e F422     		mov	r2, #244
 630 0410 BA18     		add	r2, r7, r2
 631 0412 1360     		str	r3, [r2]
 291:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 292:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Read next two samples from scratch1 buffer */
 293:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     x2 = *__SIMD32(pScr1)++;
 632              		.loc 1 293 0
 633 0414 1023     		mov	r3, #16
 634 0416 FB18     		add	r3, r7, r3
 635 0418 1A68     		ldr	r2, [r3]
 636 041a 111D     		add	r1, r2, #4
 637 041c 1960     		str	r1, [r3]
 638 041e 1368     		ldr	r3, [r2]
 639 0420 F022     		mov	r2, #240
 640 0422 BA18     		add	r2, r7, r2
 641 0424 1360     		str	r3, [r2]
 294:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 295:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     tapCnt = (srcBLen) >> 2u;
 642              		.loc 1 295 0
 643 0426 3B68     		ldr	r3, [r7]
 644 0428 9B08     		lsr	r3, r3, #2
 645 042a F822     		mov	r2, #248
 646 042c BA18     		add	r2, r7, r2
 647 042e 1360     		str	r3, [r2]
 296:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 297:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     while (tapCnt > 0u)
 648              		.loc 1 297 0
 649 0430 D4E1     		b	.L13
 650              	.L68:
 651 0432 C046     		.align	2
 652              	.L67:
 653 0434 FFFFFF7F 		.word	2147483647
 654              	.L22:
 298:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     {
 299:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 300:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       /* Read four samples from smaller buffer */
 301:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       y1 = _SIMD32_OFFSET(pScr2);
 655              		.loc 1 301 0
 656 0438 9023     		mov	r3, #144
 657 043a 5B00     		lsl	r3, r3, #1
 658 043c FB18     		add	r3, r7, r3
 659 043e 1B68     		ldr	r3, [r3]
 660 0440 1B68     		ldr	r3, [r3]
 661 0442 DC22     		mov	r2, #220
 662 0444 BA18     		add	r2, r7, r2
 663 0446 1360     		str	r3, [r2]
 302:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 18


 303:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       /* multiply and accumlate */
 304:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       acc0 = __SMLAD(x1, y1, acc0);
 664              		.loc 1 304 0
 665 0448 F423     		mov	r3, #244
 666 044a FB18     		add	r3, r7, r3
 667 044c 1968     		ldr	r1, [r3]
 668 044e DC23     		mov	r3, #220
 669 0450 FB18     		add	r3, r7, r3
 670 0452 1A68     		ldr	r2, [r3]
 671 0454 8A23     		mov	r3, #138
 672 0456 5B00     		lsl	r3, r3, #1
 673 0458 FB18     		add	r3, r7, r3
 674 045a 1B68     		ldr	r3, [r3]
 675 045c D420     		mov	r0, #212
 676 045e 3818     		add	r0, r7, r0
 677 0460 0160     		str	r1, [r0]
 678 0462 D021     		mov	r1, #208
 679 0464 7918     		add	r1, r7, r1
 680 0466 0A60     		str	r2, [r1]
 681 0468 CC22     		mov	r2, #204
 682 046a BA18     		add	r2, r7, r2
 683 046c 1360     		str	r3, [r2]
 684              	.LBB28:
 685              	.LBB29:
 686              		.file 2 ".\\Include/arm_math.h"
   1:.\Include/arm_math.h **** /* ----------------------------------------------------------------------
   2:.\Include/arm_math.h ****  * Project:      CMSIS DSP Library
   3:.\Include/arm_math.h ****  * Title:        arm_math.h
   4:.\Include/arm_math.h ****  * Description:  Public header file for CMSIS DSP Library
   5:.\Include/arm_math.h ****  *
   6:.\Include/arm_math.h ****  * $Date:        27. January 2017
   7:.\Include/arm_math.h ****  * $Revision:    V.1.5.1
   8:.\Include/arm_math.h ****  *
   9:.\Include/arm_math.h ****  * Target Processor: Cortex-M cores
  10:.\Include/arm_math.h ****  * -------------------------------------------------------------------- */
  11:.\Include/arm_math.h **** /*
  12:.\Include/arm_math.h ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:.\Include/arm_math.h ****  *
  14:.\Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  15:.\Include/arm_math.h ****  *
  16:.\Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.\Include/arm_math.h ****  * not use this file except in compliance with the License.
  18:.\Include/arm_math.h ****  * You may obtain a copy of the License at
  19:.\Include/arm_math.h ****  *
  20:.\Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  21:.\Include/arm_math.h ****  *
  22:.\Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  23:.\Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.\Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.\Include/arm_math.h ****  * See the License for the specific language governing permissions and
  26:.\Include/arm_math.h ****  * limitations under the License.
  27:.\Include/arm_math.h ****  */
  28:.\Include/arm_math.h **** 
  29:.\Include/arm_math.h **** /**
  30:.\Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  31:.\Include/arm_math.h ****    *
  32:.\Include/arm_math.h ****    * Introduction
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 19


  33:.\Include/arm_math.h ****    * ------------
  34:.\Include/arm_math.h ****    *
  35:.\Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  36:.\Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  37:.\Include/arm_math.h ****    *
  38:.\Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  39:.\Include/arm_math.h ****    * - Basic math functions
  40:.\Include/arm_math.h ****    * - Fast math functions
  41:.\Include/arm_math.h ****    * - Complex math functions
  42:.\Include/arm_math.h ****    * - Filters
  43:.\Include/arm_math.h ****    * - Matrix functions
  44:.\Include/arm_math.h ****    * - Transforms
  45:.\Include/arm_math.h ****    * - Motor control functions
  46:.\Include/arm_math.h ****    * - Statistical functions
  47:.\Include/arm_math.h ****    * - Support functions
  48:.\Include/arm_math.h ****    * - Interpolation functions
  49:.\Include/arm_math.h ****    *
  50:.\Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  51:.\Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  52:.\Include/arm_math.h ****    *
  53:.\Include/arm_math.h ****    * Using the Library
  54:.\Include/arm_math.h ****    * ------------
  55:.\Include/arm_math.h ****    *
  56:.\Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  57:.\Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  58:.\Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  59:.\Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  60:.\Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  61:.\Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  62:.\Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  63:.\Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  64:.\Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  65:.\Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  66:.\Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  67:.\Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  68:.\Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  69:.\Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  70:.\Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  71:.\Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (ARMv8M Baseline, Little endian)
  72:.\Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (ARMv8M Mainline, Little endian)
  73:.\Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (ARMv8M Mainline, Little endian, Single Precision Floating Point U
  74:.\Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (ARMv8M Mainline, Little endian, DSP instructions)
  75:.\Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (ARMv8M Mainline, Little endian, DSP instructions, Single Precisi
  76:.\Include/arm_math.h ****    *
  77:.\Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  78:.\Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  79:.\Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  80:.\Include/arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  81:.\Include/arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  82:.\Include/arm_math.h ****    * For ARMv8M cores define pre processor MACRO ARM_MATH_ARMV8MBL or ARM_MATH_ARMV8MML.
  83:.\Include/arm_math.h ****    * Set Pre processor MACRO __DSP_PRESENT if ARMv8M Mainline core supports DSP instructions.
  84:.\Include/arm_math.h ****    * 
  85:.\Include/arm_math.h ****    *
  86:.\Include/arm_math.h ****    * Examples
  87:.\Include/arm_math.h ****    * --------
  88:.\Include/arm_math.h ****    *
  89:.\Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 20


  90:.\Include/arm_math.h ****    *
  91:.\Include/arm_math.h ****    * Toolchain Support
  92:.\Include/arm_math.h ****    * ------------
  93:.\Include/arm_math.h ****    *
  94:.\Include/arm_math.h ****    * The library has been developed and tested with MDK-ARM version 5.14.0.0
  95:.\Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  96:.\Include/arm_math.h ****    *
  97:.\Include/arm_math.h ****    * Building the Library
  98:.\Include/arm_math.h ****    * ------------
  99:.\Include/arm_math.h ****    *
 100:.\Include/arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 101:.\Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
 102:.\Include/arm_math.h ****    *
 103:.\Include/arm_math.h ****    *
 104:.\Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 105:.\Include/arm_math.h ****    *
 106:.\Include/arm_math.h ****    * Pre-processor Macros
 107:.\Include/arm_math.h ****    * ------------
 108:.\Include/arm_math.h ****    *
 109:.\Include/arm_math.h ****    * Each library project have differant pre-processor macros.
 110:.\Include/arm_math.h ****    *
 111:.\Include/arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 112:.\Include/arm_math.h ****    *
 113:.\Include/arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 114:.\Include/arm_math.h ****    *
 115:.\Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 116:.\Include/arm_math.h ****    *
 117:.\Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 118:.\Include/arm_math.h ****    *
 119:.\Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 120:.\Include/arm_math.h ****    *
 121:.\Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 122:.\Include/arm_math.h ****    *
 123:.\Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 124:.\Include/arm_math.h ****    *
 125:.\Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 126:.\Include/arm_math.h ****    *
 127:.\Include/arm_math.h ****    * - ARM_MATH_CMx:
 128:.\Include/arm_math.h ****    *
 129:.\Include/arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 130:.\Include/arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 131:.\Include/arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 132:.\Include/arm_math.h ****    *
 133:.\Include/arm_math.h ****    * - ARM_MATH_ARMV8MxL:
 134:.\Include/arm_math.h ****    *
 135:.\Include/arm_math.h ****    * Define macro ARM_MATH_ARMV8MBL for building the library on ARMv8M Baseline target, ARM_MATH_AR
 136:.\Include/arm_math.h ****    * on ARMv8M Mainline target.
 137:.\Include/arm_math.h ****    *
 138:.\Include/arm_math.h ****    * - __FPU_PRESENT:
 139:.\Include/arm_math.h ****    *
 140:.\Include/arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 141:.\Include/arm_math.h ****    *
 142:.\Include/arm_math.h ****    * - __DSP_PRESENT:
 143:.\Include/arm_math.h ****    *
 144:.\Include/arm_math.h ****    * Initialize macro __DSP_PRESENT = 1 when ARMv8M Mainline core supports DSP instructions.
 145:.\Include/arm_math.h ****    *
 146:.\Include/arm_math.h ****    * <hr>
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 21


 147:.\Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 148:.\Include/arm_math.h ****    * -----------------------------
 149:.\Include/arm_math.h ****    *
 150:.\Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 151:.\Include/arm_math.h ****    * |File/Folder                   |Content                                                       
 152:.\Include/arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 153:.\Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 154:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 155:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 156:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 157:.\Include/arm_math.h ****    *
 158:.\Include/arm_math.h ****    * <hr>
 159:.\Include/arm_math.h ****    * Revision History of CMSIS-DSP
 160:.\Include/arm_math.h ****    * ------------
 161:.\Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 162:.\Include/arm_math.h ****    *
 163:.\Include/arm_math.h ****    * Copyright Notice
 164:.\Include/arm_math.h ****    * ------------
 165:.\Include/arm_math.h ****    *
 166:.\Include/arm_math.h ****    * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
 167:.\Include/arm_math.h ****    */
 168:.\Include/arm_math.h **** 
 169:.\Include/arm_math.h **** 
 170:.\Include/arm_math.h **** /**
 171:.\Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 172:.\Include/arm_math.h ****  */
 173:.\Include/arm_math.h **** 
 174:.\Include/arm_math.h **** /**
 175:.\Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 176:.\Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 177:.\Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 178:.\Include/arm_math.h ****  * operate on individual values and not arrays.
 179:.\Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 180:.\Include/arm_math.h ****  *
 181:.\Include/arm_math.h ****  */
 182:.\Include/arm_math.h **** 
 183:.\Include/arm_math.h **** /**
 184:.\Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 185:.\Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 186:.\Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 187:.\Include/arm_math.h ****  * (real, imag, real, imag, ...).
 188:.\Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 189:.\Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 190:.\Include/arm_math.h ****  * real values.
 191:.\Include/arm_math.h ****  */
 192:.\Include/arm_math.h **** 
 193:.\Include/arm_math.h **** /**
 194:.\Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 195:.\Include/arm_math.h ****  */
 196:.\Include/arm_math.h **** 
 197:.\Include/arm_math.h **** /**
 198:.\Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 199:.\Include/arm_math.h ****  *
 200:.\Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 201:.\Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 202:.\Include/arm_math.h ****  * the type
 203:.\Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 22


 204:.\Include/arm_math.h ****  * below:
 205:.\Include/arm_math.h ****  * <pre>
 206:.\Include/arm_math.h ****  *     typedef struct
 207:.\Include/arm_math.h ****  *     {
 208:.\Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 209:.\Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 210:.\Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 211:.\Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 212:.\Include/arm_math.h ****  * </pre>
 213:.\Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 214:.\Include/arm_math.h ****  *
 215:.\Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 216:.\Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 217:.\Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 218:.\Include/arm_math.h ****  * matrix element (i, j) is stored at:
 219:.\Include/arm_math.h ****  * <pre>
 220:.\Include/arm_math.h ****  *     pData[i*numCols + j]
 221:.\Include/arm_math.h ****  * </pre>
 222:.\Include/arm_math.h ****  *
 223:.\Include/arm_math.h ****  * \par Init Functions
 224:.\Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 225:.\Include/arm_math.h ****  * data structure.
 226:.\Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 227:.\Include/arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 228:.\Include/arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 229:.\Include/arm_math.h ****  *
 230:.\Include/arm_math.h ****  * \par
 231:.\Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 232:.\Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 233:.\Include/arm_math.h ****  * To place the instance structure in a const data
 234:.\Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 235:.\Include/arm_math.h ****  * <pre>
 236:.\Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 237:.\Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 238:.\Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 239:.\Include/arm_math.h ****  * </pre>
 240:.\Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 241:.\Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 242:.\Include/arm_math.h ****  * data array.
 243:.\Include/arm_math.h ****  *
 244:.\Include/arm_math.h ****  * \par Size Checking
 245:.\Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 246:.\Include/arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 247:.\Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 248:.\Include/arm_math.h ****  * columns.  If the size check fails the functions return:
 249:.\Include/arm_math.h ****  * <pre>
 250:.\Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 251:.\Include/arm_math.h ****  * </pre>
 252:.\Include/arm_math.h ****  * Otherwise the functions return
 253:.\Include/arm_math.h ****  * <pre>
 254:.\Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 255:.\Include/arm_math.h ****  * </pre>
 256:.\Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 257:.\Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 258:.\Include/arm_math.h ****  * <pre>
 259:.\Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 260:.\Include/arm_math.h ****  * </pre>
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 23


 261:.\Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 262:.\Include/arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 263:.\Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 264:.\Include/arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
 265:.\Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 266:.\Include/arm_math.h ****  */
 267:.\Include/arm_math.h **** 
 268:.\Include/arm_math.h **** /**
 269:.\Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 270:.\Include/arm_math.h ****  */
 271:.\Include/arm_math.h **** 
 272:.\Include/arm_math.h **** /**
 273:.\Include/arm_math.h ****  * @defgroup groupController Controller Functions
 274:.\Include/arm_math.h ****  */
 275:.\Include/arm_math.h **** 
 276:.\Include/arm_math.h **** /**
 277:.\Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 278:.\Include/arm_math.h ****  */
 279:.\Include/arm_math.h **** /**
 280:.\Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 281:.\Include/arm_math.h ****  */
 282:.\Include/arm_math.h **** 
 283:.\Include/arm_math.h **** /**
 284:.\Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 285:.\Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 286:.\Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 287:.\Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 288:.\Include/arm_math.h ****  */
 289:.\Include/arm_math.h **** 
 290:.\Include/arm_math.h **** /**
 291:.\Include/arm_math.h ****  * @defgroup groupExamples Examples
 292:.\Include/arm_math.h ****  */
 293:.\Include/arm_math.h **** #ifndef _ARM_MATH_H
 294:.\Include/arm_math.h **** #define _ARM_MATH_H
 295:.\Include/arm_math.h **** 
 296:.\Include/arm_math.h **** /* ignore some GCC warnings */
 297:.\Include/arm_math.h **** #if defined ( __GNUC__ )
 298:.\Include/arm_math.h **** #pragma GCC diagnostic push
 299:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 300:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 301:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 302:.\Include/arm_math.h **** #endif
 303:.\Include/arm_math.h **** 
 304:.\Include/arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 305:.\Include/arm_math.h **** 
 306:.\Include/arm_math.h **** #if defined(ARM_MATH_CM7)
 307:.\Include/arm_math.h ****   #include "core_cm7.h"
 308:.\Include/arm_math.h ****   #define ARM_MATH_DSP
 309:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM4)
 310:.\Include/arm_math.h ****   #include "core_cm4.h"
 311:.\Include/arm_math.h ****   #define ARM_MATH_DSP
 312:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM3)
 313:.\Include/arm_math.h ****   #include "core_cm3.h"
 314:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM0)
 315:.\Include/arm_math.h ****   #include "core_cm0.h"
 316:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 317:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 24


 318:.\Include/arm_math.h ****   #include "core_cm0plus.h"
 319:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 320:.\Include/arm_math.h **** #elif defined (ARM_MATH_ARMV8MBL)
 321:.\Include/arm_math.h ****   #include "core_armv8mbl.h"
 322:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 323:.\Include/arm_math.h **** #elif defined (ARM_MATH_ARMV8MML)
 324:.\Include/arm_math.h ****   #include "core_armv8mml.h"
 325:.\Include/arm_math.h ****   #if (defined (__DSP_PRESENT) && (__DSP_PRESENT == 1))
 326:.\Include/arm_math.h ****     #define ARM_MATH_DSP
 327:.\Include/arm_math.h ****   #endif
 328:.\Include/arm_math.h **** #else
 329:.\Include/arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 330:.\Include/arm_math.h **** #endif
 331:.\Include/arm_math.h **** 
 332:.\Include/arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 333:.\Include/arm_math.h **** #include "string.h"
 334:.\Include/arm_math.h **** #include "math.h"
 335:.\Include/arm_math.h **** #ifdef   __cplusplus
 336:.\Include/arm_math.h **** extern "C"
 337:.\Include/arm_math.h **** {
 338:.\Include/arm_math.h **** #endif
 339:.\Include/arm_math.h **** 
 340:.\Include/arm_math.h **** 
 341:.\Include/arm_math.h ****   /**
 342:.\Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:.\Include/arm_math.h ****    */
 344:.\Include/arm_math.h **** 
 345:.\Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:.\Include/arm_math.h **** #define DELTA_Q15          0x5
 347:.\Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:.\Include/arm_math.h **** #ifndef PI
 349:.\Include/arm_math.h ****   #define PI               3.14159265358979f
 350:.\Include/arm_math.h **** #endif
 351:.\Include/arm_math.h **** 
 352:.\Include/arm_math.h ****   /**
 353:.\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:.\Include/arm_math.h ****    */
 355:.\Include/arm_math.h **** 
 356:.\Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:.\Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:.\Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:.\Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:.\Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:.\Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:.\Include/arm_math.h **** 
 363:.\Include/arm_math.h ****   /**
 364:.\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:.\Include/arm_math.h ****    */
 366:.\Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:.\Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:.\Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:.\Include/arm_math.h **** 
 370:.\Include/arm_math.h ****   /**
 371:.\Include/arm_math.h ****    * @brief Macro for Unaligned Support
 372:.\Include/arm_math.h ****    */
 373:.\Include/arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 374:.\Include/arm_math.h ****     #define ALIGN4
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 25


 375:.\Include/arm_math.h **** #else
 376:.\Include/arm_math.h ****   #if defined  (__GNUC__)
 377:.\Include/arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 378:.\Include/arm_math.h ****   #else
 379:.\Include/arm_math.h ****     #define ALIGN4 __align(4)
 380:.\Include/arm_math.h ****   #endif
 381:.\Include/arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 382:.\Include/arm_math.h **** 
 383:.\Include/arm_math.h ****   /**
 384:.\Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 385:.\Include/arm_math.h ****    */
 386:.\Include/arm_math.h **** 
 387:.\Include/arm_math.h ****   typedef enum
 388:.\Include/arm_math.h ****   {
 389:.\Include/arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 390:.\Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 391:.\Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 392:.\Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 393:.\Include/arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 394:.\Include/arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 395:.\Include/arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 396:.\Include/arm_math.h ****   } arm_status;
 397:.\Include/arm_math.h **** 
 398:.\Include/arm_math.h ****   /**
 399:.\Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 400:.\Include/arm_math.h ****    */
 401:.\Include/arm_math.h ****   typedef int8_t q7_t;
 402:.\Include/arm_math.h **** 
 403:.\Include/arm_math.h ****   /**
 404:.\Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 405:.\Include/arm_math.h ****    */
 406:.\Include/arm_math.h ****   typedef int16_t q15_t;
 407:.\Include/arm_math.h **** 
 408:.\Include/arm_math.h ****   /**
 409:.\Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 410:.\Include/arm_math.h ****    */
 411:.\Include/arm_math.h ****   typedef int32_t q31_t;
 412:.\Include/arm_math.h **** 
 413:.\Include/arm_math.h ****   /**
 414:.\Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 415:.\Include/arm_math.h ****    */
 416:.\Include/arm_math.h ****   typedef int64_t q63_t;
 417:.\Include/arm_math.h **** 
 418:.\Include/arm_math.h ****   /**
 419:.\Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 420:.\Include/arm_math.h ****    */
 421:.\Include/arm_math.h ****   typedef float float32_t;
 422:.\Include/arm_math.h **** 
 423:.\Include/arm_math.h ****   /**
 424:.\Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 425:.\Include/arm_math.h ****    */
 426:.\Include/arm_math.h ****   typedef double float64_t;
 427:.\Include/arm_math.h **** 
 428:.\Include/arm_math.h ****   /**
 429:.\Include/arm_math.h ****    * @brief definition to read/write two 16 bit values.
 430:.\Include/arm_math.h ****    */
 431:.\Include/arm_math.h **** #if   defined ( __CC_ARM )
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 26


 432:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 433:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 434:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 435:.\Include/arm_math.h **** 
 436:.\Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 437:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 438:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 439:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 440:.\Include/arm_math.h **** 
 441:.\Include/arm_math.h **** #elif defined ( __GNUC__ )
 442:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 443:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 444:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 445:.\Include/arm_math.h **** 
 446:.\Include/arm_math.h **** #elif defined ( __ICCARM__ )
 447:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 448:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 449:.\Include/arm_math.h ****   #define CMSIS_INLINE
 450:.\Include/arm_math.h **** 
 451:.\Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 452:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 453:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 454:.\Include/arm_math.h ****   #define CMSIS_INLINE
 455:.\Include/arm_math.h **** 
 456:.\Include/arm_math.h **** #elif defined ( __CSMC__ )
 457:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 458:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 459:.\Include/arm_math.h ****   #define CMSIS_INLINE
 460:.\Include/arm_math.h **** 
 461:.\Include/arm_math.h **** #elif defined ( __TASKING__ )
 462:.\Include/arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 463:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 464:.\Include/arm_math.h ****   #define CMSIS_INLINE
 465:.\Include/arm_math.h **** 
 466:.\Include/arm_math.h **** #else
 467:.\Include/arm_math.h ****   #error Unknown compiler
 468:.\Include/arm_math.h **** #endif
 469:.\Include/arm_math.h **** 
 470:.\Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 471:.\Include/arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 472:.\Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 473:.\Include/arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 474:.\Include/arm_math.h **** 
 475:.\Include/arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 476:.\Include/arm_math.h **** #if !defined (ARM_MATH_DSP)
 477:.\Include/arm_math.h ****   /**
 478:.\Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 479:.\Include/arm_math.h ****    */
 480:.\Include/arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 481:.\Include/arm_math.h ****                                     (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 482:.\Include/arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 483:.\Include/arm_math.h ****                                     (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 484:.\Include/arm_math.h **** 
 485:.\Include/arm_math.h **** /* #endif // defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 486:.\Include/arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
 487:.\Include/arm_math.h **** 
 488:.\Include/arm_math.h ****    /**
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 27


 489:.\Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
 490:.\Include/arm_math.h ****    */
 491:.\Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 492:.\Include/arm_math.h **** 
 493:.\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 494:.\Include/arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 495:.\Include/arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 496:.\Include/arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 497:.\Include/arm_math.h **** #else
 498:.\Include/arm_math.h **** 
 499:.\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 500:.\Include/arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 501:.\Include/arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 502:.\Include/arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 503:.\Include/arm_math.h **** 
 504:.\Include/arm_math.h **** #endif
 505:.\Include/arm_math.h **** 
 506:.\Include/arm_math.h **** 
 507:.\Include/arm_math.h ****   /**
 508:.\Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 509:.\Include/arm_math.h ****    */
 510:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t clip_q63_to_q31(
 511:.\Include/arm_math.h ****   q63_t x)
 512:.\Include/arm_math.h ****   {
 513:.\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 514:.\Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 515:.\Include/arm_math.h ****   }
 516:.\Include/arm_math.h **** 
 517:.\Include/arm_math.h ****   /**
 518:.\Include/arm_math.h ****    * @brief Clips Q63 to Q15 values.
 519:.\Include/arm_math.h ****    */
 520:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q63_to_q15(
 521:.\Include/arm_math.h ****   q63_t x)
 522:.\Include/arm_math.h ****   {
 523:.\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 524:.\Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 525:.\Include/arm_math.h ****   }
 526:.\Include/arm_math.h **** 
 527:.\Include/arm_math.h ****   /**
 528:.\Include/arm_math.h ****    * @brief Clips Q31 to Q7 values.
 529:.\Include/arm_math.h ****    */
 530:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q7_t clip_q31_to_q7(
 531:.\Include/arm_math.h ****   q31_t x)
 532:.\Include/arm_math.h ****   {
 533:.\Include/arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 534:.\Include/arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 535:.\Include/arm_math.h ****   }
 536:.\Include/arm_math.h **** 
 537:.\Include/arm_math.h ****   /**
 538:.\Include/arm_math.h ****    * @brief Clips Q31 to Q15 values.
 539:.\Include/arm_math.h ****    */
 540:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q31_to_q15(
 541:.\Include/arm_math.h ****   q31_t x)
 542:.\Include/arm_math.h ****   {
 543:.\Include/arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 544:.\Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 545:.\Include/arm_math.h ****   }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 28


 546:.\Include/arm_math.h **** 
 547:.\Include/arm_math.h ****   /**
 548:.\Include/arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 549:.\Include/arm_math.h ****    */
 550:.\Include/arm_math.h **** 
 551:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q63_t mult32x64(
 552:.\Include/arm_math.h ****   q63_t x,
 553:.\Include/arm_math.h ****   q31_t y)
 554:.\Include/arm_math.h ****   {
 555:.\Include/arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 556:.\Include/arm_math.h ****             (((q63_t) (x >> 32) * y)));
 557:.\Include/arm_math.h ****   }
 558:.\Include/arm_math.h **** 
 559:.\Include/arm_math.h **** /*
 560:.\Include/arm_math.h ****   #if defined (ARM_MATH_CM0_FAMILY) && defined ( __CC_ARM   )
 561:.\Include/arm_math.h ****   #define __CLZ __clz
 562:.\Include/arm_math.h ****   #endif
 563:.\Include/arm_math.h ****  */
 564:.\Include/arm_math.h **** /* note: function can be removed when all toolchain support __CLZ for Cortex-M0 */
 565:.\Include/arm_math.h **** #if defined (ARM_MATH_CM0_FAMILY) && ((defined (__ICCARM__))  )
 566:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 567:.\Include/arm_math.h ****   q31_t data);
 568:.\Include/arm_math.h **** 
 569:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 570:.\Include/arm_math.h ****   q31_t data)
 571:.\Include/arm_math.h ****   {
 572:.\Include/arm_math.h ****     uint32_t count = 0;
 573:.\Include/arm_math.h ****     uint32_t mask = 0x80000000;
 574:.\Include/arm_math.h **** 
 575:.\Include/arm_math.h ****     while ((data & mask) == 0)
 576:.\Include/arm_math.h ****     {
 577:.\Include/arm_math.h ****       count += 1u;
 578:.\Include/arm_math.h ****       mask = mask >> 1u;
 579:.\Include/arm_math.h ****     }
 580:.\Include/arm_math.h **** 
 581:.\Include/arm_math.h ****     return (count);
 582:.\Include/arm_math.h ****   }
 583:.\Include/arm_math.h **** #endif
 584:.\Include/arm_math.h **** 
 585:.\Include/arm_math.h ****   /**
 586:.\Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 587:.\Include/arm_math.h ****    */
 588:.\Include/arm_math.h **** 
 589:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q31(
 590:.\Include/arm_math.h ****   q31_t in,
 591:.\Include/arm_math.h ****   q31_t * dst,
 592:.\Include/arm_math.h ****   q31_t * pRecipTable)
 593:.\Include/arm_math.h ****   {
 594:.\Include/arm_math.h ****     q31_t out;
 595:.\Include/arm_math.h ****     uint32_t tempVal;
 596:.\Include/arm_math.h ****     uint32_t index, i;
 597:.\Include/arm_math.h ****     uint32_t signBits;
 598:.\Include/arm_math.h **** 
 599:.\Include/arm_math.h ****     if (in > 0)
 600:.\Include/arm_math.h ****     {
 601:.\Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 602:.\Include/arm_math.h ****     }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 29


 603:.\Include/arm_math.h ****     else
 604:.\Include/arm_math.h ****     {
 605:.\Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 606:.\Include/arm_math.h ****     }
 607:.\Include/arm_math.h **** 
 608:.\Include/arm_math.h ****     /* Convert input sample to 1.31 format */
 609:.\Include/arm_math.h ****     in = (in << signBits);
 610:.\Include/arm_math.h **** 
 611:.\Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 612:.\Include/arm_math.h ****     index = (uint32_t)(in >> 24);
 613:.\Include/arm_math.h ****     index = (index & INDEX_MASK);
 614:.\Include/arm_math.h **** 
 615:.\Include/arm_math.h ****     /* 1.31 with exp 1 */
 616:.\Include/arm_math.h ****     out = pRecipTable[index];
 617:.\Include/arm_math.h **** 
 618:.\Include/arm_math.h ****     /* calculation of reciprocal value */
 619:.\Include/arm_math.h ****     /* running approximation for two iterations */
 620:.\Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 621:.\Include/arm_math.h ****     {
 622:.\Include/arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 623:.\Include/arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 624:.\Include/arm_math.h ****       /*      1.31 with exp 1 */
 625:.\Include/arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 626:.\Include/arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 627:.\Include/arm_math.h ****     }
 628:.\Include/arm_math.h **** 
 629:.\Include/arm_math.h ****     /* write output */
 630:.\Include/arm_math.h ****     *dst = out;
 631:.\Include/arm_math.h **** 
 632:.\Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 633:.\Include/arm_math.h ****     return (signBits + 1u);
 634:.\Include/arm_math.h ****   }
 635:.\Include/arm_math.h **** 
 636:.\Include/arm_math.h **** 
 637:.\Include/arm_math.h ****   /**
 638:.\Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
 639:.\Include/arm_math.h ****    */
 640:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q15(
 641:.\Include/arm_math.h ****   q15_t in,
 642:.\Include/arm_math.h ****   q15_t * dst,
 643:.\Include/arm_math.h ****   q15_t * pRecipTable)
 644:.\Include/arm_math.h ****   {
 645:.\Include/arm_math.h ****     q15_t out = 0;
 646:.\Include/arm_math.h ****     uint32_t tempVal = 0;
 647:.\Include/arm_math.h ****     uint32_t index = 0, i = 0;
 648:.\Include/arm_math.h ****     uint32_t signBits = 0;
 649:.\Include/arm_math.h **** 
 650:.\Include/arm_math.h ****     if (in > 0)
 651:.\Include/arm_math.h ****     {
 652:.\Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
 653:.\Include/arm_math.h ****     }
 654:.\Include/arm_math.h ****     else
 655:.\Include/arm_math.h ****     {
 656:.\Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
 657:.\Include/arm_math.h ****     }
 658:.\Include/arm_math.h **** 
 659:.\Include/arm_math.h ****     /* Convert input sample to 1.15 format */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 30


 660:.\Include/arm_math.h ****     in = (in << signBits);
 661:.\Include/arm_math.h **** 
 662:.\Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 663:.\Include/arm_math.h ****     index = (uint32_t)(in >>  8);
 664:.\Include/arm_math.h ****     index = (index & INDEX_MASK);
 665:.\Include/arm_math.h **** 
 666:.\Include/arm_math.h ****     /*      1.15 with exp 1  */
 667:.\Include/arm_math.h ****     out = pRecipTable[index];
 668:.\Include/arm_math.h **** 
 669:.\Include/arm_math.h ****     /* calculation of reciprocal value */
 670:.\Include/arm_math.h ****     /* running approximation for two iterations */
 671:.\Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 672:.\Include/arm_math.h ****     {
 673:.\Include/arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
 674:.\Include/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 675:.\Include/arm_math.h ****       /*      1.15 with exp 1 */
 676:.\Include/arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
 677:.\Include/arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
 678:.\Include/arm_math.h ****     }
 679:.\Include/arm_math.h **** 
 680:.\Include/arm_math.h ****     /* write output */
 681:.\Include/arm_math.h ****     *dst = out;
 682:.\Include/arm_math.h **** 
 683:.\Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 684:.\Include/arm_math.h ****     return (signBits + 1);
 685:.\Include/arm_math.h ****   }
 686:.\Include/arm_math.h **** 
 687:.\Include/arm_math.h **** 
 688:.\Include/arm_math.h ****   /*
 689:.\Include/arm_math.h ****    * @brief C custom defined intrinisic function for only M0 processors
 690:.\Include/arm_math.h ****    */
 691:.\Include/arm_math.h **** #if defined(ARM_MATH_CM0_FAMILY)
 692:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t __SSAT(
 693:.\Include/arm_math.h ****   q31_t x,
 694:.\Include/arm_math.h ****   uint32_t y)
 695:.\Include/arm_math.h ****   {
 696:.\Include/arm_math.h ****     int32_t posMax, negMin;
 697:.\Include/arm_math.h ****     uint32_t i;
 698:.\Include/arm_math.h **** 
 699:.\Include/arm_math.h ****     posMax = 1;
 700:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 701:.\Include/arm_math.h ****     {
 702:.\Include/arm_math.h ****       posMax = posMax * 2;
 703:.\Include/arm_math.h ****     }
 704:.\Include/arm_math.h **** 
 705:.\Include/arm_math.h ****     if (x > 0)
 706:.\Include/arm_math.h ****     {
 707:.\Include/arm_math.h ****       posMax = (posMax - 1);
 708:.\Include/arm_math.h **** 
 709:.\Include/arm_math.h ****       if (x > posMax)
 710:.\Include/arm_math.h ****       {
 711:.\Include/arm_math.h ****         x = posMax;
 712:.\Include/arm_math.h ****       }
 713:.\Include/arm_math.h ****     }
 714:.\Include/arm_math.h ****     else
 715:.\Include/arm_math.h ****     {
 716:.\Include/arm_math.h ****       negMin = -posMax;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 31


 717:.\Include/arm_math.h **** 
 718:.\Include/arm_math.h ****       if (x < negMin)
 719:.\Include/arm_math.h ****       {
 720:.\Include/arm_math.h ****         x = negMin;
 721:.\Include/arm_math.h ****       }
 722:.\Include/arm_math.h ****     }
 723:.\Include/arm_math.h ****     return (x);
 724:.\Include/arm_math.h ****   }
 725:.\Include/arm_math.h **** #endif /* end of ARM_MATH_CM0_FAMILY */
 726:.\Include/arm_math.h **** 
 727:.\Include/arm_math.h **** 
 728:.\Include/arm_math.h ****   /*
 729:.\Include/arm_math.h ****    * @brief C custom defined intrinsic function for M3 and M0 processors
 730:.\Include/arm_math.h ****    */
 731:.\Include/arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 732:.\Include/arm_math.h **** #if !defined (ARM_MATH_DSP)
 733:.\Include/arm_math.h **** 
 734:.\Include/arm_math.h ****   /*
 735:.\Include/arm_math.h ****    * @brief C custom defined QADD8 for M3 and M0 processors
 736:.\Include/arm_math.h ****    */
 737:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD8(
 738:.\Include/arm_math.h ****   uint32_t x,
 739:.\Include/arm_math.h ****   uint32_t y)
 740:.\Include/arm_math.h ****   {
 741:.\Include/arm_math.h ****     q31_t r, s, t, u;
 742:.\Include/arm_math.h **** 
 743:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) + (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 744:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) + (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 745:.\Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) + (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 746:.\Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) + (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 747:.\Include/arm_math.h **** 
 748:.\Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 749:.\Include/arm_math.h ****   }
 750:.\Include/arm_math.h **** 
 751:.\Include/arm_math.h **** 
 752:.\Include/arm_math.h ****   /*
 753:.\Include/arm_math.h ****    * @brief C custom defined QSUB8 for M3 and M0 processors
 754:.\Include/arm_math.h ****    */
 755:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB8(
 756:.\Include/arm_math.h ****   uint32_t x,
 757:.\Include/arm_math.h ****   uint32_t y)
 758:.\Include/arm_math.h ****   {
 759:.\Include/arm_math.h ****     q31_t r, s, t, u;
 760:.\Include/arm_math.h **** 
 761:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) - (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 762:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) - (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 763:.\Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) - (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 764:.\Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) - (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 765:.\Include/arm_math.h **** 
 766:.\Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 767:.\Include/arm_math.h ****   }
 768:.\Include/arm_math.h **** 
 769:.\Include/arm_math.h **** 
 770:.\Include/arm_math.h ****   /*
 771:.\Include/arm_math.h ****    * @brief C custom defined QADD16 for M3 and M0 processors
 772:.\Include/arm_math.h ****    */
 773:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD16(
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 32


 774:.\Include/arm_math.h ****   uint32_t x,
 775:.\Include/arm_math.h ****   uint32_t y)
 776:.\Include/arm_math.h ****   {
 777:.\Include/arm_math.h **** /*  q31_t r,     s;  without initialisation 'arm_offset_q15 test' fails  but 'intrinsic' tests pass
 778:.\Include/arm_math.h ****     q31_t r = 0, s = 0;
 779:.\Include/arm_math.h **** 
 780:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 781:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 782:.\Include/arm_math.h **** 
 783:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 784:.\Include/arm_math.h ****   }
 785:.\Include/arm_math.h **** 
 786:.\Include/arm_math.h **** 
 787:.\Include/arm_math.h ****   /*
 788:.\Include/arm_math.h ****    * @brief C custom defined SHADD16 for M3 and M0 processors
 789:.\Include/arm_math.h ****    */
 790:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHADD16(
 791:.\Include/arm_math.h ****   uint32_t x,
 792:.\Include/arm_math.h ****   uint32_t y)
 793:.\Include/arm_math.h ****   {
 794:.\Include/arm_math.h ****     q31_t r, s;
 795:.\Include/arm_math.h **** 
 796:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 797:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 798:.\Include/arm_math.h **** 
 799:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 800:.\Include/arm_math.h ****   }
 801:.\Include/arm_math.h **** 
 802:.\Include/arm_math.h **** 
 803:.\Include/arm_math.h ****   /*
 804:.\Include/arm_math.h ****    * @brief C custom defined QSUB16 for M3 and M0 processors
 805:.\Include/arm_math.h ****    */
 806:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB16(
 807:.\Include/arm_math.h ****   uint32_t x,
 808:.\Include/arm_math.h ****   uint32_t y)
 809:.\Include/arm_math.h ****   {
 810:.\Include/arm_math.h ****     q31_t r, s;
 811:.\Include/arm_math.h **** 
 812:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 813:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 814:.\Include/arm_math.h **** 
 815:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 816:.\Include/arm_math.h ****   }
 817:.\Include/arm_math.h **** 
 818:.\Include/arm_math.h **** 
 819:.\Include/arm_math.h ****   /*
 820:.\Include/arm_math.h ****    * @brief C custom defined SHSUB16 for M3 and M0 processors
 821:.\Include/arm_math.h ****    */
 822:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSUB16(
 823:.\Include/arm_math.h ****   uint32_t x,
 824:.\Include/arm_math.h ****   uint32_t y)
 825:.\Include/arm_math.h ****   {
 826:.\Include/arm_math.h ****     q31_t r, s;
 827:.\Include/arm_math.h **** 
 828:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 829:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 830:.\Include/arm_math.h **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 33


 831:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 832:.\Include/arm_math.h ****   }
 833:.\Include/arm_math.h **** 
 834:.\Include/arm_math.h **** 
 835:.\Include/arm_math.h ****   /*
 836:.\Include/arm_math.h ****    * @brief C custom defined QASX for M3 and M0 processors
 837:.\Include/arm_math.h ****    */
 838:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QASX(
 839:.\Include/arm_math.h ****   uint32_t x,
 840:.\Include/arm_math.h ****   uint32_t y)
 841:.\Include/arm_math.h ****   {
 842:.\Include/arm_math.h ****     q31_t r, s;
 843:.\Include/arm_math.h **** 
 844:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 845:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 846:.\Include/arm_math.h **** 
 847:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 848:.\Include/arm_math.h ****   }
 849:.\Include/arm_math.h **** 
 850:.\Include/arm_math.h **** 
 851:.\Include/arm_math.h ****   /*
 852:.\Include/arm_math.h ****    * @brief C custom defined SHASX for M3 and M0 processors
 853:.\Include/arm_math.h ****    */
 854:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHASX(
 855:.\Include/arm_math.h ****   uint32_t x,
 856:.\Include/arm_math.h ****   uint32_t y)
 857:.\Include/arm_math.h ****   {
 858:.\Include/arm_math.h ****     q31_t r, s;
 859:.\Include/arm_math.h **** 
 860:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 861:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 862:.\Include/arm_math.h **** 
 863:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 864:.\Include/arm_math.h ****   }
 865:.\Include/arm_math.h **** 
 866:.\Include/arm_math.h **** 
 867:.\Include/arm_math.h ****   /*
 868:.\Include/arm_math.h ****    * @brief C custom defined QSAX for M3 and M0 processors
 869:.\Include/arm_math.h ****    */
 870:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSAX(
 871:.\Include/arm_math.h ****   uint32_t x,
 872:.\Include/arm_math.h ****   uint32_t y)
 873:.\Include/arm_math.h ****   {
 874:.\Include/arm_math.h ****     q31_t r, s;
 875:.\Include/arm_math.h **** 
 876:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 877:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 878:.\Include/arm_math.h **** 
 879:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 880:.\Include/arm_math.h ****   }
 881:.\Include/arm_math.h **** 
 882:.\Include/arm_math.h **** 
 883:.\Include/arm_math.h ****   /*
 884:.\Include/arm_math.h ****    * @brief C custom defined SHSAX for M3 and M0 processors
 885:.\Include/arm_math.h ****    */
 886:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSAX(
 887:.\Include/arm_math.h ****   uint32_t x,
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 34


 888:.\Include/arm_math.h ****   uint32_t y)
 889:.\Include/arm_math.h ****   {
 890:.\Include/arm_math.h ****     q31_t r, s;
 891:.\Include/arm_math.h **** 
 892:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 893:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 894:.\Include/arm_math.h **** 
 895:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 896:.\Include/arm_math.h ****   }
 897:.\Include/arm_math.h **** 
 898:.\Include/arm_math.h **** 
 899:.\Include/arm_math.h ****   /*
 900:.\Include/arm_math.h ****    * @brief C custom defined SMUSDX for M3 and M0 processors
 901:.\Include/arm_math.h ****    */
 902:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUSDX(
 903:.\Include/arm_math.h ****   uint32_t x,
 904:.\Include/arm_math.h ****   uint32_t y)
 905:.\Include/arm_math.h ****   {
 906:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 907:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 908:.\Include/arm_math.h ****   }
 909:.\Include/arm_math.h **** 
 910:.\Include/arm_math.h ****   /*
 911:.\Include/arm_math.h ****    * @brief C custom defined SMUADX for M3 and M0 processors
 912:.\Include/arm_math.h ****    */
 913:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUADX(
 914:.\Include/arm_math.h ****   uint32_t x,
 915:.\Include/arm_math.h ****   uint32_t y)
 916:.\Include/arm_math.h ****   {
 917:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 918:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 919:.\Include/arm_math.h ****   }
 920:.\Include/arm_math.h **** 
 921:.\Include/arm_math.h **** 
 922:.\Include/arm_math.h ****   /*
 923:.\Include/arm_math.h ****    * @brief C custom defined QADD for M3 and M0 processors
 924:.\Include/arm_math.h ****    */
 925:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QADD(
 926:.\Include/arm_math.h ****   int32_t x,
 927:.\Include/arm_math.h ****   int32_t y)
 928:.\Include/arm_math.h ****   {
 929:.\Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x + (q31_t)y)));
 930:.\Include/arm_math.h ****   }
 931:.\Include/arm_math.h **** 
 932:.\Include/arm_math.h **** 
 933:.\Include/arm_math.h ****   /*
 934:.\Include/arm_math.h ****    * @brief C custom defined QSUB for M3 and M0 processors
 935:.\Include/arm_math.h ****    */
 936:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QSUB(
 937:.\Include/arm_math.h ****   int32_t x,
 938:.\Include/arm_math.h ****   int32_t y)
 939:.\Include/arm_math.h ****   {
 940:.\Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x - (q31_t)y)));
 941:.\Include/arm_math.h ****   }
 942:.\Include/arm_math.h **** 
 943:.\Include/arm_math.h **** 
 944:.\Include/arm_math.h ****   /*
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 35


 945:.\Include/arm_math.h ****    * @brief C custom defined SMLAD for M3 and M0 processors
 946:.\Include/arm_math.h ****    */
 947:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLAD(
 948:.\Include/arm_math.h ****   uint32_t x,
 949:.\Include/arm_math.h ****   uint32_t y,
 950:.\Include/arm_math.h ****   uint32_t sum)
 951:.\Include/arm_math.h ****   {
 952:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 687              		.loc 2 952 0
 688 046e D423     		mov	r3, #212
 689 0470 FB18     		add	r3, r7, r3
 690 0472 1B68     		ldr	r3, [r3]
 691 0474 1B04     		lsl	r3, r3, #16
 692 0476 1B14     		asr	r3, r3, #16
 693 0478 D022     		mov	r2, #208
 694 047a BA18     		add	r2, r7, r2
 695 047c 1268     		ldr	r2, [r2]
 696 047e 1204     		lsl	r2, r2, #16
 697 0480 1214     		asr	r2, r2, #16
 698 0482 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 699              		.loc 2 953 0
 700 0484 D423     		mov	r3, #212
 701 0486 FB18     		add	r3, r7, r3
 702 0488 1B68     		ldr	r3, [r3]
 703 048a 1B14     		asr	r3, r3, #16
 704 048c D021     		mov	r1, #208
 705 048e 7918     		add	r1, r7, r1
 706 0490 0968     		ldr	r1, [r1]
 707 0492 0914     		asr	r1, r1, #16
 708 0494 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 709              		.loc 2 952 0
 710 0496 D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 711              		.loc 2 954 0
 712 0498 CC23     		mov	r3, #204
 713 049a FB18     		add	r3, r7, r3
 714 049c 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 715              		.loc 2 953 0
 716 049e D318     		add	r3, r2, r3
 717              	.LBE29:
 718              	.LBE28:
 719              		.loc 1 304 0
 720 04a0 8A22     		mov	r2, #138
 721 04a2 5200     		lsl	r2, r2, #1
 722 04a4 BA18     		add	r2, r7, r2
 723 04a6 1360     		str	r3, [r2]
 305:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       acc2 = __SMLAD(x2, y1, acc2);
 724              		.loc 1 305 0
 725 04a8 F023     		mov	r3, #240
 726 04aa FB18     		add	r3, r7, r3
 727 04ac 1968     		ldr	r1, [r3]
 728 04ae DC23     		mov	r3, #220
 729 04b0 FB18     		add	r3, r7, r3
 730 04b2 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 36


 731 04b4 8623     		mov	r3, #134
 732 04b6 5B00     		lsl	r3, r3, #1
 733 04b8 FB18     		add	r3, r7, r3
 734 04ba 1B68     		ldr	r3, [r3]
 735 04bc C820     		mov	r0, #200
 736 04be 3818     		add	r0, r7, r0
 737 04c0 0160     		str	r1, [r0]
 738 04c2 C421     		mov	r1, #196
 739 04c4 7918     		add	r1, r7, r1
 740 04c6 0A60     		str	r2, [r1]
 741 04c8 C022     		mov	r2, #192
 742 04ca BA18     		add	r2, r7, r2
 743 04cc 1360     		str	r3, [r2]
 744              	.LBB30:
 745              	.LBB31:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 746              		.loc 2 952 0
 747 04ce C823     		mov	r3, #200
 748 04d0 FB18     		add	r3, r7, r3
 749 04d2 1B68     		ldr	r3, [r3]
 750 04d4 1B04     		lsl	r3, r3, #16
 751 04d6 1B14     		asr	r3, r3, #16
 752 04d8 C422     		mov	r2, #196
 753 04da BA18     		add	r2, r7, r2
 754 04dc 1268     		ldr	r2, [r2]
 755 04de 1204     		lsl	r2, r2, #16
 756 04e0 1214     		asr	r2, r2, #16
 757 04e2 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 758              		.loc 2 953 0
 759 04e4 C823     		mov	r3, #200
 760 04e6 FB18     		add	r3, r7, r3
 761 04e8 1B68     		ldr	r3, [r3]
 762 04ea 1B14     		asr	r3, r3, #16
 763 04ec C421     		mov	r1, #196
 764 04ee 7918     		add	r1, r7, r1
 765 04f0 0968     		ldr	r1, [r1]
 766 04f2 0914     		asr	r1, r1, #16
 767 04f4 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 768              		.loc 2 952 0
 769 04f6 D218     		add	r2, r2, r3
 770              		.loc 2 954 0
 771 04f8 C023     		mov	r3, #192
 772 04fa FB18     		add	r3, r7, r3
 773 04fc 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 774              		.loc 2 953 0
 775 04fe D318     		add	r3, r2, r3
 776              	.LBE31:
 777              	.LBE30:
 778              		.loc 1 305 0
 779 0500 8622     		mov	r2, #134
 780 0502 5200     		lsl	r2, r2, #1
 781 0504 BA18     		add	r2, r7, r2
 782 0506 1360     		str	r3, [r2]
 306:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 37


 307:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       /* pack input data */
 308:Source\FilteringFunctions/arm_correlate_opt_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
 309:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       x3 = __PKHBT(x2, x1, 0);
 783              		.loc 1 309 0
 784 0508 F023     		mov	r3, #240
 785 050a FB18     		add	r3, r7, r3
 786 050c 1B68     		ldr	r3, [r3]
 787 050e 1B04     		lsl	r3, r3, #16
 788 0510 1A0C     		lsr	r2, r3, #16
 789 0512 F423     		mov	r3, #244
 790 0514 FB18     		add	r3, r7, r3
 791 0516 1B68     		ldr	r3, [r3]
 792 0518 1B0C     		lsr	r3, r3, #16
 793 051a 1B04     		lsl	r3, r3, #16
 794 051c 1343     		orr	r3, r2
 795 051e D822     		mov	r2, #216
 796 0520 BA18     		add	r2, r7, r2
 797 0522 1360     		str	r3, [r2]
 310:Source\FilteringFunctions/arm_correlate_opt_q7.c **** #else
 311:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       x3 = __PKHBT(x1, x2, 0);
 312:Source\FilteringFunctions/arm_correlate_opt_q7.c **** #endif
 313:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 314:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       /* multiply and accumlate */
 315:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       acc1 = __SMLADX(x3, y1, acc1);
 798              		.loc 1 315 0
 799 0524 D823     		mov	r3, #216
 800 0526 FB18     		add	r3, r7, r3
 801 0528 1968     		ldr	r1, [r3]
 802 052a DC23     		mov	r3, #220
 803 052c FB18     		add	r3, r7, r3
 804 052e 1A68     		ldr	r2, [r3]
 805 0530 8823     		mov	r3, #136
 806 0532 5B00     		lsl	r3, r3, #1
 807 0534 FB18     		add	r3, r7, r3
 808 0536 1B68     		ldr	r3, [r3]
 809 0538 BC20     		mov	r0, #188
 810 053a 3818     		add	r0, r7, r0
 811 053c 0160     		str	r1, [r0]
 812 053e B821     		mov	r1, #184
 813 0540 7918     		add	r1, r7, r1
 814 0542 0A60     		str	r2, [r1]
 815 0544 B422     		mov	r2, #180
 816 0546 BA18     		add	r2, r7, r2
 817 0548 1360     		str	r3, [r2]
 818              	.LBB32:
 819              	.LBB33:
 955:.\Include/arm_math.h ****   }
 956:.\Include/arm_math.h **** 
 957:.\Include/arm_math.h **** 
 958:.\Include/arm_math.h ****   /*
 959:.\Include/arm_math.h ****    * @brief C custom defined SMLADX for M3 and M0 processors
 960:.\Include/arm_math.h ****    */
 961:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLADX(
 962:.\Include/arm_math.h ****   uint32_t x,
 963:.\Include/arm_math.h ****   uint32_t y,
 964:.\Include/arm_math.h ****   uint32_t sum)
 965:.\Include/arm_math.h ****   {
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 38


 966:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 820              		.loc 2 966 0
 821 054a BC23     		mov	r3, #188
 822 054c FB18     		add	r3, r7, r3
 823 054e 1B68     		ldr	r3, [r3]
 824 0550 1B04     		lsl	r3, r3, #16
 825 0552 1B14     		asr	r3, r3, #16
 826 0554 B822     		mov	r2, #184
 827 0556 BA18     		add	r2, r7, r2
 828 0558 1268     		ldr	r2, [r2]
 829 055a 1214     		asr	r2, r2, #16
 830 055c 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 831              		.loc 2 967 0
 832 055e BC23     		mov	r3, #188
 833 0560 FB18     		add	r3, r7, r3
 834 0562 1B68     		ldr	r3, [r3]
 835 0564 1B14     		asr	r3, r3, #16
 836 0566 B821     		mov	r1, #184
 837 0568 7918     		add	r1, r7, r1
 838 056a 0968     		ldr	r1, [r1]
 839 056c 0904     		lsl	r1, r1, #16
 840 056e 0914     		asr	r1, r1, #16
 841 0570 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 842              		.loc 2 966 0
 843 0572 D218     		add	r2, r2, r3
 968:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 844              		.loc 2 968 0
 845 0574 B423     		mov	r3, #180
 846 0576 FB18     		add	r3, r7, r3
 847 0578 1B68     		ldr	r3, [r3]
 967:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 848              		.loc 2 967 0
 849 057a D318     		add	r3, r2, r3
 850              	.LBE33:
 851              	.LBE32:
 852              		.loc 1 315 0
 853 057c 8822     		mov	r2, #136
 854 057e 5200     		lsl	r2, r2, #1
 855 0580 BA18     		add	r2, r7, r2
 856 0582 1360     		str	r3, [r2]
 316:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 317:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       /* Read next two samples from scratch1 buffer */
 318:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       x1 = *__SIMD32(pScr1)++;
 857              		.loc 1 318 0
 858 0584 1023     		mov	r3, #16
 859 0586 FB18     		add	r3, r7, r3
 860 0588 1A68     		ldr	r2, [r3]
 861 058a 111D     		add	r1, r2, #4
 862 058c 1960     		str	r1, [r3]
 863 058e 1368     		ldr	r3, [r2]
 864 0590 F422     		mov	r2, #244
 865 0592 BA18     		add	r2, r7, r2
 866 0594 1360     		str	r3, [r2]
 319:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 320:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       /* pack input data */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 39


 321:Source\FilteringFunctions/arm_correlate_opt_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
 322:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       x3 = __PKHBT(x1, x2, 0);
 867              		.loc 1 322 0
 868 0596 F423     		mov	r3, #244
 869 0598 FB18     		add	r3, r7, r3
 870 059a 1B68     		ldr	r3, [r3]
 871 059c 1B04     		lsl	r3, r3, #16
 872 059e 1A0C     		lsr	r2, r3, #16
 873 05a0 F023     		mov	r3, #240
 874 05a2 FB18     		add	r3, r7, r3
 875 05a4 1B68     		ldr	r3, [r3]
 876 05a6 1B0C     		lsr	r3, r3, #16
 877 05a8 1B04     		lsl	r3, r3, #16
 878 05aa 1343     		orr	r3, r2
 879 05ac D822     		mov	r2, #216
 880 05ae BA18     		add	r2, r7, r2
 881 05b0 1360     		str	r3, [r2]
 323:Source\FilteringFunctions/arm_correlate_opt_q7.c **** #else
 324:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       x3 = __PKHBT(x2, x1, 0);
 325:Source\FilteringFunctions/arm_correlate_opt_q7.c **** #endif
 326:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 327:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       acc3 = __SMLADX(x3, y1, acc3);
 882              		.loc 1 327 0
 883 05b2 D823     		mov	r3, #216
 884 05b4 FB18     		add	r3, r7, r3
 885 05b6 1968     		ldr	r1, [r3]
 886 05b8 DC23     		mov	r3, #220
 887 05ba FB18     		add	r3, r7, r3
 888 05bc 1A68     		ldr	r2, [r3]
 889 05be 8423     		mov	r3, #132
 890 05c0 5B00     		lsl	r3, r3, #1
 891 05c2 FB18     		add	r3, r7, r3
 892 05c4 1B68     		ldr	r3, [r3]
 893 05c6 B020     		mov	r0, #176
 894 05c8 3818     		add	r0, r7, r0
 895 05ca 0160     		str	r1, [r0]
 896 05cc AC21     		mov	r1, #172
 897 05ce 7918     		add	r1, r7, r1
 898 05d0 0A60     		str	r2, [r1]
 899 05d2 A822     		mov	r2, #168
 900 05d4 BA18     		add	r2, r7, r2
 901 05d6 1360     		str	r3, [r2]
 902              	.LBB34:
 903              	.LBB35:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 904              		.loc 2 966 0
 905 05d8 B023     		mov	r3, #176
 906 05da FB18     		add	r3, r7, r3
 907 05dc 1B68     		ldr	r3, [r3]
 908 05de 1B04     		lsl	r3, r3, #16
 909 05e0 1B14     		asr	r3, r3, #16
 910 05e2 AC22     		mov	r2, #172
 911 05e4 BA18     		add	r2, r7, r2
 912 05e6 1268     		ldr	r2, [r2]
 913 05e8 1214     		asr	r2, r2, #16
 914 05ea 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 40


 915              		.loc 2 967 0
 916 05ec B023     		mov	r3, #176
 917 05ee FB18     		add	r3, r7, r3
 918 05f0 1B68     		ldr	r3, [r3]
 919 05f2 1B14     		asr	r3, r3, #16
 920 05f4 AC21     		mov	r1, #172
 921 05f6 7918     		add	r1, r7, r1
 922 05f8 0968     		ldr	r1, [r1]
 923 05fa 0904     		lsl	r1, r1, #16
 924 05fc 0914     		asr	r1, r1, #16
 925 05fe 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 926              		.loc 2 966 0
 927 0600 D218     		add	r2, r2, r3
 928              		.loc 2 968 0
 929 0602 A823     		mov	r3, #168
 930 0604 FB18     		add	r3, r7, r3
 931 0606 1B68     		ldr	r3, [r3]
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 932              		.loc 2 967 0
 933 0608 D318     		add	r3, r2, r3
 934              	.LBE35:
 935              	.LBE34:
 936              		.loc 1 327 0
 937 060a 8422     		mov	r2, #132
 938 060c 5200     		lsl	r2, r2, #1
 939 060e BA18     		add	r2, r7, r2
 940 0610 1360     		str	r3, [r2]
 328:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 329:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       /* Read four samples from smaller buffer */
 330:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       y1 = _SIMD32_OFFSET(pScr2 + 2u);
 941              		.loc 1 330 0
 942 0612 9023     		mov	r3, #144
 943 0614 5B00     		lsl	r3, r3, #1
 944 0616 FB18     		add	r3, r7, r3
 945 0618 1B68     		ldr	r3, [r3]
 946 061a 5B68     		ldr	r3, [r3, #4]
 947 061c DC22     		mov	r2, #220
 948 061e BA18     		add	r2, r7, r2
 949 0620 1360     		str	r3, [r2]
 331:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 332:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       acc0 = __SMLAD(x2, y1, acc0);
 950              		.loc 1 332 0
 951 0622 F023     		mov	r3, #240
 952 0624 FB18     		add	r3, r7, r3
 953 0626 1968     		ldr	r1, [r3]
 954 0628 DC23     		mov	r3, #220
 955 062a FB18     		add	r3, r7, r3
 956 062c 1A68     		ldr	r2, [r3]
 957 062e 8A23     		mov	r3, #138
 958 0630 5B00     		lsl	r3, r3, #1
 959 0632 FB18     		add	r3, r7, r3
 960 0634 1B68     		ldr	r3, [r3]
 961 0636 A420     		mov	r0, #164
 962 0638 3818     		add	r0, r7, r0
 963 063a 0160     		str	r1, [r0]
 964 063c A021     		mov	r1, #160
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 41


 965 063e 7918     		add	r1, r7, r1
 966 0640 0A60     		str	r2, [r1]
 967 0642 9C22     		mov	r2, #156
 968 0644 BA18     		add	r2, r7, r2
 969 0646 1360     		str	r3, [r2]
 970              	.LBB36:
 971              	.LBB37:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 972              		.loc 2 952 0
 973 0648 A423     		mov	r3, #164
 974 064a FB18     		add	r3, r7, r3
 975 064c 1B68     		ldr	r3, [r3]
 976 064e 1B04     		lsl	r3, r3, #16
 977 0650 1B14     		asr	r3, r3, #16
 978 0652 A022     		mov	r2, #160
 979 0654 BA18     		add	r2, r7, r2
 980 0656 1268     		ldr	r2, [r2]
 981 0658 1204     		lsl	r2, r2, #16
 982 065a 1214     		asr	r2, r2, #16
 983 065c 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 984              		.loc 2 953 0
 985 065e A423     		mov	r3, #164
 986 0660 FB18     		add	r3, r7, r3
 987 0662 1B68     		ldr	r3, [r3]
 988 0664 1B14     		asr	r3, r3, #16
 989 0666 A021     		mov	r1, #160
 990 0668 7918     		add	r1, r7, r1
 991 066a 0968     		ldr	r1, [r1]
 992 066c 0914     		asr	r1, r1, #16
 993 066e 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 994              		.loc 2 952 0
 995 0670 D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 996              		.loc 2 954 0
 997 0672 9C23     		mov	r3, #156
 998 0674 FB18     		add	r3, r7, r3
 999 0676 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1000              		.loc 2 953 0
 1001 0678 D318     		add	r3, r2, r3
 1002              	.LBE37:
 1003              	.LBE36:
 1004              		.loc 1 332 0
 1005 067a 8A22     		mov	r2, #138
 1006 067c 5200     		lsl	r2, r2, #1
 1007 067e BA18     		add	r2, r7, r2
 1008 0680 1360     		str	r3, [r2]
 333:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 334:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       acc2 = __SMLAD(x1, y1, acc2);
 1009              		.loc 1 334 0
 1010 0682 F423     		mov	r3, #244
 1011 0684 FB18     		add	r3, r7, r3
 1012 0686 1968     		ldr	r1, [r3]
 1013 0688 DC23     		mov	r3, #220
 1014 068a FB18     		add	r3, r7, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 42


 1015 068c 1A68     		ldr	r2, [r3]
 1016 068e 8623     		mov	r3, #134
 1017 0690 5B00     		lsl	r3, r3, #1
 1018 0692 FB18     		add	r3, r7, r3
 1019 0694 1B68     		ldr	r3, [r3]
 1020 0696 9820     		mov	r0, #152
 1021 0698 3818     		add	r0, r7, r0
 1022 069a 0160     		str	r1, [r0]
 1023 069c 9421     		mov	r1, #148
 1024 069e 7918     		add	r1, r7, r1
 1025 06a0 0A60     		str	r2, [r1]
 1026 06a2 9022     		mov	r2, #144
 1027 06a4 BA18     		add	r2, r7, r2
 1028 06a6 1360     		str	r3, [r2]
 1029              	.LBB38:
 1030              	.LBB39:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1031              		.loc 2 952 0
 1032 06a8 9823     		mov	r3, #152
 1033 06aa FB18     		add	r3, r7, r3
 1034 06ac 1B68     		ldr	r3, [r3]
 1035 06ae 1B04     		lsl	r3, r3, #16
 1036 06b0 1B14     		asr	r3, r3, #16
 1037 06b2 9422     		mov	r2, #148
 1038 06b4 BA18     		add	r2, r7, r2
 1039 06b6 1268     		ldr	r2, [r2]
 1040 06b8 1204     		lsl	r2, r2, #16
 1041 06ba 1214     		asr	r2, r2, #16
 1042 06bc 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1043              		.loc 2 953 0
 1044 06be 9823     		mov	r3, #152
 1045 06c0 FB18     		add	r3, r7, r3
 1046 06c2 1B68     		ldr	r3, [r3]
 1047 06c4 1B14     		asr	r3, r3, #16
 1048 06c6 9421     		mov	r1, #148
 1049 06c8 7918     		add	r1, r7, r1
 1050 06ca 0968     		ldr	r1, [r1]
 1051 06cc 0914     		asr	r1, r1, #16
 1052 06ce 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1053              		.loc 2 952 0
 1054 06d0 D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 1055              		.loc 2 954 0
 1056 06d2 9023     		mov	r3, #144
 1057 06d4 FB18     		add	r3, r7, r3
 1058 06d6 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1059              		.loc 2 953 0
 1060 06d8 D318     		add	r3, r2, r3
 1061              	.LBE39:
 1062              	.LBE38:
 1063              		.loc 1 334 0
 1064 06da 8622     		mov	r2, #134
 1065 06dc 5200     		lsl	r2, r2, #1
 1066 06de BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 43


 1067 06e0 1360     		str	r3, [r2]
 335:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 336:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       acc1 = __SMLADX(x3, y1, acc1);
 1068              		.loc 1 336 0
 1069 06e2 D823     		mov	r3, #216
 1070 06e4 FB18     		add	r3, r7, r3
 1071 06e6 1968     		ldr	r1, [r3]
 1072 06e8 DC23     		mov	r3, #220
 1073 06ea FB18     		add	r3, r7, r3
 1074 06ec 1A68     		ldr	r2, [r3]
 1075 06ee 8823     		mov	r3, #136
 1076 06f0 5B00     		lsl	r3, r3, #1
 1077 06f2 FB18     		add	r3, r7, r3
 1078 06f4 1B68     		ldr	r3, [r3]
 1079 06f6 8C20     		mov	r0, #140
 1080 06f8 3818     		add	r0, r7, r0
 1081 06fa 0160     		str	r1, [r0]
 1082 06fc 8821     		mov	r1, #136
 1083 06fe 7918     		add	r1, r7, r1
 1084 0700 0A60     		str	r2, [r1]
 1085 0702 8422     		mov	r2, #132
 1086 0704 BA18     		add	r2, r7, r2
 1087 0706 1360     		str	r3, [r2]
 1088              	.LBB40:
 1089              	.LBB41:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 1090              		.loc 2 966 0
 1091 0708 8C23     		mov	r3, #140
 1092 070a FB18     		add	r3, r7, r3
 1093 070c 1B68     		ldr	r3, [r3]
 1094 070e 1B04     		lsl	r3, r3, #16
 1095 0710 1B14     		asr	r3, r3, #16
 1096 0712 8822     		mov	r2, #136
 1097 0714 BA18     		add	r2, r7, r2
 1098 0716 1268     		ldr	r2, [r2]
 1099 0718 1214     		asr	r2, r2, #16
 1100 071a 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1101              		.loc 2 967 0
 1102 071c 8C23     		mov	r3, #140
 1103 071e FB18     		add	r3, r7, r3
 1104 0720 1B68     		ldr	r3, [r3]
 1105 0722 1B14     		asr	r3, r3, #16
 1106 0724 8821     		mov	r1, #136
 1107 0726 7918     		add	r1, r7, r1
 1108 0728 0968     		ldr	r1, [r1]
 1109 072a 0904     		lsl	r1, r1, #16
 1110 072c 0914     		asr	r1, r1, #16
 1111 072e 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 1112              		.loc 2 966 0
 1113 0730 D218     		add	r2, r2, r3
 1114              		.loc 2 968 0
 1115 0732 8423     		mov	r3, #132
 1116 0734 FB18     		add	r3, r7, r3
 1117 0736 1B68     		ldr	r3, [r3]
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 44


 1118              		.loc 2 967 0
 1119 0738 D318     		add	r3, r2, r3
 1120              	.LBE41:
 1121              	.LBE40:
 1122              		.loc 1 336 0
 1123 073a 8822     		mov	r2, #136
 1124 073c 5200     		lsl	r2, r2, #1
 1125 073e BA18     		add	r2, r7, r2
 1126 0740 1360     		str	r3, [r2]
 337:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 338:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       x2 = *__SIMD32(pScr1)++;
 1127              		.loc 1 338 0
 1128 0742 1023     		mov	r3, #16
 1129 0744 FB18     		add	r3, r7, r3
 1130 0746 1A68     		ldr	r2, [r3]
 1131 0748 111D     		add	r1, r2, #4
 1132 074a 1960     		str	r1, [r3]
 1133 074c 1368     		ldr	r3, [r2]
 1134 074e F022     		mov	r2, #240
 1135 0750 BA18     		add	r2, r7, r2
 1136 0752 1360     		str	r3, [r2]
 339:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 340:Source\FilteringFunctions/arm_correlate_opt_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
 341:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       x3 = __PKHBT(x2, x1, 0);
 1137              		.loc 1 341 0
 1138 0754 F023     		mov	r3, #240
 1139 0756 FB18     		add	r3, r7, r3
 1140 0758 1B68     		ldr	r3, [r3]
 1141 075a 1B04     		lsl	r3, r3, #16
 1142 075c 1A0C     		lsr	r2, r3, #16
 1143 075e F423     		mov	r3, #244
 1144 0760 FB18     		add	r3, r7, r3
 1145 0762 1B68     		ldr	r3, [r3]
 1146 0764 1B0C     		lsr	r3, r3, #16
 1147 0766 1B04     		lsl	r3, r3, #16
 1148 0768 1343     		orr	r3, r2
 1149 076a D822     		mov	r2, #216
 1150 076c BA18     		add	r2, r7, r2
 1151 076e 1360     		str	r3, [r2]
 342:Source\FilteringFunctions/arm_correlate_opt_q7.c **** #else
 343:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       x3 = __PKHBT(x1, x2, 0);
 344:Source\FilteringFunctions/arm_correlate_opt_q7.c **** #endif
 345:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 346:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       acc3 = __SMLADX(x3, y1, acc3);
 1152              		.loc 1 346 0
 1153 0770 D823     		mov	r3, #216
 1154 0772 FB18     		add	r3, r7, r3
 1155 0774 1968     		ldr	r1, [r3]
 1156 0776 DC23     		mov	r3, #220
 1157 0778 FB18     		add	r3, r7, r3
 1158 077a 1A68     		ldr	r2, [r3]
 1159 077c 8423     		mov	r3, #132
 1160 077e 5B00     		lsl	r3, r3, #1
 1161 0780 FB18     		add	r3, r7, r3
 1162 0782 1B68     		ldr	r3, [r3]
 1163 0784 8020     		mov	r0, #128
 1164 0786 3818     		add	r0, r7, r0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 45


 1165 0788 0160     		str	r1, [r0]
 1166 078a FA67     		str	r2, [r7, #124]
 1167 078c BB67     		str	r3, [r7, #120]
 1168              	.LBB42:
 1169              	.LBB43:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 1170              		.loc 2 966 0
 1171 078e 8023     		mov	r3, #128
 1172 0790 FB18     		add	r3, r7, r3
 1173 0792 1B68     		ldr	r3, [r3]
 1174 0794 1B04     		lsl	r3, r3, #16
 1175 0796 1B14     		asr	r3, r3, #16
 1176 0798 FA6F     		ldr	r2, [r7, #124]
 1177 079a 1214     		asr	r2, r2, #16
 1178 079c 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1179              		.loc 2 967 0
 1180 079e 8023     		mov	r3, #128
 1181 07a0 FB18     		add	r3, r7, r3
 1182 07a2 1B68     		ldr	r3, [r3]
 1183 07a4 1B14     		asr	r3, r3, #16
 1184 07a6 F96F     		ldr	r1, [r7, #124]
 1185 07a8 0904     		lsl	r1, r1, #16
 1186 07aa 0914     		asr	r1, r1, #16
 1187 07ac 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 1188              		.loc 2 966 0
 1189 07ae D218     		add	r2, r2, r3
 1190              		.loc 2 968 0
 1191 07b0 BB6F     		ldr	r3, [r7, #120]
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1192              		.loc 2 967 0
 1193 07b2 D318     		add	r3, r2, r3
 1194              	.LBE43:
 1195              	.LBE42:
 1196              		.loc 1 346 0
 1197 07b4 8422     		mov	r2, #132
 1198 07b6 5200     		lsl	r2, r2, #1
 1199 07b8 BA18     		add	r2, r7, r2
 1200 07ba 1360     		str	r3, [r2]
 347:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 348:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       pScr2 += 4u;
 1201              		.loc 1 348 0
 1202 07bc 9023     		mov	r3, #144
 1203 07be 5B00     		lsl	r3, r3, #1
 1204 07c0 FB18     		add	r3, r7, r3
 1205 07c2 1B68     		ldr	r3, [r3]
 1206 07c4 0833     		add	r3, r3, #8
 1207 07c6 9022     		mov	r2, #144
 1208 07c8 5200     		lsl	r2, r2, #1
 1209 07ca BA18     		add	r2, r7, r2
 1210 07cc 1360     		str	r3, [r2]
 349:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 350:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 351:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       /* Decrement the loop counter */
 352:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       tapCnt--;
 1211              		.loc 1 352 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 46


 1212 07ce F823     		mov	r3, #248
 1213 07d0 FB18     		add	r3, r7, r3
 1214 07d2 1B68     		ldr	r3, [r3]
 1215 07d4 013B     		sub	r3, r3, #1
 1216 07d6 F822     		mov	r2, #248
 1217 07d8 BA18     		add	r2, r7, r2
 1218 07da 1360     		str	r3, [r2]
 1219              	.L13:
 297:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     {
 1220              		.loc 1 297 0
 1221 07dc F823     		mov	r3, #248
 1222 07de FB18     		add	r3, r7, r3
 1223 07e0 1B68     		ldr	r3, [r3]
 1224 07e2 002B     		cmp	r3, #0
 1225 07e4 00D0     		beq	.LCB1085
 1226 07e6 27E6     		b	.L22	@long jump
 1227              	.LCB1085:
 353:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     }
 354:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 355:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 356:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 357:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Update scratch pointer for remaining samples of smaller length sequence */
 358:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     pScr1 -= 4u;
 1228              		.loc 1 358 0
 1229 07e8 3B69     		ldr	r3, [r7, #16]
 1230 07ea 083B     		sub	r3, r3, #8
 1231 07ec 3B61     		str	r3, [r7, #16]
 359:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 360:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 361:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* apply same above for remaining samples of smaller length sequence */
 362:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     tapCnt = (srcBLen) & 3u;
 1232              		.loc 1 362 0
 1233 07ee 3B68     		ldr	r3, [r7]
 1234 07f0 0322     		mov	r2, #3
 1235 07f2 1340     		and	r3, r2
 1236 07f4 F822     		mov	r2, #248
 1237 07f6 BA18     		add	r2, r7, r2
 1238 07f8 1360     		str	r3, [r2]
 363:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 364:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     while (tapCnt > 0u)
 1239              		.loc 1 364 0
 1240 07fa 62E0     		b	.L23
 1241              	.L24:
 365:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     {
 366:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 367:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       /* accumlate the results */
 368:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       acc0 += (*pScr1++ * *pScr2);
 1242              		.loc 1 368 0
 1243 07fc 3B69     		ldr	r3, [r7, #16]
 1244 07fe 9A1C     		add	r2, r3, #2
 1245 0800 3A61     		str	r2, [r7, #16]
 1246 0802 1B88     		ldrh	r3, [r3]
 1247 0804 1BB2     		sxth	r3, r3
 1248 0806 9022     		mov	r2, #144
 1249 0808 5200     		lsl	r2, r2, #1
 1250 080a BA18     		add	r2, r7, r2
 1251 080c 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 47


 1252 080e 1288     		ldrh	r2, [r2]
 1253 0810 12B2     		sxth	r2, r2
 1254 0812 5343     		mul	r3, r2
 1255 0814 8A22     		mov	r2, #138
 1256 0816 5200     		lsl	r2, r2, #1
 1257 0818 BA18     		add	r2, r7, r2
 1258 081a 1268     		ldr	r2, [r2]
 1259 081c D318     		add	r3, r2, r3
 1260 081e 8A22     		mov	r2, #138
 1261 0820 5200     		lsl	r2, r2, #1
 1262 0822 BA18     		add	r2, r7, r2
 1263 0824 1360     		str	r3, [r2]
 369:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       acc1 += (*pScr1++ * *pScr2);
 1264              		.loc 1 369 0
 1265 0826 3B69     		ldr	r3, [r7, #16]
 1266 0828 9A1C     		add	r2, r3, #2
 1267 082a 3A61     		str	r2, [r7, #16]
 1268 082c 1B88     		ldrh	r3, [r3]
 1269 082e 1BB2     		sxth	r3, r3
 1270 0830 9022     		mov	r2, #144
 1271 0832 5200     		lsl	r2, r2, #1
 1272 0834 BA18     		add	r2, r7, r2
 1273 0836 1268     		ldr	r2, [r2]
 1274 0838 1288     		ldrh	r2, [r2]
 1275 083a 12B2     		sxth	r2, r2
 1276 083c 5343     		mul	r3, r2
 1277 083e 8822     		mov	r2, #136
 1278 0840 5200     		lsl	r2, r2, #1
 1279 0842 BA18     		add	r2, r7, r2
 1280 0844 1268     		ldr	r2, [r2]
 1281 0846 D318     		add	r3, r2, r3
 1282 0848 8822     		mov	r2, #136
 1283 084a 5200     		lsl	r2, r2, #1
 1284 084c BA18     		add	r2, r7, r2
 1285 084e 1360     		str	r3, [r2]
 370:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       acc2 += (*pScr1++ * *pScr2);
 1286              		.loc 1 370 0
 1287 0850 3B69     		ldr	r3, [r7, #16]
 1288 0852 9A1C     		add	r2, r3, #2
 1289 0854 3A61     		str	r2, [r7, #16]
 1290 0856 1B88     		ldrh	r3, [r3]
 1291 0858 1BB2     		sxth	r3, r3
 1292 085a 9022     		mov	r2, #144
 1293 085c 5200     		lsl	r2, r2, #1
 1294 085e BA18     		add	r2, r7, r2
 1295 0860 1268     		ldr	r2, [r2]
 1296 0862 1288     		ldrh	r2, [r2]
 1297 0864 12B2     		sxth	r2, r2
 1298 0866 5343     		mul	r3, r2
 1299 0868 8622     		mov	r2, #134
 1300 086a 5200     		lsl	r2, r2, #1
 1301 086c BA18     		add	r2, r7, r2
 1302 086e 1268     		ldr	r2, [r2]
 1303 0870 D318     		add	r3, r2, r3
 1304 0872 8622     		mov	r2, #134
 1305 0874 5200     		lsl	r2, r2, #1
 1306 0876 BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 48


 1307 0878 1360     		str	r3, [r2]
 371:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       acc3 += (*pScr1++ * *pScr2++);
 1308              		.loc 1 371 0
 1309 087a 3B69     		ldr	r3, [r7, #16]
 1310 087c 9A1C     		add	r2, r3, #2
 1311 087e 3A61     		str	r2, [r7, #16]
 1312 0880 1B88     		ldrh	r3, [r3]
 1313 0882 1AB2     		sxth	r2, r3
 1314 0884 9023     		mov	r3, #144
 1315 0886 5B00     		lsl	r3, r3, #1
 1316 0888 FB18     		add	r3, r7, r3
 1317 088a 1B68     		ldr	r3, [r3]
 1318 088c 991C     		add	r1, r3, #2
 1319 088e 9020     		mov	r0, #144
 1320 0890 4000     		lsl	r0, r0, #1
 1321 0892 3818     		add	r0, r7, r0
 1322 0894 0160     		str	r1, [r0]
 1323 0896 1B88     		ldrh	r3, [r3]
 1324 0898 1BB2     		sxth	r3, r3
 1325 089a 5343     		mul	r3, r2
 1326 089c 8422     		mov	r2, #132
 1327 089e 5200     		lsl	r2, r2, #1
 1328 08a0 BA18     		add	r2, r7, r2
 1329 08a2 1268     		ldr	r2, [r2]
 1330 08a4 D318     		add	r3, r2, r3
 1331 08a6 8422     		mov	r2, #132
 1332 08a8 5200     		lsl	r2, r2, #1
 1333 08aa BA18     		add	r2, r7, r2
 1334 08ac 1360     		str	r3, [r2]
 372:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 373:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       pScr1 -= 3u;
 1335              		.loc 1 373 0
 1336 08ae 3B69     		ldr	r3, [r7, #16]
 1337 08b0 063B     		sub	r3, r3, #6
 1338 08b2 3B61     		str	r3, [r7, #16]
 374:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 375:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       /* Decrement the loop counter */
 376:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       tapCnt--;
 1339              		.loc 1 376 0
 1340 08b4 F823     		mov	r3, #248
 1341 08b6 FB18     		add	r3, r7, r3
 1342 08b8 1B68     		ldr	r3, [r3]
 1343 08ba 013B     		sub	r3, r3, #1
 1344 08bc F822     		mov	r2, #248
 1345 08be BA18     		add	r2, r7, r2
 1346 08c0 1360     		str	r3, [r2]
 1347              	.L23:
 364:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     {
 1348              		.loc 1 364 0
 1349 08c2 F823     		mov	r3, #248
 1350 08c4 FB18     		add	r3, r7, r3
 1351 08c6 1B68     		ldr	r3, [r3]
 1352 08c8 002B     		cmp	r3, #0
 1353 08ca 97D1     		bne	.L24
 377:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     }
 378:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 379:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     blkCnt--;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 49


 1354              		.loc 1 379 0
 1355 08cc 7B1C     		add	r3, r7, #1
 1356 08ce FF33     		add	r3, r3, #255
 1357 08d0 1B68     		ldr	r3, [r3]
 1358 08d2 013B     		sub	r3, r3, #1
 1359 08d4 7A1C     		add	r2, r7, #1
 1360 08d6 FF32     		add	r2, r2, #255
 1361 08d8 1360     		str	r3, [r2]
 380:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 381:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Store the result in the accumulator in the destination buffer. */
 382:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pOut = (q7_t) (__SSAT(acc0 >> 7u, 8));
 1362              		.loc 1 382 0
 1363 08da 8A23     		mov	r3, #138
 1364 08dc 5B00     		lsl	r3, r3, #1
 1365 08de FB18     		add	r3, r7, r3
 1366 08e0 1B68     		ldr	r3, [r3]
 1367 08e2 DB11     		asr	r3, r3, #7
 1368 08e4 7B67     		str	r3, [r7, #116]
 1369 08e6 0823     		mov	r3, #8
 1370 08e8 3B67     		str	r3, [r7, #112]
 1371              	.LBB44:
 1372              	.LBB45:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1373              		.loc 2 699 0
 1374 08ea 0123     		mov	r3, #1
 1375 08ec FB66     		str	r3, [r7, #108]
 700:.\Include/arm_math.h ****     {
 1376              		.loc 2 700 0
 1377 08ee 0023     		mov	r3, #0
 1378 08f0 BB66     		str	r3, [r7, #104]
 1379 08f2 05E0     		b	.L25
 1380              	.L26:
 702:.\Include/arm_math.h ****     }
 1381              		.loc 2 702 0
 1382 08f4 FB6E     		ldr	r3, [r7, #108]
 1383 08f6 5B00     		lsl	r3, r3, #1
 1384 08f8 FB66     		str	r3, [r7, #108]
 700:.\Include/arm_math.h ****     {
 1385              		.loc 2 700 0
 1386 08fa BB6E     		ldr	r3, [r7, #104]
 1387 08fc 0133     		add	r3, r3, #1
 1388 08fe BB66     		str	r3, [r7, #104]
 1389              	.L25:
 1390 0900 3B6F     		ldr	r3, [r7, #112]
 1391 0902 013B     		sub	r3, r3, #1
 1392 0904 BA6E     		ldr	r2, [r7, #104]
 1393 0906 9A42     		cmp	r2, r3
 1394 0908 F4D3     		bcc	.L26
 705:.\Include/arm_math.h ****     {
 1395              		.loc 2 705 0
 1396 090a 7B6F     		ldr	r3, [r7, #116]
 1397 090c 002B     		cmp	r3, #0
 1398 090e 09DD     		ble	.L27
 707:.\Include/arm_math.h **** 
 1399              		.loc 2 707 0
 1400 0910 FB6E     		ldr	r3, [r7, #108]
 1401 0912 013B     		sub	r3, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 50


 1402 0914 FB66     		str	r3, [r7, #108]
 709:.\Include/arm_math.h ****       {
 1403              		.loc 2 709 0
 1404 0916 7A6F     		ldr	r2, [r7, #116]
 1405 0918 FB6E     		ldr	r3, [r7, #108]
 1406 091a 9A42     		cmp	r2, r3
 1407 091c 0CDD     		ble	.L62
 711:.\Include/arm_math.h ****       }
 1408              		.loc 2 711 0
 1409 091e FB6E     		ldr	r3, [r7, #108]
 1410 0920 7B67     		str	r3, [r7, #116]
 1411 0922 0AE0     		b	.L29
 1412              	.L27:
 716:.\Include/arm_math.h **** 
 1413              		.loc 2 716 0
 1414 0924 FB6E     		ldr	r3, [r7, #108]
 1415 0926 5B42     		neg	r3, r3
 1416 0928 7B66     		str	r3, [r7, #100]
 718:.\Include/arm_math.h ****       {
 1417              		.loc 2 718 0
 1418 092a 7A6F     		ldr	r2, [r7, #116]
 1419 092c 7B6E     		ldr	r3, [r7, #100]
 1420 092e 9A42     		cmp	r2, r3
 1421 0930 03DA     		bge	.L29
 720:.\Include/arm_math.h ****       }
 1422              		.loc 2 720 0
 1423 0932 7B6E     		ldr	r3, [r7, #100]
 1424 0934 7B67     		str	r3, [r7, #116]
 1425 0936 00E0     		b	.L29
 1426              	.L62:
 711:.\Include/arm_math.h ****       }
 1427              		.loc 2 711 0
 1428 0938 C046     		mov	r8, r8
 1429              	.L29:
 723:.\Include/arm_math.h ****   }
 1430              		.loc 2 723 0
 1431 093a 7B6F     		ldr	r3, [r7, #116]
 1432              	.LBE45:
 1433              	.LBE44:
 1434              		.loc 1 382 0
 1435 093c DAB2     		uxtb	r2, r3
 1436 093e 9223     		mov	r3, #146
 1437 0940 5B00     		lsl	r3, r3, #1
 1438 0942 FB18     		add	r3, r7, r3
 1439 0944 1B68     		ldr	r3, [r3]
 1440 0946 1A70     		strb	r2, [r3]
 383:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     pOut += inc;
 1441              		.loc 1 383 0
 1442 0948 FC23     		mov	r3, #252
 1443 094a FB18     		add	r3, r7, r3
 1444 094c 1B68     		ldr	r3, [r3]
 1445 094e 9222     		mov	r2, #146
 1446 0950 5200     		lsl	r2, r2, #1
 1447 0952 BA18     		add	r2, r7, r2
 1448 0954 1268     		ldr	r2, [r2]
 1449 0956 D318     		add	r3, r2, r3
 1450 0958 9222     		mov	r2, #146
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 51


 1451 095a 5200     		lsl	r2, r2, #1
 1452 095c BA18     		add	r2, r7, r2
 1453 095e 1360     		str	r3, [r2]
 384:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pOut = (q7_t) (__SSAT(acc1 >> 7u, 8));
 1454              		.loc 1 384 0
 1455 0960 8823     		mov	r3, #136
 1456 0962 5B00     		lsl	r3, r3, #1
 1457 0964 FB18     		add	r3, r7, r3
 1458 0966 1B68     		ldr	r3, [r3]
 1459 0968 DB11     		asr	r3, r3, #7
 1460 096a 3B66     		str	r3, [r7, #96]
 1461 096c 0823     		mov	r3, #8
 1462 096e FB65     		str	r3, [r7, #92]
 1463              	.LBB46:
 1464              	.LBB47:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1465              		.loc 2 699 0
 1466 0970 0123     		mov	r3, #1
 1467 0972 BB65     		str	r3, [r7, #88]
 700:.\Include/arm_math.h ****     {
 1468              		.loc 2 700 0
 1469 0974 0023     		mov	r3, #0
 1470 0976 7B65     		str	r3, [r7, #84]
 1471 0978 05E0     		b	.L31
 1472              	.L32:
 702:.\Include/arm_math.h ****     }
 1473              		.loc 2 702 0
 1474 097a BB6D     		ldr	r3, [r7, #88]
 1475 097c 5B00     		lsl	r3, r3, #1
 1476 097e BB65     		str	r3, [r7, #88]
 700:.\Include/arm_math.h ****     {
 1477              		.loc 2 700 0
 1478 0980 7B6D     		ldr	r3, [r7, #84]
 1479 0982 0133     		add	r3, r3, #1
 1480 0984 7B65     		str	r3, [r7, #84]
 1481              	.L31:
 1482 0986 FB6D     		ldr	r3, [r7, #92]
 1483 0988 013B     		sub	r3, r3, #1
 1484 098a 7A6D     		ldr	r2, [r7, #84]
 1485 098c 9A42     		cmp	r2, r3
 1486 098e F4D3     		bcc	.L32
 705:.\Include/arm_math.h ****     {
 1487              		.loc 2 705 0
 1488 0990 3B6E     		ldr	r3, [r7, #96]
 1489 0992 002B     		cmp	r3, #0
 1490 0994 09DD     		ble	.L33
 707:.\Include/arm_math.h **** 
 1491              		.loc 2 707 0
 1492 0996 BB6D     		ldr	r3, [r7, #88]
 1493 0998 013B     		sub	r3, r3, #1
 1494 099a BB65     		str	r3, [r7, #88]
 709:.\Include/arm_math.h ****       {
 1495              		.loc 2 709 0
 1496 099c 3A6E     		ldr	r2, [r7, #96]
 1497 099e BB6D     		ldr	r3, [r7, #88]
 1498 09a0 9A42     		cmp	r2, r3
 1499 09a2 0CDD     		ble	.L63
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 52


 711:.\Include/arm_math.h ****       }
 1500              		.loc 2 711 0
 1501 09a4 BB6D     		ldr	r3, [r7, #88]
 1502 09a6 3B66     		str	r3, [r7, #96]
 1503 09a8 0AE0     		b	.L35
 1504              	.L33:
 716:.\Include/arm_math.h **** 
 1505              		.loc 2 716 0
 1506 09aa BB6D     		ldr	r3, [r7, #88]
 1507 09ac 5B42     		neg	r3, r3
 1508 09ae 3B65     		str	r3, [r7, #80]
 718:.\Include/arm_math.h ****       {
 1509              		.loc 2 718 0
 1510 09b0 3A6E     		ldr	r2, [r7, #96]
 1511 09b2 3B6D     		ldr	r3, [r7, #80]
 1512 09b4 9A42     		cmp	r2, r3
 1513 09b6 03DA     		bge	.L35
 720:.\Include/arm_math.h ****       }
 1514              		.loc 2 720 0
 1515 09b8 3B6D     		ldr	r3, [r7, #80]
 1516 09ba 3B66     		str	r3, [r7, #96]
 1517 09bc 00E0     		b	.L35
 1518              	.L63:
 711:.\Include/arm_math.h ****       }
 1519              		.loc 2 711 0
 1520 09be C046     		mov	r8, r8
 1521              	.L35:
 723:.\Include/arm_math.h ****   }
 1522              		.loc 2 723 0
 1523 09c0 3B6E     		ldr	r3, [r7, #96]
 1524              	.LBE47:
 1525              	.LBE46:
 1526              		.loc 1 384 0
 1527 09c2 DAB2     		uxtb	r2, r3
 1528 09c4 9223     		mov	r3, #146
 1529 09c6 5B00     		lsl	r3, r3, #1
 1530 09c8 FB18     		add	r3, r7, r3
 1531 09ca 1B68     		ldr	r3, [r3]
 1532 09cc 1A70     		strb	r2, [r3]
 385:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     pOut += inc;
 1533              		.loc 1 385 0
 1534 09ce FC23     		mov	r3, #252
 1535 09d0 FB18     		add	r3, r7, r3
 1536 09d2 1B68     		ldr	r3, [r3]
 1537 09d4 9222     		mov	r2, #146
 1538 09d6 5200     		lsl	r2, r2, #1
 1539 09d8 BA18     		add	r2, r7, r2
 1540 09da 1268     		ldr	r2, [r2]
 1541 09dc D318     		add	r3, r2, r3
 1542 09de 9222     		mov	r2, #146
 1543 09e0 5200     		lsl	r2, r2, #1
 1544 09e2 BA18     		add	r2, r7, r2
 1545 09e4 1360     		str	r3, [r2]
 386:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pOut = (q7_t) (__SSAT(acc2 >> 7u, 8));
 1546              		.loc 1 386 0
 1547 09e6 8623     		mov	r3, #134
 1548 09e8 5B00     		lsl	r3, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 53


 1549 09ea FB18     		add	r3, r7, r3
 1550 09ec 1B68     		ldr	r3, [r3]
 1551 09ee DB11     		asr	r3, r3, #7
 1552 09f0 FB64     		str	r3, [r7, #76]
 1553 09f2 0823     		mov	r3, #8
 1554 09f4 BB64     		str	r3, [r7, #72]
 1555              	.LBB48:
 1556              	.LBB49:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1557              		.loc 2 699 0
 1558 09f6 0123     		mov	r3, #1
 1559 09f8 7B64     		str	r3, [r7, #68]
 700:.\Include/arm_math.h ****     {
 1560              		.loc 2 700 0
 1561 09fa 0023     		mov	r3, #0
 1562 09fc 3B64     		str	r3, [r7, #64]
 1563 09fe 05E0     		b	.L37
 1564              	.L38:
 702:.\Include/arm_math.h ****     }
 1565              		.loc 2 702 0
 1566 0a00 7B6C     		ldr	r3, [r7, #68]
 1567 0a02 5B00     		lsl	r3, r3, #1
 1568 0a04 7B64     		str	r3, [r7, #68]
 700:.\Include/arm_math.h ****     {
 1569              		.loc 2 700 0
 1570 0a06 3B6C     		ldr	r3, [r7, #64]
 1571 0a08 0133     		add	r3, r3, #1
 1572 0a0a 3B64     		str	r3, [r7, #64]
 1573              	.L37:
 1574 0a0c BB6C     		ldr	r3, [r7, #72]
 1575 0a0e 013B     		sub	r3, r3, #1
 1576 0a10 3A6C     		ldr	r2, [r7, #64]
 1577 0a12 9A42     		cmp	r2, r3
 1578 0a14 F4D3     		bcc	.L38
 705:.\Include/arm_math.h ****     {
 1579              		.loc 2 705 0
 1580 0a16 FB6C     		ldr	r3, [r7, #76]
 1581 0a18 002B     		cmp	r3, #0
 1582 0a1a 09DD     		ble	.L39
 707:.\Include/arm_math.h **** 
 1583              		.loc 2 707 0
 1584 0a1c 7B6C     		ldr	r3, [r7, #68]
 1585 0a1e 013B     		sub	r3, r3, #1
 1586 0a20 7B64     		str	r3, [r7, #68]
 709:.\Include/arm_math.h ****       {
 1587              		.loc 2 709 0
 1588 0a22 FA6C     		ldr	r2, [r7, #76]
 1589 0a24 7B6C     		ldr	r3, [r7, #68]
 1590 0a26 9A42     		cmp	r2, r3
 1591 0a28 0CDD     		ble	.L64
 711:.\Include/arm_math.h ****       }
 1592              		.loc 2 711 0
 1593 0a2a 7B6C     		ldr	r3, [r7, #68]
 1594 0a2c FB64     		str	r3, [r7, #76]
 1595 0a2e 0AE0     		b	.L41
 1596              	.L39:
 716:.\Include/arm_math.h **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 54


 1597              		.loc 2 716 0
 1598 0a30 7B6C     		ldr	r3, [r7, #68]
 1599 0a32 5B42     		neg	r3, r3
 1600 0a34 FB63     		str	r3, [r7, #60]
 718:.\Include/arm_math.h ****       {
 1601              		.loc 2 718 0
 1602 0a36 FA6C     		ldr	r2, [r7, #76]
 1603 0a38 FB6B     		ldr	r3, [r7, #60]
 1604 0a3a 9A42     		cmp	r2, r3
 1605 0a3c 03DA     		bge	.L41
 720:.\Include/arm_math.h ****       }
 1606              		.loc 2 720 0
 1607 0a3e FB6B     		ldr	r3, [r7, #60]
 1608 0a40 FB64     		str	r3, [r7, #76]
 1609 0a42 00E0     		b	.L41
 1610              	.L64:
 711:.\Include/arm_math.h ****       }
 1611              		.loc 2 711 0
 1612 0a44 C046     		mov	r8, r8
 1613              	.L41:
 723:.\Include/arm_math.h ****   }
 1614              		.loc 2 723 0
 1615 0a46 FB6C     		ldr	r3, [r7, #76]
 1616              	.LBE49:
 1617              	.LBE48:
 1618              		.loc 1 386 0
 1619 0a48 DAB2     		uxtb	r2, r3
 1620 0a4a 9223     		mov	r3, #146
 1621 0a4c 5B00     		lsl	r3, r3, #1
 1622 0a4e FB18     		add	r3, r7, r3
 1623 0a50 1B68     		ldr	r3, [r3]
 1624 0a52 1A70     		strb	r2, [r3]
 387:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     pOut += inc;
 1625              		.loc 1 387 0
 1626 0a54 FC23     		mov	r3, #252
 1627 0a56 FB18     		add	r3, r7, r3
 1628 0a58 1B68     		ldr	r3, [r3]
 1629 0a5a 9222     		mov	r2, #146
 1630 0a5c 5200     		lsl	r2, r2, #1
 1631 0a5e BA18     		add	r2, r7, r2
 1632 0a60 1268     		ldr	r2, [r2]
 1633 0a62 D318     		add	r3, r2, r3
 1634 0a64 9222     		mov	r2, #146
 1635 0a66 5200     		lsl	r2, r2, #1
 1636 0a68 BA18     		add	r2, r7, r2
 1637 0a6a 1360     		str	r3, [r2]
 388:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pOut = (q7_t) (__SSAT(acc3 >> 7u, 8));
 1638              		.loc 1 388 0
 1639 0a6c 8423     		mov	r3, #132
 1640 0a6e 5B00     		lsl	r3, r3, #1
 1641 0a70 FB18     		add	r3, r7, r3
 1642 0a72 1B68     		ldr	r3, [r3]
 1643 0a74 DB11     		asr	r3, r3, #7
 1644 0a76 BB63     		str	r3, [r7, #56]
 1645 0a78 0823     		mov	r3, #8
 1646 0a7a 7B63     		str	r3, [r7, #52]
 1647              	.LBB50:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 55


 1648              	.LBB51:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1649              		.loc 2 699 0
 1650 0a7c 0123     		mov	r3, #1
 1651 0a7e 3B63     		str	r3, [r7, #48]
 700:.\Include/arm_math.h ****     {
 1652              		.loc 2 700 0
 1653 0a80 0023     		mov	r3, #0
 1654 0a82 FB62     		str	r3, [r7, #44]
 1655 0a84 05E0     		b	.L43
 1656              	.L44:
 702:.\Include/arm_math.h ****     }
 1657              		.loc 2 702 0
 1658 0a86 3B6B     		ldr	r3, [r7, #48]
 1659 0a88 5B00     		lsl	r3, r3, #1
 1660 0a8a 3B63     		str	r3, [r7, #48]
 700:.\Include/arm_math.h ****     {
 1661              		.loc 2 700 0
 1662 0a8c FB6A     		ldr	r3, [r7, #44]
 1663 0a8e 0133     		add	r3, r3, #1
 1664 0a90 FB62     		str	r3, [r7, #44]
 1665              	.L43:
 1666 0a92 7B6B     		ldr	r3, [r7, #52]
 1667 0a94 013B     		sub	r3, r3, #1
 1668 0a96 FA6A     		ldr	r2, [r7, #44]
 1669 0a98 9A42     		cmp	r2, r3
 1670 0a9a F4D3     		bcc	.L44
 705:.\Include/arm_math.h ****     {
 1671              		.loc 2 705 0
 1672 0a9c BB6B     		ldr	r3, [r7, #56]
 1673 0a9e 002B     		cmp	r3, #0
 1674 0aa0 09DD     		ble	.L45
 707:.\Include/arm_math.h **** 
 1675              		.loc 2 707 0
 1676 0aa2 3B6B     		ldr	r3, [r7, #48]
 1677 0aa4 013B     		sub	r3, r3, #1
 1678 0aa6 3B63     		str	r3, [r7, #48]
 709:.\Include/arm_math.h ****       {
 1679              		.loc 2 709 0
 1680 0aa8 BA6B     		ldr	r2, [r7, #56]
 1681 0aaa 3B6B     		ldr	r3, [r7, #48]
 1682 0aac 9A42     		cmp	r2, r3
 1683 0aae 0CDD     		ble	.L65
 711:.\Include/arm_math.h ****       }
 1684              		.loc 2 711 0
 1685 0ab0 3B6B     		ldr	r3, [r7, #48]
 1686 0ab2 BB63     		str	r3, [r7, #56]
 1687 0ab4 0AE0     		b	.L47
 1688              	.L45:
 716:.\Include/arm_math.h **** 
 1689              		.loc 2 716 0
 1690 0ab6 3B6B     		ldr	r3, [r7, #48]
 1691 0ab8 5B42     		neg	r3, r3
 1692 0aba BB62     		str	r3, [r7, #40]
 718:.\Include/arm_math.h ****       {
 1693              		.loc 2 718 0
 1694 0abc BA6B     		ldr	r2, [r7, #56]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 56


 1695 0abe BB6A     		ldr	r3, [r7, #40]
 1696 0ac0 9A42     		cmp	r2, r3
 1697 0ac2 03DA     		bge	.L47
 720:.\Include/arm_math.h ****       }
 1698              		.loc 2 720 0
 1699 0ac4 BB6A     		ldr	r3, [r7, #40]
 1700 0ac6 BB63     		str	r3, [r7, #56]
 1701 0ac8 00E0     		b	.L47
 1702              	.L65:
 711:.\Include/arm_math.h ****       }
 1703              		.loc 2 711 0
 1704 0aca C046     		mov	r8, r8
 1705              	.L47:
 723:.\Include/arm_math.h ****   }
 1706              		.loc 2 723 0
 1707 0acc BB6B     		ldr	r3, [r7, #56]
 1708              	.LBE51:
 1709              	.LBE50:
 1710              		.loc 1 388 0
 1711 0ace DAB2     		uxtb	r2, r3
 1712 0ad0 9223     		mov	r3, #146
 1713 0ad2 5B00     		lsl	r3, r3, #1
 1714 0ad4 FB18     		add	r3, r7, r3
 1715 0ad6 1B68     		ldr	r3, [r3]
 1716 0ad8 1A70     		strb	r2, [r3]
 389:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     pOut += inc;
 1717              		.loc 1 389 0
 1718 0ada FC23     		mov	r3, #252
 1719 0adc FB18     		add	r3, r7, r3
 1720 0ade 1B68     		ldr	r3, [r3]
 1721 0ae0 9222     		mov	r2, #146
 1722 0ae2 5200     		lsl	r2, r2, #1
 1723 0ae4 BA18     		add	r2, r7, r2
 1724 0ae6 1268     		ldr	r2, [r2]
 1725 0ae8 D318     		add	r3, r2, r3
 1726 0aea 9222     		mov	r2, #146
 1727 0aec 5200     		lsl	r2, r2, #1
 1728 0aee BA18     		add	r2, r7, r2
 1729 0af0 1360     		str	r3, [r2]
 390:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 391:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Initialization of inputB pointer */
 392:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     pScr2 = py;
 1730              		.loc 1 392 0
 1731 0af2 E023     		mov	r3, #224
 1732 0af4 FB18     		add	r3, r7, r3
 1733 0af6 1B68     		ldr	r3, [r3]
 1734 0af8 9022     		mov	r2, #144
 1735 0afa 5200     		lsl	r2, r2, #1
 1736 0afc BA18     		add	r2, r7, r2
 1737 0afe 1360     		str	r3, [r2]
 393:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 394:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     pScratch1 += 4u;
 1738              		.loc 1 394 0
 1739 0b00 9A23     		mov	r3, #154
 1740 0b02 5B00     		lsl	r3, r3, #1
 1741 0b04 FB18     		add	r3, r7, r3
 1742 0b06 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 57


 1743 0b08 0833     		add	r3, r3, #8
 1744 0b0a 9A22     		mov	r2, #154
 1745 0b0c 5200     		lsl	r2, r2, #1
 1746 0b0e BA18     		add	r2, r7, r2
 1747 0b10 1360     		str	r3, [r2]
 1748              	.L12:
 278:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   {
 1749              		.loc 1 278 0
 1750 0b12 7B1C     		add	r3, r7, #1
 1751 0b14 FF33     		add	r3, r3, #255
 1752 0b16 1B68     		ldr	r3, [r3]
 1753 0b18 002B     		cmp	r3, #0
 1754 0b1a 00D0     		beq	.LCB1570
 1755 0b1c 58E4     		b	.L49	@long jump
 1756              	.LCB1570:
 395:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 396:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   }
 397:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 398:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 399:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   blkCnt = (srcALen + srcBLen - 1u) & 0x3;
 1757              		.loc 1 399 0
 1758 0b1e BA68     		ldr	r2, [r7, #8]
 1759 0b20 3B68     		ldr	r3, [r7]
 1760 0b22 D318     		add	r3, r2, r3
 1761 0b24 013B     		sub	r3, r3, #1
 1762 0b26 0322     		mov	r2, #3
 1763 0b28 1340     		and	r3, r2
 1764 0b2a 7A1C     		add	r2, r7, #1
 1765 0b2c FF32     		add	r2, r2, #255
 1766 0b2e 1360     		str	r3, [r2]
 400:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 401:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   /* Calculate correlation for remaining samples of Bigger length sequence */
 402:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   while (blkCnt > 0)
 1767              		.loc 1 402 0
 1768 0b30 D6E0     		b	.L50
 1769              	.L61:
 403:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   {
 404:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Initialze temporary scratch pointer as scratch1 */
 405:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     pScr1 = pScratch1;
 1770              		.loc 1 405 0
 1771 0b32 9A23     		mov	r3, #154
 1772 0b34 5B00     		lsl	r3, r3, #1
 1773 0b36 FB18     		add	r3, r7, r3
 1774 0b38 1B68     		ldr	r3, [r3]
 1775 0b3a 3B61     		str	r3, [r7, #16]
 406:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 407:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Clear Accumlators */
 408:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     acc0 = 0;
 1776              		.loc 1 408 0
 1777 0b3c 0023     		mov	r3, #0
 1778 0b3e 8A22     		mov	r2, #138
 1779 0b40 5200     		lsl	r2, r2, #1
 1780 0b42 BA18     		add	r2, r7, r2
 1781 0b44 1360     		str	r3, [r2]
 409:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 410:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     tapCnt = (srcBLen) >> 1u;
 1782              		.loc 1 410 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 58


 1783 0b46 3B68     		ldr	r3, [r7]
 1784 0b48 5B08     		lsr	r3, r3, #1
 1785 0b4a F822     		mov	r2, #248
 1786 0b4c BA18     		add	r2, r7, r2
 1787 0b4e 1360     		str	r3, [r2]
 411:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 412:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     while (tapCnt > 0u)
 1788              		.loc 1 412 0
 1789 0b50 3AE0     		b	.L51
 1790              	.L52:
 413:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     {
 414:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       acc0 += (*pScr1++ * *pScr2++);
 1791              		.loc 1 414 0
 1792 0b52 3B69     		ldr	r3, [r7, #16]
 1793 0b54 9A1C     		add	r2, r3, #2
 1794 0b56 3A61     		str	r2, [r7, #16]
 1795 0b58 1B88     		ldrh	r3, [r3]
 1796 0b5a 1AB2     		sxth	r2, r3
 1797 0b5c 9023     		mov	r3, #144
 1798 0b5e 5B00     		lsl	r3, r3, #1
 1799 0b60 FB18     		add	r3, r7, r3
 1800 0b62 1B68     		ldr	r3, [r3]
 1801 0b64 991C     		add	r1, r3, #2
 1802 0b66 9020     		mov	r0, #144
 1803 0b68 4000     		lsl	r0, r0, #1
 1804 0b6a 3818     		add	r0, r7, r0
 1805 0b6c 0160     		str	r1, [r0]
 1806 0b6e 1B88     		ldrh	r3, [r3]
 1807 0b70 1BB2     		sxth	r3, r3
 1808 0b72 5343     		mul	r3, r2
 1809 0b74 8A22     		mov	r2, #138
 1810 0b76 5200     		lsl	r2, r2, #1
 1811 0b78 BA18     		add	r2, r7, r2
 1812 0b7a 1268     		ldr	r2, [r2]
 1813 0b7c D318     		add	r3, r2, r3
 1814 0b7e 8A22     		mov	r2, #138
 1815 0b80 5200     		lsl	r2, r2, #1
 1816 0b82 BA18     		add	r2, r7, r2
 1817 0b84 1360     		str	r3, [r2]
 415:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       acc0 += (*pScr1++ * *pScr2++);
 1818              		.loc 1 415 0
 1819 0b86 3B69     		ldr	r3, [r7, #16]
 1820 0b88 9A1C     		add	r2, r3, #2
 1821 0b8a 3A61     		str	r2, [r7, #16]
 1822 0b8c 1B88     		ldrh	r3, [r3]
 1823 0b8e 1AB2     		sxth	r2, r3
 1824 0b90 9023     		mov	r3, #144
 1825 0b92 5B00     		lsl	r3, r3, #1
 1826 0b94 FB18     		add	r3, r7, r3
 1827 0b96 1B68     		ldr	r3, [r3]
 1828 0b98 991C     		add	r1, r3, #2
 1829 0b9a 9020     		mov	r0, #144
 1830 0b9c 4000     		lsl	r0, r0, #1
 1831 0b9e 3818     		add	r0, r7, r0
 1832 0ba0 0160     		str	r1, [r0]
 1833 0ba2 1B88     		ldrh	r3, [r3]
 1834 0ba4 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 59


 1835 0ba6 5343     		mul	r3, r2
 1836 0ba8 8A22     		mov	r2, #138
 1837 0baa 5200     		lsl	r2, r2, #1
 1838 0bac BA18     		add	r2, r7, r2
 1839 0bae 1268     		ldr	r2, [r2]
 1840 0bb0 D318     		add	r3, r2, r3
 1841 0bb2 8A22     		mov	r2, #138
 1842 0bb4 5200     		lsl	r2, r2, #1
 1843 0bb6 BA18     		add	r2, r7, r2
 1844 0bb8 1360     		str	r3, [r2]
 416:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 417:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       /* Decrement the loop counter */
 418:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       tapCnt--;
 1845              		.loc 1 418 0
 1846 0bba F823     		mov	r3, #248
 1847 0bbc FB18     		add	r3, r7, r3
 1848 0bbe 1B68     		ldr	r3, [r3]
 1849 0bc0 013B     		sub	r3, r3, #1
 1850 0bc2 F822     		mov	r2, #248
 1851 0bc4 BA18     		add	r2, r7, r2
 1852 0bc6 1360     		str	r3, [r2]
 1853              	.L51:
 412:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     {
 1854              		.loc 1 412 0
 1855 0bc8 F823     		mov	r3, #248
 1856 0bca FB18     		add	r3, r7, r3
 1857 0bcc 1B68     		ldr	r3, [r3]
 1858 0bce 002B     		cmp	r3, #0
 1859 0bd0 BFD1     		bne	.L52
 419:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     }
 420:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 421:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     tapCnt = (srcBLen) & 1u;
 1860              		.loc 1 421 0
 1861 0bd2 3B68     		ldr	r3, [r7]
 1862 0bd4 0122     		mov	r2, #1
 1863 0bd6 1340     		and	r3, r2
 1864 0bd8 F822     		mov	r2, #248
 1865 0bda BA18     		add	r2, r7, r2
 1866 0bdc 1360     		str	r3, [r2]
 422:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 423:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* apply same above for remaining samples of smaller length sequence */
 424:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     while (tapCnt > 0u)
 1867              		.loc 1 424 0
 1868 0bde 20E0     		b	.L53
 1869              	.L54:
 425:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     {
 426:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 427:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       /* accumlate the results */
 428:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       acc0 += (*pScr1++ * *pScr2++);
 1870              		.loc 1 428 0
 1871 0be0 3B69     		ldr	r3, [r7, #16]
 1872 0be2 9A1C     		add	r2, r3, #2
 1873 0be4 3A61     		str	r2, [r7, #16]
 1874 0be6 1B88     		ldrh	r3, [r3]
 1875 0be8 1AB2     		sxth	r2, r3
 1876 0bea 9023     		mov	r3, #144
 1877 0bec 5B00     		lsl	r3, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 60


 1878 0bee FB18     		add	r3, r7, r3
 1879 0bf0 1B68     		ldr	r3, [r3]
 1880 0bf2 991C     		add	r1, r3, #2
 1881 0bf4 9020     		mov	r0, #144
 1882 0bf6 4000     		lsl	r0, r0, #1
 1883 0bf8 3818     		add	r0, r7, r0
 1884 0bfa 0160     		str	r1, [r0]
 1885 0bfc 1B88     		ldrh	r3, [r3]
 1886 0bfe 1BB2     		sxth	r3, r3
 1887 0c00 5343     		mul	r3, r2
 1888 0c02 8A22     		mov	r2, #138
 1889 0c04 5200     		lsl	r2, r2, #1
 1890 0c06 BA18     		add	r2, r7, r2
 1891 0c08 1268     		ldr	r2, [r2]
 1892 0c0a D318     		add	r3, r2, r3
 1893 0c0c 8A22     		mov	r2, #138
 1894 0c0e 5200     		lsl	r2, r2, #1
 1895 0c10 BA18     		add	r2, r7, r2
 1896 0c12 1360     		str	r3, [r2]
 429:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 430:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       /* Decrement the loop counter */
 431:Source\FilteringFunctions/arm_correlate_opt_q7.c ****       tapCnt--;
 1897              		.loc 1 431 0
 1898 0c14 F823     		mov	r3, #248
 1899 0c16 FB18     		add	r3, r7, r3
 1900 0c18 1B68     		ldr	r3, [r3]
 1901 0c1a 013B     		sub	r3, r3, #1
 1902 0c1c F822     		mov	r2, #248
 1903 0c1e BA18     		add	r2, r7, r2
 1904 0c20 1360     		str	r3, [r2]
 1905              	.L53:
 424:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     {
 1906              		.loc 1 424 0
 1907 0c22 F823     		mov	r3, #248
 1908 0c24 FB18     		add	r3, r7, r3
 1909 0c26 1B68     		ldr	r3, [r3]
 1910 0c28 002B     		cmp	r3, #0
 1911 0c2a D9D1     		bne	.L54
 432:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     }
 433:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 434:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     blkCnt--;
 1912              		.loc 1 434 0
 1913 0c2c 7B1C     		add	r3, r7, #1
 1914 0c2e FF33     		add	r3, r3, #255
 1915 0c30 1B68     		ldr	r3, [r3]
 1916 0c32 013B     		sub	r3, r3, #1
 1917 0c34 7A1C     		add	r2, r7, #1
 1918 0c36 FF32     		add	r2, r2, #255
 1919 0c38 1360     		str	r3, [r2]
 435:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 436:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Store the result in the accumulator in the destination buffer. */
 437:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     *pOut = (q7_t) (__SSAT(acc0 >> 7u, 8));
 1920              		.loc 1 437 0
 1921 0c3a 8A23     		mov	r3, #138
 1922 0c3c 5B00     		lsl	r3, r3, #1
 1923 0c3e FB18     		add	r3, r7, r3
 1924 0c40 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 61


 1925 0c42 DB11     		asr	r3, r3, #7
 1926 0c44 7B62     		str	r3, [r7, #36]
 1927 0c46 0823     		mov	r3, #8
 1928 0c48 3B62     		str	r3, [r7, #32]
 1929              	.LBB52:
 1930              	.LBB53:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1931              		.loc 2 699 0
 1932 0c4a 0123     		mov	r3, #1
 1933 0c4c FB61     		str	r3, [r7, #28]
 700:.\Include/arm_math.h ****     {
 1934              		.loc 2 700 0
 1935 0c4e 0023     		mov	r3, #0
 1936 0c50 BB61     		str	r3, [r7, #24]
 1937 0c52 05E0     		b	.L55
 1938              	.L56:
 702:.\Include/arm_math.h ****     }
 1939              		.loc 2 702 0
 1940 0c54 FB69     		ldr	r3, [r7, #28]
 1941 0c56 5B00     		lsl	r3, r3, #1
 1942 0c58 FB61     		str	r3, [r7, #28]
 700:.\Include/arm_math.h ****     {
 1943              		.loc 2 700 0
 1944 0c5a BB69     		ldr	r3, [r7, #24]
 1945 0c5c 0133     		add	r3, r3, #1
 1946 0c5e BB61     		str	r3, [r7, #24]
 1947              	.L55:
 1948 0c60 3B6A     		ldr	r3, [r7, #32]
 1949 0c62 013B     		sub	r3, r3, #1
 1950 0c64 BA69     		ldr	r2, [r7, #24]
 1951 0c66 9A42     		cmp	r2, r3
 1952 0c68 F4D3     		bcc	.L56
 705:.\Include/arm_math.h ****     {
 1953              		.loc 2 705 0
 1954 0c6a 7B6A     		ldr	r3, [r7, #36]
 1955 0c6c 002B     		cmp	r3, #0
 1956 0c6e 09DD     		ble	.L57
 707:.\Include/arm_math.h **** 
 1957              		.loc 2 707 0
 1958 0c70 FB69     		ldr	r3, [r7, #28]
 1959 0c72 013B     		sub	r3, r3, #1
 1960 0c74 FB61     		str	r3, [r7, #28]
 709:.\Include/arm_math.h ****       {
 1961              		.loc 2 709 0
 1962 0c76 7A6A     		ldr	r2, [r7, #36]
 1963 0c78 FB69     		ldr	r3, [r7, #28]
 1964 0c7a 9A42     		cmp	r2, r3
 1965 0c7c 0CDD     		ble	.L66
 711:.\Include/arm_math.h ****       }
 1966              		.loc 2 711 0
 1967 0c7e FB69     		ldr	r3, [r7, #28]
 1968 0c80 7B62     		str	r3, [r7, #36]
 1969 0c82 0AE0     		b	.L59
 1970              	.L57:
 716:.\Include/arm_math.h **** 
 1971              		.loc 2 716 0
 1972 0c84 FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 62


 1973 0c86 5B42     		neg	r3, r3
 1974 0c88 7B61     		str	r3, [r7, #20]
 718:.\Include/arm_math.h ****       {
 1975              		.loc 2 718 0
 1976 0c8a 7A6A     		ldr	r2, [r7, #36]
 1977 0c8c 7B69     		ldr	r3, [r7, #20]
 1978 0c8e 9A42     		cmp	r2, r3
 1979 0c90 03DA     		bge	.L59
 720:.\Include/arm_math.h ****       }
 1980              		.loc 2 720 0
 1981 0c92 7B69     		ldr	r3, [r7, #20]
 1982 0c94 7B62     		str	r3, [r7, #36]
 1983 0c96 00E0     		b	.L59
 1984              	.L66:
 711:.\Include/arm_math.h ****       }
 1985              		.loc 2 711 0
 1986 0c98 C046     		mov	r8, r8
 1987              	.L59:
 723:.\Include/arm_math.h ****   }
 1988              		.loc 2 723 0
 1989 0c9a 7B6A     		ldr	r3, [r7, #36]
 1990              	.LBE53:
 1991              	.LBE52:
 1992              		.loc 1 437 0
 1993 0c9c DAB2     		uxtb	r2, r3
 1994 0c9e 9223     		mov	r3, #146
 1995 0ca0 5B00     		lsl	r3, r3, #1
 1996 0ca2 FB18     		add	r3, r7, r3
 1997 0ca4 1B68     		ldr	r3, [r3]
 1998 0ca6 1A70     		strb	r2, [r3]
 438:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 439:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     pOut += inc;
 1999              		.loc 1 439 0
 2000 0ca8 FC23     		mov	r3, #252
 2001 0caa FB18     		add	r3, r7, r3
 2002 0cac 1B68     		ldr	r3, [r3]
 2003 0cae 9222     		mov	r2, #146
 2004 0cb0 5200     		lsl	r2, r2, #1
 2005 0cb2 BA18     		add	r2, r7, r2
 2006 0cb4 1268     		ldr	r2, [r2]
 2007 0cb6 D318     		add	r3, r2, r3
 2008 0cb8 9222     		mov	r2, #146
 2009 0cba 5200     		lsl	r2, r2, #1
 2010 0cbc BA18     		add	r2, r7, r2
 2011 0cbe 1360     		str	r3, [r2]
 440:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 441:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     /* Initialization of inputB pointer */
 442:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     pScr2 = py;
 2012              		.loc 1 442 0
 2013 0cc0 E023     		mov	r3, #224
 2014 0cc2 FB18     		add	r3, r7, r3
 2015 0cc4 1B68     		ldr	r3, [r3]
 2016 0cc6 9022     		mov	r2, #144
 2017 0cc8 5200     		lsl	r2, r2, #1
 2018 0cca BA18     		add	r2, r7, r2
 2019 0ccc 1360     		str	r3, [r2]
 443:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 63


 444:Source\FilteringFunctions/arm_correlate_opt_q7.c ****     pScratch1 += 1u;
 2020              		.loc 1 444 0
 2021 0cce 9A23     		mov	r3, #154
 2022 0cd0 5B00     		lsl	r3, r3, #1
 2023 0cd2 FB18     		add	r3, r7, r3
 2024 0cd4 1B68     		ldr	r3, [r3]
 2025 0cd6 0233     		add	r3, r3, #2
 2026 0cd8 9A22     		mov	r2, #154
 2027 0cda 5200     		lsl	r2, r2, #1
 2028 0cdc BA18     		add	r2, r7, r2
 2029 0cde 1360     		str	r3, [r2]
 2030              	.L50:
 402:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   {
 2031              		.loc 1 402 0
 2032 0ce0 7B1C     		add	r3, r7, #1
 2033 0ce2 FF33     		add	r3, r3, #255
 2034 0ce4 1B68     		ldr	r3, [r3]
 2035 0ce6 002B     		cmp	r3, #0
 2036 0ce8 00D0     		beq	.LCB1832
 2037 0cea 22E7     		b	.L61	@long jump
 2038              	.LCB1832:
 445:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 446:Source\FilteringFunctions/arm_correlate_opt_q7.c ****   }
 447:Source\FilteringFunctions/arm_correlate_opt_q7.c **** 
 448:Source\FilteringFunctions/arm_correlate_opt_q7.c **** }
 2039              		.loc 1 448 0
 2040 0cec BD46     		mov	sp, r7
 2041 0cee 4AB0     		add	sp, sp, #296
 2042              		@ sp needed
 2043 0cf0 80BD     		pop	{r7, pc}
 2044              		.cfi_endproc
 2045              	.LFE82:
 2046              		.size	arm_correlate_opt_q7, .-arm_correlate_opt_q7
 2047 0cf2 C046     		.text
 2048              	.Letext0:
 2049              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 2050              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 2051              		.section	.debug_info,"",%progbits
 2052              	.Ldebug_info0:
 2053 0000 52060000 		.4byte	0x652
 2054 0004 0400     		.2byte	0x4
 2055 0006 00000000 		.4byte	.Ldebug_abbrev0
 2056 000a 04       		.byte	0x4
 2057 000b 01       		.uleb128 0x1
 2058 000c F1000000 		.4byte	.LASF49
 2059 0010 01       		.byte	0x1
 2060 0011 BF010000 		.4byte	.LASF50
 2061 0015 1E020000 		.4byte	.LASF51
 2062 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2063 001d 00000000 		.4byte	0
 2064 0021 00000000 		.4byte	.Ldebug_line0
 2065 0025 02       		.uleb128 0x2
 2066 0026 3B000000 		.4byte	.LASF2
 2067 002a 03       		.byte	0x3
 2068 002b 1B       		.byte	0x1b
 2069 002c 30000000 		.4byte	0x30
 2070 0030 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 64


 2071 0031 01       		.byte	0x1
 2072 0032 06       		.byte	0x6
 2073 0033 6F000000 		.4byte	.LASF0
 2074 0037 03       		.uleb128 0x3
 2075 0038 01       		.byte	0x1
 2076 0039 08       		.byte	0x8
 2077 003a 06020000 		.4byte	.LASF1
 2078 003e 02       		.uleb128 0x2
 2079 003f C1000000 		.4byte	.LASF3
 2080 0043 03       		.byte	0x3
 2081 0044 29       		.byte	0x29
 2082 0045 49000000 		.4byte	0x49
 2083 0049 03       		.uleb128 0x3
 2084 004a 02       		.byte	0x2
 2085 004b 05       		.byte	0x5
 2086 004c 14020000 		.4byte	.LASF4
 2087 0050 03       		.uleb128 0x3
 2088 0051 02       		.byte	0x2
 2089 0052 07       		.byte	0x7
 2090 0053 83010000 		.4byte	.LASF5
 2091 0057 02       		.uleb128 0x2
 2092 0058 94020000 		.4byte	.LASF6
 2093 005c 03       		.byte	0x3
 2094 005d 3F       		.byte	0x3f
 2095 005e 62000000 		.4byte	0x62
 2096 0062 03       		.uleb128 0x3
 2097 0063 04       		.byte	0x4
 2098 0064 05       		.byte	0x5
 2099 0065 8F000000 		.4byte	.LASF7
 2100 0069 02       		.uleb128 0x2
 2101 006a B6000000 		.4byte	.LASF8
 2102 006e 03       		.byte	0x3
 2103 006f 41       		.byte	0x41
 2104 0070 74000000 		.4byte	0x74
 2105 0074 03       		.uleb128 0x3
 2106 0075 04       		.byte	0x4
 2107 0076 07       		.byte	0x7
 2108 0077 DF000000 		.4byte	.LASF9
 2109 007b 03       		.uleb128 0x3
 2110 007c 08       		.byte	0x8
 2111 007d 05       		.byte	0x5
 2112 007e 61000000 		.4byte	.LASF10
 2113 0082 03       		.uleb128 0x3
 2114 0083 08       		.byte	0x8
 2115 0084 07       		.byte	0x7
 2116 0085 1D000000 		.4byte	.LASF11
 2117 0089 04       		.uleb128 0x4
 2118 008a 04       		.byte	0x4
 2119 008b 05       		.byte	0x5
 2120 008c 696E7400 		.ascii	"int\000"
 2121 0090 03       		.uleb128 0x3
 2122 0091 04       		.byte	0x4
 2123 0092 07       		.byte	0x7
 2124 0093 CB000000 		.4byte	.LASF12
 2125 0097 02       		.uleb128 0x2
 2126 0098 AB020000 		.4byte	.LASF13
 2127 009c 04       		.byte	0x4
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 65


 2128 009d 14       		.byte	0x14
 2129 009e 25000000 		.4byte	0x25
 2130 00a2 02       		.uleb128 0x2
 2131 00a3 59000000 		.4byte	.LASF14
 2132 00a7 04       		.byte	0x4
 2133 00a8 20       		.byte	0x20
 2134 00a9 3E000000 		.4byte	0x3e
 2135 00ad 02       		.uleb128 0x2
 2136 00ae FE010000 		.4byte	.LASF15
 2137 00b2 04       		.byte	0x4
 2138 00b3 2C       		.byte	0x2c
 2139 00b4 57000000 		.4byte	0x57
 2140 00b8 02       		.uleb128 0x2
 2141 00b9 72020000 		.4byte	.LASF16
 2142 00bd 04       		.byte	0x4
 2143 00be 2D       		.byte	0x2d
 2144 00bf 69000000 		.4byte	0x69
 2145 00c3 03       		.uleb128 0x3
 2146 00c4 04       		.byte	0x4
 2147 00c5 07       		.byte	0x7
 2148 00c6 A0010000 		.4byte	.LASF17
 2149 00ca 03       		.uleb128 0x3
 2150 00cb 01       		.byte	0x1
 2151 00cc 08       		.byte	0x8
 2152 00cd 8F020000 		.4byte	.LASF18
 2153 00d1 03       		.uleb128 0x3
 2154 00d2 08       		.byte	0x8
 2155 00d3 04       		.byte	0x4
 2156 00d4 A3000000 		.4byte	.LASF19
 2157 00d8 03       		.uleb128 0x3
 2158 00d9 04       		.byte	0x4
 2159 00da 04       		.byte	0x4
 2160 00db F0010000 		.4byte	.LASF20
 2161 00df 03       		.uleb128 0x3
 2162 00e0 08       		.byte	0x8
 2163 00e1 04       		.byte	0x4
 2164 00e2 A9010000 		.4byte	.LASF21
 2165 00e6 05       		.uleb128 0x5
 2166 00e7 A6020000 		.4byte	.LASF22
 2167 00eb 02       		.byte	0x2
 2168 00ec 9101     		.2byte	0x191
 2169 00ee 97000000 		.4byte	0x97
 2170 00f2 05       		.uleb128 0x5
 2171 00f3 9D000000 		.4byte	.LASF23
 2172 00f7 02       		.byte	0x2
 2173 00f8 9601     		.2byte	0x196
 2174 00fa A2000000 		.4byte	0xa2
 2175 00fe 05       		.uleb128 0x5
 2176 00ff 64020000 		.4byte	.LASF24
 2177 0103 02       		.byte	0x2
 2178 0104 9B01     		.2byte	0x19b
 2179 0106 AD000000 		.4byte	0xad
 2180 010a 06       		.uleb128 0x6
 2181 010b 04       		.byte	0x4
 2182 010c E6000000 		.4byte	0xe6
 2183 0110 06       		.uleb128 0x6
 2184 0111 04       		.byte	0x4
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 66


 2185 0112 F2000000 		.4byte	0xf2
 2186 0116 07       		.uleb128 0x7
 2187 0117 9E020000 		.4byte	.LASF25
 2188 011b 02       		.byte	0x2
 2189 011c B303     		.2byte	0x3b3
 2190 011e B8000000 		.4byte	0xb8
 2191 0122 03       		.byte	0x3
 2192 0123 48010000 		.4byte	0x148
 2193 0127 08       		.uleb128 0x8
 2194 0128 7800     		.ascii	"x\000"
 2195 012a 02       		.byte	0x2
 2196 012b B403     		.2byte	0x3b4
 2197 012d B8000000 		.4byte	0xb8
 2198 0131 08       		.uleb128 0x8
 2199 0132 7900     		.ascii	"y\000"
 2200 0134 02       		.byte	0x2
 2201 0135 B503     		.2byte	0x3b5
 2202 0137 B8000000 		.4byte	0xb8
 2203 013b 08       		.uleb128 0x8
 2204 013c 73756D00 		.ascii	"sum\000"
 2205 0140 02       		.byte	0x2
 2206 0141 B603     		.2byte	0x3b6
 2207 0143 B8000000 		.4byte	0xb8
 2208 0147 00       		.byte	0
 2209 0148 07       		.uleb128 0x7
 2210 0149 BE020000 		.4byte	.LASF26
 2211 014d 02       		.byte	0x2
 2212 014e C103     		.2byte	0x3c1
 2213 0150 B8000000 		.4byte	0xb8
 2214 0154 03       		.byte	0x3
 2215 0155 7A010000 		.4byte	0x17a
 2216 0159 08       		.uleb128 0x8
 2217 015a 7800     		.ascii	"x\000"
 2218 015c 02       		.byte	0x2
 2219 015d C203     		.2byte	0x3c2
 2220 015f B8000000 		.4byte	0xb8
 2221 0163 08       		.uleb128 0x8
 2222 0164 7900     		.ascii	"y\000"
 2223 0166 02       		.byte	0x2
 2224 0167 C303     		.2byte	0x3c3
 2225 0169 B8000000 		.4byte	0xb8
 2226 016d 08       		.uleb128 0x8
 2227 016e 73756D00 		.ascii	"sum\000"
 2228 0172 02       		.byte	0x2
 2229 0173 C403     		.2byte	0x3c4
 2230 0175 B8000000 		.4byte	0xb8
 2231 0179 00       		.byte	0
 2232 017a 07       		.uleb128 0x7
 2233 017b 0F000000 		.4byte	.LASF27
 2234 017f 02       		.byte	0x2
 2235 0180 B402     		.2byte	0x2b4
 2236 0182 FE000000 		.4byte	0xfe
 2237 0186 03       		.byte	0x3
 2238 0187 C2010000 		.4byte	0x1c2
 2239 018b 08       		.uleb128 0x8
 2240 018c 7800     		.ascii	"x\000"
 2241 018e 02       		.byte	0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 67


 2242 018f B502     		.2byte	0x2b5
 2243 0191 FE000000 		.4byte	0xfe
 2244 0195 08       		.uleb128 0x8
 2245 0196 7900     		.ascii	"y\000"
 2246 0198 02       		.byte	0x2
 2247 0199 B602     		.2byte	0x2b6
 2248 019b B8000000 		.4byte	0xb8
 2249 019f 09       		.uleb128 0x9
 2250 01a0 7B020000 		.4byte	.LASF28
 2251 01a4 02       		.byte	0x2
 2252 01a5 B802     		.2byte	0x2b8
 2253 01a7 AD000000 		.4byte	0xad
 2254 01ab 09       		.uleb128 0x9
 2255 01ac 16000000 		.4byte	.LASF29
 2256 01b0 02       		.byte	0x2
 2257 01b1 B802     		.2byte	0x2b8
 2258 01b3 AD000000 		.4byte	0xad
 2259 01b7 0A       		.uleb128 0xa
 2260 01b8 6900     		.ascii	"i\000"
 2261 01ba 02       		.byte	0x2
 2262 01bb B902     		.2byte	0x2b9
 2263 01bd B8000000 		.4byte	0xb8
 2264 01c1 00       		.byte	0
 2265 01c2 0B       		.uleb128 0xb
 2266 01c3 44000000 		.4byte	.LASF52
 2267 01c7 01       		.byte	0x1
 2268 01c8 47       		.byte	0x47
 2269 01c9 00000000 		.4byte	.LFB82
 2270 01cd F20C0000 		.4byte	.LFE82-.LFB82
 2271 01d1 01       		.uleb128 0x1
 2272 01d2 9C       		.byte	0x9c
 2273 01d3 0C       		.uleb128 0xc
 2274 01d4 AA000000 		.4byte	.LASF30
 2275 01d8 01       		.byte	0x1
 2276 01d9 48       		.byte	0x48
 2277 01da 0A010000 		.4byte	0x10a
 2278 01de 03       		.uleb128 0x3
 2279 01df 91       		.byte	0x91
 2280 01e0 DC7D     		.sleb128 -292
 2281 01e2 0C       		.uleb128 0xc
 2282 01e3 6A020000 		.4byte	.LASF31
 2283 01e7 01       		.byte	0x1
 2284 01e8 49       		.byte	0x49
 2285 01e9 B8000000 		.4byte	0xb8
 2286 01ed 03       		.uleb128 0x3
 2287 01ee 91       		.byte	0x91
 2288 01ef D87D     		.sleb128 -296
 2289 01f1 0C       		.uleb128 0xc
 2290 01f2 B0000000 		.4byte	.LASF32
 2291 01f6 01       		.byte	0x1
 2292 01f7 4A       		.byte	0x4a
 2293 01f8 0A010000 		.4byte	0x10a
 2294 01fc 03       		.uleb128 0x3
 2295 01fd 91       		.byte	0x91
 2296 01fe D47D     		.sleb128 -300
 2297 0200 0C       		.uleb128 0xc
 2298 0201 F6010000 		.4byte	.LASF33
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 68


 2299 0205 01       		.byte	0x1
 2300 0206 4B       		.byte	0x4b
 2301 0207 B8000000 		.4byte	0xb8
 2302 020b 03       		.uleb128 0x3
 2303 020c 91       		.byte	0x91
 2304 020d D07D     		.sleb128 -304
 2305 020f 0C       		.uleb128 0xc
 2306 0210 98000000 		.4byte	.LASF34
 2307 0214 01       		.byte	0x1
 2308 0215 4C       		.byte	0x4c
 2309 0216 0A010000 		.4byte	0x10a
 2310 021a 02       		.uleb128 0x2
 2311 021b 91       		.byte	0x91
 2312 021c 00       		.sleb128 0
 2313 021d 0C       		.uleb128 0xc
 2314 021e 7B000000 		.4byte	.LASF35
 2315 0222 01       		.byte	0x1
 2316 0223 4D       		.byte	0x4d
 2317 0224 10010000 		.4byte	0x110
 2318 0228 02       		.uleb128 0x2
 2319 0229 91       		.byte	0x91
 2320 022a 04       		.sleb128 4
 2321 022b 0C       		.uleb128 0xc
 2322 022c 85000000 		.4byte	.LASF36
 2323 0230 01       		.byte	0x1
 2324 0231 4E       		.byte	0x4e
 2325 0232 10010000 		.4byte	0x110
 2326 0236 02       		.uleb128 0x2
 2327 0237 91       		.byte	0x91
 2328 0238 08       		.sleb128 8
 2329 0239 0D       		.uleb128 0xd
 2330 023a 9B010000 		.4byte	.LASF37
 2331 023e 01       		.byte	0x1
 2332 023f 50       		.byte	0x50
 2333 0240 0A010000 		.4byte	0x10a
 2334 0244 02       		.uleb128 0x2
 2335 0245 91       		.byte	0x91
 2336 0246 74       		.sleb128 -12
 2337 0247 0D       		.uleb128 0xd
 2338 0248 B2020000 		.4byte	.LASF38
 2339 024c 01       		.byte	0x1
 2340 024d 51       		.byte	0x51
 2341 024e 10010000 		.4byte	0x110
 2342 0252 03       		.uleb128 0x3
 2343 0253 91       		.byte	0x91
 2344 0254 E07D     		.sleb128 -288
 2345 0256 0D       		.uleb128 0xd
 2346 0257 B8020000 		.4byte	.LASF39
 2347 025b 01       		.byte	0x1
 2348 025c 52       		.byte	0x52
 2349 025d 10010000 		.4byte	0x110
 2350 0261 02       		.uleb128 0x2
 2351 0262 91       		.byte	0x91
 2352 0263 70       		.sleb128 -16
 2353 0264 0D       		.uleb128 0xd
 2354 0265 B5010000 		.4byte	.LASF40
 2355 0269 01       		.byte	0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 69


 2356 026a 53       		.byte	0x53
 2357 026b 0A010000 		.4byte	0x10a
 2358 026f 02       		.uleb128 0x2
 2359 0270 91       		.byte	0x91
 2360 0271 6C       		.sleb128 -20
 2361 0272 0D       		.uleb128 0xd
 2362 0273 BA010000 		.4byte	.LASF41
 2363 0277 01       		.byte	0x1
 2364 0278 54       		.byte	0x54
 2365 0279 0A010000 		.4byte	0x10a
 2366 027d 02       		.uleb128 0x2
 2367 027e 91       		.byte	0x91
 2368 027f 68       		.sleb128 -24
 2369 0280 0E       		.uleb128 0xe
 2370 0281 707900   		.ascii	"py\000"
 2371 0284 01       		.byte	0x1
 2372 0285 55       		.byte	0x55
 2373 0286 10010000 		.4byte	0x110
 2374 028a 03       		.uleb128 0x3
 2375 028b 91       		.byte	0x91
 2376 028c B07F     		.sleb128 -80
 2377 028e 0D       		.uleb128 0xd
 2378 028f 00000000 		.4byte	.LASF42
 2379 0293 01       		.byte	0x1
 2380 0294 56       		.byte	0x56
 2381 0295 FE000000 		.4byte	0xfe
 2382 0299 02       		.uleb128 0x2
 2383 029a 91       		.byte	0x91
 2384 029b 64       		.sleb128 -28
 2385 029c 0D       		.uleb128 0xd
 2386 029d 05000000 		.4byte	.LASF43
 2387 02a1 01       		.byte	0x1
 2388 02a2 56       		.byte	0x56
 2389 02a3 FE000000 		.4byte	0xfe
 2390 02a7 02       		.uleb128 0x2
 2391 02a8 91       		.byte	0x91
 2392 02a9 60       		.sleb128 -32
 2393 02aa 0D       		.uleb128 0xd
 2394 02ab 0A000000 		.4byte	.LASF44
 2395 02af 01       		.byte	0x1
 2396 02b0 56       		.byte	0x56
 2397 02b1 FE000000 		.4byte	0xfe
 2398 02b5 02       		.uleb128 0x2
 2399 02b6 91       		.byte	0x91
 2400 02b7 5C       		.sleb128 -36
 2401 02b8 0D       		.uleb128 0xd
 2402 02b9 96010000 		.4byte	.LASF45
 2403 02bd 01       		.byte	0x1
 2404 02be 56       		.byte	0x56
 2405 02bf FE000000 		.4byte	0xfe
 2406 02c3 02       		.uleb128 0x2
 2407 02c4 91       		.byte	0x91
 2408 02c5 58       		.sleb128 -40
 2409 02c6 0E       		.uleb128 0xe
 2410 02c7 6A00     		.ascii	"j\000"
 2411 02c9 01       		.byte	0x1
 2412 02ca 57       		.byte	0x57
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 70


 2413 02cb B8000000 		.4byte	0xb8
 2414 02cf 03       		.uleb128 0x3
 2415 02d0 91       		.byte	0x91
 2416 02d1 B87F     		.sleb128 -72
 2417 02d3 0E       		.uleb128 0xe
 2418 02d4 6B00     		.ascii	"k\000"
 2419 02d6 01       		.byte	0x1
 2420 02d7 57       		.byte	0x57
 2421 02d8 B8000000 		.4byte	0xb8
 2422 02dc 02       		.uleb128 0x2
 2423 02dd 91       		.byte	0x91
 2424 02de 54       		.sleb128 -44
 2425 02df 0D       		.uleb128 0xd
 2426 02e0 34000000 		.4byte	.LASF46
 2427 02e4 01       		.byte	0x1
 2428 02e5 57       		.byte	0x57
 2429 02e6 B8000000 		.4byte	0xb8
 2430 02ea 02       		.uleb128 0x2
 2431 02eb 91       		.byte	0x91
 2432 02ec 50       		.sleb128 -48
 2433 02ed 0E       		.uleb128 0xe
 2434 02ee 696E6300 		.ascii	"inc\000"
 2435 02f2 01       		.byte	0x1
 2436 02f3 58       		.byte	0x58
 2437 02f4 AD000000 		.4byte	0xad
 2438 02f8 02       		.uleb128 0x2
 2439 02f9 91       		.byte	0x91
 2440 02fa 4C       		.sleb128 -52
 2441 02fb 0D       		.uleb128 0xd
 2442 02fc 82020000 		.4byte	.LASF47
 2443 0300 01       		.byte	0x1
 2444 0301 59       		.byte	0x59
 2445 0302 B8000000 		.4byte	0xb8
 2446 0306 03       		.uleb128 0x3
 2447 0307 91       		.byte	0x91
 2448 0308 BC7F     		.sleb128 -68
 2449 030a 0E       		.uleb128 0xe
 2450 030b 783400   		.ascii	"x4\000"
 2451 030e 01       		.byte	0x1
 2452 030f 5A       		.byte	0x5a
 2453 0310 F2000000 		.4byte	0xf2
 2454 0314 03       		.uleb128 0x3
 2455 0315 91       		.byte	0x91
 2456 0316 B67F     		.sleb128 -74
 2457 0318 0D       		.uleb128 0xd
 2458 0319 D8000000 		.4byte	.LASF48
 2459 031d 01       		.byte	0x1
 2460 031e 5B       		.byte	0x5b
 2461 031f B8000000 		.4byte	0xb8
 2462 0323 02       		.uleb128 0x2
 2463 0324 91       		.byte	0x91
 2464 0325 48       		.sleb128 -56
 2465 0326 0E       		.uleb128 0xe
 2466 0327 783100   		.ascii	"x1\000"
 2467 032a 01       		.byte	0x1
 2468 032b 5C       		.byte	0x5c
 2469 032c FE000000 		.4byte	0xfe
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 71


 2470 0330 02       		.uleb128 0x2
 2471 0331 91       		.byte	0x91
 2472 0332 44       		.sleb128 -60
 2473 0333 0E       		.uleb128 0xe
 2474 0334 783200   		.ascii	"x2\000"
 2475 0337 01       		.byte	0x1
 2476 0338 5C       		.byte	0x5c
 2477 0339 FE000000 		.4byte	0xfe
 2478 033d 02       		.uleb128 0x2
 2479 033e 91       		.byte	0x91
 2480 033f 40       		.sleb128 -64
 2481 0340 0E       		.uleb128 0xe
 2482 0341 783300   		.ascii	"x3\000"
 2483 0344 01       		.byte	0x1
 2484 0345 5C       		.byte	0x5c
 2485 0346 FE000000 		.4byte	0xfe
 2486 034a 03       		.uleb128 0x3
 2487 034b 91       		.byte	0x91
 2488 034c A87F     		.sleb128 -88
 2489 034e 0E       		.uleb128 0xe
 2490 034f 793100   		.ascii	"y1\000"
 2491 0352 01       		.byte	0x1
 2492 0353 5C       		.byte	0x5c
 2493 0354 FE000000 		.4byte	0xfe
 2494 0358 03       		.uleb128 0x3
 2495 0359 91       		.byte	0x91
 2496 035a AC7F     		.sleb128 -84
 2497 035c 0F       		.uleb128 0xf
 2498 035d 16010000 		.4byte	0x116
 2499 0361 6E040000 		.4byte	.LBB28
 2500 0365 32000000 		.4byte	.LBE28-.LBB28
 2501 0369 01       		.byte	0x1
 2502 036a 3001     		.2byte	0x130
 2503 036c 8C030000 		.4byte	0x38c
 2504 0370 10       		.uleb128 0x10
 2505 0371 3B010000 		.4byte	0x13b
 2506 0375 03       		.uleb128 0x3
 2507 0376 91       		.byte	0x91
 2508 0377 9C7F     		.sleb128 -100
 2509 0379 10       		.uleb128 0x10
 2510 037a 31010000 		.4byte	0x131
 2511 037e 03       		.uleb128 0x3
 2512 037f 91       		.byte	0x91
 2513 0380 A07F     		.sleb128 -96
 2514 0382 10       		.uleb128 0x10
 2515 0383 27010000 		.4byte	0x127
 2516 0387 03       		.uleb128 0x3
 2517 0388 91       		.byte	0x91
 2518 0389 A47F     		.sleb128 -92
 2519 038b 00       		.byte	0
 2520 038c 0F       		.uleb128 0xf
 2521 038d 16010000 		.4byte	0x116
 2522 0391 CE040000 		.4byte	.LBB30
 2523 0395 32000000 		.4byte	.LBE30-.LBB30
 2524 0399 01       		.byte	0x1
 2525 039a 3101     		.2byte	0x131
 2526 039c BC030000 		.4byte	0x3bc
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 72


 2527 03a0 10       		.uleb128 0x10
 2528 03a1 3B010000 		.4byte	0x13b
 2529 03a5 03       		.uleb128 0x3
 2530 03a6 91       		.byte	0x91
 2531 03a7 907F     		.sleb128 -112
 2532 03a9 10       		.uleb128 0x10
 2533 03aa 31010000 		.4byte	0x131
 2534 03ae 03       		.uleb128 0x3
 2535 03af 91       		.byte	0x91
 2536 03b0 947F     		.sleb128 -108
 2537 03b2 10       		.uleb128 0x10
 2538 03b3 27010000 		.4byte	0x127
 2539 03b7 03       		.uleb128 0x3
 2540 03b8 91       		.byte	0x91
 2541 03b9 987F     		.sleb128 -104
 2542 03bb 00       		.byte	0
 2543 03bc 0F       		.uleb128 0xf
 2544 03bd 48010000 		.4byte	0x148
 2545 03c1 4A050000 		.4byte	.LBB32
 2546 03c5 32000000 		.4byte	.LBE32-.LBB32
 2547 03c9 01       		.byte	0x1
 2548 03ca 3B01     		.2byte	0x13b
 2549 03cc EC030000 		.4byte	0x3ec
 2550 03d0 10       		.uleb128 0x10
 2551 03d1 6D010000 		.4byte	0x16d
 2552 03d5 03       		.uleb128 0x3
 2553 03d6 91       		.byte	0x91
 2554 03d7 847F     		.sleb128 -124
 2555 03d9 10       		.uleb128 0x10
 2556 03da 63010000 		.4byte	0x163
 2557 03de 03       		.uleb128 0x3
 2558 03df 91       		.byte	0x91
 2559 03e0 887F     		.sleb128 -120
 2560 03e2 10       		.uleb128 0x10
 2561 03e3 59010000 		.4byte	0x159
 2562 03e7 03       		.uleb128 0x3
 2563 03e8 91       		.byte	0x91
 2564 03e9 8C7F     		.sleb128 -116
 2565 03eb 00       		.byte	0
 2566 03ec 0F       		.uleb128 0xf
 2567 03ed 48010000 		.4byte	0x148
 2568 03f1 D8050000 		.4byte	.LBB34
 2569 03f5 32000000 		.4byte	.LBE34-.LBB34
 2570 03f9 01       		.byte	0x1
 2571 03fa 4701     		.2byte	0x147
 2572 03fc 1C040000 		.4byte	0x41c
 2573 0400 10       		.uleb128 0x10
 2574 0401 6D010000 		.4byte	0x16d
 2575 0405 03       		.uleb128 0x3
 2576 0406 91       		.byte	0x91
 2577 0407 F87E     		.sleb128 -136
 2578 0409 10       		.uleb128 0x10
 2579 040a 63010000 		.4byte	0x163
 2580 040e 03       		.uleb128 0x3
 2581 040f 91       		.byte	0x91
 2582 0410 FC7E     		.sleb128 -132
 2583 0412 10       		.uleb128 0x10
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 73


 2584 0413 59010000 		.4byte	0x159
 2585 0417 03       		.uleb128 0x3
 2586 0418 91       		.byte	0x91
 2587 0419 807F     		.sleb128 -128
 2588 041b 00       		.byte	0
 2589 041c 0F       		.uleb128 0xf
 2590 041d 16010000 		.4byte	0x116
 2591 0421 48060000 		.4byte	.LBB36
 2592 0425 32000000 		.4byte	.LBE36-.LBB36
 2593 0429 01       		.byte	0x1
 2594 042a 4C01     		.2byte	0x14c
 2595 042c 4C040000 		.4byte	0x44c
 2596 0430 10       		.uleb128 0x10
 2597 0431 3B010000 		.4byte	0x13b
 2598 0435 03       		.uleb128 0x3
 2599 0436 91       		.byte	0x91
 2600 0437 EC7E     		.sleb128 -148
 2601 0439 10       		.uleb128 0x10
 2602 043a 31010000 		.4byte	0x131
 2603 043e 03       		.uleb128 0x3
 2604 043f 91       		.byte	0x91
 2605 0440 F07E     		.sleb128 -144
 2606 0442 10       		.uleb128 0x10
 2607 0443 27010000 		.4byte	0x127
 2608 0447 03       		.uleb128 0x3
 2609 0448 91       		.byte	0x91
 2610 0449 F47E     		.sleb128 -140
 2611 044b 00       		.byte	0
 2612 044c 0F       		.uleb128 0xf
 2613 044d 16010000 		.4byte	0x116
 2614 0451 A8060000 		.4byte	.LBB38
 2615 0455 32000000 		.4byte	.LBE38-.LBB38
 2616 0459 01       		.byte	0x1
 2617 045a 4E01     		.2byte	0x14e
 2618 045c 7C040000 		.4byte	0x47c
 2619 0460 10       		.uleb128 0x10
 2620 0461 3B010000 		.4byte	0x13b
 2621 0465 03       		.uleb128 0x3
 2622 0466 91       		.byte	0x91
 2623 0467 E07E     		.sleb128 -160
 2624 0469 10       		.uleb128 0x10
 2625 046a 31010000 		.4byte	0x131
 2626 046e 03       		.uleb128 0x3
 2627 046f 91       		.byte	0x91
 2628 0470 E47E     		.sleb128 -156
 2629 0472 10       		.uleb128 0x10
 2630 0473 27010000 		.4byte	0x127
 2631 0477 03       		.uleb128 0x3
 2632 0478 91       		.byte	0x91
 2633 0479 E87E     		.sleb128 -152
 2634 047b 00       		.byte	0
 2635 047c 0F       		.uleb128 0xf
 2636 047d 48010000 		.4byte	0x148
 2637 0481 08070000 		.4byte	.LBB40
 2638 0485 32000000 		.4byte	.LBE40-.LBB40
 2639 0489 01       		.byte	0x1
 2640 048a 5001     		.2byte	0x150
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 74


 2641 048c AC040000 		.4byte	0x4ac
 2642 0490 10       		.uleb128 0x10
 2643 0491 6D010000 		.4byte	0x16d
 2644 0495 03       		.uleb128 0x3
 2645 0496 91       		.byte	0x91
 2646 0497 D47E     		.sleb128 -172
 2647 0499 10       		.uleb128 0x10
 2648 049a 63010000 		.4byte	0x163
 2649 049e 03       		.uleb128 0x3
 2650 049f 91       		.byte	0x91
 2651 04a0 D87E     		.sleb128 -168
 2652 04a2 10       		.uleb128 0x10
 2653 04a3 59010000 		.4byte	0x159
 2654 04a7 03       		.uleb128 0x3
 2655 04a8 91       		.byte	0x91
 2656 04a9 DC7E     		.sleb128 -164
 2657 04ab 00       		.byte	0
 2658 04ac 0F       		.uleb128 0xf
 2659 04ad 48010000 		.4byte	0x148
 2660 04b1 8E070000 		.4byte	.LBB42
 2661 04b5 26000000 		.4byte	.LBE42-.LBB42
 2662 04b9 01       		.byte	0x1
 2663 04ba 5A01     		.2byte	0x15a
 2664 04bc DC040000 		.4byte	0x4dc
 2665 04c0 10       		.uleb128 0x10
 2666 04c1 6D010000 		.4byte	0x16d
 2667 04c5 03       		.uleb128 0x3
 2668 04c6 91       		.byte	0x91
 2669 04c7 C87E     		.sleb128 -184
 2670 04c9 10       		.uleb128 0x10
 2671 04ca 63010000 		.4byte	0x163
 2672 04ce 03       		.uleb128 0x3
 2673 04cf 91       		.byte	0x91
 2674 04d0 CC7E     		.sleb128 -180
 2675 04d2 10       		.uleb128 0x10
 2676 04d3 59010000 		.4byte	0x159
 2677 04d7 03       		.uleb128 0x3
 2678 04d8 91       		.byte	0x91
 2679 04d9 D07E     		.sleb128 -176
 2680 04db 00       		.byte	0
 2681 04dc 0F       		.uleb128 0xf
 2682 04dd 7A010000 		.4byte	0x17a
 2683 04e1 EA080000 		.4byte	.LBB44
 2684 04e5 52000000 		.4byte	.LBE44-.LBB44
 2685 04e9 01       		.byte	0x1
 2686 04ea 7E01     		.2byte	0x17e
 2687 04ec 28050000 		.4byte	0x528
 2688 04f0 10       		.uleb128 0x10
 2689 04f1 95010000 		.4byte	0x195
 2690 04f5 03       		.uleb128 0x3
 2691 04f6 91       		.byte	0x91
 2692 04f7 C07E     		.sleb128 -192
 2693 04f9 10       		.uleb128 0x10
 2694 04fa 8B010000 		.4byte	0x18b
 2695 04fe 03       		.uleb128 0x3
 2696 04ff 91       		.byte	0x91
 2697 0500 C47E     		.sleb128 -188
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 75


 2698 0502 11       		.uleb128 0x11
 2699 0503 EA080000 		.4byte	.LBB45
 2700 0507 52000000 		.4byte	.LBE45-.LBB45
 2701 050b 12       		.uleb128 0x12
 2702 050c 9F010000 		.4byte	0x19f
 2703 0510 03       		.uleb128 0x3
 2704 0511 91       		.byte	0x91
 2705 0512 BC7E     		.sleb128 -196
 2706 0514 12       		.uleb128 0x12
 2707 0515 AB010000 		.4byte	0x1ab
 2708 0519 03       		.uleb128 0x3
 2709 051a 91       		.byte	0x91
 2710 051b B47E     		.sleb128 -204
 2711 051d 12       		.uleb128 0x12
 2712 051e B7010000 		.4byte	0x1b7
 2713 0522 03       		.uleb128 0x3
 2714 0523 91       		.byte	0x91
 2715 0524 B87E     		.sleb128 -200
 2716 0526 00       		.byte	0
 2717 0527 00       		.byte	0
 2718 0528 0F       		.uleb128 0xf
 2719 0529 7A010000 		.4byte	0x17a
 2720 052d 70090000 		.4byte	.LBB46
 2721 0531 52000000 		.4byte	.LBE46-.LBB46
 2722 0535 01       		.byte	0x1
 2723 0536 8001     		.2byte	0x180
 2724 0538 74050000 		.4byte	0x574
 2725 053c 10       		.uleb128 0x10
 2726 053d 95010000 		.4byte	0x195
 2727 0541 03       		.uleb128 0x3
 2728 0542 91       		.byte	0x91
 2729 0543 AC7E     		.sleb128 -212
 2730 0545 10       		.uleb128 0x10
 2731 0546 8B010000 		.4byte	0x18b
 2732 054a 03       		.uleb128 0x3
 2733 054b 91       		.byte	0x91
 2734 054c B07E     		.sleb128 -208
 2735 054e 11       		.uleb128 0x11
 2736 054f 70090000 		.4byte	.LBB47
 2737 0553 52000000 		.4byte	.LBE47-.LBB47
 2738 0557 12       		.uleb128 0x12
 2739 0558 9F010000 		.4byte	0x19f
 2740 055c 03       		.uleb128 0x3
 2741 055d 91       		.byte	0x91
 2742 055e A87E     		.sleb128 -216
 2743 0560 12       		.uleb128 0x12
 2744 0561 AB010000 		.4byte	0x1ab
 2745 0565 03       		.uleb128 0x3
 2746 0566 91       		.byte	0x91
 2747 0567 A07E     		.sleb128 -224
 2748 0569 12       		.uleb128 0x12
 2749 056a B7010000 		.4byte	0x1b7
 2750 056e 03       		.uleb128 0x3
 2751 056f 91       		.byte	0x91
 2752 0570 A47E     		.sleb128 -220
 2753 0572 00       		.byte	0
 2754 0573 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 76


 2755 0574 0F       		.uleb128 0xf
 2756 0575 7A010000 		.4byte	0x17a
 2757 0579 F6090000 		.4byte	.LBB48
 2758 057d 52000000 		.4byte	.LBE48-.LBB48
 2759 0581 01       		.byte	0x1
 2760 0582 8201     		.2byte	0x182
 2761 0584 C0050000 		.4byte	0x5c0
 2762 0588 10       		.uleb128 0x10
 2763 0589 95010000 		.4byte	0x195
 2764 058d 03       		.uleb128 0x3
 2765 058e 91       		.byte	0x91
 2766 058f 987E     		.sleb128 -232
 2767 0591 10       		.uleb128 0x10
 2768 0592 8B010000 		.4byte	0x18b
 2769 0596 03       		.uleb128 0x3
 2770 0597 91       		.byte	0x91
 2771 0598 9C7E     		.sleb128 -228
 2772 059a 11       		.uleb128 0x11
 2773 059b F6090000 		.4byte	.LBB49
 2774 059f 52000000 		.4byte	.LBE49-.LBB49
 2775 05a3 12       		.uleb128 0x12
 2776 05a4 9F010000 		.4byte	0x19f
 2777 05a8 03       		.uleb128 0x3
 2778 05a9 91       		.byte	0x91
 2779 05aa 947E     		.sleb128 -236
 2780 05ac 12       		.uleb128 0x12
 2781 05ad AB010000 		.4byte	0x1ab
 2782 05b1 03       		.uleb128 0x3
 2783 05b2 91       		.byte	0x91
 2784 05b3 8C7E     		.sleb128 -244
 2785 05b5 12       		.uleb128 0x12
 2786 05b6 B7010000 		.4byte	0x1b7
 2787 05ba 03       		.uleb128 0x3
 2788 05bb 91       		.byte	0x91
 2789 05bc 907E     		.sleb128 -240
 2790 05be 00       		.byte	0
 2791 05bf 00       		.byte	0
 2792 05c0 0F       		.uleb128 0xf
 2793 05c1 7A010000 		.4byte	0x17a
 2794 05c5 7C0A0000 		.4byte	.LBB50
 2795 05c9 52000000 		.4byte	.LBE50-.LBB50
 2796 05cd 01       		.byte	0x1
 2797 05ce 8401     		.2byte	0x184
 2798 05d0 0C060000 		.4byte	0x60c
 2799 05d4 10       		.uleb128 0x10
 2800 05d5 95010000 		.4byte	0x195
 2801 05d9 03       		.uleb128 0x3
 2802 05da 91       		.byte	0x91
 2803 05db 847E     		.sleb128 -252
 2804 05dd 10       		.uleb128 0x10
 2805 05de 8B010000 		.4byte	0x18b
 2806 05e2 03       		.uleb128 0x3
 2807 05e3 91       		.byte	0x91
 2808 05e4 887E     		.sleb128 -248
 2809 05e6 11       		.uleb128 0x11
 2810 05e7 7C0A0000 		.4byte	.LBB51
 2811 05eb 52000000 		.4byte	.LBE51-.LBB51
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 77


 2812 05ef 12       		.uleb128 0x12
 2813 05f0 9F010000 		.4byte	0x19f
 2814 05f4 03       		.uleb128 0x3
 2815 05f5 91       		.byte	0x91
 2816 05f6 807E     		.sleb128 -256
 2817 05f8 12       		.uleb128 0x12
 2818 05f9 AB010000 		.4byte	0x1ab
 2819 05fd 03       		.uleb128 0x3
 2820 05fe 91       		.byte	0x91
 2821 05ff F87D     		.sleb128 -264
 2822 0601 12       		.uleb128 0x12
 2823 0602 B7010000 		.4byte	0x1b7
 2824 0606 03       		.uleb128 0x3
 2825 0607 91       		.byte	0x91
 2826 0608 FC7D     		.sleb128 -260
 2827 060a 00       		.byte	0
 2828 060b 00       		.byte	0
 2829 060c 13       		.uleb128 0x13
 2830 060d 7A010000 		.4byte	0x17a
 2831 0611 4A0C0000 		.4byte	.LBB52
 2832 0615 52000000 		.4byte	.LBE52-.LBB52
 2833 0619 01       		.byte	0x1
 2834 061a B501     		.2byte	0x1b5
 2835 061c 10       		.uleb128 0x10
 2836 061d 95010000 		.4byte	0x195
 2837 0621 03       		.uleb128 0x3
 2838 0622 91       		.byte	0x91
 2839 0623 F07D     		.sleb128 -272
 2840 0625 10       		.uleb128 0x10
 2841 0626 8B010000 		.4byte	0x18b
 2842 062a 03       		.uleb128 0x3
 2843 062b 91       		.byte	0x91
 2844 062c F47D     		.sleb128 -268
 2845 062e 11       		.uleb128 0x11
 2846 062f 4A0C0000 		.4byte	.LBB53
 2847 0633 52000000 		.4byte	.LBE53-.LBB53
 2848 0637 12       		.uleb128 0x12
 2849 0638 9F010000 		.4byte	0x19f
 2850 063c 03       		.uleb128 0x3
 2851 063d 91       		.byte	0x91
 2852 063e EC7D     		.sleb128 -276
 2853 0640 12       		.uleb128 0x12
 2854 0641 AB010000 		.4byte	0x1ab
 2855 0645 03       		.uleb128 0x3
 2856 0646 91       		.byte	0x91
 2857 0647 E47D     		.sleb128 -284
 2858 0649 12       		.uleb128 0x12
 2859 064a B7010000 		.4byte	0x1b7
 2860 064e 03       		.uleb128 0x3
 2861 064f 91       		.byte	0x91
 2862 0650 E87D     		.sleb128 -280
 2863 0652 00       		.byte	0
 2864 0653 00       		.byte	0
 2865 0654 00       		.byte	0
 2866 0655 00       		.byte	0
 2867              		.section	.debug_abbrev,"",%progbits
 2868              	.Ldebug_abbrev0:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 78


 2869 0000 01       		.uleb128 0x1
 2870 0001 11       		.uleb128 0x11
 2871 0002 01       		.byte	0x1
 2872 0003 25       		.uleb128 0x25
 2873 0004 0E       		.uleb128 0xe
 2874 0005 13       		.uleb128 0x13
 2875 0006 0B       		.uleb128 0xb
 2876 0007 03       		.uleb128 0x3
 2877 0008 0E       		.uleb128 0xe
 2878 0009 1B       		.uleb128 0x1b
 2879 000a 0E       		.uleb128 0xe
 2880 000b 55       		.uleb128 0x55
 2881 000c 17       		.uleb128 0x17
 2882 000d 11       		.uleb128 0x11
 2883 000e 01       		.uleb128 0x1
 2884 000f 10       		.uleb128 0x10
 2885 0010 17       		.uleb128 0x17
 2886 0011 00       		.byte	0
 2887 0012 00       		.byte	0
 2888 0013 02       		.uleb128 0x2
 2889 0014 16       		.uleb128 0x16
 2890 0015 00       		.byte	0
 2891 0016 03       		.uleb128 0x3
 2892 0017 0E       		.uleb128 0xe
 2893 0018 3A       		.uleb128 0x3a
 2894 0019 0B       		.uleb128 0xb
 2895 001a 3B       		.uleb128 0x3b
 2896 001b 0B       		.uleb128 0xb
 2897 001c 49       		.uleb128 0x49
 2898 001d 13       		.uleb128 0x13
 2899 001e 00       		.byte	0
 2900 001f 00       		.byte	0
 2901 0020 03       		.uleb128 0x3
 2902 0021 24       		.uleb128 0x24
 2903 0022 00       		.byte	0
 2904 0023 0B       		.uleb128 0xb
 2905 0024 0B       		.uleb128 0xb
 2906 0025 3E       		.uleb128 0x3e
 2907 0026 0B       		.uleb128 0xb
 2908 0027 03       		.uleb128 0x3
 2909 0028 0E       		.uleb128 0xe
 2910 0029 00       		.byte	0
 2911 002a 00       		.byte	0
 2912 002b 04       		.uleb128 0x4
 2913 002c 24       		.uleb128 0x24
 2914 002d 00       		.byte	0
 2915 002e 0B       		.uleb128 0xb
 2916 002f 0B       		.uleb128 0xb
 2917 0030 3E       		.uleb128 0x3e
 2918 0031 0B       		.uleb128 0xb
 2919 0032 03       		.uleb128 0x3
 2920 0033 08       		.uleb128 0x8
 2921 0034 00       		.byte	0
 2922 0035 00       		.byte	0
 2923 0036 05       		.uleb128 0x5
 2924 0037 16       		.uleb128 0x16
 2925 0038 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 79


 2926 0039 03       		.uleb128 0x3
 2927 003a 0E       		.uleb128 0xe
 2928 003b 3A       		.uleb128 0x3a
 2929 003c 0B       		.uleb128 0xb
 2930 003d 3B       		.uleb128 0x3b
 2931 003e 05       		.uleb128 0x5
 2932 003f 49       		.uleb128 0x49
 2933 0040 13       		.uleb128 0x13
 2934 0041 00       		.byte	0
 2935 0042 00       		.byte	0
 2936 0043 06       		.uleb128 0x6
 2937 0044 0F       		.uleb128 0xf
 2938 0045 00       		.byte	0
 2939 0046 0B       		.uleb128 0xb
 2940 0047 0B       		.uleb128 0xb
 2941 0048 49       		.uleb128 0x49
 2942 0049 13       		.uleb128 0x13
 2943 004a 00       		.byte	0
 2944 004b 00       		.byte	0
 2945 004c 07       		.uleb128 0x7
 2946 004d 2E       		.uleb128 0x2e
 2947 004e 01       		.byte	0x1
 2948 004f 03       		.uleb128 0x3
 2949 0050 0E       		.uleb128 0xe
 2950 0051 3A       		.uleb128 0x3a
 2951 0052 0B       		.uleb128 0xb
 2952 0053 3B       		.uleb128 0x3b
 2953 0054 05       		.uleb128 0x5
 2954 0055 27       		.uleb128 0x27
 2955 0056 19       		.uleb128 0x19
 2956 0057 49       		.uleb128 0x49
 2957 0058 13       		.uleb128 0x13
 2958 0059 20       		.uleb128 0x20
 2959 005a 0B       		.uleb128 0xb
 2960 005b 01       		.uleb128 0x1
 2961 005c 13       		.uleb128 0x13
 2962 005d 00       		.byte	0
 2963 005e 00       		.byte	0
 2964 005f 08       		.uleb128 0x8
 2965 0060 05       		.uleb128 0x5
 2966 0061 00       		.byte	0
 2967 0062 03       		.uleb128 0x3
 2968 0063 08       		.uleb128 0x8
 2969 0064 3A       		.uleb128 0x3a
 2970 0065 0B       		.uleb128 0xb
 2971 0066 3B       		.uleb128 0x3b
 2972 0067 05       		.uleb128 0x5
 2973 0068 49       		.uleb128 0x49
 2974 0069 13       		.uleb128 0x13
 2975 006a 00       		.byte	0
 2976 006b 00       		.byte	0
 2977 006c 09       		.uleb128 0x9
 2978 006d 34       		.uleb128 0x34
 2979 006e 00       		.byte	0
 2980 006f 03       		.uleb128 0x3
 2981 0070 0E       		.uleb128 0xe
 2982 0071 3A       		.uleb128 0x3a
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 80


 2983 0072 0B       		.uleb128 0xb
 2984 0073 3B       		.uleb128 0x3b
 2985 0074 05       		.uleb128 0x5
 2986 0075 49       		.uleb128 0x49
 2987 0076 13       		.uleb128 0x13
 2988 0077 00       		.byte	0
 2989 0078 00       		.byte	0
 2990 0079 0A       		.uleb128 0xa
 2991 007a 34       		.uleb128 0x34
 2992 007b 00       		.byte	0
 2993 007c 03       		.uleb128 0x3
 2994 007d 08       		.uleb128 0x8
 2995 007e 3A       		.uleb128 0x3a
 2996 007f 0B       		.uleb128 0xb
 2997 0080 3B       		.uleb128 0x3b
 2998 0081 05       		.uleb128 0x5
 2999 0082 49       		.uleb128 0x49
 3000 0083 13       		.uleb128 0x13
 3001 0084 00       		.byte	0
 3002 0085 00       		.byte	0
 3003 0086 0B       		.uleb128 0xb
 3004 0087 2E       		.uleb128 0x2e
 3005 0088 01       		.byte	0x1
 3006 0089 3F       		.uleb128 0x3f
 3007 008a 19       		.uleb128 0x19
 3008 008b 03       		.uleb128 0x3
 3009 008c 0E       		.uleb128 0xe
 3010 008d 3A       		.uleb128 0x3a
 3011 008e 0B       		.uleb128 0xb
 3012 008f 3B       		.uleb128 0x3b
 3013 0090 0B       		.uleb128 0xb
 3014 0091 27       		.uleb128 0x27
 3015 0092 19       		.uleb128 0x19
 3016 0093 11       		.uleb128 0x11
 3017 0094 01       		.uleb128 0x1
 3018 0095 12       		.uleb128 0x12
 3019 0096 06       		.uleb128 0x6
 3020 0097 40       		.uleb128 0x40
 3021 0098 18       		.uleb128 0x18
 3022 0099 9642     		.uleb128 0x2116
 3023 009b 19       		.uleb128 0x19
 3024 009c 00       		.byte	0
 3025 009d 00       		.byte	0
 3026 009e 0C       		.uleb128 0xc
 3027 009f 05       		.uleb128 0x5
 3028 00a0 00       		.byte	0
 3029 00a1 03       		.uleb128 0x3
 3030 00a2 0E       		.uleb128 0xe
 3031 00a3 3A       		.uleb128 0x3a
 3032 00a4 0B       		.uleb128 0xb
 3033 00a5 3B       		.uleb128 0x3b
 3034 00a6 0B       		.uleb128 0xb
 3035 00a7 49       		.uleb128 0x49
 3036 00a8 13       		.uleb128 0x13
 3037 00a9 02       		.uleb128 0x2
 3038 00aa 18       		.uleb128 0x18
 3039 00ab 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 81


 3040 00ac 00       		.byte	0
 3041 00ad 0D       		.uleb128 0xd
 3042 00ae 34       		.uleb128 0x34
 3043 00af 00       		.byte	0
 3044 00b0 03       		.uleb128 0x3
 3045 00b1 0E       		.uleb128 0xe
 3046 00b2 3A       		.uleb128 0x3a
 3047 00b3 0B       		.uleb128 0xb
 3048 00b4 3B       		.uleb128 0x3b
 3049 00b5 0B       		.uleb128 0xb
 3050 00b6 49       		.uleb128 0x49
 3051 00b7 13       		.uleb128 0x13
 3052 00b8 02       		.uleb128 0x2
 3053 00b9 18       		.uleb128 0x18
 3054 00ba 00       		.byte	0
 3055 00bb 00       		.byte	0
 3056 00bc 0E       		.uleb128 0xe
 3057 00bd 34       		.uleb128 0x34
 3058 00be 00       		.byte	0
 3059 00bf 03       		.uleb128 0x3
 3060 00c0 08       		.uleb128 0x8
 3061 00c1 3A       		.uleb128 0x3a
 3062 00c2 0B       		.uleb128 0xb
 3063 00c3 3B       		.uleb128 0x3b
 3064 00c4 0B       		.uleb128 0xb
 3065 00c5 49       		.uleb128 0x49
 3066 00c6 13       		.uleb128 0x13
 3067 00c7 02       		.uleb128 0x2
 3068 00c8 18       		.uleb128 0x18
 3069 00c9 00       		.byte	0
 3070 00ca 00       		.byte	0
 3071 00cb 0F       		.uleb128 0xf
 3072 00cc 1D       		.uleb128 0x1d
 3073 00cd 01       		.byte	0x1
 3074 00ce 31       		.uleb128 0x31
 3075 00cf 13       		.uleb128 0x13
 3076 00d0 11       		.uleb128 0x11
 3077 00d1 01       		.uleb128 0x1
 3078 00d2 12       		.uleb128 0x12
 3079 00d3 06       		.uleb128 0x6
 3080 00d4 58       		.uleb128 0x58
 3081 00d5 0B       		.uleb128 0xb
 3082 00d6 59       		.uleb128 0x59
 3083 00d7 05       		.uleb128 0x5
 3084 00d8 01       		.uleb128 0x1
 3085 00d9 13       		.uleb128 0x13
 3086 00da 00       		.byte	0
 3087 00db 00       		.byte	0
 3088 00dc 10       		.uleb128 0x10
 3089 00dd 05       		.uleb128 0x5
 3090 00de 00       		.byte	0
 3091 00df 31       		.uleb128 0x31
 3092 00e0 13       		.uleb128 0x13
 3093 00e1 02       		.uleb128 0x2
 3094 00e2 18       		.uleb128 0x18
 3095 00e3 00       		.byte	0
 3096 00e4 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 82


 3097 00e5 11       		.uleb128 0x11
 3098 00e6 0B       		.uleb128 0xb
 3099 00e7 01       		.byte	0x1
 3100 00e8 11       		.uleb128 0x11
 3101 00e9 01       		.uleb128 0x1
 3102 00ea 12       		.uleb128 0x12
 3103 00eb 06       		.uleb128 0x6
 3104 00ec 00       		.byte	0
 3105 00ed 00       		.byte	0
 3106 00ee 12       		.uleb128 0x12
 3107 00ef 34       		.uleb128 0x34
 3108 00f0 00       		.byte	0
 3109 00f1 31       		.uleb128 0x31
 3110 00f2 13       		.uleb128 0x13
 3111 00f3 02       		.uleb128 0x2
 3112 00f4 18       		.uleb128 0x18
 3113 00f5 00       		.byte	0
 3114 00f6 00       		.byte	0
 3115 00f7 13       		.uleb128 0x13
 3116 00f8 1D       		.uleb128 0x1d
 3117 00f9 01       		.byte	0x1
 3118 00fa 31       		.uleb128 0x31
 3119 00fb 13       		.uleb128 0x13
 3120 00fc 11       		.uleb128 0x11
 3121 00fd 01       		.uleb128 0x1
 3122 00fe 12       		.uleb128 0x12
 3123 00ff 06       		.uleb128 0x6
 3124 0100 58       		.uleb128 0x58
 3125 0101 0B       		.uleb128 0xb
 3126 0102 59       		.uleb128 0x59
 3127 0103 05       		.uleb128 0x5
 3128 0104 00       		.byte	0
 3129 0105 00       		.byte	0
 3130 0106 00       		.byte	0
 3131              		.section	.debug_aranges,"",%progbits
 3132 0000 1C000000 		.4byte	0x1c
 3133 0004 0200     		.2byte	0x2
 3134 0006 00000000 		.4byte	.Ldebug_info0
 3135 000a 04       		.byte	0x4
 3136 000b 00       		.byte	0
 3137 000c 0000     		.2byte	0
 3138 000e 0000     		.2byte	0
 3139 0010 00000000 		.4byte	.LFB82
 3140 0014 F20C0000 		.4byte	.LFE82-.LFB82
 3141 0018 00000000 		.4byte	0
 3142 001c 00000000 		.4byte	0
 3143              		.section	.debug_ranges,"",%progbits
 3144              	.Ldebug_ranges0:
 3145 0000 00000000 		.4byte	.LFB82
 3146 0004 F20C0000 		.4byte	.LFE82
 3147 0008 00000000 		.4byte	0
 3148 000c 00000000 		.4byte	0
 3149              		.section	.debug_line,"",%progbits
 3150              	.Ldebug_line0:
 3151 0000 3A030000 		.section	.debug_str,"MS",%progbits,1
 3151      02005701 
 3151      00000201 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 83


 3151      FB0E0D00 
 3151      01010101 
 3152              	.LASF42:
 3153 0000 61636330 		.ascii	"acc0\000"
 3153      00
 3154              	.LASF43:
 3155 0005 61636331 		.ascii	"acc1\000"
 3155      00
 3156              	.LASF44:
 3157 000a 61636332 		.ascii	"acc2\000"
 3157      00
 3158              	.LASF27:
 3159 000f 5F5F5353 		.ascii	"__SSAT\000"
 3159      415400
 3160              	.LASF29:
 3161 0016 6E65674D 		.ascii	"negMin\000"
 3161      696E00
 3162              	.LASF11:
 3163 001d 6C6F6E67 		.ascii	"long long unsigned int\000"
 3163      206C6F6E 
 3163      6720756E 
 3163      7369676E 
 3163      65642069 
 3164              	.LASF46:
 3165 0034 626C6B43 		.ascii	"blkCnt\000"
 3165      6E7400
 3166              	.LASF2:
 3167 003b 5F5F696E 		.ascii	"__int8_t\000"
 3167      74385F74 
 3167      00
 3168              	.LASF52:
 3169 0044 61726D5F 		.ascii	"arm_correlate_opt_q7\000"
 3169      636F7272 
 3169      656C6174 
 3169      655F6F70 
 3169      745F7137 
 3170              	.LASF14:
 3171 0059 696E7431 		.ascii	"int16_t\000"
 3171      365F7400 
 3172              	.LASF10:
 3173 0061 6C6F6E67 		.ascii	"long long int\000"
 3173      206C6F6E 
 3173      6720696E 
 3173      7400
 3174              	.LASF0:
 3175 006f 7369676E 		.ascii	"signed char\000"
 3175      65642063 
 3175      68617200 
 3176              	.LASF35:
 3177 007b 70536372 		.ascii	"pScratch1\000"
 3177      61746368 
 3177      3100
 3178              	.LASF36:
 3179 0085 70536372 		.ascii	"pScratch2\000"
 3179      61746368 
 3179      3200
 3180              	.LASF7:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 84


 3181 008f 6C6F6E67 		.ascii	"long int\000"
 3181      20696E74 
 3181      00
 3182              	.LASF34:
 3183 0098 70447374 		.ascii	"pDst\000"
 3183      00
 3184              	.LASF23:
 3185 009d 7131355F 		.ascii	"q15_t\000"
 3185      7400
 3186              	.LASF19:
 3187 00a3 646F7562 		.ascii	"double\000"
 3187      6C6500
 3188              	.LASF30:
 3189 00aa 70537263 		.ascii	"pSrcA\000"
 3189      4100
 3190              	.LASF32:
 3191 00b0 70537263 		.ascii	"pSrcB\000"
 3191      4200
 3192              	.LASF8:
 3193 00b6 5F5F7569 		.ascii	"__uint32_t\000"
 3193      6E743332 
 3193      5F7400
 3194              	.LASF3:
 3195 00c1 5F5F696E 		.ascii	"__int16_t\000"
 3195      7431365F 
 3195      7400
 3196              	.LASF12:
 3197 00cb 756E7369 		.ascii	"unsigned int\000"
 3197      676E6564 
 3197      20696E74 
 3197      00
 3198              	.LASF48:
 3199 00d8 74617043 		.ascii	"tapCnt\000"
 3199      6E7400
 3200              	.LASF9:
 3201 00df 6C6F6E67 		.ascii	"long unsigned int\000"
 3201      20756E73 
 3201      69676E65 
 3201      6420696E 
 3201      7400
 3202              	.LASF49:
 3203 00f1 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3203      4320342E 
 3203      392E3320 
 3203      32303135 
 3203      30333033 
 3204 0124 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 3204      20726576 
 3204      6973696F 
 3204      6E203232 
 3204      31323230 
 3205 0157 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 3205      30202D66 
 3205      66756E63 
 3205      74696F6E 
 3205      2D736563 
 3206              	.LASF5:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 85


 3207 0183 73686F72 		.ascii	"short unsigned int\000"
 3207      7420756E 
 3207      7369676E 
 3207      65642069 
 3207      6E7400
 3208              	.LASF45:
 3209 0196 61636333 		.ascii	"acc3\000"
 3209      00
 3210              	.LASF37:
 3211 019b 704F7574 		.ascii	"pOut\000"
 3211      00
 3212              	.LASF17:
 3213 01a0 73697A65 		.ascii	"sizetype\000"
 3213      74797065 
 3213      00
 3214              	.LASF21:
 3215 01a9 6C6F6E67 		.ascii	"long double\000"
 3215      20646F75 
 3215      626C6500 
 3216              	.LASF40:
 3217 01b5 70496E31 		.ascii	"pIn1\000"
 3217      00
 3218              	.LASF41:
 3219 01ba 70496E32 		.ascii	"pIn2\000"
 3219      00
 3220              	.LASF50:
 3221 01bf 536F7572 		.ascii	"Source\\FilteringFunctions\\arm_correlate_opt_q7.c\000"
 3221      63655C46 
 3221      696C7465 
 3221      72696E67 
 3221      46756E63 
 3222              	.LASF20:
 3223 01f0 666C6F61 		.ascii	"float\000"
 3223      7400
 3224              	.LASF33:
 3225 01f6 73726342 		.ascii	"srcBLen\000"
 3225      4C656E00 
 3226              	.LASF15:
 3227 01fe 696E7433 		.ascii	"int32_t\000"
 3227      325F7400 
 3228              	.LASF1:
 3229 0206 756E7369 		.ascii	"unsigned char\000"
 3229      676E6564 
 3229      20636861 
 3229      7200
 3230              	.LASF4:
 3231 0214 73686F72 		.ascii	"short int\000"
 3231      7420696E 
 3231      7400
 3232              	.LASF51:
 3233 021e 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 3233      73657273 
 3233      5C666E65 
 3233      7665735C 
 3233      446F6375 
 3234 024b 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 3234      655F7370 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccVXoEnt.s 			page 86


 3234      6565645F 
 3234      73656E73 
 3234      6F722E63 
 3235              	.LASF24:
 3236 0264 7133315F 		.ascii	"q31_t\000"
 3236      7400
 3237              	.LASF31:
 3238 026a 73726341 		.ascii	"srcALen\000"
 3238      4C656E00 
 3239              	.LASF16:
 3240 0272 75696E74 		.ascii	"uint32_t\000"
 3240      33325F74 
 3240      00
 3241              	.LASF28:
 3242 027b 706F734D 		.ascii	"posMax\000"
 3242      617800
 3243              	.LASF47:
 3244 0282 6F757442 		.ascii	"outBlockSize\000"
 3244      6C6F636B 
 3244      53697A65 
 3244      00
 3245              	.LASF18:
 3246 028f 63686172 		.ascii	"char\000"
 3246      00
 3247              	.LASF6:
 3248 0294 5F5F696E 		.ascii	"__int32_t\000"
 3248      7433325F 
 3248      7400
 3249              	.LASF25:
 3250 029e 5F5F534D 		.ascii	"__SMLAD\000"
 3250      4C414400 
 3251              	.LASF22:
 3252 02a6 71375F74 		.ascii	"q7_t\000"
 3252      00
 3253              	.LASF13:
 3254 02ab 696E7438 		.ascii	"int8_t\000"
 3254      5F7400
 3255              	.LASF38:
 3256 02b2 70536372 		.ascii	"pScr1\000"
 3256      3100
 3257              	.LASF39:
 3258 02b8 70536372 		.ascii	"pScr2\000"
 3258      3200
 3259              	.LASF26:
 3260 02be 5F5F534D 		.ascii	"__SMLADX\000"
 3260      4C414458 
 3260      00
 3261              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
