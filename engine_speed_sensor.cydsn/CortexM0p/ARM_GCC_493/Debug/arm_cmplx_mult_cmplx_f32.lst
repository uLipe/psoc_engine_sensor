ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccV3O8Cl.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_cmplx_mult_cmplx_f32.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_fmul
  18              		.global	__aeabi_fsub
  19              		.global	__aeabi_fadd
  20              		.section	.text.arm_cmplx_mult_cmplx_f32,"ax",%progbits
  21              		.align	2
  22              		.global	arm_cmplx_mult_cmplx_f32
  23              		.code	16
  24              		.thumb_func
  25              		.type	arm_cmplx_mult_cmplx_f32, %function
  26              	arm_cmplx_mult_cmplx_f32:
  27              	.LFB82:
  28              		.file 1 "Source\\ComplexMathFunctions\\arm_cmplx_mult_cmplx_f32.c"
   1:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** /* ----------------------------------------------------------------------
   2:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * Project:      CMSIS DSP Library
   3:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * Title:        arm_cmplx_mult_cmplx_f32.c
   4:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * Description:  Floating-point complex-by-complex multiplication
   5:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  *
   6:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * $Date:        27. January 2017
   7:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * $Revision:    V.1.5.1
   8:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  *
   9:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * Target Processor: Cortex-M cores
  10:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * -------------------------------------------------------------------- */
  11:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** /*
  12:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  *
  14:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  *
  16:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * not use this file except in compliance with the License.
  18:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * You may obtain a copy of the License at
  19:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  *
  20:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  *
  22:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * See the License for the specific language governing permissions and
  26:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * limitations under the License.
  27:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  */
  28:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
  29:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** #include "arm_math.h"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccV3O8Cl.s 			page 2


  30:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
  31:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** /**
  32:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * @ingroup groupCmplxMath
  33:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  */
  34:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
  35:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** /**
  36:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * @defgroup CmplxByCmplxMult Complex-by-Complex Multiplication
  37:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  *
  38:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * Multiplies a complex vector by another complex vector and generates a complex result.
  39:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * The data in the complex arrays is stored in an interleaved fashion
  40:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * (real, imag, real, imag, ...).
  41:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * The parameter <code>numSamples</code> represents the number of complex
  42:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * samples processed.  The complex arrays have a total of <code>2*numSamples</code>
  43:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * real values.
  44:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  *
  45:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * The underlying algorithm is used:
  46:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  *
  47:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * <pre>
  48:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * for(n=0; n<numSamples; n++) {
  49:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  *     pDst[(2*n)+0] = pSrcA[(2*n)+0] * pSrcB[(2*n)+0] - pSrcA[(2*n)+1] * pSrcB[(2*n)+1];
  50:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  *     pDst[(2*n)+1] = pSrcA[(2*n)+0] * pSrcB[(2*n)+1] + pSrcA[(2*n)+1] * pSrcB[(2*n)+0];
  51:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * }
  52:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * </pre>
  53:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  *
  54:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * There are separate functions for floating-point, Q15, and Q31 data types.
  55:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  */
  56:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
  57:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** /**
  58:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * @addtogroup CmplxByCmplxMult
  59:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * @{
  60:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  */
  61:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
  62:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
  63:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** /**
  64:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * @brief  Floating-point complex-by-complex multiplication
  65:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * @param[in]  *pSrcA points to the first input vector
  66:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * @param[in]  *pSrcB points to the second input vector
  67:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * @param[out]  *pDst  points to the output vector
  68:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * @param[in]  numSamples number of complex samples in each vector
  69:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  * @return none.
  70:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****  */
  71:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
  72:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** void arm_cmplx_mult_cmplx_f32(
  73:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   float32_t * pSrcA,
  74:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   float32_t * pSrcB,
  75:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   float32_t * pDst,
  76:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   uint32_t numSamples)
  77:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** {
  29              		.loc 1 77 0
  30              		.cfi_startproc
  31 0000 B0B5     		push	{r4, r5, r7, lr}
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 8AB0     		sub	sp, sp, #40
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccV3O8Cl.s 			page 3


  38              		.cfi_def_cfa_offset 56
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  41 0006 F860     		str	r0, [r7, #12]
  42 0008 B960     		str	r1, [r7, #8]
  43 000a 7A60     		str	r2, [r7, #4]
  44 000c 3B60     		str	r3, [r7]
  78:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   float32_t a1, b1, c1, d1;                      /* Temporary variables to store real and imaginary
  79:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   uint32_t blkCnt;                               /* loop counters */
  80:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
  81:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** #if defined (ARM_MATH_DSP)
  82:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
  83:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  84:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   float32_t a2, b2, c2, d2;                      /* Temporary variables to store real and imaginary
  85:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   float32_t acc1, acc2, acc3, acc4;
  86:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
  87:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
  88:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   /* loop Unrolling */
  89:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   blkCnt = numSamples >> 2u;
  90:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
  91:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  92:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  93:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   while (blkCnt > 0u)
  94:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   {
  95:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
  96:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
  97:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     a1 = *pSrcA;                /* A[2 * i] */
  98:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     c1 = *pSrcB;                /* B[2 * i] */
  99:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 100:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     b1 = *(pSrcA + 1);          /* A[2 * i + 1] */
 101:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     acc1 = a1 * c1;             /* acc1 = A[2 * i] * B[2 * i] */
 102:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 103:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     a2 = *(pSrcA + 2);          /* A[2 * i + 2] */
 104:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     acc2 = (b1 * c1);           /* acc2 = A[2 * i + 1] * B[2 * i] */
 105:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 106:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     d1 = *(pSrcB + 1);          /* B[2 * i + 1] */
 107:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     c2 = *(pSrcB + 2);          /* B[2 * i + 2] */
 108:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     acc1 -= b1 * d1;            /* acc1 =      A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1] */
 109:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 110:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     d2 = *(pSrcB + 3);          /* B[2 * i + 3] */
 111:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     acc3 = a2 * c2;             /* acc3 =       A[2 * i + 2] * B[2 * i + 2] */
 112:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 113:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     b2 = *(pSrcA + 3);          /* A[2 * i + 3] */
 114:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     acc2 += (a1 * d1);          /* acc2 =      A[2 * i + 1] * B[2 * i] + A[2 * i] * B[2 * i + 1] */
 115:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 116:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     a1 = *(pSrcA + 4);          /* A[2 * i + 4] */
 117:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     acc4 = (a2 * d2);           /* acc4 =   A[2 * i + 2] * B[2 * i + 3] */
 118:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 119:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     c1 = *(pSrcB + 4);          /* B[2 * i + 4] */
 120:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     acc3 -= (b2 * d2);          /* acc3 =       A[2 * i + 2] * B[2 * i + 2] - A[2 * i + 3] * B[2 * 
 121:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     *pDst = acc1;               /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1] */
 122:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 123:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     b1 = *(pSrcA + 5);          /* A[2 * i + 5] */
 124:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     acc4 += b2 * c2;            /* acc4 =   A[2 * i + 2] * B[2 * i + 3] + A[2 * i + 3] * B[2 * i + 
 125:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 126:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     *(pDst + 1) = acc2;         /* C[2 * i + 1] = A[2 * i + 1] * B[2 * i] + A[2 * i] * B[2 * i + 1]
 127:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     acc1 = (a1 * c1);
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccV3O8Cl.s 			page 4


 128:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 129:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     d1 = *(pSrcB + 5);
 130:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     acc2 = (b1 * c1);
 131:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 132:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     *(pDst + 2) = acc3;
 133:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     *(pDst + 3) = acc4;
 134:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 135:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     a2 = *(pSrcA + 6);
 136:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     acc1 -= (b1 * d1);
 137:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 138:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     c2 = *(pSrcB + 6);
 139:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     acc2 += (a1 * d1);
 140:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 141:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     b2 = *(pSrcA + 7);
 142:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     acc3 = (a2 * c2);
 143:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 144:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     d2 = *(pSrcB + 7);
 145:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     acc4 = (b2 * c2);
 146:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 147:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     *(pDst + 4) = acc1;
 148:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     pSrcA += 8u;
 149:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 150:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     acc3 -= (b2 * d2);
 151:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     acc4 += (a2 * d2);
 152:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 153:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     *(pDst + 5) = acc2;
 154:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     pSrcB += 8u;
 155:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 156:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     *(pDst + 6) = acc3;
 157:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     *(pDst + 7) = acc4;
 158:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 159:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     pDst += 8u;
 160:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 161:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     /* Decrement the numSamples loop counter */
 162:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     blkCnt--;
 163:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   }
 164:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 165:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   /* If the numSamples is not a multiple of 4, compute any remaining output samples here.
 166:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****    ** No loop unrolling is used. */
 167:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   blkCnt = numSamples % 0x4u;
 168:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 169:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** #else
 170:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 171:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   /* Run the below code for Cortex-M0 */
 172:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   blkCnt = numSamples;
  45              		.loc 1 172 0
  46 000e 3B68     		ldr	r3, [r7]
  47 0010 7B62     		str	r3, [r7, #36]
 173:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 174:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 175:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 176:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   while (blkCnt > 0u)
  48              		.loc 1 176 0
  49 0012 3EE0     		b	.L2
  50              	.L3:
 177:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   {
 178:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccV3O8Cl.s 			page 5


 179:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
 180:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     a1 = *pSrcA++;
  51              		.loc 1 180 0
  52 0014 FB68     		ldr	r3, [r7, #12]
  53 0016 1A1D     		add	r2, r3, #4
  54 0018 FA60     		str	r2, [r7, #12]
  55 001a 1B68     		ldr	r3, [r3]
  56 001c 3B62     		str	r3, [r7, #32]
 181:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     b1 = *pSrcA++;
  57              		.loc 1 181 0
  58 001e FB68     		ldr	r3, [r7, #12]
  59 0020 1A1D     		add	r2, r3, #4
  60 0022 FA60     		str	r2, [r7, #12]
  61 0024 1B68     		ldr	r3, [r3]
  62 0026 FB61     		str	r3, [r7, #28]
 182:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     c1 = *pSrcB++;
  63              		.loc 1 182 0
  64 0028 BB68     		ldr	r3, [r7, #8]
  65 002a 1A1D     		add	r2, r3, #4
  66 002c BA60     		str	r2, [r7, #8]
  67 002e 1B68     		ldr	r3, [r3]
  68 0030 BB61     		str	r3, [r7, #24]
 183:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     d1 = *pSrcB++;
  69              		.loc 1 183 0
  70 0032 BB68     		ldr	r3, [r7, #8]
  71 0034 1A1D     		add	r2, r3, #4
  72 0036 BA60     		str	r2, [r7, #8]
  73 0038 1B68     		ldr	r3, [r3]
  74 003a 7B61     		str	r3, [r7, #20]
 184:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 185:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     /* store the result in the destination buffer. */
 186:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     *pDst++ = (a1 * c1) - (b1 * d1);
  75              		.loc 1 186 0
  76 003c 7C68     		ldr	r4, [r7, #4]
  77 003e 231D     		add	r3, r4, #4
  78 0040 7B60     		str	r3, [r7, #4]
  79 0042 386A     		ldr	r0, [r7, #32]
  80 0044 B969     		ldr	r1, [r7, #24]
  81 0046 FFF7FEFF 		bl	__aeabi_fmul
  82 004a 031C     		add	r3, r0, #0
  83 004c 1D1C     		add	r5, r3, #0
  84 004e F869     		ldr	r0, [r7, #28]
  85 0050 7969     		ldr	r1, [r7, #20]
  86 0052 FFF7FEFF 		bl	__aeabi_fmul
  87 0056 031C     		add	r3, r0, #0
  88 0058 281C     		add	r0, r5, #0
  89 005a 191C     		add	r1, r3, #0
  90 005c FFF7FEFF 		bl	__aeabi_fsub
  91 0060 031C     		add	r3, r0, #0
  92 0062 2360     		str	r3, [r4]
 187:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     *pDst++ = (a1 * d1) + (b1 * c1);
  93              		.loc 1 187 0
  94 0064 7C68     		ldr	r4, [r7, #4]
  95 0066 231D     		add	r3, r4, #4
  96 0068 7B60     		str	r3, [r7, #4]
  97 006a 386A     		ldr	r0, [r7, #32]
  98 006c 7969     		ldr	r1, [r7, #20]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccV3O8Cl.s 			page 6


  99 006e FFF7FEFF 		bl	__aeabi_fmul
 100 0072 031C     		add	r3, r0, #0
 101 0074 1D1C     		add	r5, r3, #0
 102 0076 F869     		ldr	r0, [r7, #28]
 103 0078 B969     		ldr	r1, [r7, #24]
 104 007a FFF7FEFF 		bl	__aeabi_fmul
 105 007e 031C     		add	r3, r0, #0
 106 0080 281C     		add	r0, r5, #0
 107 0082 191C     		add	r1, r3, #0
 108 0084 FFF7FEFF 		bl	__aeabi_fadd
 109 0088 031C     		add	r3, r0, #0
 110 008a 2360     		str	r3, [r4]
 188:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** 
 189:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     /* Decrement the numSamples loop counter */
 190:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****     blkCnt--;
 111              		.loc 1 190 0
 112 008c 7B6A     		ldr	r3, [r7, #36]
 113 008e 013B     		sub	r3, r3, #1
 114 0090 7B62     		str	r3, [r7, #36]
 115              	.L2:
 176:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   {
 116              		.loc 1 176 0
 117 0092 7B6A     		ldr	r3, [r7, #36]
 118 0094 002B     		cmp	r3, #0
 119 0096 BDD1     		bne	.L3
 191:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c ****   }
 192:Source\ComplexMathFunctions/arm_cmplx_mult_cmplx_f32.c **** }
 120              		.loc 1 192 0
 121 0098 BD46     		mov	sp, r7
 122 009a 0AB0     		add	sp, sp, #40
 123              		@ sp needed
 124 009c B0BD     		pop	{r4, r5, r7, pc}
 125              		.cfi_endproc
 126              	.LFE82:
 127              		.size	arm_cmplx_mult_cmplx_f32, .-arm_cmplx_mult_cmplx_f32
 128 009e C046     		.text
 129              	.Letext0:
 130              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 131              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 132              		.file 4 ".\\Include/arm_math.h"
 133              		.section	.debug_info,"",%progbits
 134              	.Ldebug_info0:
 135 0000 3F010000 		.4byte	0x13f
 136 0004 0400     		.2byte	0x4
 137 0006 00000000 		.4byte	.Ldebug_abbrev0
 138 000a 04       		.byte	0x4
 139 000b 01       		.uleb128 0x1
 140 000c 04010000 		.4byte	.LASF22
 141 0010 01       		.byte	0x1
 142 0011 52000000 		.4byte	.LASF23
 143 0015 0C000000 		.4byte	.LASF24
 144 0019 00000000 		.4byte	.Ldebug_ranges0+0
 145 001d 00000000 		.4byte	0
 146 0021 00000000 		.4byte	.Ldebug_line0
 147 0025 02       		.uleb128 0x2
 148 0026 01       		.byte	0x1
 149 0027 06       		.byte	0x6
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccV3O8Cl.s 			page 7


 150 0028 FD010000 		.4byte	.LASF0
 151 002c 02       		.uleb128 0x2
 152 002d 01       		.byte	0x1
 153 002e 08       		.byte	0x8
 154 002f 8F000000 		.4byte	.LASF1
 155 0033 02       		.uleb128 0x2
 156 0034 02       		.byte	0x2
 157 0035 05       		.byte	0x5
 158 0036 BC010000 		.4byte	.LASF2
 159 003a 02       		.uleb128 0x2
 160 003b 02       		.byte	0x2
 161 003c 07       		.byte	0x7
 162 003d B6000000 		.4byte	.LASF3
 163 0041 02       		.uleb128 0x2
 164 0042 04       		.byte	0x4
 165 0043 05       		.byte	0x5
 166 0044 CF010000 		.4byte	.LASF4
 167 0048 03       		.uleb128 0x3
 168 0049 D5000000 		.4byte	.LASF9
 169 004d 02       		.byte	0x2
 170 004e 41       		.byte	0x41
 171 004f 53000000 		.4byte	0x53
 172 0053 02       		.uleb128 0x2
 173 0054 04       		.byte	0x4
 174 0055 07       		.byte	0x7
 175 0056 A4000000 		.4byte	.LASF5
 176 005a 02       		.uleb128 0x2
 177 005b 08       		.byte	0x8
 178 005c 05       		.byte	0x5
 179 005d 9F010000 		.4byte	.LASF6
 180 0061 02       		.uleb128 0x2
 181 0062 08       		.byte	0x8
 182 0063 07       		.byte	0x7
 183 0064 ED000000 		.4byte	.LASF7
 184 0068 04       		.uleb128 0x4
 185 0069 04       		.byte	0x4
 186 006a 05       		.byte	0x5
 187 006b 696E7400 		.ascii	"int\000"
 188 006f 02       		.uleb128 0x2
 189 0070 04       		.byte	0x4
 190 0071 07       		.byte	0x7
 191 0072 E0000000 		.4byte	.LASF8
 192 0076 03       		.uleb128 0x3
 193 0077 C6010000 		.4byte	.LASF10
 194 007b 03       		.byte	0x3
 195 007c 2D       		.byte	0x2d
 196 007d 48000000 		.4byte	0x48
 197 0081 02       		.uleb128 0x2
 198 0082 04       		.byte	0x4
 199 0083 07       		.byte	0x7
 200 0084 96010000 		.4byte	.LASF11
 201 0088 02       		.uleb128 0x2
 202 0089 01       		.byte	0x1
 203 008a 08       		.byte	0x8
 204 008b AD010000 		.4byte	.LASF12
 205 008f 02       		.uleb128 0x2
 206 0090 08       		.byte	0x8
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccV3O8Cl.s 			page 8


 207 0091 04       		.byte	0x4
 208 0092 CE000000 		.4byte	.LASF13
 209 0096 02       		.uleb128 0x2
 210 0097 04       		.byte	0x4
 211 0098 04       		.byte	0x4
 212 0099 89000000 		.4byte	.LASF14
 213 009d 02       		.uleb128 0x2
 214 009e 08       		.byte	0x8
 215 009f 04       		.byte	0x4
 216 00a0 F1010000 		.4byte	.LASF15
 217 00a4 05       		.uleb128 0x5
 218 00a5 B2010000 		.4byte	.LASF16
 219 00a9 04       		.byte	0x4
 220 00aa A501     		.2byte	0x1a5
 221 00ac 96000000 		.4byte	0x96
 222 00b0 06       		.uleb128 0x6
 223 00b1 04       		.byte	0x4
 224 00b2 A4000000 		.4byte	0xa4
 225 00b6 07       		.uleb128 0x7
 226 00b7 D8010000 		.4byte	.LASF25
 227 00bb 01       		.byte	0x1
 228 00bc 48       		.byte	0x48
 229 00bd 00000000 		.4byte	.LFB82
 230 00c1 9E000000 		.4byte	.LFE82-.LFB82
 231 00c5 01       		.uleb128 0x1
 232 00c6 9C       		.byte	0x9c
 233 00c7 08       		.uleb128 0x8
 234 00c8 00000000 		.4byte	.LASF17
 235 00cc 01       		.byte	0x1
 236 00cd 49       		.byte	0x49
 237 00ce B0000000 		.4byte	0xb0
 238 00d2 02       		.uleb128 0x2
 239 00d3 91       		.byte	0x91
 240 00d4 54       		.sleb128 -44
 241 00d5 08       		.uleb128 0x8
 242 00d6 06000000 		.4byte	.LASF18
 243 00da 01       		.byte	0x1
 244 00db 4A       		.byte	0x4a
 245 00dc B0000000 		.4byte	0xb0
 246 00e0 02       		.uleb128 0x2
 247 00e1 91       		.byte	0x91
 248 00e2 50       		.sleb128 -48
 249 00e3 08       		.uleb128 0x8
 250 00e4 C9000000 		.4byte	.LASF19
 251 00e8 01       		.byte	0x1
 252 00e9 4B       		.byte	0x4b
 253 00ea B0000000 		.4byte	0xb0
 254 00ee 02       		.uleb128 0x2
 255 00ef 91       		.byte	0x91
 256 00f0 4C       		.sleb128 -52
 257 00f1 08       		.uleb128 0x8
 258 00f2 09020000 		.4byte	.LASF20
 259 00f6 01       		.byte	0x1
 260 00f7 4C       		.byte	0x4c
 261 00f8 76000000 		.4byte	0x76
 262 00fc 02       		.uleb128 0x2
 263 00fd 91       		.byte	0x91
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccV3O8Cl.s 			page 9


 264 00fe 48       		.sleb128 -56
 265 00ff 09       		.uleb128 0x9
 266 0100 613100   		.ascii	"a1\000"
 267 0103 01       		.byte	0x1
 268 0104 4E       		.byte	0x4e
 269 0105 A4000000 		.4byte	0xa4
 270 0109 02       		.uleb128 0x2
 271 010a 91       		.byte	0x91
 272 010b 68       		.sleb128 -24
 273 010c 09       		.uleb128 0x9
 274 010d 623100   		.ascii	"b1\000"
 275 0110 01       		.byte	0x1
 276 0111 4E       		.byte	0x4e
 277 0112 A4000000 		.4byte	0xa4
 278 0116 02       		.uleb128 0x2
 279 0117 91       		.byte	0x91
 280 0118 64       		.sleb128 -28
 281 0119 09       		.uleb128 0x9
 282 011a 633100   		.ascii	"c1\000"
 283 011d 01       		.byte	0x1
 284 011e 4E       		.byte	0x4e
 285 011f A4000000 		.4byte	0xa4
 286 0123 02       		.uleb128 0x2
 287 0124 91       		.byte	0x91
 288 0125 60       		.sleb128 -32
 289 0126 09       		.uleb128 0x9
 290 0127 643100   		.ascii	"d1\000"
 291 012a 01       		.byte	0x1
 292 012b 4E       		.byte	0x4e
 293 012c A4000000 		.4byte	0xa4
 294 0130 02       		.uleb128 0x2
 295 0131 91       		.byte	0x91
 296 0132 5C       		.sleb128 -36
 297 0133 0A       		.uleb128 0xa
 298 0134 9D000000 		.4byte	.LASF21
 299 0138 01       		.byte	0x1
 300 0139 4F       		.byte	0x4f
 301 013a 76000000 		.4byte	0x76
 302 013e 02       		.uleb128 0x2
 303 013f 91       		.byte	0x91
 304 0140 6C       		.sleb128 -20
 305 0141 00       		.byte	0
 306 0142 00       		.byte	0
 307              		.section	.debug_abbrev,"",%progbits
 308              	.Ldebug_abbrev0:
 309 0000 01       		.uleb128 0x1
 310 0001 11       		.uleb128 0x11
 311 0002 01       		.byte	0x1
 312 0003 25       		.uleb128 0x25
 313 0004 0E       		.uleb128 0xe
 314 0005 13       		.uleb128 0x13
 315 0006 0B       		.uleb128 0xb
 316 0007 03       		.uleb128 0x3
 317 0008 0E       		.uleb128 0xe
 318 0009 1B       		.uleb128 0x1b
 319 000a 0E       		.uleb128 0xe
 320 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccV3O8Cl.s 			page 10


 321 000c 17       		.uleb128 0x17
 322 000d 11       		.uleb128 0x11
 323 000e 01       		.uleb128 0x1
 324 000f 10       		.uleb128 0x10
 325 0010 17       		.uleb128 0x17
 326 0011 00       		.byte	0
 327 0012 00       		.byte	0
 328 0013 02       		.uleb128 0x2
 329 0014 24       		.uleb128 0x24
 330 0015 00       		.byte	0
 331 0016 0B       		.uleb128 0xb
 332 0017 0B       		.uleb128 0xb
 333 0018 3E       		.uleb128 0x3e
 334 0019 0B       		.uleb128 0xb
 335 001a 03       		.uleb128 0x3
 336 001b 0E       		.uleb128 0xe
 337 001c 00       		.byte	0
 338 001d 00       		.byte	0
 339 001e 03       		.uleb128 0x3
 340 001f 16       		.uleb128 0x16
 341 0020 00       		.byte	0
 342 0021 03       		.uleb128 0x3
 343 0022 0E       		.uleb128 0xe
 344 0023 3A       		.uleb128 0x3a
 345 0024 0B       		.uleb128 0xb
 346 0025 3B       		.uleb128 0x3b
 347 0026 0B       		.uleb128 0xb
 348 0027 49       		.uleb128 0x49
 349 0028 13       		.uleb128 0x13
 350 0029 00       		.byte	0
 351 002a 00       		.byte	0
 352 002b 04       		.uleb128 0x4
 353 002c 24       		.uleb128 0x24
 354 002d 00       		.byte	0
 355 002e 0B       		.uleb128 0xb
 356 002f 0B       		.uleb128 0xb
 357 0030 3E       		.uleb128 0x3e
 358 0031 0B       		.uleb128 0xb
 359 0032 03       		.uleb128 0x3
 360 0033 08       		.uleb128 0x8
 361 0034 00       		.byte	0
 362 0035 00       		.byte	0
 363 0036 05       		.uleb128 0x5
 364 0037 16       		.uleb128 0x16
 365 0038 00       		.byte	0
 366 0039 03       		.uleb128 0x3
 367 003a 0E       		.uleb128 0xe
 368 003b 3A       		.uleb128 0x3a
 369 003c 0B       		.uleb128 0xb
 370 003d 3B       		.uleb128 0x3b
 371 003e 05       		.uleb128 0x5
 372 003f 49       		.uleb128 0x49
 373 0040 13       		.uleb128 0x13
 374 0041 00       		.byte	0
 375 0042 00       		.byte	0
 376 0043 06       		.uleb128 0x6
 377 0044 0F       		.uleb128 0xf
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccV3O8Cl.s 			page 11


 378 0045 00       		.byte	0
 379 0046 0B       		.uleb128 0xb
 380 0047 0B       		.uleb128 0xb
 381 0048 49       		.uleb128 0x49
 382 0049 13       		.uleb128 0x13
 383 004a 00       		.byte	0
 384 004b 00       		.byte	0
 385 004c 07       		.uleb128 0x7
 386 004d 2E       		.uleb128 0x2e
 387 004e 01       		.byte	0x1
 388 004f 3F       		.uleb128 0x3f
 389 0050 19       		.uleb128 0x19
 390 0051 03       		.uleb128 0x3
 391 0052 0E       		.uleb128 0xe
 392 0053 3A       		.uleb128 0x3a
 393 0054 0B       		.uleb128 0xb
 394 0055 3B       		.uleb128 0x3b
 395 0056 0B       		.uleb128 0xb
 396 0057 27       		.uleb128 0x27
 397 0058 19       		.uleb128 0x19
 398 0059 11       		.uleb128 0x11
 399 005a 01       		.uleb128 0x1
 400 005b 12       		.uleb128 0x12
 401 005c 06       		.uleb128 0x6
 402 005d 40       		.uleb128 0x40
 403 005e 18       		.uleb128 0x18
 404 005f 9642     		.uleb128 0x2116
 405 0061 19       		.uleb128 0x19
 406 0062 00       		.byte	0
 407 0063 00       		.byte	0
 408 0064 08       		.uleb128 0x8
 409 0065 05       		.uleb128 0x5
 410 0066 00       		.byte	0
 411 0067 03       		.uleb128 0x3
 412 0068 0E       		.uleb128 0xe
 413 0069 3A       		.uleb128 0x3a
 414 006a 0B       		.uleb128 0xb
 415 006b 3B       		.uleb128 0x3b
 416 006c 0B       		.uleb128 0xb
 417 006d 49       		.uleb128 0x49
 418 006e 13       		.uleb128 0x13
 419 006f 02       		.uleb128 0x2
 420 0070 18       		.uleb128 0x18
 421 0071 00       		.byte	0
 422 0072 00       		.byte	0
 423 0073 09       		.uleb128 0x9
 424 0074 34       		.uleb128 0x34
 425 0075 00       		.byte	0
 426 0076 03       		.uleb128 0x3
 427 0077 08       		.uleb128 0x8
 428 0078 3A       		.uleb128 0x3a
 429 0079 0B       		.uleb128 0xb
 430 007a 3B       		.uleb128 0x3b
 431 007b 0B       		.uleb128 0xb
 432 007c 49       		.uleb128 0x49
 433 007d 13       		.uleb128 0x13
 434 007e 02       		.uleb128 0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccV3O8Cl.s 			page 12


 435 007f 18       		.uleb128 0x18
 436 0080 00       		.byte	0
 437 0081 00       		.byte	0
 438 0082 0A       		.uleb128 0xa
 439 0083 34       		.uleb128 0x34
 440 0084 00       		.byte	0
 441 0085 03       		.uleb128 0x3
 442 0086 0E       		.uleb128 0xe
 443 0087 3A       		.uleb128 0x3a
 444 0088 0B       		.uleb128 0xb
 445 0089 3B       		.uleb128 0x3b
 446 008a 0B       		.uleb128 0xb
 447 008b 49       		.uleb128 0x49
 448 008c 13       		.uleb128 0x13
 449 008d 02       		.uleb128 0x2
 450 008e 18       		.uleb128 0x18
 451 008f 00       		.byte	0
 452 0090 00       		.byte	0
 453 0091 00       		.byte	0
 454              		.section	.debug_aranges,"",%progbits
 455 0000 1C000000 		.4byte	0x1c
 456 0004 0200     		.2byte	0x2
 457 0006 00000000 		.4byte	.Ldebug_info0
 458 000a 04       		.byte	0x4
 459 000b 00       		.byte	0
 460 000c 0000     		.2byte	0
 461 000e 0000     		.2byte	0
 462 0010 00000000 		.4byte	.LFB82
 463 0014 9E000000 		.4byte	.LFE82-.LFB82
 464 0018 00000000 		.4byte	0
 465 001c 00000000 		.4byte	0
 466              		.section	.debug_ranges,"",%progbits
 467              	.Ldebug_ranges0:
 468 0000 00000000 		.4byte	.LFB82
 469 0004 9E000000 		.4byte	.LFE82
 470 0008 00000000 		.4byte	0
 471 000c 00000000 		.4byte	0
 472              		.section	.debug_line,"",%progbits
 473              	.Ldebug_line0:
 474 0000 87010000 		.section	.debug_str,"MS",%progbits,1
 474      02005D01 
 474      00000201 
 474      FB0E0D00 
 474      01010101 
 475              	.LASF17:
 476 0000 70537263 		.ascii	"pSrcA\000"
 476      4100
 477              	.LASF18:
 478 0006 70537263 		.ascii	"pSrcB\000"
 478      4200
 479              	.LASF24:
 480 000c 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 480      73657273 
 480      5C666E65 
 480      7665735C 
 480      446F6375 
 481 0039 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccV3O8Cl.s 			page 13


 481      655F7370 
 481      6565645F 
 481      73656E73 
 481      6F722E63 
 482              	.LASF23:
 483 0052 536F7572 		.ascii	"Source\\ComplexMathFunctions\\arm_cmplx_mult_cmplx_"
 483      63655C43 
 483      6F6D706C 
 483      65784D61 
 483      74684675 
 484 0083 6633322E 		.ascii	"f32.c\000"
 484      6300
 485              	.LASF14:
 486 0089 666C6F61 		.ascii	"float\000"
 486      7400
 487              	.LASF1:
 488 008f 756E7369 		.ascii	"unsigned char\000"
 488      676E6564 
 488      20636861 
 488      7200
 489              	.LASF21:
 490 009d 626C6B43 		.ascii	"blkCnt\000"
 490      6E7400
 491              	.LASF5:
 492 00a4 6C6F6E67 		.ascii	"long unsigned int\000"
 492      20756E73 
 492      69676E65 
 492      6420696E 
 492      7400
 493              	.LASF3:
 494 00b6 73686F72 		.ascii	"short unsigned int\000"
 494      7420756E 
 494      7369676E 
 494      65642069 
 494      6E7400
 495              	.LASF19:
 496 00c9 70447374 		.ascii	"pDst\000"
 496      00
 497              	.LASF13:
 498 00ce 646F7562 		.ascii	"double\000"
 498      6C6500
 499              	.LASF9:
 500 00d5 5F5F7569 		.ascii	"__uint32_t\000"
 500      6E743332 
 500      5F7400
 501              	.LASF8:
 502 00e0 756E7369 		.ascii	"unsigned int\000"
 502      676E6564 
 502      20696E74 
 502      00
 503              	.LASF7:
 504 00ed 6C6F6E67 		.ascii	"long long unsigned int\000"
 504      206C6F6E 
 504      6720756E 
 504      7369676E 
 504      65642069 
 505              	.LASF22:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccV3O8Cl.s 			page 14


 506 0104 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 506      4320342E 
 506      392E3320 
 506      32303135 
 506      30333033 
 507 0137 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 507      20726576 
 507      6973696F 
 507      6E203232 
 507      31323230 
 508 016a 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 508      30202D66 
 508      66756E63 
 508      74696F6E 
 508      2D736563 
 509              	.LASF11:
 510 0196 73697A65 		.ascii	"sizetype\000"
 510      74797065 
 510      00
 511              	.LASF6:
 512 019f 6C6F6E67 		.ascii	"long long int\000"
 512      206C6F6E 
 512      6720696E 
 512      7400
 513              	.LASF12:
 514 01ad 63686172 		.ascii	"char\000"
 514      00
 515              	.LASF16:
 516 01b2 666C6F61 		.ascii	"float32_t\000"
 516      7433325F 
 516      7400
 517              	.LASF2:
 518 01bc 73686F72 		.ascii	"short int\000"
 518      7420696E 
 518      7400
 519              	.LASF10:
 520 01c6 75696E74 		.ascii	"uint32_t\000"
 520      33325F74 
 520      00
 521              	.LASF4:
 522 01cf 6C6F6E67 		.ascii	"long int\000"
 522      20696E74 
 522      00
 523              	.LASF25:
 524 01d8 61726D5F 		.ascii	"arm_cmplx_mult_cmplx_f32\000"
 524      636D706C 
 524      785F6D75 
 524      6C745F63 
 524      6D706C78 
 525              	.LASF15:
 526 01f1 6C6F6E67 		.ascii	"long double\000"
 526      20646F75 
 526      626C6500 
 527              	.LASF0:
 528 01fd 7369676E 		.ascii	"signed char\000"
 528      65642063 
 528      68617200 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccV3O8Cl.s 			page 15


 529              	.LASF20:
 530 0209 6E756D53 		.ascii	"numSamples\000"
 530      616D706C 
 530      657300
 531              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
