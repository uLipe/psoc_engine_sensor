ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccydtiQI.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_scale_q31.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_lmul
  18              		.section	.text.arm_scale_q31,"ax",%progbits
  19              		.align	2
  20              		.global	arm_scale_q31
  21              		.code	16
  22              		.thumb_func
  23              		.type	arm_scale_q31, %function
  24              	arm_scale_q31:
  25              	.LFB82:
  26              		.file 1 "Source\\BasicMathFunctions\\arm_scale_q31.c"
   1:Source\BasicMathFunctions/arm_scale_q31.c **** /* ----------------------------------------------------------------------
   2:Source\BasicMathFunctions/arm_scale_q31.c ****  * Project:      CMSIS DSP Library
   3:Source\BasicMathFunctions/arm_scale_q31.c ****  * Title:        arm_scale_q31.c
   4:Source\BasicMathFunctions/arm_scale_q31.c ****  * Description:  Multiplies a Q31 vector by a scalar
   5:Source\BasicMathFunctions/arm_scale_q31.c ****  *
   6:Source\BasicMathFunctions/arm_scale_q31.c ****  * $Date:        27. January 2017
   7:Source\BasicMathFunctions/arm_scale_q31.c ****  * $Revision:    V.1.5.1
   8:Source\BasicMathFunctions/arm_scale_q31.c ****  *
   9:Source\BasicMathFunctions/arm_scale_q31.c ****  * Target Processor: Cortex-M cores
  10:Source\BasicMathFunctions/arm_scale_q31.c ****  * -------------------------------------------------------------------- */
  11:Source\BasicMathFunctions/arm_scale_q31.c **** /*
  12:Source\BasicMathFunctions/arm_scale_q31.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\BasicMathFunctions/arm_scale_q31.c ****  *
  14:Source\BasicMathFunctions/arm_scale_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\BasicMathFunctions/arm_scale_q31.c ****  *
  16:Source\BasicMathFunctions/arm_scale_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\BasicMathFunctions/arm_scale_q31.c ****  * not use this file except in compliance with the License.
  18:Source\BasicMathFunctions/arm_scale_q31.c ****  * You may obtain a copy of the License at
  19:Source\BasicMathFunctions/arm_scale_q31.c ****  *
  20:Source\BasicMathFunctions/arm_scale_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\BasicMathFunctions/arm_scale_q31.c ****  *
  22:Source\BasicMathFunctions/arm_scale_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\BasicMathFunctions/arm_scale_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\BasicMathFunctions/arm_scale_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\BasicMathFunctions/arm_scale_q31.c ****  * See the License for the specific language governing permissions and
  26:Source\BasicMathFunctions/arm_scale_q31.c ****  * limitations under the License.
  27:Source\BasicMathFunctions/arm_scale_q31.c ****  */
  28:Source\BasicMathFunctions/arm_scale_q31.c **** 
  29:Source\BasicMathFunctions/arm_scale_q31.c **** #include "arm_math.h"
  30:Source\BasicMathFunctions/arm_scale_q31.c **** 
  31:Source\BasicMathFunctions/arm_scale_q31.c **** /**
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccydtiQI.s 			page 2


  32:Source\BasicMathFunctions/arm_scale_q31.c ****  * @ingroup groupMath
  33:Source\BasicMathFunctions/arm_scale_q31.c ****  */
  34:Source\BasicMathFunctions/arm_scale_q31.c **** 
  35:Source\BasicMathFunctions/arm_scale_q31.c **** /**
  36:Source\BasicMathFunctions/arm_scale_q31.c ****  * @addtogroup scale
  37:Source\BasicMathFunctions/arm_scale_q31.c ****  * @{
  38:Source\BasicMathFunctions/arm_scale_q31.c ****  */
  39:Source\BasicMathFunctions/arm_scale_q31.c **** 
  40:Source\BasicMathFunctions/arm_scale_q31.c **** /**
  41:Source\BasicMathFunctions/arm_scale_q31.c ****  * @brief Multiplies a Q31 vector by a scalar.
  42:Source\BasicMathFunctions/arm_scale_q31.c ****  * @param[in]       *pSrc points to the input vector
  43:Source\BasicMathFunctions/arm_scale_q31.c ****  * @param[in]       scaleFract fractional portion of the scale value
  44:Source\BasicMathFunctions/arm_scale_q31.c ****  * @param[in]       shift number of bits to shift the result by
  45:Source\BasicMathFunctions/arm_scale_q31.c ****  * @param[out]      *pDst points to the output vector
  46:Source\BasicMathFunctions/arm_scale_q31.c ****  * @param[in]       blockSize number of samples in the vector
  47:Source\BasicMathFunctions/arm_scale_q31.c ****  * @return none.
  48:Source\BasicMathFunctions/arm_scale_q31.c ****  *
  49:Source\BasicMathFunctions/arm_scale_q31.c ****  * <b>Scaling and Overflow Behavior:</b>
  50:Source\BasicMathFunctions/arm_scale_q31.c ****  * \par
  51:Source\BasicMathFunctions/arm_scale_q31.c ****  * The input data <code>*pSrc</code> and <code>scaleFract</code> are in 1.31 format.
  52:Source\BasicMathFunctions/arm_scale_q31.c ****  * These are multiplied to yield a 2.62 intermediate result and this is shifted with saturation to 
  53:Source\BasicMathFunctions/arm_scale_q31.c ****  */
  54:Source\BasicMathFunctions/arm_scale_q31.c **** 
  55:Source\BasicMathFunctions/arm_scale_q31.c **** void arm_scale_q31(
  56:Source\BasicMathFunctions/arm_scale_q31.c ****   q31_t * pSrc,
  57:Source\BasicMathFunctions/arm_scale_q31.c ****   q31_t scaleFract,
  58:Source\BasicMathFunctions/arm_scale_q31.c ****   int8_t shift,
  59:Source\BasicMathFunctions/arm_scale_q31.c ****   q31_t * pDst,
  60:Source\BasicMathFunctions/arm_scale_q31.c ****   uint32_t blockSize)
  61:Source\BasicMathFunctions/arm_scale_q31.c **** {
  27              		.loc 1 61 0
  28              		.cfi_startproc
  29 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  30              		.cfi_def_cfa_offset 20
  31              		.cfi_offset 4, -20
  32              		.cfi_offset 5, -16
  33              		.cfi_offset 6, -12
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 93B0     		sub	sp, sp, #76
  37              		.cfi_def_cfa_offset 96
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7863     		str	r0, [r7, #52]
  41 0008 3963     		str	r1, [r7, #48]
  42 000a 111C     		mov	r1, r2
  43 000c BB62     		str	r3, [r7, #40]
  44 000e 2F23     		mov	r3, #47
  45 0010 FA18     		add	r2, r7, r3
  46 0012 0B1C     		add	r3, r1, #0
  47 0014 1370     		strb	r3, [r2]
  62:Source\BasicMathFunctions/arm_scale_q31.c ****   int8_t kShift = shift + 1;                     /* Shift to apply after scaling */
  48              		.loc 1 62 0
  49 0016 2F23     		mov	r3, #47
  50 0018 FB18     		add	r3, r7, r3
  51 001a 1B78     		ldrb	r3, [r3]
  52 001c 0133     		add	r3, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccydtiQI.s 			page 3


  53 001e DBB2     		uxtb	r3, r3
  54 0020 1722     		mov	r2, #23
  55 0022 2821     		mov	r1, #40
  56 0024 8C46     		mov	ip, r1
  57 0026 BC44     		add	ip, ip, r7
  58 0028 6244     		add	r2, r2, ip
  59 002a 1370     		strb	r3, [r2]
  63:Source\BasicMathFunctions/arm_scale_q31.c ****   int8_t sign = (kShift & 0x80);
  60              		.loc 1 63 0
  61 002c 1623     		mov	r3, #22
  62 002e 2822     		mov	r2, #40
  63 0030 BA18     		add	r2, r7, r2
  64 0032 D118     		add	r1, r2, r3
  65 0034 1723     		mov	r3, #23
  66 0036 2822     		mov	r2, #40
  67 0038 9446     		mov	ip, r2
  68 003a BC44     		add	ip, ip, r7
  69 003c 6344     		add	r3, r3, ip
  70 003e 1A78     		ldrb	r2, [r3]
  71 0040 7F23     		mov	r3, #127
  72 0042 9A43     		bic	r2, r3
  73 0044 131C     		mov	r3, r2
  74 0046 0B70     		strb	r3, [r1]
  64:Source\BasicMathFunctions/arm_scale_q31.c ****   uint32_t blkCnt;                               /* loop counter */
  65:Source\BasicMathFunctions/arm_scale_q31.c ****   q31_t in, out;
  66:Source\BasicMathFunctions/arm_scale_q31.c **** 
  67:Source\BasicMathFunctions/arm_scale_q31.c **** #if defined (ARM_MATH_DSP)
  68:Source\BasicMathFunctions/arm_scale_q31.c **** 
  69:Source\BasicMathFunctions/arm_scale_q31.c **** /* Run the below code for Cortex-M4 and Cortex-M3 */
  70:Source\BasicMathFunctions/arm_scale_q31.c **** 
  71:Source\BasicMathFunctions/arm_scale_q31.c ****   q31_t in1, in2, in3, in4;                      /* temporary input variables */
  72:Source\BasicMathFunctions/arm_scale_q31.c ****   q31_t out1, out2, out3, out4;                  /* temporary output variabels */
  73:Source\BasicMathFunctions/arm_scale_q31.c **** 
  74:Source\BasicMathFunctions/arm_scale_q31.c **** 
  75:Source\BasicMathFunctions/arm_scale_q31.c ****   /*loop Unrolling */
  76:Source\BasicMathFunctions/arm_scale_q31.c ****   blkCnt = blockSize >> 2u;
  77:Source\BasicMathFunctions/arm_scale_q31.c **** 
  78:Source\BasicMathFunctions/arm_scale_q31.c ****   if (sign == 0u)
  79:Source\BasicMathFunctions/arm_scale_q31.c ****   {
  80:Source\BasicMathFunctions/arm_scale_q31.c ****     /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  81:Source\BasicMathFunctions/arm_scale_q31.c ****      ** a second loop below computes the remaining 1 to 3 samples. */
  82:Source\BasicMathFunctions/arm_scale_q31.c ****     while (blkCnt > 0u)
  83:Source\BasicMathFunctions/arm_scale_q31.c ****     {
  84:Source\BasicMathFunctions/arm_scale_q31.c ****       /* read four inputs from source */
  85:Source\BasicMathFunctions/arm_scale_q31.c ****       in1 = *pSrc;
  86:Source\BasicMathFunctions/arm_scale_q31.c ****       in2 = *(pSrc + 1);
  87:Source\BasicMathFunctions/arm_scale_q31.c ****       in3 = *(pSrc + 2);
  88:Source\BasicMathFunctions/arm_scale_q31.c ****       in4 = *(pSrc + 3);
  89:Source\BasicMathFunctions/arm_scale_q31.c **** 
  90:Source\BasicMathFunctions/arm_scale_q31.c ****       /* multiply input with scaler value */
  91:Source\BasicMathFunctions/arm_scale_q31.c ****       in1 = ((q63_t) in1 * scaleFract) >> 32;
  92:Source\BasicMathFunctions/arm_scale_q31.c ****       in2 = ((q63_t) in2 * scaleFract) >> 32;
  93:Source\BasicMathFunctions/arm_scale_q31.c ****       in3 = ((q63_t) in3 * scaleFract) >> 32;
  94:Source\BasicMathFunctions/arm_scale_q31.c ****       in4 = ((q63_t) in4 * scaleFract) >> 32;
  95:Source\BasicMathFunctions/arm_scale_q31.c **** 
  96:Source\BasicMathFunctions/arm_scale_q31.c ****       /* apply shifting */
  97:Source\BasicMathFunctions/arm_scale_q31.c ****       out1 = in1 << kShift;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccydtiQI.s 			page 4


  98:Source\BasicMathFunctions/arm_scale_q31.c ****       out2 = in2 << kShift;
  99:Source\BasicMathFunctions/arm_scale_q31.c **** 
 100:Source\BasicMathFunctions/arm_scale_q31.c ****       /* saturate the results. */
 101:Source\BasicMathFunctions/arm_scale_q31.c ****       if (in1 != (out1 >> kShift))
 102:Source\BasicMathFunctions/arm_scale_q31.c ****         out1 = 0x7FFFFFFF ^ (in1 >> 31);
 103:Source\BasicMathFunctions/arm_scale_q31.c **** 
 104:Source\BasicMathFunctions/arm_scale_q31.c ****       if (in2 != (out2 >> kShift))
 105:Source\BasicMathFunctions/arm_scale_q31.c ****         out2 = 0x7FFFFFFF ^ (in2 >> 31);
 106:Source\BasicMathFunctions/arm_scale_q31.c **** 
 107:Source\BasicMathFunctions/arm_scale_q31.c ****       out3 = in3 << kShift;
 108:Source\BasicMathFunctions/arm_scale_q31.c ****       out4 = in4 << kShift;
 109:Source\BasicMathFunctions/arm_scale_q31.c **** 
 110:Source\BasicMathFunctions/arm_scale_q31.c ****       *pDst = out1;
 111:Source\BasicMathFunctions/arm_scale_q31.c ****       *(pDst + 1) = out2;
 112:Source\BasicMathFunctions/arm_scale_q31.c **** 
 113:Source\BasicMathFunctions/arm_scale_q31.c ****       if (in3 != (out3 >> kShift))
 114:Source\BasicMathFunctions/arm_scale_q31.c ****         out3 = 0x7FFFFFFF ^ (in3 >> 31);
 115:Source\BasicMathFunctions/arm_scale_q31.c **** 
 116:Source\BasicMathFunctions/arm_scale_q31.c ****       if (in4 != (out4 >> kShift))
 117:Source\BasicMathFunctions/arm_scale_q31.c ****         out4 = 0x7FFFFFFF ^ (in4 >> 31);
 118:Source\BasicMathFunctions/arm_scale_q31.c **** 
 119:Source\BasicMathFunctions/arm_scale_q31.c ****       /* Store result destination */
 120:Source\BasicMathFunctions/arm_scale_q31.c ****       *(pDst + 2) = out3;
 121:Source\BasicMathFunctions/arm_scale_q31.c ****       *(pDst + 3) = out4;
 122:Source\BasicMathFunctions/arm_scale_q31.c **** 
 123:Source\BasicMathFunctions/arm_scale_q31.c ****       /* Update pointers to process next sampels */
 124:Source\BasicMathFunctions/arm_scale_q31.c ****       pSrc += 4u;
 125:Source\BasicMathFunctions/arm_scale_q31.c ****       pDst += 4u;
 126:Source\BasicMathFunctions/arm_scale_q31.c **** 
 127:Source\BasicMathFunctions/arm_scale_q31.c ****       /* Decrement the loop counter */
 128:Source\BasicMathFunctions/arm_scale_q31.c ****       blkCnt--;
 129:Source\BasicMathFunctions/arm_scale_q31.c ****     }
 130:Source\BasicMathFunctions/arm_scale_q31.c **** 
 131:Source\BasicMathFunctions/arm_scale_q31.c ****   }
 132:Source\BasicMathFunctions/arm_scale_q31.c ****   else
 133:Source\BasicMathFunctions/arm_scale_q31.c ****   {
 134:Source\BasicMathFunctions/arm_scale_q31.c ****     /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
 135:Source\BasicMathFunctions/arm_scale_q31.c ****      ** a second loop below computes the remaining 1 to 3 samples. */
 136:Source\BasicMathFunctions/arm_scale_q31.c ****     while (blkCnt > 0u)
 137:Source\BasicMathFunctions/arm_scale_q31.c ****     {
 138:Source\BasicMathFunctions/arm_scale_q31.c ****       /* read four inputs from source */
 139:Source\BasicMathFunctions/arm_scale_q31.c ****       in1 = *pSrc;
 140:Source\BasicMathFunctions/arm_scale_q31.c ****       in2 = *(pSrc + 1);
 141:Source\BasicMathFunctions/arm_scale_q31.c ****       in3 = *(pSrc + 2);
 142:Source\BasicMathFunctions/arm_scale_q31.c ****       in4 = *(pSrc + 3);
 143:Source\BasicMathFunctions/arm_scale_q31.c **** 
 144:Source\BasicMathFunctions/arm_scale_q31.c ****       /* multiply input with scaler value */
 145:Source\BasicMathFunctions/arm_scale_q31.c ****       in1 = ((q63_t) in1 * scaleFract) >> 32;
 146:Source\BasicMathFunctions/arm_scale_q31.c ****       in2 = ((q63_t) in2 * scaleFract) >> 32;
 147:Source\BasicMathFunctions/arm_scale_q31.c ****       in3 = ((q63_t) in3 * scaleFract) >> 32;
 148:Source\BasicMathFunctions/arm_scale_q31.c ****       in4 = ((q63_t) in4 * scaleFract) >> 32;
 149:Source\BasicMathFunctions/arm_scale_q31.c **** 
 150:Source\BasicMathFunctions/arm_scale_q31.c ****       /* apply shifting */
 151:Source\BasicMathFunctions/arm_scale_q31.c ****       out1 = in1 >> -kShift;
 152:Source\BasicMathFunctions/arm_scale_q31.c ****       out2 = in2 >> -kShift;
 153:Source\BasicMathFunctions/arm_scale_q31.c **** 
 154:Source\BasicMathFunctions/arm_scale_q31.c ****       out3 = in3 >> -kShift;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccydtiQI.s 			page 5


 155:Source\BasicMathFunctions/arm_scale_q31.c ****       out4 = in4 >> -kShift;
 156:Source\BasicMathFunctions/arm_scale_q31.c **** 
 157:Source\BasicMathFunctions/arm_scale_q31.c ****       /* Store result destination */
 158:Source\BasicMathFunctions/arm_scale_q31.c ****       *pDst = out1;
 159:Source\BasicMathFunctions/arm_scale_q31.c ****       *(pDst + 1) = out2;
 160:Source\BasicMathFunctions/arm_scale_q31.c **** 
 161:Source\BasicMathFunctions/arm_scale_q31.c ****       *(pDst + 2) = out3;
 162:Source\BasicMathFunctions/arm_scale_q31.c ****       *(pDst + 3) = out4;
 163:Source\BasicMathFunctions/arm_scale_q31.c **** 
 164:Source\BasicMathFunctions/arm_scale_q31.c ****       /* Update pointers to process next sampels */
 165:Source\BasicMathFunctions/arm_scale_q31.c ****       pSrc += 4u;
 166:Source\BasicMathFunctions/arm_scale_q31.c ****       pDst += 4u;
 167:Source\BasicMathFunctions/arm_scale_q31.c **** 
 168:Source\BasicMathFunctions/arm_scale_q31.c ****       /* Decrement the loop counter */
 169:Source\BasicMathFunctions/arm_scale_q31.c ****       blkCnt--;
 170:Source\BasicMathFunctions/arm_scale_q31.c ****     }
 171:Source\BasicMathFunctions/arm_scale_q31.c ****   }
 172:Source\BasicMathFunctions/arm_scale_q31.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 173:Source\BasicMathFunctions/arm_scale_q31.c ****    ** No loop unrolling is used. */
 174:Source\BasicMathFunctions/arm_scale_q31.c ****   blkCnt = blockSize % 0x4u;
 175:Source\BasicMathFunctions/arm_scale_q31.c **** 
 176:Source\BasicMathFunctions/arm_scale_q31.c **** #else
 177:Source\BasicMathFunctions/arm_scale_q31.c **** 
 178:Source\BasicMathFunctions/arm_scale_q31.c ****   /* Run the below code for Cortex-M0 */
 179:Source\BasicMathFunctions/arm_scale_q31.c **** 
 180:Source\BasicMathFunctions/arm_scale_q31.c ****   /* Initialize blkCnt with number of samples */
 181:Source\BasicMathFunctions/arm_scale_q31.c ****   blkCnt = blockSize;
  75              		.loc 1 181 0
  76 0048 3B6E     		ldr	r3, [r7, #96]
  77 004a 7B64     		str	r3, [r7, #68]
 182:Source\BasicMathFunctions/arm_scale_q31.c **** 
 183:Source\BasicMathFunctions/arm_scale_q31.c **** #endif /* #if defined (ARM_MATH_DSP) */
 184:Source\BasicMathFunctions/arm_scale_q31.c **** 
 185:Source\BasicMathFunctions/arm_scale_q31.c ****   if (sign == 0)
  78              		.loc 1 185 0
  79 004c 1623     		mov	r3, #22
  80 004e 2822     		mov	r2, #40
  81 0050 9446     		mov	ip, r2
  82 0052 BC44     		add	ip, ip, r7
  83 0054 6344     		add	r3, r3, ip
  84 0056 1B78     		ldrb	r3, [r3]
  85 0058 5BB2     		sxtb	r3, r3
  86 005a 002B     		cmp	r3, #0
  87 005c 43D1     		bne	.L2
 186:Source\BasicMathFunctions/arm_scale_q31.c ****   {
 187:Source\BasicMathFunctions/arm_scale_q31.c **** 	  while (blkCnt > 0u)
  88              		.loc 1 187 0
  89 005e 3EE0     		b	.L3
  90              	.L5:
 188:Source\BasicMathFunctions/arm_scale_q31.c **** 	  {
 189:Source\BasicMathFunctions/arm_scale_q31.c **** 		/* C = A * scale */
 190:Source\BasicMathFunctions/arm_scale_q31.c **** 		/* Scale the input and then store the result in the destination buffer. */
 191:Source\BasicMathFunctions/arm_scale_q31.c **** 		in = *pSrc++;
  91              		.loc 1 191 0
  92 0060 7B6B     		ldr	r3, [r7, #52]
  93 0062 1A1D     		add	r2, r3, #4
  94 0064 7A63     		str	r2, [r7, #52]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccydtiQI.s 			page 6


  95 0066 1B68     		ldr	r3, [r3]
  96 0068 BB63     		str	r3, [r7, #56]
 192:Source\BasicMathFunctions/arm_scale_q31.c **** 		in = ((q63_t) in * scaleFract) >> 32;
  97              		.loc 1 192 0
  98 006a BB6B     		ldr	r3, [r7, #56]
  99 006c 3B62     		str	r3, [r7, #32]
 100 006e DB17     		asr	r3, r3, #31
 101 0070 7B62     		str	r3, [r7, #36]
 102 0072 3B6B     		ldr	r3, [r7, #48]
 103 0074 BB61     		str	r3, [r7, #24]
 104 0076 DB17     		asr	r3, r3, #31
 105 0078 FB61     		str	r3, [r7, #28]
 106 007a 386A     		ldr	r0, [r7, #32]
 107 007c 796A     		ldr	r1, [r7, #36]
 108 007e BA69     		ldr	r2, [r7, #24]
 109 0080 FB69     		ldr	r3, [r7, #28]
 110 0082 FFF7FEFF 		bl	__aeabi_lmul
 111 0086 031C     		mov	r3, r0
 112 0088 0C1C     		mov	r4, r1
 113 008a 2200     		asr	r2, r4, #0
 114 008c 3A61     		str	r2, [r7, #16]
 115 008e E317     		asr	r3, r4, #31
 116 0090 7B61     		str	r3, [r7, #20]
 117 0092 3B69     		ldr	r3, [r7, #16]
 118 0094 BB63     		str	r3, [r7, #56]
 193:Source\BasicMathFunctions/arm_scale_q31.c **** 
 194:Source\BasicMathFunctions/arm_scale_q31.c **** 		out = in << kShift;
 119              		.loc 1 194 0
 120 0096 1723     		mov	r3, #23
 121 0098 2822     		mov	r2, #40
 122 009a 9446     		mov	ip, r2
 123 009c BC44     		add	ip, ip, r7
 124 009e 6344     		add	r3, r3, ip
 125 00a0 1B78     		ldrb	r3, [r3]
 126 00a2 5BB2     		sxtb	r3, r3
 127 00a4 BA6B     		ldr	r2, [r7, #56]
 128 00a6 9A40     		lsl	r2, r2, r3
 129 00a8 131C     		mov	r3, r2
 130 00aa 3B64     		str	r3, [r7, #64]
 195:Source\BasicMathFunctions/arm_scale_q31.c **** 
 196:Source\BasicMathFunctions/arm_scale_q31.c **** 		if (in != (out >> kShift))
 131              		.loc 1 196 0
 132 00ac 1723     		mov	r3, #23
 133 00ae 2822     		mov	r2, #40
 134 00b0 9446     		mov	ip, r2
 135 00b2 BC44     		add	ip, ip, r7
 136 00b4 6344     		add	r3, r3, ip
 137 00b6 1B78     		ldrb	r3, [r3]
 138 00b8 5BB2     		sxtb	r3, r3
 139 00ba 3A6C     		ldr	r2, [r7, #64]
 140 00bc 1A41     		asr	r2, r2, r3
 141 00be BB6B     		ldr	r3, [r7, #56]
 142 00c0 9A42     		cmp	r2, r3
 143 00c2 04D0     		beq	.L4
 197:Source\BasicMathFunctions/arm_scale_q31.c **** 			out = 0x7FFFFFFF ^ (in >> 31);
 144              		.loc 1 197 0
 145 00c4 BB6B     		ldr	r3, [r7, #56]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccydtiQI.s 			page 7


 146 00c6 DB17     		asr	r3, r3, #31
 147 00c8 214A     		ldr	r2, .L9
 148 00ca 5340     		eor	r3, r2
 149 00cc 3B64     		str	r3, [r7, #64]
 150              	.L4:
 198:Source\BasicMathFunctions/arm_scale_q31.c **** 
 199:Source\BasicMathFunctions/arm_scale_q31.c **** 		*pDst++ = out;
 151              		.loc 1 199 0
 152 00ce BB6A     		ldr	r3, [r7, #40]
 153 00d0 1A1D     		add	r2, r3, #4
 154 00d2 BA62     		str	r2, [r7, #40]
 155 00d4 3A6C     		ldr	r2, [r7, #64]
 156 00d6 1A60     		str	r2, [r3]
 200:Source\BasicMathFunctions/arm_scale_q31.c **** 
 201:Source\BasicMathFunctions/arm_scale_q31.c **** 		/* Decrement the loop counter */
 202:Source\BasicMathFunctions/arm_scale_q31.c **** 		blkCnt--;
 157              		.loc 1 202 0
 158 00d8 7B6C     		ldr	r3, [r7, #68]
 159 00da 013B     		sub	r3, r3, #1
 160 00dc 7B64     		str	r3, [r7, #68]
 161              	.L3:
 187:Source\BasicMathFunctions/arm_scale_q31.c **** 	  {
 162              		.loc 1 187 0
 163 00de 7B6C     		ldr	r3, [r7, #68]
 164 00e0 002B     		cmp	r3, #0
 165 00e2 BDD1     		bne	.L5
 166 00e4 30E0     		b	.L1
 167              	.L2:
 203:Source\BasicMathFunctions/arm_scale_q31.c **** 	  }
 204:Source\BasicMathFunctions/arm_scale_q31.c ****   }
 205:Source\BasicMathFunctions/arm_scale_q31.c ****   else
 206:Source\BasicMathFunctions/arm_scale_q31.c ****   {
 207:Source\BasicMathFunctions/arm_scale_q31.c **** 	  while (blkCnt > 0u)
 168              		.loc 1 207 0
 169 00e6 2CE0     		b	.L7
 170              	.L8:
 208:Source\BasicMathFunctions/arm_scale_q31.c **** 	  {
 209:Source\BasicMathFunctions/arm_scale_q31.c **** 		/* C = A * scale */
 210:Source\BasicMathFunctions/arm_scale_q31.c **** 		/* Scale the input and then store the result in the destination buffer. */
 211:Source\BasicMathFunctions/arm_scale_q31.c **** 		in = *pSrc++;
 171              		.loc 1 211 0
 172 00e8 7B6B     		ldr	r3, [r7, #52]
 173 00ea 1A1D     		add	r2, r3, #4
 174 00ec 7A63     		str	r2, [r7, #52]
 175 00ee 1B68     		ldr	r3, [r3]
 176 00f0 BB63     		str	r3, [r7, #56]
 212:Source\BasicMathFunctions/arm_scale_q31.c **** 		in = ((q63_t) in * scaleFract) >> 32;
 177              		.loc 1 212 0
 178 00f2 BB6B     		ldr	r3, [r7, #56]
 179 00f4 BB60     		str	r3, [r7, #8]
 180 00f6 DB17     		asr	r3, r3, #31
 181 00f8 FB60     		str	r3, [r7, #12]
 182 00fa 3B6B     		ldr	r3, [r7, #48]
 183 00fc 3B60     		str	r3, [r7]
 184 00fe DB17     		asr	r3, r3, #31
 185 0100 7B60     		str	r3, [r7, #4]
 186 0102 B868     		ldr	r0, [r7, #8]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccydtiQI.s 			page 8


 187 0104 F968     		ldr	r1, [r7, #12]
 188 0106 3A68     		ldr	r2, [r7]
 189 0108 7B68     		ldr	r3, [r7, #4]
 190 010a FFF7FEFF 		bl	__aeabi_lmul
 191 010e 031C     		mov	r3, r0
 192 0110 0C1C     		mov	r4, r1
 193 0112 2500     		asr	r5, r4, #0
 194 0114 E617     		asr	r6, r4, #31
 195 0116 2B1C     		mov	r3, r5
 196 0118 BB63     		str	r3, [r7, #56]
 213:Source\BasicMathFunctions/arm_scale_q31.c **** 
 214:Source\BasicMathFunctions/arm_scale_q31.c **** 		out = in >> -kShift;
 197              		.loc 1 214 0
 198 011a 1723     		mov	r3, #23
 199 011c 2822     		mov	r2, #40
 200 011e 9446     		mov	ip, r2
 201 0120 BC44     		add	ip, ip, r7
 202 0122 6344     		add	r3, r3, ip
 203 0124 1B78     		ldrb	r3, [r3]
 204 0126 5BB2     		sxtb	r3, r3
 205 0128 5B42     		neg	r3, r3
 206 012a BA6B     		ldr	r2, [r7, #56]
 207 012c 1A41     		asr	r2, r2, r3
 208 012e 131C     		mov	r3, r2
 209 0130 3B64     		str	r3, [r7, #64]
 215:Source\BasicMathFunctions/arm_scale_q31.c **** 
 216:Source\BasicMathFunctions/arm_scale_q31.c **** 		*pDst++ = out;
 210              		.loc 1 216 0
 211 0132 BB6A     		ldr	r3, [r7, #40]
 212 0134 1A1D     		add	r2, r3, #4
 213 0136 BA62     		str	r2, [r7, #40]
 214 0138 3A6C     		ldr	r2, [r7, #64]
 215 013a 1A60     		str	r2, [r3]
 217:Source\BasicMathFunctions/arm_scale_q31.c **** 
 218:Source\BasicMathFunctions/arm_scale_q31.c **** 		/* Decrement the loop counter */
 219:Source\BasicMathFunctions/arm_scale_q31.c **** 		blkCnt--;
 216              		.loc 1 219 0
 217 013c 7B6C     		ldr	r3, [r7, #68]
 218 013e 013B     		sub	r3, r3, #1
 219 0140 7B64     		str	r3, [r7, #68]
 220              	.L7:
 207:Source\BasicMathFunctions/arm_scale_q31.c **** 	  {
 221              		.loc 1 207 0
 222 0142 7B6C     		ldr	r3, [r7, #68]
 223 0144 002B     		cmp	r3, #0
 224 0146 CFD1     		bne	.L8
 225              	.L1:
 220:Source\BasicMathFunctions/arm_scale_q31.c **** 	  }
 221:Source\BasicMathFunctions/arm_scale_q31.c **** 
 222:Source\BasicMathFunctions/arm_scale_q31.c ****   }
 223:Source\BasicMathFunctions/arm_scale_q31.c **** }
 226              		.loc 1 223 0
 227 0148 BD46     		mov	sp, r7
 228 014a 13B0     		add	sp, sp, #76
 229              		@ sp needed
 230 014c F0BD     		pop	{r4, r5, r6, r7, pc}
 231              	.L10:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccydtiQI.s 			page 9


 232 014e C046     		.align	2
 233              	.L9:
 234 0150 FFFFFF7F 		.word	2147483647
 235              		.cfi_endproc
 236              	.LFE82:
 237              		.size	arm_scale_q31, .-arm_scale_q31
 238              		.text
 239              	.Letext0:
 240              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 241              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 242              		.file 4 ".\\Include/arm_math.h"
 243              		.section	.debug_info,"",%progbits
 244              	.Ldebug_info0:
 245 0000 9E010000 		.4byte	0x19e
 246 0004 0400     		.2byte	0x4
 247 0006 00000000 		.4byte	.Ldebug_abbrev0
 248 000a 04       		.byte	0x4
 249 000b 01       		.uleb128 0x1
 250 000c 34010000 		.4byte	.LASF32
 251 0010 01       		.byte	0x1
 252 0011 6C000000 		.4byte	.LASF33
 253 0015 26000000 		.4byte	.LASF34
 254 0019 00000000 		.4byte	.Ldebug_ranges0+0
 255 001d 00000000 		.4byte	0
 256 0021 00000000 		.4byte	.Ldebug_line0
 257 0025 02       		.uleb128 0x2
 258 0026 08000000 		.4byte	.LASF4
 259 002a 02       		.byte	0x2
 260 002b 1B       		.byte	0x1b
 261 002c 30000000 		.4byte	0x30
 262 0030 03       		.uleb128 0x3
 263 0031 01       		.byte	0x1
 264 0032 06       		.byte	0x6
 265 0033 36020000 		.4byte	.LASF0
 266 0037 03       		.uleb128 0x3
 267 0038 01       		.byte	0x1
 268 0039 08       		.byte	0x8
 269 003a A9000000 		.4byte	.LASF1
 270 003e 03       		.uleb128 0x3
 271 003f 02       		.byte	0x2
 272 0040 05       		.byte	0x5
 273 0041 08020000 		.4byte	.LASF2
 274 0045 03       		.uleb128 0x3
 275 0046 02       		.byte	0x2
 276 0047 07       		.byte	0x7
 277 0048 D0000000 		.4byte	.LASF3
 278 004c 02       		.uleb128 0x2
 279 004d 1C000000 		.4byte	.LASF5
 280 0051 02       		.byte	0x2
 281 0052 3F       		.byte	0x3f
 282 0053 57000000 		.4byte	0x57
 283 0057 03       		.uleb128 0x3
 284 0058 04       		.byte	0x4
 285 0059 05       		.byte	0x5
 286 005a 21020000 		.4byte	.LASF6
 287 005e 02       		.uleb128 0x2
 288 005f 05010000 		.4byte	.LASF7
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccydtiQI.s 			page 10


 289 0063 02       		.byte	0x2
 290 0064 41       		.byte	0x41
 291 0065 69000000 		.4byte	0x69
 292 0069 03       		.uleb128 0x3
 293 006a 04       		.byte	0x4
 294 006b 07       		.byte	0x7
 295 006c BE000000 		.4byte	.LASF8
 296 0070 02       		.uleb128 0x2
 297 0071 ED000000 		.4byte	.LASF9
 298 0075 02       		.byte	0x2
 299 0076 59       		.byte	0x59
 300 0077 7B000000 		.4byte	0x7b
 301 007b 03       		.uleb128 0x3
 302 007c 08       		.byte	0x8
 303 007d 05       		.byte	0x5
 304 007e DD010000 		.4byte	.LASF10
 305 0082 03       		.uleb128 0x3
 306 0083 08       		.byte	0x8
 307 0084 07       		.byte	0x7
 308 0085 1D010000 		.4byte	.LASF11
 309 0089 04       		.uleb128 0x4
 310 008a 04       		.byte	0x4
 311 008b 05       		.byte	0x5
 312 008c 696E7400 		.ascii	"int\000"
 313 0090 03       		.uleb128 0x3
 314 0091 04       		.byte	0x4
 315 0092 07       		.byte	0x7
 316 0093 10010000 		.4byte	.LASF12
 317 0097 02       		.uleb128 0x2
 318 0098 96000000 		.4byte	.LASF13
 319 009c 03       		.byte	0x3
 320 009d 14       		.byte	0x14
 321 009e 25000000 		.4byte	0x25
 322 00a2 02       		.uleb128 0x2
 323 00a3 CC010000 		.4byte	.LASF14
 324 00a7 03       		.byte	0x3
 325 00a8 2C       		.byte	0x2c
 326 00a9 4C000000 		.4byte	0x4c
 327 00ad 02       		.uleb128 0x2
 328 00ae 18020000 		.4byte	.LASF15
 329 00b2 03       		.byte	0x3
 330 00b3 2D       		.byte	0x2d
 331 00b4 5E000000 		.4byte	0x5e
 332 00b8 02       		.uleb128 0x2
 333 00b9 00000000 		.4byte	.LASF16
 334 00bd 03       		.byte	0x3
 335 00be 38       		.byte	0x38
 336 00bf 70000000 		.4byte	0x70
 337 00c3 03       		.uleb128 0x3
 338 00c4 04       		.byte	0x4
 339 00c5 07       		.byte	0x7
 340 00c6 D4010000 		.4byte	.LASF17
 341 00ca 03       		.uleb128 0x3
 342 00cb 01       		.byte	0x1
 343 00cc 08       		.byte	0x8
 344 00cd F5010000 		.4byte	.LASF18
 345 00d1 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccydtiQI.s 			page 11


 346 00d2 08       		.byte	0x8
 347 00d3 04       		.byte	0x4
 348 00d4 F7000000 		.4byte	.LASF19
 349 00d8 03       		.uleb128 0x3
 350 00d9 04       		.byte	0x4
 351 00da 04       		.byte	0x4
 352 00db 9D000000 		.4byte	.LASF20
 353 00df 03       		.uleb128 0x3
 354 00e0 08       		.byte	0x8
 355 00e1 04       		.byte	0x4
 356 00e2 2A020000 		.4byte	.LASF21
 357 00e6 05       		.uleb128 0x5
 358 00e7 A3000000 		.4byte	.LASF22
 359 00eb 04       		.byte	0x4
 360 00ec 9B01     		.2byte	0x19b
 361 00ee A2000000 		.4byte	0xa2
 362 00f2 05       		.uleb128 0x5
 363 00f3 C6010000 		.4byte	.LASF23
 364 00f7 04       		.byte	0x4
 365 00f8 A001     		.2byte	0x1a0
 366 00fa B8000000 		.4byte	0xb8
 367 00fe 06       		.uleb128 0x6
 368 00ff 04       		.byte	0x4
 369 0100 E6000000 		.4byte	0xe6
 370 0104 07       		.uleb128 0x7
 371 0105 FA010000 		.4byte	.LASF35
 372 0109 01       		.byte	0x1
 373 010a 37       		.byte	0x37
 374 010b 00000000 		.4byte	.LFB82
 375 010f 54010000 		.4byte	.LFE82-.LFB82
 376 0113 01       		.uleb128 0x1
 377 0114 9C       		.byte	0x9c
 378 0115 08       		.uleb128 0x8
 379 0116 42020000 		.4byte	.LASF24
 380 011a 01       		.byte	0x1
 381 011b 38       		.byte	0x38
 382 011c FE000000 		.4byte	0xfe
 383 0120 02       		.uleb128 0x2
 384 0121 91       		.byte	0x91
 385 0122 54       		.sleb128 -44
 386 0123 08       		.uleb128 0x8
 387 0124 11000000 		.4byte	.LASF25
 388 0128 01       		.byte	0x1
 389 0129 39       		.byte	0x39
 390 012a E6000000 		.4byte	0xe6
 391 012e 02       		.uleb128 0x2
 392 012f 91       		.byte	0x91
 393 0130 50       		.sleb128 -48
 394 0131 08       		.uleb128 0x8
 395 0132 12020000 		.4byte	.LASF26
 396 0136 01       		.byte	0x1
 397 0137 3A       		.byte	0x3a
 398 0138 97000000 		.4byte	0x97
 399 013c 02       		.uleb128 0x2
 400 013d 91       		.byte	0x91
 401 013e 4F       		.sleb128 -49
 402 013f 08       		.uleb128 0x8
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccydtiQI.s 			page 12


 403 0140 E3000000 		.4byte	.LASF27
 404 0144 01       		.byte	0x1
 405 0145 3B       		.byte	0x3b
 406 0146 FE000000 		.4byte	0xfe
 407 014a 02       		.uleb128 0x2
 408 014b 91       		.byte	0x91
 409 014c 48       		.sleb128 -56
 410 014d 08       		.uleb128 0x8
 411 014e EB010000 		.4byte	.LASF28
 412 0152 01       		.byte	0x1
 413 0153 3C       		.byte	0x3c
 414 0154 AD000000 		.4byte	0xad
 415 0158 02       		.uleb128 0x2
 416 0159 91       		.byte	0x91
 417 015a 00       		.sleb128 0
 418 015b 09       		.uleb128 0x9
 419 015c FE000000 		.4byte	.LASF29
 420 0160 01       		.byte	0x1
 421 0161 3E       		.byte	0x3e
 422 0162 97000000 		.4byte	0x97
 423 0166 02       		.uleb128 0x2
 424 0167 91       		.byte	0x91
 425 0168 5F       		.sleb128 -33
 426 0169 09       		.uleb128 0x9
 427 016a E8000000 		.4byte	.LASF30
 428 016e 01       		.byte	0x1
 429 016f 3F       		.byte	0x3f
 430 0170 97000000 		.4byte	0x97
 431 0174 02       		.uleb128 0x2
 432 0175 91       		.byte	0x91
 433 0176 5E       		.sleb128 -34
 434 0177 09       		.uleb128 0x9
 435 0178 B7000000 		.4byte	.LASF31
 436 017c 01       		.byte	0x1
 437 017d 40       		.byte	0x40
 438 017e AD000000 		.4byte	0xad
 439 0182 02       		.uleb128 0x2
 440 0183 91       		.byte	0x91
 441 0184 64       		.sleb128 -28
 442 0185 0A       		.uleb128 0xa
 443 0186 696E00   		.ascii	"in\000"
 444 0189 01       		.byte	0x1
 445 018a 41       		.byte	0x41
 446 018b E6000000 		.4byte	0xe6
 447 018f 02       		.uleb128 0x2
 448 0190 91       		.byte	0x91
 449 0191 58       		.sleb128 -40
 450 0192 0A       		.uleb128 0xa
 451 0193 6F757400 		.ascii	"out\000"
 452 0197 01       		.byte	0x1
 453 0198 41       		.byte	0x41
 454 0199 E6000000 		.4byte	0xe6
 455 019d 02       		.uleb128 0x2
 456 019e 91       		.byte	0x91
 457 019f 60       		.sleb128 -32
 458 01a0 00       		.byte	0
 459 01a1 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccydtiQI.s 			page 13


 460              		.section	.debug_abbrev,"",%progbits
 461              	.Ldebug_abbrev0:
 462 0000 01       		.uleb128 0x1
 463 0001 11       		.uleb128 0x11
 464 0002 01       		.byte	0x1
 465 0003 25       		.uleb128 0x25
 466 0004 0E       		.uleb128 0xe
 467 0005 13       		.uleb128 0x13
 468 0006 0B       		.uleb128 0xb
 469 0007 03       		.uleb128 0x3
 470 0008 0E       		.uleb128 0xe
 471 0009 1B       		.uleb128 0x1b
 472 000a 0E       		.uleb128 0xe
 473 000b 55       		.uleb128 0x55
 474 000c 17       		.uleb128 0x17
 475 000d 11       		.uleb128 0x11
 476 000e 01       		.uleb128 0x1
 477 000f 10       		.uleb128 0x10
 478 0010 17       		.uleb128 0x17
 479 0011 00       		.byte	0
 480 0012 00       		.byte	0
 481 0013 02       		.uleb128 0x2
 482 0014 16       		.uleb128 0x16
 483 0015 00       		.byte	0
 484 0016 03       		.uleb128 0x3
 485 0017 0E       		.uleb128 0xe
 486 0018 3A       		.uleb128 0x3a
 487 0019 0B       		.uleb128 0xb
 488 001a 3B       		.uleb128 0x3b
 489 001b 0B       		.uleb128 0xb
 490 001c 49       		.uleb128 0x49
 491 001d 13       		.uleb128 0x13
 492 001e 00       		.byte	0
 493 001f 00       		.byte	0
 494 0020 03       		.uleb128 0x3
 495 0021 24       		.uleb128 0x24
 496 0022 00       		.byte	0
 497 0023 0B       		.uleb128 0xb
 498 0024 0B       		.uleb128 0xb
 499 0025 3E       		.uleb128 0x3e
 500 0026 0B       		.uleb128 0xb
 501 0027 03       		.uleb128 0x3
 502 0028 0E       		.uleb128 0xe
 503 0029 00       		.byte	0
 504 002a 00       		.byte	0
 505 002b 04       		.uleb128 0x4
 506 002c 24       		.uleb128 0x24
 507 002d 00       		.byte	0
 508 002e 0B       		.uleb128 0xb
 509 002f 0B       		.uleb128 0xb
 510 0030 3E       		.uleb128 0x3e
 511 0031 0B       		.uleb128 0xb
 512 0032 03       		.uleb128 0x3
 513 0033 08       		.uleb128 0x8
 514 0034 00       		.byte	0
 515 0035 00       		.byte	0
 516 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccydtiQI.s 			page 14


 517 0037 16       		.uleb128 0x16
 518 0038 00       		.byte	0
 519 0039 03       		.uleb128 0x3
 520 003a 0E       		.uleb128 0xe
 521 003b 3A       		.uleb128 0x3a
 522 003c 0B       		.uleb128 0xb
 523 003d 3B       		.uleb128 0x3b
 524 003e 05       		.uleb128 0x5
 525 003f 49       		.uleb128 0x49
 526 0040 13       		.uleb128 0x13
 527 0041 00       		.byte	0
 528 0042 00       		.byte	0
 529 0043 06       		.uleb128 0x6
 530 0044 0F       		.uleb128 0xf
 531 0045 00       		.byte	0
 532 0046 0B       		.uleb128 0xb
 533 0047 0B       		.uleb128 0xb
 534 0048 49       		.uleb128 0x49
 535 0049 13       		.uleb128 0x13
 536 004a 00       		.byte	0
 537 004b 00       		.byte	0
 538 004c 07       		.uleb128 0x7
 539 004d 2E       		.uleb128 0x2e
 540 004e 01       		.byte	0x1
 541 004f 3F       		.uleb128 0x3f
 542 0050 19       		.uleb128 0x19
 543 0051 03       		.uleb128 0x3
 544 0052 0E       		.uleb128 0xe
 545 0053 3A       		.uleb128 0x3a
 546 0054 0B       		.uleb128 0xb
 547 0055 3B       		.uleb128 0x3b
 548 0056 0B       		.uleb128 0xb
 549 0057 27       		.uleb128 0x27
 550 0058 19       		.uleb128 0x19
 551 0059 11       		.uleb128 0x11
 552 005a 01       		.uleb128 0x1
 553 005b 12       		.uleb128 0x12
 554 005c 06       		.uleb128 0x6
 555 005d 40       		.uleb128 0x40
 556 005e 18       		.uleb128 0x18
 557 005f 9642     		.uleb128 0x2116
 558 0061 19       		.uleb128 0x19
 559 0062 00       		.byte	0
 560 0063 00       		.byte	0
 561 0064 08       		.uleb128 0x8
 562 0065 05       		.uleb128 0x5
 563 0066 00       		.byte	0
 564 0067 03       		.uleb128 0x3
 565 0068 0E       		.uleb128 0xe
 566 0069 3A       		.uleb128 0x3a
 567 006a 0B       		.uleb128 0xb
 568 006b 3B       		.uleb128 0x3b
 569 006c 0B       		.uleb128 0xb
 570 006d 49       		.uleb128 0x49
 571 006e 13       		.uleb128 0x13
 572 006f 02       		.uleb128 0x2
 573 0070 18       		.uleb128 0x18
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccydtiQI.s 			page 15


 574 0071 00       		.byte	0
 575 0072 00       		.byte	0
 576 0073 09       		.uleb128 0x9
 577 0074 34       		.uleb128 0x34
 578 0075 00       		.byte	0
 579 0076 03       		.uleb128 0x3
 580 0077 0E       		.uleb128 0xe
 581 0078 3A       		.uleb128 0x3a
 582 0079 0B       		.uleb128 0xb
 583 007a 3B       		.uleb128 0x3b
 584 007b 0B       		.uleb128 0xb
 585 007c 49       		.uleb128 0x49
 586 007d 13       		.uleb128 0x13
 587 007e 02       		.uleb128 0x2
 588 007f 18       		.uleb128 0x18
 589 0080 00       		.byte	0
 590 0081 00       		.byte	0
 591 0082 0A       		.uleb128 0xa
 592 0083 34       		.uleb128 0x34
 593 0084 00       		.byte	0
 594 0085 03       		.uleb128 0x3
 595 0086 08       		.uleb128 0x8
 596 0087 3A       		.uleb128 0x3a
 597 0088 0B       		.uleb128 0xb
 598 0089 3B       		.uleb128 0x3b
 599 008a 0B       		.uleb128 0xb
 600 008b 49       		.uleb128 0x49
 601 008c 13       		.uleb128 0x13
 602 008d 02       		.uleb128 0x2
 603 008e 18       		.uleb128 0x18
 604 008f 00       		.byte	0
 605 0090 00       		.byte	0
 606 0091 00       		.byte	0
 607              		.section	.debug_aranges,"",%progbits
 608 0000 1C000000 		.4byte	0x1c
 609 0004 0200     		.2byte	0x2
 610 0006 00000000 		.4byte	.Ldebug_info0
 611 000a 04       		.byte	0x4
 612 000b 00       		.byte	0
 613 000c 0000     		.2byte	0
 614 000e 0000     		.2byte	0
 615 0010 00000000 		.4byte	.LFB82
 616 0014 54010000 		.4byte	.LFE82-.LFB82
 617 0018 00000000 		.4byte	0
 618 001c 00000000 		.4byte	0
 619              		.section	.debug_ranges,"",%progbits
 620              	.Ldebug_ranges0:
 621 0000 00000000 		.4byte	.LFB82
 622 0004 54010000 		.4byte	.LFE82
 623 0008 00000000 		.4byte	0
 624 000c 00000000 		.4byte	0
 625              		.section	.debug_line,"",%progbits
 626              	.Ldebug_line0:
 627 0000 87010000 		.section	.debug_str,"MS",%progbits,1
 627      02005001 
 627      00000201 
 627      FB0E0D00 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccydtiQI.s 			page 16


 627      01010101 
 628              	.LASF16:
 629 0000 696E7436 		.ascii	"int64_t\000"
 629      345F7400 
 630              	.LASF4:
 631 0008 5F5F696E 		.ascii	"__int8_t\000"
 631      74385F74 
 631      00
 632              	.LASF25:
 633 0011 7363616C 		.ascii	"scaleFract\000"
 633      65467261 
 633      637400
 634              	.LASF5:
 635 001c 5F5F696E 		.ascii	"__int32_t\000"
 635      7433325F 
 635      7400
 636              	.LASF34:
 637 0026 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 637      73657273 
 637      5C666E65 
 637      7665735C 
 637      446F6375 
 638 0053 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 638      655F7370 
 638      6565645F 
 638      73656E73 
 638      6F722E63 
 639              	.LASF33:
 640 006c 536F7572 		.ascii	"Source\\BasicMathFunctions\\arm_scale_q31.c\000"
 640      63655C42 
 640      61736963 
 640      4D617468 
 640      46756E63 
 641              	.LASF13:
 642 0096 696E7438 		.ascii	"int8_t\000"
 642      5F7400
 643              	.LASF20:
 644 009d 666C6F61 		.ascii	"float\000"
 644      7400
 645              	.LASF22:
 646 00a3 7133315F 		.ascii	"q31_t\000"
 646      7400
 647              	.LASF1:
 648 00a9 756E7369 		.ascii	"unsigned char\000"
 648      676E6564 
 648      20636861 
 648      7200
 649              	.LASF31:
 650 00b7 626C6B43 		.ascii	"blkCnt\000"
 650      6E7400
 651              	.LASF8:
 652 00be 6C6F6E67 		.ascii	"long unsigned int\000"
 652      20756E73 
 652      69676E65 
 652      6420696E 
 652      7400
 653              	.LASF3:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccydtiQI.s 			page 17


 654 00d0 73686F72 		.ascii	"short unsigned int\000"
 654      7420756E 
 654      7369676E 
 654      65642069 
 654      6E7400
 655              	.LASF27:
 656 00e3 70447374 		.ascii	"pDst\000"
 656      00
 657              	.LASF30:
 658 00e8 7369676E 		.ascii	"sign\000"
 658      00
 659              	.LASF9:
 660 00ed 5F5F696E 		.ascii	"__int64_t\000"
 660      7436345F 
 660      7400
 661              	.LASF19:
 662 00f7 646F7562 		.ascii	"double\000"
 662      6C6500
 663              	.LASF29:
 664 00fe 6B536869 		.ascii	"kShift\000"
 664      667400
 665              	.LASF7:
 666 0105 5F5F7569 		.ascii	"__uint32_t\000"
 666      6E743332 
 666      5F7400
 667              	.LASF12:
 668 0110 756E7369 		.ascii	"unsigned int\000"
 668      676E6564 
 668      20696E74 
 668      00
 669              	.LASF11:
 670 011d 6C6F6E67 		.ascii	"long long unsigned int\000"
 670      206C6F6E 
 670      6720756E 
 670      7369676E 
 670      65642069 
 671              	.LASF32:
 672 0134 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 672      4320342E 
 672      392E3320 
 672      32303135 
 672      30333033 
 673 0167 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 673      20726576 
 673      6973696F 
 673      6E203232 
 673      31323230 
 674 019a 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 674      30202D66 
 674      66756E63 
 674      74696F6E 
 674      2D736563 
 675              	.LASF23:
 676 01c6 7136335F 		.ascii	"q63_t\000"
 676      7400
 677              	.LASF14:
 678 01cc 696E7433 		.ascii	"int32_t\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccydtiQI.s 			page 18


 678      325F7400 
 679              	.LASF17:
 680 01d4 73697A65 		.ascii	"sizetype\000"
 680      74797065 
 680      00
 681              	.LASF10:
 682 01dd 6C6F6E67 		.ascii	"long long int\000"
 682      206C6F6E 
 682      6720696E 
 682      7400
 683              	.LASF28:
 684 01eb 626C6F63 		.ascii	"blockSize\000"
 684      6B53697A 
 684      6500
 685              	.LASF18:
 686 01f5 63686172 		.ascii	"char\000"
 686      00
 687              	.LASF35:
 688 01fa 61726D5F 		.ascii	"arm_scale_q31\000"
 688      7363616C 
 688      655F7133 
 688      3100
 689              	.LASF2:
 690 0208 73686F72 		.ascii	"short int\000"
 690      7420696E 
 690      7400
 691              	.LASF26:
 692 0212 73686966 		.ascii	"shift\000"
 692      7400
 693              	.LASF15:
 694 0218 75696E74 		.ascii	"uint32_t\000"
 694      33325F74 
 694      00
 695              	.LASF6:
 696 0221 6C6F6E67 		.ascii	"long int\000"
 696      20696E74 
 696      00
 697              	.LASF21:
 698 022a 6C6F6E67 		.ascii	"long double\000"
 698      20646F75 
 698      626C6500 
 699              	.LASF0:
 700 0236 7369676E 		.ascii	"signed char\000"
 700      65642063 
 700      68617200 
 701              	.LASF24:
 702 0242 70537263 		.ascii	"pSrc\000"
 702      00
 703              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
