ARM GAS  C:\Users\fneves\AppData\Local\Temp\cccevkEm.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_cmplx_conj_f32.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.arm_cmplx_conj_f32,"ax",%progbits
  18              		.align	2
  19              		.global	arm_cmplx_conj_f32
  20              		.code	16
  21              		.thumb_func
  22              		.type	arm_cmplx_conj_f32, %function
  23              	arm_cmplx_conj_f32:
  24              	.LFB82:
  25              		.file 1 "Source\\ComplexMathFunctions\\arm_cmplx_conj_f32.c"
   1:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** /* ----------------------------------------------------------------------
   2:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Project:      CMSIS DSP Library
   3:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Title:        arm_cmplx_conj_f32.c
   4:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Description:  Floating-point complex conjugate
   5:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
   6:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * $Date:        27. January 2017
   7:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * $Revision:    V.1.5.1
   8:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
   9:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Target Processor: Cortex-M cores
  10:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * -------------------------------------------------------------------- */
  11:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** /*
  12:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  14:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  16:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * not use this file except in compliance with the License.
  18:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * You may obtain a copy of the License at
  19:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  20:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  22:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * See the License for the specific language governing permissions and
  26:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * limitations under the License.
  27:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  28:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  29:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** #include "arm_math.h"
  30:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  31:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**
  32:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @ingroup groupCmplxMath
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cccevkEm.s 			page 2


  33:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  34:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  35:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**
  36:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @defgroup cmplx_conj Complex Conjugate
  37:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  38:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Conjugates the elements of a complex data vector.
  39:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  40:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * The <code>pSrc</code> points to the source data and
  41:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * <code>pDst</code> points to the where the result should be written.
  42:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * <code>numSamples</code> specifies the number of complex samples
  43:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * and the data in each array is stored in an interleaved fashion
  44:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * (real, imag, real, imag, ...).
  45:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Each array has a total of <code>2*numSamples</code> values.
  46:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * The underlying algorithm is used:
  47:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  48:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * <pre>
  49:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * for(n=0; n<numSamples; n++) {
  50:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *     pDst[(2*n)+0)] = pSrc[(2*n)+0];     // real part
  51:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *     pDst[(2*n)+1)] = -pSrc[(2*n)+1];    // imag part
  52:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * }
  53:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * </pre>
  54:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  55:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * There are separate functions for floating-point, Q15, and Q31 data types.
  56:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  57:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  58:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**
  59:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @addtogroup cmplx_conj
  60:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @{
  61:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  62:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  63:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**
  64:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @brief  Floating-point complex conjugate.
  65:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @param  *pSrc points to the input vector
  66:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @param  *pDst points to the output vector
  67:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @param  numSamples number of complex samples in each vector
  68:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @return none.
  69:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  70:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  71:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** void arm_cmplx_conj_f32(
  72:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t * pSrc,
  73:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t * pDst,
  74:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   uint32_t numSamples)
  75:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** {
  26              		.loc 1 75 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 86B0     		sub	sp, sp, #24
  33              		.cfi_def_cfa_offset 32
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  36 0006 F860     		str	r0, [r7, #12]
  37 0008 B960     		str	r1, [r7, #8]
  38 000a 7A60     		str	r2, [r7, #4]
  76:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   uint32_t blkCnt;                               /* loop counter */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cccevkEm.s 			page 3


  77:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  78:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** #if defined (ARM_MATH_DSP)
  79:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  80:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  81:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t inR1, inR2, inR3, inR4;
  82:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t inI1, inI2, inI3, inI4;
  83:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  84:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /*loop Unrolling */
  85:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   blkCnt = numSamples >> 2u;
  86:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  87:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  88:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  89:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   while (blkCnt > 0u)
  90:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
  91:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* C[0]+jC[1] = A[0]+ j (-1) A[1] */
  92:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Calculate Complex Conjugate and then store the results in the destination buffer. */
  93:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read real input samples */
  94:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR1 = pSrc[0];
  95:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store real samples to destination */
  96:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[0] = inR1;
  97:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR2 = pSrc[2];
  98:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[2] = inR2;
  99:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR3 = pSrc[4];
 100:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[4] = inR3;
 101:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR4 = pSrc[6];
 102:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[6] = inR4;
 103:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 104:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read imaginary input samples */
 105:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI1 = pSrc[1];
 106:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI2 = pSrc[3];
 107:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 108:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 109:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI1 = -inI1;
 110:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 111:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read imaginary input samples */
 112:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI3 = pSrc[5];
 113:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 114:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 115:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI2 = -inI2;
 116:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 117:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read imaginary input samples */
 118:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI4 = pSrc[7];
 119:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 120:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 121:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI3 = -inI3;
 122:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 123:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store imaginary samples to destination */
 124:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[1] = inI1;
 125:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[3] = inI2;
 126:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 127:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 128:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI4 = -inI4;
 129:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 130:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store imaginary samples to destination */
 131:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[5] = inI3;
 132:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 133:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* increment source pointer by 8 to process next sampels */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cccevkEm.s 			page 4


 134:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pSrc += 8u;
 135:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 136:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store imaginary sample to destination */
 137:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[7] = inI4;
 138:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 139:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* increment destination pointer by 8 to store next samples */
 140:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst += 8u;
 141:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 142:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Decrement the loop counter */
 143:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     blkCnt--;
 144:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   }
 145:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 146:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* If the numSamples is not a multiple of 4, compute any remaining output samples here.
 147:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****    ** No loop unrolling is used. */
 148:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   blkCnt = numSamples % 0x4u;
 149:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 150:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** #else
 151:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 152:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* Run the below code for Cortex-M0 */
 153:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   blkCnt = numSamples;
  39              		.loc 1 153 0
  40 000c 7B68     		ldr	r3, [r7, #4]
  41 000e 7B61     		str	r3, [r7, #20]
 154:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 155:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 156:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 157:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   while (blkCnt > 0u)
  42              		.loc 1 157 0
  43 0010 15E0     		b	.L2
  44              	.L3:
 158:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
 159:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* realOut + j (imagOut) = realIn + j (-1) imagIn */
 160:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Calculate Complex Conjugate and then store the results in the destination buffer. */
 161:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     *pDst++ = *pSrc++;
  45              		.loc 1 161 0
  46 0012 BB68     		ldr	r3, [r7, #8]
  47 0014 1A1D     		add	r2, r3, #4
  48 0016 BA60     		str	r2, [r7, #8]
  49 0018 FA68     		ldr	r2, [r7, #12]
  50 001a 111D     		add	r1, r2, #4
  51 001c F960     		str	r1, [r7, #12]
  52 001e 1268     		ldr	r2, [r2]
  53 0020 1A60     		str	r2, [r3]
 162:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     *pDst++ = -*pSrc++;
  54              		.loc 1 162 0
  55 0022 BB68     		ldr	r3, [r7, #8]
  56 0024 1A1D     		add	r2, r3, #4
  57 0026 BA60     		str	r2, [r7, #8]
  58 0028 FA68     		ldr	r2, [r7, #12]
  59 002a 111D     		add	r1, r2, #4
  60 002c F960     		str	r1, [r7, #12]
  61 002e 1268     		ldr	r2, [r2]
  62 0030 8021     		mov	r1, #128
  63 0032 0906     		lsl	r1, r1, #24
  64 0034 4A40     		eor	r2, r1
  65 0036 1A60     		str	r2, [r3]
 163:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cccevkEm.s 			page 5


 164:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Decrement the loop counter */
 165:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****     blkCnt--;
  66              		.loc 1 165 0
  67 0038 7B69     		ldr	r3, [r7, #20]
  68 003a 013B     		sub	r3, r3, #1
  69 003c 7B61     		str	r3, [r7, #20]
  70              	.L2:
 157:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
  71              		.loc 1 157 0
  72 003e 7B69     		ldr	r3, [r7, #20]
  73 0040 002B     		cmp	r3, #0
  74 0042 E6D1     		bne	.L3
 166:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c ****   }
 167:Source\ComplexMathFunctions/arm_cmplx_conj_f32.c **** }
  75              		.loc 1 167 0
  76 0044 BD46     		mov	sp, r7
  77 0046 06B0     		add	sp, sp, #24
  78              		@ sp needed
  79 0048 80BD     		pop	{r7, pc}
  80              		.cfi_endproc
  81              	.LFE82:
  82              		.size	arm_cmplx_conj_f32, .-arm_cmplx_conj_f32
  83 004a C046     		.text
  84              	.Letext0:
  85              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
  86              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
  87              		.file 4 ".\\Include/arm_math.h"
  88              		.section	.debug_info,"",%progbits
  89              	.Ldebug_info0:
  90 0000 FD000000 		.4byte	0xfd
  91 0004 0400     		.2byte	0x4
  92 0006 00000000 		.4byte	.Ldebug_abbrev0
  93 000a 04       		.byte	0x4
  94 000b 01       		.uleb128 0x1
  95 000c 6F010000 		.4byte	.LASF20
  96 0010 01       		.byte	0x1
  97 0011 5A000000 		.4byte	.LASF21
  98 0015 F9000000 		.4byte	.LASF22
  99 0019 00000000 		.4byte	.Ldebug_ranges0+0
 100 001d 00000000 		.4byte	0
 101 0021 00000000 		.4byte	.Ldebug_line0
 102 0025 02       		.uleb128 0x2
 103 0026 01       		.byte	0x1
 104 0027 06       		.byte	0x6
 105 0028 D6000000 		.4byte	.LASF0
 106 002c 02       		.uleb128 0x2
 107 002d 01       		.byte	0x1
 108 002e 08       		.byte	0x8
 109 002f 8B000000 		.4byte	.LASF1
 110 0033 02       		.uleb128 0x2
 111 0034 02       		.byte	0x2
 112 0035 05       		.byte	0x5
 113 0036 52010000 		.4byte	.LASF2
 114 003a 02       		.uleb128 0x2
 115 003b 02       		.byte	0x2
 116 003c 07       		.byte	0x7
 117 003d C3000000 		.4byte	.LASF3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cccevkEm.s 			page 6


 118 0041 02       		.uleb128 0x2
 119 0042 04       		.byte	0x4
 120 0043 05       		.byte	0x5
 121 0044 A7000000 		.4byte	.LASF4
 122 0048 03       		.uleb128 0x3
 123 0049 20000000 		.4byte	.LASF9
 124 004d 02       		.byte	0x2
 125 004e 41       		.byte	0x41
 126 004f 53000000 		.4byte	0x53
 127 0053 02       		.uleb128 0x2
 128 0054 04       		.byte	0x4
 129 0055 07       		.byte	0x7
 130 0056 2B000000 		.4byte	.LASF5
 131 005a 02       		.uleb128 0x2
 132 005b 08       		.byte	0x8
 133 005c 05       		.byte	0x5
 134 005d 00000000 		.4byte	.LASF6
 135 0061 02       		.uleb128 0x2
 136 0062 08       		.byte	0x8
 137 0063 07       		.byte	0x7
 138 0064 3D000000 		.4byte	.LASF7
 139 0068 04       		.uleb128 0x4
 140 0069 04       		.byte	0x4
 141 006a 05       		.byte	0x5
 142 006b 696E7400 		.ascii	"int\000"
 143 006f 02       		.uleb128 0x2
 144 0070 04       		.byte	0x4
 145 0071 07       		.byte	0x7
 146 0072 0E000000 		.4byte	.LASF8
 147 0076 03       		.uleb128 0x3
 148 0077 9E000000 		.4byte	.LASF10
 149 007b 03       		.byte	0x3
 150 007c 2D       		.byte	0x2d
 151 007d 48000000 		.4byte	0x48
 152 0081 02       		.uleb128 0x2
 153 0082 04       		.byte	0x4
 154 0083 07       		.byte	0x7
 155 0084 49010000 		.4byte	.LASF11
 156 0088 02       		.uleb128 0x2
 157 0089 01       		.byte	0x1
 158 008a 08       		.byte	0x8
 159 008b 99000000 		.4byte	.LASF12
 160 008f 02       		.uleb128 0x2
 161 0090 08       		.byte	0x8
 162 0091 04       		.byte	0x4
 163 0092 B5000000 		.4byte	.LASF13
 164 0096 02       		.uleb128 0x2
 165 0097 04       		.byte	0x4
 166 0098 04       		.byte	0x4
 167 0099 54000000 		.4byte	.LASF14
 168 009d 02       		.uleb128 0x2
 169 009e 08       		.byte	0x8
 170 009f 04       		.byte	0x4
 171 00a0 E2000000 		.4byte	.LASF15
 172 00a4 05       		.uleb128 0x5
 173 00a5 3F010000 		.4byte	.LASF16
 174 00a9 04       		.byte	0x4
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cccevkEm.s 			page 7


 175 00aa A501     		.2byte	0x1a5
 176 00ac 96000000 		.4byte	0x96
 177 00b0 06       		.uleb128 0x6
 178 00b1 04       		.byte	0x4
 179 00b2 A4000000 		.4byte	0xa4
 180 00b6 07       		.uleb128 0x7
 181 00b7 5C010000 		.4byte	.LASF23
 182 00bb 01       		.byte	0x1
 183 00bc 47       		.byte	0x47
 184 00bd 00000000 		.4byte	.LFB82
 185 00c1 4A000000 		.4byte	.LFE82-.LFB82
 186 00c5 01       		.uleb128 0x1
 187 00c6 9C       		.byte	0x9c
 188 00c7 08       		.uleb128 0x8
 189 00c8 B0000000 		.4byte	.LASF17
 190 00cc 01       		.byte	0x1
 191 00cd 48       		.byte	0x48
 192 00ce B0000000 		.4byte	0xb0
 193 00d2 02       		.uleb128 0x2
 194 00d3 91       		.byte	0x91
 195 00d4 6C       		.sleb128 -20
 196 00d5 08       		.uleb128 0x8
 197 00d6 1B000000 		.4byte	.LASF18
 198 00da 01       		.byte	0x1
 199 00db 49       		.byte	0x49
 200 00dc B0000000 		.4byte	0xb0
 201 00e0 02       		.uleb128 0x2
 202 00e1 91       		.byte	0x91
 203 00e2 68       		.sleb128 -24
 204 00e3 08       		.uleb128 0x8
 205 00e4 EE000000 		.4byte	.LASF19
 206 00e8 01       		.byte	0x1
 207 00e9 4A       		.byte	0x4a
 208 00ea 76000000 		.4byte	0x76
 209 00ee 02       		.uleb128 0x2
 210 00ef 91       		.byte	0x91
 211 00f0 64       		.sleb128 -28
 212 00f1 09       		.uleb128 0x9
 213 00f2 BC000000 		.4byte	.LASF24
 214 00f6 01       		.byte	0x1
 215 00f7 4C       		.byte	0x4c
 216 00f8 76000000 		.4byte	0x76
 217 00fc 02       		.uleb128 0x2
 218 00fd 91       		.byte	0x91
 219 00fe 74       		.sleb128 -12
 220 00ff 00       		.byte	0
 221 0100 00       		.byte	0
 222              		.section	.debug_abbrev,"",%progbits
 223              	.Ldebug_abbrev0:
 224 0000 01       		.uleb128 0x1
 225 0001 11       		.uleb128 0x11
 226 0002 01       		.byte	0x1
 227 0003 25       		.uleb128 0x25
 228 0004 0E       		.uleb128 0xe
 229 0005 13       		.uleb128 0x13
 230 0006 0B       		.uleb128 0xb
 231 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cccevkEm.s 			page 8


 232 0008 0E       		.uleb128 0xe
 233 0009 1B       		.uleb128 0x1b
 234 000a 0E       		.uleb128 0xe
 235 000b 55       		.uleb128 0x55
 236 000c 17       		.uleb128 0x17
 237 000d 11       		.uleb128 0x11
 238 000e 01       		.uleb128 0x1
 239 000f 10       		.uleb128 0x10
 240 0010 17       		.uleb128 0x17
 241 0011 00       		.byte	0
 242 0012 00       		.byte	0
 243 0013 02       		.uleb128 0x2
 244 0014 24       		.uleb128 0x24
 245 0015 00       		.byte	0
 246 0016 0B       		.uleb128 0xb
 247 0017 0B       		.uleb128 0xb
 248 0018 3E       		.uleb128 0x3e
 249 0019 0B       		.uleb128 0xb
 250 001a 03       		.uleb128 0x3
 251 001b 0E       		.uleb128 0xe
 252 001c 00       		.byte	0
 253 001d 00       		.byte	0
 254 001e 03       		.uleb128 0x3
 255 001f 16       		.uleb128 0x16
 256 0020 00       		.byte	0
 257 0021 03       		.uleb128 0x3
 258 0022 0E       		.uleb128 0xe
 259 0023 3A       		.uleb128 0x3a
 260 0024 0B       		.uleb128 0xb
 261 0025 3B       		.uleb128 0x3b
 262 0026 0B       		.uleb128 0xb
 263 0027 49       		.uleb128 0x49
 264 0028 13       		.uleb128 0x13
 265 0029 00       		.byte	0
 266 002a 00       		.byte	0
 267 002b 04       		.uleb128 0x4
 268 002c 24       		.uleb128 0x24
 269 002d 00       		.byte	0
 270 002e 0B       		.uleb128 0xb
 271 002f 0B       		.uleb128 0xb
 272 0030 3E       		.uleb128 0x3e
 273 0031 0B       		.uleb128 0xb
 274 0032 03       		.uleb128 0x3
 275 0033 08       		.uleb128 0x8
 276 0034 00       		.byte	0
 277 0035 00       		.byte	0
 278 0036 05       		.uleb128 0x5
 279 0037 16       		.uleb128 0x16
 280 0038 00       		.byte	0
 281 0039 03       		.uleb128 0x3
 282 003a 0E       		.uleb128 0xe
 283 003b 3A       		.uleb128 0x3a
 284 003c 0B       		.uleb128 0xb
 285 003d 3B       		.uleb128 0x3b
 286 003e 05       		.uleb128 0x5
 287 003f 49       		.uleb128 0x49
 288 0040 13       		.uleb128 0x13
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cccevkEm.s 			page 9


 289 0041 00       		.byte	0
 290 0042 00       		.byte	0
 291 0043 06       		.uleb128 0x6
 292 0044 0F       		.uleb128 0xf
 293 0045 00       		.byte	0
 294 0046 0B       		.uleb128 0xb
 295 0047 0B       		.uleb128 0xb
 296 0048 49       		.uleb128 0x49
 297 0049 13       		.uleb128 0x13
 298 004a 00       		.byte	0
 299 004b 00       		.byte	0
 300 004c 07       		.uleb128 0x7
 301 004d 2E       		.uleb128 0x2e
 302 004e 01       		.byte	0x1
 303 004f 3F       		.uleb128 0x3f
 304 0050 19       		.uleb128 0x19
 305 0051 03       		.uleb128 0x3
 306 0052 0E       		.uleb128 0xe
 307 0053 3A       		.uleb128 0x3a
 308 0054 0B       		.uleb128 0xb
 309 0055 3B       		.uleb128 0x3b
 310 0056 0B       		.uleb128 0xb
 311 0057 27       		.uleb128 0x27
 312 0058 19       		.uleb128 0x19
 313 0059 11       		.uleb128 0x11
 314 005a 01       		.uleb128 0x1
 315 005b 12       		.uleb128 0x12
 316 005c 06       		.uleb128 0x6
 317 005d 40       		.uleb128 0x40
 318 005e 18       		.uleb128 0x18
 319 005f 9742     		.uleb128 0x2117
 320 0061 19       		.uleb128 0x19
 321 0062 00       		.byte	0
 322 0063 00       		.byte	0
 323 0064 08       		.uleb128 0x8
 324 0065 05       		.uleb128 0x5
 325 0066 00       		.byte	0
 326 0067 03       		.uleb128 0x3
 327 0068 0E       		.uleb128 0xe
 328 0069 3A       		.uleb128 0x3a
 329 006a 0B       		.uleb128 0xb
 330 006b 3B       		.uleb128 0x3b
 331 006c 0B       		.uleb128 0xb
 332 006d 49       		.uleb128 0x49
 333 006e 13       		.uleb128 0x13
 334 006f 02       		.uleb128 0x2
 335 0070 18       		.uleb128 0x18
 336 0071 00       		.byte	0
 337 0072 00       		.byte	0
 338 0073 09       		.uleb128 0x9
 339 0074 34       		.uleb128 0x34
 340 0075 00       		.byte	0
 341 0076 03       		.uleb128 0x3
 342 0077 0E       		.uleb128 0xe
 343 0078 3A       		.uleb128 0x3a
 344 0079 0B       		.uleb128 0xb
 345 007a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cccevkEm.s 			page 10


 346 007b 0B       		.uleb128 0xb
 347 007c 49       		.uleb128 0x49
 348 007d 13       		.uleb128 0x13
 349 007e 02       		.uleb128 0x2
 350 007f 18       		.uleb128 0x18
 351 0080 00       		.byte	0
 352 0081 00       		.byte	0
 353 0082 00       		.byte	0
 354              		.section	.debug_aranges,"",%progbits
 355 0000 1C000000 		.4byte	0x1c
 356 0004 0200     		.2byte	0x2
 357 0006 00000000 		.4byte	.Ldebug_info0
 358 000a 04       		.byte	0x4
 359 000b 00       		.byte	0
 360 000c 0000     		.2byte	0
 361 000e 0000     		.2byte	0
 362 0010 00000000 		.4byte	.LFB82
 363 0014 4A000000 		.4byte	.LFE82-.LFB82
 364 0018 00000000 		.4byte	0
 365 001c 00000000 		.4byte	0
 366              		.section	.debug_ranges,"",%progbits
 367              	.Ldebug_ranges0:
 368 0000 00000000 		.4byte	.LFB82
 369 0004 4A000000 		.4byte	.LFE82
 370 0008 00000000 		.4byte	0
 371 000c 00000000 		.4byte	0
 372              		.section	.debug_line,"",%progbits
 373              	.Ldebug_line0:
 374 0000 7B010000 		.section	.debug_str,"MS",%progbits,1
 374      02005701 
 374      00000201 
 374      FB0E0D00 
 374      01010101 
 375              	.LASF6:
 376 0000 6C6F6E67 		.ascii	"long long int\000"
 376      206C6F6E 
 376      6720696E 
 376      7400
 377              	.LASF8:
 378 000e 756E7369 		.ascii	"unsigned int\000"
 378      676E6564 
 378      20696E74 
 378      00
 379              	.LASF18:
 380 001b 70447374 		.ascii	"pDst\000"
 380      00
 381              	.LASF9:
 382 0020 5F5F7569 		.ascii	"__uint32_t\000"
 382      6E743332 
 382      5F7400
 383              	.LASF5:
 384 002b 6C6F6E67 		.ascii	"long unsigned int\000"
 384      20756E73 
 384      69676E65 
 384      6420696E 
 384      7400
 385              	.LASF7:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cccevkEm.s 			page 11


 386 003d 6C6F6E67 		.ascii	"long long unsigned int\000"
 386      206C6F6E 
 386      6720756E 
 386      7369676E 
 386      65642069 
 387              	.LASF14:
 388 0054 666C6F61 		.ascii	"float\000"
 388      7400
 389              	.LASF21:
 390 005a 536F7572 		.ascii	"Source\\ComplexMathFunctions\\arm_cmplx_conj_f32.c\000"
 390      63655C43 
 390      6F6D706C 
 390      65784D61 
 390      74684675 
 391              	.LASF1:
 392 008b 756E7369 		.ascii	"unsigned char\000"
 392      676E6564 
 392      20636861 
 392      7200
 393              	.LASF12:
 394 0099 63686172 		.ascii	"char\000"
 394      00
 395              	.LASF10:
 396 009e 75696E74 		.ascii	"uint32_t\000"
 396      33325F74 
 396      00
 397              	.LASF4:
 398 00a7 6C6F6E67 		.ascii	"long int\000"
 398      20696E74 
 398      00
 399              	.LASF17:
 400 00b0 70537263 		.ascii	"pSrc\000"
 400      00
 401              	.LASF13:
 402 00b5 646F7562 		.ascii	"double\000"
 402      6C6500
 403              	.LASF24:
 404 00bc 626C6B43 		.ascii	"blkCnt\000"
 404      6E7400
 405              	.LASF3:
 406 00c3 73686F72 		.ascii	"short unsigned int\000"
 406      7420756E 
 406      7369676E 
 406      65642069 
 406      6E7400
 407              	.LASF0:
 408 00d6 7369676E 		.ascii	"signed char\000"
 408      65642063 
 408      68617200 
 409              	.LASF15:
 410 00e2 6C6F6E67 		.ascii	"long double\000"
 410      20646F75 
 410      626C6500 
 411              	.LASF19:
 412 00ee 6E756D53 		.ascii	"numSamples\000"
 412      616D706C 
 412      657300
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cccevkEm.s 			page 12


 413              	.LASF22:
 414 00f9 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 414      73657273 
 414      5C666E65 
 414      7665735C 
 414      446F6375 
 415 0126 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 415      655F7370 
 415      6565645F 
 415      73656E73 
 415      6F722E63 
 416              	.LASF16:
 417 013f 666C6F61 		.ascii	"float32_t\000"
 417      7433325F 
 417      7400
 418              	.LASF11:
 419 0149 73697A65 		.ascii	"sizetype\000"
 419      74797065 
 419      00
 420              	.LASF2:
 421 0152 73686F72 		.ascii	"short int\000"
 421      7420696E 
 421      7400
 422              	.LASF23:
 423 015c 61726D5F 		.ascii	"arm_cmplx_conj_f32\000"
 423      636D706C 
 423      785F636F 
 423      6E6A5F66 
 423      333200
 424              	.LASF20:
 425 016f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 425      4320342E 
 425      392E3320 
 425      32303135 
 425      30333033 
 426 01a2 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 426      20726576 
 426      6973696F 
 426      6E203232 
 426      31323230 
 427 01d5 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 427      30202D66 
 427      66756E63 
 427      74696F6E 
 427      2D736563 
 428              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
