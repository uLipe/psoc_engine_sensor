ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAxzIdc.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_offset_f32.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_fadd
  18              		.section	.text.arm_offset_f32,"ax",%progbits
  19              		.align	2
  20              		.global	arm_offset_f32
  21              		.code	16
  22              		.thumb_func
  23              		.type	arm_offset_f32, %function
  24              	arm_offset_f32:
  25              	.LFB82:
  26              		.file 1 "Source\\BasicMathFunctions\\arm_offset_f32.c"
   1:Source\BasicMathFunctions/arm_offset_f32.c **** /* ----------------------------------------------------------------------
   2:Source\BasicMathFunctions/arm_offset_f32.c ****  * Project:      CMSIS DSP Library
   3:Source\BasicMathFunctions/arm_offset_f32.c ****  * Title:        arm_offset_f32.c
   4:Source\BasicMathFunctions/arm_offset_f32.c ****  * Description:  Floating-point vector offset
   5:Source\BasicMathFunctions/arm_offset_f32.c ****  *
   6:Source\BasicMathFunctions/arm_offset_f32.c ****  * $Date:        27. January 2017
   7:Source\BasicMathFunctions/arm_offset_f32.c ****  * $Revision:    V.1.5.1
   8:Source\BasicMathFunctions/arm_offset_f32.c ****  *
   9:Source\BasicMathFunctions/arm_offset_f32.c ****  * Target Processor: Cortex-M cores
  10:Source\BasicMathFunctions/arm_offset_f32.c ****  * -------------------------------------------------------------------- */
  11:Source\BasicMathFunctions/arm_offset_f32.c **** /*
  12:Source\BasicMathFunctions/arm_offset_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\BasicMathFunctions/arm_offset_f32.c ****  *
  14:Source\BasicMathFunctions/arm_offset_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\BasicMathFunctions/arm_offset_f32.c ****  *
  16:Source\BasicMathFunctions/arm_offset_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\BasicMathFunctions/arm_offset_f32.c ****  * not use this file except in compliance with the License.
  18:Source\BasicMathFunctions/arm_offset_f32.c ****  * You may obtain a copy of the License at
  19:Source\BasicMathFunctions/arm_offset_f32.c ****  *
  20:Source\BasicMathFunctions/arm_offset_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\BasicMathFunctions/arm_offset_f32.c ****  *
  22:Source\BasicMathFunctions/arm_offset_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\BasicMathFunctions/arm_offset_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\BasicMathFunctions/arm_offset_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\BasicMathFunctions/arm_offset_f32.c ****  * See the License for the specific language governing permissions and
  26:Source\BasicMathFunctions/arm_offset_f32.c ****  * limitations under the License.
  27:Source\BasicMathFunctions/arm_offset_f32.c ****  */
  28:Source\BasicMathFunctions/arm_offset_f32.c **** 
  29:Source\BasicMathFunctions/arm_offset_f32.c **** #include "arm_math.h"
  30:Source\BasicMathFunctions/arm_offset_f32.c **** 
  31:Source\BasicMathFunctions/arm_offset_f32.c **** /**
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAxzIdc.s 			page 2


  32:Source\BasicMathFunctions/arm_offset_f32.c ****  * @ingroup groupMath
  33:Source\BasicMathFunctions/arm_offset_f32.c ****  */
  34:Source\BasicMathFunctions/arm_offset_f32.c **** 
  35:Source\BasicMathFunctions/arm_offset_f32.c **** /**
  36:Source\BasicMathFunctions/arm_offset_f32.c ****  * @defgroup offset Vector Offset
  37:Source\BasicMathFunctions/arm_offset_f32.c ****  *
  38:Source\BasicMathFunctions/arm_offset_f32.c ****  * Adds a constant offset to each element of a vector.
  39:Source\BasicMathFunctions/arm_offset_f32.c ****  *
  40:Source\BasicMathFunctions/arm_offset_f32.c ****  * <pre>
  41:Source\BasicMathFunctions/arm_offset_f32.c ****  *     pDst[n] = pSrc[n] + offset,   0 <= n < blockSize.
  42:Source\BasicMathFunctions/arm_offset_f32.c ****  * </pre>
  43:Source\BasicMathFunctions/arm_offset_f32.c ****  *
  44:Source\BasicMathFunctions/arm_offset_f32.c ****  * The functions support in-place computation allowing the source and
  45:Source\BasicMathFunctions/arm_offset_f32.c ****  * destination pointers to reference the same memory buffer.
  46:Source\BasicMathFunctions/arm_offset_f32.c ****  * There are separate functions for floating-point, Q7, Q15, and Q31 data types.
  47:Source\BasicMathFunctions/arm_offset_f32.c ****  */
  48:Source\BasicMathFunctions/arm_offset_f32.c **** 
  49:Source\BasicMathFunctions/arm_offset_f32.c **** /**
  50:Source\BasicMathFunctions/arm_offset_f32.c ****  * @addtogroup offset
  51:Source\BasicMathFunctions/arm_offset_f32.c ****  * @{
  52:Source\BasicMathFunctions/arm_offset_f32.c ****  */
  53:Source\BasicMathFunctions/arm_offset_f32.c **** 
  54:Source\BasicMathFunctions/arm_offset_f32.c **** /**
  55:Source\BasicMathFunctions/arm_offset_f32.c ****  * @brief  Adds a constant offset to a floating-point vector.
  56:Source\BasicMathFunctions/arm_offset_f32.c ****  * @param[in]  *pSrc points to the input vector
  57:Source\BasicMathFunctions/arm_offset_f32.c ****  * @param[in]  offset is the offset to be added
  58:Source\BasicMathFunctions/arm_offset_f32.c ****  * @param[out]  *pDst points to the output vector
  59:Source\BasicMathFunctions/arm_offset_f32.c ****  * @param[in]  blockSize number of samples in the vector
  60:Source\BasicMathFunctions/arm_offset_f32.c ****  * @return none.
  61:Source\BasicMathFunctions/arm_offset_f32.c ****  */
  62:Source\BasicMathFunctions/arm_offset_f32.c **** 
  63:Source\BasicMathFunctions/arm_offset_f32.c **** 
  64:Source\BasicMathFunctions/arm_offset_f32.c **** void arm_offset_f32(
  65:Source\BasicMathFunctions/arm_offset_f32.c ****   float32_t * pSrc,
  66:Source\BasicMathFunctions/arm_offset_f32.c ****   float32_t offset,
  67:Source\BasicMathFunctions/arm_offset_f32.c ****   float32_t * pDst,
  68:Source\BasicMathFunctions/arm_offset_f32.c ****   uint32_t blockSize)
  69:Source\BasicMathFunctions/arm_offset_f32.c **** {
  27              		.loc 1 69 0
  28              		.cfi_startproc
  29 0000 90B5     		push	{r4, r7, lr}
  30              		.cfi_def_cfa_offset 12
  31              		.cfi_offset 4, -12
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 87B0     		sub	sp, sp, #28
  35              		.cfi_def_cfa_offset 40
  36 0004 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  38 0006 F860     		str	r0, [r7, #12]
  39 0008 B960     		str	r1, [r7, #8]
  40 000a 7A60     		str	r2, [r7, #4]
  41 000c 3B60     		str	r3, [r7]
  70:Source\BasicMathFunctions/arm_offset_f32.c ****   uint32_t blkCnt;                               /* loop counter */
  71:Source\BasicMathFunctions/arm_offset_f32.c **** 
  72:Source\BasicMathFunctions/arm_offset_f32.c **** #if defined (ARM_MATH_DSP)
  73:Source\BasicMathFunctions/arm_offset_f32.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAxzIdc.s 			page 3


  74:Source\BasicMathFunctions/arm_offset_f32.c **** /* Run the below code for Cortex-M4 and Cortex-M3 */
  75:Source\BasicMathFunctions/arm_offset_f32.c ****   float32_t in1, in2, in3, in4;
  76:Source\BasicMathFunctions/arm_offset_f32.c **** 
  77:Source\BasicMathFunctions/arm_offset_f32.c ****   /*loop Unrolling */
  78:Source\BasicMathFunctions/arm_offset_f32.c ****   blkCnt = blockSize >> 2u;
  79:Source\BasicMathFunctions/arm_offset_f32.c **** 
  80:Source\BasicMathFunctions/arm_offset_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  81:Source\BasicMathFunctions/arm_offset_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  82:Source\BasicMathFunctions/arm_offset_f32.c ****   while (blkCnt > 0u)
  83:Source\BasicMathFunctions/arm_offset_f32.c ****   {
  84:Source\BasicMathFunctions/arm_offset_f32.c ****     /* C = A + offset */
  85:Source\BasicMathFunctions/arm_offset_f32.c ****     /* Add offset and then store the results in the destination buffer. */
  86:Source\BasicMathFunctions/arm_offset_f32.c ****     /* read samples from source */
  87:Source\BasicMathFunctions/arm_offset_f32.c ****     in1 = *pSrc;
  88:Source\BasicMathFunctions/arm_offset_f32.c ****     in2 = *(pSrc + 1);
  89:Source\BasicMathFunctions/arm_offset_f32.c **** 
  90:Source\BasicMathFunctions/arm_offset_f32.c ****     /* add offset to input */
  91:Source\BasicMathFunctions/arm_offset_f32.c ****     in1 = in1 + offset;
  92:Source\BasicMathFunctions/arm_offset_f32.c **** 
  93:Source\BasicMathFunctions/arm_offset_f32.c ****     /* read samples from source */
  94:Source\BasicMathFunctions/arm_offset_f32.c ****     in3 = *(pSrc + 2);
  95:Source\BasicMathFunctions/arm_offset_f32.c **** 
  96:Source\BasicMathFunctions/arm_offset_f32.c ****     /* add offset to input */
  97:Source\BasicMathFunctions/arm_offset_f32.c ****     in2 = in2 + offset;
  98:Source\BasicMathFunctions/arm_offset_f32.c **** 
  99:Source\BasicMathFunctions/arm_offset_f32.c ****     /* read samples from source */
 100:Source\BasicMathFunctions/arm_offset_f32.c ****     in4 = *(pSrc + 3);
 101:Source\BasicMathFunctions/arm_offset_f32.c **** 
 102:Source\BasicMathFunctions/arm_offset_f32.c ****     /* add offset to input */
 103:Source\BasicMathFunctions/arm_offset_f32.c ****     in3 = in3 + offset;
 104:Source\BasicMathFunctions/arm_offset_f32.c **** 
 105:Source\BasicMathFunctions/arm_offset_f32.c ****     /* store result to destination */
 106:Source\BasicMathFunctions/arm_offset_f32.c ****     *pDst = in1;
 107:Source\BasicMathFunctions/arm_offset_f32.c **** 
 108:Source\BasicMathFunctions/arm_offset_f32.c ****     /* add offset to input */
 109:Source\BasicMathFunctions/arm_offset_f32.c ****     in4 = in4 + offset;
 110:Source\BasicMathFunctions/arm_offset_f32.c **** 
 111:Source\BasicMathFunctions/arm_offset_f32.c ****     /* store result to destination */
 112:Source\BasicMathFunctions/arm_offset_f32.c ****     *(pDst + 1) = in2;
 113:Source\BasicMathFunctions/arm_offset_f32.c **** 
 114:Source\BasicMathFunctions/arm_offset_f32.c ****     /* store result to destination */
 115:Source\BasicMathFunctions/arm_offset_f32.c ****     *(pDst + 2) = in3;
 116:Source\BasicMathFunctions/arm_offset_f32.c **** 
 117:Source\BasicMathFunctions/arm_offset_f32.c ****     /* store result to destination */
 118:Source\BasicMathFunctions/arm_offset_f32.c ****     *(pDst + 3) = in4;
 119:Source\BasicMathFunctions/arm_offset_f32.c **** 
 120:Source\BasicMathFunctions/arm_offset_f32.c ****     /* update pointers to process next samples */
 121:Source\BasicMathFunctions/arm_offset_f32.c ****     pSrc += 4u;
 122:Source\BasicMathFunctions/arm_offset_f32.c ****     pDst += 4u;
 123:Source\BasicMathFunctions/arm_offset_f32.c **** 
 124:Source\BasicMathFunctions/arm_offset_f32.c ****     /* Decrement the loop counter */
 125:Source\BasicMathFunctions/arm_offset_f32.c ****     blkCnt--;
 126:Source\BasicMathFunctions/arm_offset_f32.c ****   }
 127:Source\BasicMathFunctions/arm_offset_f32.c **** 
 128:Source\BasicMathFunctions/arm_offset_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 129:Source\BasicMathFunctions/arm_offset_f32.c ****    ** No loop unrolling is used. */
 130:Source\BasicMathFunctions/arm_offset_f32.c ****   blkCnt = blockSize % 0x4u;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAxzIdc.s 			page 4


 131:Source\BasicMathFunctions/arm_offset_f32.c **** 
 132:Source\BasicMathFunctions/arm_offset_f32.c **** #else
 133:Source\BasicMathFunctions/arm_offset_f32.c **** 
 134:Source\BasicMathFunctions/arm_offset_f32.c ****   /* Run the below code for Cortex-M0 */
 135:Source\BasicMathFunctions/arm_offset_f32.c **** 
 136:Source\BasicMathFunctions/arm_offset_f32.c ****   /* Initialize blkCnt with number of samples */
 137:Source\BasicMathFunctions/arm_offset_f32.c ****   blkCnt = blockSize;
  42              		.loc 1 137 0
  43 000e 3B68     		ldr	r3, [r7]
  44 0010 7B61     		str	r3, [r7, #20]
 138:Source\BasicMathFunctions/arm_offset_f32.c **** 
 139:Source\BasicMathFunctions/arm_offset_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 140:Source\BasicMathFunctions/arm_offset_f32.c **** 
 141:Source\BasicMathFunctions/arm_offset_f32.c ****   while (blkCnt > 0u)
  45              		.loc 1 141 0
  46 0012 0FE0     		b	.L2
  47              	.L3:
 142:Source\BasicMathFunctions/arm_offset_f32.c ****   {
 143:Source\BasicMathFunctions/arm_offset_f32.c ****     /* C = A + offset */
 144:Source\BasicMathFunctions/arm_offset_f32.c ****     /* Add offset and then store the result in the destination buffer. */
 145:Source\BasicMathFunctions/arm_offset_f32.c ****     *pDst++ = (*pSrc++) + offset;
  48              		.loc 1 145 0
  49 0014 7C68     		ldr	r4, [r7, #4]
  50 0016 231D     		add	r3, r4, #4
  51 0018 7B60     		str	r3, [r7, #4]
  52 001a FB68     		ldr	r3, [r7, #12]
  53 001c 1A1D     		add	r2, r3, #4
  54 001e FA60     		str	r2, [r7, #12]
  55 0020 1B68     		ldr	r3, [r3]
  56 0022 181C     		add	r0, r3, #0
  57 0024 B968     		ldr	r1, [r7, #8]
  58 0026 FFF7FEFF 		bl	__aeabi_fadd
  59 002a 031C     		add	r3, r0, #0
  60 002c 2360     		str	r3, [r4]
 146:Source\BasicMathFunctions/arm_offset_f32.c **** 
 147:Source\BasicMathFunctions/arm_offset_f32.c ****     /* Decrement the loop counter */
 148:Source\BasicMathFunctions/arm_offset_f32.c ****     blkCnt--;
  61              		.loc 1 148 0
  62 002e 7B69     		ldr	r3, [r7, #20]
  63 0030 013B     		sub	r3, r3, #1
  64 0032 7B61     		str	r3, [r7, #20]
  65              	.L2:
 141:Source\BasicMathFunctions/arm_offset_f32.c ****   {
  66              		.loc 1 141 0
  67 0034 7B69     		ldr	r3, [r7, #20]
  68 0036 002B     		cmp	r3, #0
  69 0038 ECD1     		bne	.L3
 149:Source\BasicMathFunctions/arm_offset_f32.c ****   }
 150:Source\BasicMathFunctions/arm_offset_f32.c **** }
  70              		.loc 1 150 0
  71 003a BD46     		mov	sp, r7
  72 003c 07B0     		add	sp, sp, #28
  73              		@ sp needed
  74 003e 90BD     		pop	{r4, r7, pc}
  75              		.cfi_endproc
  76              	.LFE82:
  77              		.size	arm_offset_f32, .-arm_offset_f32
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAxzIdc.s 			page 5


  78              		.text
  79              	.Letext0:
  80              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
  81              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
  82              		.file 4 ".\\Include/arm_math.h"
  83              		.section	.debug_info,"",%progbits
  84              	.Ldebug_info0:
  85 0000 0B010000 		.4byte	0x10b
  86 0004 0400     		.2byte	0x4
  87 0006 00000000 		.4byte	.Ldebug_abbrev0
  88 000a 04       		.byte	0x4
  89 000b 01       		.uleb128 0x1
  90 000c 6B010000 		.4byte	.LASF21
  91 0010 01       		.byte	0x1
  92 0011 2B000000 		.4byte	.LASF22
  93 0015 0D010000 		.4byte	.LASF23
  94 0019 00000000 		.4byte	.Ldebug_ranges0+0
  95 001d 00000000 		.4byte	0
  96 0021 00000000 		.4byte	.Ldebug_line0
  97 0025 02       		.uleb128 0x2
  98 0026 01       		.byte	0x1
  99 0027 06       		.byte	0x6
 100 0028 F5000000 		.4byte	.LASF0
 101 002c 02       		.uleb128 0x2
 102 002d 01       		.byte	0x1
 103 002e 08       		.byte	0x8
 104 002f A0000000 		.4byte	.LASF1
 105 0033 02       		.uleb128 0x2
 106 0034 02       		.byte	0x2
 107 0035 05       		.byte	0x5
 108 0036 CA000000 		.4byte	.LASF2
 109 003a 02       		.uleb128 0x2
 110 003b 02       		.byte	0x2
 111 003c 07       		.byte	0x7
 112 003d E2000000 		.4byte	.LASF3
 113 0041 02       		.uleb128 0x2
 114 0042 04       		.byte	0x4
 115 0043 05       		.byte	0x5
 116 0044 BC000000 		.4byte	.LASF4
 117 0048 03       		.uleb128 0x3
 118 0049 20000000 		.4byte	.LASF9
 119 004d 02       		.byte	0x2
 120 004e 41       		.byte	0x41
 121 004f 53000000 		.4byte	0x53
 122 0053 02       		.uleb128 0x2
 123 0054 04       		.byte	0x4
 124 0055 07       		.byte	0x7
 125 0056 60000000 		.4byte	.LASF5
 126 005a 02       		.uleb128 0x2
 127 005b 08       		.byte	0x8
 128 005c 05       		.byte	0x5
 129 005d 00000000 		.4byte	.LASF6
 130 0061 02       		.uleb128 0x2
 131 0062 08       		.byte	0x8
 132 0063 07       		.byte	0x7
 133 0064 72000000 		.4byte	.LASF7
 134 0068 04       		.uleb128 0x4
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAxzIdc.s 			page 6


 135 0069 04       		.byte	0x4
 136 006a 05       		.byte	0x5
 137 006b 696E7400 		.ascii	"int\000"
 138 006f 02       		.uleb128 0x2
 139 0070 04       		.byte	0x4
 140 0071 07       		.byte	0x7
 141 0072 0E000000 		.4byte	.LASF8
 142 0076 03       		.uleb128 0x3
 143 0077 B3000000 		.4byte	.LASF10
 144 007b 03       		.byte	0x3
 145 007c 2D       		.byte	0x2d
 146 007d 48000000 		.4byte	0x48
 147 0081 02       		.uleb128 0x2
 148 0082 04       		.byte	0x4
 149 0083 07       		.byte	0x7
 150 0084 53010000 		.4byte	.LASF11
 151 0088 02       		.uleb128 0x2
 152 0089 01       		.byte	0x1
 153 008a 08       		.byte	0x8
 154 008b AE000000 		.4byte	.LASF12
 155 008f 02       		.uleb128 0x2
 156 0090 08       		.byte	0x8
 157 0091 04       		.byte	0x4
 158 0092 D4000000 		.4byte	.LASF13
 159 0096 02       		.uleb128 0x2
 160 0097 04       		.byte	0x4
 161 0098 04       		.byte	0x4
 162 0099 89000000 		.4byte	.LASF14
 163 009d 02       		.uleb128 0x2
 164 009e 08       		.byte	0x8
 165 009f 04       		.byte	0x4
 166 00a0 01010000 		.4byte	.LASF15
 167 00a4 05       		.uleb128 0x5
 168 00a5 96000000 		.4byte	.LASF16
 169 00a9 04       		.byte	0x4
 170 00aa A501     		.2byte	0x1a5
 171 00ac 96000000 		.4byte	0x96
 172 00b0 06       		.uleb128 0x6
 173 00b1 04       		.byte	0x4
 174 00b2 A4000000 		.4byte	0xa4
 175 00b6 07       		.uleb128 0x7
 176 00b7 5C010000 		.4byte	.LASF24
 177 00bb 01       		.byte	0x1
 178 00bc 40       		.byte	0x40
 179 00bd 00000000 		.4byte	.LFB82
 180 00c1 40000000 		.4byte	.LFE82-.LFB82
 181 00c5 01       		.uleb128 0x1
 182 00c6 9C       		.byte	0x9c
 183 00c7 08       		.uleb128 0x8
 184 00c8 C5000000 		.4byte	.LASF17
 185 00cc 01       		.byte	0x1
 186 00cd 41       		.byte	0x41
 187 00ce B0000000 		.4byte	0xb0
 188 00d2 02       		.uleb128 0x2
 189 00d3 91       		.byte	0x91
 190 00d4 64       		.sleb128 -28
 191 00d5 08       		.uleb128 0x8
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAxzIdc.s 			page 7


 192 00d6 8F000000 		.4byte	.LASF18
 193 00da 01       		.byte	0x1
 194 00db 42       		.byte	0x42
 195 00dc A4000000 		.4byte	0xa4
 196 00e0 02       		.uleb128 0x2
 197 00e1 91       		.byte	0x91
 198 00e2 60       		.sleb128 -32
 199 00e3 08       		.uleb128 0x8
 200 00e4 1B000000 		.4byte	.LASF19
 201 00e8 01       		.byte	0x1
 202 00e9 43       		.byte	0x43
 203 00ea B0000000 		.4byte	0xb0
 204 00ee 02       		.uleb128 0x2
 205 00ef 91       		.byte	0x91
 206 00f0 5C       		.sleb128 -36
 207 00f1 08       		.uleb128 0x8
 208 00f2 56000000 		.4byte	.LASF20
 209 00f6 01       		.byte	0x1
 210 00f7 44       		.byte	0x44
 211 00f8 76000000 		.4byte	0x76
 212 00fc 02       		.uleb128 0x2
 213 00fd 91       		.byte	0x91
 214 00fe 58       		.sleb128 -40
 215 00ff 09       		.uleb128 0x9
 216 0100 DB000000 		.4byte	.LASF25
 217 0104 01       		.byte	0x1
 218 0105 46       		.byte	0x46
 219 0106 76000000 		.4byte	0x76
 220 010a 02       		.uleb128 0x2
 221 010b 91       		.byte	0x91
 222 010c 6C       		.sleb128 -20
 223 010d 00       		.byte	0
 224 010e 00       		.byte	0
 225              		.section	.debug_abbrev,"",%progbits
 226              	.Ldebug_abbrev0:
 227 0000 01       		.uleb128 0x1
 228 0001 11       		.uleb128 0x11
 229 0002 01       		.byte	0x1
 230 0003 25       		.uleb128 0x25
 231 0004 0E       		.uleb128 0xe
 232 0005 13       		.uleb128 0x13
 233 0006 0B       		.uleb128 0xb
 234 0007 03       		.uleb128 0x3
 235 0008 0E       		.uleb128 0xe
 236 0009 1B       		.uleb128 0x1b
 237 000a 0E       		.uleb128 0xe
 238 000b 55       		.uleb128 0x55
 239 000c 17       		.uleb128 0x17
 240 000d 11       		.uleb128 0x11
 241 000e 01       		.uleb128 0x1
 242 000f 10       		.uleb128 0x10
 243 0010 17       		.uleb128 0x17
 244 0011 00       		.byte	0
 245 0012 00       		.byte	0
 246 0013 02       		.uleb128 0x2
 247 0014 24       		.uleb128 0x24
 248 0015 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAxzIdc.s 			page 8


 249 0016 0B       		.uleb128 0xb
 250 0017 0B       		.uleb128 0xb
 251 0018 3E       		.uleb128 0x3e
 252 0019 0B       		.uleb128 0xb
 253 001a 03       		.uleb128 0x3
 254 001b 0E       		.uleb128 0xe
 255 001c 00       		.byte	0
 256 001d 00       		.byte	0
 257 001e 03       		.uleb128 0x3
 258 001f 16       		.uleb128 0x16
 259 0020 00       		.byte	0
 260 0021 03       		.uleb128 0x3
 261 0022 0E       		.uleb128 0xe
 262 0023 3A       		.uleb128 0x3a
 263 0024 0B       		.uleb128 0xb
 264 0025 3B       		.uleb128 0x3b
 265 0026 0B       		.uleb128 0xb
 266 0027 49       		.uleb128 0x49
 267 0028 13       		.uleb128 0x13
 268 0029 00       		.byte	0
 269 002a 00       		.byte	0
 270 002b 04       		.uleb128 0x4
 271 002c 24       		.uleb128 0x24
 272 002d 00       		.byte	0
 273 002e 0B       		.uleb128 0xb
 274 002f 0B       		.uleb128 0xb
 275 0030 3E       		.uleb128 0x3e
 276 0031 0B       		.uleb128 0xb
 277 0032 03       		.uleb128 0x3
 278 0033 08       		.uleb128 0x8
 279 0034 00       		.byte	0
 280 0035 00       		.byte	0
 281 0036 05       		.uleb128 0x5
 282 0037 16       		.uleb128 0x16
 283 0038 00       		.byte	0
 284 0039 03       		.uleb128 0x3
 285 003a 0E       		.uleb128 0xe
 286 003b 3A       		.uleb128 0x3a
 287 003c 0B       		.uleb128 0xb
 288 003d 3B       		.uleb128 0x3b
 289 003e 05       		.uleb128 0x5
 290 003f 49       		.uleb128 0x49
 291 0040 13       		.uleb128 0x13
 292 0041 00       		.byte	0
 293 0042 00       		.byte	0
 294 0043 06       		.uleb128 0x6
 295 0044 0F       		.uleb128 0xf
 296 0045 00       		.byte	0
 297 0046 0B       		.uleb128 0xb
 298 0047 0B       		.uleb128 0xb
 299 0048 49       		.uleb128 0x49
 300 0049 13       		.uleb128 0x13
 301 004a 00       		.byte	0
 302 004b 00       		.byte	0
 303 004c 07       		.uleb128 0x7
 304 004d 2E       		.uleb128 0x2e
 305 004e 01       		.byte	0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAxzIdc.s 			page 9


 306 004f 3F       		.uleb128 0x3f
 307 0050 19       		.uleb128 0x19
 308 0051 03       		.uleb128 0x3
 309 0052 0E       		.uleb128 0xe
 310 0053 3A       		.uleb128 0x3a
 311 0054 0B       		.uleb128 0xb
 312 0055 3B       		.uleb128 0x3b
 313 0056 0B       		.uleb128 0xb
 314 0057 27       		.uleb128 0x27
 315 0058 19       		.uleb128 0x19
 316 0059 11       		.uleb128 0x11
 317 005a 01       		.uleb128 0x1
 318 005b 12       		.uleb128 0x12
 319 005c 06       		.uleb128 0x6
 320 005d 40       		.uleb128 0x40
 321 005e 18       		.uleb128 0x18
 322 005f 9642     		.uleb128 0x2116
 323 0061 19       		.uleb128 0x19
 324 0062 00       		.byte	0
 325 0063 00       		.byte	0
 326 0064 08       		.uleb128 0x8
 327 0065 05       		.uleb128 0x5
 328 0066 00       		.byte	0
 329 0067 03       		.uleb128 0x3
 330 0068 0E       		.uleb128 0xe
 331 0069 3A       		.uleb128 0x3a
 332 006a 0B       		.uleb128 0xb
 333 006b 3B       		.uleb128 0x3b
 334 006c 0B       		.uleb128 0xb
 335 006d 49       		.uleb128 0x49
 336 006e 13       		.uleb128 0x13
 337 006f 02       		.uleb128 0x2
 338 0070 18       		.uleb128 0x18
 339 0071 00       		.byte	0
 340 0072 00       		.byte	0
 341 0073 09       		.uleb128 0x9
 342 0074 34       		.uleb128 0x34
 343 0075 00       		.byte	0
 344 0076 03       		.uleb128 0x3
 345 0077 0E       		.uleb128 0xe
 346 0078 3A       		.uleb128 0x3a
 347 0079 0B       		.uleb128 0xb
 348 007a 3B       		.uleb128 0x3b
 349 007b 0B       		.uleb128 0xb
 350 007c 49       		.uleb128 0x49
 351 007d 13       		.uleb128 0x13
 352 007e 02       		.uleb128 0x2
 353 007f 18       		.uleb128 0x18
 354 0080 00       		.byte	0
 355 0081 00       		.byte	0
 356 0082 00       		.byte	0
 357              		.section	.debug_aranges,"",%progbits
 358 0000 1C000000 		.4byte	0x1c
 359 0004 0200     		.2byte	0x2
 360 0006 00000000 		.4byte	.Ldebug_info0
 361 000a 04       		.byte	0x4
 362 000b 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAxzIdc.s 			page 10


 363 000c 0000     		.2byte	0
 364 000e 0000     		.2byte	0
 365 0010 00000000 		.4byte	.LFB82
 366 0014 40000000 		.4byte	.LFE82-.LFB82
 367 0018 00000000 		.4byte	0
 368 001c 00000000 		.4byte	0
 369              		.section	.debug_ranges,"",%progbits
 370              	.Ldebug_ranges0:
 371 0000 00000000 		.4byte	.LFB82
 372 0004 40000000 		.4byte	.LFE82
 373 0008 00000000 		.4byte	0
 374 000c 00000000 		.4byte	0
 375              		.section	.debug_line,"",%progbits
 376              	.Ldebug_line0:
 377 0000 74010000 		.section	.debug_str,"MS",%progbits,1
 377      02005101 
 377      00000201 
 377      FB0E0D00 
 377      01010101 
 378              	.LASF6:
 379 0000 6C6F6E67 		.ascii	"long long int\000"
 379      206C6F6E 
 379      6720696E 
 379      7400
 380              	.LASF8:
 381 000e 756E7369 		.ascii	"unsigned int\000"
 381      676E6564 
 381      20696E74 
 381      00
 382              	.LASF19:
 383 001b 70447374 		.ascii	"pDst\000"
 383      00
 384              	.LASF9:
 385 0020 5F5F7569 		.ascii	"__uint32_t\000"
 385      6E743332 
 385      5F7400
 386              	.LASF22:
 387 002b 536F7572 		.ascii	"Source\\BasicMathFunctions\\arm_offset_f32.c\000"
 387      63655C42 
 387      61736963 
 387      4D617468 
 387      46756E63 
 388              	.LASF20:
 389 0056 626C6F63 		.ascii	"blockSize\000"
 389      6B53697A 
 389      6500
 390              	.LASF5:
 391 0060 6C6F6E67 		.ascii	"long unsigned int\000"
 391      20756E73 
 391      69676E65 
 391      6420696E 
 391      7400
 392              	.LASF7:
 393 0072 6C6F6E67 		.ascii	"long long unsigned int\000"
 393      206C6F6E 
 393      6720756E 
 393      7369676E 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAxzIdc.s 			page 11


 393      65642069 
 394              	.LASF14:
 395 0089 666C6F61 		.ascii	"float\000"
 395      7400
 396              	.LASF18:
 397 008f 6F666673 		.ascii	"offset\000"
 397      657400
 398              	.LASF16:
 399 0096 666C6F61 		.ascii	"float32_t\000"
 399      7433325F 
 399      7400
 400              	.LASF1:
 401 00a0 756E7369 		.ascii	"unsigned char\000"
 401      676E6564 
 401      20636861 
 401      7200
 402              	.LASF12:
 403 00ae 63686172 		.ascii	"char\000"
 403      00
 404              	.LASF10:
 405 00b3 75696E74 		.ascii	"uint32_t\000"
 405      33325F74 
 405      00
 406              	.LASF4:
 407 00bc 6C6F6E67 		.ascii	"long int\000"
 407      20696E74 
 407      00
 408              	.LASF17:
 409 00c5 70537263 		.ascii	"pSrc\000"
 409      00
 410              	.LASF2:
 411 00ca 73686F72 		.ascii	"short int\000"
 411      7420696E 
 411      7400
 412              	.LASF13:
 413 00d4 646F7562 		.ascii	"double\000"
 413      6C6500
 414              	.LASF25:
 415 00db 626C6B43 		.ascii	"blkCnt\000"
 415      6E7400
 416              	.LASF3:
 417 00e2 73686F72 		.ascii	"short unsigned int\000"
 417      7420756E 
 417      7369676E 
 417      65642069 
 417      6E7400
 418              	.LASF0:
 419 00f5 7369676E 		.ascii	"signed char\000"
 419      65642063 
 419      68617200 
 420              	.LASF15:
 421 0101 6C6F6E67 		.ascii	"long double\000"
 421      20646F75 
 421      626C6500 
 422              	.LASF23:
 423 010d 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 423      73657273 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAxzIdc.s 			page 12


 423      5C666E65 
 423      7665735C 
 423      446F6375 
 424 013a 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 424      655F7370 
 424      6565645F 
 424      73656E73 
 424      6F722E63 
 425              	.LASF11:
 426 0153 73697A65 		.ascii	"sizetype\000"
 426      74797065 
 426      00
 427              	.LASF24:
 428 015c 61726D5F 		.ascii	"arm_offset_f32\000"
 428      6F666673 
 428      65745F66 
 428      333200
 429              	.LASF21:
 430 016b 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 430      4320342E 
 430      392E3320 
 430      32303135 
 430      30333033 
 431 019e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 431      20726576 
 431      6973696F 
 431      6E203232 
 431      31323230 
 432 01d1 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 432      30202D66 
 432      66756E63 
 432      74696F6E 
 432      2D736563 
 433              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
