ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLFClk.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkWcoSetHighPowerMode,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	CySysClkWcoSetHighPowerMode, %function
  22              	CySysClkWcoSetHighPowerMode:
  23              	.LFB0:
  24              		.file 1 "Generated_Source\\PSoC4\\CyLFClk.h"
   1:Generated_Source\PSoC4/CyLFClk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.h **** * \file .h
   3:Generated_Source\PSoC4/CyLFClk.h **** * \version 1.10
   4:Generated_Source\PSoC4/CyLFClk.h **** *
   5:Generated_Source\PSoC4/CyLFClk.h **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.h **** *  This file provides the source code to API for the lfclk and wdt.
   7:Generated_Source\PSoC4/CyLFClk.h **** *
   8:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************
   9:Generated_Source\PSoC4/CyLFClk.h **** * \copyright
  10:Generated_Source\PSoC4/CyLFClk.h **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC4/CyLFClk.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC4/CyLFClk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC4/CyLFClk.h **** * the software package with which this file was provided.
  14:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
  15:Generated_Source\PSoC4/CyLFClk.h **** 
  16:Generated_Source\PSoC4/CyLFClk.h **** 
  17:Generated_Source\PSoC4/CyLFClk.h **** #if !defined(CY_LFCLK_CYLIB_H)
  18:Generated_Source\PSoC4/CyLFClk.h **** #define CY_LFCLK_CYLIB_H
  19:Generated_Source\PSoC4/CyLFClk.h **** 
  20:Generated_Source\PSoC4/CyLFClk.h **** #include "cytypes.h"
  21:Generated_Source\PSoC4/CyLFClk.h **** #include "cydevice_trm.h"
  22:Generated_Source\PSoC4/CyLFClk.h **** 
  23:Generated_Source\PSoC4/CyLFClk.h **** #define CY_IP_WCO_WDT_EN           (1 == 1)
  24:Generated_Source\PSoC4/CyLFClk.h **** 
  25:Generated_Source\PSoC4/CyLFClk.h **** 
  26:Generated_Source\PSoC4/CyLFClk.h **** typedef enum
  27:Generated_Source\PSoC4/CyLFClk.h **** {
  28:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_WAIT = 0u,
  29:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_INTERRUPT = 1u
  30:Generated_Source\PSoC4/CyLFClk.h **** } cy_sys_timer_delaytype_enum;
  31:Generated_Source\PSoC4/CyLFClk.h **** 
  32:Generated_Source\PSoC4/CyLFClk.h **** 
  33:Generated_Source\PSoC4/CyLFClk.h **** /***************************************
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 2


  34:Generated_Source\PSoC4/CyLFClk.h **** *    Function Prototypes
  35:Generated_Source\PSoC4/CyLFClk.h **** ***************************************/
  36:Generated_Source\PSoC4/CyLFClk.h **** /**
  37:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_general
  38:Generated_Source\PSoC4/CyLFClk.h **** * @{
  39:Generated_Source\PSoC4/CyLFClk.h **** */
  40:Generated_Source\PSoC4/CyLFClk.h **** /* Clocks API */
  41:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStart(void);
  42:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStop(void);
  43:Generated_Source\PSoC4/CyLFClk.h **** /** @} general */
  44:Generated_Source\PSoC4/CyLFClk.h **** 
  45:Generated_Source\PSoC4/CyLFClk.h **** /**
  46:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_compensate
  47:Generated_Source\PSoC4/CyLFClk.h **** * @{
  48:Generated_Source\PSoC4/CyLFClk.h **** */
  49:Generated_Source\PSoC4/CyLFClk.h **** cystatus CySysClkIloCompensate(uint32 desiredDelay, uint32 *compensatedCycles);
  50:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStartMeasurement(void);
  51:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStopMeasurement(void);
  52:Generated_Source\PSoC4/CyLFClk.h **** /** @} compensate */
  53:Generated_Source\PSoC4/CyLFClk.h **** 
  54:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
  55:Generated_Source\PSoC4/CyLFClk.h **** /**
  56:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_compensate
  57:Generated_Source\PSoC4/CyLFClk.h **** * @{
  58:Generated_Source\PSoC4/CyLFClk.h **** */
  59:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloTrim(uint32 mode, int32 *iloAccuracyInPPT);
  60:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloRestoreFactoryTrim(void);
  61:Generated_Source\PSoC4/CyLFClk.h **** /** @} compensate */
  62:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT);
  63:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
  64:Generated_Source\PSoC4/CyLFClk.h **** 
  65:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
  66:Generated_Source\PSoC4/CyLFClk.h **** /**
  67:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_general
  68:Generated_Source\PSoC4/CyLFClk.h **** * @{
  69:Generated_Source\PSoC4/CyLFClk.h **** */
  70:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkSetLfclkSource(uint32 source);
  71:Generated_Source\PSoC4/CyLFClk.h **** /** @} group_general */
  72:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
  73:Generated_Source\PSoC4/CyLFClk.h **** 
  74:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
  75:Generated_Source\PSoC4/CyLFClk.h **** /**
  76:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_wco
  77:Generated_Source\PSoC4/CyLFClk.h **** * @{
  78:Generated_Source\PSoC4/CyLFClk.h **** */
  79:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStart(void);
  80:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStop(void);
  81:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoSetPowerMode(uint32 mode);
  82:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkWcoClockOutSelect(uint32 clockSel);
  83:Generated_Source\PSoC4/CyLFClk.h **** /** @} wco */
  84:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoEnabled(void);
  85:Generated_Source\PSoC4/CyLFClk.h **** 
  86:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
  87:Generated_Source\PSoC4/CyLFClk.h **** 
  88:Generated_Source\PSoC4/CyLFClk.h **** typedef void (*cyWdtCallback)(void);
  89:Generated_Source\PSoC4/CyLFClk.h **** 
  90:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 3


  91:Generated_Source\PSoC4/CyLFClk.h **** 
  92:Generated_Source\PSoC4/CyLFClk.h ****     typedef void (*cyTimerCallback)(void);
  93:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
  94:Generated_Source\PSoC4/CyLFClk.h **** 
  95:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
  96:Generated_Source\PSoC4/CyLFClk.h **** /**
  97:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_wdtsrssv2
  98:Generated_Source\PSoC4/CyLFClk.h **** * @{
  99:Generated_Source\PSoC4/CyLFClk.h **** */
 100:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 101:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtLock(void);
 102:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnlock(void);
 103:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMode(uint32 counterNum, uint32 mode);
 104:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMode(uint32 counterNum);
 105:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum);
 106:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable);
 107:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum);
 108:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(uint32 counterMask);
 109:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(uint32 counterMask);
 110:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetCascade(uint32 cascadeMask);
 111:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCascade(void);
 112:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 counterNum, uint32 match);
 113:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetToggleBit(uint32 bits);
 114:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetToggleBit(void);
 115:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(uint32 counterNum);
 116:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(uint32 counterNum);
 117:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetInterruptSource(void);
 118:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(uint32 counterMask);
 119:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtResetCounters(uint32 countersMask);
 120:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function);
 121:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtGetInterruptCallback(uint32 counterNum);
 122:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 123:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 124:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWatchdogFeed(uint32 counterNum);
 125:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnableCounterIsr(uint32 counterNum);
 126:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisableCounterIsr(uint32 counterNum);
 127:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 128:Generated_Source\PSoC4/CyLFClk.h **** /** @} wdtsrssv2 */
 129:Generated_Source\PSoC4/CyLFClk.h **** #else
 130:Generated_Source\PSoC4/CyLFClk.h **** /**
 131:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_wdtsrsslite
 132:Generated_Source\PSoC4/CyLFClk.h **** * @{
 133:Generated_Source\PSoC4/CyLFClk.h **** */
 134:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 135:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(void);
 136:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(void);
 137:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(void);
 138:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 match);
 139:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(void);
 140:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(void);
 141:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetIgnoreBits(uint32 bitsNum);
 142:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetIgnoreBits(void);
 143:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(void);
 144:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtMaskInterrupt(void);
 145:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnmaskInterrupt(void);
 146:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function);
 147:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtGetInterruptCallback(void);
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 4


 148:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 149:Generated_Source\PSoC4/CyLFClk.h **** /** @} wdtsrsslite*/
 150:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 151:Generated_Source\PSoC4/CyLFClk.h **** 
 152:Generated_Source\PSoC4/CyLFClk.h **** 
 153:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 154:Generated_Source\PSoC4/CyLFClk.h **** /**
 155:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_deepsleepwdt
 156:Generated_Source\PSoC4/CyLFClk.h **** * @{
 157:Generated_Source\PSoC4/CyLFClk.h **** */
 158:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO WDT APIs */
 159:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkSetTimerSource(uint32 source);
 160:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMode(uint32 counterNum, uint32 mode);
 161:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMode(uint32 counterNum);
 162:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum);
 163:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable);
 164:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum);
 165:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnable(uint32 counterMask);
 166:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisable(uint32 counterMask);
 167:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetCascade(uint32 cascadeMask);
 168:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCascade(void);
 169:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMatch(uint32 counterNum, uint32 match);
 170:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetToggleBit(uint32 bits);
 171:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetToggleBit(void);
 172:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMatch(uint32 counterNum);
 173:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCount(uint32 counterNum);
 174:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetInterruptSource(void);
 175:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerClearInterrupt(uint32 counterMask);
 176:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function);
 177:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum);
 178:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 179:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 180:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerResetCounters(uint32 countersMask);
 181:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnableIsr(uint32 counterNum);
 182:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisableIsr(uint32 counterNum);
 183:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerIsr(void);
 184:Generated_Source\PSoC4/CyLFClk.h **** /** @} deepsleepwdt */
 185:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 186:Generated_Source\PSoC4/CyLFClk.h **** 
 187:Generated_Source\PSoC4/CyLFClk.h **** 
 188:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 189:Generated_Source\PSoC4/CyLFClk.h **** * API Constants
 190:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 191:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_UINT16_MAX_VAL    (0xFFFFu)
 192:Generated_Source\PSoC4/CyLFClk.h **** 
 193:Generated_Source\PSoC4/CyLFClk.h **** 
 194:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 195:Generated_Source\PSoC4/CyLFClk.h **** * Clock API Constants
 196:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 197:Generated_Source\PSoC4/CyLFClk.h **** 
 198:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloStart()/CySysClkIloStop() - implementation definitions */
 199:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_ENABLE                    ((uint32)(( uint32 )0x01u << 31u))
 200:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK              ((uint32)(( uint32 )0x0fu << 8u ))
 201:Generated_Source\PSoC4/CyLFClk.h **** 
 202:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - one ILO clock in uS multiplied on thousand */
 203:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 204:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x0C35u))
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 5


 205:Generated_Source\PSoC4/CyLFClk.h **** #else
 206:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x09C4u))
 207:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 208:Generated_Source\PSoC4/CyLFClk.h **** 
 209:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - implementation definitions */
 210:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK             ((uint32)(( uint32 )0x01u << 31u))
 211:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_DFT_LSB_MASK                     ((uint32)(0x00000FFFu))
 212:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_STARTED                 (1u)
 213:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_FINISHED                (0u)
 214:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_COEF_PHUNDRED                        ((uint32) (0x64u))
 215:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_CLOCK                        ((uint32) ((uint32) CY_SYS_CLK_ILO_PERIOD_P
 216:Generated_Source\PSoC4/CyLFClk.h **** 
 217:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - maximum value of desiredDelay argument */
 218:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 219:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0xEE6B2800u))
 220:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD                       ((uint32) (0x1Fu))
 221:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) 5u)
 222:Generated_Source\PSoC4/CyLFClk.h **** #else
 223:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0x1E8480u))
 224:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) (0x28u ))
 225:Generated_Source\PSoC4/CyLFClk.h **** 
 226:Generated_Source\PSoC4/CyLFClk.h **** 
 227:Generated_Source\PSoC4/CyLFClk.h **** /**********************************************************************************
 228:Generated_Source\PSoC4/CyLFClk.h **** * CySysClkIloCompensate() - value to walk over oversamling in calculations with srsslite.
 229:Generated_Source\PSoC4/CyLFClk.h **** * The oversample can be obtained when ilo frequency in equal 80 KHz and desired clocks 
 230:Generated_Source\PSoC4/CyLFClk.h **** * are 80 000 clocks.
 231:Generated_Source\PSoC4/CyLFClk.h **** **********************************************************************************/
 232:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_MAX_LITE_NUMBER                     ((uint32) 53600u)
 233:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 234:Generated_Source\PSoC4/CyLFClk.h **** 
 235:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_FREQ_3LSB                       ((uint32) (0x3E8u))
 236:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DELAY_COUNTS_LIMIT                  ((uint32) (0xD160u))
 237:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_MIN_DELAY_US                        ((uint32) (0x64u))
 238:Generated_Source\PSoC4/CyLFClk.h **** 
 239:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetLfclkSource() - parameter definitions */
 240:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 241:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_ILO                    (0u)                                  /**< 
 242:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_WCO                    ((uint32)(( uint32 )0x01u << 30u))    /**< 
 243:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 244:Generated_Source\PSoC4/CyLFClk.h **** 
 245:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetLfclkSource() - implementation definitions */
 246:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 247:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 248:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 249:Generated_Source\PSoC4/CyLFClk.h **** 
 250:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - implementation definitions */
 251:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 252:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 253:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 254:Generated_Source\PSoC4/CyLFClk.h **** 
 255:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - parameter definitions */
 256:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 257:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_ILO                (0u)                                  /**< Inte
 258:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_WCO                ((uint32)(( uint32 )0x01u << 30u))    /**< Low 
 259:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 260:Generated_Source\PSoC4/CyLFClk.h **** 
 261:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - parameter definitions */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 6


 262:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 263:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_CRYSTAL                  (1u)    /**< Selects External crystal as WC
 264:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_PIN                      (0u)    /**<Selects External clock input on
 265:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 266:Generated_Source\PSoC4/CyLFClk.h **** 
 267:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - implementation definitions */
 268:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 269:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_MASK              ((uint32)(( uint32 )0x01u << 2u))
 270:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_OFFSET            ((uint32) 0x02u)
 271:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 272:Generated_Source\PSoC4/CyLFClk.h **** 
 273:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloRestoreFactoryTrim() - implementation definitions */
 274:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 275:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE           ((uint8 )(0xF0u))
 276:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_MASK            ((uint32)((uint32)0x01u << 3u))
 277:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_MASK                    ((uint32)(0x0Fu))
 278:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 279:Generated_Source\PSoC4/CyLFClk.h **** 
 280:Generated_Source\PSoC4/CyLFClk.h **** /* CySysIloTrim() - parameter definitions and macros*/
 281:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 282:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_BLOCKING                         (0u)
 283:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_NON_BLOCKING                     (1u)
 284:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_PERTHOUSAND                      ((uint32) 0x000003E8u )
 285:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ABS_MACRO(x)                     ((0 > (x)) ? (-(x)) : (x))
 286:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_RANGE                      ((uint32) 0x38u)
 287:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMEOUT                          ((uint8 ) 0x05u)
 288:Generated_Source\PSoC4/CyLFClk.h **** 
 289:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO error step is 7,37 % error range */
 290:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_STEP                       (( int32) 0x02E1u)
 291:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_COEF                       ((uint32) 0x0Au)
 292:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 293:Generated_Source\PSoC4/CyLFClk.h **** 
 294:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 295:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Configuration Register */
 296:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_EN                (( uint32 )(( uint32 )0x01u <<  0u))
 297:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_AUTO              (( uint32 )(( uint32 )0x01u <<  1u))
 298:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE            (( uint32 )(( uint32 )0x01u << 31u))
 299:Generated_Source\PSoC4/CyLFClk.h **** 
 300:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Status Register */
 301:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_STATUS_OUT_BLNK_A            (( uint32 )(( uint32 )0x01u <<  0u))
 302:Generated_Source\PSoC4/CyLFClk.h **** 
 303:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Trim Register */
 304:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_MASK                (( uint32 ) 0x07u)
 305:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_SHIFT               (( uint32 ) 0x00u)
 306:Generated_Source\PSoC4/CyLFClk.h **** 
 307:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_3370NA              (( uint32 ) 0x00u)
 308:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2620NA              (( uint32 ) 0x01u)
 309:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2250NA              (( uint32 ) 0x02u)
 310:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1500NA              (( uint32 ) 0x03u)
 311:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1870NA              (( uint32 ) 0x04u)
 312:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1120NA              (( uint32 ) 0x05u)
 313:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_750NA               (( uint32 ) 0x06u)
 314:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_0NA                 (( uint32 ) 0x07u)
 315:Generated_Source\PSoC4/CyLFClk.h **** 
 316:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_MASK                 (( uint32 )(( uint32 )0x03u << 4u))
 317:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_SHIFT                (( uint32 ) 0x04u)
 318:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_HPM                  (( uint32 ) 0x01u)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 7


 319:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_LPM                  (( uint32 ) 0x02u)
 320:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 321:Generated_Source\PSoC4/CyLFClk.h **** 
 322:Generated_Source\PSoC4/CyLFClk.h **** 
 323:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 324:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Constants
 325:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 326:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 327:Generated_Source\PSoC4/CyLFClk.h **** 
 328:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_NONE                (0u)
 329:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT                 (1u)
 330:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_RESET               (2u)
 331:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT_RESET           (3u)
 332:Generated_Source\PSoC4/CyLFClk.h **** 
 333:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_MASK            ((uint32)((uint32)0x01u))           /**< Counter 0 
 334:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_MASK            ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 335:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_MASK            ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 336:Generated_Source\PSoC4/CyLFClk.h **** 
 337:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_NONE             ((uint32)0x00u)             /**< Neither */
 338:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_01               ((uint32)0x01u << 3u)       /**< Cascade 01 */
 339:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_12               ((uint32)0x01u << 11u)      /**< Cascade 12 */
 340:Generated_Source\PSoC4/CyLFClk.h **** 
 341:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_INT             ((uint32)0x01u << 2u)
 342:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_INT             ((uint32)0x01u << 10u)
 343:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_INT             ((uint32)0x01u << 18u)
 344:Generated_Source\PSoC4/CyLFClk.h **** 
 345:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_RESET           ((uint32)0x01u << 3u)       /**< Counter 0 */
 346:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_RESET           ((uint32)0x01u << 11u)      /**< Counter 1 */
 347:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_RESET           ((uint32)0x01u << 19u)      /**< Counter 2 */
 348:Generated_Source\PSoC4/CyLFClk.h **** 
 349:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_RESET           (CY_SYS_WDT_COUNTER0_RESET |\
 350:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER1_RESET |\
 351:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER2_RESET)
 352:Generated_Source\PSoC4/CyLFClk.h **** 
 353:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0                 (0x00u)
 354:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1                 (0x01u)
 355:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2                 (0x02u)
 356:Generated_Source\PSoC4/CyLFClk.h **** 
 357:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_OFFSET          (0x00u)
 358:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_OFFSET          (0x02u)
 359:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_OFFSET          (0x04u)
 360:Generated_Source\PSoC4/CyLFClk.h **** 
 361:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_MASK                ((uint32)(0x03u))
 362:Generated_Source\PSoC4/CyLFClk.h **** 
 363:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_MASK        (uint32)(0x1Fu)
 364:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_POS         (uint32)(24u)
 365:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_LOWER_16BITS_MASK        (uint32)(0x0000FFFFu)
 366:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_HIGHER_16BITS_MASK       (uint32)(0xFFFF0000u)
 367:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_MAX             (0x03u)
 368:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_SHIFT                (0x08u)
 369:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_CLR_SHIFT      (0x02u)
 370:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_STTS_SHIFT           (0x01u)
 371:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_SHIFT          (0x10u)
 372:Generated_Source\PSoC4/CyLFClk.h **** 
 373:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BITS_MASK       ((uint32)0x03u << 14u)
 374:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT0            ((uint32)0x01u << 14u)
 375:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT1            ((uint32)0x01u << 15u)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 8


 376:Generated_Source\PSoC4/CyLFClk.h **** 
 377:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_WDT                   (3u)
 378:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_CALLBACKS             (3u)
 379:Generated_Source\PSoC4/CyLFClk.h **** 
 380:Generated_Source\PSoC4/CyLFClk.h ****     #else
 381:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_WDT               (1u)
 382:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_CALLBACKS         (3u)
 383:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_KEY                  ((uint32)(0xACED8865u))
 384:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_MATCH_MASK           ((uint32)(0x0000FFFFu))
 385:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_MASK     ((uint32)(0x000F0000u))
 386:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_SHIFT    ((uint32)(16u))
 387:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_LOWER_BIT_MASK       ((uint32)(0x00000001u))
 388:Generated_Source\PSoC4/CyLFClk.h **** 
 389:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_COUNTER0             (0x00u)
 390:Generated_Source\PSoC4/CyLFClk.h **** 
 391:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 392:Generated_Source\PSoC4/CyLFClk.h **** 
 393:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 394:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_ILO_DELAY_US    ((uint16)( 67u))
 395:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_ILO_DELAY_US    ((uint16)(201u))
 396:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_WCO_DELAY_US    ((uint16)( 31u))
 397:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_WCO_DELAY_US    ((uint16)( 93u))
 398:Generated_Source\PSoC4/CyLFClk.h **** 
 399:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_DELAY_US      \
 400:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 401:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_ILO_DELAY_US) : \
 402:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_WCO_DELAY_US))
 403:Generated_Source\PSoC4/CyLFClk.h **** 
 404:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_DELAY_US      \
 405:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 406:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_ILO_DELAY_US) : \
 407:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_WCO_DELAY_US))
 408:Generated_Source\PSoC4/CyLFClk.h ****     #else
 409:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_1LFCLK_DELAY_US      ((uint16)  (67u))
 410:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_3LFCLK_DELAY_US      ((uint16) (201u))
 411:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && !CY_IP_WCO) */
 412:Generated_Source\PSoC4/CyLFClk.h **** 
 413:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 414:Generated_Source\PSoC4/CyLFClk.h **** 
 415:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_NONE              (0u)
 416:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_INT               (1u)
 417:Generated_Source\PSoC4/CyLFClk.h **** 
 418:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_MASK                  ((uint32)((uint32)0x01u))           /**< Counter 0 
 419:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_MASK                  ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 420:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_MASK                  ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 421:Generated_Source\PSoC4/CyLFClk.h **** 
 422:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_RESET                 ((uint32)0x01u << 3u)       /**< Counter 0 */
 423:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_RESET                 ((uint32)0x01u << 11u)      /**< Counter 1 */
 424:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_RESET                 ((uint32)0x01u << 19u)      /**< Counter 2 */
 425:Generated_Source\PSoC4/CyLFClk.h **** 
 426:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_RESET                  (CY_SYS_TIMER0_RESET |\
 427:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER1_RESET |\
 428:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER2_RESET)
 429:Generated_Source\PSoC4/CyLFClk.h **** 
 430:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_NONE           ((uint32)0x00u)             /**< Neither */
 431:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_01             ((uint32)0x01u << 3u)       /**< Cascade 01 */
 432:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_12             ((uint32)0x01u << 11u)      /**< Cascade 12 */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 9


 433:Generated_Source\PSoC4/CyLFClk.h **** 
 434:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_INT                   ((uint32)0x01u << 2u)
 435:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_INT                   ((uint32)0x01u << 10u)
 436:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_INT                   ((uint32)0x01u << 18u)
 437:Generated_Source\PSoC4/CyLFClk.h **** 
 438:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0                       (0x00u)
 439:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1                       (0x01u)
 440:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2                       (0x02u)
 441:Generated_Source\PSoC4/CyLFClk.h **** 
 442:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_MASK              ((uint32)(0x01u))
 443:Generated_Source\PSoC4/CyLFClk.h **** 
 444:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_MASK      (uint32)(0x1Fu)
 445:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_POS       (uint32)(24u)
 446:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_LOWER_16BITS_MASK      (uint32)(0x0000FFFFu)
 447:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_HIGHER_16BITS_MASK     (uint32)(0xFFFF0000u)
 448:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_COUNTERS_MAX           (0x03u)
 449:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_SHIFT              (0x08u)
 450:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT    (0x02u)
 451:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_STTS_SHIFT         (0x01u)
 452:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_SHIFT        (0x10u)
 453:Generated_Source\PSoC4/CyLFClk.h **** 
 454:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_NUM_OF_TIMERS                (3u)
 455:Generated_Source\PSoC4/CyLFClk.h **** 
 456:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_ILO     ((uint16)(0x02u))
 457:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_WCO     ((uint16)(0x01u))
 458:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_RESET_MASK     ((uint32)(0x03u))
 459:Generated_Source\PSoC4/CyLFClk.h **** 
 460:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1ILO_DELAY_US          ((uint16)( 67u))
 461:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4ILO_DELAY_US          ((uint16)(268u))
 462:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3ILO_DELAY_US          ((uint16)(201u))
 463:Generated_Source\PSoC4/CyLFClk.h **** 
 464:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1WCO_DELAY_US          ((uint16)( 31u))
 465:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4WCO_DELAY_US          ((uint16)(124u))
 466:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3WCO_DELAY_US          ((uint16)( 93u))
 467:Generated_Source\PSoC4/CyLFClk.h **** 
 468:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_1TIMER_DELAY_US      \
 469:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 470:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1ILO_DELAY_US) : \
 471:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1WCO_DELAY_US))
 472:Generated_Source\PSoC4/CyLFClk.h **** 
 473:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_4TIMER_DELAY_US      \
 474:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 475:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4WCO_DELAY_US) : \
 476:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4ILO_DELAY_US))
 477:Generated_Source\PSoC4/CyLFClk.h **** 
 478:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_3TIMER_DELAY_US      \
 479:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 480:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3ILO_DELAY_US) : \
 481:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3WCO_DELAY_US))
 482:Generated_Source\PSoC4/CyLFClk.h **** 
 483:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT      \
 484:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 485:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_ILO) : \
 486:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_WCO))
 487:Generated_Source\PSoC4/CyLFClk.h **** 
 488:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 489:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 10


 490:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoSetPowerMode() */
 491:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_WCO_HPM                              (0x0u)     /**< High power mode */
 492:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 493:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_LPM                          (0x1u)     /**< Low power mode */
 494:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 495:Generated_Source\PSoC4/CyLFClk.h **** 
 496:Generated_Source\PSoC4/CyLFClk.h **** 
 497:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 498:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers Constants 
 499:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 500:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SYS_CLK_DEVIDER                      ((uint32)0x0Au)
 501:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SEL_ILO_DFT_SOURCE                   ((uint32)0x00000100u)
 502:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_FOURBITS_MAX                         (( int32)0x0f)
 503:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_STEP                         (( int32)((uint32) CY_SYS_CLK_ERROR_STEP >>
 504:Generated_Source\PSoC4/CyLFClk.h **** 
 505:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 506:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ              (32000u)
 507:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                      ((uint32) 0x3F)
 508:Generated_Source\PSoC4/CyLFClk.h ****     #else
 509:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (40000u)
 510:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1      ((uint32)0x00000908u)
 511:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x0F)
 512:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 513:Generated_Source\PSoC4/CyLFClk.h **** 
 514:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK    ((uint32)((CY_SYS_CLK_DFT_SELSIZE << 8u) | (CY_SYS
 515:Generated_Source\PSoC4/CyLFClk.h **** 
 516:Generated_Source\PSoC4/CyLFClk.h **** #if (0u != (CY_PSOC4_4100 || CY_PSOC4_4200))
 517:Generated_Source\PSoC4/CyLFClk.h ****     #define  CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1              ((uint32)0x00000201u)
 518:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (0u != (CY_PSOC4_4100 || CY_PSOC4_4200)) */
 519:Generated_Source\PSoC4/CyLFClk.h **** 
 520:Generated_Source\PSoC4/CyLFClk.h **** #if (0u != (CY_PSOC4_4200L))
 521:Generated_Source\PSoC4/CyLFClk.h ****     #define  CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1              ((uint32)0x00000908u)
 522:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (0u != (CY_PSOC4_4200L)) */
 523:Generated_Source\PSoC4/CyLFClk.h **** 
 524:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && (!CY_PSOC4_4200L) && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 525:Generated_Source\PSoC4/CyLFClk.h ****     #define  CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1               ((uint32)0x00000B0Au)
 526:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && (!CY_PSOC4_4200L) && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 527:Generated_Source\PSoC4/CyLFClk.h **** 
 528:Generated_Source\PSoC4/CyLFClk.h **** 
 529:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 530:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers 
 531:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 532:Generated_Source\PSoC4/CyLFClk.h ****     /* DFT TST Control Register*/
 533:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG                         (*(reg32*) CYREG_TST_DDFT_CTRL)
 534:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_CTRL_PTR                              ( (reg32*) CYREG_TST_DDFT_CTRL)
 535:Generated_Source\PSoC4/CyLFClk.h **** 
 536:Generated_Source\PSoC4/CyLFClk.h ****     /* DFT TST Counter 1 Register*/
 537:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR1)
 538:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR1)
 539:Generated_Source\PSoC4/CyLFClk.h **** 
 540:Generated_Source\PSoC4/CyLFClk.h ****     /* DFT TST Counter 2 Register*/
 541:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR2)
 542:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR2)
 543:Generated_Source\PSoC4/CyLFClk.h **** 
 544:Generated_Source\PSoC4/CyLFClk.h ****     /* DFT Muxes Configuration Register*/
 545:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_REG                               (*(reg32*) CYREG_CLK_DFT_SELECT)
 546:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_PTR                               ( (reg32*) CYREG_CLK_DFT_SELECT)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 11


 547:Generated_Source\PSoC4/CyLFClk.h **** 
 548:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO Configuration Register*/
 549:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_REG                        (*(reg32 *) CYREG_CLK_ILO_CONFIG)
 550:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_PTR                        ( (reg32 *) CYREG_CLK_ILO_CONFIG)
 551:Generated_Source\PSoC4/CyLFClk.h **** 
 552:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO Trim Register*/
 553:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
 554:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_REG                      (*(reg32 *) CYREG_CLK_ILO_TRIM)
 555:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_PTR                      ( (reg32 *) CYREG_CLK_ILO_TRIM)
 556:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) && CY_IP_WCO*/
 557:Generated_Source\PSoC4/CyLFClk.h **** 
 558:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 559:Generated_Source\PSoC4/CyLFClk.h ****     #if (CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 560:Generated_Source\PSoC4/CyLFClk.h **** 
 561:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 562:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 563:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 564:Generated_Source\PSoC4/CyLFClk.h **** 
 565:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 566:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 567:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 568:Generated_Source\PSoC4/CyLFClk.h **** 
 569:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 570:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 571:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 572:Generated_Source\PSoC4/CyLFClk.h ****     #else   /* (CY_PSOC4_4100M || CY_PSOC4_4200M) && (CY_PSOC4_4100L || CY_PSOC4_4200L) */
 573:Generated_Source\PSoC4/CyLFClk.h **** 
 574:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 575:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_WCO_STATUS)
 576:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_WCO_STATUS)
 577:Generated_Source\PSoC4/CyLFClk.h **** 
 578:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 579:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_WCO_CONFIG)
 580:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_WCO_CONFIG)
 581:Generated_Source\PSoC4/CyLFClk.h **** 
 582:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 583:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_WCO_TRIM)
 584:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_WCO_TRIM)
 585:Generated_Source\PSoC4/CyLFClk.h ****     #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 586:Generated_Source\PSoC4/CyLFClk.h **** 
 587:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 588:Generated_Source\PSoC4/CyLFClk.h **** 
 589:Generated_Source\PSoC4/CyLFClk.h **** 
 590:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 591:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Registers
 592:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 593:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 594:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_REG               (*(reg32 *) CYREG_WDT_CTRLOW)
 595:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_PTR               ( (reg32 *) CYREG_WDT_CTRLOW)
 596:Generated_Source\PSoC4/CyLFClk.h **** 
 597:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_REG              (*(reg32 *) CYREG_WDT_CTRHIGH)
 598:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_PTR              ( (reg32 *) CYREG_WDT_CTRHIGH)
 599:Generated_Source\PSoC4/CyLFClk.h **** 
 600:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 601:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 602:Generated_Source\PSoC4/CyLFClk.h **** 
 603:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_REG               (*(reg32 *) CYREG_WDT_CONFIG)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 12


 604:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_PTR               ( (reg32 *) CYREG_WDT_CONFIG)
 605:Generated_Source\PSoC4/CyLFClk.h **** 
 606:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_REG              (*(reg32 *) CYREG_WDT_CONTROL)
 607:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_PTR              ( (reg32 *) CYREG_WDT_CONTROL)
 608:Generated_Source\PSoC4/CyLFClk.h **** #else
 609:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_REG          (*(reg32 *) CYREG_WDT_DISABLE_KEY)
 610:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_PTR          ( (reg32 *) CYREG_WDT_DISABLE_KEY)
 611:Generated_Source\PSoC4/CyLFClk.h **** 
 612:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 613:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 614:Generated_Source\PSoC4/CyLFClk.h **** 
 615:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_REG              (*(reg32 *) CYREG_WDT_COUNTER)
 616:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_PTR              ( (reg32 *) CYREG_WDT_COUNTER)
 617:Generated_Source\PSoC4/CyLFClk.h **** 
 618:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_REG                (*(reg32 *) CYREG_SRSS_INTR)
 619:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_PTR                ( (reg32 *) CYREG_SRSS_INTR)
 620:Generated_Source\PSoC4/CyLFClk.h **** 
 621:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_REG           (*(reg32 *) CYREG_SRSS_INTR_MASK)
 622:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_PTR           ( (reg32 *) CYREG_SRSS_INTR_MASK)
 623:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 624:Generated_Source\PSoC4/CyLFClk.h **** 
 625:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 626:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_REG           (*(reg32 *) CYREG_WCO_WDT_CTRLOW)
 627:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_PTR           ( (reg32 *) CYREG_WCO_WDT_CTRLOW)
 628:Generated_Source\PSoC4/CyLFClk.h **** 
 629:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_REG          (*(reg32 *) CYREG_WCO_WDT_CTRHIGH)
 630:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_PTR          ( (reg32 *) CYREG_WCO_WDT_CTRHIGH)
 631:Generated_Source\PSoC4/CyLFClk.h **** 
 632:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_REG            (*(reg32 *) CYREG_WCO_WDT_MATCH)
 633:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_PTR            ( (reg32 *) CYREG_WCO_WDT_MATCH)
 634:Generated_Source\PSoC4/CyLFClk.h **** 
 635:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_REG           (*(reg32 *) CYREG_WCO_WDT_CONFIG)
 636:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_PTR           ( (reg32 *) CYREG_WCO_WDT_CONFIG)
 637:Generated_Source\PSoC4/CyLFClk.h **** 
 638:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_REG          (*(reg32 *) CYREG_WCO_WDT_CONTROL)
 639:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_PTR          ( (reg32 *) CYREG_WCO_WDT_CONTROL)
 640:Generated_Source\PSoC4/CyLFClk.h **** 
 641:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_REG            (*(reg32 *) CYREG_WCO_WDT_CLKEN)
 642:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_PTR            ( (reg32 *) CYREG_WCO_WDT_CLKEN)
 643:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 644:Generated_Source\PSoC4/CyLFClk.h **** 
 645:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 646:Generated_Source\PSoC4/CyLFClk.h **** 
 647:Generated_Source\PSoC4/CyLFClk.h **** 
 648:Generated_Source\PSoC4/CyLFClk.h ****     /*******************************************************************************
 649:Generated_Source\PSoC4/CyLFClk.h ****     * Function Name: CySysClkWcoSetHighPowerMode
 650:Generated_Source\PSoC4/CyLFClk.h ****     ********************************************************************************
 651:Generated_Source\PSoC4/CyLFClk.h ****     *
 652:Generated_Source\PSoC4/CyLFClk.h ****     * Summary:
 653:Generated_Source\PSoC4/CyLFClk.h ****     *  Sets the high power mode for the 32 KHz WCO.
 654:Generated_Source\PSoC4/CyLFClk.h ****     *
 655:Generated_Source\PSoC4/CyLFClk.h ****     *******************************************************************************/
 656:Generated_Source\PSoC4/CyLFClk.h ****     static CY_INLINE void CySysClkWcoSetHighPowerMode(void)
 657:Generated_Source\PSoC4/CyLFClk.h ****     {
  25              		.loc 1 657 0
  26              		.cfi_startproc
  27 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 13


  28              		.cfi_def_cfa_offset 8
  29              		.cfi_offset 7, -8
  30              		.cfi_offset 14, -4
  31 0002 00AF     		add	r7, sp, #0
  32              		.cfi_def_cfa_register 7
 658:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off low power mode for WCO */
 659:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_EN;
  33              		.loc 1 659 0
  34 0004 0E4B     		ldr	r3, .L2
  35 0006 0E4A     		ldr	r2, .L2
  36 0008 1268     		ldr	r2, [r2]
  37 000a 0121     		mov	r1, #1
  38 000c 8A43     		bic	r2, r1
  39 000e 1A60     		str	r2, [r3]
 660:Generated_Source\PSoC4/CyLFClk.h **** 
 661:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off auto low power mode in WCO */
 662:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= ((uint32)~CY_SYS_CLK_WCO_CONFIG_LPM_AUTO);
  40              		.loc 1 662 0
  41 0010 0B4B     		ldr	r3, .L2
  42 0012 0B4A     		ldr	r2, .L2
  43 0014 1268     		ldr	r2, [r2]
  44 0016 0221     		mov	r1, #2
  45 0018 8A43     		bic	r2, r1
  46 001a 1A60     		str	r2, [r3]
 663:Generated_Source\PSoC4/CyLFClk.h **** 
 664:Generated_Source\PSoC4/CyLFClk.h ****         /* Restore WCO trim register HPM settings */
 665:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_GM_MASK)
  47              		.loc 1 665 0
  48 001c 094B     		ldr	r3, .L2+4
  49 001e 094A     		ldr	r2, .L2+4
  50 0020 1268     		ldr	r2, [r2]
  51 0022 3021     		mov	r1, #48
  52 0024 8A43     		bic	r2, r1
 666:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
  53              		.loc 1 666 0
  54 0026 1021     		mov	r1, #16
  55 0028 0A43     		orr	r2, r1
 665:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
  56              		.loc 1 665 0
  57 002a 1A60     		str	r2, [r3]
 667:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
  58              		.loc 1 667 0
  59 002c 054B     		ldr	r3, .L2+4
  60 002e 054A     		ldr	r2, .L2+4
  61 0030 1268     		ldr	r2, [r2]
  62 0032 0721     		mov	r1, #7
  63 0034 8A43     		bic	r2, r1
 668:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
  64              		.loc 1 668 0
  65 0036 0121     		mov	r1, #1
  66 0038 0A43     		orr	r2, r1
 667:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
  67              		.loc 1 667 0
  68 003a 1A60     		str	r2, [r3]
 669:Generated_Source\PSoC4/CyLFClk.h ****     }
  69              		.loc 1 669 0
  70 003c BD46     		mov	sp, r7
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 14


  71              		@ sp needed
  72 003e 80BD     		pop	{r7, pc}
  73              	.L3:
  74              		.align	2
  75              	.L2:
  76 0040 00000640 		.word	1074135040
  77 0044 000F0640 		.word	1074138880
  78              		.cfi_endproc
  79              	.LFE0:
  80              		.size	CySysClkWcoSetHighPowerMode, .-CySysClkWcoSetHighPowerMode
  81              		.bss
  82              		.align	2
  83              	disableTimerServicedIsr:
  84 0000 00000000 		.space	4
  85              		.data
  86              		.align	2
  87              		.type	timerIsrMask, %object
  88              		.size	timerIsrMask, 4
  89              	timerIsrMask:
  90 0000 04040400 		.word	263172
  91              		.section	.rodata
  92              		.align	2
  93              		.type	counterTimerIntMaskTbl, %object
  94              		.size	counterTimerIntMaskTbl, 12
  95              	counterTimerIntMaskTbl:
  96 0000 04000000 		.word	4
  97 0004 00040000 		.word	1024
  98 0008 00000400 		.word	262144
  99              		.bss
 100              		.align	2
 101              	cySysTimerCallback:
 102 0004 00000000 		.space	12
 102      00000000 
 102      00000000 
 103              		.align	2
 104              	cySysWdtCallback:
 105 0010 00000000 		.space	4
 106              		.section	.text.CySysClkIloStart,"ax",%progbits
 107              		.align	2
 108              		.global	CySysClkIloStart
 109              		.code	16
 110              		.thumb_func
 111              		.type	CySysClkIloStart, %function
 112              	CySysClkIloStart:
 113              	.LFB1:
 114              		.file 2 "Generated_Source\\PSoC4\\CyLFClk.c"
   1:Generated_Source\PSoC4/CyLFClk.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.c **** * \file .c
   3:Generated_Source\PSoC4/CyLFClk.c **** * \version 1.10
   4:Generated_Source\PSoC4/CyLFClk.c **** *
   5:Generated_Source\PSoC4/CyLFClk.c **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.c **** *  This file provides the source code for configuring watchdog timers WDTs, 
   7:Generated_Source\PSoC4/CyLFClk.c **** *  low frequency clocks (LFCLK) and the Real-time Clock (RTC) component in
   8:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC Creator for the PSoC 4 families.
   9:Generated_Source\PSoC4/CyLFClk.c **** *
  10:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
  11:Generated_Source\PSoC4/CyLFClk.c **** * \copyright
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 15


  12:Generated_Source\PSoC4/CyLFClk.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CyLFClk.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CyLFClk.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CyLFClk.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CyLFClk.c **** 
  18:Generated_Source\PSoC4/CyLFClk.c **** 
  19:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLFClk.h"
  20:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLib.h"
  21:Generated_Source\PSoC4/CyLFClk.c **** 
  22:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
  23:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void);
  24:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
  25:Generated_Source\PSoC4/CyLFClk.c **** 
  26:Generated_Source\PSoC4/CyLFClk.c **** 
  27:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
  28:Generated_Source\PSoC4/CyLFClk.c ****     /* Default Ilo Trim Register value for ILO trimming*/
  29:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint16 defaultIloTrimRegValue = CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE;
  30:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
  31:Generated_Source\PSoC4/CyLFClk.c **** 
  32:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  33:Generated_Source\PSoC4/CyLFClk.c ****     /* CySysClkLfclkPosedgeCatch() / CySysClkLfclkPosedgeRestore() */
  34:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Enabled = 0u;
  35:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Mode    = CY_SYS_WDT_MODE_NONE;
  36:Generated_Source\PSoC4/CyLFClk.c **** 
  37:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableServicedIsr = 0uL;
  38:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 wdtIsrMask = CY_SYS_WDT_COUNTER0_INT |\
  39:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER1_INT |\
  40:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER2_INT;
  41:Generated_Source\PSoC4/CyLFClk.c **** 
  42:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterIntMaskTbl[CY_WDT_NUM_OF_WDT] = {CY_SYS_WDT_COUNTER0_INT,
  43:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER1_INT,
  44:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER2_INT};
  45:Generated_Source\PSoC4/CyLFClk.c **** 
  46:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void);
  47:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void);
  48:Generated_Source\PSoC4/CyLFClk.c **** 
  49:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void);
  50:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void);
  51:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  52:Generated_Source\PSoC4/CyLFClk.c **** 
  53:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  54:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void);
  55:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableTimerServicedIsr = 0uL;
  56:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 timerIsrMask = CY_SYS_TIMER0_INT |\
  57:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER1_INT |\
  58:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER2_INT;
  59:Generated_Source\PSoC4/CyLFClk.c **** 
  60:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterTimerIntMaskTbl[CY_SYS_NUM_OF_TIMERS] = {CY_SYS_TIMER0_INT,
  61:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER1_INT,
  62:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER2_INT};
  63:Generated_Source\PSoC4/CyLFClk.c **** 
  64:Generated_Source\PSoC4/CyLFClk.c ****     static cyTimerCallback cySysTimerCallback[CY_SYS_NUM_OF_TIMERS] = {(void *)0, (void *)0, (void 
  65:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_DWT_EN) */
  66:Generated_Source\PSoC4/CyLFClk.c **** 
  67:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  68:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback[CY_WDT_NUM_OF_WDT] = {(void *)0, (void *)0, (void *)0};
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 16


  69:Generated_Source\PSoC4/CyLFClk.c **** #else
  70:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback = (void *)0;
  71:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLFClk.c **** 
  73:Generated_Source\PSoC4/CyLFClk.c **** 
  74:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  75:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStart
  76:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  77:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  78:Generated_Source\PSoC4/CyLFClk.c **** *  Enables ILO.
  79:Generated_Source\PSoC4/CyLFClk.c **** *
  80:Generated_Source\PSoC4/CyLFClk.c **** *  Refer to the device datasheet for the ILO startup time.
  81:Generated_Source\PSoC4/CyLFClk.c **** *
  82:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  83:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStart(void)
  84:Generated_Source\PSoC4/CyLFClk.c **** {
 115              		.loc 2 84 0
 116              		.cfi_startproc
 117 0000 80B5     		push	{r7, lr}
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 7, -8
 120              		.cfi_offset 14, -4
 121 0002 00AF     		add	r7, sp, #0
 122              		.cfi_def_cfa_register 7
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
 123              		.loc 2 85 0
 124 0004 044B     		ldr	r3, .L5
 125 0006 044A     		ldr	r2, .L5
 126 0008 1268     		ldr	r2, [r2]
 127 000a 8021     		mov	r1, #128
 128 000c 0906     		lsl	r1, r1, #24
 129 000e 0A43     		orr	r2, r1
 130 0010 1A60     		str	r2, [r3]
  86:Generated_Source\PSoC4/CyLFClk.c **** }
 131              		.loc 2 86 0
 132 0012 BD46     		mov	sp, r7
 133              		@ sp needed
 134 0014 80BD     		pop	{r7, pc}
 135              	.L6:
 136 0016 C046     		.align	2
 137              	.L5:
 138 0018 2C000340 		.word	1073938476
 139              		.cfi_endproc
 140              	.LFE1:
 141              		.size	CySysClkIloStart, .-CySysClkIloStart
 142              		.section	.text.CySysClkIloStop,"ax",%progbits
 143              		.align	2
 144              		.global	CySysClkIloStop
 145              		.code	16
 146              		.thumb_func
 147              		.type	CySysClkIloStop, %function
 148              	CySysClkIloStop:
 149              	.LFB2:
  87:Generated_Source\PSoC4/CyLFClk.c **** 
  88:Generated_Source\PSoC4/CyLFClk.c **** 
  89:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStop
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 17


  91:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  92:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  93:Generated_Source\PSoC4/CyLFClk.c **** *  Disables the ILO.
  94:Generated_Source\PSoC4/CyLFClk.c **** *
  95:Generated_Source\PSoC4/CyLFClk.c **** *  This function has no effect if WDT is locked (CySysWdtLock() is
  96:Generated_Source\PSoC4/CyLFClk.c **** *  called). Call CySysWdtUnlock() to unlock WDT and stop ILO.
  97:Generated_Source\PSoC4/CyLFClk.c **** *
  98:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 / PSoC 4200: Note that ILO is required for WDT's operation.
  99:Generated_Source\PSoC4/CyLFClk.c **** *
 100:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / 
 101:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M:
 102:Generated_Source\PSoC4/CyLFClk.c **** *  Stopping ILO affects the peripheral clocked by LFCLK, if
 103:Generated_Source\PSoC4/CyLFClk.c **** *  LFCLK is configured to be sourced by ILO.
 104:Generated_Source\PSoC4/CyLFClk.c **** *
 105:Generated_Source\PSoC4/CyLFClk.c **** *  If the ILO is disabled, all blocks run by ILO will stop functioning.
 106:Generated_Source\PSoC4/CyLFClk.c **** *
 107:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStop(void)
 109:Generated_Source\PSoC4/CyLFClk.c **** {
 150              		.loc 2 109 0
 151              		.cfi_startproc
 152 0000 80B5     		push	{r7, lr}
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 7, -8
 155              		.cfi_offset 14, -4
 156 0002 00AF     		add	r7, sp, #0
 157              		.cfi_def_cfa_register 7
 110:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 111:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 112:Generated_Source\PSoC4/CyLFClk.c **** 
 113:Generated_Source\PSoC4/CyLFClk.c ****         /* Do nothing if WDT is locked or ILO is disabled */
 114:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtLocked())
 115:Generated_Source\PSoC4/CyLFClk.c ****         {
 116:Generated_Source\PSoC4/CyLFClk.c ****             if (0u != CySysClkIloEnabled())
 117:Generated_Source\PSoC4/CyLFClk.c ****             {
 118:Generated_Source\PSoC4/CyLFClk.c **** 
 119:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 120:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_ILO == CySysClkGetLfclkSource())
 121:Generated_Source\PSoC4/CyLFClk.c ****                 {
 122:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 123:Generated_Source\PSoC4/CyLFClk.c **** 
 124:Generated_Source\PSoC4/CyLFClk.c ****                 interruptState = CyEnterCriticalSection();
 125:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 126:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 127:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 128:Generated_Source\PSoC4/CyLFClk.c ****                 CyExitCriticalSection(interruptState);
 129:Generated_Source\PSoC4/CyLFClk.c **** 
 130:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 131:Generated_Source\PSoC4/CyLFClk.c ****                 }
 132:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 133:Generated_Source\PSoC4/CyLFClk.c ****                 {
 134:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 135:Generated_Source\PSoC4/CyLFClk.c ****                 }
 136:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 137:Generated_Source\PSoC4/CyLFClk.c **** 
 138:Generated_Source\PSoC4/CyLFClk.c ****             }
 139:Generated_Source\PSoC4/CyLFClk.c ****         }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 18


 140:Generated_Source\PSoC4/CyLFClk.c ****     #else
 141:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENABLE);
 158              		.loc 2 141 0
 159 0004 034B     		ldr	r3, .L8
 160 0006 034A     		ldr	r2, .L8
 161 0008 1268     		ldr	r2, [r2]
 162 000a 5200     		lsl	r2, r2, #1
 163 000c 5208     		lsr	r2, r2, #1
 164 000e 1A60     		str	r2, [r3]
 142:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 143:Generated_Source\PSoC4/CyLFClk.c **** }
 165              		.loc 2 143 0
 166 0010 BD46     		mov	sp, r7
 167              		@ sp needed
 168 0012 80BD     		pop	{r7, pc}
 169              	.L9:
 170              		.align	2
 171              	.L8:
 172 0014 2C000340 		.word	1073938476
 173              		.cfi_endproc
 174              	.LFE2:
 175              		.size	CySysClkIloStop, .-CySysClkIloStop
 176              		.section	.text.CySysClkIloStartMeasurement,"ax",%progbits
 177              		.align	2
 178              		.global	CySysClkIloStartMeasurement
 179              		.code	16
 180              		.thumb_func
 181              		.type	CySysClkIloStartMeasurement, %function
 182              	CySysClkIloStartMeasurement:
 183              	.LFB3:
 144:Generated_Source\PSoC4/CyLFClk.c **** 
 145:Generated_Source\PSoC4/CyLFClk.c **** 
 146:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 147:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStartMeasurement
 148:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 149:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 150:Generated_Source\PSoC4/CyLFClk.c **** * Starts the ILO accuracy measurement.
 151:Generated_Source\PSoC4/CyLFClk.c **** *
 152:Generated_Source\PSoC4/CyLFClk.c **** * This function is non-blocking and needs to be called before using the 
 153:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloTrim() and CySysClkIloCompensate() API.
 154:Generated_Source\PSoC4/CyLFClk.c **** *
 155:Generated_Source\PSoC4/CyLFClk.c **** * This API configures measurement counters to be sourced by SysClk (Counter 1)
 156:Generated_Source\PSoC4/CyLFClk.c **** * and ILO (Counter 2). 
 157:Generated_Source\PSoC4/CyLFClk.c **** *
 158:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 159:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 160:Generated_Source\PSoC4/CyLFClk.c **** *
 161:Generated_Source\PSoC4/CyLFClk.c **** * In addition, this API stores the factory ILO trim settings on the first call 
 162:Generated_Source\PSoC4/CyLFClk.c **** * after reset. This stored factory setting is used by the 
 163:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloRestoreFactoryTrim() API to restore the ILO factory trim. 
 164:Generated_Source\PSoC4/CyLFClk.c **** * Hence, it is important to call this API before restoring the ILO 
 165:Generated_Source\PSoC4/CyLFClk.c **** * factory trim settings.
 166:Generated_Source\PSoC4/CyLFClk.c **** *
 167:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 168:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStartMeasurement(void)
 169:Generated_Source\PSoC4/CyLFClk.c **** {
 184              		.loc 2 169 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 19


 185              		.cfi_startproc
 186 0000 80B5     		push	{r7, lr}
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 7, -8
 189              		.cfi_offset 14, -4
 190 0002 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
 170:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 171:Generated_Source\PSoC4/CyLFClk.c ****     static uint8 iloTrimTrig = 0u;
 172:Generated_Source\PSoC4/CyLFClk.c **** 
 173:Generated_Source\PSoC4/CyLFClk.c ****     /* Write default ILO trim value while ILO starting ( Cypress ID 225244 )*/
 174:Generated_Source\PSoC4/CyLFClk.c ****     if (0u == iloTrimTrig)
 175:Generated_Source\PSoC4/CyLFClk.c ****     {
 176:Generated_Source\PSoC4/CyLFClk.c ****         defaultIloTrimRegValue = ((uint8)(CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK));
 177:Generated_Source\PSoC4/CyLFClk.c ****         iloTrimTrig = 1u;
 178:Generated_Source\PSoC4/CyLFClk.c ****     }
 179:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 180:Generated_Source\PSoC4/CyLFClk.c **** 
 181:Generated_Source\PSoC4/CyLFClk.c ****     /* Configure measurement counters to source by SysClk (Counter 1) and ILO (Counter 2)*/
 182:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG = (CY_SYS_CLK_DFT_REG & (uint32) ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK) |
 192              		.loc 2 182 0
 193 0004 094B     		ldr	r3, .L11
 194 0006 094A     		ldr	r2, .L11
 195 0008 1268     		ldr	r2, [r2]
 196 000a 0949     		ldr	r1, .L11+4
 197 000c 0A40     		and	r2, r1
 198 000e 8021     		mov	r1, #128
 199 0010 4900     		lsl	r1, r1, #1
 200 0012 0A43     		orr	r2, r1
 201 0014 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 184:Generated_Source\PSoC4/CyLFClk.c **** 
 185:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_TST_DDFT_CTRL_REG = (CY_SYS_TST_DDFT_CTRL_REG & (uint32) ~ CY_SYS_TST_DDFT_CTRL_REG_DEFA
 202              		.loc 2 185 0
 203 0016 074B     		ldr	r3, .L11+8
 204 0018 064A     		ldr	r2, .L11+8
 205 001a 1268     		ldr	r2, [r2]
 206 001c 0649     		ldr	r1, .L11+12
 207 001e 0A40     		and	r2, r1
 208 0020 0649     		ldr	r1, .L11+16
 209 0022 0A43     		orr	r2, r1
 210 0024 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 187:Generated_Source\PSoC4/CyLFClk.c **** }
 211              		.loc 2 187 0
 212 0026 BD46     		mov	sp, r7
 213              		@ sp needed
 214 0028 80BD     		pop	{r7, pc}
 215              	.L12:
 216 002a C046     		.align	2
 217              	.L11:
 218 002c 34000340 		.word	1073938484
 219 0030 FFF0FFFF 		.word	-3841
 220 0034 18000340 		.word	1073938456
 221 0038 F0F0FFFF 		.word	-3856
 222 003c 08090000 		.word	2312
 223              		.cfi_endproc
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 20


 224              	.LFE3:
 225              		.size	CySysClkIloStartMeasurement, .-CySysClkIloStartMeasurement
 226              		.section	.text.CySysClkIloStopMeasurement,"ax",%progbits
 227              		.align	2
 228              		.global	CySysClkIloStopMeasurement
 229              		.code	16
 230              		.thumb_func
 231              		.type	CySysClkIloStopMeasurement, %function
 232              	CySysClkIloStopMeasurement:
 233              	.LFB4:
 188:Generated_Source\PSoC4/CyLFClk.c **** 
 189:Generated_Source\PSoC4/CyLFClk.c **** 
 190:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 191:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStopMeasurement
 192:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 193:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 194:Generated_Source\PSoC4/CyLFClk.c **** * Stops the ILO accuracy measurement.
 195:Generated_Source\PSoC4/CyLFClk.c **** *
 196:Generated_Source\PSoC4/CyLFClk.c **** * Calling this function immediately stops the the ILO frequency measurement.
 197:Generated_Source\PSoC4/CyLFClk.c **** * This function should be called before placing the device to deepsleep, if 
 198:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API was called before. 
 199:Generated_Source\PSoC4/CyLFClk.c **** *
 200:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 201:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStopMeasurement(void)
 202:Generated_Source\PSoC4/CyLFClk.c **** {
 234              		.loc 2 202 0
 235              		.cfi_startproc
 236 0000 80B5     		push	{r7, lr}
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 7, -8
 239              		.cfi_offset 14, -4
 240 0002 00AF     		add	r7, sp, #0
 241              		.cfi_def_cfa_register 7
 203:Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 204:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG &= ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK;
 242              		.loc 2 204 0
 243 0004 064B     		ldr	r3, .L14
 244 0006 064A     		ldr	r2, .L14
 245 0008 1268     		ldr	r2, [r2]
 246 000a 0649     		ldr	r1, .L14+4
 247 000c 0A40     		and	r2, r1
 248 000e 1A60     		str	r2, [r3]
 205:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 206:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_TST_DDFT_CTRL_REG &= ((uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 249              		.loc 2 206 0
 250 0010 054B     		ldr	r3, .L14+8
 251 0012 054A     		ldr	r2, .L14+8
 252 0014 1268     		ldr	r2, [r2]
 253 0016 0549     		ldr	r1, .L14+12
 254 0018 0A40     		and	r2, r1
 255 001a 1A60     		str	r2, [r3]
 207:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 208:Generated_Source\PSoC4/CyLFClk.c **** }
 256              		.loc 2 208 0
 257 001c BD46     		mov	sp, r7
 258              		@ sp needed
 259 001e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 21


 260              	.L15:
 261              		.align	2
 262              	.L14:
 263 0020 34000340 		.word	1073938484
 264 0024 FFF0FFFF 		.word	-3841
 265 0028 18000340 		.word	1073938456
 266 002c 0F0F0000 		.word	3855
 267              		.cfi_endproc
 268              	.LFE4:
 269              		.size	CySysClkIloStopMeasurement, .-CySysClkIloStopMeasurement
 270              		.global	__aeabi_uidiv
 271              		.section	.text.CySysClkIloCompensate,"ax",%progbits
 272              		.align	2
 273              		.global	CySysClkIloCompensate
 274              		.code	16
 275              		.thumb_func
 276              		.type	CySysClkIloCompensate, %function
 277              	CySysClkIloCompensate:
 278              	.LFB5:
 209:Generated_Source\PSoC4/CyLFClk.c **** 
 210:Generated_Source\PSoC4/CyLFClk.c **** 
 211:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 212:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloCompensate
 213:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 214:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 215:Generated_Source\PSoC4/CyLFClk.c **** * This API measures the current ILO accuracy.
 216:Generated_Source\PSoC4/CyLFClk.c **** *
 217:Generated_Source\PSoC4/CyLFClk.c **** * Basing on the measured frequency the required number of ILO cycles for a 
 218:Generated_Source\PSoC4/CyLFClk.c **** * given delay (in microseconds) is obtained. The desired delay that needs to 
 219:Generated_Source\PSoC4/CyLFClk.c **** * be compensated is passed through the desiredDelay parameter. The compensated 
 220:Generated_Source\PSoC4/CyLFClk.c **** * cycle count is returned through the compesatedCycles pointer.
 221:Generated_Source\PSoC4/CyLFClk.c **** * The compensated ILO cycles can then be used to define the WDT period value, 
 222:Generated_Source\PSoC4/CyLFClk.c **** * effectively compensating for the ILO inaccuracy and allowing a more 
 223:Generated_Source\PSoC4/CyLFClk.c **** * accurate WDT interrupt generation.
 224:Generated_Source\PSoC4/CyLFClk.c **** *
 225:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API should be called prior to calling this API. 
 226:Generated_Source\PSoC4/CyLFClk.c **** *
 227:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 228:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 229:Generated_Source\PSoC4/CyLFClk.c **** *
 230:Generated_Source\PSoC4/CyLFClk.c **** * \note If the System clock frequency is changed in runtime, the CyDelayFreq() 
 231:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 232:Generated_Source\PSoC4/CyLFClk.c **** * called before calling a next CySysClkIloCompensate().
 233:Generated_Source\PSoC4/CyLFClk.c **** *
 234:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS.
 235:Generated_Source\PSoC4/CyLFClk.c **** *
 236:Generated_Source\PSoC4/CyLFClk.c **** * \param desiredDelay Required delay in microseconds.
 237:Generated_Source\PSoC4/CyLFClk.c **** *
 238:Generated_Source\PSoC4/CyLFClk.c **** * \param *compensatedCycles The pointer to the variable in which the required
 239:Generated_Source\PSoC4/CyLFClk.c **** * number of ILO cycles for the given delay will be returned.
 240:Generated_Source\PSoC4/CyLFClk.c **** *
 241:Generated_Source\PSoC4/CyLFClk.c **** * \details
 242:Generated_Source\PSoC4/CyLFClk.c **** * The value returned in *compensatedCycles pointer is not valid until the 
 243:Generated_Source\PSoC4/CyLFClk.c **** * function returns CYRET_SUCCESS.
 244:Generated_Source\PSoC4/CyLFClk.c **** *
 245:Generated_Source\PSoC4/CyLFClk.c **** * The desiredDelay parameter value should be in next range: <br>From 100 to 
 246:Generated_Source\PSoC4/CyLFClk.c **** * 2 000 000 microseconds for PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 22


 247:Generated_Source\PSoC4/CyLFClk.c **** * Coprocessor devices.<br>From 100 to 4 000 000 000 microseconds for 
 248:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE /
 249:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L / PSoC 4100M /PSoC 4200M devices.
 250:Generated_Source\PSoC4/CyLFClk.c **** *
 251:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - The compensation process is complete and the 
 252:Generated_Source\PSoC4/CyLFClk.c **** * compensated cycles value is returned in the compensatedCycles pointer.
 253:Generated_Source\PSoC4/CyLFClk.c **** *
 254:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. It is 
 255:Generated_Source\PSoC4/CyLFClk.c **** * strongly recommended to do not make pauses between API calling. The 
 256:Generated_Source\PSoC4/CyLFClk.c **** * function should be called repeatedly until the API returns CYRET_SUCCESS.
 257:Generated_Source\PSoC4/CyLFClk.c **** *
 258:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates that measurement not started. 
 259:Generated_Source\PSoC4/CyLFClk.c **** * The user should call CySysClkIloStartMeasurement() API before calling 
 260:Generated_Source\PSoC4/CyLFClk.c **** * this API.
 261:Generated_Source\PSoC4/CyLFClk.c **** *
 262:Generated_Source\PSoC4/CyLFClk.c **** * \note For a correct WDT or DeepSleep Timers functioning with ILO compensating 
 263:Generated_Source\PSoC4/CyLFClk.c **** * the CySysClkIloCompensate() should be called before WDT or DeepSleep Timers 
 264:Generated_Source\PSoC4/CyLFClk.c **** * enabling.
 265:Generated_Source\PSoC4/CyLFClk.c **** *
 266:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 267:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloCompensate(uint32 desiredDelay , uint32* compensatedCycles)
 268:Generated_Source\PSoC4/CyLFClk.c **** {
 279              		.loc 2 268 0
 280              		.cfi_startproc
 281 0000 90B5     		push	{r4, r7, lr}
 282              		.cfi_def_cfa_offset 12
 283              		.cfi_offset 4, -12
 284              		.cfi_offset 7, -8
 285              		.cfi_offset 14, -4
 286 0002 87B0     		sub	sp, sp, #28
 287              		.cfi_def_cfa_offset 40
 288 0004 00AF     		add	r7, sp, #0
 289              		.cfi_def_cfa_register 7
 290 0006 7860     		str	r0, [r7, #4]
 291 0008 3960     		str	r1, [r7]
 269:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 270:Generated_Source\PSoC4/CyLFClk.c ****     uint32 desiredDelayInCounts;
 271:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 272:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 273:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 274:Generated_Source\PSoC4/CyLFClk.c **** 
 275:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 292              		.loc 2 275 0
 293 000a 464B     		ldr	r3, .L28
 294 000c 1B68     		ldr	r3, [r3]
 295 000e 464A     		ldr	r2, .L28+4
 296 0010 1340     		and	r3, r2
 297 0012 FB60     		str	r3, [r7, #12]
 276:Generated_Source\PSoC4/CyLFClk.c **** 
 277:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if CySysStartMeasurement was called before */
 278:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) && 
 298              		.loc 2 278 0
 299 0014 FA68     		ldr	r2, [r7, #12]
 300 0016 8023     		mov	r3, #128
 301 0018 5B00     		lsl	r3, r3, #1
 302 001a 9A42     		cmp	r2, r3
 303 001c 00D0     		beq	.LCB222
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 23


 304 001e 7AE0     		b	.L17	@long jump
 305              	.LCB222:
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 306              		.loc 2 279 0 discriminator 1
 307 0020 424B     		ldr	r3, .L28+8
 308 0022 1B68     		ldr	r3, [r3]
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 309              		.loc 2 278 0 discriminator 1
 310 0024 424A     		ldr	r2, .L28+12
 311 0026 9342     		cmp	r3, r2
 312 0028 00D0     		beq	.LCB227
 313 002a 74E0     		b	.L17	@long jump
 314              	.LCB227:
 315              		.loc 2 279 0
 316 002c 7B68     		ldr	r3, [r7, #4]
 317 002e 414A     		ldr	r2, .L28+16
 318 0030 9342     		cmp	r3, r2
 319 0032 00D9     		bls	.LCB231
 320 0034 6FE0     		b	.L17	@long jump
 321              	.LCB231:
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 322              		.loc 2 280 0
 323 0036 7B68     		ldr	r3, [r7, #4]
 324 0038 632B     		cmp	r3, #99
 325 003a 6CD9     		bls	.L17
 281:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 326              		.loc 2 281 0
 327 003c 3B68     		ldr	r3, [r7]
 328 003e 002B     		cmp	r3, #0
 329 0040 69D0     		beq	.L17
 282:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 283:Generated_Source\PSoC4/CyLFClk.c ****     {
 284:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_TRIM_OR_COMP_FINISHED != compensateRunningStatus)
 330              		.loc 2 284 0
 331 0042 3D4B     		ldr	r3, .L28+20
 332 0044 1B68     		ldr	r3, [r3]
 333 0046 002B     		cmp	r3, #0
 334 0048 59D0     		beq	.L18
 285:Generated_Source\PSoC4/CyLFClk.c ****         {
 286:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait until counter 1 stopped counting and after it calculate compensated cycles */
 287:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 335              		.loc 2 287 0
 336 004a 3C4B     		ldr	r3, .L28+24
 337 004c 1B68     		ldr	r3, [r3]
 338 004e 002B     		cmp	r3, #0
 339 0050 52DA     		bge	.L19
 288:Generated_Source\PSoC4/CyLFClk.c ****             {
 289:Generated_Source\PSoC4/CyLFClk.c ****                 if (0u != CY_SYS_CNT_REG2_REG)
 340              		.loc 2 289 0
 341 0052 3B4B     		ldr	r3, .L28+28
 342 0054 1B68     		ldr	r3, [r3]
 343 0056 002B     		cmp	r3, #0
 344 0058 4BD0     		beq	.L20
 290:Generated_Source\PSoC4/CyLFClk.c ****                 {
 291:Generated_Source\PSoC4/CyLFClk.c ****                     /* Calculate required number of ILO cycles for given delay */
 292:Generated_Source\PSoC4/CyLFClk.c ****                     #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLFClk.c ****                         if (CY_SYS_CLK_DELAY_COUNTS_LIMIT < desiredDelay)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 24


 294:Generated_Source\PSoC4/CyLFClk.c ****                         {
 295:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = (desiredDelay / CY_SYS_CLK_ILO_PERIOD);
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 297:Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 298:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 299:Generated_Source\PSoC4/CyLFClk.c ****                         }
 300:Generated_Source\PSoC4/CyLFClk.c ****                         else
 301:Generated_Source\PSoC4/CyLFClk.c ****                         {
 302:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + 
 303:Generated_Source\PSoC4/CyLFClk.c ****                                                      CY_SYS_CLK_HALF_OF_CLOCK) / CY_SYS_CLK_ILO_PER
 304:Generated_Source\PSoC4/CyLFClk.c **** 
 305:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 306:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 307:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 308:Generated_Source\PSoC4/CyLFClk.c ****                         }
 309:Generated_Source\PSoC4/CyLFClk.c ****                     #else /* (CY_IP_SRSSLT) */
 310:Generated_Source\PSoC4/CyLFClk.c ****                         desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + CY_SYS_
 345              		.loc 2 310 0
 346 005a 7B68     		ldr	r3, [r7, #4]
 347 005c 6422     		mov	r2, #100
 348 005e 5343     		mul	r3, r2
 349 0060 384A     		ldr	r2, .L28+32
 350 0062 9446     		mov	ip, r2
 351 0064 6344     		add	r3, r3, ip
 352 0066 181C     		mov	r0, r3
 353 0068 3749     		ldr	r1, .L28+36
 354 006a FFF7FEFF 		bl	__aeabi_uidiv
 355 006e 031C     		mov	r3, r0
 356 0070 BB60     		str	r3, [r7, #8]
 311:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 312:Generated_Source\PSoC4/CyLFClk.c ****                         if(CY_SYS_CLK_MAX_LITE_NUMBER < desiredDelayInCounts)
 357              		.loc 2 312 0
 358 0072 BB68     		ldr	r3, [r7, #8]
 359 0074 354A     		ldr	r2, .L28+40
 360 0076 9342     		cmp	r3, r2
 361 0078 1CD9     		bls	.L21
 313:Generated_Source\PSoC4/CyLFClk.c ****                         {
 314:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydel
 362              		.loc 2 314 0
 363 007a 314B     		ldr	r3, .L28+28
 364 007c 1A68     		ldr	r2, [r3]
 365 007e 344B     		ldr	r3, .L28+44
 366 0080 1B68     		ldr	r3, [r3]
 367 0082 5A43     		mul	r2, r3
 368 0084 324B     		ldr	r3, .L28+44
 369 0086 1B68     		ldr	r3, [r3]
 370 0088 9B0A     		lsr	r3, r3, #10
 371 008a 101C     		mov	r0, r2
 372 008c 191C     		mov	r1, r3
 373 008e FFF7FEFF 		bl	__aeabi_uidiv
 374 0092 031C     		mov	r3, r0
 315:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 375              		.loc 2 315 0
 376 0094 181C     		mov	r0, r3
 377 0096 2821     		mov	r1, #40
 378 0098 FFF7FEFF 		bl	__aeabi_uidiv
 379 009c 031C     		mov	r3, r0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 25


 380 009e 1C1C     		mov	r4, r3
 316:Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
 381              		.loc 2 316 0
 382 00a0 BB68     		ldr	r3, [r7, #8]
 383 00a2 181C     		mov	r0, r3
 384 00a4 FA23     		mov	r3, #250
 385 00a6 9900     		lsl	r1, r3, #2
 386 00a8 FFF7FEFF 		bl	__aeabi_uidiv
 387 00ac 031C     		mov	r3, r0
 314:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 388              		.loc 2 314 0
 389 00ae 6343     		mul	r3, r4
 390 00b0 7B61     		str	r3, [r7, #20]
 391 00b2 15E0     		b	.L22
 392              	.L21:
 317:Generated_Source\PSoC4/CyLFClk.c ****                         }
 318:Generated_Source\PSoC4/CyLFClk.c ****                         else
 319:Generated_Source\PSoC4/CyLFClk.c ****                         {
 320:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 393              		.loc 2 320 0
 394 00b4 224B     		ldr	r3, .L28+28
 395 00b6 1A68     		ldr	r2, [r3]
 396 00b8 254B     		ldr	r3, .L28+44
 397 00ba 1B68     		ldr	r3, [r3]
 398 00bc 5A43     		mul	r2, r3
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 399              		.loc 2 321 0
 400 00be 244B     		ldr	r3, .L28+44
 401 00c0 1B68     		ldr	r3, [r3]
 402 00c2 9B0A     		lsr	r3, r3, #10
 320:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 403              		.loc 2 320 0
 404 00c4 101C     		mov	r0, r2
 405 00c6 191C     		mov	r1, r3
 406 00c8 FFF7FEFF 		bl	__aeabi_uidiv
 407 00cc 031C     		mov	r3, r0
 408 00ce 1A1C     		mov	r2, r3
 409              		.loc 2 321 0
 410 00d0 BB68     		ldr	r3, [r7, #8]
 411 00d2 5343     		mul	r3, r2
 320:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 412              		.loc 2 320 0
 413 00d4 181C     		mov	r0, r3
 414 00d6 1F49     		ldr	r1, .L28+48
 415 00d8 FFF7FEFF 		bl	__aeabi_uidiv
 416 00dc 031C     		mov	r3, r0
 417 00de 7B61     		str	r3, [r7, #20]
 418              	.L22:
 322:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 323:Generated_Source\PSoC4/CyLFClk.c ****                         }
 324:Generated_Source\PSoC4/CyLFClk.c ****                     #endif /* (CY_IP_SRSSV2) */
 325:Generated_Source\PSoC4/CyLFClk.c **** 
 326:Generated_Source\PSoC4/CyLFClk.c ****                     *compensatedCycles = iloCompensatedCycles;
 419              		.loc 2 326 0
 420 00e0 3B68     		ldr	r3, [r7]
 421 00e2 7A69     		ldr	r2, [r7, #20]
 422 00e4 1A60     		str	r2, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 26


 327:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 423              		.loc 2 327 0
 424 00e6 144B     		ldr	r3, .L28+20
 425 00e8 0022     		mov	r2, #0
 426 00ea 1A60     		str	r2, [r3]
 328:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 427              		.loc 2 328 0
 428 00ec 0023     		mov	r3, #0
 429 00ee 3B61     		str	r3, [r7, #16]
 430 00f0 10E0     		b	.L25
 431              	.L20:
 329:Generated_Source\PSoC4/CyLFClk.c ****                 }
 330:Generated_Source\PSoC4/CyLFClk.c ****                 else
 331:Generated_Source\PSoC4/CyLFClk.c ****                 {
 332:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus  = CYRET_INVALID_STATE;
 432              		.loc 2 332 0
 433 00f2 1123     		mov	r3, #17
 434 00f4 3B61     		str	r3, [r7, #16]
 435 00f6 0DE0     		b	.L25
 436              	.L19:
 333:Generated_Source\PSoC4/CyLFClk.c ****                 }
 334:Generated_Source\PSoC4/CyLFClk.c ****             }
 335:Generated_Source\PSoC4/CyLFClk.c ****             else
 336:Generated_Source\PSoC4/CyLFClk.c ****             {
 337:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 437              		.loc 2 337 0
 438 00f8 0723     		mov	r3, #7
 439 00fa 3B61     		str	r3, [r7, #16]
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 440              		.loc 2 284 0
 441 00fc 0DE0     		b	.L26
 442              	.L18:
 338:Generated_Source\PSoC4/CyLFClk.c ****             }
 339:Generated_Source\PSoC4/CyLFClk.c ****         }
 340:Generated_Source\PSoC4/CyLFClk.c ****         else
 341:Generated_Source\PSoC4/CyLFClk.c ****         {
 342:Generated_Source\PSoC4/CyLFClk.c ****             /* Reload CNTR 1 count value for next measurement cycle*/
 343:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CNT_REG1_REG = (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER);
 443              		.loc 2 343 0
 444 00fe 0F4A     		ldr	r2, .L28+24
 445 0100 134B     		ldr	r3, .L28+44
 446 0102 1B68     		ldr	r3, [r3]
 447 0104 9B0A     		lsr	r3, r3, #10
 448 0106 1360     		str	r3, [r2]
 344:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 449              		.loc 2 344 0
 450 0108 0B4B     		ldr	r3, .L28+20
 451 010a 0122     		mov	r2, #1
 452 010c 1A60     		str	r2, [r3]
 345:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 453              		.loc 2 345 0
 454 010e 0723     		mov	r3, #7
 455 0110 3B61     		str	r3, [r7, #16]
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 456              		.loc 2 284 0
 457 0112 02E0     		b	.L26
 458              	.L25:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 27


 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 459              		.loc 2 284 0 is_stmt 0 discriminator 2
 460 0114 01E0     		b	.L26
 461              	.L17:
 346:Generated_Source\PSoC4/CyLFClk.c ****         }
 347:Generated_Source\PSoC4/CyLFClk.c ****     }
 348:Generated_Source\PSoC4/CyLFClk.c ****     else
 349:Generated_Source\PSoC4/CyLFClk.c ****     {
 350:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 462              		.loc 2 350 0 is_stmt 1
 463 0116 1123     		mov	r3, #17
 464 0118 3B61     		str	r3, [r7, #16]
 465              	.L26:
 351:Generated_Source\PSoC4/CyLFClk.c ****     }
 352:Generated_Source\PSoC4/CyLFClk.c **** 
 353:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 466              		.loc 2 353 0
 467 011a 3B69     		ldr	r3, [r7, #16]
 354:Generated_Source\PSoC4/CyLFClk.c **** }
 468              		.loc 2 354 0
 469 011c 181C     		mov	r0, r3
 470 011e BD46     		mov	sp, r7
 471 0120 07B0     		add	sp, sp, #28
 472              		@ sp needed
 473 0122 90BD     		pop	{r4, r7, pc}
 474              	.L29:
 475              		.align	2
 476              	.L28:
 477 0124 34000340 		.word	1073938484
 478 0128 0F0F0000 		.word	3855
 479 012c 18000340 		.word	1073938456
 480 0130 08090000 		.word	2312
 481 0134 80841E00 		.word	2000000
 482 0138 14000000 		.word	compensateRunningStatus.4775
 483 013c 1C000340 		.word	1073938460
 484 0140 20000340 		.word	1073938464
 485 0144 71020000 		.word	625
 486 0148 C4090000 		.word	2500
 487 014c 60D10000 		.word	53600
 488 0150 00000000 		.word	cydelayFreqHz
 489 0154 409C0000 		.word	40000
 490              		.cfi_endproc
 491              	.LFE5:
 492              		.size	CySysClkIloCompensate, .-CySysClkIloCompensate
 493              		.section	.text.CySysClkWcoStart,"ax",%progbits
 494              		.align	2
 495              		.global	CySysClkWcoStart
 496              		.code	16
 497              		.thumb_func
 498              		.type	CySysClkWcoStart, %function
 499              	CySysClkWcoStart:
 500              	.LFB6:
 355:Generated_Source\PSoC4/CyLFClk.c **** 
 356:Generated_Source\PSoC4/CyLFClk.c **** 
 357:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 358:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 359:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkIloEnabled
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 28


 360:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 361:Generated_Source\PSoC4/CyLFClk.c ****     *
 362:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 363:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the ILO enable state.
 364:Generated_Source\PSoC4/CyLFClk.c ****     *
 365:Generated_Source\PSoC4/CyLFClk.c ****     * \return
 366:Generated_Source\PSoC4/CyLFClk.c ****     * 1 if ILO is enabled, and 0 if ILO is disabled.
 367:Generated_Source\PSoC4/CyLFClk.c ****     *
 368:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 369:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************/
 370:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void)
 371:Generated_Source\PSoC4/CyLFClk.c ****     {
 372:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal to 0 */
 373:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_ILO_CONFIG_REG & (uint32)(CY_SYS_CLK_ILO_CONFIG_ENABLE))) ?
 374:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 375:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 0u);
 376:Generated_Source\PSoC4/CyLFClk.c ****     }
 377:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
 378:Generated_Source\PSoC4/CyLFClk.c **** 
 379:Generated_Source\PSoC4/CyLFClk.c **** 
 380:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 381:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 382:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloTrim
 383:Generated_Source\PSoC4/CyLFClk.c **** *****************************************************************************//**
 384:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 385:Generated_Source\PSoC4/CyLFClk.c **** * The API trims the ILO frequency to +/- 10% accuracy range using accurate 
 386:Generated_Source\PSoC4/CyLFClk.c **** * SysClk.
 387:Generated_Source\PSoC4/CyLFClk.c **** *
 388:Generated_Source\PSoC4/CyLFClk.c **** * The API can be blocking or non-blocking depending on the value of the mode 
 389:Generated_Source\PSoC4/CyLFClk.c **** * parameter passed. The accuracy of ILO after trimming in parts per thousand 
 390:Generated_Source\PSoC4/CyLFClk.c **** * is returned through the iloAccuracyInPPT pointer. A positive number indicates 
 391:Generated_Source\PSoC4/CyLFClk.c **** * that the ILO is running fast and a negative number indicates that the ILO is 
 392:Generated_Source\PSoC4/CyLFClk.c **** * running slowly. This error is relative to the error in the reference clock 
 393:Generated_Source\PSoC4/CyLFClk.c **** * (SysClk), so the absolute error will be higher and depends on the accuracy 
 394:Generated_Source\PSoC4/CyLFClk.c **** * of the reference.
 395:Generated_Source\PSoC4/CyLFClk.c **** *
 396:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to calling this 
 397:Generated_Source\PSoC4/CyLFClk.c **** * API. Otherwise it will return CYRET_INVALID_STATE as the measurement was not 
 398:Generated_Source\PSoC4/CyLFClk.c **** * started.
 399:Generated_Source\PSoC4/CyLFClk.c **** *
 400:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 401:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 402:Generated_Source\PSoC4/CyLFClk.c **** *
 403:Generated_Source\PSoC4/CyLFClk.c **** * \note If System clock frequency is changed in runtime, the CyDelayFreq() 
 404:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 405:Generated_Source\PSoC4/CyLFClk.c **** * called before next CySysClkIloCompensate() usage.
 406:Generated_Source\PSoC4/CyLFClk.c **** *
 407:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS
 408:Generated_Source\PSoC4/CyLFClk.c **** * or CYRET_TIMEOUT.
 409:Generated_Source\PSoC4/CyLFClk.c **** *
 410:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices with ILO trim capability. This excludes 
 411:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4000 / PSoC 4100 / PSoC 4200 / PSoC 4000S / PSoC 4100S / PSoC
 412:Generated_Source\PSoC4/CyLFClk.c **** * Analog Coprocessor devices.
 413:Generated_Source\PSoC4/CyLFClk.c **** *
 414:Generated_Source\PSoC4/CyLFClk.c **** * \param mode
 415:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_BLOCKING -  The function does not return until the ILO is 
 416:Generated_Source\PSoC4/CyLFClk.c **** * within +/-10% accuracy range or time out has occurred.<br>
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 29


 417:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_NON_BLOCKING - The function returns immediately after 
 418:Generated_Source\PSoC4/CyLFClk.c **** * performing a single iteration of the trim process. The function should be 
 419:Generated_Source\PSoC4/CyLFClk.c **** * called repeatedly until the trimming is completed successfully.
 420:Generated_Source\PSoC4/CyLFClk.c **** *
 421:Generated_Source\PSoC4/CyLFClk.c **** * \param *iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 422:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned.
 423:Generated_Source\PSoC4/CyLFClk.c **** *
 424:Generated_Source\PSoC4/CyLFClk.c **** * \details The value returned in *iloAccuracyInPPT pointer is not valid 
 425:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. ILO accuracy in PPT is given by:
 426:Generated_Source\PSoC4/CyLFClk.c **** *
 427:Generated_Source\PSoC4/CyLFClk.c **** * IloAccuracyInPPT = ((MeasuredIloFreq - DesiredIloFreq) * 
 428:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_PERTHOUSAND) / DesiredIloFreq);
 429:Generated_Source\PSoC4/CyLFClk.c **** *
 430:Generated_Source\PSoC4/CyLFClk.c **** * DesiredIloFreq  = 32000, CY_SYS_CLK_PERTHOUSAND = 1000;
 431:Generated_Source\PSoC4/CyLFClk.c **** *
 432:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates trimming is complete. This value indicates 
 433:Generated_Source\PSoC4/CyLFClk.c **** * trimming is successful and iloAccuracyInPPT is within +/- 10%.
 434:Generated_Source\PSoC4/CyLFClk.c **** *
 435:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. This is applicable 
 436:Generated_Source\PSoC4/CyLFClk.c **** * only for non-blocking mode.
 437:Generated_Source\PSoC4/CyLFClk.c **** *
 438:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful. You should 
 439:Generated_Source\PSoC4/CyLFClk.c **** * call CySysClkIloStartMeasurement() before calling this API.
 440:Generated_Source\PSoC4/CyLFClk.c **** *
 441:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_TIMEOUT - Indicates trimming was unsuccessful. This is applicable 
 442:Generated_Source\PSoC4/CyLFClk.c **** * only for blocking mode. Timeout means the trimming was tried 5 times without 
 443:Generated_Source\PSoC4/CyLFClk.c **** * success (i.e. ILO accuracy > +/- 10%). The user can call the API again for 
 444:Generated_Source\PSoC4/CyLFClk.c **** * another try or wait for some time before calling it again (to let the system 
 445:Generated_Source\PSoC4/CyLFClk.c **** * to settle to another operating point change in temperature etc.) and continue 
 446:Generated_Source\PSoC4/CyLFClk.c **** * using the previous trim value till the next call.
 447:Generated_Source\PSoC4/CyLFClk.c **** *
 448:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 449:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloTrim(uint32 mode, int32* iloAccuracyInPPT)
 450:Generated_Source\PSoC4/CyLFClk.c **** {
 451:Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 452:Generated_Source\PSoC4/CyLFClk.c ****     uint32 waitUntilCntr1Stops;
 453:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 454:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 455:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 456:Generated_Source\PSoC4/CyLFClk.c **** 
 457:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 458:Generated_Source\PSoC4/CyLFClk.c **** 
 459:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if DFT and CTRL registers were configures in CySysStartMeasurement*/
 460:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) &&
 461:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 462:Generated_Source\PSoC4/CyLFClk.c ****        (iloAccuracyInPPT != NULL))
 463:Generated_Source\PSoC4/CyLFClk.c ****     {
 464:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_BLOCKING == mode)
 465:Generated_Source\PSoC4/CyLFClk.c ****         {
 466:Generated_Source\PSoC4/CyLFClk.c ****             waitUntilCntr1Stops = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 467:Generated_Source\PSoC4/CyLFClk.c ****             do
 468:Generated_Source\PSoC4/CyLFClk.c ****             {
 469:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for measuring cycle*/
 470:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER; 
 471:Generated_Source\PSoC4/CyLFClk.c **** 
 472:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait until counter CNTR 1 will finish down-counting */
 473:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u == (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 30


 474:Generated_Source\PSoC4/CyLFClk.c ****                 {
 475:Generated_Source\PSoC4/CyLFClk.c ****                     waitUntilCntr1Stops--;
 476:Generated_Source\PSoC4/CyLFClk.c ****                     if (0u == waitUntilCntr1Stops)
 477:Generated_Source\PSoC4/CyLFClk.c ****                     {
 478:Generated_Source\PSoC4/CyLFClk.c ****                         break;
 479:Generated_Source\PSoC4/CyLFClk.c ****                     }
 480:Generated_Source\PSoC4/CyLFClk.c ****                 }
 481:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 482:Generated_Source\PSoC4/CyLFClk.c ****                 timeOutClocks--;
 483:Generated_Source\PSoC4/CyLFClk.c **** 
 484:Generated_Source\PSoC4/CyLFClk.c ****             /* Untill ILO accuracy will be in range less than +/- 10% or timeout occurs*/
 485:Generated_Source\PSoC4/CyLFClk.c ****             } while((CYRET_SUCCESS != trimRunningStatus) && 
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 487:Generated_Source\PSoC4/CyLFClk.c ****                                (0u != timeOutClocks));
 488:Generated_Source\PSoC4/CyLFClk.c **** 
 489:Generated_Source\PSoC4/CyLFClk.c ****             if (CYRET_SUCCESS == trimRunningStatus)
 490:Generated_Source\PSoC4/CyLFClk.c ****             {
 491:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_SUCCESS;
 492:Generated_Source\PSoC4/CyLFClk.c ****             }
 493:Generated_Source\PSoC4/CyLFClk.c ****             else
 494:Generated_Source\PSoC4/CyLFClk.c ****             {
 495:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u == timeOutClocks)
 496:Generated_Source\PSoC4/CyLFClk.c ****                 {
 497:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 498:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_TIMEOUT;
 499:Generated_Source\PSoC4/CyLFClk.c ****                 }
 500:Generated_Source\PSoC4/CyLFClk.c ****                 else
 501:Generated_Source\PSoC4/CyLFClk.c ****                 {
 502:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_INVALID_STATE;
 503:Generated_Source\PSoC4/CyLFClk.c ****                 }
 504:Generated_Source\PSoC4/CyLFClk.c ****             }
 505:Generated_Source\PSoC4/CyLFClk.c ****         }
 506:Generated_Source\PSoC4/CyLFClk.c ****         /* Non - blocking mode */
 507:Generated_Source\PSoC4/CyLFClk.c ****         else
 508:Generated_Source\PSoC4/CyLFClk.c ****         {
 509:Generated_Source\PSoC4/CyLFClk.c ****             if (CY_SYS_CLK_TRIM_OR_COMP_FINISHED != trimRunningStatus)
 510:Generated_Source\PSoC4/CyLFClk.c ****             {
 511:Generated_Source\PSoC4/CyLFClk.c ****                 /* Checking if the counter CNTR 1 finished down-counting */
 512:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 513:Generated_Source\PSoC4/CyLFClk.c ****                 {
 514:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 515:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 516:Generated_Source\PSoC4/CyLFClk.c ****                 }
 517:Generated_Source\PSoC4/CyLFClk.c ****                 else
 518:Generated_Source\PSoC4/CyLFClk.c ****                 {
 519:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_STARTED;
 520:Generated_Source\PSoC4/CyLFClk.c ****                 }
 521:Generated_Source\PSoC4/CyLFClk.c ****             }
 522:Generated_Source\PSoC4/CyLFClk.c ****             else
 523:Generated_Source\PSoC4/CyLFClk.c ****             {
 524:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for next measuring */
 525:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 526:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 527:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 528:Generated_Source\PSoC4/CyLFClk.c ****             }
 529:Generated_Source\PSoC4/CyLFClk.c ****         }
 530:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 31


 531:Generated_Source\PSoC4/CyLFClk.c ****     else
 532:Generated_Source\PSoC4/CyLFClk.c ****     {
 533:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 534:Generated_Source\PSoC4/CyLFClk.c ****     }
 535:Generated_Source\PSoC4/CyLFClk.c **** 
 536:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 537:Generated_Source\PSoC4/CyLFClk.c **** }
 538:Generated_Source\PSoC4/CyLFClk.c **** 
 539:Generated_Source\PSoC4/CyLFClk.c **** 
 540:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 541:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloUpdateTrimReg
 542:Generated_Source\PSoC4/CyLFClk.c **** *********************************************************************************
 543:Generated_Source\PSoC4/CyLFClk.c **** *
 544:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 545:Generated_Source\PSoC4/CyLFClk.c **** * Function calculates ILO accuracy and check is error range is higher than 
 546:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10%. If Measured frequency is higher than +/- 10% function updates 
 547:Generated_Source\PSoC4/CyLFClk.c **** * ILO Trim register.
 548:Generated_Source\PSoC4/CyLFClk.c **** *
 549:Generated_Source\PSoC4/CyLFClk.c **** * \param
 550:Generated_Source\PSoC4/CyLFClk.c **** * iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 551:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned. The value returned in this pointer is not valid 
 552:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. If ILO frequency error is lower 
 553:Generated_Source\PSoC4/CyLFClk.c **** * than +/- 10% then the value returned in this pointer will be updated.
 554:Generated_Source\PSoC4/CyLFClk.c **** *
 555:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates that ILO frequency error is lower than 
 556:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and no actions are required.
 557:Generated_Source\PSoC4/CyLFClk.c **** *
 558:Generated_Source\PSoC4/CyLFClk.c **** * \return  CYRET_STARTED - Indicates that ILO frequency error is higher than 
 559:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and ILO Trim register was updated.
 560:Generated_Source\PSoC4/CyLFClk.c **** *
 561:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful.
 562:Generated_Source\PSoC4/CyLFClk.c **** *
 563:Generated_Source\PSoC4/CyLFClk.c **** * Post #1 - To obtain 10% ILO accuracy the calculated accuracy should be equal 
 564:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_ERROR_RANGE = 5.6%. Error value should take to account IMO error of 
 565:Generated_Source\PSoC4/CyLFClk.c **** * +/-2% (+/-0.64kHz), trim step of 2.36kHz (+/-1.18kHz) and error while ILO 
 566:Generated_Source\PSoC4/CyLFClk.c **** * frequency measuring.
 567:Generated_Source\PSoC4/CyLFClk.c **** *
 568:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 569:Generated_Source\PSoC4/CyLFClk.c **** *
 570:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 571:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT)
 572:Generated_Source\PSoC4/CyLFClk.c **** {
 573:Generated_Source\PSoC4/CyLFClk.c ****     uint32 measuredIloFreq;
 574:Generated_Source\PSoC4/CyLFClk.c ****     uint32 currentIloTrimValue;
 575:Generated_Source\PSoC4/CyLFClk.c ****     int32 iloAccuracyValue;
 576:Generated_Source\PSoC4/CyLFClk.c ****     int32 trimStep;
 577:Generated_Source\PSoC4/CyLFClk.c ****     cystatus errorRangeStatus;
 578:Generated_Source\PSoC4/CyLFClk.c **** 
 579:Generated_Source\PSoC4/CyLFClk.c ****     if(0u != CY_SYS_CNT_REG2_REG)
 580:Generated_Source\PSoC4/CyLFClk.c ****     {
 581:Generated_Source\PSoC4/CyLFClk.c ****         measuredIloFreq = (CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_SYS_
 582:Generated_Source\PSoC4/CyLFClk.c **** 
 583:Generated_Source\PSoC4/CyLFClk.c ****         /* Calculate value of error in PPT according to formula - 
 584:Generated_Source\PSoC4/CyLFClk.c ****         *       ((measuredIlofrequency - iloDesired freaquency) * 1000 / iloDesired freaquency) */
 585:Generated_Source\PSoC4/CyLFClk.c ****         iloAccuracyValue = (((int32) measuredIloFreq - (int32) CY_SYS_CLK_ILO_DESIRED_FREQ_HZ) * \
 586:Generated_Source\PSoC4/CyLFClk.c ****                             ((int32) CY_SYS_CLK_PERTHOUSAND)) / ((int32) CY_SYS_CLK_ILO_DESIRED_FRE
 587:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 32


 588:Generated_Source\PSoC4/CyLFClk.c ****         /* Check if ILO accuracy is more than +/- CY_SYS_CLK_ERROR_RANGE. See post #1 of API descri
 589:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_ERROR_RANGE < (uint32) (CY_SYS_CLK_ABS_MACRO(iloAccuracyValue)))
 590:Generated_Source\PSoC4/CyLFClk.c ****         {
 591:Generated_Source\PSoC4/CyLFClk.c ****             if (0 < iloAccuracyValue)
 592:Generated_Source\PSoC4/CyLFClk.c ****             {
 593:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) + 
 594:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 595:Generated_Source\PSoC4/CyLFClk.c ****             }
 596:Generated_Source\PSoC4/CyLFClk.c ****             else
 597:Generated_Source\PSoC4/CyLFClk.c ****             {
 598:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) - 
 599:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 600:Generated_Source\PSoC4/CyLFClk.c ****             }
 601:Generated_Source\PSoC4/CyLFClk.c ****             currentIloTrimValue = (CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK);
 602:Generated_Source\PSoC4/CyLFClk.c ****             trimStep = (int32) currentIloTrimValue - trimStep;
 603:Generated_Source\PSoC4/CyLFClk.c **** 
 604:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep > CY_SYS_CLK_FOURBITS_MAX)
 605:Generated_Source\PSoC4/CyLFClk.c ****             {
 606:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = CY_SYS_CLK_FOURBITS_MAX;
 607:Generated_Source\PSoC4/CyLFClk.c ****             }
 608:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep < 0)
 609:Generated_Source\PSoC4/CyLFClk.c ****             {
 610:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = 0;
 611:Generated_Source\PSoC4/CyLFClk.c ****             }
 612:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = (CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MASK
 613:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 614:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_STARTED;
 615:Generated_Source\PSoC4/CyLFClk.c ****         } /* Else return success because error is in +/- 10% range*/
 616:Generated_Source\PSoC4/CyLFClk.c ****         else
 617:Generated_Source\PSoC4/CyLFClk.c ****         {
 618:Generated_Source\PSoC4/CyLFClk.c ****             /* Write trimmed ILO accuracy through pointer. */
 619:Generated_Source\PSoC4/CyLFClk.c ****             *iloAccuracyInPPT = iloAccuracyValue;
 620:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_SUCCESS;
 621:Generated_Source\PSoC4/CyLFClk.c ****         }
 622:Generated_Source\PSoC4/CyLFClk.c ****     }
 623:Generated_Source\PSoC4/CyLFClk.c ****     else
 624:Generated_Source\PSoC4/CyLFClk.c ****     {
 625:Generated_Source\PSoC4/CyLFClk.c ****         errorRangeStatus = CYRET_INVALID_STATE;
 626:Generated_Source\PSoC4/CyLFClk.c ****     }
 627:Generated_Source\PSoC4/CyLFClk.c **** return (errorRangeStatus);
 628:Generated_Source\PSoC4/CyLFClk.c **** }
 629:Generated_Source\PSoC4/CyLFClk.c **** 
 630:Generated_Source\PSoC4/CyLFClk.c **** 
 631:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 632:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloRestoreFactoryTrim
 633:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 634:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 635:Generated_Source\PSoC4/CyLFClk.c **** * Restores the ILO Trim Register to factory value.
 636:Generated_Source\PSoC4/CyLFClk.c **** *
 637:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to 
 638:Generated_Source\PSoC4/CyLFClk.c **** * calling this API. Otherwise CYRET_UNKNOWN will be returned.
 639:Generated_Source\PSoC4/CyLFClk.c **** *
 640:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices except for PSoC 4000 / PSoC 4100 / PSoC 4200 
 641:Generated_Source\PSoC4/CyLFClk.c **** * / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/CyLFClk.c **** *
 643:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Operation was successful. 
 644:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_UNKNOWN - CySysClkIloStartMeasurement() was not called 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 33


 645:Generated_Source\PSoC4/CyLFClk.c **** * before this API. Hence the trim value cannot be updated.
 646:Generated_Source\PSoC4/CyLFClk.c **** *
 647:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 648:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloRestoreFactoryTrim(void)
 649:Generated_Source\PSoC4/CyLFClk.c **** {
 650:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus = CYRET_SUCCESS;
 651:Generated_Source\PSoC4/CyLFClk.c **** 
 652:Generated_Source\PSoC4/CyLFClk.c ****     /* Check was defaultIloTrimRegValue modified in CySysClkIloStartMeasurement */
 653:Generated_Source\PSoC4/CyLFClk.c ****     if(CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE != defaultIloTrimRegValue)
 654:Generated_Source\PSoC4/CyLFClk.c ****         {
 655:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = ((CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MAS
 656:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 657:Generated_Source\PSoC4/CyLFClk.c ****         }
 658:Generated_Source\PSoC4/CyLFClk.c ****         else
 659:Generated_Source\PSoC4/CyLFClk.c ****         {
 660:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_UNKNOWN;
 661:Generated_Source\PSoC4/CyLFClk.c ****         }
 662:Generated_Source\PSoC4/CyLFClk.c **** 
 663:Generated_Source\PSoC4/CyLFClk.c ****         return (returnStatus);
 664:Generated_Source\PSoC4/CyLFClk.c **** }
 665:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 666:Generated_Source\PSoC4/CyLFClk.c **** 
 667:Generated_Source\PSoC4/CyLFClk.c **** 
 668:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
 669:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 670:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetLfclkSource
 671:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
 672:Generated_Source\PSoC4/CyLFClk.c **** *
 673:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 674:Generated_Source\PSoC4/CyLFClk.c **** *  Gets the clock source for the LFCLK clock.
 675:Generated_Source\PSoC4/CyLFClk.c **** *  The function is applicable only for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M /
 676:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M / PSoC 4200L.
 677:Generated_Source\PSoC4/CyLFClk.c **** *
 678:Generated_Source\PSoC4/CyLFClk.c **** * \return The LFCLK source:
 679:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
 680:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
 681:Generated_Source\PSoC4/CyLFClk.c **** *
 682:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 683:Generated_Source\PSoC4/CyLFClk.c **** *
 684:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 685:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void)
 686:Generated_Source\PSoC4/CyLFClk.c ****     {
 687:Generated_Source\PSoC4/CyLFClk.c ****         uint32 lfclkSource;
 688:Generated_Source\PSoC4/CyLFClk.c ****         lfclkSource = CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK;
 689:Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 690:Generated_Source\PSoC4/CyLFClk.c ****     }
 691:Generated_Source\PSoC4/CyLFClk.c **** 
 692:Generated_Source\PSoC4/CyLFClk.c ****     
 693:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 694:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetLfclkSource
 695:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 696:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 697:Generated_Source\PSoC4/CyLFClk.c **** *  Sets the clock source for the LFCLK clock.
 698:Generated_Source\PSoC4/CyLFClk.c **** *
 699:Generated_Source\PSoC4/CyLFClk.c **** * The switch between LFCLK sources must be done between the positive edges of
 700:Generated_Source\PSoC4/CyLFClk.c **** * LFCLK, because the glitch risk is around the LFCLK positive edge. To ensure
 701:Generated_Source\PSoC4/CyLFClk.c **** * that the switch can be done safely, the WDT counter value is read until it
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 34


 702:Generated_Source\PSoC4/CyLFClk.c **** * changes.
 703:Generated_Source\PSoC4/CyLFClk.c **** *
 704:Generated_Source\PSoC4/CyLFClk.c **** * That means that the positive edge just finished and the switch is performed.
 705:Generated_Source\PSoC4/CyLFClk.c **** * The enabled WDT counter is used for that purpose. If no counters are enabled,
 706:Generated_Source\PSoC4/CyLFClk.c **** * counter 0 is enabled. And after the LFCLK source is switched, counter 0
 707:Generated_Source\PSoC4/CyLFClk.c **** * configuration is restored.
 708:Generated_Source\PSoC4/CyLFClk.c **** *
 709:Generated_Source\PSoC4/CyLFClk.c **** *  The function is applicable only for devices with more than one source for 
 710:Generated_Source\PSoC4/CyLFClk.c **** * LFCLK - PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 4100M / PSoC 4200M / 
 711:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L.
 712:Generated_Source\PSoC4/CyLFClk.c **** *
 713:Generated_Source\PSoC4/CyLFClk.c **** * \note For PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices LFCLK can
 714:Generated_Source\PSoC4/CyLFClk.c **** * only be sourced from ILO even though WCO is available.
 715:Generated_Source\PSoC4/CyLFClk.c **** *
 716:Generated_Source\PSoC4/CyLFClk.c **** * \param
 717:Generated_Source\PSoC4/CyLFClk.c **** * source
 718:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_ILO - Internal Low Frequency (32 kHz) 
 719:Generated_Source\PSoC4/CyLFClk.c **** * Oscillator (ILO).<br>
 720:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_WCO - Low Frequency Watch Crystal Oscillator (WCO).
 721:Generated_Source\PSoC4/CyLFClk.c **** *
 722:Generated_Source\PSoC4/CyLFClk.c **** * \details
 723:Generated_Source\PSoC4/CyLFClk.c **** * This function has no effect if WDT is locked (CySysWdtLock() is called). 
 724:Generated_Source\PSoC4/CyLFClk.c **** * Call CySysWdtUnlock() to unlock WDT.
 725:Generated_Source\PSoC4/CyLFClk.c **** *
 726:Generated_Source\PSoC4/CyLFClk.c **** * Both the current source and the new source must be running and stable before
 727:Generated_Source\PSoC4/CyLFClk.c **** * calling this function.
 728:Generated_Source\PSoC4/CyLFClk.c **** *
 729:Generated_Source\PSoC4/CyLFClk.c **** * Changing the LFCLK clock source may change the LFCLK clock frequency and
 730:Generated_Source\PSoC4/CyLFClk.c **** * affect the functionality that uses this clock. For example, watchdog timer
 731:Generated_Source\PSoC4/CyLFClk.c **** * "uses this clock" or "this clock uses" (WDT) is clocked by LFCLK.
 732:Generated_Source\PSoC4/CyLFClk.c **** *
 733:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 734:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetLfclkSource(uint32 source)
 735:Generated_Source\PSoC4/CyLFClk.c ****     {
 736:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 737:Generated_Source\PSoC4/CyLFClk.c **** 
 738:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetLfclkSource() != source)
 739:Generated_Source\PSoC4/CyLFClk.c ****         {
 740:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 741:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeCatch();
 742:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 743:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_LFCLK_SEL_MASK);
 744:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeRestore();
 745:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 746:Generated_Source\PSoC4/CyLFClk.c ****         }
 747:Generated_Source\PSoC4/CyLFClk.c ****     }
 748:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
 749:Generated_Source\PSoC4/CyLFClk.c **** 
 750:Generated_Source\PSoC4/CyLFClk.c **** 
 751:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO)
 752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStart
 754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 755:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 756:Generated_Source\PSoC4/CyLFClk.c ****     *  Enables Watch Crystal Oscillator (WCO).
 757:Generated_Source\PSoC4/CyLFClk.c ****     * 
 758:Generated_Source\PSoC4/CyLFClk.c ****     * This API enables WCO which is used as a source for LFCLK. Similar to ILO, 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 35


 759:Generated_Source\PSoC4/CyLFClk.c ****     * WCO is also available in all modes except Hibernate and Stop modes.
 760:Generated_Source\PSoC4/CyLFClk.c ****     * \note In PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices
 761:Generated_Source\PSoC4/CyLFClk.c ****     * WCO cannot be a source for the LFCLK. 
 762:Generated_Source\PSoC4/CyLFClk.c ****     *
 763:Generated_Source\PSoC4/CyLFClk.c ****     *  WCO is always enabled in High Power Mode (HPM). Refer to the device
 764:Generated_Source\PSoC4/CyLFClk.c ****     *  datasheet for the  WCO startup time. Once WCO becomes stable it can be
 765:Generated_Source\PSoC4/CyLFClk.c ****     *  switched to Low Power Mode (LPM). Note that oscillator can be unstable
 766:Generated_Source\PSoC4/CyLFClk.c ****     *  during a switch and hence its output should not be used at that moment.
 767:Generated_Source\PSoC4/CyLFClk.c ****     *
 768:Generated_Source\PSoC4/CyLFClk.c ****     *  The CySysClkWcoSetPowerMode() function configures the WCO power mode.
 769:Generated_Source\PSoC4/CyLFClk.c ****     *
 770:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 771:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoStart(void)
 772:Generated_Source\PSoC4/CyLFClk.c ****     {
 501              		.loc 2 772 0
 502              		.cfi_startproc
 503 0000 80B5     		push	{r7, lr}
 504              		.cfi_def_cfa_offset 8
 505              		.cfi_offset 7, -8
 506              		.cfi_offset 14, -4
 507 0002 00AF     		add	r7, sp, #0
 508              		.cfi_def_cfa_register 7
 773:Generated_Source\PSoC4/CyLFClk.c ****         CySysClkWcoSetHighPowerMode();
 509              		.loc 2 773 0
 510 0004 FFF7FEFF 		bl	CySysClkWcoSetHighPowerMode
 774:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 511              		.loc 2 774 0
 512 0008 044B     		ldr	r3, .L31
 513 000a 044A     		ldr	r2, .L31
 514 000c 1268     		ldr	r2, [r2]
 515 000e 8021     		mov	r1, #128
 516 0010 0906     		lsl	r1, r1, #24
 517 0012 0A43     		orr	r2, r1
 518 0014 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC4/CyLFClk.c ****     }
 519              		.loc 2 775 0
 520 0016 BD46     		mov	sp, r7
 521              		@ sp needed
 522 0018 80BD     		pop	{r7, pc}
 523              	.L32:
 524 001a C046     		.align	2
 525              	.L31:
 526 001c 00000640 		.word	1074135040
 527              		.cfi_endproc
 528              	.LFE6:
 529              		.size	CySysClkWcoStart, .-CySysClkWcoStart
 530              		.section	.text.CySysClkWcoStop,"ax",%progbits
 531              		.align	2
 532              		.global	CySysClkWcoStop
 533              		.code	16
 534              		.thumb_func
 535              		.type	CySysClkWcoStop, %function
 536              	CySysClkWcoStop:
 537              	.LFB7:
 776:Generated_Source\PSoC4/CyLFClk.c **** 
 777:Generated_Source\PSoC4/CyLFClk.c **** 
 778:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 36


 779:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStop
 780:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 781:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 782:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the 32 KHz Crystal Oscillator.
 783:Generated_Source\PSoC4/CyLFClk.c ****     *
 784:Generated_Source\PSoC4/CyLFClk.c ****     * API switch of WCO.
 785:Generated_Source\PSoC4/CyLFClk.c ****     * \note PSoC 4100S / PSoC Analog Coprocessor: WCO is required for DeepSleep 
 786:Generated_Source\PSoC4/CyLFClk.c ****     * Timer's operation.
 787:Generated_Source\PSoC4/CyLFClk.c ****     *
 788:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 789:Generated_Source\PSoC4/CyLFClk.c ****     void  CySysClkWcoStop(void)
 790:Generated_Source\PSoC4/CyLFClk.c ****     {
 538              		.loc 2 790 0
 539              		.cfi_startproc
 540 0000 80B5     		push	{r7, lr}
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 7, -8
 543              		.cfi_offset 14, -4
 544 0002 00AF     		add	r7, sp, #0
 545              		.cfi_def_cfa_register 7
 791:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 792:Generated_Source\PSoC4/CyLFClk.c ****             uint8  interruptState;
 793:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
 794:Generated_Source\PSoC4/CyLFClk.c **** 
 795:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 546              		.loc 2 795 0
 547 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 548 0008 031E     		sub	r3, r0, #0
 549 000a 05D0     		beq	.L33
 796:Generated_Source\PSoC4/CyLFClk.c ****         {
 797:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_SRSSV2)
 798:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_WCO == CySysClkGetLfclkSource())
 799:Generated_Source\PSoC4/CyLFClk.c ****                 {
 800:Generated_Source\PSoC4/CyLFClk.c ****                     interruptState = CyEnterCriticalSection();
 801:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeCatch();
 802:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 803:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeRestore();
 804:Generated_Source\PSoC4/CyLFClk.c ****                     CyExitCriticalSection(interruptState);
 805:Generated_Source\PSoC4/CyLFClk.c ****                 }
 806:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 807:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_SRSSV2) */
 808:Generated_Source\PSoC4/CyLFClk.c ****             {
 809:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 550              		.loc 2 809 0
 551 000c 034B     		ldr	r3, .L35
 552 000e 034A     		ldr	r2, .L35
 553 0010 1268     		ldr	r2, [r2]
 554 0012 5200     		lsl	r2, r2, #1
 555 0014 5208     		lsr	r2, r2, #1
 556 0016 1A60     		str	r2, [r3]
 557              	.L33:
 810:Generated_Source\PSoC4/CyLFClk.c ****             }
 811:Generated_Source\PSoC4/CyLFClk.c ****         } /* Otherwise do nothing. WCO configuration cannot be changed. */
 812:Generated_Source\PSoC4/CyLFClk.c ****     }
 558              		.loc 2 812 0
 559 0018 BD46     		mov	sp, r7
 560              		@ sp needed
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 37


 561 001a 80BD     		pop	{r7, pc}
 562              	.L36:
 563              		.align	2
 564              	.L35:
 565 001c 00000640 		.word	1074135040
 566              		.cfi_endproc
 567              	.LFE7:
 568              		.size	CySysClkWcoStop, .-CySysClkWcoStop
 569              		.section	.text.CySysClkWcoEnabled,"ax",%progbits
 570              		.align	2
 571              		.global	CySysClkWcoEnabled
 572              		.code	16
 573              		.thumb_func
 574              		.type	CySysClkWcoEnabled, %function
 575              	CySysClkWcoEnabled:
 576              	.LFB8:
 813:Generated_Source\PSoC4/CyLFClk.c **** 
 814:Generated_Source\PSoC4/CyLFClk.c **** 
 815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoEnabled
 817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal Reports the WCO enable state.
 819:Generated_Source\PSoC4/CyLFClk.c ****     *
 820:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 if WCO is enabled
 821:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 if WCO is disabled.
 822:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 823:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 824:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoEnabled(void)
 825:Generated_Source\PSoC4/CyLFClk.c ****     {
 577              		.loc 2 825 0
 578              		.cfi_startproc
 579 0000 80B5     		push	{r7, lr}
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 7, -8
 582              		.cfi_offset 14, -4
 583 0002 00AF     		add	r7, sp, #0
 584              		.cfi_def_cfa_register 7
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 585              		.loc 2 826 0
 586 0004 044B     		ldr	r3, .L41
 587 0006 1B68     		ldr	r3, [r3]
 827:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 588              		.loc 2 827 0
 589 0008 002B     		cmp	r3, #0
 590 000a 01DA     		bge	.L38
 591              		.loc 2 827 0 is_stmt 0 discriminator 1
 592 000c 0123     		mov	r3, #1
 593 000e 00E0     		b	.L39
 594              	.L38:
 595              		.loc 2 827 0 discriminator 2
 596 0010 0023     		mov	r3, #0
 597              	.L39:
 828:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 0u);
 829:Generated_Source\PSoC4/CyLFClk.c ****     }
 598              		.loc 2 829 0 is_stmt 1
 599 0012 181C     		mov	r0, r3
 600 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 38


 601              		@ sp needed
 602 0016 80BD     		pop	{r7, pc}
 603              	.L42:
 604              		.align	2
 605              	.L41:
 606 0018 00000640 		.word	1074135040
 607              		.cfi_endproc
 608              	.LFE8:
 609              		.size	CySysClkWcoEnabled, .-CySysClkWcoEnabled
 610              		.section	.text.CySysClkWcoSetPowerMode,"ax",%progbits
 611              		.align	2
 612              		.global	CySysClkWcoSetPowerMode
 613              		.code	16
 614              		.thumb_func
 615              		.type	CySysClkWcoSetPowerMode, %function
 616              	CySysClkWcoSetPowerMode:
 617              	.LFB9:
 830:Generated_Source\PSoC4/CyLFClk.c **** 
 831:Generated_Source\PSoC4/CyLFClk.c **** 
 832:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 833:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoSetPowerMode
 834:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 835:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 836:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the power mode for the 32 KHz WCO.
 837:Generated_Source\PSoC4/CyLFClk.c ****     *
 838:Generated_Source\PSoC4/CyLFClk.c ****     * By default (if this function is not called), the WCO is in High power mode 
 839:Generated_Source\PSoC4/CyLFClk.c ****     * during Active and device's low power modes
 840:Generated_Source\PSoC4/CyLFClk.c ****     *
 841:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
 842:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_HPM - The High Power mode.<br>
 843:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_LPM - The Low Power mode.
 844:Generated_Source\PSoC4/CyLFClk.c ****     *
 845:Generated_Source\PSoC4/CyLFClk.c ****     * \return A previous power mode. The same as the parameters.
 846:Generated_Source\PSoC4/CyLFClk.c ****     *
 847:Generated_Source\PSoC4/CyLFClk.c ****     * \note
 848:Generated_Source\PSoC4/CyLFClk.c ****     * The WCO Low Power mode is applicable for PSoC 4100 BLE / PSoC 4200 BLE devices.
 849:Generated_Source\PSoC4/CyLFClk.c ****     *
 850:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 851:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoSetPowerMode(uint32 mode)
 852:Generated_Source\PSoC4/CyLFClk.c ****     {
 618              		.loc 2 852 0
 619              		.cfi_startproc
 620 0000 80B5     		push	{r7, lr}
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 7, -8
 623              		.cfi_offset 14, -4
 624 0002 84B0     		sub	sp, sp, #16
 625              		.cfi_def_cfa_offset 24
 626 0004 00AF     		add	r7, sp, #0
 627              		.cfi_def_cfa_register 7
 628 0006 7860     		str	r0, [r7, #4]
 853:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 854:Generated_Source\PSoC4/CyLFClk.c **** 
 855:Generated_Source\PSoC4/CyLFClk.c ****         powerModeStatus = CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 629              		.loc 2 855 0
 630 0008 094B     		ldr	r3, .L49
 631 000a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 39


 632 000c 0122     		mov	r2, #1
 633 000e 1340     		and	r3, r2
 634 0010 FB60     		str	r3, [r7, #12]
 856:Generated_Source\PSoC4/CyLFClk.c **** 
 857:Generated_Source\PSoC4/CyLFClk.c ****         switch(mode)
 635              		.loc 2 857 0
 636 0012 7B68     		ldr	r3, [r7, #4]
 637 0014 002B     		cmp	r3, #0
 638 0016 02D1     		bne	.L48
 858:Generated_Source\PSoC4/CyLFClk.c ****         {
 859:Generated_Source\PSoC4/CyLFClk.c ****         case CY_SYS_CLK_WCO_HPM:
 860:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkWcoSetHighPowerMode();
 639              		.loc 2 860 0
 640 0018 FFF7FEFF 		bl	CySysClkWcoSetHighPowerMode
 861:Generated_Source\PSoC4/CyLFClk.c ****             break;
 641              		.loc 2 861 0
 642 001c 03E0     		b	.L46
 643              	.L48:
 862:Generated_Source\PSoC4/CyLFClk.c **** 
 863:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 864:Generated_Source\PSoC4/CyLFClk.c ****             case CY_SYS_CLK_WCO_LPM:
 865:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkWcoSetLowPowerMode();
 866:Generated_Source\PSoC4/CyLFClk.c ****                 break;
 867:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 868:Generated_Source\PSoC4/CyLFClk.c **** 
 869:Generated_Source\PSoC4/CyLFClk.c ****         default:
 870:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 644              		.loc 2 870 0
 645 001e 0020     		mov	r0, #0
 646 0020 FFF7FEFF 		bl	CyHalt
 871:Generated_Source\PSoC4/CyLFClk.c ****             break;
 647              		.loc 2 871 0
 648 0024 C046     		mov	r8, r8
 649              	.L46:
 872:Generated_Source\PSoC4/CyLFClk.c ****         }
 873:Generated_Source\PSoC4/CyLFClk.c **** 
 874:Generated_Source\PSoC4/CyLFClk.c ****         return (powerModeStatus);
 650              		.loc 2 874 0
 651 0026 FB68     		ldr	r3, [r7, #12]
 875:Generated_Source\PSoC4/CyLFClk.c ****     }
 652              		.loc 2 875 0
 653 0028 181C     		mov	r0, r3
 654 002a BD46     		mov	sp, r7
 655 002c 04B0     		add	sp, sp, #16
 656              		@ sp needed
 657 002e 80BD     		pop	{r7, pc}
 658              	.L50:
 659              		.align	2
 660              	.L49:
 661 0030 00000640 		.word	1074135040
 662              		.cfi_endproc
 663              	.LFE9:
 664              		.size	CySysClkWcoSetPowerMode, .-CySysClkWcoSetPowerMode
 665              		.section	.text.CySysClkWcoClockOutSelect,"ax",%progbits
 666              		.align	2
 667              		.global	CySysClkWcoClockOutSelect
 668              		.code	16
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 40


 669              		.thumb_func
 670              		.type	CySysClkWcoClockOutSelect, %function
 671              	CySysClkWcoClockOutSelect:
 672              	.LFB10:
 876:Generated_Source\PSoC4/CyLFClk.c **** 
 877:Generated_Source\PSoC4/CyLFClk.c **** 
 878:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 879:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkWcoClockOutSelect
 880:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 881:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 882:Generated_Source\PSoC4/CyLFClk.c **** * Selects the WCO block output source.
 883:Generated_Source\PSoC4/CyLFClk.c **** *
 884:Generated_Source\PSoC4/CyLFClk.c **** * In addition to generating 32.768 kHz clock from external crystals, WCO 
 885:Generated_Source\PSoC4/CyLFClk.c **** * can be sourced by external clock source using wco_out pin. The API help to
 886:Generated_Source\PSoC4/CyLFClk.c **** * lets you select between the sources: External crystal or external pin.
 887:Generated_Source\PSoC4/CyLFClk.c **** *
 888:Generated_Source\PSoC4/CyLFClk.c **** * If you want to use external pin to drive WCO the next procedure is required:
 889:Generated_Source\PSoC4/CyLFClk.c **** * <br> 1) Disable the WCO.
 890:Generated_Source\PSoC4/CyLFClk.c **** * <br> 2) Drive the wco_out pin to an external signal source.
 891:Generated_Source\PSoC4/CyLFClk.c **** * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_PIN).
 892:Generated_Source\PSoC4/CyLFClk.c **** * <br> 4) Enable the WCO and wait for 15 us before clocking the XO pad at the high 
 893:Generated_Source\PSoC4/CyLFClk.c **** * potential. Let's assume you are using the 1.6v clock amplitude, then the
 894:Generated_Source\PSoC4/CyLFClk.c **** * sequence would start at 1.6v, then 0v, then 1.6v etc at a chosen frequency.
 895:Generated_Source\PSoC4/CyLFClk.c **** *
 896:Generated_Source\PSoC4/CyLFClk.c **** * If you want to use WCO after using an external pin source:
 897:Generated_Source\PSoC4/CyLFClk.c **** * <br> 1) Disable the WCO.
 898:Generated_Source\PSoC4/CyLFClk.c **** * <br> 2) Drive off wco_out pin with external signal source.
 899:Generated_Source\PSoC4/CyLFClk.c **** * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_CRYSTAL).
 900:Generated_Source\PSoC4/CyLFClk.c **** * <br> 4) Enable the WCO.
 901:Generated_Source\PSoC4/CyLFClk.c **** *
 902:Generated_Source\PSoC4/CyLFClk.c **** * \warning 
 903:Generated_Source\PSoC4/CyLFClk.c **** * Do not use the oscillator output clock prior to a 15uS delay in your system.
 904:Generated_Source\PSoC4/CyLFClk.c **** * There are no limitations on the external clock frequency.
 905:Generated_Source\PSoC4/CyLFClk.c **** * \warning 
 906:Generated_Source\PSoC4/CyLFClk.c **** * When external clock source was selected to drive WCO block the IMO can be 
 907:Generated_Source\PSoC4/CyLFClk.c **** * trimmed only when external clock source period is equal to WCO external
 908:Generated_Source\PSoC4/CyLFClk.c **** * crystal period. Also external clock source accuracy should be higher 
 909:Generated_Source\PSoC4/CyLFClk.c **** * or equal to WCO external crystal accuracy.
 910:Generated_Source\PSoC4/CyLFClk.c **** *
 911:Generated_Source\PSoC4/CyLFClk.c **** * \param clockSel
 912:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_WCO_SEL_CRYSTAL - Selects External crystal as clock 
 913:Generated_Source\PSoC4/CyLFClk.c **** * source of WCO.<br>
 914:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_WCO_SEL_PIN - Selects External clock input on wco_in pin as 
 915:Generated_Source\PSoC4/CyLFClk.c **** * clock source of WCO.
 916:Generated_Source\PSoC4/CyLFClk.c **** *
 917:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 918:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkWcoClockOutSelect(uint32 clockSel)
 919:Generated_Source\PSoC4/CyLFClk.c ****     {
 673              		.loc 2 919 0
 674              		.cfi_startproc
 675 0000 80B5     		push	{r7, lr}
 676              		.cfi_def_cfa_offset 8
 677              		.cfi_offset 7, -8
 678              		.cfi_offset 14, -4
 679 0002 82B0     		sub	sp, sp, #8
 680              		.cfi_def_cfa_offset 16
 681 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 41


 682              		.cfi_def_cfa_register 7
 683 0006 7860     		str	r0, [r7, #4]
 920:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 684              		.loc 2 920 0
 685 0008 FFF7FEFF 		bl	CySysClkWcoEnabled
 686 000c 031E     		sub	r3, r0, #0
 687 000e 10D0     		beq	.L51
 921:Generated_Source\PSoC4/CyLFClk.c ****         {
 922:Generated_Source\PSoC4/CyLFClk.c ****             if (1u >= clockSel)
 688              		.loc 2 922 0
 689 0010 7B68     		ldr	r3, [r7, #4]
 690 0012 012B     		cmp	r3, #1
 691 0014 0AD8     		bhi	.L53
 923:Generated_Source\PSoC4/CyLFClk.c ****             {
 924:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG = (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(~CY_SYS_CLK_WCO_S
 692              		.loc 2 924 0
 693 0016 084B     		ldr	r3, .L54
 694 0018 074A     		ldr	r2, .L54
 695 001a 1268     		ldr	r2, [r2]
 696 001c 0421     		mov	r1, #4
 697 001e 8A43     		bic	r2, r1
 698 0020 111C     		mov	r1, r2
 925:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 699              		.loc 2 925 0
 700 0022 7A68     		ldr	r2, [r7, #4]
 701 0024 9200     		lsl	r2, r2, #2
 924:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 702              		.loc 2 924 0
 703 0026 0A43     		orr	r2, r1
 704 0028 1A60     		str	r2, [r3]
 705 002a 02E0     		b	.L51
 706              	.L53:
 926:Generated_Source\PSoC4/CyLFClk.c ****             }
 927:Generated_Source\PSoC4/CyLFClk.c ****             else
 928:Generated_Source\PSoC4/CyLFClk.c ****             {
 929:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 707              		.loc 2 929 0 discriminator 1
 708 002c 0020     		mov	r0, #0
 709 002e FFF7FEFF 		bl	CyHalt
 710              	.L51:
 930:Generated_Source\PSoC4/CyLFClk.c ****             }
 931:Generated_Source\PSoC4/CyLFClk.c ****         }
 932:Generated_Source\PSoC4/CyLFClk.c ****     }
 711              		.loc 2 932 0
 712 0032 BD46     		mov	sp, r7
 713 0034 02B0     		add	sp, sp, #8
 714              		@ sp needed
 715 0036 80BD     		pop	{r7, pc}
 716              	.L55:
 717              		.align	2
 718              	.L54:
 719 0038 00000640 		.word	1074135040
 720              		.cfi_endproc
 721              	.LFE10:
 722              		.size	CySysClkWcoClockOutSelect, .-CySysClkWcoClockOutSelect
 723              		.section	.text.CySysWdtGetEnabledStatus,"ax",%progbits
 724              		.align	2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 42


 725              		.global	CySysWdtGetEnabledStatus
 726              		.code	16
 727              		.thumb_func
 728              		.type	CySysWdtGetEnabledStatus, %function
 729              	CySysWdtGetEnabledStatus:
 730              	.LFB11:
 933:Generated_Source\PSoC4/CyLFClk.c **** #endif  /* (CY_IP_WCO) */
 934:Generated_Source\PSoC4/CyLFClk.c **** 
 935:Generated_Source\PSoC4/CyLFClk.c **** 
 936:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 937:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 938:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLock
 939:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 940:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 941:Generated_Source\PSoC4/CyLFClk.c ****     * Locks out configuration changes to the Watchdog timer registers and ILO
 942:Generated_Source\PSoC4/CyLFClk.c ****     * configuration register.
 943:Generated_Source\PSoC4/CyLFClk.c ****     *
 944:Generated_Source\PSoC4/CyLFClk.c ****     * After this function is called, ILO clock can't be disabled until
 945:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtUnlock() is called.
 946:Generated_Source\PSoC4/CyLFClk.c ****     *
 947:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 948:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtLock(void)
 949:Generated_Source\PSoC4/CyLFClk.c ****     {
 950:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 951:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 952:Generated_Source\PSoC4/CyLFClk.c **** 
 953:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = (CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK)) 
 954:Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 955:Generated_Source\PSoC4/CyLFClk.c **** 
 956:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 957:Generated_Source\PSoC4/CyLFClk.c ****     }
 958:Generated_Source\PSoC4/CyLFClk.c **** 
 959:Generated_Source\PSoC4/CyLFClk.c **** 
 960:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 961:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLocked
 962:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 963:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 964:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the WDT lock state.
 965:Generated_Source\PSoC4/CyLFClk.c ****     *
 966:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - WDT is locked, and 0 - WDT is unlocked.
 967:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 969:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void)
 970:Generated_Source\PSoC4/CyLFClk.c ****     {
 971:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal 0 */
 972:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_SELECT_REG & (uint32)(CY_SYS_WDT_CLK_LOCK_BITS_MASK))) ? (uint32
 973:Generated_Source\PSoC4/CyLFClk.c ****     }
 974:Generated_Source\PSoC4/CyLFClk.c **** 
 975:Generated_Source\PSoC4/CyLFClk.c **** 
 976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnlock
 978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 979:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 980:Generated_Source\PSoC4/CyLFClk.c ****     *  Unlocks the Watchdog Timer configuration register.
 981:Generated_Source\PSoC4/CyLFClk.c ****     *
 982:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 983:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnlock(void)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 43


 984:Generated_Source\PSoC4/CyLFClk.c ****     {
 985:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 986:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 987:Generated_Source\PSoC4/CyLFClk.c **** 
 988:Generated_Source\PSoC4/CyLFClk.c ****         /* Removing WDT lock requires two writes */
 989:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 990:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT0);
 991:Generated_Source\PSoC4/CyLFClk.c **** 
 992:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 993:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
 994:Generated_Source\PSoC4/CyLFClk.c **** 
 995:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 996:Generated_Source\PSoC4/CyLFClk.c ****     }
 997:Generated_Source\PSoC4/CyLFClk.c **** 
 998:Generated_Source\PSoC4/CyLFClk.c **** 
 999:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1000:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1001:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1002:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1003:Generated_Source\PSoC4/CyLFClk.c ****     *  Reads the enabled status of one of the three WDT counters.
1004:Generated_Source\PSoC4/CyLFClk.c ****     *
1005:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1006:Generated_Source\PSoC4/CyLFClk.c ****     *
1007:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1008:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the counter is disabled.
1009:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the counter is enabled.
1010:Generated_Source\PSoC4/CyLFClk.c ****     *
1011:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1012:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual WDT counter status from the status register. It may
1013:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles for the WDT status register to contain actual data
1014:Generated_Source\PSoC4/CyLFClk.c ****     * after the WDT counter is enabled.
1015:Generated_Source\PSoC4/CyLFClk.c ****     *
1016:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1017:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum)
1018:Generated_Source\PSoC4/CyLFClk.c ****     {
1019:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
1020:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONTROL_REG >> ((CY_SYS_WDT_CNT_SHIFT * counterNum) + CY_SYS_WDT_CNT_ST
1021:Generated_Source\PSoC4/CyLFClk.c ****     }
1022:Generated_Source\PSoC4/CyLFClk.c **** 
1023:Generated_Source\PSoC4/CyLFClk.c **** 
1024:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1025:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMode
1026:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1027:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1028:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the mode of one of the three WDT counters.
1029:Generated_Source\PSoC4/CyLFClk.c ****     *
1030:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1031:Generated_Source\PSoC4/CyLFClk.c ****     *
1032:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
1033:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_MODE_NONE - Free running.<br>
1034:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT - The interrupt generated on match for counter 0
1035:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.<br>
1036:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_RESET - Reset on match (valid for counter 0 and 1 only).<br>
1037:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT_RESET - Generate an interrupt.  Generate a reset on
1038:Generated_Source\PSoC4/CyLFClk.c ****     * the 3rd non-handled interrupt (valid for counter 0 and counter 1 only).
1039:Generated_Source\PSoC4/CyLFClk.c ****     *
1040:Generated_Source\PSoC4/CyLFClk.c ****     * \details
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 44


1041:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled to set a mode. Otherwise, this
1042:Generated_Source\PSoC4/CyLFClk.c ****     * function call has no effect. If the specified counter is enabled,
1043:Generated_Source\PSoC4/CyLFClk.c ****     * call the CySysWdtDisable() function with the corresponding parameter to
1044:Generated_Source\PSoC4/CyLFClk.c ****     * disable the specified counter and wait for it to stop.
1045:Generated_Source\PSoC4/CyLFClk.c ****     *
1046:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1047:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMode(uint32 counterNum, uint32 mode)
1048:Generated_Source\PSoC4/CyLFClk.c ****     {
1049:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1050:Generated_Source\PSoC4/CyLFClk.c **** 
1051:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
1052:Generated_Source\PSoC4/CyLFClk.c **** 
1053:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
1054:Generated_Source\PSoC4/CyLFClk.c ****         {
1055:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG &
1056:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
1057:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_WDT_MODE_MASK) << (counterNum * CY_SYS_WDT_CN
1058:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1059:Generated_Source\PSoC4/CyLFClk.c ****         }
1060:Generated_Source\PSoC4/CyLFClk.c ****     }
1061:Generated_Source\PSoC4/CyLFClk.c **** 
1062:Generated_Source\PSoC4/CyLFClk.c **** 
1063:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1064:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMode
1065:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1066:Generated_Source\PSoC4/CyLFClk.c ****     * 
1067:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three WDT counters.
1068:Generated_Source\PSoC4/CyLFClk.c ****     *
1069:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1070:Generated_Source\PSoC4/CyLFClk.c ****     *
1071:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
1072:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysWdtSetMode().
1073:Generated_Source\PSoC4/CyLFClk.c ****     *
1074:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1075:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMode(uint32 counterNum)
1076:Generated_Source\PSoC4/CyLFClk.c ****     {
1077:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
1078:Generated_Source\PSoC4/CyLFClk.c ****     }
1079:Generated_Source\PSoC4/CyLFClk.c **** 
1080:Generated_Source\PSoC4/CyLFClk.c **** 
1081:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1082:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetClearOnMatch
1083:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1084:Generated_Source\PSoC4/CyLFClk.c ****     * 
1085:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter "clear on match" setting.
1086:Generated_Source\PSoC4/CyLFClk.c ****     *
1087:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue
1088:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
1089:Generated_Source\PSoC4/CyLFClk.c ****     *
1090:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1091:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1092:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1093:Generated_Source\PSoC4/CyLFClk.c ****     *
1094:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
1095:Generated_Source\PSoC4/CyLFClk.c ****     *  1 to enable appropriate counter
1096:Generated_Source\PSoC4/CyLFClk.c ****     *
1097:Generated_Source\PSoC4/CyLFClk.c ****     * \details
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 45


1098:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled. Otherwise this function call
1099:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysWdtDisable()
1100:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
1101:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three LFCLK cycles.
1102:Generated_Source\PSoC4/CyLFClk.c ****     *
1103:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1104:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable)
1105:Generated_Source\PSoC4/CyLFClk.c ****     {
1106:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1107:Generated_Source\PSoC4/CyLFClk.c **** 
1108:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1109:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1110:Generated_Source\PSoC4/CyLFClk.c **** 
1111:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
1112:Generated_Source\PSoC4/CyLFClk.c ****         {
1113:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
1114:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
1115:Generated_Source\PSoC4/CyLFClk.c **** 
1116:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
1117:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_C
1118:Generated_Source\PSoC4/CyLFClk.c **** 
1119:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1120:Generated_Source\PSoC4/CyLFClk.c ****         }
1121:Generated_Source\PSoC4/CyLFClk.c ****     }
1122:Generated_Source\PSoC4/CyLFClk.c **** 
1123:Generated_Source\PSoC4/CyLFClk.c **** 
1124:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1125:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetClearOnMatch
1126:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1127:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1128:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the "clear on match" setting for the specified counter.
1129:Generated_Source\PSoC4/CyLFClk.c ****     *
1130:Generated_Source\PSoC4/CyLFClk.c ****     * \param
1131:Generated_Source\PSoC4/CyLFClk.c ****     * counterNum Valid range [0-1]. The number of the WDT counter. The match values
1132:Generated_Source\PSoC4/CyLFClk.c ****     * are not supported by counter 2.
1133:Generated_Source\PSoC4/CyLFClk.c ****     *
1134:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
1135:Generated_Source\PSoC4/CyLFClk.c ****     *
1136:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1137:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum)
1138:Generated_Source\PSoC4/CyLFClk.c ****     {
1139:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1140:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1141:Generated_Source\PSoC4/CyLFClk.c **** 
1142:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WDT_CONFIG_REG >>
1143:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
1144:Generated_Source\PSoC4/CyLFClk.c ****     }
1145:Generated_Source\PSoC4/CyLFClk.c **** 
1146:Generated_Source\PSoC4/CyLFClk.c **** 
1147:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1148:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1149:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1150:Generated_Source\PSoC4/CyLFClk.c ****     *
1151:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified WDT counters.
1152:Generated_Source\PSoC4/CyLFClk.c ****     *
1153:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are enabled.
1154:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 46


1155:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1156:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to enable.<br>
1157:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to enable.<br>
1158:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to enable.
1159:Generated_Source\PSoC4/CyLFClk.c ****     *
1160:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1161:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling WDT requires 3 LFCLK cycles to come into effect.
1162:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the WDT enable state must not be changed more than once in
1163:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
1164:Generated_Source\PSoC4/CyLFClk.c ****     *
1165:Generated_Source\PSoC4/CyLFClk.c ****     * After WDT is enabled, it is illegal to write WDT configuration (WDT_CONFIG)
1166:Generated_Source\PSoC4/CyLFClk.c ****     * and control (WDT_CONTROL) registers. This means that all WDT functions that
1167:Generated_Source\PSoC4/CyLFClk.c ****     * contain 'write' in the name (with the exception of CySysWdtSetMatch()
1168:Generated_Source\PSoC4/CyLFClk.c ****     * function) are illegal to call if WDT is enabled.
1169:Generated_Source\PSoC4/CyLFClk.c ****     *
1170:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 / PSoC 4200: This function enables ILO.
1171:Generated_Source\PSoC4/CyLFClk.c ****     *
1172:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 BLE / PSoC 4200 BLE / PSoC4200L / PSoC 4100M 
1173:Generated_Source\PSoC4/CyLFClk.c ****     * / PSoC 4200M:
1174:Generated_Source\PSoC4/CyLFClk.c ****     * LFLCK should be configured before calling this function. The desired
1175:Generated_Source\PSoC4/CyLFClk.c ****     * source should be enabled and configured to be the source for LFCLK.
1176:Generated_Source\PSoC4/CyLFClk.c ****     *
1177:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1178:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(uint32 counterMask)
1179:Generated_Source\PSoC4/CyLFClk.c ****     {
1180:Generated_Source\PSoC4/CyLFClk.c ****         #if (!CY_IP_WCO)
1181:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkIloStart();
1182:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (!CY_IP_WCO) */
1183:Generated_Source\PSoC4/CyLFClk.c **** 
1184:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= counterMask;
1185:Generated_Source\PSoC4/CyLFClk.c **** 
1186:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1187:Generated_Source\PSoC4/CyLFClk.c ****         {
1188:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1189:Generated_Source\PSoC4/CyLFClk.c ****             {
1190:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1191:Generated_Source\PSoC4/CyLFClk.c ****             }
1192:Generated_Source\PSoC4/CyLFClk.c ****         }
1193:Generated_Source\PSoC4/CyLFClk.c **** 
1194:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1195:Generated_Source\PSoC4/CyLFClk.c ****         {
1196:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1197:Generated_Source\PSoC4/CyLFClk.c ****             {
1198:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1199:Generated_Source\PSoC4/CyLFClk.c ****             }
1200:Generated_Source\PSoC4/CyLFClk.c ****         }
1201:Generated_Source\PSoC4/CyLFClk.c **** 
1202:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1203:Generated_Source\PSoC4/CyLFClk.c ****         {
1204:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1205:Generated_Source\PSoC4/CyLFClk.c ****             {
1206:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1207:Generated_Source\PSoC4/CyLFClk.c ****             }
1208:Generated_Source\PSoC4/CyLFClk.c ****         }
1209:Generated_Source\PSoC4/CyLFClk.c ****     }
1210:Generated_Source\PSoC4/CyLFClk.c **** 
1211:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 47


1212:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1213:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1214:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1215:Generated_Source\PSoC4/CyLFClk.c ****     *
1216:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified WDT counters.
1217:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
1218:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
1219:Generated_Source\PSoC4/CyLFClk.c ****     *
1220:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1221:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to disable. <br>
1222:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to disable. <br>
1223:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to disable.
1224:Generated_Source\PSoC4/CyLFClk.c ****     *
1225:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1226:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(uint32 counterMask)
1227:Generated_Source\PSoC4/CyLFClk.c ****     {
1228:Generated_Source\PSoC4/CyLFClk.c ****         if (0uL == CySysWdtLocked())
1229:Generated_Source\PSoC4/CyLFClk.c ****         {
1230:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= ~counterMask;
1231:Generated_Source\PSoC4/CyLFClk.c **** 
1232:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1233:Generated_Source\PSoC4/CyLFClk.c ****             {
1234:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1235:Generated_Source\PSoC4/CyLFClk.c ****                 {
1236:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1237:Generated_Source\PSoC4/CyLFClk.c ****                 }
1238:Generated_Source\PSoC4/CyLFClk.c ****             }
1239:Generated_Source\PSoC4/CyLFClk.c **** 
1240:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1241:Generated_Source\PSoC4/CyLFClk.c ****             {
1242:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1243:Generated_Source\PSoC4/CyLFClk.c ****                 {
1244:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1245:Generated_Source\PSoC4/CyLFClk.c ****                 }
1246:Generated_Source\PSoC4/CyLFClk.c ****             }
1247:Generated_Source\PSoC4/CyLFClk.c **** 
1248:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1249:Generated_Source\PSoC4/CyLFClk.c ****             {
1250:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1251:Generated_Source\PSoC4/CyLFClk.c ****                 {
1252:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1253:Generated_Source\PSoC4/CyLFClk.c ****                 }
1254:Generated_Source\PSoC4/CyLFClk.c ****             }
1255:Generated_Source\PSoC4/CyLFClk.c ****         }
1256:Generated_Source\PSoC4/CyLFClk.c ****     }
1257:Generated_Source\PSoC4/CyLFClk.c **** 
1258:Generated_Source\PSoC4/CyLFClk.c **** 
1259:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1260:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetCascade
1261:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1262:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1263:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two WDT cascade values based on the combination of mask values
1264:Generated_Source\PSoC4/CyLFClk.c ****     * specified.
1265:Generated_Source\PSoC4/CyLFClk.c ****     *
1266:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
1267:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_NONE - Neither <br>
1268:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_01 - Cascade 01 <br>
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 48


1269:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_12 - Cascade 12
1270:Generated_Source\PSoC4/CyLFClk.c ****     *
1271:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
1272:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
1273:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
1274:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysWdtSetCascade() was called with ORed defines it is necessary 
1275:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysWdtSetClearOnMatch(1,1). It is needed to make sure that 
1276:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
1277:Generated_Source\PSoC4/CyLFClk.c ****     *
1278:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counters that are part of the specified cascade should be disabled.
1279:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
1280:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysWdtDisable() function with the corresponding
1281:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
1282:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1283:Generated_Source\PSoC4/CyLFClk.c ****     *
1284:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1285:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetCascade(uint32 cascadeMask)
1286:Generated_Source\PSoC4/CyLFClk.c ****     {
1287:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1288:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
1289:Generated_Source\PSoC4/CyLFClk.c **** 
1290:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0) |
1291:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
1292:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2);
1293:Generated_Source\PSoC4/CyLFClk.c **** 
1294:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
1295:Generated_Source\PSoC4/CyLFClk.c ****         {
1296:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1297:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
1298:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
1299:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1300:Generated_Source\PSoC4/CyLFClk.c ****         }
1301:Generated_Source\PSoC4/CyLFClk.c ****     }
1302:Generated_Source\PSoC4/CyLFClk.c **** 
1303:Generated_Source\PSoC4/CyLFClk.c **** 
1304:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1305:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCascade
1306:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1307:Generated_Source\PSoC4/CyLFClk.c ****     *
1308:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two WDT cascade values returning a mask of the bits set.
1309:Generated_Source\PSoC4/CyLFClk.c ****     *
1310:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
1311:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_NONE - Neither
1312:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_01 - Cascade 01
1313:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_12 - Cascade 12
1314:Generated_Source\PSoC4/CyLFClk.c ****     *
1315:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1316:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCascade(void)
1317:Generated_Source\PSoC4/CyLFClk.c ****     {
1318:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
1319:Generated_Source\PSoC4/CyLFClk.c ****     }
1320:Generated_Source\PSoC4/CyLFClk.c **** 
1321:Generated_Source\PSoC4/CyLFClk.c **** 
1322:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1323:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1324:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 49


1326:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1327:Generated_Source\PSoC4/CyLFClk.c ****     *
1328:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1329:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1330:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1331:Generated_Source\PSoC4/CyLFClk.c ****     *
1332:Generated_Source\PSoC4/CyLFClk.c ****     * \param match
1333:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-65535]. The value to be used to match against the counter.
1334:Generated_Source\PSoC4/CyLFClk.c ****     *
1335:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1336:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 counterNum, uint32 match)
1337:Generated_Source\PSoC4/CyLFClk.c ****     {
1338:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
1339:Generated_Source\PSoC4/CyLFClk.c **** 
1340:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1341:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1342:Generated_Source\PSoC4/CyLFClk.c **** 
1343:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
1344:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_3LFCLK_DELAY_US);
1345:Generated_Source\PSoC4/CyLFClk.c **** 
1346:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WDT_MATCH_REG;
1347:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
1348:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
1349:Generated_Source\PSoC4/CyLFClk.c **** 
1350:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
1351:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_1LFCLK_DELAY_US);
1352:Generated_Source\PSoC4/CyLFClk.c ****     }
1353:Generated_Source\PSoC4/CyLFClk.c **** 
1354:Generated_Source\PSoC4/CyLFClk.c **** 
1355:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1356:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetToggleBit
1357:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1358:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1359:Generated_Source\PSoC4/CyLFClk.c ****     * Configures which bit in WDT counter 2 to monitor for a toggle.
1360:Generated_Source\PSoC4/CyLFClk.c ****     *
1361:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if the mode for counter 2 has
1362:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
1363:Generated_Source\PSoC4/CyLFClk.c ****     *
1364:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31].  Counter 2 bit to monitor for a toggle.
1365:Generated_Source\PSoC4/CyLFClk.c ****     *
1366:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1367:Generated_Source\PSoC4/CyLFClk.c ****     * WDT Counter 2 should be disabled. Otherwise this function call has no
1368:Generated_Source\PSoC4/CyLFClk.c ****     * effect.
1369:Generated_Source\PSoC4/CyLFClk.c ****     *
1370:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysWdtDisable() function with
1371:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
1372:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to 3 LFCLK cycles.
1373:Generated_Source\PSoC4/CyLFClk.c ****     *
1374:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetToggleBit(uint32 bits)
1376:Generated_Source\PSoC4/CyLFClk.c ****     {
1377:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1378:Generated_Source\PSoC4/CyLFClk.c **** 
1379:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1380:Generated_Source\PSoC4/CyLFClk.c ****         {
1381:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1382:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 50


1383:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
1384:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1385:Generated_Source\PSoC4/CyLFClk.c ****         }
1386:Generated_Source\PSoC4/CyLFClk.c ****     }
1387:Generated_Source\PSoC4/CyLFClk.c **** 
1388:Generated_Source\PSoC4/CyLFClk.c **** 
1389:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1390:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetToggleBit
1391:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1392:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1393:Generated_Source\PSoC4/CyLFClk.c ****     * Reads which bit in WDT counter 2 is monitored for a toggle.
1394:Generated_Source\PSoC4/CyLFClk.c ****     *
1395:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
1396:Generated_Source\PSoC4/CyLFClk.c ****     *
1397:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1398:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetToggleBit(void)
1399:Generated_Source\PSoC4/CyLFClk.c ****     {
1400:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
1401:Generated_Source\PSoC4/CyLFClk.c ****     }
1402:Generated_Source\PSoC4/CyLFClk.c **** 
1403:Generated_Source\PSoC4/CyLFClk.c **** 
1404:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1405:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1406:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1407:Generated_Source\PSoC4/CyLFClk.c ****     *
1408:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1409:Generated_Source\PSoC4/CyLFClk.c ****     *
1410:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the WDT counter. The match
1411:Generated_Source\PSoC4/CyLFClk.c ****     * values are not supported by counter 2.
1412:Generated_Source\PSoC4/CyLFClk.c ****     *
1413:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
1414:Generated_Source\PSoC4/CyLFClk.c ****     *
1415:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1416:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(uint32 counterNum)
1417:Generated_Source\PSoC4/CyLFClk.c ****     {
1418:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1419:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1420:Generated_Source\PSoC4/CyLFClk.c **** 
1421:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WDT_MATCH_REG >> 
1422:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
1423:Generated_Source\PSoC4/CyLFClk.c ****     }
1424:Generated_Source\PSoC4/CyLFClk.c **** 
1425:Generated_Source\PSoC4/CyLFClk.c **** 
1426:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1427:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1428:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1429:Generated_Source\PSoC4/CyLFClk.c ****     *
1430:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1431:Generated_Source\PSoC4/CyLFClk.c ****     *
1432:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the WDT counter.
1433:Generated_Source\PSoC4/CyLFClk.c ****     *
1434:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.  Counter 0 and Counter 1 are 16 bit counters 
1435:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
1436:Generated_Source\PSoC4/CyLFClk.c ****     *
1437:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1438:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(uint32 counterNum)
1439:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 51


1440:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
1441:Generated_Source\PSoC4/CyLFClk.c **** 
1442:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
1443:Generated_Source\PSoC4/CyLFClk.c ****         {
1444:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 0 */
1445:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
1446:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRLOW_REG & CY_SYS_WDT_LOWER_16BITS_MASK;
1447:Generated_Source\PSoC4/CyLFClk.c ****             break;
1448:Generated_Source\PSoC4/CyLFClk.c **** 
1449:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 1 */
1450:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
1451:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WDT_CTRLOW_REG >> CY_SYS_WDT_CNT_MATCH_SHIFT) & CY_SYS_WDT_LOWER
1452:Generated_Source\PSoC4/CyLFClk.c ****             break;
1453:Generated_Source\PSoC4/CyLFClk.c **** 
1454:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 2 */
1455:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
1456:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRHIGH_REG;
1457:Generated_Source\PSoC4/CyLFClk.c ****             break;
1458:Generated_Source\PSoC4/CyLFClk.c **** 
1459:Generated_Source\PSoC4/CyLFClk.c ****             default:
1460:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
1461:Generated_Source\PSoC4/CyLFClk.c ****             break;
1462:Generated_Source\PSoC4/CyLFClk.c ****         }
1463:Generated_Source\PSoC4/CyLFClk.c **** 
1464:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
1465:Generated_Source\PSoC4/CyLFClk.c ****     }
1466:Generated_Source\PSoC4/CyLFClk.c **** 
1467:Generated_Source\PSoC4/CyLFClk.c **** 
1468:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1469:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptSource
1470:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1471:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1472:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the WDT counters interrupts that are currently
1473:Generated_Source\PSoC4/CyLFClk.c ****     * set by the hardware, if a corresponding mode is selected.
1474:Generated_Source\PSoC4/CyLFClk.c ****     *
1475:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
1476:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER0_INT - Counter 0
1477:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER1_INT - Counter 1
1478:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER2_INT - Counter 2
1479:Generated_Source\PSoC4/CyLFClk.c ****     *
1480:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1481:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetInterruptSource(void)
1482:Generated_Source\PSoC4/CyLFClk.c ****     {
1483:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
1484:Generated_Source\PSoC4/CyLFClk.c ****     }
1485:Generated_Source\PSoC4/CyLFClk.c **** 
1486:Generated_Source\PSoC4/CyLFClk.c **** 
1487:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1488:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
1489:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1490:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1491:Generated_Source\PSoC4/CyLFClk.c ****     * Clears all the WDT counter interrupts set in the mask.
1492:Generated_Source\PSoC4/CyLFClk.c ****     *
1493:Generated_Source\PSoC4/CyLFClk.c ****     * Calling this function also prevents from Reset when the counter mode is set 
1494:Generated_Source\PSoC4/CyLFClk.c ****     * to generate 3 interrupts and then the device resets.
1495:Generated_Source\PSoC4/CyLFClk.c ****     *
1496:Generated_Source\PSoC4/CyLFClk.c ****     * All the WDT interrupts are to be cleared by the firmware, otherwise
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 52


1497:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
1498:Generated_Source\PSoC4/CyLFClk.c ****     *
1499:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1500:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_INT - Clears counter 0 interrupts <br>
1501:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_INT - Clears counter 1 interrupts <br>
1502:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_INT - Clears counter 2 interrupts
1503:Generated_Source\PSoC4/CyLFClk.c ****     *
1504:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1505:Generated_Source\PSoC4/CyLFClk.c ****     * This function temporary removes the watchdog lock, if it was set, and
1506:Generated_Source\PSoC4/CyLFClk.c ****     * restores the lock state after cleaning the WDT interrupts that are set in
1507:Generated_Source\PSoC4/CyLFClk.c ****     * a mask.
1508:Generated_Source\PSoC4/CyLFClk.c ****     *
1509:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1510:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(uint32 counterMask)
1511:Generated_Source\PSoC4/CyLFClk.c ****     {
1512:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
1513:Generated_Source\PSoC4/CyLFClk.c ****         uint32 wdtLockState;
1514:Generated_Source\PSoC4/CyLFClk.c **** 
1515:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
1516:Generated_Source\PSoC4/CyLFClk.c **** 
1517:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtLocked())
1518:Generated_Source\PSoC4/CyLFClk.c ****         {
1519:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 1u;
1520:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtUnlock();
1521:Generated_Source\PSoC4/CyLFClk.c ****         }
1522:Generated_Source\PSoC4/CyLFClk.c ****         else
1523:Generated_Source\PSoC4/CyLFClk.c ****         {
1524:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 0u;
1525:Generated_Source\PSoC4/CyLFClk.c ****         }
1526:Generated_Source\PSoC4/CyLFClk.c **** 
1527:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT control register value */
1528:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_WDT_COUNTER0_INT |
1529:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
1530:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER2_INT);
1531:Generated_Source\PSoC4/CyLFClk.c **** 
1532:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG = counterMask | (CY_SYS_WDT_CONTROL_REG & ~(CY_SYS_WDT_COUNTER0_INT 
1533:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
1534:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER2_INT)
1535:Generated_Source\PSoC4/CyLFClk.c **** 
1536:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
1537:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
1538:Generated_Source\PSoC4/CyLFClk.c ****         */
1539:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WDT_CONTROL_REG;
1540:Generated_Source\PSoC4/CyLFClk.c **** 
1541:Generated_Source\PSoC4/CyLFClk.c ****         if (1u == wdtLockState)
1542:Generated_Source\PSoC4/CyLFClk.c ****         {
1543:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtLock();
1544:Generated_Source\PSoC4/CyLFClk.c ****         }
1545:Generated_Source\PSoC4/CyLFClk.c **** 
1546:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
1547:Generated_Source\PSoC4/CyLFClk.c ****     }
1548:Generated_Source\PSoC4/CyLFClk.c **** 
1549:Generated_Source\PSoC4/CyLFClk.c **** 
1550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtResetCounters
1552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1553:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 53


1554:Generated_Source\PSoC4/CyLFClk.c ****     * Resets all the WDT counters set in the mask.
1555:Generated_Source\PSoC4/CyLFClk.c ****     *
1556:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
1557:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_RESET - Reset counter 0 <br>
1558:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_RESET - Reset counter 1 <br>
1559:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_RESET - Reset counter 2
1560:Generated_Source\PSoC4/CyLFClk.c ****     *
1561:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1562:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not reset counter values if the Watchdog is locked.
1563:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
1564:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1565:Generated_Source\PSoC4/CyLFClk.c ****     * The LFCLK source must be enabled. Otherwise, the function will never exit.
1566:Generated_Source\PSoC4/CyLFClk.c ****     *
1567:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1568:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtResetCounters(uint32 countersMask)
1569:Generated_Source\PSoC4/CyLFClk.c ****     {
1570:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
1571:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= (countersMask & CY_SYS_WDT_COUNTERS_RESET);
1572:Generated_Source\PSoC4/CyLFClk.c **** 
1573:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WDT_CONTROL_REG & CY_SYS_WDT_COUNTERS_RESET))
1574:Generated_Source\PSoC4/CyLFClk.c ****         {
1575:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
1576:Generated_Source\PSoC4/CyLFClk.c ****         }
1577:Generated_Source\PSoC4/CyLFClk.c ****     }
1578:Generated_Source\PSoC4/CyLFClk.c **** 
1579:Generated_Source\PSoC4/CyLFClk.c **** 
1580:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1581:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetInterruptCallback
1582:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1583:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1584:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular WDT counter.
1585:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the WDT interrupt.
1586:Generated_Source\PSoC4/CyLFClk.c ****     *
1587:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1588:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
1589:Generated_Source\PSoC4/CyLFClk.c ****     *
1590:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the previous callback function.
1591:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
1592:Generated_Source\PSoC4/CyLFClk.c ****     *
1593:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1594:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function)
1595:Generated_Source\PSoC4/CyLFClk.c ****     {
1596:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
1597:Generated_Source\PSoC4/CyLFClk.c **** 
1598:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1599:Generated_Source\PSoC4/CyLFClk.c ****         {
1600:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysWdtCallback[counterNum];
1601:Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
1602:Generated_Source\PSoC4/CyLFClk.c ****         }
1603:Generated_Source\PSoC4/CyLFClk.c ****         else
1604:Generated_Source\PSoC4/CyLFClk.c ****         {
1605:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1606:Generated_Source\PSoC4/CyLFClk.c ****         }
1607:Generated_Source\PSoC4/CyLFClk.c **** 
1608:Generated_Source\PSoC4/CyLFClk.c ****         return((cyWdtCallback)prevCallback);
1609:Generated_Source\PSoC4/CyLFClk.c ****     }
1610:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 54


1611:Generated_Source\PSoC4/CyLFClk.c **** 
1612:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1613:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptCallback
1614:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1615:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1616:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the particular WDT counter.
1617:Generated_Source\PSoC4/CyLFClk.c ****     *
1618:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1619:Generated_Source\PSoC4/CyLFClk.c ****     *
1620:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for a particular WDT by
1621:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
1622:Generated_Source\PSoC4/CyLFClk.c ****     *
1623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1624:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(uint32 counterNum)
1625:Generated_Source\PSoC4/CyLFClk.c ****     {
1626:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
1627:Generated_Source\PSoC4/CyLFClk.c **** 
1628:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1629:Generated_Source\PSoC4/CyLFClk.c ****         {
1630:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyWdtCallback)cySysWdtCallback[counterNum];
1631:Generated_Source\PSoC4/CyLFClk.c ****         }
1632:Generated_Source\PSoC4/CyLFClk.c ****         else
1633:Generated_Source\PSoC4/CyLFClk.c ****         {
1634:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1635:Generated_Source\PSoC4/CyLFClk.c ****         }
1636:Generated_Source\PSoC4/CyLFClk.c **** 
1637:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
1638:Generated_Source\PSoC4/CyLFClk.c ****     }
1639:Generated_Source\PSoC4/CyLFClk.c **** 
1640:Generated_Source\PSoC4/CyLFClk.c **** 
1641:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1642:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnableCounterIsr
1643:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1644:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1645:Generated_Source\PSoC4/CyLFClk.c ****     * Enables the ISR callback servicing for the particular WDT counter
1646:Generated_Source\PSoC4/CyLFClk.c ****     *
1647:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1648:Generated_Source\PSoC4/CyLFClk.c ****     *
1649:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate WDT counter. For example value 1 
1650:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT counter.
1651:Generated_Source\PSoC4/CyLFClk.c ****     *
1652:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1653:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnableCounterIsr(uint32 counterNum)
1654:Generated_Source\PSoC4/CyLFClk.c ****     {
1655:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1656:Generated_Source\PSoC4/CyLFClk.c ****         {
1657:Generated_Source\PSoC4/CyLFClk.c ****             disableServicedIsr &= ~counterIntMaskTbl[counterNum];
1658:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
1659:Generated_Source\PSoC4/CyLFClk.c ****         }
1660:Generated_Source\PSoC4/CyLFClk.c ****         else
1661:Generated_Source\PSoC4/CyLFClk.c ****         {
1662:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1663:Generated_Source\PSoC4/CyLFClk.c ****         }
1664:Generated_Source\PSoC4/CyLFClk.c ****     }
1665:Generated_Source\PSoC4/CyLFClk.c **** 
1666:Generated_Source\PSoC4/CyLFClk.c **** 
1667:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 55


1668:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisableCounterIsr
1669:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1670:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1671:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the ISR callback servicing for the particular WDT counter
1672:Generated_Source\PSoC4/CyLFClk.c ****     *
1673:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1674:Generated_Source\PSoC4/CyLFClk.c ****     *
1675:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1676:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisableCounterIsr(uint32 counterNum)
1677:Generated_Source\PSoC4/CyLFClk.c ****     {
1678:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1679:Generated_Source\PSoC4/CyLFClk.c ****         {
1680:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask &= ~counterIntMaskTbl[counterNum];
1681:Generated_Source\PSoC4/CyLFClk.c ****         }
1682:Generated_Source\PSoC4/CyLFClk.c ****         else
1683:Generated_Source\PSoC4/CyLFClk.c ****         {
1684:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1685:Generated_Source\PSoC4/CyLFClk.c ****         }
1686:Generated_Source\PSoC4/CyLFClk.c ****     }
1687:Generated_Source\PSoC4/CyLFClk.c **** 
1688:Generated_Source\PSoC4/CyLFClk.c **** 
1689:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1690:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
1691:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1692:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1693:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
1694:Generated_Source\PSoC4/CyLFClk.c ****     *
1695:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which WDT triggered in the interrupt and calls the 
1696:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
1697:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetIsrCallback() API.
1698:Generated_Source\PSoC4/CyLFClk.c ****     *
1699:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
1700:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
1701:Generated_Source\PSoC4/CyLFClk.c ****     *
1702:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1703:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
1704:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
1705:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
1706:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
1707:Generated_Source\PSoC4/CyLFClk.c ****     *
1708:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1709:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
1710:Generated_Source\PSoC4/CyLFClk.c ****     {
1711:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
1712:Generated_Source\PSoC4/CyLFClk.c ****         {
1713:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER0_INT & wdtIsrMask))
1714:Generated_Source\PSoC4/CyLFClk.c ****             {
1715:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER0_INT);
1716:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
1717:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
1718:Generated_Source\PSoC4/CyLFClk.c ****                 {
1719:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER0])();
1720:Generated_Source\PSoC4/CyLFClk.c ****                 }
1721:Generated_Source\PSoC4/CyLFClk.c ****             }
1722:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1723:Generated_Source\PSoC4/CyLFClk.c ****         }
1724:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 56


1725:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER1_INT & CY_SYS_WDT_CONTROL_REG))
1726:Generated_Source\PSoC4/CyLFClk.c ****         {
1727:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER1_INT & wdtIsrMask))
1728:Generated_Source\PSoC4/CyLFClk.c ****             {
1729:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER1_INT);
1730:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
1731:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
1732:Generated_Source\PSoC4/CyLFClk.c ****                 {
1733:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER1])();
1734:Generated_Source\PSoC4/CyLFClk.c ****                 }
1735:Generated_Source\PSoC4/CyLFClk.c ****             }
1736:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1737:Generated_Source\PSoC4/CyLFClk.c ****         }
1738:Generated_Source\PSoC4/CyLFClk.c **** 
1739:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER2_INT & CY_SYS_WDT_CONTROL_REG))
1740:Generated_Source\PSoC4/CyLFClk.c ****         {
1741:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER2_INT & wdtIsrMask))
1742:Generated_Source\PSoC4/CyLFClk.c ****             {
1743:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER2] != (void *) 0)
1744:Generated_Source\PSoC4/CyLFClk.c ****                 {
1745:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER2])();
1746:Generated_Source\PSoC4/CyLFClk.c ****                 }
1747:Generated_Source\PSoC4/CyLFClk.c ****             }
1748:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER2_INT);
1749:Generated_Source\PSoC4/CyLFClk.c ****         }
1750:Generated_Source\PSoC4/CyLFClk.c ****     }
1751:Generated_Source\PSoC4/CyLFClk.c **** 
1752:Generated_Source\PSoC4/CyLFClk.c **** 
1753:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWatchdogFeed
1755:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1757:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the corresponded Watchdog Counter before it causes the device reset.
1758:Generated_Source\PSoC4/CyLFClk.c ****     *
1759:Generated_Source\PSoC4/CyLFClk.c ****     * Supported only for first WDT0 and second WDT1 counters in the "Watchdog" or 
1760:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" modes.
1761:Generated_Source\PSoC4/CyLFClk.c ****     *
1762:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1763:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0 - Feeds the Counter 0 <br>
1764:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1 - Feeds the Counter 1
1765:Generated_Source\PSoC4/CyLFClk.c ****     *
1766:Generated_Source\PSoC4/CyLFClk.c ****     * Value of counterNum corresponds to appropriate counter. For example value 1 
1767:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT1 Counter.
1768:Generated_Source\PSoC4/CyLFClk.c ****     *
1769:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1770:Generated_Source\PSoC4/CyLFClk.c ****     * Clears the WDT counter in the "Watchdog" mode or clears the WDT interrupt in
1771:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" mode. Does nothing in other modes.
1772:Generated_Source\PSoC4/CyLFClk.c ****     *
1773:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1774:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWatchdogFeed(uint32 counterNum)
1775:Generated_Source\PSoC4/CyLFClk.c ****     {
1776:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
1777:Generated_Source\PSoC4/CyLFClk.c ****         {
1778:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1779:Generated_Source\PSoC4/CyLFClk.c ****             {
1780:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1781:Generated_Source\PSoC4/CyLFClk.c ****             }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 57


1782:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1783:Generated_Source\PSoC4/CyLFClk.c ****             {
1784:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER0_RESET);
1785:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1786:Generated_Source\PSoC4/CyLFClk.c ****             }
1787:Generated_Source\PSoC4/CyLFClk.c ****             else
1788:Generated_Source\PSoC4/CyLFClk.c ****             {
1789:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1790:Generated_Source\PSoC4/CyLFClk.c ****             }
1791:Generated_Source\PSoC4/CyLFClk.c ****         }
1792:Generated_Source\PSoC4/CyLFClk.c ****         else if(counterNum == CY_SYS_WDT_COUNTER1)
1793:Generated_Source\PSoC4/CyLFClk.c ****         {
1794:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1795:Generated_Source\PSoC4/CyLFClk.c ****             {
1796:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1797:Generated_Source\PSoC4/CyLFClk.c ****             }
1798:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1799:Generated_Source\PSoC4/CyLFClk.c ****             {
1800:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET);
1801:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1802:Generated_Source\PSoC4/CyLFClk.c ****             }
1803:Generated_Source\PSoC4/CyLFClk.c ****             else
1804:Generated_Source\PSoC4/CyLFClk.c ****             {
1805:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1806:Generated_Source\PSoC4/CyLFClk.c ****             }
1807:Generated_Source\PSoC4/CyLFClk.c ****         }
1808:Generated_Source\PSoC4/CyLFClk.c ****         else
1809:Generated_Source\PSoC4/CyLFClk.c ****         {
1810:Generated_Source\PSoC4/CyLFClk.c ****             /* Do nothing. */
1811:Generated_Source\PSoC4/CyLFClk.c ****         }
1812:Generated_Source\PSoC4/CyLFClk.c ****     }
1813:Generated_Source\PSoC4/CyLFClk.c **** 
1814:Generated_Source\PSoC4/CyLFClk.c **** 
1815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeCatch
1817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1819:Generated_Source\PSoC4/CyLFClk.c ****     * Returns once the LFCLK positive edge occurred.
1820:Generated_Source\PSoC4/CyLFClk.c ****     *
1821:Generated_Source\PSoC4/CyLFClk.c ****     * CySysClkLfclkPosedgeRestore() should be called after this function
1822:Generated_Source\PSoC4/CyLFClk.c ****     * to restore the WDT configuration.
1823:Generated_Source\PSoC4/CyLFClk.c ****     *
1824:Generated_Source\PSoC4/CyLFClk.c ****     * A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1825:Generated_Source\PSoC4/CyLFClk.c ****     * functions is expected to be called inside a critical section.
1826:Generated_Source\PSoC4/CyLFClk.c ****     *
1827:Generated_Source\PSoC4/CyLFClk.c ****     * To ensure that the WDT counter value is read until it changes, the enabled
1828:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter is used. If no counter is enabled, counter 0 is enabled.
1829:Generated_Source\PSoC4/CyLFClk.c ****     * And after the LFCLK source is switched, the counter 0 configuration
1830:Generated_Source\PSoC4/CyLFClk.c ****     * is restored.
1831:Generated_Source\PSoC4/CyLFClk.c ****     *
1832:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
1833:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1834:Generated_Source\PSoC4/CyLFClk.c ****     *
1835:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1836:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is
1837:Generated_Source\PSoC4/CyLFClk.c ****     * called). Call CySysWdtUnlock() to unlock WDT.
1838:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 58


1839:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1840:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void)
1841:Generated_Source\PSoC4/CyLFClk.c ****     {
1842:Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
1843:Generated_Source\PSoC4/CyLFClk.c ****         static uint32 lfclkPosedgeEnabledWdtCounter = 0u;
1844:Generated_Source\PSoC4/CyLFClk.c **** 
1845:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1846:Generated_Source\PSoC4/CyLFClk.c ****         {
1847:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1848:Generated_Source\PSoC4/CyLFClk.c ****         }
1849:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1850:Generated_Source\PSoC4/CyLFClk.c ****         {
1851:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER1;
1852:Generated_Source\PSoC4/CyLFClk.c ****         }
1853:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1854:Generated_Source\PSoC4/CyLFClk.c ****         {
1855:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER2;
1856:Generated_Source\PSoC4/CyLFClk.c ****         }
1857:Generated_Source\PSoC4/CyLFClk.c ****         else /* All WDT counters are disabled */
1858:Generated_Source\PSoC4/CyLFClk.c ****         {
1859:Generated_Source\PSoC4/CyLFClk.c ****             /* Configure WDT counter # 0 */
1860:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 1u;
1861:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1862:Generated_Source\PSoC4/CyLFClk.c **** 
1863:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Mode = CySysWdtGetMode(CY_SYS_WDT_COUNTER0);
1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
1865:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
1866:Generated_Source\PSoC4/CyLFClk.c ****         }
1867:Generated_Source\PSoC4/CyLFClk.c **** 
1868:Generated_Source\PSoC4/CyLFClk.c ****         firstCount = CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter);
1869:Generated_Source\PSoC4/CyLFClk.c ****         while (CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
1870:Generated_Source\PSoC4/CyLFClk.c ****         {
1871:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for counter to increment */
1872:Generated_Source\PSoC4/CyLFClk.c ****         }
1873:Generated_Source\PSoC4/CyLFClk.c ****     }
1874:Generated_Source\PSoC4/CyLFClk.c **** 
1875:Generated_Source\PSoC4/CyLFClk.c **** 
1876:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1877:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeRestore
1878:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1879:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1880:Generated_Source\PSoC4/CyLFClk.c ****     *  Restores the WDT configuration after a CySysClkLfclkPosedgeCatch() call.
1881:Generated_Source\PSoC4/CyLFClk.c ****     *
1882:Generated_Source\PSoC4/CyLFClk.c ****     *  A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1883:Generated_Source\PSoC4/CyLFClk.c ****     *  functions is expected to be called inside a critical section.
1884:Generated_Source\PSoC4/CyLFClk.c ****     *
1885:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000/PSoC 4000S / PSoC 4100S / PSoC Analog 
1886:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1887:Generated_Source\PSoC4/CyLFClk.c ****     *
1888:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1889:Generated_Source\PSoC4/CyLFClk.c ****     *  This function has no effect if WDT is locked (CySysWdtLock() is
1890:Generated_Source\PSoC4/CyLFClk.c ****     *  called). Call CySysWdtUnlock() to unlock WDT.
1891:Generated_Source\PSoC4/CyLFClk.c ****     *
1892:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1893:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1894:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void)
1895:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 59


1896:Generated_Source\PSoC4/CyLFClk.c ****         if (lfclkPosedgeWdtCounter0Enabled != 0u)
1897:Generated_Source\PSoC4/CyLFClk.c ****         {
1898:Generated_Source\PSoC4/CyLFClk.c ****             /* Restore counter # 0 configuration and force its shutdown */
1899:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= (uint32)(~CY_SYS_WDT_COUNTER0_MASK);
1900:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
1901:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 0u;
1902:Generated_Source\PSoC4/CyLFClk.c ****         }
1903:Generated_Source\PSoC4/CyLFClk.c ****     }
1904:Generated_Source\PSoC4/CyLFClk.c **** 
1905:Generated_Source\PSoC4/CyLFClk.c **** #else
1906:Generated_Source\PSoC4/CyLFClk.c **** 
1907:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1909:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLFClk.c ****     *
1911:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of the WDT counter.
1912:Generated_Source\PSoC4/CyLFClk.c ****     *
1913:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1914:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - Counter is disabled
1915:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - Counter is enabled
1916:Generated_Source\PSoC4/CyLFClk.c ****     *
1917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1918:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(void)
1919:Generated_Source\PSoC4/CyLFClk.c ****     {
 731              		.loc 2 1919 0
 732              		.cfi_startproc
 733 0000 80B5     		push	{r7, lr}
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 7, -8
 736              		.cfi_offset 14, -4
 737 0002 00AF     		add	r7, sp, #0
 738              		.cfi_def_cfa_register 7
1920:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
 739              		.loc 2 1920 0
 740 0004 054B     		ldr	r3, .L58
 741 0006 1B68     		ldr	r3, [r3]
 742 0008 054A     		ldr	r2, .L58+4
 743 000a 9446     		mov	ip, r2
 744 000c 6344     		add	r3, r3, ip
 745 000e 5A1E     		sub	r2, r3, #1
 746 0010 9341     		sbc	r3, r3, r2
 747 0012 DBB2     		uxtb	r3, r3
1921:Generated_Source\PSoC4/CyLFClk.c ****     }
 748              		.loc 2 1921 0
 749 0014 181C     		mov	r0, r3
 750 0016 BD46     		mov	sp, r7
 751              		@ sp needed
 752 0018 80BD     		pop	{r7, pc}
 753              	.L59:
 754 001a C046     		.align	2
 755              	.L58:
 756 001c 38000340 		.word	1073938488
 757 0020 9B771253 		.word	1393719195
 758              		.cfi_endproc
 759              	.LFE11:
 760              		.size	CySysWdtGetEnabledStatus, .-CySysWdtGetEnabledStatus
 761              		.section	.text.CySysWdtEnable,"ax",%progbits
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 60


 762              		.align	2
 763              		.global	CySysWdtEnable
 764              		.code	16
 765              		.thumb_func
 766              		.type	CySysWdtEnable, %function
 767              	CySysWdtEnable:
 768              	.LFB12:
1922:Generated_Source\PSoC4/CyLFClk.c **** 
1923:Generated_Source\PSoC4/CyLFClk.c **** 
1924:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1925:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1926:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1927:Generated_Source\PSoC4/CyLFClk.c ****     *
1928:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1929:Generated_Source\PSoC4/CyLFClk.c ****     * Enables watchdog timer reset generation.
1930:Generated_Source\PSoC4/CyLFClk.c ****     *
1931:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtClearInterrupt() feeds the watchdog. Two unserviced interrupts lead 
1932:Generated_Source\PSoC4/CyLFClk.c ****     * to a system reset (i.e. at the third match).
1933:Generated_Source\PSoC4/CyLFClk.c ****     *
1934:Generated_Source\PSoC4/CyLFClk.c ****     * ILO is enabled by the hardware once WDT is started.
1935:Generated_Source\PSoC4/CyLFClk.c ****     *
1936:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(void)
1938:Generated_Source\PSoC4/CyLFClk.c ****     {
 769              		.loc 2 1938 0
 770              		.cfi_startproc
 771 0000 80B5     		push	{r7, lr}
 772              		.cfi_def_cfa_offset 8
 773              		.cfi_offset 7, -8
 774              		.cfi_offset 14, -4
 775 0002 00AF     		add	r7, sp, #0
 776              		.cfi_def_cfa_register 7
1939:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
 777              		.loc 2 1939 0
 778 0004 024B     		ldr	r3, .L61
 779 0006 0022     		mov	r2, #0
 780 0008 1A60     		str	r2, [r3]
1940:Generated_Source\PSoC4/CyLFClk.c ****     }
 781              		.loc 2 1940 0
 782 000a BD46     		mov	sp, r7
 783              		@ sp needed
 784 000c 80BD     		pop	{r7, pc}
 785              	.L62:
 786 000e C046     		.align	2
 787              	.L61:
 788 0010 38000340 		.word	1073938488
 789              		.cfi_endproc
 790              	.LFE12:
 791              		.size	CySysWdtEnable, .-CySysWdtEnable
 792              		.section	.text.CySysWdtDisable,"ax",%progbits
 793              		.align	2
 794              		.global	CySysWdtDisable
 795              		.code	16
 796              		.thumb_func
 797              		.type	CySysWdtDisable, %function
 798              	CySysWdtDisable:
 799              	.LFB13:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 61


1941:Generated_Source\PSoC4/CyLFClk.c **** 
1942:Generated_Source\PSoC4/CyLFClk.c **** 
1943:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1944:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1945:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1946:Generated_Source\PSoC4/CyLFClk.c ****     *
1947:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the WDT reset generation.
1948:Generated_Source\PSoC4/CyLFClk.c ****     *
1949:Generated_Source\PSoC4/CyLFClk.c ****     * This function unlocks the ENABLE bit in the CLK_ILO_CONFIG registers and
1950:Generated_Source\PSoC4/CyLFClk.c ****     * enables the user to disable ILO.
1951:Generated_Source\PSoC4/CyLFClk.c ****     *
1952:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1953:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(void)
1954:Generated_Source\PSoC4/CyLFClk.c ****     {
 800              		.loc 2 1954 0
 801              		.cfi_startproc
 802 0000 80B5     		push	{r7, lr}
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 7, -8
 805              		.cfi_offset 14, -4
 806 0002 00AF     		add	r7, sp, #0
 807              		.cfi_def_cfa_register 7
1955:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
 808              		.loc 2 1955 0
 809 0004 024B     		ldr	r3, .L64
 810 0006 034A     		ldr	r2, .L64+4
 811 0008 1A60     		str	r2, [r3]
1956:Generated_Source\PSoC4/CyLFClk.c ****     }
 812              		.loc 2 1956 0
 813 000a BD46     		mov	sp, r7
 814              		@ sp needed
 815 000c 80BD     		pop	{r7, pc}
 816              	.L65:
 817 000e C046     		.align	2
 818              	.L64:
 819 0010 38000340 		.word	1073938488
 820 0014 6588EDAC 		.word	-1393719195
 821              		.cfi_endproc
 822              	.LFE13:
 823              		.size	CySysWdtDisable, .-CySysWdtDisable
 824              		.section	.text.CySysWdtSetMatch,"ax",%progbits
 825              		.align	2
 826              		.global	CySysWdtSetMatch
 827              		.code	16
 828              		.thumb_func
 829              		.type	CySysWdtSetMatch, %function
 830              	CySysWdtSetMatch:
 831              	.LFB14:
1957:Generated_Source\PSoC4/CyLFClk.c **** 
1958:Generated_Source\PSoC4/CyLFClk.c **** 
1959:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1960:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1961:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1962:Generated_Source\PSoC4/CyLFClk.c ****     *
1963:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1964:Generated_Source\PSoC4/CyLFClk.c ****     *
1965:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 62


1966:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
1967:Generated_Source\PSoC4/CyLFClk.c ****     *
1968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 match)
1970:Generated_Source\PSoC4/CyLFClk.c ****     {
 832              		.loc 2 1970 0
 833              		.cfi_startproc
 834 0000 80B5     		push	{r7, lr}
 835              		.cfi_def_cfa_offset 8
 836              		.cfi_offset 7, -8
 837              		.cfi_offset 14, -4
 838 0002 82B0     		sub	sp, sp, #8
 839              		.cfi_def_cfa_offset 16
 840 0004 00AF     		add	r7, sp, #0
 841              		.cfi_def_cfa_register 7
 842 0006 7860     		str	r0, [r7, #4]
1971:Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
 843              		.loc 2 1971 0
 844 0008 7B68     		ldr	r3, [r7, #4]
 845 000a 1B04     		lsl	r3, r3, #16
 846 000c 1B0C     		lsr	r3, r3, #16
 847 000e 7B60     		str	r3, [r7, #4]
1972:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_MATCH_MASK)) | match;
 848              		.loc 2 1972 0
 849 0010 054B     		ldr	r3, .L67
 850 0012 054A     		ldr	r2, .L67
 851 0014 1268     		ldr	r2, [r2]
 852 0016 120C     		lsr	r2, r2, #16
 853 0018 1104     		lsl	r1, r2, #16
 854 001a 7A68     		ldr	r2, [r7, #4]
 855 001c 0A43     		orr	r2, r1
 856 001e 1A60     		str	r2, [r3]
1973:Generated_Source\PSoC4/CyLFClk.c ****     }
 857              		.loc 2 1973 0
 858 0020 BD46     		mov	sp, r7
 859 0022 02B0     		add	sp, sp, #8
 860              		@ sp needed
 861 0024 80BD     		pop	{r7, pc}
 862              	.L68:
 863 0026 C046     		.align	2
 864              	.L67:
 865 0028 40000340 		.word	1073938496
 866              		.cfi_endproc
 867              	.LFE14:
 868              		.size	CySysWdtSetMatch, .-CySysWdtSetMatch
 869              		.section	.text.CySysWdtGetMatch,"ax",%progbits
 870              		.align	2
 871              		.global	CySysWdtGetMatch
 872              		.code	16
 873              		.thumb_func
 874              		.type	CySysWdtGetMatch, %function
 875              	CySysWdtGetMatch:
 876              	.LFB15:
1974:Generated_Source\PSoC4/CyLFClk.c **** 
1975:Generated_Source\PSoC4/CyLFClk.c **** 
1976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 63


1978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1979:Generated_Source\PSoC4/CyLFClk.c ****     *
1980:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1981:Generated_Source\PSoC4/CyLFClk.c ****     *
1982:Generated_Source\PSoC4/CyLFClk.c ****     * \return The counter match value.
1983:Generated_Source\PSoC4/CyLFClk.c ****     *
1984:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1985:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(void)
1986:Generated_Source\PSoC4/CyLFClk.c ****     {
 877              		.loc 2 1986 0
 878              		.cfi_startproc
 879 0000 80B5     		push	{r7, lr}
 880              		.cfi_def_cfa_offset 8
 881              		.cfi_offset 7, -8
 882              		.cfi_offset 14, -4
 883 0002 00AF     		add	r7, sp, #0
 884              		.cfi_def_cfa_register 7
1987:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
 885              		.loc 2 1987 0
 886 0004 034B     		ldr	r3, .L71
 887 0006 1B68     		ldr	r3, [r3]
 888 0008 1B04     		lsl	r3, r3, #16
 889 000a 1B0C     		lsr	r3, r3, #16
1988:Generated_Source\PSoC4/CyLFClk.c ****     }
 890              		.loc 2 1988 0
 891 000c 181C     		mov	r0, r3
 892 000e BD46     		mov	sp, r7
 893              		@ sp needed
 894 0010 80BD     		pop	{r7, pc}
 895              	.L72:
 896 0012 C046     		.align	2
 897              	.L71:
 898 0014 40000340 		.word	1073938496
 899              		.cfi_endproc
 900              	.LFE15:
 901              		.size	CySysWdtGetMatch, .-CySysWdtGetMatch
 902              		.section	.text.CySysWdtGetCount,"ax",%progbits
 903              		.align	2
 904              		.global	CySysWdtGetCount
 905              		.code	16
 906              		.thumb_func
 907              		.type	CySysWdtGetCount, %function
 908              	CySysWdtGetCount:
 909              	.LFB16:
1989:Generated_Source\PSoC4/CyLFClk.c **** 
1990:Generated_Source\PSoC4/CyLFClk.c **** 
1991:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1993:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLFClk.c ****     *
1995:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1996:Generated_Source\PSoC4/CyLFClk.c ****     *
1997:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.
1998:Generated_Source\PSoC4/CyLFClk.c ****     *
1999:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2000:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(void)
2001:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 64


 910              		.loc 2 2001 0
 911              		.cfi_startproc
 912 0000 80B5     		push	{r7, lr}
 913              		.cfi_def_cfa_offset 8
 914              		.cfi_offset 7, -8
 915              		.cfi_offset 14, -4
 916 0002 00AF     		add	r7, sp, #0
 917              		.cfi_def_cfa_register 7
2002:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
 918              		.loc 2 2002 0
 919 0004 024B     		ldr	r3, .L75
 920 0006 1B68     		ldr	r3, [r3]
2003:Generated_Source\PSoC4/CyLFClk.c ****     }
 921              		.loc 2 2003 0
 922 0008 181C     		mov	r0, r3
 923 000a BD46     		mov	sp, r7
 924              		@ sp needed
 925 000c 80BD     		pop	{r7, pc}
 926              	.L76:
 927 000e C046     		.align	2
 928              	.L75:
 929 0010 3C000340 		.word	1073938492
 930              		.cfi_endproc
 931              	.LFE16:
 932              		.size	CySysWdtGetCount, .-CySysWdtGetCount
 933              		.section	.text.CySysWdtSetIgnoreBits,"ax",%progbits
 934              		.align	2
 935              		.global	CySysWdtSetIgnoreBits
 936              		.code	16
 937              		.thumb_func
 938              		.type	CySysWdtSetIgnoreBits, %function
 939              	CySysWdtSetIgnoreBits:
 940              	.LFB17:
2004:Generated_Source\PSoC4/CyLFClk.c **** 
2005:Generated_Source\PSoC4/CyLFClk.c **** 
2006:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIgnoreBits
2008:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLFClk.c ****     *
2010:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2011:Generated_Source\PSoC4/CyLFClk.c ****     * Configures the number of the MSB bits of the watchdog timer that are not
2012:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2013:Generated_Source\PSoC4/CyLFClk.c ****     *
2014:Generated_Source\PSoC4/CyLFClk.c ****     * \param bitsNum Valid range [0-15]. The number of the MSB bits.
2015:Generated_Source\PSoC4/CyLFClk.c ****     *
2016:Generated_Source\PSoC4/CyLFClk.c ****     * \details The value of bitsNum controls the time-to-reset of the watchdog
2017:Generated_Source\PSoC4/CyLFClk.c ****     * (which happens after 3 successive matches).
2018:Generated_Source\PSoC4/CyLFClk.c ****     *
2019:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2020:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetIgnoreBits(uint32 bitsNum)
2021:Generated_Source\PSoC4/CyLFClk.c ****     {
 941              		.loc 2 2021 0
 942              		.cfi_startproc
 943 0000 80B5     		push	{r7, lr}
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 7, -8
 946              		.cfi_offset 14, -4
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 65


 947 0002 82B0     		sub	sp, sp, #8
 948              		.cfi_def_cfa_offset 16
 949 0004 00AF     		add	r7, sp, #0
 950              		.cfi_def_cfa_register 7
 951 0006 7860     		str	r0, [r7, #4]
2022:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
 952              		.loc 2 2022 0
 953 0008 7B68     		ldr	r3, [r7, #4]
 954 000a 1A04     		lsl	r2, r3, #16
 955 000c F023     		mov	r3, #240
 956 000e 1B03     		lsl	r3, r3, #12
 957 0010 1340     		and	r3, r2
 958 0012 7B60     		str	r3, [r7, #4]
2023:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
 959              		.loc 2 2023 0
 960 0014 054B     		ldr	r3, .L78
 961 0016 054A     		ldr	r2, .L78
 962 0018 1268     		ldr	r2, [r2]
 963 001a 0549     		ldr	r1, .L78+4
 964 001c 1140     		and	r1, r2
 965 001e 7A68     		ldr	r2, [r7, #4]
 966 0020 0A43     		orr	r2, r1
 967 0022 1A60     		str	r2, [r3]
2024:Generated_Source\PSoC4/CyLFClk.c ****     }
 968              		.loc 2 2024 0
 969 0024 BD46     		mov	sp, r7
 970 0026 02B0     		add	sp, sp, #8
 971              		@ sp needed
 972 0028 80BD     		pop	{r7, pc}
 973              	.L79:
 974 002a C046     		.align	2
 975              	.L78:
 976 002c 40000340 		.word	1073938496
 977 0030 FFFFF0FF 		.word	-983041
 978              		.cfi_endproc
 979              	.LFE17:
 980              		.size	CySysWdtSetIgnoreBits, .-CySysWdtSetIgnoreBits
 981              		.section	.text.CySysWdtGetIgnoreBits,"ax",%progbits
 982              		.align	2
 983              		.global	CySysWdtGetIgnoreBits
 984              		.code	16
 985              		.thumb_func
 986              		.type	CySysWdtGetIgnoreBits, %function
 987              	CySysWdtGetIgnoreBits:
 988              	.LFB18:
2025:Generated_Source\PSoC4/CyLFClk.c **** 
2026:Generated_Source\PSoC4/CyLFClk.c **** 
2027:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2028:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIgnoreBits
2029:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2030:Generated_Source\PSoC4/CyLFClk.c ****     *
2031:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2032:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the number of the  MSB bits of the watchdog timer that are not
2033:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2034:Generated_Source\PSoC4/CyLFClk.c ****     *
2035:Generated_Source\PSoC4/CyLFClk.c ****     * \return The number of the MSB bits.
2036:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 66


2037:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2038:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetIgnoreBits(void)
2039:Generated_Source\PSoC4/CyLFClk.c ****     {
 989              		.loc 2 2039 0
 990              		.cfi_startproc
 991 0000 80B5     		push	{r7, lr}
 992              		.cfi_def_cfa_offset 8
 993              		.cfi_offset 7, -8
 994              		.cfi_offset 14, -4
 995 0002 00AF     		add	r7, sp, #0
 996              		.cfi_def_cfa_register 7
2040:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
 997              		.loc 2 2040 0
 998 0004 044B     		ldr	r3, .L82
 999 0006 1A68     		ldr	r2, [r3]
 1000 0008 F023     		mov	r3, #240
 1001 000a 1B03     		lsl	r3, r3, #12
 1002 000c 1340     		and	r3, r2
 1003 000e 1B0C     		lsr	r3, r3, #16
2041:Generated_Source\PSoC4/CyLFClk.c ****     }
 1004              		.loc 2 2041 0
 1005 0010 181C     		mov	r0, r3
 1006 0012 BD46     		mov	sp, r7
 1007              		@ sp needed
 1008 0014 80BD     		pop	{r7, pc}
 1009              	.L83:
 1010 0016 C046     		.align	2
 1011              	.L82:
 1012 0018 40000340 		.word	1073938496
 1013              		.cfi_endproc
 1014              	.LFE18:
 1015              		.size	CySysWdtGetIgnoreBits, .-CySysWdtGetIgnoreBits
 1016              		.section	.text.CySysWdtClearInterrupt,"ax",%progbits
 1017              		.align	2
 1018              		.global	CySysWdtClearInterrupt
 1019              		.code	16
 1020              		.thumb_func
 1021              		.type	CySysWdtClearInterrupt, %function
 1022              	CySysWdtClearInterrupt:
 1023              	.LFB19:
2042:Generated_Source\PSoC4/CyLFClk.c **** 
2043:Generated_Source\PSoC4/CyLFClk.c **** 
2044:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2045:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
2046:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2047:Generated_Source\PSoC4/CyLFClk.c ****     *
2048:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2049:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the watchdog.
2050:Generated_Source\PSoC4/CyLFClk.c ****     * Cleans the WDT match flag which is set every time the WDT counter reaches a 
2051:Generated_Source\PSoC4/CyLFClk.c ****     * WDT match value. Two unserviced interrupts lead to a system reset 
2052:Generated_Source\PSoC4/CyLFClk.c ****     * (i.e. at the third match).
2053:Generated_Source\PSoC4/CyLFClk.c ****     *
2054:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2055:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(void)
2056:Generated_Source\PSoC4/CyLFClk.c ****     {
 1024              		.loc 2 2056 0
 1025              		.cfi_startproc
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 67


 1026 0000 80B5     		push	{r7, lr}
 1027              		.cfi_def_cfa_offset 8
 1028              		.cfi_offset 7, -8
 1029              		.cfi_offset 14, -4
 1030 0002 00AF     		add	r7, sp, #0
 1031              		.cfi_def_cfa_register 7
2057:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 1032              		.loc 2 2057 0
 1033 0004 034B     		ldr	r3, .L85
 1034 0006 034A     		ldr	r2, .L85
 1035 0008 1268     		ldr	r2, [r2]
 1036 000a 0121     		mov	r1, #1
 1037 000c 0A43     		orr	r2, r1
 1038 000e 1A60     		str	r2, [r3]
2058:Generated_Source\PSoC4/CyLFClk.c ****     }
 1039              		.loc 2 2058 0
 1040 0010 BD46     		mov	sp, r7
 1041              		@ sp needed
 1042 0012 80BD     		pop	{r7, pc}
 1043              	.L86:
 1044              		.align	2
 1045              	.L85:
 1046 0014 44000340 		.word	1073938500
 1047              		.cfi_endproc
 1048              	.LFE19:
 1049              		.size	CySysWdtClearInterrupt, .-CySysWdtClearInterrupt
 1050              		.section	.text.CySysWdtMaskInterrupt,"ax",%progbits
 1051              		.align	2
 1052              		.global	CySysWdtMaskInterrupt
 1053              		.code	16
 1054              		.thumb_func
 1055              		.type	CySysWdtMaskInterrupt, %function
 1056              	CySysWdtMaskInterrupt:
 1057              	.LFB20:
2059:Generated_Source\PSoC4/CyLFClk.c **** 
2060:Generated_Source\PSoC4/CyLFClk.c **** 
2061:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2062:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtMaskInterrupt
2063:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2064:Generated_Source\PSoC4/CyLFClk.c ****     *
2065:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2066:Generated_Source\PSoC4/CyLFClk.c ****     * After masking interrupts from WDT, they are not passed to CPU.
2067:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not disable WDT reset generation.
2068:Generated_Source\PSoC4/CyLFClk.c ****     *
2069:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2070:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtMaskInterrupt(void)
2071:Generated_Source\PSoC4/CyLFClk.c ****     {
 1058              		.loc 2 2071 0
 1059              		.cfi_startproc
 1060 0000 80B5     		push	{r7, lr}
 1061              		.cfi_def_cfa_offset 8
 1062              		.cfi_offset 7, -8
 1063              		.cfi_offset 14, -4
 1064 0002 00AF     		add	r7, sp, #0
 1065              		.cfi_def_cfa_register 7
2072:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
 1066              		.loc 2 2072 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 68


 1067 0004 034B     		ldr	r3, .L88
 1068 0006 034A     		ldr	r2, .L88
 1069 0008 1268     		ldr	r2, [r2]
 1070 000a 0121     		mov	r1, #1
 1071 000c 8A43     		bic	r2, r1
 1072 000e 1A60     		str	r2, [r3]
2073:Generated_Source\PSoC4/CyLFClk.c ****     }
 1073              		.loc 2 2073 0
 1074 0010 BD46     		mov	sp, r7
 1075              		@ sp needed
 1076 0012 80BD     		pop	{r7, pc}
 1077              	.L89:
 1078              		.align	2
 1079              	.L88:
 1080 0014 4C000340 		.word	1073938508
 1081              		.cfi_endproc
 1082              	.LFE20:
 1083              		.size	CySysWdtMaskInterrupt, .-CySysWdtMaskInterrupt
 1084              		.section	.text.CySysWdtUnmaskInterrupt,"ax",%progbits
 1085              		.align	2
 1086              		.global	CySysWdtUnmaskInterrupt
 1087              		.code	16
 1088              		.thumb_func
 1089              		.type	CySysWdtUnmaskInterrupt, %function
 1090              	CySysWdtUnmaskInterrupt:
 1091              	.LFB21:
2074:Generated_Source\PSoC4/CyLFClk.c **** 
2075:Generated_Source\PSoC4/CyLFClk.c **** 
2076:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2077:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnmaskInterrupt
2078:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2079:Generated_Source\PSoC4/CyLFClk.c ****     *
2080:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2081:Generated_Source\PSoC4/CyLFClk.c ****     * After unmasking interrupts from WDT, they are passed to CPU.
2082:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not impact the reset generation.
2083:Generated_Source\PSoC4/CyLFClk.c ****     *
2084:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2085:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnmaskInterrupt(void)
2086:Generated_Source\PSoC4/CyLFClk.c ****     {
 1092              		.loc 2 2086 0
 1093              		.cfi_startproc
 1094 0000 80B5     		push	{r7, lr}
 1095              		.cfi_def_cfa_offset 8
 1096              		.cfi_offset 7, -8
 1097              		.cfi_offset 14, -4
 1098 0002 00AF     		add	r7, sp, #0
 1099              		.cfi_def_cfa_register 7
2087:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 1100              		.loc 2 2087 0
 1101 0004 034B     		ldr	r3, .L91
 1102 0006 034A     		ldr	r2, .L91
 1103 0008 1268     		ldr	r2, [r2]
 1104 000a 0121     		mov	r1, #1
 1105 000c 0A43     		orr	r2, r1
 1106 000e 1A60     		str	r2, [r3]
2088:Generated_Source\PSoC4/CyLFClk.c ****     }
 1107              		.loc 2 2088 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 69


 1108 0010 BD46     		mov	sp, r7
 1109              		@ sp needed
 1110 0012 80BD     		pop	{r7, pc}
 1111              	.L92:
 1112              		.align	2
 1113              	.L91:
 1114 0014 4C000340 		.word	1073938508
 1115              		.cfi_endproc
 1116              	.LFE21:
 1117              		.size	CySysWdtUnmaskInterrupt, .-CySysWdtUnmaskInterrupt
 1118              		.section	.text.CySysWdtSetInterruptCallback,"ax",%progbits
 1119              		.align	2
 1120              		.global	CySysWdtSetInterruptCallback
 1121              		.code	16
 1122              		.thumb_func
 1123              		.type	CySysWdtSetInterruptCallback, %function
 1124              	CySysWdtSetInterruptCallback:
 1125              	.LFB22:
2089:Generated_Source\PSoC4/CyLFClk.c **** 
2090:Generated_Source\PSoC4/CyLFClk.c **** 
2091:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIsrCallback
2093:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLFClk.c ****     *
2095:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2096:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the WDT counter
2097:Generated_Source\PSoC4/CyLFClk.c ****     *
2098:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2099:Generated_Source\PSoC4/CyLFClk.c ****     *
2100:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to a previous callback function.
2101:Generated_Source\PSoC4/CyLFClk.c ****     *
2102:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2103:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function)
2104:Generated_Source\PSoC4/CyLFClk.c ****     {
 1126              		.loc 2 2104 0
 1127              		.cfi_startproc
 1128 0000 80B5     		push	{r7, lr}
 1129              		.cfi_def_cfa_offset 8
 1130              		.cfi_offset 7, -8
 1131              		.cfi_offset 14, -4
 1132 0002 84B0     		sub	sp, sp, #16
 1133              		.cfi_def_cfa_offset 24
 1134 0004 00AF     		add	r7, sp, #0
 1135              		.cfi_def_cfa_register 7
 1136 0006 7860     		str	r0, [r7, #4]
2105:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
 1137              		.loc 2 2105 0
 1138 0008 0023     		mov	r3, #0
 1139 000a FB60     		str	r3, [r7, #12]
2106:Generated_Source\PSoC4/CyLFClk.c **** 
2107:Generated_Source\PSoC4/CyLFClk.c ****         prevCallback = cySysWdtCallback;
 1140              		.loc 2 2107 0
 1141 000c 054B     		ldr	r3, .L95
 1142 000e 1B68     		ldr	r3, [r3]
 1143 0010 FB60     		str	r3, [r7, #12]
2108:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
 1144              		.loc 2 2108 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 70


 1145 0012 044B     		ldr	r3, .L95
 1146 0014 7A68     		ldr	r2, [r7, #4]
 1147 0016 1A60     		str	r2, [r3]
2109:Generated_Source\PSoC4/CyLFClk.c **** 
2110:Generated_Source\PSoC4/CyLFClk.c ****         return(prevCallback);
 1148              		.loc 2 2110 0
 1149 0018 FB68     		ldr	r3, [r7, #12]
2111:Generated_Source\PSoC4/CyLFClk.c ****     }
 1150              		.loc 2 2111 0
 1151 001a 181C     		mov	r0, r3
 1152 001c BD46     		mov	sp, r7
 1153 001e 04B0     		add	sp, sp, #16
 1154              		@ sp needed
 1155 0020 80BD     		pop	{r7, pc}
 1156              	.L96:
 1157 0022 C046     		.align	2
 1158              	.L95:
 1159 0024 10000000 		.word	cySysWdtCallback
 1160              		.cfi_endproc
 1161              	.LFE22:
 1162              		.size	CySysWdtSetInterruptCallback, .-CySysWdtSetInterruptCallback
 1163              		.section	.text.CySysWdtGetInterruptCallback,"ax",%progbits
 1164              		.align	2
 1165              		.global	CySysWdtGetInterruptCallback
 1166              		.code	16
 1167              		.thumb_func
 1168              		.type	CySysWdtGetInterruptCallback, %function
 1169              	CySysWdtGetInterruptCallback:
 1170              	.LFB23:
2112:Generated_Source\PSoC4/CyLFClk.c **** 
2113:Generated_Source\PSoC4/CyLFClk.c **** 
2114:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2115:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIsrCallback
2116:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2117:Generated_Source\PSoC4/CyLFClk.c ****     *
2118:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2119:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the WDT counter
2120:Generated_Source\PSoC4/CyLFClk.c ****     *
2121:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for WDT.
2122:Generated_Source\PSoC4/CyLFClk.c ****     *
2123:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2124:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(void)
2125:Generated_Source\PSoC4/CyLFClk.c ****     {
 1171              		.loc 2 2125 0
 1172              		.cfi_startproc
 1173 0000 80B5     		push	{r7, lr}
 1174              		.cfi_def_cfa_offset 8
 1175              		.cfi_offset 7, -8
 1176              		.cfi_offset 14, -4
 1177 0002 00AF     		add	r7, sp, #0
 1178              		.cfi_def_cfa_register 7
2126:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
 1179              		.loc 2 2126 0
 1180 0004 024B     		ldr	r3, .L99
 1181 0006 1B68     		ldr	r3, [r3]
2127:Generated_Source\PSoC4/CyLFClk.c ****     }
 1182              		.loc 2 2127 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 71


 1183 0008 181C     		mov	r0, r3
 1184 000a BD46     		mov	sp, r7
 1185              		@ sp needed
 1186 000c 80BD     		pop	{r7, pc}
 1187              	.L100:
 1188 000e C046     		.align	2
 1189              	.L99:
 1190 0010 10000000 		.word	cySysWdtCallback
 1191              		.cfi_endproc
 1192              	.LFE23:
 1193              		.size	CySysWdtGetInterruptCallback, .-CySysWdtGetInterruptCallback
 1194              		.section	.text.CySysWdtIsr,"ax",%progbits
 1195              		.align	2
 1196              		.global	CySysWdtIsr
 1197              		.code	16
 1198              		.thumb_func
 1199              		.type	CySysWdtIsr, %function
 1200              	CySysWdtIsr:
 1201              	.LFB24:
2128:Generated_Source\PSoC4/CyLFClk.c **** 
2129:Generated_Source\PSoC4/CyLFClk.c **** 
2130:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2131:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
2132:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2133:Generated_Source\PSoC4/CyLFClk.c ****     *
2134:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2135:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
2136:Generated_Source\PSoC4/CyLFClk.c ****     *
2137:Generated_Source\PSoC4/CyLFClk.c ****     * The handler calls the respective callback functions configured by the user 
2138:Generated_Source\PSoC4/CyLFClk.c ****     * by using CySysWdtSetIsrCallback() API.
2139:Generated_Source\PSoC4/CyLFClk.c ****     *
2140:Generated_Source\PSoC4/CyLFClk.c ****     *
2141:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2142:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
2143:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
2144:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
2145:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
2146:Generated_Source\PSoC4/CyLFClk.c ****     *
2147:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
2149:Generated_Source\PSoC4/CyLFClk.c ****     {
 1202              		.loc 2 2149 0
 1203              		.cfi_startproc
 1204 0000 80B5     		push	{r7, lr}
 1205              		.cfi_def_cfa_offset 8
 1206              		.cfi_offset 7, -8
 1207              		.cfi_offset 14, -4
 1208 0002 00AF     		add	r7, sp, #0
 1209              		.cfi_def_cfa_register 7
2150:Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
 1210              		.loc 2 2150 0
 1211 0004 054B     		ldr	r3, .L103
 1212 0006 1B68     		ldr	r3, [r3]
 1213 0008 002B     		cmp	r3, #0
 1214 000a 02D0     		beq	.L102
2151:Generated_Source\PSoC4/CyLFClk.c ****         {
2152:Generated_Source\PSoC4/CyLFClk.c ****             (void)(cySysWdtCallback)();
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 72


 1215              		.loc 2 2152 0
 1216 000c 034B     		ldr	r3, .L103
 1217 000e 1B68     		ldr	r3, [r3]
 1218 0010 9847     		blx	r3
 1219              	.L102:
2153:Generated_Source\PSoC4/CyLFClk.c ****         }
2154:Generated_Source\PSoC4/CyLFClk.c **** 
2155:Generated_Source\PSoC4/CyLFClk.c ****         CySysWdtClearInterrupt();
 1220              		.loc 2 2155 0
 1221 0012 FFF7FEFF 		bl	CySysWdtClearInterrupt
2156:Generated_Source\PSoC4/CyLFClk.c ****     }
 1222              		.loc 2 2156 0
 1223 0016 BD46     		mov	sp, r7
 1224              		@ sp needed
 1225 0018 80BD     		pop	{r7, pc}
 1226              	.L104:
 1227 001a C046     		.align	2
 1228              	.L103:
 1229 001c 10000000 		.word	cySysWdtCallback
 1230              		.cfi_endproc
 1231              	.LFE24:
 1232              		.size	CySysWdtIsr, .-CySysWdtIsr
 1233              		.section	.text.CySysClkGetTimerSource,"ax",%progbits
 1234              		.align	2
 1235              		.code	16
 1236              		.thumb_func
 1237              		.type	CySysClkGetTimerSource, %function
 1238              	CySysClkGetTimerSource:
 1239              	.LFB25:
2157:Generated_Source\PSoC4/CyLFClk.c **** 
2158:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
2159:Generated_Source\PSoC4/CyLFClk.c **** 
2160:Generated_Source\PSoC4/CyLFClk.c **** 
2161:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
2162:Generated_Source\PSoC4/CyLFClk.c **** 
2163:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2164:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetTimerSource
2165:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
2166:Generated_Source\PSoC4/CyLFClk.c **** *
2167:Generated_Source\PSoC4/CyLFClk.c **** * \brief Gets the clock source for the DeepSleep Timers.
2168:Generated_Source\PSoC4/CyLFClk.c **** *
2169:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor.
2170:Generated_Source\PSoC4/CyLFClk.c **** *
2171:Generated_Source\PSoC4/CyLFClk.c **** * \return The DeepSleep Timer source
2172:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
2173:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
2174:Generated_Source\PSoC4/CyLFClk.c **** *
2175:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2176:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void)
2177:Generated_Source\PSoC4/CyLFClk.c ****     {
 1240              		.loc 2 2177 0
 1241              		.cfi_startproc
 1242 0000 80B5     		push	{r7, lr}
 1243              		.cfi_def_cfa_offset 8
 1244              		.cfi_offset 7, -8
 1245              		.cfi_offset 14, -4
 1246 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 73


 1247              		.cfi_def_cfa_offset 16
 1248 0004 00AF     		add	r7, sp, #0
 1249              		.cfi_def_cfa_register 7
2178:Generated_Source\PSoC4/CyLFClk.c ****         uint32 timerSource;
2179:Generated_Source\PSoC4/CyLFClk.c ****         timerSource = CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK;
 1250              		.loc 2 2179 0
 1251 0006 054B     		ldr	r3, .L107
 1252 0008 1B68     		ldr	r3, [r3]
 1253 000a 9B0F     		lsr	r3, r3, #30
 1254 000c 9B07     		lsl	r3, r3, #30
 1255 000e 7B60     		str	r3, [r7, #4]
2180:Generated_Source\PSoC4/CyLFClk.c ****         return (timerSource);
 1256              		.loc 2 2180 0
 1257 0010 7B68     		ldr	r3, [r7, #4]
2181:Generated_Source\PSoC4/CyLFClk.c ****     }    
 1258              		.loc 2 2181 0
 1259 0012 181C     		mov	r0, r3
 1260 0014 BD46     		mov	sp, r7
 1261 0016 02B0     		add	sp, sp, #8
 1262              		@ sp needed
 1263 0018 80BD     		pop	{r7, pc}
 1264              	.L108:
 1265 001a C046     		.align	2
 1266              	.L107:
 1267 001c 0C020640 		.word	1074135564
 1268              		.cfi_endproc
 1269              	.LFE25:
 1270              		.size	CySysClkGetTimerSource, .-CySysClkGetTimerSource
 1271              		.section	.text.CySysClkSetTimerSource,"ax",%progbits
 1272              		.align	2
 1273              		.global	CySysClkSetTimerSource
 1274              		.code	16
 1275              		.thumb_func
 1276              		.type	CySysClkSetTimerSource, %function
 1277              	CySysClkSetTimerSource:
 1278              	.LFB26:
2182:Generated_Source\PSoC4/CyLFClk.c **** 
2183:Generated_Source\PSoC4/CyLFClk.c **** 
2184:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2185:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetTimerSource
2186:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
2187:Generated_Source\PSoC4/CyLFClk.c **** *
2188:Generated_Source\PSoC4/CyLFClk.c **** * \brief Sets the clock source for the DeepSleep Timers.
2189:Generated_Source\PSoC4/CyLFClk.c **** *
2190:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor 
2191:Generated_Source\PSoC4/CyLFClk.c **** * devices.
2192:Generated_Source\PSoC4/CyLFClk.c **** *
2193:Generated_Source\PSoC4/CyLFClk.c **** * \param source
2194:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_TIMER_SRC_ILO - Internal Low Frequency (32 kHz) Oscillator 
2195:Generated_Source\PSoC4/CyLFClk.c **** * (ILO).<br>
2196:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO - Low Frequency Watch Crystal Oscillator 
2197:Generated_Source\PSoC4/CyLFClk.c **** * (WCO).
2198:Generated_Source\PSoC4/CyLFClk.c **** *
2199:Generated_Source\PSoC4/CyLFClk.c **** * \details Both the current source and the new source must be running and stable 
2200:Generated_Source\PSoC4/CyLFClk.c **** * before calling this function.
2201:Generated_Source\PSoC4/CyLFClk.c **** *
2202:Generated_Source\PSoC4/CyLFClk.c **** * \warning DeepSleep Timer reset is required if Timer source was switched while 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 74


2203:Generated_Source\PSoC4/CyLFClk.c **** * DeepSleep Timers were running. Call CySysTimerResetCounters() API after 
2204:Generated_Source\PSoC4/CyLFClk.c **** * Timer source switching.
2205:Generated_Source\PSoC4/CyLFClk.c **** * It is highly recommended to disable DeepSleep Timers before Timer source 
2206:Generated_Source\PSoC4/CyLFClk.c **** * switching. Changing the Timer source may change the functionality that uses 
2207:Generated_Source\PSoC4/CyLFClk.c **** * this Timers as clock source.
2208:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2209:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetTimerSource(uint32 source)
2210:Generated_Source\PSoC4/CyLFClk.c ****     {
 1279              		.loc 2 2210 0
 1280              		.cfi_startproc
 1281 0000 90B5     		push	{r4, r7, lr}
 1282              		.cfi_def_cfa_offset 12
 1283              		.cfi_offset 4, -12
 1284              		.cfi_offset 7, -8
 1285              		.cfi_offset 14, -4
 1286 0002 85B0     		sub	sp, sp, #20
 1287              		.cfi_def_cfa_offset 32
 1288 0004 00AF     		add	r7, sp, #0
 1289              		.cfi_def_cfa_register 7
 1290 0006 7860     		str	r0, [r7, #4]
2211:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
2212:Generated_Source\PSoC4/CyLFClk.c **** 
2213:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetTimerSource() != source)
 1291              		.loc 2 2213 0
 1292 0008 FFF7FEFF 		bl	CySysClkGetTimerSource
 1293 000c 021E     		sub	r2, r0, #0
 1294 000e 7B68     		ldr	r3, [r7, #4]
 1295 0010 9A42     		cmp	r2, r3
 1296 0012 27D0     		beq	.L110
2214:Generated_Source\PSoC4/CyLFClk.c ****         {
2215:Generated_Source\PSoC4/CyLFClk.c **** 
2216:Generated_Source\PSoC4/CyLFClk.c ****             /* Reset both _EN bits in WCO_WDT_CLKEN register */
2217:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CLKEN_REG &= ~CY_SYS_WCO_WDT_CLKEN_RESET_MASK;
 1297              		.loc 2 2217 0
 1298 0014 1D4B     		ldr	r3, .L115
 1299 0016 1D4A     		ldr	r2, .L115
 1300 0018 1268     		ldr	r2, [r2]
 1301 001a 0321     		mov	r1, #3
 1302 001c 8A43     		bic	r2, r1
 1303 001e 1A60     		str	r2, [r3]
2218:Generated_Source\PSoC4/CyLFClk.c ****             
2219:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait 4 new clock source-cycles for change to come into effect */
2220:Generated_Source\PSoC4/CyLFClk.c ****             CyDelayUs(CY_SYS_4TIMER_DELAY_US);
 1304              		.loc 2 2220 0
 1305 0020 1B4B     		ldr	r3, .L115+4
 1306 0022 1B68     		ldr	r3, [r3]
 1307 0024 9B0F     		lsr	r3, r3, #30
 1308 0026 9B07     		lsl	r3, r3, #30
 1309 0028 01D1     		bne	.L111
 1310              		.loc 2 2220 0 is_stmt 0 discriminator 1
 1311 002a 7C23     		mov	r3, #124
 1312 002c 01E0     		b	.L112
 1313              	.L111:
 1314              		.loc 2 2220 0 discriminator 2
 1315 002e 8623     		mov	r3, #134
 1316 0030 5B00     		lsl	r3, r3, #1
 1317              	.L112:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 75


 1318              		.loc 2 2220 0 discriminator 4
 1319 0032 181C     		mov	r0, r3
 1320 0034 FFF7FEFF 		bl	CyDelayUs
2221:Generated_Source\PSoC4/CyLFClk.c **** 
2222:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 1321              		.loc 2 2222 0 is_stmt 1 discriminator 4
 1322 0038 0F23     		mov	r3, #15
 1323 003a FC18     		add	r4, r7, r3
 1324 003c FFF7FEFF 		bl	CyEnterCriticalSection
 1325 0040 031C     		mov	r3, r0
 1326 0042 2370     		strb	r3, [r4]
2223:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = (CY_SYS_WCO_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_TIMER_SEL
 1327              		.loc 2 2223 0 discriminator 4
 1328 0044 124B     		ldr	r3, .L115+4
 1329 0046 124A     		ldr	r2, .L115+4
 1330 0048 1268     		ldr	r2, [r2]
 1331 004a 9200     		lsl	r2, r2, #2
 1332 004c 9108     		lsr	r1, r2, #2
2224:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_TIMER_SEL_MASK);
 1333              		.loc 2 2224 0 discriminator 4
 1334 004e 7A68     		ldr	r2, [r7, #4]
 1335 0050 920F     		lsr	r2, r2, #30
 1336 0052 9207     		lsl	r2, r2, #30
2223:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = (CY_SYS_WCO_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_TIMER_SEL
 1337              		.loc 2 2223 0 discriminator 4
 1338 0054 0A43     		orr	r2, r1
 1339 0056 1A60     		str	r2, [r3]
2225:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 1340              		.loc 2 2225 0 discriminator 4
 1341 0058 0F23     		mov	r3, #15
 1342 005a FB18     		add	r3, r7, r3
 1343 005c 1B78     		ldrb	r3, [r3]
 1344 005e 181C     		mov	r0, r3
 1345 0060 FFF7FEFF 		bl	CyExitCriticalSection
 1346              	.L110:
2226:Generated_Source\PSoC4/CyLFClk.c ****         }
2227:Generated_Source\PSoC4/CyLFClk.c **** 
2228:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CLKEN_REG = (CY_SYS_WCO_WDT_CLKEN_REG & (uint32)(~CY_SYS_WCO_WDT_CLKEN_RESET
 1347              		.loc 2 2228 0
 1348 0064 094B     		ldr	r3, .L115
 1349 0066 094A     		ldr	r2, .L115
 1350 0068 1268     		ldr	r2, [r2]
 1351 006a 0321     		mov	r1, #3
 1352 006c 8A43     		bic	r2, r1
 1353 006e 111C     		mov	r1, r2
2229:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
 1354              		.loc 2 2229 0
 1355 0070 074A     		ldr	r2, .L115+4
 1356 0072 1268     		ldr	r2, [r2]
 1357 0074 920F     		lsr	r2, r2, #30
 1358 0076 9207     		lsl	r2, r2, #30
2228:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
 1359              		.loc 2 2228 0
 1360 0078 01D1     		bne	.L113
2228:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
 1361              		.loc 2 2228 0 is_stmt 0 discriminator 1
 1362 007a 0222     		mov	r2, #2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 76


 1363 007c 00E0     		b	.L114
 1364              	.L113:
2228:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
 1365              		.loc 2 2228 0 discriminator 2
 1366 007e 0122     		mov	r2, #1
 1367              	.L114:
2228:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
 1368              		.loc 2 2228 0 discriminator 4
 1369 0080 0A43     		orr	r2, r1
 1370 0082 1A60     		str	r2, [r3]
2230:Generated_Source\PSoC4/CyLFClk.c ****     }
 1371              		.loc 2 2230 0 is_stmt 1 discriminator 4
 1372 0084 BD46     		mov	sp, r7
 1373 0086 05B0     		add	sp, sp, #20
 1374              		@ sp needed
 1375 0088 90BD     		pop	{r4, r7, pc}
 1376              	.L116:
 1377 008a C046     		.align	2
 1378              	.L115:
 1379 008c 14020640 		.word	1074135572
 1380 0090 0C020640 		.word	1074135564
 1381              		.cfi_endproc
 1382              	.LFE26:
 1383              		.size	CySysClkSetTimerSource, .-CySysClkSetTimerSource
 1384              		.section	.text.CySysTimerGetEnabledStatus,"ax",%progbits
 1385              		.align	2
 1386              		.global	CySysTimerGetEnabledStatus
 1387              		.code	16
 1388              		.thumb_func
 1389              		.type	CySysTimerGetEnabledStatus, %function
 1390              	CySysTimerGetEnabledStatus:
 1391              	.LFB27:
2231:Generated_Source\PSoC4/CyLFClk.c **** 
2232:Generated_Source\PSoC4/CyLFClk.c **** 
2233:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2234:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetEnabledStatus
2235:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2236:Generated_Source\PSoC4/CyLFClk.c ****     *
2237:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of one of the three DeepSleep Timer 
2238:Generated_Source\PSoC4/CyLFClk.c ****     * counters.
2239:Generated_Source\PSoC4/CyLFClk.c ****     *
2240:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2241:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2242:Generated_Source\PSoC4/CyLFClk.c ****     *
2243:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the Timers counter:
2244:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the Counter is disabled.
2245:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the Counter is enabled.
2246:Generated_Source\PSoC4/CyLFClk.c ****     *
2247:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2248:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual DeepSleep Timer counter status from the 
2249:Generated_Source\PSoC4/CyLFClk.c ****     * status register. It may take up to 3 LFCLK cycles for the Timer status 
2250:Generated_Source\PSoC4/CyLFClk.c ****     * register to contain actual data after the Timer counter is enabled.
2251:Generated_Source\PSoC4/CyLFClk.c ****     *
2252:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2253:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum)
2254:Generated_Source\PSoC4/CyLFClk.c ****     {
 1392              		.loc 2 2254 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 77


 1393              		.cfi_startproc
 1394 0000 80B5     		push	{r7, lr}
 1395              		.cfi_def_cfa_offset 8
 1396              		.cfi_offset 7, -8
 1397              		.cfi_offset 14, -4
 1398 0002 82B0     		sub	sp, sp, #8
 1399              		.cfi_def_cfa_offset 16
 1400 0004 00AF     		add	r7, sp, #0
 1401              		.cfi_def_cfa_register 7
 1402 0006 7860     		str	r0, [r7, #4]
2255:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
 1403              		.loc 2 2255 0
 1404 0008 7B68     		ldr	r3, [r7, #4]
 1405 000a 022B     		cmp	r3, #2
 1406 000c 02D9     		bls	.L118
 1407              		.loc 2 2255 0 is_stmt 0 discriminator 1
 1408 000e 0020     		mov	r0, #0
 1409 0010 FFF7FEFF 		bl	CyHalt
 1410              	.L118:
2256:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONTROL_REG >> ((CY_SYS_TIMER_CNT_SHIFT * counterNum) + 
 1411              		.loc 2 2256 0 is_stmt 1
 1412 0014 054B     		ldr	r3, .L120
 1413 0016 1B68     		ldr	r3, [r3]
 1414 0018 7A68     		ldr	r2, [r7, #4]
 1415 001a D200     		lsl	r2, r2, #3
 1416 001c 0132     		add	r2, r2, #1
 1417 001e D340     		lsr	r3, r3, r2
 1418 0020 0122     		mov	r2, #1
 1419 0022 1340     		and	r3, r2
2257:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
2258:Generated_Source\PSoC4/CyLFClk.c ****     }
 1420              		.loc 2 2258 0
 1421 0024 181C     		mov	r0, r3
 1422 0026 BD46     		mov	sp, r7
 1423 0028 02B0     		add	sp, sp, #8
 1424              		@ sp needed
 1425 002a 80BD     		pop	{r7, pc}
 1426              	.L121:
 1427              		.align	2
 1428              	.L120:
 1429 002c 10020640 		.word	1074135568
 1430              		.cfi_endproc
 1431              	.LFE27:
 1432              		.size	CySysTimerGetEnabledStatus, .-CySysTimerGetEnabledStatus
 1433              		.section	.text.CySysTimerSetMode,"ax",%progbits
 1434              		.align	2
 1435              		.global	CySysTimerSetMode
 1436              		.code	16
 1437              		.thumb_func
 1438              		.type	CySysTimerSetMode, %function
 1439              	CySysTimerSetMode:
 1440              	.LFB28:
2259:Generated_Source\PSoC4/CyLFClk.c **** 
2260:Generated_Source\PSoC4/CyLFClk.c **** 
2261:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2262:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMode
2263:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 78


2264:Generated_Source\PSoC4/CyLFClk.c ****     *
2265:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Writes the mode of one of the three DeepSleep Timer counters.
2266:Generated_Source\PSoC4/CyLFClk.c ****     *
2267:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2268:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2269:Generated_Source\PSoC4/CyLFClk.c ****     *
2270:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
2271:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER_MODE_NONE - Free running.<br>
2272:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_MODE_INT - The interrupt generated on match for counter 0
2273:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.
2274:Generated_Source\PSoC4/CyLFClk.c ****     *
2275:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2276:Generated_Source\PSoC4/CyLFClk.c ****     * DeepSleep Timer counter counterNum should be disabled to set a mode. 
2277:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise, this function call has no effect. If the specified counter is 
2278:Generated_Source\PSoC4/CyLFClk.c ****     * enabled, call the CySysTimerDisable() function with the corresponding 
2279:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop.
2280:Generated_Source\PSoC4/CyLFClk.c ****     *
2281:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2282:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMode(uint32 counterNum, uint32 mode)
2283:Generated_Source\PSoC4/CyLFClk.c ****     {
 1441              		.loc 2 2283 0
 1442              		.cfi_startproc
 1443 0000 80B5     		push	{r7, lr}
 1444              		.cfi_def_cfa_offset 8
 1445              		.cfi_offset 7, -8
 1446              		.cfi_offset 14, -4
 1447 0002 84B0     		sub	sp, sp, #16
 1448              		.cfi_def_cfa_offset 24
 1449 0004 00AF     		add	r7, sp, #0
 1450              		.cfi_def_cfa_register 7
 1451 0006 7860     		str	r0, [r7, #4]
 1452 0008 3960     		str	r1, [r7]
2284:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2285:Generated_Source\PSoC4/CyLFClk.c **** 
2286:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
 1453              		.loc 2 2286 0
 1454 000a 7B68     		ldr	r3, [r7, #4]
 1455 000c 022B     		cmp	r3, #2
 1456 000e 02D9     		bls	.L123
 1457              		.loc 2 2286 0 is_stmt 0 discriminator 1
 1458 0010 0020     		mov	r0, #0
 1459 0012 FFF7FEFF 		bl	CyHalt
 1460              	.L123:
2287:Generated_Source\PSoC4/CyLFClk.c **** 
2288:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(mode <= CY_SYS_TIMER_MODE_MASK);
 1461              		.loc 2 2288 0 is_stmt 1
 1462 0016 3B68     		ldr	r3, [r7]
 1463 0018 012B     		cmp	r3, #1
 1464 001a 02D9     		bls	.L124
 1465              		.loc 2 2288 0 is_stmt 0 discriminator 1
 1466 001c 0020     		mov	r0, #0
 1467 001e FFF7FEFF 		bl	CyHalt
 1468              	.L124:
2289:Generated_Source\PSoC4/CyLFClk.c **** 
2290:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
 1469              		.loc 2 2290 0 is_stmt 1
 1470 0022 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 79


 1471 0024 181C     		mov	r0, r3
 1472 0026 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1473 002a 031E     		sub	r3, r0, #0
 1474 002c 15D1     		bne	.L122
2291:Generated_Source\PSoC4/CyLFClk.c ****         {
2292:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG &
 1475              		.loc 2 2292 0
 1476 002e 0C4B     		ldr	r3, .L126
 1477 0030 1B68     		ldr	r3, [r3]
2293:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_TIMER_MODE_MASK << (counterNum * CY_SYS_T
 1478              		.loc 2 2293 0
 1479 0032 7A68     		ldr	r2, [r7, #4]
 1480 0034 D200     		lsl	r2, r2, #3
 1481 0036 111C     		mov	r1, r2
 1482 0038 0122     		mov	r2, #1
 1483 003a 8A40     		lsl	r2, r2, r1
 1484 003c D243     		mvn	r2, r2
2292:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_TIMER_MODE_MASK << (counterNum * CY_SYS_T
 1485              		.loc 2 2292 0
 1486 003e 1340     		and	r3, r2
 1487 0040 FB60     		str	r3, [r7, #12]
2294:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_TIMER_MODE_MASK) << (counterNum * CY_SYS_TIME
 1488              		.loc 2 2294 0
 1489 0042 3B68     		ldr	r3, [r7]
 1490 0044 0122     		mov	r2, #1
 1491 0046 1340     		and	r3, r2
 1492 0048 7A68     		ldr	r2, [r7, #4]
 1493 004a D200     		lsl	r2, r2, #3
 1494 004c 9340     		lsl	r3, r3, r2
 1495 004e FA68     		ldr	r2, [r7, #12]
 1496 0050 1343     		orr	r3, r2
 1497 0052 FB60     		str	r3, [r7, #12]
2295:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
 1498              		.loc 2 2295 0
 1499 0054 024B     		ldr	r3, .L126
 1500 0056 FA68     		ldr	r2, [r7, #12]
 1501 0058 1A60     		str	r2, [r3]
 1502              	.L122:
2296:Generated_Source\PSoC4/CyLFClk.c ****         }
2297:Generated_Source\PSoC4/CyLFClk.c ****     }
 1503              		.loc 2 2297 0
 1504 005a BD46     		mov	sp, r7
 1505 005c 04B0     		add	sp, sp, #16
 1506              		@ sp needed
 1507 005e 80BD     		pop	{r7, pc}
 1508              	.L127:
 1509              		.align	2
 1510              	.L126:
 1511 0060 0C020640 		.word	1074135564
 1512              		.cfi_endproc
 1513              	.LFE28:
 1514              		.size	CySysTimerSetMode, .-CySysTimerSetMode
 1515              		.section	.text.CySysTimerGetMode,"ax",%progbits
 1516              		.align	2
 1517              		.global	CySysTimerGetMode
 1518              		.code	16
 1519              		.thumb_func
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 80


 1520              		.type	CySysTimerGetMode, %function
 1521              	CySysTimerGetMode:
 1522              	.LFB29:
2298:Generated_Source\PSoC4/CyLFClk.c **** 
2299:Generated_Source\PSoC4/CyLFClk.c **** 
2300:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2301:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMode
2302:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2303:Generated_Source\PSoC4/CyLFClk.c ****     *
2304:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three DeepSleep Timer counters.
2305:Generated_Source\PSoC4/CyLFClk.c ****     *
2306:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2307:Generated_Source\PSoC4/CyLFClk.c ****     *
2308:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
2309:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysTimerSetMode().
2310:Generated_Source\PSoC4/CyLFClk.c ****     *
2311:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2312:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMode(uint32 counterNum)
2313:Generated_Source\PSoC4/CyLFClk.c ****     {
 1523              		.loc 2 2313 0
 1524              		.cfi_startproc
 1525 0000 80B5     		push	{r7, lr}
 1526              		.cfi_def_cfa_offset 8
 1527              		.cfi_offset 7, -8
 1528              		.cfi_offset 14, -4
 1529 0002 82B0     		sub	sp, sp, #8
 1530              		.cfi_def_cfa_offset 16
 1531 0004 00AF     		add	r7, sp, #0
 1532              		.cfi_def_cfa_register 7
 1533 0006 7860     		str	r0, [r7, #4]
2314:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> (counterNum * CY_SYS_TIMER_CNT_SHIFT)) & CY_SYS_TIMER
 1534              		.loc 2 2314 0
 1535 0008 054B     		ldr	r3, .L130
 1536 000a 1B68     		ldr	r3, [r3]
 1537 000c 7A68     		ldr	r2, [r7, #4]
 1538 000e D200     		lsl	r2, r2, #3
 1539 0010 D340     		lsr	r3, r3, r2
 1540 0012 0122     		mov	r2, #1
 1541 0014 1340     		and	r3, r2
2315:Generated_Source\PSoC4/CyLFClk.c ****     }
 1542              		.loc 2 2315 0
 1543 0016 181C     		mov	r0, r3
 1544 0018 BD46     		mov	sp, r7
 1545 001a 02B0     		add	sp, sp, #8
 1546              		@ sp needed
 1547 001c 80BD     		pop	{r7, pc}
 1548              	.L131:
 1549 001e C046     		.align	2
 1550              	.L130:
 1551 0020 0C020640 		.word	1074135564
 1552              		.cfi_endproc
 1553              	.LFE29:
 1554              		.size	CySysTimerGetMode, .-CySysTimerGetMode
 1555              		.section	.text.CySysTimerSetClearOnMatch,"ax",%progbits
 1556              		.align	2
 1557              		.global	CySysTimerSetClearOnMatch
 1558              		.code	16
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 81


 1559              		.thumb_func
 1560              		.type	CySysTimerSetClearOnMatch, %function
 1561              	CySysTimerSetClearOnMatch:
 1562              	.LFB30:
2316:Generated_Source\PSoC4/CyLFClk.c **** 
2317:Generated_Source\PSoC4/CyLFClk.c **** 
2318:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2319:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetClearOnMatch
2320:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2321:Generated_Source\PSoC4/CyLFClk.c ****     *
2322:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the DeepSleep Timer counter "clear on match" setting.
2323:Generated_Source\PSoC4/CyLFClk.c ****     *
2324:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue 
2325:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
2326:Generated_Source\PSoC4/CyLFClk.c ****     *
2327:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
2328:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the Timer counter. The match values are not
2329:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
2330:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
2331:Generated_Source\PSoC4/CyLFClk.c ****     * 1 to enable appropriate counter
2332:Generated_Source\PSoC4/CyLFClk.c ****     *
2333:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2334:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counter counterNum should be disabled. Otherwise this function call
2335:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysTimerDisable()
2336:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
2337:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three Timer source-cycles.
2338:Generated_Source\PSoC4/CyLFClk.c ****     *
2339:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2340:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable)
2341:Generated_Source\PSoC4/CyLFClk.c ****     {
 1563              		.loc 2 2341 0
 1564              		.cfi_startproc
 1565 0000 80B5     		push	{r7, lr}
 1566              		.cfi_def_cfa_offset 8
 1567              		.cfi_offset 7, -8
 1568              		.cfi_offset 14, -4
 1569 0002 84B0     		sub	sp, sp, #16
 1570              		.cfi_def_cfa_offset 24
 1571 0004 00AF     		add	r7, sp, #0
 1572              		.cfi_def_cfa_register 7
 1573 0006 7860     		str	r0, [r7, #4]
 1574 0008 3960     		str	r1, [r7]
2342:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2343:Generated_Source\PSoC4/CyLFClk.c **** 
2344:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
 1575              		.loc 2 2344 0
 1576 000a 7B68     		ldr	r3, [r7, #4]
 1577 000c 002B     		cmp	r3, #0
 1578 000e 02D0     		beq	.L133
 1579              		.loc 2 2344 0 is_stmt 0 discriminator 2
 1580 0010 7B68     		ldr	r3, [r7, #4]
 1581 0012 012B     		cmp	r3, #1
 1582 0014 01D1     		bne	.L134
 1583              	.L133:
 1584              		.loc 2 2344 0 discriminator 3
 1585 0016 0123     		mov	r3, #1
 1586 0018 00E0     		b	.L135
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 82


 1587              	.L134:
 1588              		.loc 2 2344 0 discriminator 4
 1589 001a 0023     		mov	r3, #0
 1590              	.L135:
 1591              		.loc 2 2344 0 discriminator 6
 1592 001c 002B     		cmp	r3, #0
 1593 001e 02D1     		bne	.L136
 1594              		.loc 2 2344 0 discriminator 7
 1595 0020 0020     		mov	r0, #0
 1596 0022 FFF7FEFF 		bl	CyHalt
 1597              	.L136:
2345:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2346:Generated_Source\PSoC4/CyLFClk.c **** 
2347:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
 1598              		.loc 2 2347 0 is_stmt 1
 1599 0026 7B68     		ldr	r3, [r7, #4]
 1600 0028 181C     		mov	r0, r3
 1601 002a FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1602 002e 031E     		sub	r3, r0, #0
 1603 0030 16D1     		bne	.L132
2348:Generated_Source\PSoC4/CyLFClk.c ****         {
2349:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
 1604              		.loc 2 2349 0
 1605 0032 0D4B     		ldr	r3, .L138
 1606 0034 1B68     		ldr	r3, [r3]
2350:Generated_Source\PSoC4/CyLFClk.c ****              ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT)));
 1607              		.loc 2 2350 0
 1608 0036 7A68     		ldr	r2, [r7, #4]
 1609 0038 D200     		lsl	r2, r2, #3
 1610 003a 0232     		add	r2, r2, #2
2349:Generated_Source\PSoC4/CyLFClk.c ****              ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT)));
 1611              		.loc 2 2349 0
 1612 003c 111C     		mov	r1, r2
 1613 003e 0122     		mov	r2, #1
 1614 0040 8A40     		lsl	r2, r2, r1
 1615 0042 D243     		mvn	r2, r2
 1616 0044 1340     		and	r3, r2
 1617 0046 FB60     		str	r3, [r7, #12]
2351:Generated_Source\PSoC4/CyLFClk.c **** 
2352:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
2353:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MAT
 1618              		.loc 2 2353 0
 1619 0048 7B68     		ldr	r3, [r7, #4]
 1620 004a DB00     		lsl	r3, r3, #3
 1621 004c 0233     		add	r3, r3, #2
 1622 004e 1A1C     		mov	r2, r3
 1623 0050 3B68     		ldr	r3, [r7]
 1624 0052 9340     		lsl	r3, r3, r2
 1625 0054 FA68     		ldr	r2, [r7, #12]
 1626 0056 1343     		orr	r3, r2
 1627 0058 FB60     		str	r3, [r7, #12]
2354:Generated_Source\PSoC4/CyLFClk.c **** 
2355:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
 1628              		.loc 2 2355 0
 1629 005a 034B     		ldr	r3, .L138
 1630 005c FA68     		ldr	r2, [r7, #12]
 1631 005e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 83


 1632              	.L132:
2356:Generated_Source\PSoC4/CyLFClk.c ****         }
2357:Generated_Source\PSoC4/CyLFClk.c ****     }
 1633              		.loc 2 2357 0
 1634 0060 BD46     		mov	sp, r7
 1635 0062 04B0     		add	sp, sp, #16
 1636              		@ sp needed
 1637 0064 80BD     		pop	{r7, pc}
 1638              	.L139:
 1639 0066 C046     		.align	2
 1640              	.L138:
 1641 0068 0C020640 		.word	1074135564
 1642              		.cfi_endproc
 1643              	.LFE30:
 1644              		.size	CySysTimerSetClearOnMatch, .-CySysTimerSetClearOnMatch
 1645              		.section	.text.CySysTimerGetClearOnMatch,"ax",%progbits
 1646              		.align	2
 1647              		.global	CySysTimerGetClearOnMatch
 1648              		.code	16
 1649              		.thumb_func
 1650              		.type	CySysTimerGetClearOnMatch, %function
 1651              	CySysTimerGetClearOnMatch:
 1652              	.LFB31:
2358:Generated_Source\PSoC4/CyLFClk.c **** 
2359:Generated_Source\PSoC4/CyLFClk.c **** 
2360:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2361:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetClearOnMatch
2362:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2363:Generated_Source\PSoC4/CyLFClk.c ****     *
2364:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the "clear on match" setting for the specified DeepSleep Timer 
2365:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2366:Generated_Source\PSoC4/CyLFClk.c ****     *
2367:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the Timer counter. The 
2368:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2369:Generated_Source\PSoC4/CyLFClk.c ****     *
2370:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
2371:Generated_Source\PSoC4/CyLFClk.c ****     *
2372:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2373:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum)
2374:Generated_Source\PSoC4/CyLFClk.c ****     {
 1653              		.loc 2 2374 0
 1654              		.cfi_startproc
 1655 0000 80B5     		push	{r7, lr}
 1656              		.cfi_def_cfa_offset 8
 1657              		.cfi_offset 7, -8
 1658              		.cfi_offset 14, -4
 1659 0002 82B0     		sub	sp, sp, #8
 1660              		.cfi_def_cfa_offset 16
 1661 0004 00AF     		add	r7, sp, #0
 1662              		.cfi_def_cfa_register 7
 1663 0006 7860     		str	r0, [r7, #4]
2375:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
 1664              		.loc 2 2375 0
 1665 0008 7B68     		ldr	r3, [r7, #4]
 1666 000a 002B     		cmp	r3, #0
 1667 000c 02D0     		beq	.L141
 1668              		.loc 2 2375 0 is_stmt 0 discriminator 2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 84


 1669 000e 7B68     		ldr	r3, [r7, #4]
 1670 0010 012B     		cmp	r3, #1
 1671 0012 01D1     		bne	.L142
 1672              	.L141:
 1673              		.loc 2 2375 0 discriminator 3
 1674 0014 0123     		mov	r3, #1
 1675 0016 00E0     		b	.L143
 1676              	.L142:
 1677              		.loc 2 2375 0 discriminator 4
 1678 0018 0023     		mov	r3, #0
 1679              	.L143:
 1680              		.loc 2 2375 0 discriminator 6
 1681 001a 002B     		cmp	r3, #0
 1682 001c 02D1     		bne	.L144
 1683              		.loc 2 2375 0 discriminator 7
 1684 001e 0020     		mov	r0, #0
 1685 0020 FFF7FEFF 		bl	CyHalt
 1686              	.L144:
2376:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2377:Generated_Source\PSoC4/CyLFClk.c **** 
2378:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WCO_WDT_CONFIG_REG >>
 1687              		.loc 2 2378 0 is_stmt 1
 1688 0024 054B     		ldr	r3, .L146
 1689 0026 1B68     		ldr	r3, [r3]
2379:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT))
 1690              		.loc 2 2379 0
 1691 0028 7A68     		ldr	r2, [r7, #4]
 1692 002a D200     		lsl	r2, r2, #3
 1693 002c 0232     		add	r2, r2, #2
2378:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT))
 1694              		.loc 2 2378 0
 1695 002e D340     		lsr	r3, r3, r2
 1696 0030 0122     		mov	r2, #1
 1697 0032 1340     		and	r3, r2
2380:Generated_Source\PSoC4/CyLFClk.c ****     }
 1698              		.loc 2 2380 0
 1699 0034 181C     		mov	r0, r3
 1700 0036 BD46     		mov	sp, r7
 1701 0038 02B0     		add	sp, sp, #8
 1702              		@ sp needed
 1703 003a 80BD     		pop	{r7, pc}
 1704              	.L147:
 1705              		.align	2
 1706              	.L146:
 1707 003c 0C020640 		.word	1074135564
 1708              		.cfi_endproc
 1709              	.LFE31:
 1710              		.size	CySysTimerGetClearOnMatch, .-CySysTimerGetClearOnMatch
 1711              		.section	.text.CySysTimerEnable,"ax",%progbits
 1712              		.align	2
 1713              		.global	CySysTimerEnable
 1714              		.code	16
 1715              		.thumb_func
 1716              		.type	CySysTimerEnable, %function
 1717              	CySysTimerEnable:
 1718              	.LFB32:
2381:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 85


2382:Generated_Source\PSoC4/CyLFClk.c **** 
2383:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2384:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnable
2385:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2386:Generated_Source\PSoC4/CyLFClk.c ****     *
2387:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified DeepSleep Timer counters. All the counters 
2388:Generated_Source\PSoC4/CyLFClk.c ****     * specified in the mask are enabled.
2389:Generated_Source\PSoC4/CyLFClk.c ****     *
2390:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask  CY_SYS_TIMER0_MASK - The mask for counter 0 to enable.<br>
2391:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for counter 1 to enable.<br>
2392:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for counter 2 to enable.
2393:Generated_Source\PSoC4/CyLFClk.c ****     *
2394:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2395:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling Timer requires 3 Timer source-cycles to come into effect.
2396:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the Timer enable state must not be changed more than once in
2397:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
2398:Generated_Source\PSoC4/CyLFClk.c ****     *
2399:Generated_Source\PSoC4/CyLFClk.c ****     * After Timer is enabled, it is illegal to write Timer configuration 
2400:Generated_Source\PSoC4/CyLFClk.c ****     * (WCO_WDT_CONFIG) and control (WCO_WDT_CONTROL) registers. This means that all
2401:Generated_Source\PSoC4/CyLFClk.c ****     * Timer functions that contain 'write' in the name (with the exception of 
2402:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetMatch() function) are illegal to call once Timer enabled.
2403:Generated_Source\PSoC4/CyLFClk.c ****     *
2404:Generated_Source\PSoC4/CyLFClk.c ****     * Timer current source must be running and stable before calling this 
2405:Generated_Source\PSoC4/CyLFClk.c ****     * function.
2406:Generated_Source\PSoC4/CyLFClk.c ****     *
2407:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2408:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnable(uint32 counterMask)
2409:Generated_Source\PSoC4/CyLFClk.c ****     {
 1719              		.loc 2 2409 0
 1720              		.cfi_startproc
 1721 0000 80B5     		push	{r7, lr}
 1722              		.cfi_def_cfa_offset 8
 1723              		.cfi_offset 7, -8
 1724              		.cfi_offset 14, -4
 1725 0002 82B0     		sub	sp, sp, #8
 1726              		.cfi_def_cfa_offset 16
 1727 0004 00AF     		add	r7, sp, #0
 1728              		.cfi_def_cfa_register 7
 1729 0006 7860     		str	r0, [r7, #4]
2410:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= counterMask;
 1730              		.loc 2 2410 0
 1731 0008 144B     		ldr	r3, .L155
 1732 000a 144A     		ldr	r2, .L155
 1733 000c 1168     		ldr	r1, [r2]
 1734 000e 7A68     		ldr	r2, [r7, #4]
 1735 0010 0A43     		orr	r2, r1
 1736 0012 1A60     		str	r2, [r3]
2411:Generated_Source\PSoC4/CyLFClk.c **** 
2412:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
 1737              		.loc 2 2412 0
 1738 0014 7B68     		ldr	r3, [r7, #4]
 1739 0016 0122     		mov	r2, #1
 1740 0018 1340     		and	r3, r2
 1741 001a 05D0     		beq	.L149
2413:Generated_Source\PSoC4/CyLFClk.c ****         {
2414:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
 1742              		.loc 2 2414 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 86


 1743 001c C046     		mov	r8, r8
 1744              	.L150:
 1745              		.loc 2 2414 0 is_stmt 0 discriminator 1
 1746 001e 0020     		mov	r0, #0
 1747 0020 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1748 0024 031E     		sub	r3, r0, #0
 1749 0026 FAD0     		beq	.L150
 1750              	.L149:
2415:Generated_Source\PSoC4/CyLFClk.c ****             {
2416:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2417:Generated_Source\PSoC4/CyLFClk.c ****             }
2418:Generated_Source\PSoC4/CyLFClk.c ****         }
2419:Generated_Source\PSoC4/CyLFClk.c **** 
2420:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
 1751              		.loc 2 2420 0 is_stmt 1
 1752 0028 7A68     		ldr	r2, [r7, #4]
 1753 002a 8023     		mov	r3, #128
 1754 002c 5B00     		lsl	r3, r3, #1
 1755 002e 1340     		and	r3, r2
 1756 0030 05D0     		beq	.L151
2421:Generated_Source\PSoC4/CyLFClk.c ****         {
2422:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
 1757              		.loc 2 2422 0
 1758 0032 C046     		mov	r8, r8
 1759              	.L152:
 1760              		.loc 2 2422 0 is_stmt 0 discriminator 1
 1761 0034 0120     		mov	r0, #1
 1762 0036 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1763 003a 031E     		sub	r3, r0, #0
 1764 003c FAD0     		beq	.L152
 1765              	.L151:
2423:Generated_Source\PSoC4/CyLFClk.c ****             {
2424:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2425:Generated_Source\PSoC4/CyLFClk.c ****             }
2426:Generated_Source\PSoC4/CyLFClk.c ****         }
2427:Generated_Source\PSoC4/CyLFClk.c **** 
2428:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
 1766              		.loc 2 2428 0 is_stmt 1
 1767 003e 7A68     		ldr	r2, [r7, #4]
 1768 0040 8023     		mov	r3, #128
 1769 0042 5B02     		lsl	r3, r3, #9
 1770 0044 1340     		and	r3, r2
 1771 0046 05D0     		beq	.L148
2429:Generated_Source\PSoC4/CyLFClk.c ****         {
2430:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
 1772              		.loc 2 2430 0
 1773 0048 C046     		mov	r8, r8
 1774              	.L154:
 1775              		.loc 2 2430 0 is_stmt 0 discriminator 1
 1776 004a 0220     		mov	r0, #2
 1777 004c FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1778 0050 031E     		sub	r3, r0, #0
 1779 0052 FAD0     		beq	.L154
 1780              	.L148:
2431:Generated_Source\PSoC4/CyLFClk.c ****             {
2432:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2433:Generated_Source\PSoC4/CyLFClk.c ****             }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 87


2434:Generated_Source\PSoC4/CyLFClk.c ****         }
2435:Generated_Source\PSoC4/CyLFClk.c ****     }
 1781              		.loc 2 2435 0 is_stmt 1
 1782 0054 BD46     		mov	sp, r7
 1783 0056 02B0     		add	sp, sp, #8
 1784              		@ sp needed
 1785 0058 80BD     		pop	{r7, pc}
 1786              	.L156:
 1787 005a C046     		.align	2
 1788              	.L155:
 1789 005c 10020640 		.word	1074135568
 1790              		.cfi_endproc
 1791              	.LFE32:
 1792              		.size	CySysTimerEnable, .-CySysTimerEnable
 1793              		.section	.text.CySysTimerDisable,"ax",%progbits
 1794              		.align	2
 1795              		.global	CySysTimerDisable
 1796              		.code	16
 1797              		.thumb_func
 1798              		.type	CySysTimerDisable, %function
 1799              	CySysTimerDisable:
 1800              	.LFB33:
2436:Generated_Source\PSoC4/CyLFClk.c **** 
2437:Generated_Source\PSoC4/CyLFClk.c **** 
2438:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2439:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisable
2440:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2441:Generated_Source\PSoC4/CyLFClk.c ****     *
2442:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified DeepSleep Timer counters.
2443:Generated_Source\PSoC4/CyLFClk.c ****     *
2444:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
2445:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
2446:Generated_Source\PSoC4/CyLFClk.c ****     *
2447:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2448:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_MASK - The mask for Counter 0 to disable.<br>
2449:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for Counter 1 to disable.<br>
2450:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for Counter 2 to disable.
2451:Generated_Source\PSoC4/CyLFClk.c ****     *
2452:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2453:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisable(uint32 counterMask)
2454:Generated_Source\PSoC4/CyLFClk.c ****     {
 1801              		.loc 2 2454 0
 1802              		.cfi_startproc
 1803 0000 80B5     		push	{r7, lr}
 1804              		.cfi_def_cfa_offset 8
 1805              		.cfi_offset 7, -8
 1806              		.cfi_offset 14, -4
 1807 0002 82B0     		sub	sp, sp, #8
 1808              		.cfi_def_cfa_offset 16
 1809 0004 00AF     		add	r7, sp, #0
 1810              		.cfi_def_cfa_register 7
 1811 0006 7860     		str	r0, [r7, #4]
2455:Generated_Source\PSoC4/CyLFClk.c **** 
2456:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG &= ~counterMask;
 1812              		.loc 2 2456 0
 1813 0008 144B     		ldr	r3, .L164
 1814 000a 144A     		ldr	r2, .L164
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 88


 1815 000c 1268     		ldr	r2, [r2]
 1816 000e 7968     		ldr	r1, [r7, #4]
 1817 0010 C943     		mvn	r1, r1
 1818 0012 0A40     		and	r2, r1
 1819 0014 1A60     		str	r2, [r3]
2457:Generated_Source\PSoC4/CyLFClk.c **** 
2458:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
 1820              		.loc 2 2458 0
 1821 0016 7B68     		ldr	r3, [r7, #4]
 1822 0018 0122     		mov	r2, #1
 1823 001a 1340     		and	r3, r2
 1824 001c 05D0     		beq	.L158
2459:Generated_Source\PSoC4/CyLFClk.c ****         {
2460:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
 1825              		.loc 2 2460 0
 1826 001e C046     		mov	r8, r8
 1827              	.L159:
 1828              		.loc 2 2460 0 is_stmt 0 discriminator 1
 1829 0020 0020     		mov	r0, #0
 1830 0022 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1831 0026 031E     		sub	r3, r0, #0
 1832 0028 FAD1     		bne	.L159
 1833              	.L158:
2461:Generated_Source\PSoC4/CyLFClk.c ****             {
2462:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2463:Generated_Source\PSoC4/CyLFClk.c ****             }
2464:Generated_Source\PSoC4/CyLFClk.c ****         }
2465:Generated_Source\PSoC4/CyLFClk.c **** 
2466:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
 1834              		.loc 2 2466 0 is_stmt 1
 1835 002a 7A68     		ldr	r2, [r7, #4]
 1836 002c 8023     		mov	r3, #128
 1837 002e 5B00     		lsl	r3, r3, #1
 1838 0030 1340     		and	r3, r2
 1839 0032 05D0     		beq	.L160
2467:Generated_Source\PSoC4/CyLFClk.c ****         {
2468:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
 1840              		.loc 2 2468 0
 1841 0034 C046     		mov	r8, r8
 1842              	.L161:
 1843              		.loc 2 2468 0 is_stmt 0 discriminator 1
 1844 0036 0120     		mov	r0, #1
 1845 0038 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1846 003c 031E     		sub	r3, r0, #0
 1847 003e FAD1     		bne	.L161
 1848              	.L160:
2469:Generated_Source\PSoC4/CyLFClk.c ****             {
2470:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2471:Generated_Source\PSoC4/CyLFClk.c ****             }
2472:Generated_Source\PSoC4/CyLFClk.c ****         }
2473:Generated_Source\PSoC4/CyLFClk.c **** 
2474:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
 1849              		.loc 2 2474 0 is_stmt 1
 1850 0040 7A68     		ldr	r2, [r7, #4]
 1851 0042 8023     		mov	r3, #128
 1852 0044 5B02     		lsl	r3, r3, #9
 1853 0046 1340     		and	r3, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 89


 1854 0048 05D0     		beq	.L157
2475:Generated_Source\PSoC4/CyLFClk.c ****         {
2476:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
 1855              		.loc 2 2476 0
 1856 004a C046     		mov	r8, r8
 1857              	.L163:
 1858              		.loc 2 2476 0 is_stmt 0 discriminator 1
 1859 004c 0220     		mov	r0, #2
 1860 004e FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1861 0052 031E     		sub	r3, r0, #0
 1862 0054 FAD1     		bne	.L163
 1863              	.L157:
2477:Generated_Source\PSoC4/CyLFClk.c ****             {
2478:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2479:Generated_Source\PSoC4/CyLFClk.c ****             }
2480:Generated_Source\PSoC4/CyLFClk.c ****         }
2481:Generated_Source\PSoC4/CyLFClk.c **** 
2482:Generated_Source\PSoC4/CyLFClk.c ****     }
 1864              		.loc 2 2482 0 is_stmt 1
 1865 0056 BD46     		mov	sp, r7
 1866 0058 02B0     		add	sp, sp, #8
 1867              		@ sp needed
 1868 005a 80BD     		pop	{r7, pc}
 1869              	.L165:
 1870              		.align	2
 1871              	.L164:
 1872 005c 10020640 		.word	1074135568
 1873              		.cfi_endproc
 1874              	.LFE33:
 1875              		.size	CySysTimerDisable, .-CySysTimerDisable
 1876              		.section	.text.CySysTimerSetCascade,"ax",%progbits
 1877              		.align	2
 1878              		.global	CySysTimerSetCascade
 1879              		.code	16
 1880              		.thumb_func
 1881              		.type	CySysTimerSetCascade, %function
 1882              	CySysTimerSetCascade:
 1883              	.LFB34:
2483:Generated_Source\PSoC4/CyLFClk.c **** 
2484:Generated_Source\PSoC4/CyLFClk.c **** 
2485:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2486:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetCascade
2487:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2488:Generated_Source\PSoC4/CyLFClk.c ****     *
2489:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2490:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two DeepSleep Timers cascade values based on the combination of 
2491:Generated_Source\PSoC4/CyLFClk.c ****     * mask values specified.
2492:Generated_Source\PSoC4/CyLFClk.c ****     *
2493:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
2494:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_NONE - Neither<br>
2495:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_01 - Cascade 01<br>
2496:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_12 - Cascade 12
2497:Generated_Source\PSoC4/CyLFClk.c ****     *
2498:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
2499:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
2500:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
2501:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysTimerSetCascade() was called with ORed defines it is necessary 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 90


2502:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysTimeSetClearOnMatch(1,1). It is needed to make sure that 
2503:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
2504:Generated_Source\PSoC4/CyLFClk.c ****     *
2505:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counters that are part of the specified cascade should be disabled.
2506:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
2507:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysTimerDisable() function with the corresponding
2508:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
2509:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 Timers source-cycles.
2510:Generated_Source\PSoC4/CyLFClk.c ****     *
2511:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2512:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetCascade(uint32 cascadeMask)
2513:Generated_Source\PSoC4/CyLFClk.c ****     {
 1884              		.loc 2 2513 0
 1885              		.cfi_startproc
 1886 0000 90B5     		push	{r4, r7, lr}
 1887              		.cfi_def_cfa_offset 12
 1888              		.cfi_offset 4, -12
 1889              		.cfi_offset 7, -8
 1890              		.cfi_offset 14, -4
 1891 0002 85B0     		sub	sp, sp, #20
 1892              		.cfi_def_cfa_offset 32
 1893 0004 00AF     		add	r7, sp, #0
 1894              		.cfi_def_cfa_register 7
 1895 0006 7860     		str	r0, [r7, #4]
2514:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2515:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
2516:Generated_Source\PSoC4/CyLFClk.c **** 
2517:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysTimerGetEnabledStatus(CY_SYS_TIMER0) |
 1896              		.loc 2 2517 0
 1897 0008 0020     		mov	r0, #0
 1898 000a FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1899 000e 041C     		mov	r4, r0
2518:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER1) |
 1900              		.loc 2 2518 0
 1901 0010 0120     		mov	r0, #1
 1902 0012 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1903 0016 031C     		mov	r3, r0
2517:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER1) |
 1904              		.loc 2 2517 0
 1905 0018 1C43     		orr	r4, r3
2519:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER2);
 1906              		.loc 2 2519 0
 1907 001a 0220     		mov	r0, #2
 1908 001c FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1909 0020 031C     		mov	r3, r0
2517:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER1) |
 1910              		.loc 2 2517 0
 1911 0022 2343     		orr	r3, r4
 1912 0024 FB60     		str	r3, [r7, #12]
2520:Generated_Source\PSoC4/CyLFClk.c **** 
2521:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
 1913              		.loc 2 2521 0
 1914 0026 FB68     		ldr	r3, [r7, #12]
 1915 0028 002B     		cmp	r3, #0
 1916 002a 0DD1     		bne	.L166
2522:Generated_Source\PSoC4/CyLFClk.c ****         {
2523:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 91


 1917              		.loc 2 2523 0
 1918 002c 084B     		ldr	r3, .L168
 1919 002e 1B68     		ldr	r3, [r3]
 1920 0030 BB60     		str	r3, [r7, #8]
2524:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_TIMER_CASCADE_01|CY_SYS_TIMER_CASCADE_12)));
 1921              		.loc 2 2524 0
 1922 0032 BB68     		ldr	r3, [r7, #8]
 1923 0034 074A     		ldr	r2, .L168+4
 1924 0036 1340     		and	r3, r2
 1925 0038 BB60     		str	r3, [r7, #8]
2525:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
 1926              		.loc 2 2525 0
 1927 003a BA68     		ldr	r2, [r7, #8]
 1928 003c 7B68     		ldr	r3, [r7, #4]
 1929 003e 1343     		orr	r3, r2
 1930 0040 BB60     		str	r3, [r7, #8]
2526:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
 1931              		.loc 2 2526 0
 1932 0042 034B     		ldr	r3, .L168
 1933 0044 BA68     		ldr	r2, [r7, #8]
 1934 0046 1A60     		str	r2, [r3]
 1935              	.L166:
2527:Generated_Source\PSoC4/CyLFClk.c ****         }
2528:Generated_Source\PSoC4/CyLFClk.c ****     }
 1936              		.loc 2 2528 0
 1937 0048 BD46     		mov	sp, r7
 1938 004a 05B0     		add	sp, sp, #20
 1939              		@ sp needed
 1940 004c 90BD     		pop	{r4, r7, pc}
 1941              	.L169:
 1942 004e C046     		.align	2
 1943              	.L168:
 1944 0050 0C020640 		.word	1074135564
 1945 0054 F7F7FFFF 		.word	-2057
 1946              		.cfi_endproc
 1947              	.LFE34:
 1948              		.size	CySysTimerSetCascade, .-CySysTimerSetCascade
 1949              		.section	.text.CySysTimerGetCascade,"ax",%progbits
 1950              		.align	2
 1951              		.global	CySysTimerGetCascade
 1952              		.code	16
 1953              		.thumb_func
 1954              		.type	CySysTimerGetCascade, %function
 1955              	CySysTimerGetCascade:
 1956              	.LFB35:
2529:Generated_Source\PSoC4/CyLFClk.c **** 
2530:Generated_Source\PSoC4/CyLFClk.c **** 
2531:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2532:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCascade
2533:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2534:Generated_Source\PSoC4/CyLFClk.c ****     *
2535:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two DeepSleep Timer cascade values returning a mask of the 
2536:Generated_Source\PSoC4/CyLFClk.c ****     * bits set.
2537:Generated_Source\PSoC4/CyLFClk.c ****     *
2538:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
2539:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_NONE - Neither
2540:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_01 - Cascade 01
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 92


2541:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_12 - Cascade 12
2542:Generated_Source\PSoC4/CyLFClk.c ****     *
2543:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2544:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCascade(void)
2545:Generated_Source\PSoC4/CyLFClk.c ****     {
 1957              		.loc 2 2545 0
 1958              		.cfi_startproc
 1959 0000 80B5     		push	{r7, lr}
 1960              		.cfi_def_cfa_offset 8
 1961              		.cfi_offset 7, -8
 1962              		.cfi_offset 14, -4
 1963 0002 00AF     		add	r7, sp, #0
 1964              		.cfi_def_cfa_register 7
2546:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONFIG_REG & (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12));
 1965              		.loc 2 2546 0
 1966 0004 034B     		ldr	r3, .L172
 1967 0006 1B68     		ldr	r3, [r3]
 1968 0008 034A     		ldr	r2, .L172+4
 1969 000a 1340     		and	r3, r2
2547:Generated_Source\PSoC4/CyLFClk.c ****     }
 1970              		.loc 2 2547 0
 1971 000c 181C     		mov	r0, r3
 1972 000e BD46     		mov	sp, r7
 1973              		@ sp needed
 1974 0010 80BD     		pop	{r7, pc}
 1975              	.L173:
 1976 0012 C046     		.align	2
 1977              	.L172:
 1978 0014 0C020640 		.word	1074135564
 1979 0018 08080000 		.word	2056
 1980              		.cfi_endproc
 1981              	.LFE35:
 1982              		.size	CySysTimerGetCascade, .-CySysTimerGetCascade
 1983              		.section	.text.CySysTimerSetMatch,"ax",%progbits
 1984              		.align	2
 1985              		.global	CySysTimerSetMatch
 1986              		.code	16
 1987              		.thumb_func
 1988              		.type	CySysTimerSetMatch, %function
 1989              	CySysTimerSetMatch:
 1990              	.LFB36:
2548:Generated_Source\PSoC4/CyLFClk.c **** 
2549:Generated_Source\PSoC4/CyLFClk.c **** 
2550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMatch
2552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLFClk.c ****     *
2554:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the Timer counter match comparison value.
2555:Generated_Source\PSoC4/CyLFClk.c ****     *
2556:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the Timer counter. The 
2557:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2558:Generated_Source\PSoC4/CyLFClk.c ****     *
2559:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
2560:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
2561:Generated_Source\PSoC4/CyLFClk.c ****     *
2562:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2563:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMatch(uint32 counterNum, uint32 match)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 93


2564:Generated_Source\PSoC4/CyLFClk.c ****     {
 1991              		.loc 2 2564 0
 1992              		.cfi_startproc
 1993 0000 80B5     		push	{r7, lr}
 1994              		.cfi_def_cfa_offset 8
 1995              		.cfi_offset 7, -8
 1996              		.cfi_offset 14, -4
 1997 0002 84B0     		sub	sp, sp, #16
 1998              		.cfi_def_cfa_offset 24
 1999 0004 00AF     		add	r7, sp, #0
 2000              		.cfi_def_cfa_register 7
 2001 0006 7860     		str	r0, [r7, #4]
 2002 0008 3960     		str	r1, [r7]
2565:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
2566:Generated_Source\PSoC4/CyLFClk.c **** 
2567:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
 2003              		.loc 2 2567 0
 2004 000a 7B68     		ldr	r3, [r7, #4]
 2005 000c 002B     		cmp	r3, #0
 2006 000e 02D0     		beq	.L175
 2007              		.loc 2 2567 0 is_stmt 0 discriminator 2
 2008 0010 7B68     		ldr	r3, [r7, #4]
 2009 0012 012B     		cmp	r3, #1
 2010 0014 01D1     		bne	.L176
 2011              	.L175:
 2012              		.loc 2 2567 0 discriminator 3
 2013 0016 0123     		mov	r3, #1
 2014 0018 00E0     		b	.L177
 2015              	.L176:
 2016              		.loc 2 2567 0 discriminator 4
 2017 001a 0023     		mov	r3, #0
 2018              	.L177:
 2019              		.loc 2 2567 0 discriminator 6
 2020 001c 002B     		cmp	r3, #0
 2021 001e 02D1     		bne	.L178
 2022              		.loc 2 2567 0 discriminator 7
 2023 0020 0020     		mov	r0, #0
 2024 0022 FFF7FEFF 		bl	CyHalt
 2025              	.L178:
2568:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2569:Generated_Source\PSoC4/CyLFClk.c **** 
2570:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
2571:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_3TIMER_DELAY_US);
 2026              		.loc 2 2571 0 is_stmt 1
 2027 0026 174B     		ldr	r3, .L183
 2028 0028 1B68     		ldr	r3, [r3]
 2029 002a 9B0F     		lsr	r3, r3, #30
 2030 002c 9B07     		lsl	r3, r3, #30
 2031 002e 01D1     		bne	.L179
 2032              		.loc 2 2571 0 is_stmt 0 discriminator 1
 2033 0030 C923     		mov	r3, #201
 2034 0032 00E0     		b	.L180
 2035              	.L179:
 2036              		.loc 2 2571 0 discriminator 2
 2037 0034 5D23     		mov	r3, #93
 2038              	.L180:
 2039              		.loc 2 2571 0 discriminator 4
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 94


 2040 0036 181C     		mov	r0, r3
 2041 0038 FFF7FEFF 		bl	CyDelayUs
2572:Generated_Source\PSoC4/CyLFClk.c **** 
2573:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WCO_WDT_MATCH_REG;
 2042              		.loc 2 2573 0 is_stmt 1 discriminator 4
 2043 003c 124B     		ldr	r3, .L183+4
 2044 003e 1B68     		ldr	r3, [r3]
 2045 0040 FB60     		str	r3, [r7, #12]
2574:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_TIMER_LOWER_16BITS_MASK << (counterNum * CY_SYS_TIMER
 2046              		.loc 2 2574 0 discriminator 4
 2047 0042 7B68     		ldr	r3, [r7, #4]
 2048 0044 1B01     		lsl	r3, r3, #4
 2049 0046 1A1C     		mov	r2, r3
 2050 0048 104B     		ldr	r3, .L183+8
 2051 004a 9340     		lsl	r3, r3, r2
 2052 004c DA43     		mvn	r2, r3
 2053 004e FB68     		ldr	r3, [r7, #12]
 2054 0050 1340     		and	r3, r2
 2055 0052 FB60     		str	r3, [r7, #12]
2575:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT
 2056              		.loc 2 2575 0 discriminator 4
 2057 0054 0C4B     		ldr	r3, .L183+4
 2058 0056 7A68     		ldr	r2, [r7, #4]
 2059 0058 1201     		lsl	r2, r2, #4
 2060 005a 111C     		mov	r1, r2
 2061 005c 3A68     		ldr	r2, [r7]
 2062 005e 8A40     		lsl	r2, r2, r1
 2063 0060 111C     		mov	r1, r2
 2064 0062 FA68     		ldr	r2, [r7, #12]
 2065 0064 0A43     		orr	r2, r1
 2066 0066 1A60     		str	r2, [r3]
2576:Generated_Source\PSoC4/CyLFClk.c **** 
2577:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
2578:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_1TIMER_DELAY_US);
 2067              		.loc 2 2578 0 discriminator 4
 2068 0068 064B     		ldr	r3, .L183
 2069 006a 1B68     		ldr	r3, [r3]
 2070 006c 9B0F     		lsr	r3, r3, #30
 2071 006e 9B07     		lsl	r3, r3, #30
 2072 0070 01D1     		bne	.L181
 2073              		.loc 2 2578 0 is_stmt 0 discriminator 1
 2074 0072 4323     		mov	r3, #67
 2075 0074 00E0     		b	.L182
 2076              	.L181:
 2077              		.loc 2 2578 0 discriminator 2
 2078 0076 1F23     		mov	r3, #31
 2079              	.L182:
 2080              		.loc 2 2578 0 discriminator 4
 2081 0078 181C     		mov	r0, r3
 2082 007a FFF7FEFF 		bl	CyDelayUs
2579:Generated_Source\PSoC4/CyLFClk.c ****     }
 2083              		.loc 2 2579 0 is_stmt 1 discriminator 4
 2084 007e BD46     		mov	sp, r7
 2085 0080 04B0     		add	sp, sp, #16
 2086              		@ sp needed
 2087 0082 80BD     		pop	{r7, pc}
 2088              	.L184:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 95


 2089              		.align	2
 2090              	.L183:
 2091 0084 0C020640 		.word	1074135564
 2092 0088 08020640 		.word	1074135560
 2093 008c FFFF0000 		.word	65535
 2094              		.cfi_endproc
 2095              	.LFE36:
 2096              		.size	CySysTimerSetMatch, .-CySysTimerSetMatch
 2097              		.section	.text.CySysTimerSetToggleBit,"ax",%progbits
 2098              		.align	2
 2099              		.global	CySysTimerSetToggleBit
 2100              		.code	16
 2101              		.thumb_func
 2102              		.type	CySysTimerSetToggleBit, %function
 2103              	CySysTimerSetToggleBit:
 2104              	.LFB37:
2580:Generated_Source\PSoC4/CyLFClk.c **** 
2581:Generated_Source\PSoC4/CyLFClk.c **** 
2582:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2583:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetToggleBit
2584:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2585:Generated_Source\PSoC4/CyLFClk.c ****     *
2586:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures which bit in Timer counter 2 to monitor for a toggle.
2587:Generated_Source\PSoC4/CyLFClk.c ****     *
2588:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if mode for counter 2 has
2589:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
2590:Generated_Source\PSoC4/CyLFClk.c ****     *
2591:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31]. Counter 2 bit to monitor for a toggle.
2592:Generated_Source\PSoC4/CyLFClk.c ****     *
2593:Generated_Source\PSoC4/CyLFClk.c ****     * \details Timer counter 2 should be disabled. Otherwise this function call has
2594:Generated_Source\PSoC4/CyLFClk.c ****     * no effect.
2595:Generated_Source\PSoC4/CyLFClk.c ****     *
2596:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysTimerDisable() function with
2597:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
2598:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to three Timer source-cycles.
2599:Generated_Source\PSoC4/CyLFClk.c ****     *
2600:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2601:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetToggleBit(uint32 bits)
2602:Generated_Source\PSoC4/CyLFClk.c ****     {
 2105              		.loc 2 2602 0
 2106              		.cfi_startproc
 2107 0000 80B5     		push	{r7, lr}
 2108              		.cfi_def_cfa_offset 8
 2109              		.cfi_offset 7, -8
 2110              		.cfi_offset 14, -4
 2111 0002 84B0     		sub	sp, sp, #16
 2112              		.cfi_def_cfa_offset 24
 2113 0004 00AF     		add	r7, sp, #0
 2114              		.cfi_def_cfa_register 7
 2115 0006 7860     		str	r0, [r7, #4]
2603:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2604:Generated_Source\PSoC4/CyLFClk.c **** 
2605:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
 2116              		.loc 2 2605 0
 2117 0008 0220     		mov	r0, #2
 2118 000a FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 2119 000e 031E     		sub	r3, r0, #0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 96


 2120 0010 10D1     		bne	.L185
2606:Generated_Source\PSoC4/CyLFClk.c ****         {
2607:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
 2121              		.loc 2 2607 0
 2122 0012 0A4B     		ldr	r3, .L187
 2123 0014 1B68     		ldr	r3, [r3]
 2124 0016 FB60     		str	r3, [r7, #12]
2608:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_TIMER_CONFIG_BITS2_MASK << CY_SYS_TIMER_CO
 2125              		.loc 2 2608 0
 2126 0018 FB68     		ldr	r3, [r7, #12]
 2127 001a 094A     		ldr	r2, .L187+4
 2128 001c 1340     		and	r3, r2
 2129 001e FB60     		str	r3, [r7, #12]
2609:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_TIMER_CONFIG_BITS2_MASK) << CY_SYS_TIMER_CONFIG_BITS2
 2130              		.loc 2 2609 0
 2131 0020 7B68     		ldr	r3, [r7, #4]
 2132 0022 1F22     		mov	r2, #31
 2133 0024 1340     		and	r3, r2
 2134 0026 1B06     		lsl	r3, r3, #24
 2135 0028 FA68     		ldr	r2, [r7, #12]
 2136 002a 1343     		orr	r3, r2
 2137 002c FB60     		str	r3, [r7, #12]
2610:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
 2138              		.loc 2 2610 0
 2139 002e 034B     		ldr	r3, .L187
 2140 0030 FA68     		ldr	r2, [r7, #12]
 2141 0032 1A60     		str	r2, [r3]
 2142              	.L185:
2611:Generated_Source\PSoC4/CyLFClk.c ****         }
2612:Generated_Source\PSoC4/CyLFClk.c ****     }
 2143              		.loc 2 2612 0
 2144 0034 BD46     		mov	sp, r7
 2145 0036 04B0     		add	sp, sp, #16
 2146              		@ sp needed
 2147 0038 80BD     		pop	{r7, pc}
 2148              	.L188:
 2149 003a C046     		.align	2
 2150              	.L187:
 2151 003c 0C020640 		.word	1074135564
 2152 0040 FFFFFFE0 		.word	-520093697
 2153              		.cfi_endproc
 2154              	.LFE37:
 2155              		.size	CySysTimerSetToggleBit, .-CySysTimerSetToggleBit
 2156              		.section	.text.CySysTimerGetToggleBit,"ax",%progbits
 2157              		.align	2
 2158              		.global	CySysTimerGetToggleBit
 2159              		.code	16
 2160              		.thumb_func
 2161              		.type	CySysTimerGetToggleBit, %function
 2162              	CySysTimerGetToggleBit:
 2163              	.LFB38:
2613:Generated_Source\PSoC4/CyLFClk.c **** 
2614:Generated_Source\PSoC4/CyLFClk.c **** 
2615:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2616:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetToggleBit
2617:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2618:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 97


2619:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads which bit in Timer counter 2 is monitored for a toggle.
2620:Generated_Source\PSoC4/CyLFClk.c ****     *
2621:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
2622:Generated_Source\PSoC4/CyLFClk.c ****     *
2623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2624:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetToggleBit(void)
2625:Generated_Source\PSoC4/CyLFClk.c ****     {
 2164              		.loc 2 2625 0
 2165              		.cfi_startproc
 2166 0000 80B5     		push	{r7, lr}
 2167              		.cfi_def_cfa_offset 8
 2168              		.cfi_offset 7, -8
 2169              		.cfi_offset 14, -4
 2170 0002 00AF     		add	r7, sp, #0
 2171              		.cfi_def_cfa_register 7
2626:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> CY_SYS_TIMER_CONFIG_BITS2_POS) & CY_SYS_TIMER_CONFIG_
 2172              		.loc 2 2626 0
 2173 0004 034B     		ldr	r3, .L191
 2174 0006 1B68     		ldr	r3, [r3]
 2175 0008 1B0E     		lsr	r3, r3, #24
 2176 000a 1F22     		mov	r2, #31
 2177 000c 1340     		and	r3, r2
2627:Generated_Source\PSoC4/CyLFClk.c ****     }
 2178              		.loc 2 2627 0
 2179 000e 181C     		mov	r0, r3
 2180 0010 BD46     		mov	sp, r7
 2181              		@ sp needed
 2182 0012 80BD     		pop	{r7, pc}
 2183              	.L192:
 2184              		.align	2
 2185              	.L191:
 2186 0014 0C020640 		.word	1074135564
 2187              		.cfi_endproc
 2188              	.LFE38:
 2189              		.size	CySysTimerGetToggleBit, .-CySysTimerGetToggleBit
 2190              		.section	.text.CySysTimerGetMatch,"ax",%progbits
 2191              		.align	2
 2192              		.global	CySysTimerGetMatch
 2193              		.code	16
 2194              		.thumb_func
 2195              		.type	CySysTimerGetMatch, %function
 2196              	CySysTimerGetMatch:
 2197              	.LFB39:
2628:Generated_Source\PSoC4/CyLFClk.c **** 
2629:Generated_Source\PSoC4/CyLFClk.c **** 
2630:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2631:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMatch
2632:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2633:Generated_Source\PSoC4/CyLFClk.c ****     *
2634:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the Timer counter match comparison value.
2635:Generated_Source\PSoC4/CyLFClk.c ****     *
2636:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the DeepSleep Timer 
2637:Generated_Source\PSoC4/CyLFClk.c ****     * counter. The match values are not supported by counter 2.
2638:Generated_Source\PSoC4/CyLFClk.c ****     *
2639:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
2640:Generated_Source\PSoC4/CyLFClk.c ****     *
2641:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 98


2642:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMatch(uint32 counterNum)
2643:Generated_Source\PSoC4/CyLFClk.c ****     {
 2198              		.loc 2 2643 0
 2199              		.cfi_startproc
 2200 0000 80B5     		push	{r7, lr}
 2201              		.cfi_def_cfa_offset 8
 2202              		.cfi_offset 7, -8
 2203              		.cfi_offset 14, -4
 2204 0002 82B0     		sub	sp, sp, #8
 2205              		.cfi_def_cfa_offset 16
 2206 0004 00AF     		add	r7, sp, #0
 2207              		.cfi_def_cfa_register 7
 2208 0006 7860     		str	r0, [r7, #4]
2644:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
 2209              		.loc 2 2644 0
 2210 0008 7B68     		ldr	r3, [r7, #4]
 2211 000a 002B     		cmp	r3, #0
 2212 000c 02D0     		beq	.L194
 2213              		.loc 2 2644 0 is_stmt 0 discriminator 2
 2214 000e 7B68     		ldr	r3, [r7, #4]
 2215 0010 012B     		cmp	r3, #1
 2216 0012 01D1     		bne	.L195
 2217              	.L194:
 2218              		.loc 2 2644 0 discriminator 3
 2219 0014 0123     		mov	r3, #1
 2220 0016 00E0     		b	.L196
 2221              	.L195:
 2222              		.loc 2 2644 0 discriminator 4
 2223 0018 0023     		mov	r3, #0
 2224              	.L196:
 2225              		.loc 2 2644 0 discriminator 6
 2226 001a 002B     		cmp	r3, #0
 2227 001c 02D1     		bne	.L197
 2228              		.loc 2 2644 0 discriminator 7
 2229 001e 0020     		mov	r0, #0
 2230 0020 FFF7FEFF 		bl	CyHalt
 2231              	.L197:
2645:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2646:Generated_Source\PSoC4/CyLFClk.c **** 
2647:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WCO_WDT_MATCH_REG >> (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT)) &
 2232              		.loc 2 2647 0 is_stmt 1
 2233 0024 054B     		ldr	r3, .L199
 2234 0026 1B68     		ldr	r3, [r3]
 2235 0028 7A68     		ldr	r2, [r7, #4]
 2236 002a 1201     		lsl	r2, r2, #4
 2237 002c D340     		lsr	r3, r3, r2
 2238 002e 1B04     		lsl	r3, r3, #16
 2239 0030 1B0C     		lsr	r3, r3, #16
2648:Generated_Source\PSoC4/CyLFClk.c ****                                                                   CY_SYS_TIMER_LOWER_16BITS_MASK);
2649:Generated_Source\PSoC4/CyLFClk.c ****     }
 2240              		.loc 2 2649 0
 2241 0032 181C     		mov	r0, r3
 2242 0034 BD46     		mov	sp, r7
 2243 0036 02B0     		add	sp, sp, #8
 2244              		@ sp needed
 2245 0038 80BD     		pop	{r7, pc}
 2246              	.L200:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 99


 2247 003a C046     		.align	2
 2248              	.L199:
 2249 003c 08020640 		.word	1074135560
 2250              		.cfi_endproc
 2251              	.LFE39:
 2252              		.size	CySysTimerGetMatch, .-CySysTimerGetMatch
 2253              		.section	.text.CySysTimerGetCount,"ax",%progbits
 2254              		.align	2
 2255              		.global	CySysTimerGetCount
 2256              		.code	16
 2257              		.thumb_func
 2258              		.type	CySysTimerGetCount, %function
 2259              	CySysTimerGetCount:
 2260              	.LFB40:
2650:Generated_Source\PSoC4/CyLFClk.c **** 
2651:Generated_Source\PSoC4/CyLFClk.c **** 
2652:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2653:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCount
2654:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2655:Generated_Source\PSoC4/CyLFClk.c ****     *
2656:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current DeepSleep Timer counter value.
2657:Generated_Source\PSoC4/CyLFClk.c ****     *
2658:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2659:Generated_Source\PSoC4/CyLFClk.c ****     *
2660:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value. Counter 0 and Counter 1 are 16 bit counters 
2661:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
2662:Generated_Source\PSoC4/CyLFClk.c ****     *
2663:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2664:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCount(uint32 counterNum)
2665:Generated_Source\PSoC4/CyLFClk.c ****     {
 2261              		.loc 2 2665 0
 2262              		.cfi_startproc
 2263 0000 80B5     		push	{r7, lr}
 2264              		.cfi_def_cfa_offset 8
 2265              		.cfi_offset 7, -8
 2266              		.cfi_offset 14, -4
 2267 0002 84B0     		sub	sp, sp, #16
 2268              		.cfi_def_cfa_offset 24
 2269 0004 00AF     		add	r7, sp, #0
 2270              		.cfi_def_cfa_register 7
 2271 0006 7860     		str	r0, [r7, #4]
2666:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
 2272              		.loc 2 2666 0
 2273 0008 0023     		mov	r3, #0
 2274 000a FB60     		str	r3, [r7, #12]
2667:Generated_Source\PSoC4/CyLFClk.c **** 
2668:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
 2275              		.loc 2 2668 0
 2276 000c 7B68     		ldr	r3, [r7, #4]
 2277 000e 012B     		cmp	r3, #1
 2278 0010 09D0     		beq	.L203
 2279 0012 02D3     		bcc	.L204
 2280 0014 022B     		cmp	r3, #2
 2281 0016 0BD0     		beq	.L205
 2282 0018 0EE0     		b	.L208
 2283              	.L204:
2669:Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 100


2670:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 0 */
2671:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
2672:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRLOW_REG & CY_SYS_TIMER_LOWER_16BITS_MASK;
 2284              		.loc 2 2672 0
 2285 001a 0C4B     		ldr	r3, .L209
 2286 001c 1B68     		ldr	r3, [r3]
 2287 001e 1B04     		lsl	r3, r3, #16
 2288 0020 1B0C     		lsr	r3, r3, #16
 2289 0022 FB60     		str	r3, [r7, #12]
2673:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2290              		.loc 2 2673 0
 2291 0024 0CE0     		b	.L206
 2292              	.L203:
2674:Generated_Source\PSoC4/CyLFClk.c **** 
2675:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 1 */
2676:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
2677:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WCO_WDT_CTRLOW_REG >> CY_SYS_TIMER_CNT_MATCH_SHIFT) & CY_SYS_TIM
 2293              		.loc 2 2677 0
 2294 0026 094B     		ldr	r3, .L209
 2295 0028 1B68     		ldr	r3, [r3]
 2296 002a 1B0C     		lsr	r3, r3, #16
 2297 002c FB60     		str	r3, [r7, #12]
2678:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2298              		.loc 2 2678 0
 2299 002e 07E0     		b	.L206
 2300              	.L205:
2679:Generated_Source\PSoC4/CyLFClk.c **** 
2680:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 2 */
2681:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
2682:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRHIGH_REG;
 2301              		.loc 2 2682 0
 2302 0030 074B     		ldr	r3, .L209+4
 2303 0032 1B68     		ldr	r3, [r3]
 2304 0034 FB60     		str	r3, [r7, #12]
2683:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2305              		.loc 2 2683 0
 2306 0036 03E0     		b	.L206
 2307              	.L208:
2684:Generated_Source\PSoC4/CyLFClk.c **** 
2685:Generated_Source\PSoC4/CyLFClk.c ****             default:
2686:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 2308              		.loc 2 2686 0
 2309 0038 0020     		mov	r0, #0
 2310 003a FFF7FEFF 		bl	CyHalt
2687:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2311              		.loc 2 2687 0
 2312 003e C046     		mov	r8, r8
 2313              	.L206:
2688:Generated_Source\PSoC4/CyLFClk.c ****         }
2689:Generated_Source\PSoC4/CyLFClk.c **** 
2690:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
 2314              		.loc 2 2690 0
 2315 0040 FB68     		ldr	r3, [r7, #12]
2691:Generated_Source\PSoC4/CyLFClk.c ****     }
 2316              		.loc 2 2691 0
 2317 0042 181C     		mov	r0, r3
 2318 0044 BD46     		mov	sp, r7
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 101


 2319 0046 04B0     		add	sp, sp, #16
 2320              		@ sp needed
 2321 0048 80BD     		pop	{r7, pc}
 2322              	.L210:
 2323 004a C046     		.align	2
 2324              	.L209:
 2325 004c 00020640 		.word	1074135552
 2326 0050 04020640 		.word	1074135556
 2327              		.cfi_endproc
 2328              	.LFE40:
 2329              		.size	CySysTimerGetCount, .-CySysTimerGetCount
 2330              		.section	.text.CySysTimerGetInterruptSource,"ax",%progbits
 2331              		.align	2
 2332              		.global	CySysTimerGetInterruptSource
 2333              		.code	16
 2334              		.thumb_func
 2335              		.type	CySysTimerGetInterruptSource, %function
 2336              	CySysTimerGetInterruptSource:
 2337              	.LFB41:
2692:Generated_Source\PSoC4/CyLFClk.c **** 
2693:Generated_Source\PSoC4/CyLFClk.c **** 
2694:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2695:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptSource
2696:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLFClk.c ****     *
2698:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2699:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the DeepSleep Timer counters interrupts that are 
2700:Generated_Source\PSoC4/CyLFClk.c ****     * currently set by the hardware, if a corresponding mode is selected.
2701:Generated_Source\PSoC4/CyLFClk.c ****     *
2702:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
2703:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER0_INT - Set interrupt for Counter 0
2704:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER1_INT - Set interrupt for Counter 1
2705:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER2_INT - Set interrupt for Counter 2
2706:Generated_Source\PSoC4/CyLFClk.c ****     *
2707:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2708:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetInterruptSource(void)
2709:Generated_Source\PSoC4/CyLFClk.c ****     {
 2338              		.loc 2 2709 0
 2339              		.cfi_startproc
 2340 0000 80B5     		push	{r7, lr}
 2341              		.cfi_def_cfa_offset 8
 2342              		.cfi_offset 7, -8
 2343              		.cfi_offset 14, -4
 2344 0002 00AF     		add	r7, sp, #0
 2345              		.cfi_def_cfa_register 7
2710:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONTROL_REG & (CY_SYS_TIMER0_INT | CY_SYS_TIMER1_INT | CY_SYS_TIMER2
 2346              		.loc 2 2710 0
 2347 0004 034B     		ldr	r3, .L213
 2348 0006 1B68     		ldr	r3, [r3]
 2349 0008 034A     		ldr	r2, .L213+4
 2350 000a 1340     		and	r3, r2
2711:Generated_Source\PSoC4/CyLFClk.c ****     }
 2351              		.loc 2 2711 0
 2352 000c 181C     		mov	r0, r3
 2353 000e BD46     		mov	sp, r7
 2354              		@ sp needed
 2355 0010 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 102


 2356              	.L214:
 2357 0012 C046     		.align	2
 2358              	.L213:
 2359 0014 10020640 		.word	1074135568
 2360 0018 04040400 		.word	263172
 2361              		.cfi_endproc
 2362              	.LFE41:
 2363              		.size	CySysTimerGetInterruptSource, .-CySysTimerGetInterruptSource
 2364              		.section	.text.CySysTimerClearInterrupt,"ax",%progbits
 2365              		.align	2
 2366              		.global	CySysTimerClearInterrupt
 2367              		.code	16
 2368              		.thumb_func
 2369              		.type	CySysTimerClearInterrupt, %function
 2370              	CySysTimerClearInterrupt:
 2371              	.LFB42:
2712:Generated_Source\PSoC4/CyLFClk.c **** 
2713:Generated_Source\PSoC4/CyLFClk.c **** 
2714:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2715:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerClearInterrupt
2716:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2717:Generated_Source\PSoC4/CyLFClk.c ****     *
2718:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Clears all the DeepSleep Timer counter interrupts set in the mask.
2719:Generated_Source\PSoC4/CyLFClk.c ****     *
2720:Generated_Source\PSoC4/CyLFClk.c ****     * All the Timer interrupts are to be cleared by the firmware, otherwise
2721:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
2722:Generated_Source\PSoC4/CyLFClk.c ****     *
2723:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2724:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_INT - Clear counter 0<br>
2725:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_INT - Clear counter 1<br>
2726:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_INT - Clear counter 2
2727:Generated_Source\PSoC4/CyLFClk.c ****     *
2728:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2729:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerClearInterrupt(uint32 counterMask)
2730:Generated_Source\PSoC4/CyLFClk.c ****     {
 2372              		.loc 2 2730 0
 2373              		.cfi_startproc
 2374 0000 90B5     		push	{r4, r7, lr}
 2375              		.cfi_def_cfa_offset 12
 2376              		.cfi_offset 4, -12
 2377              		.cfi_offset 7, -8
 2378              		.cfi_offset 14, -4
 2379 0002 85B0     		sub	sp, sp, #20
 2380              		.cfi_def_cfa_offset 32
 2381 0004 00AF     		add	r7, sp, #0
 2382              		.cfi_def_cfa_register 7
 2383 0006 7860     		str	r0, [r7, #4]
2731:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
2732:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 2384              		.loc 2 2732 0
 2385 0008 0F23     		mov	r3, #15
 2386 000a FC18     		add	r4, r7, r3
 2387 000c FFF7FEFF 		bl	CyEnterCriticalSection
 2388 0010 031C     		mov	r3, r0
 2389 0012 2370     		strb	r3, [r4]
2733:Generated_Source\PSoC4/CyLFClk.c **** 
2734:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WCO_TIMER control register value */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 103


2735:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_TIMER0_INT |
 2390              		.loc 2 2735 0
 2391 0014 7B68     		ldr	r3, [r7, #4]
 2392 0016 0B4A     		ldr	r2, .L216
 2393 0018 1340     		and	r3, r2
 2394 001a 7B60     		str	r3, [r7, #4]
2736:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER1_INT |
2737:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER2_INT);
2738:Generated_Source\PSoC4/CyLFClk.c **** 
2739:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG = counterMask | (CY_SYS_WCO_WDT_CONTROL_REG & ~(CY_SYS_TIMER0_IN
 2395              		.loc 2 2739 0
 2396 001c 0A4B     		ldr	r3, .L216+4
 2397 001e 0A4A     		ldr	r2, .L216+4
 2398 0020 1268     		ldr	r2, [r2]
 2399 0022 0A49     		ldr	r1, .L216+8
 2400 0024 1140     		and	r1, r2
 2401 0026 7A68     		ldr	r2, [r7, #4]
 2402 0028 0A43     		orr	r2, r1
 2403 002a 1A60     		str	r2, [r3]
2740:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER1_INT |
2741:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER2_INT));
2742:Generated_Source\PSoC4/CyLFClk.c **** 
2743:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
2744:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
2745:Generated_Source\PSoC4/CyLFClk.c ****         */
2746:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WCO_WDT_CONTROL_REG;
 2404              		.loc 2 2746 0
 2405 002c 064B     		ldr	r3, .L216+4
 2406 002e 1B68     		ldr	r3, [r3]
2747:Generated_Source\PSoC4/CyLFClk.c **** 
2748:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 2407              		.loc 2 2748 0
 2408 0030 0F23     		mov	r3, #15
 2409 0032 FB18     		add	r3, r7, r3
 2410 0034 1B78     		ldrb	r3, [r3]
 2411 0036 181C     		mov	r0, r3
 2412 0038 FFF7FEFF 		bl	CyExitCriticalSection
2749:Generated_Source\PSoC4/CyLFClk.c ****     }
 2413              		.loc 2 2749 0
 2414 003c BD46     		mov	sp, r7
 2415 003e 05B0     		add	sp, sp, #20
 2416              		@ sp needed
 2417 0040 90BD     		pop	{r4, r7, pc}
 2418              	.L217:
 2419 0042 C046     		.align	2
 2420              	.L216:
 2421 0044 04040400 		.word	263172
 2422 0048 10020640 		.word	1074135568
 2423 004c FBFBFBFF 		.word	-263173
 2424              		.cfi_endproc
 2425              	.LFE42:
 2426              		.size	CySysTimerClearInterrupt, .-CySysTimerClearInterrupt
 2427              		.section	.text.CySysTimerSetInterruptCallback,"ax",%progbits
 2428              		.align	2
 2429              		.global	CySysTimerSetInterruptCallback
 2430              		.code	16
 2431              		.thumb_func
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 104


 2432              		.type	CySysTimerSetInterruptCallback, %function
 2433              	CySysTimerSetInterruptCallback:
 2434              	.LFB43:
2750:Generated_Source\PSoC4/CyLFClk.c **** 
2751:Generated_Source\PSoC4/CyLFClk.c **** 
2752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetInterruptCallback
2754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2755:Generated_Source\PSoC4/CyLFClk.c ****     *
2756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2757:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular DeepSleep Timer counter.
2758:Generated_Source\PSoC4/CyLFClk.c ****     *
2759:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the Timer interrupt.
2760:Generated_Source\PSoC4/CyLFClk.c ****     *
2761:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2762:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2763:Generated_Source\PSoC4/CyLFClk.c ****     *
2764:Generated_Source\PSoC4/CyLFClk.c ****     * \return  The pointer to the previous callback function. 
2765:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
2766:Generated_Source\PSoC4/CyLFClk.c ****     *
2767:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2768:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function)
2769:Generated_Source\PSoC4/CyLFClk.c ****     {
 2435              		.loc 2 2769 0
 2436              		.cfi_startproc
 2437 0000 80B5     		push	{r7, lr}
 2438              		.cfi_def_cfa_offset 8
 2439              		.cfi_offset 7, -8
 2440              		.cfi_offset 14, -4
 2441 0002 84B0     		sub	sp, sp, #16
 2442              		.cfi_def_cfa_offset 24
 2443 0004 00AF     		add	r7, sp, #0
 2444              		.cfi_def_cfa_register 7
 2445 0006 7860     		str	r0, [r7, #4]
 2446 0008 3960     		str	r1, [r7]
2770:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback prevCallback = (void *)0;
 2447              		.loc 2 2770 0
 2448 000a 0023     		mov	r3, #0
 2449 000c FB60     		str	r3, [r7, #12]
2771:Generated_Source\PSoC4/CyLFClk.c **** 
2772:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
 2450              		.loc 2 2772 0
 2451 000e 7B68     		ldr	r3, [r7, #4]
 2452 0010 022B     		cmp	r3, #2
 2453 0012 0AD8     		bhi	.L219
2773:Generated_Source\PSoC4/CyLFClk.c ****         {
2774:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysTimerCallback[counterNum];
 2454              		.loc 2 2774 0
 2455 0014 094B     		ldr	r3, .L222
 2456 0016 7A68     		ldr	r2, [r7, #4]
 2457 0018 9200     		lsl	r2, r2, #2
 2458 001a D358     		ldr	r3, [r2, r3]
 2459 001c FB60     		str	r3, [r7, #12]
2775:Generated_Source\PSoC4/CyLFClk.c ****             cySysTimerCallback[counterNum] = function;
 2460              		.loc 2 2775 0
 2461 001e 074B     		ldr	r3, .L222
 2462 0020 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 105


 2463 0022 9200     		lsl	r2, r2, #2
 2464 0024 3968     		ldr	r1, [r7]
 2465 0026 D150     		str	r1, [r2, r3]
 2466 0028 02E0     		b	.L220
 2467              	.L219:
2776:Generated_Source\PSoC4/CyLFClk.c ****         }
2777:Generated_Source\PSoC4/CyLFClk.c ****         else
2778:Generated_Source\PSoC4/CyLFClk.c ****         {
2779:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2468              		.loc 2 2779 0 discriminator 1
 2469 002a 0020     		mov	r0, #0
 2470 002c FFF7FEFF 		bl	CyHalt
 2471              	.L220:
2780:Generated_Source\PSoC4/CyLFClk.c ****         }
2781:Generated_Source\PSoC4/CyLFClk.c **** 
2782:Generated_Source\PSoC4/CyLFClk.c ****         return((cyTimerCallback)prevCallback);
 2472              		.loc 2 2782 0
 2473 0030 FB68     		ldr	r3, [r7, #12]
2783:Generated_Source\PSoC4/CyLFClk.c ****     }
 2474              		.loc 2 2783 0
 2475 0032 181C     		mov	r0, r3
 2476 0034 BD46     		mov	sp, r7
 2477 0036 04B0     		add	sp, sp, #16
 2478              		@ sp needed
 2479 0038 80BD     		pop	{r7, pc}
 2480              	.L223:
 2481 003a C046     		.align	2
 2482              	.L222:
 2483 003c 04000000 		.word	cySysTimerCallback
 2484              		.cfi_endproc
 2485              	.LFE43:
 2486              		.size	CySysTimerSetInterruptCallback, .-CySysTimerSetInterruptCallback
 2487              		.section	.text.CySysTimerGetInterruptCallback,"ax",%progbits
 2488              		.align	2
 2489              		.global	CySysTimerGetInterruptCallback
 2490              		.code	16
 2491              		.thumb_func
 2492              		.type	CySysTimerGetInterruptCallback, %function
 2493              	CySysTimerGetInterruptCallback:
 2494              	.LFB44:
2784:Generated_Source\PSoC4/CyLFClk.c **** 
2785:Generated_Source\PSoC4/CyLFClk.c **** 
2786:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2787:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptCallback
2788:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2789:Generated_Source\PSoC4/CyLFClk.c ****     *
2790:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Gets the ISR callback function for the particular DeepSleep Timer 
2791:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2792:Generated_Source\PSoC4/CyLFClk.c ****     *
2793:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2794:Generated_Source\PSoC4/CyLFClk.c ****     *
2795:Generated_Source\PSoC4/CyLFClk.c ****     * \return
2796:Generated_Source\PSoC4/CyLFClk.c ****     * The pointer to the callback function registered for a particular Timer by
2797:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
2798:Generated_Source\PSoC4/CyLFClk.c ****     *
2799:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2800:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 106


2801:Generated_Source\PSoC4/CyLFClk.c ****     {
 2495              		.loc 2 2801 0
 2496              		.cfi_startproc
 2497 0000 80B5     		push	{r7, lr}
 2498              		.cfi_def_cfa_offset 8
 2499              		.cfi_offset 7, -8
 2500              		.cfi_offset 14, -4
 2501 0002 84B0     		sub	sp, sp, #16
 2502              		.cfi_def_cfa_offset 24
 2503 0004 00AF     		add	r7, sp, #0
 2504              		.cfi_def_cfa_register 7
 2505 0006 7860     		str	r0, [r7, #4]
2802:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback retCallback = (void *)0;
 2506              		.loc 2 2802 0
 2507 0008 0023     		mov	r3, #0
 2508 000a FB60     		str	r3, [r7, #12]
2803:Generated_Source\PSoC4/CyLFClk.c **** 
2804:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
 2509              		.loc 2 2804 0
 2510 000c 7B68     		ldr	r3, [r7, #4]
 2511 000e 022B     		cmp	r3, #2
 2512 0010 05D8     		bhi	.L225
2805:Generated_Source\PSoC4/CyLFClk.c ****         {
2806:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyTimerCallback)cySysTimerCallback[counterNum];
 2513              		.loc 2 2806 0
 2514 0012 074B     		ldr	r3, .L228
 2515 0014 7A68     		ldr	r2, [r7, #4]
 2516 0016 9200     		lsl	r2, r2, #2
 2517 0018 D358     		ldr	r3, [r2, r3]
 2518 001a FB60     		str	r3, [r7, #12]
 2519 001c 02E0     		b	.L226
 2520              	.L225:
2807:Generated_Source\PSoC4/CyLFClk.c ****         }
2808:Generated_Source\PSoC4/CyLFClk.c ****         else
2809:Generated_Source\PSoC4/CyLFClk.c ****         {
2810:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2521              		.loc 2 2810 0 discriminator 1
 2522 001e 0020     		mov	r0, #0
 2523 0020 FFF7FEFF 		bl	CyHalt
 2524              	.L226:
2811:Generated_Source\PSoC4/CyLFClk.c ****         }
2812:Generated_Source\PSoC4/CyLFClk.c **** 
2813:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
 2525              		.loc 2 2813 0
 2526 0024 FB68     		ldr	r3, [r7, #12]
2814:Generated_Source\PSoC4/CyLFClk.c ****     }
 2527              		.loc 2 2814 0
 2528 0026 181C     		mov	r0, r3
 2529 0028 BD46     		mov	sp, r7
 2530 002a 04B0     		add	sp, sp, #16
 2531              		@ sp needed
 2532 002c 80BD     		pop	{r7, pc}
 2533              	.L229:
 2534 002e C046     		.align	2
 2535              	.L228:
 2536 0030 04000000 		.word	cySysTimerCallback
 2537              		.cfi_endproc
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 107


 2538              	.LFE44:
 2539              		.size	CySysTimerGetInterruptCallback, .-CySysTimerGetInterruptCallback
 2540              		.section	.text.CySysTimerEnableIsr,"ax",%progbits
 2541              		.align	2
 2542              		.global	CySysTimerEnableIsr
 2543              		.code	16
 2544              		.thumb_func
 2545              		.type	CySysTimerEnableIsr, %function
 2546              	CySysTimerEnableIsr:
 2547              	.LFB45:
2815:Generated_Source\PSoC4/CyLFClk.c **** 
2816:Generated_Source\PSoC4/CyLFClk.c **** 
2817:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2818:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnableIsr
2819:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2820:Generated_Source\PSoC4/CyLFClk.c ****     *
2821:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the ISR callback servicing for the particular Timer counter
2822:Generated_Source\PSoC4/CyLFClk.c ****     *
2823:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2824:Generated_Source\PSoC4/CyLFClk.c ****     *
2825:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate Timer counter. For example value 1 
2826:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second Timer counter.
2827:Generated_Source\PSoC4/CyLFClk.c ****     *
2828:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2829:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnableIsr(uint32 counterNum)
2830:Generated_Source\PSoC4/CyLFClk.c ****     {
 2548              		.loc 2 2830 0
 2549              		.cfi_startproc
 2550 0000 80B5     		push	{r7, lr}
 2551              		.cfi_def_cfa_offset 8
 2552              		.cfi_offset 7, -8
 2553              		.cfi_offset 14, -4
 2554 0002 82B0     		sub	sp, sp, #8
 2555              		.cfi_def_cfa_offset 16
 2556 0004 00AF     		add	r7, sp, #0
 2557              		.cfi_def_cfa_register 7
 2558 0006 7860     		str	r0, [r7, #4]
2831:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
 2559              		.loc 2 2831 0
 2560 0008 7B68     		ldr	r3, [r7, #4]
 2561 000a 022B     		cmp	r3, #2
 2562 000c 13D8     		bhi	.L231
2832:Generated_Source\PSoC4/CyLFClk.c ****         {
2833:Generated_Source\PSoC4/CyLFClk.c ****             disableTimerServicedIsr &= ~counterTimerIntMaskTbl[counterNum];
 2563              		.loc 2 2833 0
 2564 000e 0D4B     		ldr	r3, .L233
 2565 0010 7A68     		ldr	r2, [r7, #4]
 2566 0012 9200     		lsl	r2, r2, #2
 2567 0014 D358     		ldr	r3, [r2, r3]
 2568 0016 DA43     		mvn	r2, r3
 2569 0018 0B4B     		ldr	r3, .L233+4
 2570 001a 1B68     		ldr	r3, [r3]
 2571 001c 1A40     		and	r2, r3
 2572 001e 0A4B     		ldr	r3, .L233+4
 2573 0020 1A60     		str	r2, [r3]
2834:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask |= counterTimerIntMaskTbl[counterNum];
 2574              		.loc 2 2834 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 108


 2575 0022 084B     		ldr	r3, .L233
 2576 0024 7A68     		ldr	r2, [r7, #4]
 2577 0026 9200     		lsl	r2, r2, #2
 2578 0028 D258     		ldr	r2, [r2, r3]
 2579 002a 084B     		ldr	r3, .L233+8
 2580 002c 1B68     		ldr	r3, [r3]
 2581 002e 1A43     		orr	r2, r3
 2582 0030 064B     		ldr	r3, .L233+8
 2583 0032 1A60     		str	r2, [r3]
 2584 0034 02E0     		b	.L230
 2585              	.L231:
2835:Generated_Source\PSoC4/CyLFClk.c ****         }
2836:Generated_Source\PSoC4/CyLFClk.c ****         else
2837:Generated_Source\PSoC4/CyLFClk.c ****         {
2838:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2586              		.loc 2 2838 0 discriminator 1
 2587 0036 0020     		mov	r0, #0
 2588 0038 FFF7FEFF 		bl	CyHalt
 2589              	.L230:
2839:Generated_Source\PSoC4/CyLFClk.c ****         }
2840:Generated_Source\PSoC4/CyLFClk.c ****     }
 2590              		.loc 2 2840 0
 2591 003c BD46     		mov	sp, r7
 2592 003e 02B0     		add	sp, sp, #8
 2593              		@ sp needed
 2594 0040 80BD     		pop	{r7, pc}
 2595              	.L234:
 2596 0042 C046     		.align	2
 2597              	.L233:
 2598 0044 00000000 		.word	counterTimerIntMaskTbl
 2599 0048 00000000 		.word	disableTimerServicedIsr
 2600 004c 00000000 		.word	timerIsrMask
 2601              		.cfi_endproc
 2602              	.LFE45:
 2603              		.size	CySysTimerEnableIsr, .-CySysTimerEnableIsr
 2604              		.section	.text.CySysTimerDisableIsr,"ax",%progbits
 2605              		.align	2
 2606              		.global	CySysTimerDisableIsr
 2607              		.code	16
 2608              		.thumb_func
 2609              		.type	CySysTimerDisableIsr, %function
 2610              	CySysTimerDisableIsr:
 2611              	.LFB46:
2841:Generated_Source\PSoC4/CyLFClk.c **** 
2842:Generated_Source\PSoC4/CyLFClk.c **** 
2843:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2844:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisableIsr
2845:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2846:Generated_Source\PSoC4/CyLFClk.c ****     *
2847:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the ISR callback servicing for the particular Timer counter
2848:Generated_Source\PSoC4/CyLFClk.c ****     *
2849:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2850:Generated_Source\PSoC4/CyLFClk.c ****     *
2851:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2852:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisableIsr(uint32 counterNum)
2853:Generated_Source\PSoC4/CyLFClk.c ****     {
 2612              		.loc 2 2853 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 109


 2613              		.cfi_startproc
 2614 0000 80B5     		push	{r7, lr}
 2615              		.cfi_def_cfa_offset 8
 2616              		.cfi_offset 7, -8
 2617              		.cfi_offset 14, -4
 2618 0002 82B0     		sub	sp, sp, #8
 2619              		.cfi_def_cfa_offset 16
 2620 0004 00AF     		add	r7, sp, #0
 2621              		.cfi_def_cfa_register 7
 2622 0006 7860     		str	r0, [r7, #4]
2854:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
 2623              		.loc 2 2854 0
 2624 0008 7B68     		ldr	r3, [r7, #4]
 2625 000a 022B     		cmp	r3, #2
 2626 000c 0AD8     		bhi	.L236
2855:Generated_Source\PSoC4/CyLFClk.c ****         {
2856:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask &= ~counterTimerIntMaskTbl[counterNum];
 2627              		.loc 2 2856 0
 2628 000e 084B     		ldr	r3, .L238
 2629 0010 7A68     		ldr	r2, [r7, #4]
 2630 0012 9200     		lsl	r2, r2, #2
 2631 0014 D358     		ldr	r3, [r2, r3]
 2632 0016 DA43     		mvn	r2, r3
 2633 0018 064B     		ldr	r3, .L238+4
 2634 001a 1B68     		ldr	r3, [r3]
 2635 001c 1A40     		and	r2, r3
 2636 001e 054B     		ldr	r3, .L238+4
 2637 0020 1A60     		str	r2, [r3]
 2638 0022 02E0     		b	.L235
 2639              	.L236:
2857:Generated_Source\PSoC4/CyLFClk.c ****         }
2858:Generated_Source\PSoC4/CyLFClk.c ****         else
2859:Generated_Source\PSoC4/CyLFClk.c ****         {
2860:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2640              		.loc 2 2860 0 discriminator 1
 2641 0024 0020     		mov	r0, #0
 2642 0026 FFF7FEFF 		bl	CyHalt
 2643              	.L235:
2861:Generated_Source\PSoC4/CyLFClk.c ****         }
2862:Generated_Source\PSoC4/CyLFClk.c ****     }
 2644              		.loc 2 2862 0
 2645 002a BD46     		mov	sp, r7
 2646 002c 02B0     		add	sp, sp, #8
 2647              		@ sp needed
 2648 002e 80BD     		pop	{r7, pc}
 2649              	.L239:
 2650              		.align	2
 2651              	.L238:
 2652 0030 00000000 		.word	counterTimerIntMaskTbl
 2653 0034 00000000 		.word	timerIsrMask
 2654              		.cfi_endproc
 2655              	.LFE46:
 2656              		.size	CySysTimerDisableIsr, .-CySysTimerDisableIsr
 2657              		.section	.text.CySysTimerIsr,"ax",%progbits
 2658              		.align	2
 2659              		.global	CySysTimerIsr
 2660              		.code	16
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 110


 2661              		.thumb_func
 2662              		.type	CySysTimerIsr, %function
 2663              	CySysTimerIsr:
 2664              	.LFB47:
2863:Generated_Source\PSoC4/CyLFClk.c **** 
2864:Generated_Source\PSoC4/CyLFClk.c **** 
2865:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2866:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerIsr
2867:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2868:Generated_Source\PSoC4/CyLFClk.c ****     *
2869:Generated_Source\PSoC4/CyLFClk.c ****     * \brief This is the handler of the DeepSleep Timer interrupt in CPU NVIC.
2870:Generated_Source\PSoC4/CyLFClk.c ****     *
2871:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which Timer triggered in the interrupt and calls the 
2872:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
2873:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() API.
2874:Generated_Source\PSoC4/CyLFClk.c ****     *
2875:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
2876:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
2877:Generated_Source\PSoC4/CyLFClk.c ****     *
2878:Generated_Source\PSoC4/CyLFClk.c ****     * \details This function clears the DeepSleep Timer interrupt every time when 
2879:Generated_Source\PSoC4/CyLFClk.c ****     * it is called.
2880:Generated_Source\PSoC4/CyLFClk.c ****     *
2881:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2882:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerIsr(void)
2883:Generated_Source\PSoC4/CyLFClk.c ****     {
 2665              		.loc 2 2883 0
 2666              		.cfi_startproc
 2667 0000 80B5     		push	{r7, lr}
 2668              		.cfi_def_cfa_offset 8
 2669              		.cfi_offset 7, -8
 2670              		.cfi_offset 14, -4
 2671 0002 00AF     		add	r7, sp, #0
 2672              		.cfi_def_cfa_register 7
2884:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER0_INT & CY_SYS_WCO_WDT_CONTROL_REG))
 2673              		.loc 2 2884 0
 2674 0004 334B     		ldr	r3, .L247
 2675 0006 1B68     		ldr	r3, [r3]
 2676 0008 0422     		mov	r2, #4
 2677 000a 1340     		and	r3, r2
 2678 000c 1FD0     		beq	.L241
2885:Generated_Source\PSoC4/CyLFClk.c ****         {
2886:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER0_INT & timerIsrMask))
 2679              		.loc 2 2886 0
 2680 000e 324B     		ldr	r3, .L247+4
 2681 0010 1B68     		ldr	r3, [r3]
 2682 0012 0422     		mov	r2, #4
 2683 0014 1340     		and	r3, r2
 2684 0016 17D0     		beq	.L242
2887:Generated_Source\PSoC4/CyLFClk.c ****             {
2888:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER0_INT);
 2685              		.loc 2 2888 0
 2686 0018 304B     		ldr	r3, .L247+8
 2687 001a 1B68     		ldr	r3, [r3]
 2688 001c 0422     		mov	r2, #4
 2689 001e 1340     		and	r3, r2
 2690 0020 DA43     		mvn	r2, r3
 2691 0022 2D4B     		ldr	r3, .L247+4
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 111


 2692 0024 1B68     		ldr	r3, [r3]
 2693 0026 1A40     		and	r2, r3
 2694 0028 2B4B     		ldr	r3, .L247+4
 2695 002a 1A60     		str	r2, [r3]
2889:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER0_INT;
 2696              		.loc 2 2889 0
 2697 002c 2B4B     		ldr	r3, .L247+8
 2698 002e 1B68     		ldr	r3, [r3]
 2699 0030 0422     		mov	r2, #4
 2700 0032 9343     		bic	r3, r2
 2701 0034 1A1C     		mov	r2, r3
 2702 0036 294B     		ldr	r3, .L247+8
 2703 0038 1A60     		str	r2, [r3]
2890:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER0] != (void *) 0)
 2704              		.loc 2 2890 0
 2705 003a 294B     		ldr	r3, .L247+12
 2706 003c 1B68     		ldr	r3, [r3]
 2707 003e 002B     		cmp	r3, #0
 2708 0040 02D0     		beq	.L242
2891:Generated_Source\PSoC4/CyLFClk.c ****                 {
2892:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER0])();
 2709              		.loc 2 2892 0
 2710 0042 274B     		ldr	r3, .L247+12
 2711 0044 1B68     		ldr	r3, [r3]
 2712 0046 9847     		blx	r3
 2713              	.L242:
2893:Generated_Source\PSoC4/CyLFClk.c ****                 }
2894:Generated_Source\PSoC4/CyLFClk.c ****             }
2895:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER0_INT);
 2714              		.loc 2 2895 0
 2715 0048 0420     		mov	r0, #4
 2716 004a FFF7FEFF 		bl	CySysTimerClearInterrupt
 2717              	.L241:
2896:Generated_Source\PSoC4/CyLFClk.c ****         }
2897:Generated_Source\PSoC4/CyLFClk.c **** 
2898:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER1_INT & CY_SYS_WCO_WDT_CONTROL_REG))
 2718              		.loc 2 2898 0
 2719 004e 214B     		ldr	r3, .L247
 2720 0050 1A68     		ldr	r2, [r3]
 2721 0052 8023     		mov	r3, #128
 2722 0054 DB00     		lsl	r3, r3, #3
 2723 0056 1340     		and	r3, r2
 2724 0058 22D0     		beq	.L243
2899:Generated_Source\PSoC4/CyLFClk.c ****         {
2900:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER1_INT & timerIsrMask))
 2725              		.loc 2 2900 0
 2726 005a 1F4B     		ldr	r3, .L247+4
 2727 005c 1A68     		ldr	r2, [r3]
 2728 005e 8023     		mov	r3, #128
 2729 0060 DB00     		lsl	r3, r3, #3
 2730 0062 1340     		and	r3, r2
 2731 0064 17D0     		beq	.L244
2901:Generated_Source\PSoC4/CyLFClk.c ****             {
2902:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER1_INT);
 2732              		.loc 2 2902 0
 2733 0066 1D4B     		ldr	r3, .L247+8
 2734 0068 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 112


 2735 006a 8023     		mov	r3, #128
 2736 006c DB00     		lsl	r3, r3, #3
 2737 006e 1340     		and	r3, r2
 2738 0070 DA43     		mvn	r2, r3
 2739 0072 194B     		ldr	r3, .L247+4
 2740 0074 1B68     		ldr	r3, [r3]
 2741 0076 1A40     		and	r2, r3
 2742 0078 174B     		ldr	r3, .L247+4
 2743 007a 1A60     		str	r2, [r3]
2903:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER1_INT;
 2744              		.loc 2 2903 0
 2745 007c 174B     		ldr	r3, .L247+8
 2746 007e 1B68     		ldr	r3, [r3]
 2747 0080 184A     		ldr	r2, .L247+16
 2748 0082 1A40     		and	r2, r3
 2749 0084 154B     		ldr	r3, .L247+8
 2750 0086 1A60     		str	r2, [r3]
2904:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER1] != (void *) 0)
 2751              		.loc 2 2904 0
 2752 0088 154B     		ldr	r3, .L247+12
 2753 008a 5B68     		ldr	r3, [r3, #4]
 2754 008c 002B     		cmp	r3, #0
 2755 008e 02D0     		beq	.L244
2905:Generated_Source\PSoC4/CyLFClk.c ****                 {
2906:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER1])();
 2756              		.loc 2 2906 0
 2757 0090 134B     		ldr	r3, .L247+12
 2758 0092 5B68     		ldr	r3, [r3, #4]
 2759 0094 9847     		blx	r3
 2760              	.L244:
2907:Generated_Source\PSoC4/CyLFClk.c ****                 }
2908:Generated_Source\PSoC4/CyLFClk.c ****             }
2909:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER1_INT);
 2761              		.loc 2 2909 0
 2762 0096 8023     		mov	r3, #128
 2763 0098 DB00     		lsl	r3, r3, #3
 2764 009a 181C     		mov	r0, r3
 2765 009c FFF7FEFF 		bl	CySysTimerClearInterrupt
 2766              	.L243:
2910:Generated_Source\PSoC4/CyLFClk.c ****         }
2911:Generated_Source\PSoC4/CyLFClk.c **** 
2912:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER2_INT & CY_SYS_WCO_WDT_CONTROL_REG))
 2767              		.loc 2 2912 0
 2768 00a0 0C4B     		ldr	r3, .L247
 2769 00a2 1A68     		ldr	r2, [r3]
 2770 00a4 8023     		mov	r3, #128
 2771 00a6 DB02     		lsl	r3, r3, #11
 2772 00a8 1340     		and	r3, r2
 2773 00aa 11D0     		beq	.L240
2913:Generated_Source\PSoC4/CyLFClk.c ****         {
2914:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER2_INT & timerIsrMask))
 2774              		.loc 2 2914 0
 2775 00ac 0A4B     		ldr	r3, .L247+4
 2776 00ae 1A68     		ldr	r2, [r3]
 2777 00b0 8023     		mov	r3, #128
 2778 00b2 DB02     		lsl	r3, r3, #11
 2779 00b4 1340     		and	r3, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 113


 2780 00b6 06D0     		beq	.L246
2915:Generated_Source\PSoC4/CyLFClk.c ****             {
2916:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER2] != (void *) 0)
 2781              		.loc 2 2916 0
 2782 00b8 094B     		ldr	r3, .L247+12
 2783 00ba 9B68     		ldr	r3, [r3, #8]
 2784 00bc 002B     		cmp	r3, #0
 2785 00be 02D0     		beq	.L246
2917:Generated_Source\PSoC4/CyLFClk.c ****                 {
2918:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER2])();
 2786              		.loc 2 2918 0
 2787 00c0 074B     		ldr	r3, .L247+12
 2788 00c2 9B68     		ldr	r3, [r3, #8]
 2789 00c4 9847     		blx	r3
 2790              	.L246:
2919:Generated_Source\PSoC4/CyLFClk.c ****                 }
2920:Generated_Source\PSoC4/CyLFClk.c ****             }
2921:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER2_INT);
 2791              		.loc 2 2921 0
 2792 00c6 8023     		mov	r3, #128
 2793 00c8 DB02     		lsl	r3, r3, #11
 2794 00ca 181C     		mov	r0, r3
 2795 00cc FFF7FEFF 		bl	CySysTimerClearInterrupt
 2796              	.L240:
2922:Generated_Source\PSoC4/CyLFClk.c ****         }
2923:Generated_Source\PSoC4/CyLFClk.c ****     }
 2797              		.loc 2 2923 0
 2798 00d0 BD46     		mov	sp, r7
 2799              		@ sp needed
 2800 00d2 80BD     		pop	{r7, pc}
 2801              	.L248:
 2802              		.align	2
 2803              	.L247:
 2804 00d4 10020640 		.word	1074135568
 2805 00d8 00000000 		.word	timerIsrMask
 2806 00dc 00000000 		.word	disableTimerServicedIsr
 2807 00e0 04000000 		.word	cySysTimerCallback
 2808 00e4 FFFBFFFF 		.word	-1025
 2809              		.cfi_endproc
 2810              	.LFE47:
 2811              		.size	CySysTimerIsr, .-CySysTimerIsr
 2812              		.section	.text.CySysTimerResetCounters,"ax",%progbits
 2813              		.align	2
 2814              		.global	CySysTimerResetCounters
 2815              		.code	16
 2816              		.thumb_func
 2817              		.type	CySysTimerResetCounters, %function
 2818              	CySysTimerResetCounters:
 2819              	.LFB48:
2924:Generated_Source\PSoC4/CyLFClk.c **** 
2925:Generated_Source\PSoC4/CyLFClk.c **** 
2926:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2927:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerResetCounters
2928:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2929:Generated_Source\PSoC4/CyLFClk.c ****     *
2930:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Resets all the Timer counters set in the mask.
2931:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 114


2932:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
2933:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER0_RESET - Reset the Counter 0<br>
2934:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_RESET - Reset the Counter 1<br>
2935:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_RESET - Reset the Counter 2
2936:Generated_Source\PSoC4/CyLFClk.c ****     *
2937:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2938:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
2939:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 DeepSleep Timer source-cycles. DeepSleep Timer source must be 
2940:Generated_Source\PSoC4/CyLFClk.c ****     * enabled. Otherwise, the function will never exit.
2941:Generated_Source\PSoC4/CyLFClk.c ****     *
2942:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2943:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerResetCounters(uint32 countersMask)
2944:Generated_Source\PSoC4/CyLFClk.c ****     {
 2820              		.loc 2 2944 0
 2821              		.cfi_startproc
 2822 0000 80B5     		push	{r7, lr}
 2823              		.cfi_def_cfa_offset 8
 2824              		.cfi_offset 7, -8
 2825              		.cfi_offset 14, -4
 2826 0002 82B0     		sub	sp, sp, #8
 2827              		.cfi_def_cfa_offset 16
 2828 0004 00AF     		add	r7, sp, #0
 2829              		.cfi_def_cfa_register 7
 2830 0006 7860     		str	r0, [r7, #4]
2945:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new Timer reset value */
2946:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= (countersMask & CY_SYS_TIMER_RESET);
 2831              		.loc 2 2946 0
 2832 0008 084B     		ldr	r3, .L251
 2833 000a 084A     		ldr	r2, .L251
 2834 000c 1168     		ldr	r1, [r2]
 2835 000e 7A68     		ldr	r2, [r7, #4]
 2836 0010 0748     		ldr	r0, .L251+4
 2837 0012 0240     		and	r2, r0
 2838 0014 0A43     		orr	r2, r1
 2839 0016 1A60     		str	r2, [r3]
2947:Generated_Source\PSoC4/CyLFClk.c **** 
2948:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WCO_WDT_CONTROL_REG & CY_SYS_TIMER_RESET))
 2840              		.loc 2 2948 0
 2841 0018 C046     		mov	r8, r8
 2842              	.L250:
 2843              		.loc 2 2948 0 is_stmt 0 discriminator 1
 2844 001a 044B     		ldr	r3, .L251
 2845 001c 1B68     		ldr	r3, [r3]
 2846 001e 044A     		ldr	r2, .L251+4
 2847 0020 1340     		and	r3, r2
 2848 0022 FAD1     		bne	.L250
2949:Generated_Source\PSoC4/CyLFClk.c ****         {
2950:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
2951:Generated_Source\PSoC4/CyLFClk.c ****         }
2952:Generated_Source\PSoC4/CyLFClk.c ****     }
 2849              		.loc 2 2952 0 is_stmt 1
 2850 0024 BD46     		mov	sp, r7
 2851 0026 02B0     		add	sp, sp, #8
 2852              		@ sp needed
 2853 0028 80BD     		pop	{r7, pc}
 2854              	.L252:
 2855 002a C046     		.align	2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 115


 2856              	.L251:
 2857 002c 10020640 		.word	1074135568
 2858 0030 08080800 		.word	526344
 2859              		.cfi_endproc
 2860              	.LFE48:
 2861              		.size	CySysTimerResetCounters, .-CySysTimerResetCounters
 2862              		.section	.text.CySysTimerDelay,"ax",%progbits
 2863              		.align	2
 2864              		.global	CySysTimerDelay
 2865              		.code	16
 2866              		.thumb_func
 2867              		.type	CySysTimerDelay, %function
 2868              	CySysTimerDelay:
 2869              	.LFB49:
2953:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
2954:Generated_Source\PSoC4/CyLFClk.c **** 
2955:Generated_Source\PSoC4/CyLFClk.c **** 
2956:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 || (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT))
2957:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2958:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelay
2959:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2960:Generated_Source\PSoC4/CyLFClk.c ****     *
2961:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2962:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified in the LFCLK clock ticks.
2963:Generated_Source\PSoC4/CyLFClk.c ****     *
2964:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / 
2965:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PRoC BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to 
2966:Generated_Source\PSoC4/CyLFClk.c ****     * use WDT. Also this API is available to use for PSoC4100S and / PSoC Analog 
2967:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices to use DeepSleep Timers.
2968:Generated_Source\PSoC4/CyLFClk.c ****     *
2969:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
2970:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
2971:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
2972:Generated_Source\PSoC4/CyLFClk.c ****     *
2973:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
2974:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
2975:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
2976:Generated_Source\PSoC4/CyLFClk.c ****     *
2977:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
2978:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
2979:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
2980:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
2981:Generated_Source\PSoC4/CyLFClk.c ****     *
2982:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
2983:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
2984:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
2985:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
2986:Generated_Source\PSoC4/CyLFClk.c ****     * counter or DeepSleep Timer counter.
2987:Generated_Source\PSoC4/CyLFClk.c ****     *
2988:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
2989:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
2990:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
2991:Generated_Source\PSoC4/CyLFClk.c ****     *
2992:Generated_Source\PSoC4/CyLFClk.c ****     * Or the corresponding DeepSleep Timer counter should be configured to match the
2993:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
2994:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
2995:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 116


2996:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
2997:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
2998:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
2999:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3000:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3001:Generated_Source\PSoC4/CyLFClk.c ****     *
3002:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3003:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3004:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3005:Generated_Source\PSoC4/CyLFClk.c ****     *
3006:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3007:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3008:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3009:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3010:Generated_Source\PSoC4/CyLFClk.c ****     *
3011:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3012:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() for DeepSleep Timer function to register 
3013:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3014:Generated_Source\PSoC4/CyLFClk.c ****     *
3015:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3016:Generated_Source\PSoC4/CyLFClk.c ****     *
3017:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the counter 
3018:Generated_Source\PSoC4/CyLFClk.c ****     * (Timer0 or Timer1).
3019:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType
3020:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_WAIT - "WAIT" mode. <br>
3021:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3022:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks 
3023:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3024:Generated_Source\PSoC4/CyLFClk.c ****     *
3025:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3026:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3027:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT or DeepSleep Timer counter. Servicing of this ISR 
3028:Generated_Source\PSoC4/CyLFClk.c ****     * callback will be disabled after the expiration of the delay time.
3029:Generated_Source\PSoC4/CyLFClk.c ****     *
3030:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3031:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay)
3032:Generated_Source\PSoC4/CyLFClk.c ****     {
 2870              		.loc 2 3032 0
 2871              		.cfi_startproc
 2872 0000 80B5     		push	{r7, lr}
 2873              		.cfi_def_cfa_offset 8
 2874              		.cfi_offset 7, -8
 2875              		.cfi_offset 14, -4
 2876 0002 86B0     		sub	sp, sp, #24
 2877              		.cfi_def_cfa_offset 32
 2878 0004 00AF     		add	r7, sp, #0
 2879              		.cfi_def_cfa_register 7
 2880 0006 F860     		str	r0, [r7, #12]
 2881 0008 7A60     		str	r2, [r7, #4]
 2882 000a 0B23     		mov	r3, #11
 2883 000c FB18     		add	r3, r7, r3
 2884 000e 0A1C     		add	r2, r1, #0
 2885 0010 1A70     		strb	r2, [r3]
3033:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
3034:Generated_Source\PSoC4/CyLFClk.c ****         uint32 matchValue;
3035:Generated_Source\PSoC4/CyLFClk.c **** 
3036:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 117


3037:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
3038:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
3039:Generated_Source\PSoC4/CyLFClk.c ****             {
3040:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysWdtGetCount(counterNum);
3041:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
3042:Generated_Source\PSoC4/CyLFClk.c **** 
3043:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
3044:Generated_Source\PSoC4/CyLFClk.c ****             }
3045:Generated_Source\PSoC4/CyLFClk.c ****             else
3046:Generated_Source\PSoC4/CyLFClk.c ****             {
3047:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3048:Generated_Source\PSoC4/CyLFClk.c ****             }
3049:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
3050:Generated_Source\PSoC4/CyLFClk.c **** 
3051:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3052:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) && 
 2886              		.loc 2 3052 0
 2887 0012 FB68     		ldr	r3, [r7, #12]
 2888 0014 012B     		cmp	r3, #1
 2889 0016 20D8     		bhi	.L254
 2890              		.loc 2 3052 0 is_stmt 0 discriminator 1
 2891 0018 FB68     		ldr	r3, [r7, #12]
 2892 001a 181C     		mov	r0, r3
 2893 001c FFF7FEFF 		bl	CySysTimerGetClearOnMatch
 2894 0020 031E     		sub	r3, r0, #0
 2895 0022 1AD1     		bne	.L254
 2896              		.loc 2 3052 0 discriminator 2
 2897 0024 7B68     		ldr	r3, [r7, #4]
 2898 0026 104A     		ldr	r2, .L256
 2899 0028 9342     		cmp	r3, r2
 2900 002a 16D8     		bhi	.L254
3053:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
3054:Generated_Source\PSoC4/CyLFClk.c ****             {
3055:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysTimerGetCount(counterNum);
 2901              		.loc 2 3055 0 is_stmt 1
 2902 002c FB68     		ldr	r3, [r7, #12]
 2903 002e 181C     		mov	r0, r3
 2904 0030 FFF7FEFF 		bl	CySysTimerGetCount
 2905 0034 031C     		mov	r3, r0
 2906 0036 7B61     		str	r3, [r7, #20]
3056:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
 2907              		.loc 2 3056 0
 2908 0038 7A69     		ldr	r2, [r7, #20]
 2909 003a 7B68     		ldr	r3, [r7, #4]
 2910 003c D318     		add	r3, r2, r3
 2911 003e 1B04     		lsl	r3, r3, #16
 2912 0040 1B0C     		lsr	r3, r3, #16
 2913 0042 3B61     		str	r3, [r7, #16]
3057:Generated_Source\PSoC4/CyLFClk.c **** 
3058:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
 2914              		.loc 2 3058 0
 2915 0044 F968     		ldr	r1, [r7, #12]
 2916 0046 0B23     		mov	r3, #11
 2917 0048 FB18     		add	r3, r7, r3
 2918 004a 1A78     		ldrb	r2, [r3]
 2919 004c 3B69     		ldr	r3, [r7, #16]
 2920 004e 081C     		mov	r0, r1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 118


 2921 0050 111C     		mov	r1, r2
 2922 0052 1A1C     		mov	r2, r3
 2923 0054 FFF7FEFF 		bl	CySysTimerDelayUntilMatch
 2924 0058 02E0     		b	.L253
 2925              	.L254:
3059:Generated_Source\PSoC4/CyLFClk.c ****             }
3060:Generated_Source\PSoC4/CyLFClk.c ****             else
3061:Generated_Source\PSoC4/CyLFClk.c ****             {
3062:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 2926              		.loc 2 3062 0 discriminator 1
 2927 005a 0020     		mov	r0, #0
 2928 005c FFF7FEFF 		bl	CyHalt
 2929              	.L253:
3063:Generated_Source\PSoC4/CyLFClk.c ****             }
3064:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN) */
3065:Generated_Source\PSoC4/CyLFClk.c ****     }
 2930              		.loc 2 3065 0
 2931 0060 BD46     		mov	sp, r7
 2932 0062 06B0     		add	sp, sp, #24
 2933              		@ sp needed
 2934 0064 80BD     		pop	{r7, pc}
 2935              	.L257:
 2936 0066 C046     		.align	2
 2937              	.L256:
 2938 0068 FFFF0000 		.word	65535
 2939              		.cfi_endproc
 2940              	.LFE49:
 2941              		.size	CySysTimerDelay, .-CySysTimerDelay
 2942              		.section	.text.CySysTimerDelayUntilMatch,"ax",%progbits
 2943              		.align	2
 2944              		.global	CySysTimerDelayUntilMatch
 2945              		.code	16
 2946              		.thumb_func
 2947              		.type	CySysTimerDelayUntilMatch, %function
 2948              	CySysTimerDelayUntilMatch:
 2949              	.LFB50:
3066:Generated_Source\PSoC4/CyLFClk.c **** 
3067:Generated_Source\PSoC4/CyLFClk.c **** 
3068:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
3069:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelayUntilMatch
3070:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
3071:Generated_Source\PSoC4/CyLFClk.c ****     *
3072:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
3073:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of WDT or DeepSleep
3074:Generated_Source\PSoC4/CyLFClk.c ****     * Timer clock source ticks between WDT or DeepSleep Timer current value and 
3075:Generated_Source\PSoC4/CyLFClk.c ****     * match" value.
3076:Generated_Source\PSoC4/CyLFClk.c ****     *
3077:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PRoC BLE / PSoC 4100 BLE /
3078:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to use WDT.
3079:Generated_Source\PSoC4/CyLFClk.c ****     * Also this API is available to use for PSoC4100S / Analog Coprocessor devices
3080:Generated_Source\PSoC4/CyLFClk.c ****     * to use DeepSleep Timers.
3081:Generated_Source\PSoC4/CyLFClk.c ****     * 
3082:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3083:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3084:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of LFCLK ticks
3085:Generated_Source\PSoC4/CyLFClk.c ****     * between the specified WDT counter's current value and the "match"
3086:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current WDT counter value can 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 119


3087:Generated_Source\PSoC4/CyLFClk.c ****     * be obtained using the CySysWdtGetCount() function.
3088:Generated_Source\PSoC4/CyLFClk.c ****     *
3089:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC4100 S and Analog Coprocessor devices:
3090:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of DeepSleep Timer 
3091:Generated_Source\PSoC4/CyLFClk.c ****     * input clock ticks for Timer0/Timer1 counter's current value and the "match" 
3092:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current DeepSleep Timer counter
3093:Generated_Source\PSoC4/CyLFClk.c ****     * value can be obtained using the CySysWdtGetCount() function.
3094:Generated_Source\PSoC4/CyLFClk.c ****     *
3095:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3096:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3097:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
3098:Generated_Source\PSoC4/CyLFClk.c ****     *
3099:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC PSoC 4100S / PSoC Analog Coprocessor devices:
3100:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
3101:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
3102:Generated_Source\PSoC4/CyLFClk.c ****     *
3103:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
3104:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
3105:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
3106:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
3107:Generated_Source\PSoC4/CyLFClk.c ****     *
3108:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
3109:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
3110:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
3111:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
3112:Generated_Source\PSoC4/CyLFClk.c ****     * or DeepSleep Timer counter.
3113:Generated_Source\PSoC4/CyLFClk.c ****     *
3114:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3115:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M/PSoC 4200M devices:
3116:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
3117:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
3118:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
3119:Generated_Source\PSoC4/CyLFClk.c ****     *
3120:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
3121:Generated_Source\PSoC4/CyLFClk.c ****     * Corresponding DeepSleep Timer counter should be configured to match the 
3122:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
3123:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
3124:Generated_Source\PSoC4/CyLFClk.c ****     *
3125:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
3126:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
3127:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
3128:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3129:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3130:Generated_Source\PSoC4/CyLFClk.c ****     *
3131:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3132:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3133:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3134:Generated_Source\PSoC4/CyLFClk.c ****     *
3135:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3136:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3137:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3138:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3139:Generated_Source\PSoC4/CyLFClk.c ****     *
3140:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3141:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetInterruptCallback() for DeepSleep Timer function to register 
3142:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3143:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 120


3144:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3145:Generated_Source\PSoC4/CyLFClk.c ****     *
3146:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the WDT or DeepSleep 
3147:Generated_Source\PSoC4/CyLFClk.c ****     * Timer.
3148:Generated_Source\PSoC4/CyLFClk.c ****     * counter (Timer0 or Timer1).
3149:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType  CY_SYS_TIMER_WAIT - "WAIT" mode.<br>
3150:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3151:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks
3152:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3153:Generated_Source\PSoC4/CyLFClk.c ****     *
3154:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3155:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3156:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT counter. Servicing of this ISR callback will be
3157:Generated_Source\PSoC4/CyLFClk.c ****     * disabled after the expiration of the delay time.
3158:Generated_Source\PSoC4/CyLFClk.c ****     *
3159:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3160:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32
3161:Generated_Source\PSoC4/CyLFClk.c ****     {
 2950              		.loc 2 3161 0
 2951              		.cfi_startproc
 2952 0000 80B5     		push	{r7, lr}
 2953              		.cfi_def_cfa_offset 8
 2954              		.cfi_offset 7, -8
 2955              		.cfi_offset 14, -4
 2956 0002 86B0     		sub	sp, sp, #24
 2957              		.cfi_def_cfa_offset 32
 2958 0004 00AF     		add	r7, sp, #0
 2959              		.cfi_def_cfa_register 7
 2960 0006 F860     		str	r0, [r7, #12]
 2961 0008 7A60     		str	r2, [r7, #4]
 2962 000a 0B23     		mov	r3, #11
 2963 000c FB18     		add	r3, r7, r3
 2964 000e 0A1C     		add	r2, r1, #0
 2965 0010 1A70     		strb	r2, [r3]
3162:Generated_Source\PSoC4/CyLFClk.c ****         uint32 tmpValue;
3163:Generated_Source\PSoC4/CyLFClk.c **** 
3164:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3165:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
3166:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (match <= CY_SYS_UINT16_MAX_VAL))
3167:Generated_Source\PSoC4/CyLFClk.c ****             {
3168:Generated_Source\PSoC4/CyLFClk.c ****                 if(delayType == CY_SYS_TIMER_WAIT)
3169:Generated_Source\PSoC4/CyLFClk.c ****                 {
3170:Generated_Source\PSoC4/CyLFClk.c ****                     do
3171:Generated_Source\PSoC4/CyLFClk.c ****                     {
3172:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
3173:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue > match);
3174:Generated_Source\PSoC4/CyLFClk.c **** 
3175:Generated_Source\PSoC4/CyLFClk.c ****                     do
3176:Generated_Source\PSoC4/CyLFClk.c ****                     {
3177:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
3178:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue < match);
3179:Generated_Source\PSoC4/CyLFClk.c ****                 }
3180:Generated_Source\PSoC4/CyLFClk.c ****                 else
3181:Generated_Source\PSoC4/CyLFClk.c ****                 {
3182:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = counterIntMaskTbl[counterNum];
3183:Generated_Source\PSoC4/CyLFClk.c ****                     CySysWdtSetMatch(counterNum, match);
3184:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 121


3185:Generated_Source\PSoC4/CyLFClk.c ****                     disableServicedIsr  |= tmpValue;
3186:Generated_Source\PSoC4/CyLFClk.c ****                     wdtIsrMask |= tmpValue;
3187:Generated_Source\PSoC4/CyLFClk.c ****                 }
3188:Generated_Source\PSoC4/CyLFClk.c ****             }
3189:Generated_Source\PSoC4/CyLFClk.c ****             else
3190:Generated_Source\PSoC4/CyLFClk.c ****             {
3191:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3192:Generated_Source\PSoC4/CyLFClk.c ****             }
3193:Generated_Source\PSoC4/CyLFClk.c **** 
3194:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */  
3195:Generated_Source\PSoC4/CyLFClk.c **** 
3196:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3197:Generated_Source\PSoC4/CyLFClk.c ****         if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) &&
 2966              		.loc 2 3197 0
 2967 0012 FB68     		ldr	r3, [r7, #12]
 2968 0014 012B     		cmp	r3, #1
 2969 0016 3BD8     		bhi	.L259
 2970              		.loc 2 3197 0 is_stmt 0 discriminator 1
 2971 0018 FB68     		ldr	r3, [r7, #12]
 2972 001a 181C     		mov	r0, r3
 2973 001c FFF7FEFF 		bl	CySysTimerGetClearOnMatch
 2974 0020 031E     		sub	r3, r0, #0
 2975 0022 35D1     		bne	.L259
 2976              		.loc 2 3197 0 discriminator 2
 2977 0024 7B68     		ldr	r3, [r7, #4]
 2978 0026 1D4A     		ldr	r2, .L265
 2979 0028 9342     		cmp	r3, r2
 2980 002a 31D8     		bhi	.L259
3198:Generated_Source\PSoC4/CyLFClk.c ****                                                         (match <= CY_SYS_UINT16_MAX_VAL))
3199:Generated_Source\PSoC4/CyLFClk.c ****         {
3200:Generated_Source\PSoC4/CyLFClk.c ****             if(delayType == CY_SYS_TIMER_WAIT)
 2981              		.loc 2 3200 0 is_stmt 1
 2982 002c 0B23     		mov	r3, #11
 2983 002e FB18     		add	r3, r7, r3
 2984 0030 1B78     		ldrb	r3, [r3]
 2985 0032 002B     		cmp	r3, #0
 2986 0034 14D1     		bne	.L260
 2987              	.L261:
3201:Generated_Source\PSoC4/CyLFClk.c ****             {
3202:Generated_Source\PSoC4/CyLFClk.c ****                 do
3203:Generated_Source\PSoC4/CyLFClk.c ****                 {
3204:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
 2988              		.loc 2 3204 0 discriminator 1
 2989 0036 FB68     		ldr	r3, [r7, #12]
 2990 0038 181C     		mov	r0, r3
 2991 003a FFF7FEFF 		bl	CySysTimerGetCount
 2992 003e 031C     		mov	r3, r0
 2993 0040 7B61     		str	r3, [r7, #20]
3205:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue > match);
 2994              		.loc 2 3205 0 discriminator 1
 2995 0042 7A69     		ldr	r2, [r7, #20]
 2996 0044 7B68     		ldr	r3, [r7, #4]
 2997 0046 9A42     		cmp	r2, r3
 2998 0048 F5D8     		bhi	.L261
 2999              	.L262:
3206:Generated_Source\PSoC4/CyLFClk.c **** 
3207:Generated_Source\PSoC4/CyLFClk.c ****                 do
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 122


3208:Generated_Source\PSoC4/CyLFClk.c ****                 {
3209:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
 3000              		.loc 2 3209 0 discriminator 1
 3001 004a FB68     		ldr	r3, [r7, #12]
 3002 004c 181C     		mov	r0, r3
 3003 004e FFF7FEFF 		bl	CySysTimerGetCount
 3004 0052 031C     		mov	r3, r0
 3005 0054 7B61     		str	r3, [r7, #20]
3210:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue < match);
 3006              		.loc 2 3210 0 discriminator 1
 3007 0056 7A69     		ldr	r2, [r7, #20]
 3008 0058 7B68     		ldr	r3, [r7, #4]
 3009 005a 9A42     		cmp	r2, r3
 3010 005c F5D3     		bcc	.L262
3200:Generated_Source\PSoC4/CyLFClk.c ****             {
 3011              		.loc 2 3200 0
 3012 005e 1AE0     		b	.L258
 3013              	.L260:
3211:Generated_Source\PSoC4/CyLFClk.c ****             }
3212:Generated_Source\PSoC4/CyLFClk.c ****             else
3213:Generated_Source\PSoC4/CyLFClk.c ****             {
3214:Generated_Source\PSoC4/CyLFClk.c ****                 tmpValue = counterTimerIntMaskTbl[counterNum];
 3014              		.loc 2 3214 0
 3015 0060 0F4B     		ldr	r3, .L265+4
 3016 0062 FA68     		ldr	r2, [r7, #12]
 3017 0064 9200     		lsl	r2, r2, #2
 3018 0066 D358     		ldr	r3, [r2, r3]
 3019 0068 7B61     		str	r3, [r7, #20]
3215:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerSetMatch(counterNum, match);
 3020              		.loc 2 3215 0
 3021 006a FA68     		ldr	r2, [r7, #12]
 3022 006c 7B68     		ldr	r3, [r7, #4]
 3023 006e 101C     		mov	r0, r2
 3024 0070 191C     		mov	r1, r3
 3025 0072 FFF7FEFF 		bl	CySysTimerSetMatch
3216:Generated_Source\PSoC4/CyLFClk.c **** 
3217:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  |= tmpValue;
 3026              		.loc 2 3217 0
 3027 0076 0B4B     		ldr	r3, .L265+8
 3028 0078 1A68     		ldr	r2, [r3]
 3029 007a 7B69     		ldr	r3, [r7, #20]
 3030 007c 1A43     		orr	r2, r3
 3031 007e 094B     		ldr	r3, .L265+8
 3032 0080 1A60     		str	r2, [r3]
3218:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask |= tmpValue;
 3033              		.loc 2 3218 0
 3034 0082 094B     		ldr	r3, .L265+12
 3035 0084 1A68     		ldr	r2, [r3]
 3036 0086 7B69     		ldr	r3, [r7, #20]
 3037 0088 1A43     		orr	r2, r3
 3038 008a 074B     		ldr	r3, .L265+12
 3039 008c 1A60     		str	r2, [r3]
3200:Generated_Source\PSoC4/CyLFClk.c ****             {
 3040              		.loc 2 3200 0
 3041 008e 02E0     		b	.L258
 3042              	.L259:
3219:Generated_Source\PSoC4/CyLFClk.c ****             }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 123


3220:Generated_Source\PSoC4/CyLFClk.c ****         }
3221:Generated_Source\PSoC4/CyLFClk.c ****         else
3222:Generated_Source\PSoC4/CyLFClk.c ****         {
3223:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 3043              		.loc 2 3223 0 discriminator 1
 3044 0090 0020     		mov	r0, #0
 3045 0092 FFF7FEFF 		bl	CyHalt
 3046              	.L258:
3224:Generated_Source\PSoC4/CyLFClk.c ****         }
3225:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT) */
3226:Generated_Source\PSoC4/CyLFClk.c ****     }
 3047              		.loc 2 3226 0
 3048 0096 BD46     		mov	sp, r7
 3049 0098 06B0     		add	sp, sp, #24
 3050              		@ sp needed
 3051 009a 80BD     		pop	{r7, pc}
 3052              	.L266:
 3053              		.align	2
 3054              	.L265:
 3055 009c FFFF0000 		.word	65535
 3056 00a0 00000000 		.word	counterTimerIntMaskTbl
 3057 00a4 00000000 		.word	disableTimerServicedIsr
 3058 00a8 00000000 		.word	timerIsrMask
 3059              		.cfi_endproc
 3060              	.LFE50:
 3061              		.size	CySysTimerDelayUntilMatch, .-CySysTimerDelayUntilMatch
 3062              		.bss
 3063              		.align	2
 3064              	compensateRunningStatus.4775:
 3065 0014 00000000 		.space	4
 3066              		.text
 3067              	.Letext0:
 3068              		.file 3 "Generated_Source\\PSoC4\\cytypes.h"
 3069              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 3070              		.section	.debug_info,"",%progbits
 3071              	.Ldebug_info0:
 3072 0000 64090000 		.4byte	0x964
 3073 0004 0400     		.2byte	0x4
 3074 0006 00000000 		.4byte	.Ldebug_abbrev0
 3075 000a 04       		.byte	0x4
 3076 000b 01       		.uleb128 0x1
 3077 000c FB020000 		.4byte	.LASF108
 3078 0010 01       		.byte	0x1
 3079 0011 AC060000 		.4byte	.LASF109
 3080 0015 09060000 		.4byte	.LASF110
 3081 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3082 001d 00000000 		.4byte	0
 3083 0021 00000000 		.4byte	.Ldebug_line0
 3084 0025 02       		.uleb128 0x2
 3085 0026 01       		.byte	0x1
 3086 0027 06       		.byte	0x6
 3087 0028 D3000000 		.4byte	.LASF0
 3088 002c 02       		.uleb128 0x2
 3089 002d 01       		.byte	0x1
 3090 002e 08       		.byte	0x8
 3091 002f AB050000 		.4byte	.LASF1
 3092 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 124


 3093 0034 02       		.byte	0x2
 3094 0035 05       		.byte	0x5
 3095 0036 D7050000 		.4byte	.LASF2
 3096 003a 02       		.uleb128 0x2
 3097 003b 02       		.byte	0x2
 3098 003c 07       		.byte	0x7
 3099 003d C5030000 		.4byte	.LASF3
 3100 0041 02       		.uleb128 0x2
 3101 0042 04       		.byte	0x4
 3102 0043 05       		.byte	0x5
 3103 0044 4A010000 		.4byte	.LASF4
 3104 0048 02       		.uleb128 0x2
 3105 0049 04       		.byte	0x4
 3106 004a 07       		.byte	0x7
 3107 004b E9020000 		.4byte	.LASF5
 3108 004f 02       		.uleb128 0x2
 3109 0050 08       		.byte	0x8
 3110 0051 05       		.byte	0x5
 3111 0052 C5000000 		.4byte	.LASF6
 3112 0056 02       		.uleb128 0x2
 3113 0057 08       		.byte	0x8
 3114 0058 07       		.byte	0x7
 3115 0059 59000000 		.4byte	.LASF7
 3116 005d 03       		.uleb128 0x3
 3117 005e 04       		.byte	0x4
 3118 005f 05       		.byte	0x5
 3119 0060 696E7400 		.ascii	"int\000"
 3120 0064 02       		.uleb128 0x2
 3121 0065 04       		.byte	0x4
 3122 0066 07       		.byte	0x7
 3123 0067 90020000 		.4byte	.LASF8
 3124 006b 04       		.uleb128 0x4
 3125 006c 65010000 		.4byte	.LASF9
 3126 0070 03       		.byte	0x3
 3127 0071 B901     		.2byte	0x1b9
 3128 0073 2C000000 		.4byte	0x2c
 3129 0077 04       		.uleb128 0x4
 3130 0078 00000000 		.4byte	.LASF10
 3131 007c 03       		.byte	0x3
 3132 007d BA01     		.2byte	0x1ba
 3133 007f 3A000000 		.4byte	0x3a
 3134 0083 04       		.uleb128 0x4
 3135 0084 D7010000 		.4byte	.LASF11
 3136 0088 03       		.byte	0x3
 3137 0089 BB01     		.2byte	0x1bb
 3138 008b 48000000 		.4byte	0x48
 3139 008f 02       		.uleb128 0x2
 3140 0090 04       		.byte	0x4
 3141 0091 04       		.byte	0x4
 3142 0092 46050000 		.4byte	.LASF12
 3143 0096 02       		.uleb128 0x2
 3144 0097 08       		.byte	0x8
 3145 0098 04       		.byte	0x4
 3146 0099 72010000 		.4byte	.LASF13
 3147 009d 02       		.uleb128 0x2
 3148 009e 01       		.byte	0x1
 3149 009f 08       		.byte	0x8
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 125


 3150 00a0 1F070000 		.4byte	.LASF14
 3151 00a4 04       		.uleb128 0x4
 3152 00a5 F0070000 		.4byte	.LASF15
 3153 00a9 03       		.byte	0x3
 3154 00aa 5B02     		.2byte	0x25b
 3155 00ac 48000000 		.4byte	0x48
 3156 00b0 04       		.uleb128 0x4
 3157 00b1 5E040000 		.4byte	.LASF16
 3158 00b5 03       		.byte	0x3
 3159 00b6 6502     		.2byte	0x265
 3160 00b8 BC000000 		.4byte	0xbc
 3161 00bc 05       		.uleb128 0x5
 3162 00bd 83000000 		.4byte	0x83
 3163 00c1 06       		.uleb128 0x6
 3164 00c2 04       		.byte	0x4
 3165 00c3 C7000000 		.4byte	0xc7
 3166 00c7 07       		.uleb128 0x7
 3167 00c8 08       		.uleb128 0x8
 3168 00c9 01       		.byte	0x1
 3169 00ca 01       		.byte	0x1
 3170 00cb 1B       		.byte	0x1b
 3171 00cc DD000000 		.4byte	0xdd
 3172 00d0 09       		.uleb128 0x9
 3173 00d1 F1040000 		.4byte	.LASF17
 3174 00d5 00       		.sleb128 0
 3175 00d6 09       		.uleb128 0x9
 3176 00d7 40080000 		.4byte	.LASF18
 3177 00db 01       		.sleb128 1
 3178 00dc 00       		.byte	0
 3179 00dd 0A       		.uleb128 0xa
 3180 00de 29010000 		.4byte	.LASF19
 3181 00e2 01       		.byte	0x1
 3182 00e3 1E       		.byte	0x1e
 3183 00e4 C8000000 		.4byte	0xc8
 3184 00e8 0A       		.uleb128 0xa
 3185 00e9 1B010000 		.4byte	.LASF20
 3186 00ed 01       		.byte	0x1
 3187 00ee 58       		.byte	0x58
 3188 00ef C1000000 		.4byte	0xc1
 3189 00f3 0A       		.uleb128 0xa
 3190 00f4 36000000 		.4byte	.LASF21
 3191 00f8 01       		.byte	0x1
 3192 00f9 5C       		.byte	0x5c
 3193 00fa C1000000 		.4byte	0xc1
 3194 00fe 02       		.uleb128 0x2
 3195 00ff 04       		.byte	0x4
 3196 0100 07       		.byte	0x7
 3197 0101 A9040000 		.4byte	.LASF22
 3198 0105 0B       		.uleb128 0xb
 3199 0106 A9000000 		.4byte	.LASF111
 3200 010a 01       		.byte	0x1
 3201 010b 9002     		.2byte	0x290
 3202 010d 00000000 		.4byte	.LFB0
 3203 0111 48000000 		.4byte	.LFE0-.LFB0
 3204 0115 01       		.uleb128 0x1
 3205 0116 9C       		.byte	0x9c
 3206 0117 0C       		.uleb128 0xc
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 126


 3207 0118 31040000 		.4byte	.LASF23
 3208 011c 02       		.byte	0x2
 3209 011d 53       		.byte	0x53
 3210 011e 00000000 		.4byte	.LFB1
 3211 0122 1C000000 		.4byte	.LFE1-.LFB1
 3212 0126 01       		.uleb128 0x1
 3213 0127 9C       		.byte	0x9c
 3214 0128 0C       		.uleb128 0xc
 3215 0129 8B010000 		.4byte	.LASF24
 3216 012d 02       		.byte	0x2
 3217 012e 6C       		.byte	0x6c
 3218 012f 00000000 		.4byte	.LFB2
 3219 0133 18000000 		.4byte	.LFE2-.LFB2
 3220 0137 01       		.uleb128 0x1
 3221 0138 9C       		.byte	0x9c
 3222 0139 0C       		.uleb128 0xc
 3223 013a 7B060000 		.4byte	.LASF25
 3224 013e 02       		.byte	0x2
 3225 013f A8       		.byte	0xa8
 3226 0140 00000000 		.4byte	.LFB3
 3227 0144 40000000 		.4byte	.LFE3-.LFB3
 3228 0148 01       		.uleb128 0x1
 3229 0149 9C       		.byte	0x9c
 3230 014a 0C       		.uleb128 0xc
 3231 014b DE010000 		.4byte	.LASF26
 3232 014f 02       		.byte	0x2
 3233 0150 C9       		.byte	0xc9
 3234 0151 00000000 		.4byte	.LFB4
 3235 0155 30000000 		.4byte	.LFE4-.LFB4
 3236 0159 01       		.uleb128 0x1
 3237 015a 9C       		.byte	0x9c
 3238 015b 0D       		.uleb128 0xd
 3239 015c 2A080000 		.4byte	.LASF36
 3240 0160 02       		.byte	0x2
 3241 0161 0B01     		.2byte	0x10b
 3242 0163 A4000000 		.4byte	0xa4
 3243 0167 00000000 		.4byte	.LFB5
 3244 016b 58010000 		.4byte	.LFE5-.LFB5
 3245 016f 01       		.uleb128 0x1
 3246 0170 9C       		.byte	0x9c
 3247 0171 E2010000 		.4byte	0x1e2
 3248 0175 0E       		.uleb128 0xe
 3249 0176 DC020000 		.4byte	.LASF27
 3250 017a 02       		.byte	0x2
 3251 017b 0B01     		.2byte	0x10b
 3252 017d 83000000 		.4byte	0x83
 3253 0181 02       		.uleb128 0x2
 3254 0182 91       		.byte	0x91
 3255 0183 5C       		.sleb128 -36
 3256 0184 0E       		.uleb128 0xe
 3257 0185 79010000 		.4byte	.LASF28
 3258 0189 02       		.byte	0x2
 3259 018a 0B01     		.2byte	0x10b
 3260 018c E2010000 		.4byte	0x1e2
 3261 0190 02       		.uleb128 0x2
 3262 0191 91       		.byte	0x91
 3263 0192 58       		.sleb128 -40
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 127


 3264 0193 0F       		.uleb128 0xf
 3265 0194 9B010000 		.4byte	.LASF29
 3266 0198 02       		.byte	0x2
 3267 0199 0D01     		.2byte	0x10d
 3268 019b 83000000 		.4byte	0x83
 3269 019f 02       		.uleb128 0x2
 3270 01a0 91       		.byte	0x91
 3271 01a1 6C       		.sleb128 -20
 3272 01a2 0F       		.uleb128 0xf
 3273 01a3 7C070000 		.4byte	.LASF30
 3274 01a7 02       		.byte	0x2
 3275 01a8 0E01     		.2byte	0x10e
 3276 01aa 83000000 		.4byte	0x83
 3277 01ae 02       		.uleb128 0x2
 3278 01af 91       		.byte	0x91
 3279 01b0 60       		.sleb128 -32
 3280 01b1 0F       		.uleb128 0xf
 3281 01b2 B9050000 		.4byte	.LASF31
 3282 01b6 02       		.byte	0x2
 3283 01b7 0F01     		.2byte	0x10f
 3284 01b9 83000000 		.4byte	0x83
 3285 01bd 05       		.uleb128 0x5
 3286 01be 03       		.byte	0x3
 3287 01bf 14000000 		.4byte	compensateRunningStatus.4775
 3288 01c3 0F       		.uleb128 0xf
 3289 01c4 03050000 		.4byte	.LASF32
 3290 01c8 02       		.byte	0x2
 3291 01c9 1001     		.2byte	0x110
 3292 01cb 83000000 		.4byte	0x83
 3293 01cf 02       		.uleb128 0x2
 3294 01d0 91       		.byte	0x91
 3295 01d1 64       		.sleb128 -28
 3296 01d2 0F       		.uleb128 0xf
 3297 01d3 7B040000 		.4byte	.LASF33
 3298 01d7 02       		.byte	0x2
 3299 01d8 1101     		.2byte	0x111
 3300 01da A4000000 		.4byte	0xa4
 3301 01de 02       		.uleb128 0x2
 3302 01df 91       		.byte	0x91
 3303 01e0 68       		.sleb128 -24
 3304 01e1 00       		.byte	0
 3305 01e2 06       		.uleb128 0x6
 3306 01e3 04       		.byte	0x4
 3307 01e4 83000000 		.4byte	0x83
 3308 01e8 10       		.uleb128 0x10
 3309 01e9 91070000 		.4byte	.LASF34
 3310 01ed 02       		.byte	0x2
 3311 01ee 0303     		.2byte	0x303
 3312 01f0 00000000 		.4byte	.LFB6
 3313 01f4 20000000 		.4byte	.LFE6-.LFB6
 3314 01f8 01       		.uleb128 0x1
 3315 01f9 9C       		.byte	0x9c
 3316 01fa 10       		.uleb128 0x10
 3317 01fb F7060000 		.4byte	.LASF35
 3318 01ff 02       		.byte	0x2
 3319 0200 1503     		.2byte	0x315
 3320 0202 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 128


 3321 0206 20000000 		.4byte	.LFE7-.LFB7
 3322 020a 01       		.uleb128 0x1
 3323 020b 9C       		.byte	0x9c
 3324 020c 11       		.uleb128 0x11
 3325 020d 82000000 		.4byte	.LASF41
 3326 0211 02       		.byte	0x2
 3327 0212 3803     		.2byte	0x338
 3328 0214 83000000 		.4byte	0x83
 3329 0218 00000000 		.4byte	.LFB8
 3330 021c 1C000000 		.4byte	.LFE8-.LFB8
 3331 0220 01       		.uleb128 0x1
 3332 0221 9C       		.byte	0x9c
 3333 0222 0D       		.uleb128 0xd
 3334 0223 07070000 		.4byte	.LASF37
 3335 0227 02       		.byte	0x2
 3336 0228 5303     		.2byte	0x353
 3337 022a 83000000 		.4byte	0x83
 3338 022e 00000000 		.4byte	.LFB9
 3339 0232 34000000 		.4byte	.LFE9-.LFB9
 3340 0236 01       		.uleb128 0x1
 3341 0237 9C       		.byte	0x9c
 3342 0238 5B020000 		.4byte	0x25b
 3343 023c 0E       		.uleb128 0xe
 3344 023d 24070000 		.4byte	.LASF38
 3345 0241 02       		.byte	0x2
 3346 0242 5303     		.2byte	0x353
 3347 0244 83000000 		.4byte	0x83
 3348 0248 02       		.uleb128 0x2
 3349 0249 91       		.byte	0x91
 3350 024a 6C       		.sleb128 -20
 3351 024b 0F       		.uleb128 0xf
 3352 024c 4E040000 		.4byte	.LASF39
 3353 0250 02       		.byte	0x2
 3354 0251 5503     		.2byte	0x355
 3355 0253 83000000 		.4byte	0x83
 3356 0257 02       		.uleb128 0x2
 3357 0258 91       		.byte	0x91
 3358 0259 74       		.sleb128 -12
 3359 025a 00       		.byte	0
 3360 025b 12       		.uleb128 0x12
 3361 025c 8F040000 		.4byte	.LASF45
 3362 0260 02       		.byte	0x2
 3363 0261 9603     		.2byte	0x396
 3364 0263 00000000 		.4byte	.LFB10
 3365 0267 3C000000 		.4byte	.LFE10-.LFB10
 3366 026b 01       		.uleb128 0x1
 3367 026c 9C       		.byte	0x9c
 3368 026d 81020000 		.4byte	0x281
 3369 0271 0E       		.uleb128 0xe
 3370 0272 5C010000 		.4byte	.LASF40
 3371 0276 02       		.byte	0x2
 3372 0277 9603     		.2byte	0x396
 3373 0279 83000000 		.4byte	0x83
 3374 027d 02       		.uleb128 0x2
 3375 027e 91       		.byte	0x91
 3376 027f 74       		.sleb128 -12
 3377 0280 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 129


 3378 0281 11       		.uleb128 0x11
 3379 0282 D8030000 		.4byte	.LASF42
 3380 0286 02       		.byte	0x2
 3381 0287 7E07     		.2byte	0x77e
 3382 0289 83000000 		.4byte	0x83
 3383 028d 00000000 		.4byte	.LFB11
 3384 0291 24000000 		.4byte	.LFE11-.LFB11
 3385 0295 01       		.uleb128 0x1
 3386 0296 9C       		.byte	0x9c
 3387 0297 13       		.uleb128 0x13
 3388 0298 39020000 		.4byte	.LASF43
 3389 029c 02       		.byte	0x2
 3390 029d 9107     		.2byte	0x791
 3391 029f 00000000 		.4byte	.LFB12
 3392 02a3 14000000 		.4byte	.LFE12-.LFB12
 3393 02a7 01       		.uleb128 0x1
 3394 02a8 9C       		.byte	0x9c
 3395 02a9 13       		.uleb128 0x13
 3396 02aa F9050000 		.4byte	.LASF44
 3397 02ae 02       		.byte	0x2
 3398 02af A107     		.2byte	0x7a1
 3399 02b1 00000000 		.4byte	.LFB13
 3400 02b5 18000000 		.4byte	.LFE13-.LFB13
 3401 02b9 01       		.uleb128 0x1
 3402 02ba 9C       		.byte	0x9c
 3403 02bb 14       		.uleb128 0x14
 3404 02bc 13020000 		.4byte	.LASF46
 3405 02c0 02       		.byte	0x2
 3406 02c1 B107     		.2byte	0x7b1
 3407 02c3 00000000 		.4byte	.LFB14
 3408 02c7 2C000000 		.4byte	.LFE14-.LFB14
 3409 02cb 01       		.uleb128 0x1
 3410 02cc 9C       		.byte	0x9c
 3411 02cd E1020000 		.4byte	0x2e1
 3412 02d1 0E       		.uleb128 0xe
 3413 02d2 D6040000 		.4byte	.LASF47
 3414 02d6 02       		.byte	0x2
 3415 02d7 B107     		.2byte	0x7b1
 3416 02d9 83000000 		.4byte	0x83
 3417 02dd 02       		.uleb128 0x2
 3418 02de 91       		.byte	0x91
 3419 02df 74       		.sleb128 -12
 3420 02e0 00       		.byte	0
 3421 02e1 11       		.uleb128 0x11
 3422 02e2 B2040000 		.4byte	.LASF48
 3423 02e6 02       		.byte	0x2
 3424 02e7 C107     		.2byte	0x7c1
 3425 02e9 83000000 		.4byte	0x83
 3426 02ed 00000000 		.4byte	.LFB15
 3427 02f1 18000000 		.4byte	.LFE15-.LFB15
 3428 02f5 01       		.uleb128 0x1
 3429 02f6 9C       		.byte	0x9c
 3430 02f7 11       		.uleb128 0x11
 3431 02f8 29070000 		.4byte	.LASF49
 3432 02fc 02       		.byte	0x2
 3433 02fd D007     		.2byte	0x7d0
 3434 02ff 83000000 		.4byte	0x83
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 130


 3435 0303 00000000 		.4byte	.LFB16
 3436 0307 14000000 		.4byte	.LFE16-.LFB16
 3437 030b 01       		.uleb128 0x1
 3438 030c 9C       		.byte	0x9c
 3439 030d 14       		.uleb128 0x14
 3440 030e BA020000 		.4byte	.LASF50
 3441 0312 02       		.byte	0x2
 3442 0313 E407     		.2byte	0x7e4
 3443 0315 00000000 		.4byte	.LFB17
 3444 0319 34000000 		.4byte	.LFE17-.LFB17
 3445 031d 01       		.uleb128 0x1
 3446 031e 9C       		.byte	0x9c
 3447 031f 33030000 		.4byte	0x333
 3448 0323 0E       		.uleb128 0xe
 3449 0324 7E050000 		.4byte	.LASF51
 3450 0328 02       		.byte	0x2
 3451 0329 E407     		.2byte	0x7e4
 3452 032b 83000000 		.4byte	0x83
 3453 032f 02       		.uleb128 0x2
 3454 0330 91       		.byte	0x91
 3455 0331 74       		.sleb128 -12
 3456 0332 00       		.byte	0
 3457 0333 11       		.uleb128 0x11
 3458 0334 05010000 		.4byte	.LASF52
 3459 0338 02       		.byte	0x2
 3460 0339 F607     		.2byte	0x7f6
 3461 033b 83000000 		.4byte	0x83
 3462 033f 00000000 		.4byte	.LFB18
 3463 0343 1C000000 		.4byte	.LFE18-.LFB18
 3464 0347 01       		.uleb128 0x1
 3465 0348 9C       		.byte	0x9c
 3466 0349 13       		.uleb128 0x13
 3467 034a 2F050000 		.4byte	.LASF53
 3468 034e 02       		.byte	0x2
 3469 034f 0708     		.2byte	0x807
 3470 0351 00000000 		.4byte	.LFB19
 3471 0355 18000000 		.4byte	.LFE19-.LFB19
 3472 0359 01       		.uleb128 0x1
 3473 035a 9C       		.byte	0x9c
 3474 035b 13       		.uleb128 0x13
 3475 035c AF030000 		.4byte	.LASF54
 3476 0360 02       		.byte	0x2
 3477 0361 1608     		.2byte	0x816
 3478 0363 00000000 		.4byte	.LFB20
 3479 0367 18000000 		.4byte	.LFE20-.LFB20
 3480 036b 01       		.uleb128 0x1
 3481 036c 9C       		.byte	0x9c
 3482 036d 13       		.uleb128 0x13
 3483 036e 66050000 		.4byte	.LASF55
 3484 0372 02       		.byte	0x2
 3485 0373 2508     		.2byte	0x825
 3486 0375 00000000 		.4byte	.LFB21
 3487 0379 18000000 		.4byte	.LFE21-.LFB21
 3488 037d 01       		.uleb128 0x1
 3489 037e 9C       		.byte	0x9c
 3490 037f 15       		.uleb128 0x15
 3491 0380 48020000 		.4byte	.LASF56
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 131


 3492 0384 02       		.byte	0x2
 3493 0385 3708     		.2byte	0x837
 3494 0387 E8000000 		.4byte	0xe8
 3495 038b 00000000 		.4byte	.LFB22
 3496 038f 28000000 		.4byte	.LFE22-.LFB22
 3497 0393 01       		.uleb128 0x1
 3498 0394 9C       		.byte	0x9c
 3499 0395 B8030000 		.4byte	0x3b8
 3500 0399 0E       		.uleb128 0xe
 3501 039a ED000000 		.4byte	.LASF57
 3502 039e 02       		.byte	0x2
 3503 039f 3708     		.2byte	0x837
 3504 03a1 E8000000 		.4byte	0xe8
 3505 03a5 02       		.uleb128 0x2
 3506 03a6 91       		.byte	0x91
 3507 03a7 6C       		.sleb128 -20
 3508 03a8 0F       		.uleb128 0xf
 3509 03a9 06020000 		.4byte	.LASF58
 3510 03ad 02       		.byte	0x2
 3511 03ae 3908     		.2byte	0x839
 3512 03b0 E8000000 		.4byte	0xe8
 3513 03b4 02       		.uleb128 0x2
 3514 03b5 91       		.byte	0x91
 3515 03b6 74       		.sleb128 -12
 3516 03b7 00       		.byte	0
 3517 03b8 11       		.uleb128 0x11
 3518 03b9 F1030000 		.4byte	.LASF59
 3519 03bd 02       		.byte	0x2
 3520 03be 4C08     		.2byte	0x84c
 3521 03c0 E8000000 		.4byte	0xe8
 3522 03c4 00000000 		.4byte	.LFB23
 3523 03c8 14000000 		.4byte	.LFE23-.LFB23
 3524 03cc 01       		.uleb128 0x1
 3525 03cd 9C       		.byte	0x9c
 3526 03ce 10       		.uleb128 0x10
 3527 03cf 25040000 		.4byte	.LASF60
 3528 03d3 02       		.byte	0x2
 3529 03d4 6408     		.2byte	0x864
 3530 03d6 00000000 		.4byte	.LFB24
 3531 03da 20000000 		.4byte	.LFE24-.LFB24
 3532 03de 01       		.uleb128 0x1
 3533 03df 9C       		.byte	0x9c
 3534 03e0 16       		.uleb128 0x16
 3535 03e1 64040000 		.4byte	.LASF112
 3536 03e5 02       		.byte	0x2
 3537 03e6 8008     		.2byte	0x880
 3538 03e8 83000000 		.4byte	0x83
 3539 03ec 00000000 		.4byte	.LFB25
 3540 03f0 20000000 		.4byte	.LFE25-.LFB25
 3541 03f4 01       		.uleb128 0x1
 3542 03f5 9C       		.byte	0x9c
 3543 03f6 0A040000 		.4byte	0x40a
 3544 03fa 0F       		.uleb128 0xf
 3545 03fb 42040000 		.4byte	.LASF61
 3546 03ff 02       		.byte	0x2
 3547 0400 8208     		.2byte	0x882
 3548 0402 83000000 		.4byte	0x83
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 132


 3549 0406 02       		.uleb128 0x2
 3550 0407 91       		.byte	0x91
 3551 0408 74       		.sleb128 -12
 3552 0409 00       		.byte	0
 3553 040a 12       		.uleb128 0x12
 3554 040b E0060000 		.4byte	.LASF62
 3555 040f 02       		.byte	0x2
 3556 0410 A108     		.2byte	0x8a1
 3557 0412 00000000 		.4byte	.LFB26
 3558 0416 94000000 		.4byte	.LFE26-.LFB26
 3559 041a 01       		.uleb128 0x1
 3560 041b 9C       		.byte	0x9c
 3561 041c 3F040000 		.4byte	0x43f
 3562 0420 0E       		.uleb128 0xe
 3563 0421 88040000 		.4byte	.LASF63
 3564 0425 02       		.byte	0x2
 3565 0426 A108     		.2byte	0x8a1
 3566 0428 83000000 		.4byte	0x83
 3567 042c 02       		.uleb128 0x2
 3568 042d 91       		.byte	0x91
 3569 042e 64       		.sleb128 -28
 3570 042f 0F       		.uleb128 0xf
 3571 0430 F6000000 		.4byte	.LASF64
 3572 0434 02       		.byte	0x2
 3573 0435 A308     		.2byte	0x8a3
 3574 0437 6B000000 		.4byte	0x6b
 3575 043b 02       		.uleb128 0x2
 3576 043c 91       		.byte	0x91
 3577 043d 6F       		.sleb128 -17
 3578 043e 00       		.byte	0
 3579 043f 0D       		.uleb128 0xd
 3580 0440 60060000 		.4byte	.LASF65
 3581 0444 02       		.byte	0x2
 3582 0445 CD08     		.2byte	0x8cd
 3583 0447 83000000 		.4byte	0x83
 3584 044b 00000000 		.4byte	.LFB27
 3585 044f 30000000 		.4byte	.LFE27-.LFB27
 3586 0453 01       		.uleb128 0x1
 3587 0454 9C       		.byte	0x9c
 3588 0455 69040000 		.4byte	0x469
 3589 0459 0E       		.uleb128 0xe
 3590 045a 18000000 		.4byte	.LASF66
 3591 045e 02       		.byte	0x2
 3592 045f CD08     		.2byte	0x8cd
 3593 0461 83000000 		.4byte	0x83
 3594 0465 02       		.uleb128 0x2
 3595 0466 91       		.byte	0x91
 3596 0467 74       		.sleb128 -12
 3597 0468 00       		.byte	0
 3598 0469 12       		.uleb128 0x12
 3599 046a 1D050000 		.4byte	.LASF67
 3600 046e 02       		.byte	0x2
 3601 046f EA08     		.2byte	0x8ea
 3602 0471 00000000 		.4byte	.LFB28
 3603 0475 64000000 		.4byte	.LFE28-.LFB28
 3604 0479 01       		.uleb128 0x1
 3605 047a 9C       		.byte	0x9c
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 133


 3606 047b AD040000 		.4byte	0x4ad
 3607 047f 0E       		.uleb128 0xe
 3608 0480 18000000 		.4byte	.LASF66
 3609 0484 02       		.byte	0x2
 3610 0485 EA08     		.2byte	0x8ea
 3611 0487 83000000 		.4byte	0x83
 3612 048b 02       		.uleb128 0x2
 3613 048c 91       		.byte	0x91
 3614 048d 6C       		.sleb128 -20
 3615 048e 0E       		.uleb128 0xe
 3616 048f 24070000 		.4byte	.LASF38
 3617 0493 02       		.byte	0x2
 3618 0494 EA08     		.2byte	0x8ea
 3619 0496 83000000 		.4byte	0x83
 3620 049a 02       		.uleb128 0x2
 3621 049b 91       		.byte	0x91
 3622 049c 68       		.sleb128 -24
 3623 049d 0F       		.uleb128 0xf
 3624 049e AC070000 		.4byte	.LASF68
 3625 04a2 02       		.byte	0x2
 3626 04a3 EC08     		.2byte	0x8ec
 3627 04a5 83000000 		.4byte	0x83
 3628 04a9 02       		.uleb128 0x2
 3629 04aa 91       		.byte	0x91
 3630 04ab 74       		.sleb128 -12
 3631 04ac 00       		.byte	0
 3632 04ad 15       		.uleb128 0x15
 3633 04ae 70000000 		.4byte	.LASF69
 3634 04b2 02       		.byte	0x2
 3635 04b3 0809     		.2byte	0x908
 3636 04b5 83000000 		.4byte	0x83
 3637 04b9 00000000 		.4byte	.LFB29
 3638 04bd 24000000 		.4byte	.LFE29-.LFB29
 3639 04c1 01       		.uleb128 0x1
 3640 04c2 9C       		.byte	0x9c
 3641 04c3 D7040000 		.4byte	0x4d7
 3642 04c7 0E       		.uleb128 0xe
 3643 04c8 18000000 		.4byte	.LASF66
 3644 04cc 02       		.byte	0x2
 3645 04cd 0809     		.2byte	0x908
 3646 04cf 83000000 		.4byte	0x83
 3647 04d3 02       		.uleb128 0x2
 3648 04d4 91       		.byte	0x91
 3649 04d5 74       		.sleb128 -12
 3650 04d6 00       		.byte	0
 3651 04d7 12       		.uleb128 0x12
 3652 04d8 BD010000 		.4byte	.LASF70
 3653 04dc 02       		.byte	0x2
 3654 04dd 2409     		.2byte	0x924
 3655 04df 00000000 		.4byte	.LFB30
 3656 04e3 6C000000 		.4byte	.LFE30-.LFB30
 3657 04e7 01       		.uleb128 0x1
 3658 04e8 9C       		.byte	0x9c
 3659 04e9 1B050000 		.4byte	0x51b
 3660 04ed 0E       		.uleb128 0xe
 3661 04ee 18000000 		.4byte	.LASF66
 3662 04f2 02       		.byte	0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 134


 3663 04f3 2409     		.2byte	0x924
 3664 04f5 83000000 		.4byte	0x83
 3665 04f9 02       		.uleb128 0x2
 3666 04fa 91       		.byte	0x91
 3667 04fb 6C       		.sleb128 -20
 3668 04fc 0E       		.uleb128 0xe
 3669 04fd 6B010000 		.4byte	.LASF71
 3670 0501 02       		.byte	0x2
 3671 0502 2409     		.2byte	0x924
 3672 0504 83000000 		.4byte	0x83
 3673 0508 02       		.uleb128 0x2
 3674 0509 91       		.byte	0x91
 3675 050a 68       		.sleb128 -24
 3676 050b 0F       		.uleb128 0xf
 3677 050c AC070000 		.4byte	.LASF68
 3678 0510 02       		.byte	0x2
 3679 0511 2609     		.2byte	0x926
 3680 0513 83000000 		.4byte	0x83
 3681 0517 02       		.uleb128 0x2
 3682 0518 91       		.byte	0x91
 3683 0519 74       		.sleb128 -12
 3684 051a 00       		.byte	0
 3685 051b 0D       		.uleb128 0xd
 3686 051c 3A070000 		.4byte	.LASF72
 3687 0520 02       		.byte	0x2
 3688 0521 4509     		.2byte	0x945
 3689 0523 83000000 		.4byte	0x83
 3690 0527 00000000 		.4byte	.LFB31
 3691 052b 40000000 		.4byte	.LFE31-.LFB31
 3692 052f 01       		.uleb128 0x1
 3693 0530 9C       		.byte	0x9c
 3694 0531 45050000 		.4byte	0x545
 3695 0535 0E       		.uleb128 0xe
 3696 0536 18000000 		.4byte	.LASF66
 3697 053a 02       		.byte	0x2
 3698 053b 4509     		.2byte	0x945
 3699 053d 83000000 		.4byte	0x83
 3700 0541 02       		.uleb128 0x2
 3701 0542 91       		.byte	0x91
 3702 0543 74       		.sleb128 -12
 3703 0544 00       		.byte	0
 3704 0545 12       		.uleb128 0x12
 3705 0546 4F060000 		.4byte	.LASF73
 3706 054a 02       		.byte	0x2
 3707 054b 6809     		.2byte	0x968
 3708 054d 00000000 		.4byte	.LFB32
 3709 0551 60000000 		.4byte	.LFE32-.LFB32
 3710 0555 01       		.uleb128 0x1
 3711 0556 9C       		.byte	0x9c
 3712 0557 6B050000 		.4byte	0x56b
 3713 055b 0E       		.uleb128 0xe
 3714 055c 65020000 		.4byte	.LASF74
 3715 0560 02       		.byte	0x2
 3716 0561 6809     		.2byte	0x968
 3717 0563 83000000 		.4byte	0x83
 3718 0567 02       		.uleb128 0x2
 3719 0568 91       		.byte	0x91
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 135


 3720 0569 74       		.sleb128 -12
 3721 056a 00       		.byte	0
 3722 056b 12       		.uleb128 0x12
 3723 056c DE070000 		.4byte	.LASF75
 3724 0570 02       		.byte	0x2
 3725 0571 9509     		.2byte	0x995
 3726 0573 00000000 		.4byte	.LFB33
 3727 0577 60000000 		.4byte	.LFE33-.LFB33
 3728 057b 01       		.uleb128 0x1
 3729 057c 9C       		.byte	0x9c
 3730 057d 91050000 		.4byte	0x591
 3731 0581 0E       		.uleb128 0xe
 3732 0582 65020000 		.4byte	.LASF74
 3733 0586 02       		.byte	0x2
 3734 0587 9509     		.2byte	0x995
 3735 0589 83000000 		.4byte	0x83
 3736 058d 02       		.uleb128 0x2
 3737 058e 91       		.byte	0x91
 3738 058f 74       		.sleb128 -12
 3739 0590 00       		.byte	0
 3740 0591 12       		.uleb128 0x12
 3741 0592 24020000 		.4byte	.LASF76
 3742 0596 02       		.byte	0x2
 3743 0597 D009     		.2byte	0x9d0
 3744 0599 00000000 		.4byte	.LFB34
 3745 059d 58000000 		.4byte	.LFE34-.LFB34
 3746 05a1 01       		.uleb128 0x1
 3747 05a2 9C       		.byte	0x9c
 3748 05a3 D5050000 		.4byte	0x5d5
 3749 05a7 0E       		.uleb128 0xe
 3750 05a8 D2070000 		.4byte	.LASF77
 3751 05ac 02       		.byte	0x2
 3752 05ad D009     		.2byte	0x9d0
 3753 05af 83000000 		.4byte	0x83
 3754 05b3 02       		.uleb128 0x2
 3755 05b4 91       		.byte	0x91
 3756 05b5 64       		.sleb128 -28
 3757 05b6 0F       		.uleb128 0xf
 3758 05b7 AC070000 		.4byte	.LASF68
 3759 05bb 02       		.byte	0x2
 3760 05bc D209     		.2byte	0x9d2
 3761 05be 83000000 		.4byte	0x83
 3762 05c2 02       		.uleb128 0x2
 3763 05c3 91       		.byte	0x91
 3764 05c4 68       		.sleb128 -24
 3765 05c5 0F       		.uleb128 0xf
 3766 05c6 97060000 		.4byte	.LASF78
 3767 05ca 02       		.byte	0x2
 3768 05cb D309     		.2byte	0x9d3
 3769 05cd 83000000 		.4byte	0x83
 3770 05d1 02       		.uleb128 0x2
 3771 05d2 91       		.byte	0x91
 3772 05d3 6C       		.sleb128 -20
 3773 05d4 00       		.byte	0
 3774 05d5 11       		.uleb128 0x11
 3775 05d6 DC040000 		.4byte	.LASF79
 3776 05da 02       		.byte	0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 136


 3777 05db F009     		.2byte	0x9f0
 3778 05dd 83000000 		.4byte	0x83
 3779 05e1 00000000 		.4byte	.LFB35
 3780 05e5 1C000000 		.4byte	.LFE35-.LFB35
 3781 05e9 01       		.uleb128 0x1
 3782 05ea 9C       		.byte	0x9c
 3783 05eb 12       		.uleb128 0x12
 3784 05ec CD060000 		.4byte	.LASF80
 3785 05f0 02       		.byte	0x2
 3786 05f1 030A     		.2byte	0xa03
 3787 05f3 00000000 		.4byte	.LFB36
 3788 05f7 90000000 		.4byte	.LFE36-.LFB36
 3789 05fb 01       		.uleb128 0x1
 3790 05fc 9C       		.byte	0x9c
 3791 05fd 2F060000 		.4byte	0x62f
 3792 0601 0E       		.uleb128 0xe
 3793 0602 18000000 		.4byte	.LASF66
 3794 0606 02       		.byte	0x2
 3795 0607 030A     		.2byte	0xa03
 3796 0609 83000000 		.4byte	0x83
 3797 060d 02       		.uleb128 0x2
 3798 060e 91       		.byte	0x91
 3799 060f 6C       		.sleb128 -20
 3800 0610 0E       		.uleb128 0xe
 3801 0611 D6040000 		.4byte	.LASF47
 3802 0615 02       		.byte	0x2
 3803 0616 030A     		.2byte	0xa03
 3804 0618 83000000 		.4byte	0x83
 3805 061c 02       		.uleb128 0x2
 3806 061d 91       		.byte	0x91
 3807 061e 68       		.sleb128 -24
 3808 061f 0F       		.uleb128 0xf
 3809 0620 53010000 		.4byte	.LASF81
 3810 0624 02       		.byte	0x2
 3811 0625 050A     		.2byte	0xa05
 3812 0627 83000000 		.4byte	0x83
 3813 062b 02       		.uleb128 0x2
 3814 062c 91       		.byte	0x91
 3815 062d 74       		.sleb128 -12
 3816 062e 00       		.byte	0
 3817 062f 12       		.uleb128 0x12
 3818 0630 BB070000 		.4byte	.LASF82
 3819 0634 02       		.byte	0x2
 3820 0635 290A     		.2byte	0xa29
 3821 0637 00000000 		.4byte	.LFB37
 3822 063b 44000000 		.4byte	.LFE37-.LFB37
 3823 063f 01       		.uleb128 0x1
 3824 0640 9C       		.byte	0x9c
 3825 0641 64060000 		.4byte	0x664
 3826 0645 0E       		.uleb128 0xe
 3827 0646 45010000 		.4byte	.LASF83
 3828 064a 02       		.byte	0x2
 3829 064b 290A     		.2byte	0xa29
 3830 064d 83000000 		.4byte	0x83
 3831 0651 02       		.uleb128 0x2
 3832 0652 91       		.byte	0x91
 3833 0653 6C       		.sleb128 -20
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 137


 3834 0654 0F       		.uleb128 0xf
 3835 0655 AC070000 		.4byte	.LASF68
 3836 0659 02       		.byte	0x2
 3837 065a 2B0A     		.2byte	0xa2b
 3838 065c 83000000 		.4byte	0x83
 3839 0660 02       		.uleb128 0x2
 3840 0661 91       		.byte	0x91
 3841 0662 74       		.sleb128 -12
 3842 0663 00       		.byte	0
 3843 0664 11       		.uleb128 0x11
 3844 0665 0E040000 		.4byte	.LASF84
 3845 0669 02       		.byte	0x2
 3846 066a 400A     		.2byte	0xa40
 3847 066c 83000000 		.4byte	0x83
 3848 0670 00000000 		.4byte	.LFB38
 3849 0674 18000000 		.4byte	.LFE38-.LFB38
 3850 0678 01       		.uleb128 0x1
 3851 0679 9C       		.byte	0x9c
 3852 067a 0D       		.uleb128 0xd
 3853 067b 23000000 		.4byte	.LASF85
 3854 067f 02       		.byte	0x2
 3855 0680 520A     		.2byte	0xa52
 3856 0682 83000000 		.4byte	0x83
 3857 0686 00000000 		.4byte	.LFB39
 3858 068a 40000000 		.4byte	.LFE39-.LFB39
 3859 068e 01       		.uleb128 0x1
 3860 068f 9C       		.byte	0x9c
 3861 0690 A4060000 		.4byte	0x6a4
 3862 0694 0E       		.uleb128 0xe
 3863 0695 18000000 		.4byte	.LASF66
 3864 0699 02       		.byte	0x2
 3865 069a 520A     		.2byte	0xa52
 3866 069c 83000000 		.4byte	0x83
 3867 06a0 02       		.uleb128 0x2
 3868 06a1 91       		.byte	0x91
 3869 06a2 74       		.sleb128 -12
 3870 06a3 00       		.byte	0
 3871 06a4 0D       		.uleb128 0xd
 3872 06a5 C3040000 		.4byte	.LASF86
 3873 06a9 02       		.byte	0x2
 3874 06aa 680A     		.2byte	0xa68
 3875 06ac 83000000 		.4byte	0x83
 3876 06b0 00000000 		.4byte	.LFB40
 3877 06b4 54000000 		.4byte	.LFE40-.LFB40
 3878 06b8 01       		.uleb128 0x1
 3879 06b9 9C       		.byte	0x9c
 3880 06ba DD060000 		.4byte	0x6dd
 3881 06be 0E       		.uleb128 0xe
 3882 06bf 18000000 		.4byte	.LASF66
 3883 06c3 02       		.byte	0x2
 3884 06c4 680A     		.2byte	0xa68
 3885 06c6 83000000 		.4byte	0x83
 3886 06ca 02       		.uleb128 0x2
 3887 06cb 91       		.byte	0x91
 3888 06cc 6C       		.sleb128 -20
 3889 06cd 0F       		.uleb128 0xf
 3890 06ce 53010000 		.4byte	.LASF81
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 138


 3891 06d2 02       		.byte	0x2
 3892 06d3 6A0A     		.2byte	0xa6a
 3893 06d5 83000000 		.4byte	0x83
 3894 06d9 02       		.uleb128 0x2
 3895 06da 91       		.byte	0x91
 3896 06db 74       		.sleb128 -12
 3897 06dc 00       		.byte	0
 3898 06dd 11       		.uleb128 0x11
 3899 06de 9D020000 		.4byte	.LASF87
 3900 06e2 02       		.byte	0x2
 3901 06e3 940A     		.2byte	0xa94
 3902 06e5 83000000 		.4byte	0x83
 3903 06e9 00000000 		.4byte	.LFB41
 3904 06ed 1C000000 		.4byte	.LFE41-.LFB41
 3905 06f1 01       		.uleb128 0x1
 3906 06f2 9C       		.byte	0x9c
 3907 06f3 12       		.uleb128 0x12
 3908 06f4 F9070000 		.4byte	.LASF88
 3909 06f8 02       		.byte	0x2
 3910 06f9 A90A     		.2byte	0xaa9
 3911 06fb 00000000 		.4byte	.LFB42
 3912 06ff 50000000 		.4byte	.LFE42-.LFB42
 3913 0703 01       		.uleb128 0x1
 3914 0704 9C       		.byte	0x9c
 3915 0705 28070000 		.4byte	0x728
 3916 0709 0E       		.uleb128 0xe
 3917 070a 65020000 		.4byte	.LASF74
 3918 070e 02       		.byte	0x2
 3919 070f A90A     		.2byte	0xaa9
 3920 0711 83000000 		.4byte	0x83
 3921 0715 02       		.uleb128 0x2
 3922 0716 91       		.byte	0x91
 3923 0717 64       		.sleb128 -28
 3924 0718 0F       		.uleb128 0xf
 3925 0719 F6000000 		.4byte	.LASF64
 3926 071d 02       		.byte	0x2
 3927 071e AB0A     		.2byte	0xaab
 3928 0720 6B000000 		.4byte	0x6b
 3929 0724 02       		.uleb128 0x2
 3930 0725 91       		.byte	0x91
 3931 0726 6F       		.sleb128 -17
 3932 0727 00       		.byte	0
 3933 0728 0D       		.uleb128 0xd
 3934 0729 5D070000 		.4byte	.LASF89
 3935 072d 02       		.byte	0x2
 3936 072e D00A     		.2byte	0xad0
 3937 0730 F3000000 		.4byte	0xf3
 3938 0734 00000000 		.4byte	.LFB43
 3939 0738 40000000 		.4byte	.LFE43-.LFB43
 3940 073c 01       		.uleb128 0x1
 3941 073d 9C       		.byte	0x9c
 3942 073e 70070000 		.4byte	0x770
 3943 0742 0E       		.uleb128 0xe
 3944 0743 18000000 		.4byte	.LASF66
 3945 0747 02       		.byte	0x2
 3946 0748 D00A     		.2byte	0xad0
 3947 074a 83000000 		.4byte	0x83
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 139


 3948 074e 02       		.uleb128 0x2
 3949 074f 91       		.byte	0x91
 3950 0750 6C       		.sleb128 -20
 3951 0751 0E       		.uleb128 0xe
 3952 0752 ED000000 		.4byte	.LASF57
 3953 0756 02       		.byte	0x2
 3954 0757 D00A     		.2byte	0xad0
 3955 0759 F3000000 		.4byte	0xf3
 3956 075d 02       		.uleb128 0x2
 3957 075e 91       		.byte	0x91
 3958 075f 68       		.sleb128 -24
 3959 0760 0F       		.uleb128 0xf
 3960 0761 06020000 		.4byte	.LASF58
 3961 0765 02       		.byte	0x2
 3962 0766 D20A     		.2byte	0xad2
 3963 0768 F3000000 		.4byte	0xf3
 3964 076c 02       		.uleb128 0x2
 3965 076d 91       		.byte	0x91
 3966 076e 74       		.sleb128 -12
 3967 076f 00       		.byte	0
 3968 0770 0D       		.uleb128 0xd
 3969 0771 71020000 		.4byte	.LASF90
 3970 0775 02       		.byte	0x2
 3971 0776 F00A     		.2byte	0xaf0
 3972 0778 F3000000 		.4byte	0xf3
 3973 077c 00000000 		.4byte	.LFB44
 3974 0780 34000000 		.4byte	.LFE44-.LFB44
 3975 0784 01       		.uleb128 0x1
 3976 0785 9C       		.byte	0x9c
 3977 0786 A9070000 		.4byte	0x7a9
 3978 078a 0E       		.uleb128 0xe
 3979 078b 18000000 		.4byte	.LASF66
 3980 078f 02       		.byte	0x2
 3981 0790 F00A     		.2byte	0xaf0
 3982 0792 83000000 		.4byte	0x83
 3983 0796 02       		.uleb128 0x2
 3984 0797 91       		.byte	0x91
 3985 0798 6C       		.sleb128 -20
 3986 0799 0F       		.uleb128 0xf
 3987 079a D0020000 		.4byte	.LASF91
 3988 079e 02       		.byte	0x2
 3989 079f F20A     		.2byte	0xaf2
 3990 07a1 F3000000 		.4byte	0xf3
 3991 07a5 02       		.uleb128 0x2
 3992 07a6 91       		.byte	0x91
 3993 07a7 74       		.sleb128 -12
 3994 07a8 00       		.byte	0
 3995 07a9 12       		.uleb128 0x12
 3996 07aa 95000000 		.4byte	.LASF92
 3997 07ae 02       		.byte	0x2
 3998 07af 0D0B     		.2byte	0xb0d
 3999 07b1 00000000 		.4byte	.LFB45
 4000 07b5 50000000 		.4byte	.LFE45-.LFB45
 4001 07b9 01       		.uleb128 0x1
 4002 07ba 9C       		.byte	0x9c
 4003 07bb CF070000 		.4byte	0x7cf
 4004 07bf 0E       		.uleb128 0xe
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 140


 4005 07c0 18000000 		.4byte	.LASF66
 4006 07c4 02       		.byte	0x2
 4007 07c5 0D0B     		.2byte	0xb0d
 4008 07c7 83000000 		.4byte	0x83
 4009 07cb 02       		.uleb128 0x2
 4010 07cc 91       		.byte	0x91
 4011 07cd 74       		.sleb128 -12
 4012 07ce 00       		.byte	0
 4013 07cf 12       		.uleb128 0x12
 4014 07d0 96050000 		.4byte	.LASF93
 4015 07d4 02       		.byte	0x2
 4016 07d5 240B     		.2byte	0xb24
 4017 07d7 00000000 		.4byte	.LFB46
 4018 07db 38000000 		.4byte	.LFE46-.LFB46
 4019 07df 01       		.uleb128 0x1
 4020 07e0 9C       		.byte	0x9c
 4021 07e1 F5070000 		.4byte	0x7f5
 4022 07e5 0E       		.uleb128 0xe
 4023 07e6 18000000 		.4byte	.LASF66
 4024 07ea 02       		.byte	0x2
 4025 07eb 240B     		.2byte	0xb24
 4026 07ed 83000000 		.4byte	0x83
 4027 07f1 02       		.uleb128 0x2
 4028 07f2 91       		.byte	0x91
 4029 07f3 74       		.sleb128 -12
 4030 07f4 00       		.byte	0
 4031 07f5 10       		.uleb128 0x10
 4032 07f6 DF000000 		.4byte	.LASF94
 4033 07fa 02       		.byte	0x2
 4034 07fb 420B     		.2byte	0xb42
 4035 07fd 00000000 		.4byte	.LFB47
 4036 0801 E8000000 		.4byte	.LFE47-.LFB47
 4037 0805 01       		.uleb128 0x1
 4038 0806 9C       		.byte	0x9c
 4039 0807 14       		.uleb128 0x14
 4040 0808 E1050000 		.4byte	.LASF95
 4041 080c 02       		.byte	0x2
 4042 080d 7F0B     		.2byte	0xb7f
 4043 080f 00000000 		.4byte	.LFB48
 4044 0813 34000000 		.4byte	.LFE48-.LFB48
 4045 0817 01       		.uleb128 0x1
 4046 0818 9C       		.byte	0x9c
 4047 0819 2D080000 		.4byte	0x82d
 4048 081d 0E       		.uleb128 0xe
 4049 081e B0010000 		.4byte	.LASF96
 4050 0822 02       		.byte	0x2
 4051 0823 7F0B     		.2byte	0xb7f
 4052 0825 83000000 		.4byte	0x83
 4053 0829 02       		.uleb128 0x2
 4054 082a 91       		.byte	0x91
 4055 082b 74       		.sleb128 -12
 4056 082c 00       		.byte	0
 4057 082d 12       		.uleb128 0x12
 4058 082e 86050000 		.4byte	.LASF97
 4059 0832 02       		.byte	0x2
 4060 0833 D70B     		.2byte	0xbd7
 4061 0835 00000000 		.4byte	.LFB49
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 141


 4062 0839 6C000000 		.4byte	.LFE49-.LFB49
 4063 083d 01       		.uleb128 0x1
 4064 083e 9C       		.byte	0x9c
 4065 083f 8F080000 		.4byte	0x88f
 4066 0843 0E       		.uleb128 0xe
 4067 0844 18000000 		.4byte	.LASF66
 4068 0848 02       		.byte	0x2
 4069 0849 D70B     		.2byte	0xbd7
 4070 084b 83000000 		.4byte	0x83
 4071 084f 02       		.uleb128 0x2
 4072 0850 91       		.byte	0x91
 4073 0851 6C       		.sleb128 -20
 4074 0852 0E       		.uleb128 0xe
 4075 0853 A2070000 		.4byte	.LASF98
 4076 0857 02       		.byte	0x2
 4077 0858 D70B     		.2byte	0xbd7
 4078 085a DD000000 		.4byte	0xdd
 4079 085e 02       		.uleb128 0x2
 4080 085f 91       		.byte	0x91
 4081 0860 6B       		.sleb128 -21
 4082 0861 0E       		.uleb128 0xe
 4083 0862 D1050000 		.4byte	.LASF99
 4084 0866 02       		.byte	0x2
 4085 0867 D70B     		.2byte	0xbd7
 4086 0869 83000000 		.4byte	0x83
 4087 086d 02       		.uleb128 0x2
 4088 086e 91       		.byte	0x91
 4089 086f 64       		.sleb128 -28
 4090 0870 0F       		.uleb128 0xf
 4091 0871 53010000 		.4byte	.LASF81
 4092 0875 02       		.byte	0x2
 4093 0876 D90B     		.2byte	0xbd9
 4094 0878 83000000 		.4byte	0x83
 4095 087c 02       		.uleb128 0x2
 4096 087d 91       		.byte	0x91
 4097 087e 74       		.sleb128 -12
 4098 087f 0F       		.uleb128 0xf
 4099 0880 A4030000 		.4byte	.LASF100
 4100 0884 02       		.byte	0x2
 4101 0885 DA0B     		.2byte	0xbda
 4102 0887 83000000 		.4byte	0x83
 4103 088b 02       		.uleb128 0x2
 4104 088c 91       		.byte	0x91
 4105 088d 70       		.sleb128 -16
 4106 088e 00       		.byte	0
 4107 088f 12       		.uleb128 0x12
 4108 0890 4C050000 		.4byte	.LASF101
 4109 0894 02       		.byte	0x2
 4110 0895 580C     		.2byte	0xc58
 4111 0897 00000000 		.4byte	.LFB50
 4112 089b AC000000 		.4byte	.LFE50-.LFB50
 4113 089f 01       		.uleb128 0x1
 4114 08a0 9C       		.byte	0x9c
 4115 08a1 E2080000 		.4byte	0x8e2
 4116 08a5 0E       		.uleb128 0xe
 4117 08a6 18000000 		.4byte	.LASF66
 4118 08aa 02       		.byte	0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 142


 4119 08ab 580C     		.2byte	0xc58
 4120 08ad 83000000 		.4byte	0x83
 4121 08b1 02       		.uleb128 0x2
 4122 08b2 91       		.byte	0x91
 4123 08b3 6C       		.sleb128 -20
 4124 08b4 0E       		.uleb128 0xe
 4125 08b5 A2070000 		.4byte	.LASF98
 4126 08b9 02       		.byte	0x2
 4127 08ba 580C     		.2byte	0xc58
 4128 08bc DD000000 		.4byte	0xdd
 4129 08c0 02       		.uleb128 0x2
 4130 08c1 91       		.byte	0x91
 4131 08c2 6B       		.sleb128 -21
 4132 08c3 0E       		.uleb128 0xe
 4133 08c4 D6040000 		.4byte	.LASF47
 4134 08c8 02       		.byte	0x2
 4135 08c9 580C     		.2byte	0xc58
 4136 08cb 83000000 		.4byte	0x83
 4137 08cf 02       		.uleb128 0x2
 4138 08d0 91       		.byte	0x91
 4139 08d1 64       		.sleb128 -28
 4140 08d2 0F       		.uleb128 0xf
 4141 08d3 54070000 		.4byte	.LASF102
 4142 08d7 02       		.byte	0x2
 4143 08d8 5A0C     		.2byte	0xc5a
 4144 08da 83000000 		.4byte	0x83
 4145 08de 02       		.uleb128 0x2
 4146 08df 91       		.byte	0x91
 4147 08e0 74       		.sleb128 -12
 4148 08e1 00       		.byte	0
 4149 08e2 17       		.uleb128 0x17
 4150 08e3 12080000 		.4byte	.LASF103
 4151 08e7 02       		.byte	0x2
 4152 08e8 37       		.byte	0x37
 4153 08e9 BC000000 		.4byte	0xbc
 4154 08ed 05       		.uleb128 0x5
 4155 08ee 03       		.byte	0x3
 4156 08ef 00000000 		.4byte	disableTimerServicedIsr
 4157 08f3 17       		.uleb128 0x17
 4158 08f4 F9010000 		.4byte	.LASF104
 4159 08f8 02       		.byte	0x2
 4160 08f9 38       		.byte	0x38
 4161 08fa BC000000 		.4byte	0xbc
 4162 08fe 05       		.uleb128 0x5
 4163 08ff 03       		.byte	0x3
 4164 0900 00000000 		.4byte	timerIsrMask
 4165 0904 18       		.uleb128 0x18
 4166 0905 83000000 		.4byte	0x83
 4167 0909 14090000 		.4byte	0x914
 4168 090d 19       		.uleb128 0x19
 4169 090e FE000000 		.4byte	0xfe
 4170 0912 02       		.byte	0x2
 4171 0913 00       		.byte	0
 4172 0914 17       		.uleb128 0x17
 4173 0915 8D030000 		.4byte	.LASF105
 4174 0919 02       		.byte	0x2
 4175 091a 3C       		.byte	0x3c
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 143


 4176 091b 25090000 		.4byte	0x925
 4177 091f 05       		.uleb128 0x5
 4178 0920 03       		.byte	0x3
 4179 0921 00000000 		.4byte	counterTimerIntMaskTbl
 4180 0925 1A       		.uleb128 0x1a
 4181 0926 04090000 		.4byte	0x904
 4182 092a 18       		.uleb128 0x18
 4183 092b F3000000 		.4byte	0xf3
 4184 092f 3A090000 		.4byte	0x93a
 4185 0933 19       		.uleb128 0x19
 4186 0934 FE000000 		.4byte	0xfe
 4187 0938 02       		.byte	0x2
 4188 0939 00       		.byte	0
 4189 093a 17       		.uleb128 0x17
 4190 093b 46000000 		.4byte	.LASF106
 4191 093f 02       		.byte	0x2
 4192 0940 40       		.byte	0x40
 4193 0941 2A090000 		.4byte	0x92a
 4194 0945 05       		.uleb128 0x5
 4195 0946 03       		.byte	0x3
 4196 0947 04000000 		.4byte	cySysTimerCallback
 4197 094b 17       		.uleb128 0x17
 4198 094c 07000000 		.4byte	.LASF107
 4199 0950 02       		.byte	0x2
 4200 0951 46       		.byte	0x46
 4201 0952 E8000000 		.4byte	0xe8
 4202 0956 05       		.uleb128 0x5
 4203 0957 03       		.byte	0x3
 4204 0958 10000000 		.4byte	cySysWdtCallback
 4205 095c 1B       		.uleb128 0x1b
 4206 095d 0F050000 		.4byte	.LASF113
 4207 0961 04       		.byte	0x4
 4208 0962 D4       		.byte	0xd4
 4209 0963 83000000 		.4byte	0x83
 4210 0967 00       		.byte	0
 4211              		.section	.debug_abbrev,"",%progbits
 4212              	.Ldebug_abbrev0:
 4213 0000 01       		.uleb128 0x1
 4214 0001 11       		.uleb128 0x11
 4215 0002 01       		.byte	0x1
 4216 0003 25       		.uleb128 0x25
 4217 0004 0E       		.uleb128 0xe
 4218 0005 13       		.uleb128 0x13
 4219 0006 0B       		.uleb128 0xb
 4220 0007 03       		.uleb128 0x3
 4221 0008 0E       		.uleb128 0xe
 4222 0009 1B       		.uleb128 0x1b
 4223 000a 0E       		.uleb128 0xe
 4224 000b 55       		.uleb128 0x55
 4225 000c 17       		.uleb128 0x17
 4226 000d 11       		.uleb128 0x11
 4227 000e 01       		.uleb128 0x1
 4228 000f 10       		.uleb128 0x10
 4229 0010 17       		.uleb128 0x17
 4230 0011 00       		.byte	0
 4231 0012 00       		.byte	0
 4232 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 144


 4233 0014 24       		.uleb128 0x24
 4234 0015 00       		.byte	0
 4235 0016 0B       		.uleb128 0xb
 4236 0017 0B       		.uleb128 0xb
 4237 0018 3E       		.uleb128 0x3e
 4238 0019 0B       		.uleb128 0xb
 4239 001a 03       		.uleb128 0x3
 4240 001b 0E       		.uleb128 0xe
 4241 001c 00       		.byte	0
 4242 001d 00       		.byte	0
 4243 001e 03       		.uleb128 0x3
 4244 001f 24       		.uleb128 0x24
 4245 0020 00       		.byte	0
 4246 0021 0B       		.uleb128 0xb
 4247 0022 0B       		.uleb128 0xb
 4248 0023 3E       		.uleb128 0x3e
 4249 0024 0B       		.uleb128 0xb
 4250 0025 03       		.uleb128 0x3
 4251 0026 08       		.uleb128 0x8
 4252 0027 00       		.byte	0
 4253 0028 00       		.byte	0
 4254 0029 04       		.uleb128 0x4
 4255 002a 16       		.uleb128 0x16
 4256 002b 00       		.byte	0
 4257 002c 03       		.uleb128 0x3
 4258 002d 0E       		.uleb128 0xe
 4259 002e 3A       		.uleb128 0x3a
 4260 002f 0B       		.uleb128 0xb
 4261 0030 3B       		.uleb128 0x3b
 4262 0031 05       		.uleb128 0x5
 4263 0032 49       		.uleb128 0x49
 4264 0033 13       		.uleb128 0x13
 4265 0034 00       		.byte	0
 4266 0035 00       		.byte	0
 4267 0036 05       		.uleb128 0x5
 4268 0037 35       		.uleb128 0x35
 4269 0038 00       		.byte	0
 4270 0039 49       		.uleb128 0x49
 4271 003a 13       		.uleb128 0x13
 4272 003b 00       		.byte	0
 4273 003c 00       		.byte	0
 4274 003d 06       		.uleb128 0x6
 4275 003e 0F       		.uleb128 0xf
 4276 003f 00       		.byte	0
 4277 0040 0B       		.uleb128 0xb
 4278 0041 0B       		.uleb128 0xb
 4279 0042 49       		.uleb128 0x49
 4280 0043 13       		.uleb128 0x13
 4281 0044 00       		.byte	0
 4282 0045 00       		.byte	0
 4283 0046 07       		.uleb128 0x7
 4284 0047 15       		.uleb128 0x15
 4285 0048 00       		.byte	0
 4286 0049 27       		.uleb128 0x27
 4287 004a 19       		.uleb128 0x19
 4288 004b 00       		.byte	0
 4289 004c 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 145


 4290 004d 08       		.uleb128 0x8
 4291 004e 04       		.uleb128 0x4
 4292 004f 01       		.byte	0x1
 4293 0050 0B       		.uleb128 0xb
 4294 0051 0B       		.uleb128 0xb
 4295 0052 3A       		.uleb128 0x3a
 4296 0053 0B       		.uleb128 0xb
 4297 0054 3B       		.uleb128 0x3b
 4298 0055 0B       		.uleb128 0xb
 4299 0056 01       		.uleb128 0x1
 4300 0057 13       		.uleb128 0x13
 4301 0058 00       		.byte	0
 4302 0059 00       		.byte	0
 4303 005a 09       		.uleb128 0x9
 4304 005b 28       		.uleb128 0x28
 4305 005c 00       		.byte	0
 4306 005d 03       		.uleb128 0x3
 4307 005e 0E       		.uleb128 0xe
 4308 005f 1C       		.uleb128 0x1c
 4309 0060 0D       		.uleb128 0xd
 4310 0061 00       		.byte	0
 4311 0062 00       		.byte	0
 4312 0063 0A       		.uleb128 0xa
 4313 0064 16       		.uleb128 0x16
 4314 0065 00       		.byte	0
 4315 0066 03       		.uleb128 0x3
 4316 0067 0E       		.uleb128 0xe
 4317 0068 3A       		.uleb128 0x3a
 4318 0069 0B       		.uleb128 0xb
 4319 006a 3B       		.uleb128 0x3b
 4320 006b 0B       		.uleb128 0xb
 4321 006c 49       		.uleb128 0x49
 4322 006d 13       		.uleb128 0x13
 4323 006e 00       		.byte	0
 4324 006f 00       		.byte	0
 4325 0070 0B       		.uleb128 0xb
 4326 0071 2E       		.uleb128 0x2e
 4327 0072 00       		.byte	0
 4328 0073 03       		.uleb128 0x3
 4329 0074 0E       		.uleb128 0xe
 4330 0075 3A       		.uleb128 0x3a
 4331 0076 0B       		.uleb128 0xb
 4332 0077 3B       		.uleb128 0x3b
 4333 0078 05       		.uleb128 0x5
 4334 0079 27       		.uleb128 0x27
 4335 007a 19       		.uleb128 0x19
 4336 007b 11       		.uleb128 0x11
 4337 007c 01       		.uleb128 0x1
 4338 007d 12       		.uleb128 0x12
 4339 007e 06       		.uleb128 0x6
 4340 007f 40       		.uleb128 0x40
 4341 0080 18       		.uleb128 0x18
 4342 0081 9742     		.uleb128 0x2117
 4343 0083 19       		.uleb128 0x19
 4344 0084 00       		.byte	0
 4345 0085 00       		.byte	0
 4346 0086 0C       		.uleb128 0xc
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 146


 4347 0087 2E       		.uleb128 0x2e
 4348 0088 00       		.byte	0
 4349 0089 3F       		.uleb128 0x3f
 4350 008a 19       		.uleb128 0x19
 4351 008b 03       		.uleb128 0x3
 4352 008c 0E       		.uleb128 0xe
 4353 008d 3A       		.uleb128 0x3a
 4354 008e 0B       		.uleb128 0xb
 4355 008f 3B       		.uleb128 0x3b
 4356 0090 0B       		.uleb128 0xb
 4357 0091 27       		.uleb128 0x27
 4358 0092 19       		.uleb128 0x19
 4359 0093 11       		.uleb128 0x11
 4360 0094 01       		.uleb128 0x1
 4361 0095 12       		.uleb128 0x12
 4362 0096 06       		.uleb128 0x6
 4363 0097 40       		.uleb128 0x40
 4364 0098 18       		.uleb128 0x18
 4365 0099 9742     		.uleb128 0x2117
 4366 009b 19       		.uleb128 0x19
 4367 009c 00       		.byte	0
 4368 009d 00       		.byte	0
 4369 009e 0D       		.uleb128 0xd
 4370 009f 2E       		.uleb128 0x2e
 4371 00a0 01       		.byte	0x1
 4372 00a1 3F       		.uleb128 0x3f
 4373 00a2 19       		.uleb128 0x19
 4374 00a3 03       		.uleb128 0x3
 4375 00a4 0E       		.uleb128 0xe
 4376 00a5 3A       		.uleb128 0x3a
 4377 00a6 0B       		.uleb128 0xb
 4378 00a7 3B       		.uleb128 0x3b
 4379 00a8 05       		.uleb128 0x5
 4380 00a9 27       		.uleb128 0x27
 4381 00aa 19       		.uleb128 0x19
 4382 00ab 49       		.uleb128 0x49
 4383 00ac 13       		.uleb128 0x13
 4384 00ad 11       		.uleb128 0x11
 4385 00ae 01       		.uleb128 0x1
 4386 00af 12       		.uleb128 0x12
 4387 00b0 06       		.uleb128 0x6
 4388 00b1 40       		.uleb128 0x40
 4389 00b2 18       		.uleb128 0x18
 4390 00b3 9642     		.uleb128 0x2116
 4391 00b5 19       		.uleb128 0x19
 4392 00b6 01       		.uleb128 0x1
 4393 00b7 13       		.uleb128 0x13
 4394 00b8 00       		.byte	0
 4395 00b9 00       		.byte	0
 4396 00ba 0E       		.uleb128 0xe
 4397 00bb 05       		.uleb128 0x5
 4398 00bc 00       		.byte	0
 4399 00bd 03       		.uleb128 0x3
 4400 00be 0E       		.uleb128 0xe
 4401 00bf 3A       		.uleb128 0x3a
 4402 00c0 0B       		.uleb128 0xb
 4403 00c1 3B       		.uleb128 0x3b
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 147


 4404 00c2 05       		.uleb128 0x5
 4405 00c3 49       		.uleb128 0x49
 4406 00c4 13       		.uleb128 0x13
 4407 00c5 02       		.uleb128 0x2
 4408 00c6 18       		.uleb128 0x18
 4409 00c7 00       		.byte	0
 4410 00c8 00       		.byte	0
 4411 00c9 0F       		.uleb128 0xf
 4412 00ca 34       		.uleb128 0x34
 4413 00cb 00       		.byte	0
 4414 00cc 03       		.uleb128 0x3
 4415 00cd 0E       		.uleb128 0xe
 4416 00ce 3A       		.uleb128 0x3a
 4417 00cf 0B       		.uleb128 0xb
 4418 00d0 3B       		.uleb128 0x3b
 4419 00d1 05       		.uleb128 0x5
 4420 00d2 49       		.uleb128 0x49
 4421 00d3 13       		.uleb128 0x13
 4422 00d4 02       		.uleb128 0x2
 4423 00d5 18       		.uleb128 0x18
 4424 00d6 00       		.byte	0
 4425 00d7 00       		.byte	0
 4426 00d8 10       		.uleb128 0x10
 4427 00d9 2E       		.uleb128 0x2e
 4428 00da 00       		.byte	0
 4429 00db 3F       		.uleb128 0x3f
 4430 00dc 19       		.uleb128 0x19
 4431 00dd 03       		.uleb128 0x3
 4432 00de 0E       		.uleb128 0xe
 4433 00df 3A       		.uleb128 0x3a
 4434 00e0 0B       		.uleb128 0xb
 4435 00e1 3B       		.uleb128 0x3b
 4436 00e2 05       		.uleb128 0x5
 4437 00e3 27       		.uleb128 0x27
 4438 00e4 19       		.uleb128 0x19
 4439 00e5 11       		.uleb128 0x11
 4440 00e6 01       		.uleb128 0x1
 4441 00e7 12       		.uleb128 0x12
 4442 00e8 06       		.uleb128 0x6
 4443 00e9 40       		.uleb128 0x40
 4444 00ea 18       		.uleb128 0x18
 4445 00eb 9642     		.uleb128 0x2116
 4446 00ed 19       		.uleb128 0x19
 4447 00ee 00       		.byte	0
 4448 00ef 00       		.byte	0
 4449 00f0 11       		.uleb128 0x11
 4450 00f1 2E       		.uleb128 0x2e
 4451 00f2 00       		.byte	0
 4452 00f3 3F       		.uleb128 0x3f
 4453 00f4 19       		.uleb128 0x19
 4454 00f5 03       		.uleb128 0x3
 4455 00f6 0E       		.uleb128 0xe
 4456 00f7 3A       		.uleb128 0x3a
 4457 00f8 0B       		.uleb128 0xb
 4458 00f9 3B       		.uleb128 0x3b
 4459 00fa 05       		.uleb128 0x5
 4460 00fb 27       		.uleb128 0x27
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 148


 4461 00fc 19       		.uleb128 0x19
 4462 00fd 49       		.uleb128 0x49
 4463 00fe 13       		.uleb128 0x13
 4464 00ff 11       		.uleb128 0x11
 4465 0100 01       		.uleb128 0x1
 4466 0101 12       		.uleb128 0x12
 4467 0102 06       		.uleb128 0x6
 4468 0103 40       		.uleb128 0x40
 4469 0104 18       		.uleb128 0x18
 4470 0105 9742     		.uleb128 0x2117
 4471 0107 19       		.uleb128 0x19
 4472 0108 00       		.byte	0
 4473 0109 00       		.byte	0
 4474 010a 12       		.uleb128 0x12
 4475 010b 2E       		.uleb128 0x2e
 4476 010c 01       		.byte	0x1
 4477 010d 3F       		.uleb128 0x3f
 4478 010e 19       		.uleb128 0x19
 4479 010f 03       		.uleb128 0x3
 4480 0110 0E       		.uleb128 0xe
 4481 0111 3A       		.uleb128 0x3a
 4482 0112 0B       		.uleb128 0xb
 4483 0113 3B       		.uleb128 0x3b
 4484 0114 05       		.uleb128 0x5
 4485 0115 27       		.uleb128 0x27
 4486 0116 19       		.uleb128 0x19
 4487 0117 11       		.uleb128 0x11
 4488 0118 01       		.uleb128 0x1
 4489 0119 12       		.uleb128 0x12
 4490 011a 06       		.uleb128 0x6
 4491 011b 40       		.uleb128 0x40
 4492 011c 18       		.uleb128 0x18
 4493 011d 9642     		.uleb128 0x2116
 4494 011f 19       		.uleb128 0x19
 4495 0120 01       		.uleb128 0x1
 4496 0121 13       		.uleb128 0x13
 4497 0122 00       		.byte	0
 4498 0123 00       		.byte	0
 4499 0124 13       		.uleb128 0x13
 4500 0125 2E       		.uleb128 0x2e
 4501 0126 00       		.byte	0
 4502 0127 3F       		.uleb128 0x3f
 4503 0128 19       		.uleb128 0x19
 4504 0129 03       		.uleb128 0x3
 4505 012a 0E       		.uleb128 0xe
 4506 012b 3A       		.uleb128 0x3a
 4507 012c 0B       		.uleb128 0xb
 4508 012d 3B       		.uleb128 0x3b
 4509 012e 05       		.uleb128 0x5
 4510 012f 27       		.uleb128 0x27
 4511 0130 19       		.uleb128 0x19
 4512 0131 11       		.uleb128 0x11
 4513 0132 01       		.uleb128 0x1
 4514 0133 12       		.uleb128 0x12
 4515 0134 06       		.uleb128 0x6
 4516 0135 40       		.uleb128 0x40
 4517 0136 18       		.uleb128 0x18
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 149


 4518 0137 9742     		.uleb128 0x2117
 4519 0139 19       		.uleb128 0x19
 4520 013a 00       		.byte	0
 4521 013b 00       		.byte	0
 4522 013c 14       		.uleb128 0x14
 4523 013d 2E       		.uleb128 0x2e
 4524 013e 01       		.byte	0x1
 4525 013f 3F       		.uleb128 0x3f
 4526 0140 19       		.uleb128 0x19
 4527 0141 03       		.uleb128 0x3
 4528 0142 0E       		.uleb128 0xe
 4529 0143 3A       		.uleb128 0x3a
 4530 0144 0B       		.uleb128 0xb
 4531 0145 3B       		.uleb128 0x3b
 4532 0146 05       		.uleb128 0x5
 4533 0147 27       		.uleb128 0x27
 4534 0148 19       		.uleb128 0x19
 4535 0149 11       		.uleb128 0x11
 4536 014a 01       		.uleb128 0x1
 4537 014b 12       		.uleb128 0x12
 4538 014c 06       		.uleb128 0x6
 4539 014d 40       		.uleb128 0x40
 4540 014e 18       		.uleb128 0x18
 4541 014f 9742     		.uleb128 0x2117
 4542 0151 19       		.uleb128 0x19
 4543 0152 01       		.uleb128 0x1
 4544 0153 13       		.uleb128 0x13
 4545 0154 00       		.byte	0
 4546 0155 00       		.byte	0
 4547 0156 15       		.uleb128 0x15
 4548 0157 2E       		.uleb128 0x2e
 4549 0158 01       		.byte	0x1
 4550 0159 3F       		.uleb128 0x3f
 4551 015a 19       		.uleb128 0x19
 4552 015b 03       		.uleb128 0x3
 4553 015c 0E       		.uleb128 0xe
 4554 015d 3A       		.uleb128 0x3a
 4555 015e 0B       		.uleb128 0xb
 4556 015f 3B       		.uleb128 0x3b
 4557 0160 05       		.uleb128 0x5
 4558 0161 27       		.uleb128 0x27
 4559 0162 19       		.uleb128 0x19
 4560 0163 49       		.uleb128 0x49
 4561 0164 13       		.uleb128 0x13
 4562 0165 11       		.uleb128 0x11
 4563 0166 01       		.uleb128 0x1
 4564 0167 12       		.uleb128 0x12
 4565 0168 06       		.uleb128 0x6
 4566 0169 40       		.uleb128 0x40
 4567 016a 18       		.uleb128 0x18
 4568 016b 9742     		.uleb128 0x2117
 4569 016d 19       		.uleb128 0x19
 4570 016e 01       		.uleb128 0x1
 4571 016f 13       		.uleb128 0x13
 4572 0170 00       		.byte	0
 4573 0171 00       		.byte	0
 4574 0172 16       		.uleb128 0x16
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 150


 4575 0173 2E       		.uleb128 0x2e
 4576 0174 01       		.byte	0x1
 4577 0175 03       		.uleb128 0x3
 4578 0176 0E       		.uleb128 0xe
 4579 0177 3A       		.uleb128 0x3a
 4580 0178 0B       		.uleb128 0xb
 4581 0179 3B       		.uleb128 0x3b
 4582 017a 05       		.uleb128 0x5
 4583 017b 27       		.uleb128 0x27
 4584 017c 19       		.uleb128 0x19
 4585 017d 49       		.uleb128 0x49
 4586 017e 13       		.uleb128 0x13
 4587 017f 11       		.uleb128 0x11
 4588 0180 01       		.uleb128 0x1
 4589 0181 12       		.uleb128 0x12
 4590 0182 06       		.uleb128 0x6
 4591 0183 40       		.uleb128 0x40
 4592 0184 18       		.uleb128 0x18
 4593 0185 9742     		.uleb128 0x2117
 4594 0187 19       		.uleb128 0x19
 4595 0188 01       		.uleb128 0x1
 4596 0189 13       		.uleb128 0x13
 4597 018a 00       		.byte	0
 4598 018b 00       		.byte	0
 4599 018c 17       		.uleb128 0x17
 4600 018d 34       		.uleb128 0x34
 4601 018e 00       		.byte	0
 4602 018f 03       		.uleb128 0x3
 4603 0190 0E       		.uleb128 0xe
 4604 0191 3A       		.uleb128 0x3a
 4605 0192 0B       		.uleb128 0xb
 4606 0193 3B       		.uleb128 0x3b
 4607 0194 0B       		.uleb128 0xb
 4608 0195 49       		.uleb128 0x49
 4609 0196 13       		.uleb128 0x13
 4610 0197 02       		.uleb128 0x2
 4611 0198 18       		.uleb128 0x18
 4612 0199 00       		.byte	0
 4613 019a 00       		.byte	0
 4614 019b 18       		.uleb128 0x18
 4615 019c 01       		.uleb128 0x1
 4616 019d 01       		.byte	0x1
 4617 019e 49       		.uleb128 0x49
 4618 019f 13       		.uleb128 0x13
 4619 01a0 01       		.uleb128 0x1
 4620 01a1 13       		.uleb128 0x13
 4621 01a2 00       		.byte	0
 4622 01a3 00       		.byte	0
 4623 01a4 19       		.uleb128 0x19
 4624 01a5 21       		.uleb128 0x21
 4625 01a6 00       		.byte	0
 4626 01a7 49       		.uleb128 0x49
 4627 01a8 13       		.uleb128 0x13
 4628 01a9 2F       		.uleb128 0x2f
 4629 01aa 0B       		.uleb128 0xb
 4630 01ab 00       		.byte	0
 4631 01ac 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 151


 4632 01ad 1A       		.uleb128 0x1a
 4633 01ae 26       		.uleb128 0x26
 4634 01af 00       		.byte	0
 4635 01b0 49       		.uleb128 0x49
 4636 01b1 13       		.uleb128 0x13
 4637 01b2 00       		.byte	0
 4638 01b3 00       		.byte	0
 4639 01b4 1B       		.uleb128 0x1b
 4640 01b5 34       		.uleb128 0x34
 4641 01b6 00       		.byte	0
 4642 01b7 03       		.uleb128 0x3
 4643 01b8 0E       		.uleb128 0xe
 4644 01b9 3A       		.uleb128 0x3a
 4645 01ba 0B       		.uleb128 0xb
 4646 01bb 3B       		.uleb128 0x3b
 4647 01bc 0B       		.uleb128 0xb
 4648 01bd 49       		.uleb128 0x49
 4649 01be 13       		.uleb128 0x13
 4650 01bf 3F       		.uleb128 0x3f
 4651 01c0 19       		.uleb128 0x19
 4652 01c1 3C       		.uleb128 0x3c
 4653 01c2 19       		.uleb128 0x19
 4654 01c3 00       		.byte	0
 4655 01c4 00       		.byte	0
 4656 01c5 00       		.byte	0
 4657              		.section	.debug_aranges,"",%progbits
 4658 0000 AC010000 		.4byte	0x1ac
 4659 0004 0200     		.2byte	0x2
 4660 0006 00000000 		.4byte	.Ldebug_info0
 4661 000a 04       		.byte	0x4
 4662 000b 00       		.byte	0
 4663 000c 0000     		.2byte	0
 4664 000e 0000     		.2byte	0
 4665 0010 00000000 		.4byte	.LFB0
 4666 0014 48000000 		.4byte	.LFE0-.LFB0
 4667 0018 00000000 		.4byte	.LFB1
 4668 001c 1C000000 		.4byte	.LFE1-.LFB1
 4669 0020 00000000 		.4byte	.LFB2
 4670 0024 18000000 		.4byte	.LFE2-.LFB2
 4671 0028 00000000 		.4byte	.LFB3
 4672 002c 40000000 		.4byte	.LFE3-.LFB3
 4673 0030 00000000 		.4byte	.LFB4
 4674 0034 30000000 		.4byte	.LFE4-.LFB4
 4675 0038 00000000 		.4byte	.LFB5
 4676 003c 58010000 		.4byte	.LFE5-.LFB5
 4677 0040 00000000 		.4byte	.LFB6
 4678 0044 20000000 		.4byte	.LFE6-.LFB6
 4679 0048 00000000 		.4byte	.LFB7
 4680 004c 20000000 		.4byte	.LFE7-.LFB7
 4681 0050 00000000 		.4byte	.LFB8
 4682 0054 1C000000 		.4byte	.LFE8-.LFB8
 4683 0058 00000000 		.4byte	.LFB9
 4684 005c 34000000 		.4byte	.LFE9-.LFB9
 4685 0060 00000000 		.4byte	.LFB10
 4686 0064 3C000000 		.4byte	.LFE10-.LFB10
 4687 0068 00000000 		.4byte	.LFB11
 4688 006c 24000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 152


 4689 0070 00000000 		.4byte	.LFB12
 4690 0074 14000000 		.4byte	.LFE12-.LFB12
 4691 0078 00000000 		.4byte	.LFB13
 4692 007c 18000000 		.4byte	.LFE13-.LFB13
 4693 0080 00000000 		.4byte	.LFB14
 4694 0084 2C000000 		.4byte	.LFE14-.LFB14
 4695 0088 00000000 		.4byte	.LFB15
 4696 008c 18000000 		.4byte	.LFE15-.LFB15
 4697 0090 00000000 		.4byte	.LFB16
 4698 0094 14000000 		.4byte	.LFE16-.LFB16
 4699 0098 00000000 		.4byte	.LFB17
 4700 009c 34000000 		.4byte	.LFE17-.LFB17
 4701 00a0 00000000 		.4byte	.LFB18
 4702 00a4 1C000000 		.4byte	.LFE18-.LFB18
 4703 00a8 00000000 		.4byte	.LFB19
 4704 00ac 18000000 		.4byte	.LFE19-.LFB19
 4705 00b0 00000000 		.4byte	.LFB20
 4706 00b4 18000000 		.4byte	.LFE20-.LFB20
 4707 00b8 00000000 		.4byte	.LFB21
 4708 00bc 18000000 		.4byte	.LFE21-.LFB21
 4709 00c0 00000000 		.4byte	.LFB22
 4710 00c4 28000000 		.4byte	.LFE22-.LFB22
 4711 00c8 00000000 		.4byte	.LFB23
 4712 00cc 14000000 		.4byte	.LFE23-.LFB23
 4713 00d0 00000000 		.4byte	.LFB24
 4714 00d4 20000000 		.4byte	.LFE24-.LFB24
 4715 00d8 00000000 		.4byte	.LFB25
 4716 00dc 20000000 		.4byte	.LFE25-.LFB25
 4717 00e0 00000000 		.4byte	.LFB26
 4718 00e4 94000000 		.4byte	.LFE26-.LFB26
 4719 00e8 00000000 		.4byte	.LFB27
 4720 00ec 30000000 		.4byte	.LFE27-.LFB27
 4721 00f0 00000000 		.4byte	.LFB28
 4722 00f4 64000000 		.4byte	.LFE28-.LFB28
 4723 00f8 00000000 		.4byte	.LFB29
 4724 00fc 24000000 		.4byte	.LFE29-.LFB29
 4725 0100 00000000 		.4byte	.LFB30
 4726 0104 6C000000 		.4byte	.LFE30-.LFB30
 4727 0108 00000000 		.4byte	.LFB31
 4728 010c 40000000 		.4byte	.LFE31-.LFB31
 4729 0110 00000000 		.4byte	.LFB32
 4730 0114 60000000 		.4byte	.LFE32-.LFB32
 4731 0118 00000000 		.4byte	.LFB33
 4732 011c 60000000 		.4byte	.LFE33-.LFB33
 4733 0120 00000000 		.4byte	.LFB34
 4734 0124 58000000 		.4byte	.LFE34-.LFB34
 4735 0128 00000000 		.4byte	.LFB35
 4736 012c 1C000000 		.4byte	.LFE35-.LFB35
 4737 0130 00000000 		.4byte	.LFB36
 4738 0134 90000000 		.4byte	.LFE36-.LFB36
 4739 0138 00000000 		.4byte	.LFB37
 4740 013c 44000000 		.4byte	.LFE37-.LFB37
 4741 0140 00000000 		.4byte	.LFB38
 4742 0144 18000000 		.4byte	.LFE38-.LFB38
 4743 0148 00000000 		.4byte	.LFB39
 4744 014c 40000000 		.4byte	.LFE39-.LFB39
 4745 0150 00000000 		.4byte	.LFB40
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 153


 4746 0154 54000000 		.4byte	.LFE40-.LFB40
 4747 0158 00000000 		.4byte	.LFB41
 4748 015c 1C000000 		.4byte	.LFE41-.LFB41
 4749 0160 00000000 		.4byte	.LFB42
 4750 0164 50000000 		.4byte	.LFE42-.LFB42
 4751 0168 00000000 		.4byte	.LFB43
 4752 016c 40000000 		.4byte	.LFE43-.LFB43
 4753 0170 00000000 		.4byte	.LFB44
 4754 0174 34000000 		.4byte	.LFE44-.LFB44
 4755 0178 00000000 		.4byte	.LFB45
 4756 017c 50000000 		.4byte	.LFE45-.LFB45
 4757 0180 00000000 		.4byte	.LFB46
 4758 0184 38000000 		.4byte	.LFE46-.LFB46
 4759 0188 00000000 		.4byte	.LFB47
 4760 018c E8000000 		.4byte	.LFE47-.LFB47
 4761 0190 00000000 		.4byte	.LFB48
 4762 0194 34000000 		.4byte	.LFE48-.LFB48
 4763 0198 00000000 		.4byte	.LFB49
 4764 019c 6C000000 		.4byte	.LFE49-.LFB49
 4765 01a0 00000000 		.4byte	.LFB50
 4766 01a4 AC000000 		.4byte	.LFE50-.LFB50
 4767 01a8 00000000 		.4byte	0
 4768 01ac 00000000 		.4byte	0
 4769              		.section	.debug_ranges,"",%progbits
 4770              	.Ldebug_ranges0:
 4771 0000 00000000 		.4byte	.LFB0
 4772 0004 48000000 		.4byte	.LFE0
 4773 0008 00000000 		.4byte	.LFB1
 4774 000c 1C000000 		.4byte	.LFE1
 4775 0010 00000000 		.4byte	.LFB2
 4776 0014 18000000 		.4byte	.LFE2
 4777 0018 00000000 		.4byte	.LFB3
 4778 001c 40000000 		.4byte	.LFE3
 4779 0020 00000000 		.4byte	.LFB4
 4780 0024 30000000 		.4byte	.LFE4
 4781 0028 00000000 		.4byte	.LFB5
 4782 002c 58010000 		.4byte	.LFE5
 4783 0030 00000000 		.4byte	.LFB6
 4784 0034 20000000 		.4byte	.LFE6
 4785 0038 00000000 		.4byte	.LFB7
 4786 003c 20000000 		.4byte	.LFE7
 4787 0040 00000000 		.4byte	.LFB8
 4788 0044 1C000000 		.4byte	.LFE8
 4789 0048 00000000 		.4byte	.LFB9
 4790 004c 34000000 		.4byte	.LFE9
 4791 0050 00000000 		.4byte	.LFB10
 4792 0054 3C000000 		.4byte	.LFE10
 4793 0058 00000000 		.4byte	.LFB11
 4794 005c 24000000 		.4byte	.LFE11
 4795 0060 00000000 		.4byte	.LFB12
 4796 0064 14000000 		.4byte	.LFE12
 4797 0068 00000000 		.4byte	.LFB13
 4798 006c 18000000 		.4byte	.LFE13
 4799 0070 00000000 		.4byte	.LFB14
 4800 0074 2C000000 		.4byte	.LFE14
 4801 0078 00000000 		.4byte	.LFB15
 4802 007c 18000000 		.4byte	.LFE15
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 154


 4803 0080 00000000 		.4byte	.LFB16
 4804 0084 14000000 		.4byte	.LFE16
 4805 0088 00000000 		.4byte	.LFB17
 4806 008c 34000000 		.4byte	.LFE17
 4807 0090 00000000 		.4byte	.LFB18
 4808 0094 1C000000 		.4byte	.LFE18
 4809 0098 00000000 		.4byte	.LFB19
 4810 009c 18000000 		.4byte	.LFE19
 4811 00a0 00000000 		.4byte	.LFB20
 4812 00a4 18000000 		.4byte	.LFE20
 4813 00a8 00000000 		.4byte	.LFB21
 4814 00ac 18000000 		.4byte	.LFE21
 4815 00b0 00000000 		.4byte	.LFB22
 4816 00b4 28000000 		.4byte	.LFE22
 4817 00b8 00000000 		.4byte	.LFB23
 4818 00bc 14000000 		.4byte	.LFE23
 4819 00c0 00000000 		.4byte	.LFB24
 4820 00c4 20000000 		.4byte	.LFE24
 4821 00c8 00000000 		.4byte	.LFB25
 4822 00cc 20000000 		.4byte	.LFE25
 4823 00d0 00000000 		.4byte	.LFB26
 4824 00d4 94000000 		.4byte	.LFE26
 4825 00d8 00000000 		.4byte	.LFB27
 4826 00dc 30000000 		.4byte	.LFE27
 4827 00e0 00000000 		.4byte	.LFB28
 4828 00e4 64000000 		.4byte	.LFE28
 4829 00e8 00000000 		.4byte	.LFB29
 4830 00ec 24000000 		.4byte	.LFE29
 4831 00f0 00000000 		.4byte	.LFB30
 4832 00f4 6C000000 		.4byte	.LFE30
 4833 00f8 00000000 		.4byte	.LFB31
 4834 00fc 40000000 		.4byte	.LFE31
 4835 0100 00000000 		.4byte	.LFB32
 4836 0104 60000000 		.4byte	.LFE32
 4837 0108 00000000 		.4byte	.LFB33
 4838 010c 60000000 		.4byte	.LFE33
 4839 0110 00000000 		.4byte	.LFB34
 4840 0114 58000000 		.4byte	.LFE34
 4841 0118 00000000 		.4byte	.LFB35
 4842 011c 1C000000 		.4byte	.LFE35
 4843 0120 00000000 		.4byte	.LFB36
 4844 0124 90000000 		.4byte	.LFE36
 4845 0128 00000000 		.4byte	.LFB37
 4846 012c 44000000 		.4byte	.LFE37
 4847 0130 00000000 		.4byte	.LFB38
 4848 0134 18000000 		.4byte	.LFE38
 4849 0138 00000000 		.4byte	.LFB39
 4850 013c 40000000 		.4byte	.LFE39
 4851 0140 00000000 		.4byte	.LFB40
 4852 0144 54000000 		.4byte	.LFE40
 4853 0148 00000000 		.4byte	.LFB41
 4854 014c 1C000000 		.4byte	.LFE41
 4855 0150 00000000 		.4byte	.LFB42
 4856 0154 50000000 		.4byte	.LFE42
 4857 0158 00000000 		.4byte	.LFB43
 4858 015c 40000000 		.4byte	.LFE43
 4859 0160 00000000 		.4byte	.LFB44
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 155


 4860 0164 34000000 		.4byte	.LFE44
 4861 0168 00000000 		.4byte	.LFB45
 4862 016c 50000000 		.4byte	.LFE45
 4863 0170 00000000 		.4byte	.LFB46
 4864 0174 38000000 		.4byte	.LFE46
 4865 0178 00000000 		.4byte	.LFB47
 4866 017c E8000000 		.4byte	.LFE47
 4867 0180 00000000 		.4byte	.LFB48
 4868 0184 34000000 		.4byte	.LFE48
 4869 0188 00000000 		.4byte	.LFB49
 4870 018c 6C000000 		.4byte	.LFE49
 4871 0190 00000000 		.4byte	.LFB50
 4872 0194 AC000000 		.4byte	.LFE50
 4873 0198 00000000 		.4byte	0
 4874 019c 00000000 		.4byte	0
 4875              		.section	.debug_line,"",%progbits
 4876              	.Ldebug_line0:
 4877 0000 B4060000 		.section	.debug_str,"MS",%progbits,1
 4877      02005C00 
 4877      00000201 
 4877      FB0E0D00 
 4877      01010101 
 4878              	.LASF10:
 4879 0000 75696E74 		.ascii	"uint16\000"
 4879      313600
 4880              	.LASF107:
 4881 0007 63795379 		.ascii	"cySysWdtCallback\000"
 4881      73576474 
 4881      43616C6C 
 4881      6261636B 
 4881      00
 4882              	.LASF66:
 4883 0018 636F756E 		.ascii	"counterNum\000"
 4883      7465724E 
 4883      756D00
 4884              	.LASF85:
 4885 0023 43795379 		.ascii	"CySysTimerGetMatch\000"
 4885      7354696D 
 4885      65724765 
 4885      744D6174 
 4885      636800
 4886              	.LASF21:
 4887 0036 63795469 		.ascii	"cyTimerCallback\000"
 4887      6D657243 
 4887      616C6C62 
 4887      61636B00 
 4888              	.LASF106:
 4889 0046 63795379 		.ascii	"cySysTimerCallback\000"
 4889      7354696D 
 4889      65724361 
 4889      6C6C6261 
 4889      636B00
 4890              	.LASF7:
 4891 0059 6C6F6E67 		.ascii	"long long unsigned int\000"
 4891      206C6F6E 
 4891      6720756E 
 4891      7369676E 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 156


 4891      65642069 
 4892              	.LASF69:
 4893 0070 43795379 		.ascii	"CySysTimerGetMode\000"
 4893      7354696D 
 4893      65724765 
 4893      744D6F64 
 4893      6500
 4894              	.LASF41:
 4895 0082 43795379 		.ascii	"CySysClkWcoEnabled\000"
 4895      73436C6B 
 4895      57636F45 
 4895      6E61626C 
 4895      656400
 4896              	.LASF92:
 4897 0095 43795379 		.ascii	"CySysTimerEnableIsr\000"
 4897      7354696D 
 4897      6572456E 
 4897      61626C65 
 4897      49737200 
 4898              	.LASF111:
 4899 00a9 43795379 		.ascii	"CySysClkWcoSetHighPowerMode\000"
 4899      73436C6B 
 4899      57636F53 
 4899      65744869 
 4899      6768506F 
 4900              	.LASF6:
 4901 00c5 6C6F6E67 		.ascii	"long long int\000"
 4901      206C6F6E 
 4901      6720696E 
 4901      7400
 4902              	.LASF0:
 4903 00d3 7369676E 		.ascii	"signed char\000"
 4903      65642063 
 4903      68617200 
 4904              	.LASF94:
 4905 00df 43795379 		.ascii	"CySysTimerIsr\000"
 4905      7354696D 
 4905      65724973 
 4905      7200
 4906              	.LASF57:
 4907 00ed 66756E63 		.ascii	"function\000"
 4907      74696F6E 
 4907      00
 4908              	.LASF64:
 4909 00f6 696E7465 		.ascii	"interruptState\000"
 4909      72727570 
 4909      74537461 
 4909      746500
 4910              	.LASF52:
 4911 0105 43795379 		.ascii	"CySysWdtGetIgnoreBits\000"
 4911      73576474 
 4911      47657449 
 4911      676E6F72 
 4911      65426974 
 4912              	.LASF20:
 4913 011b 63795764 		.ascii	"cyWdtCallback\000"
 4913      7443616C 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 157


 4913      6C626163 
 4913      6B00
 4914              	.LASF19:
 4915 0129 63795F73 		.ascii	"cy_sys_timer_delaytype_enum\000"
 4915      79735F74 
 4915      696D6572 
 4915      5F64656C 
 4915      61797479 
 4916              	.LASF83:
 4917 0145 62697473 		.ascii	"bits\000"
 4917      00
 4918              	.LASF4:
 4919 014a 6C6F6E67 		.ascii	"long int\000"
 4919      20696E74 
 4919      00
 4920              	.LASF81:
 4921 0153 72656756 		.ascii	"regValue\000"
 4921      616C7565 
 4921      00
 4922              	.LASF40:
 4923 015c 636C6F63 		.ascii	"clockSel\000"
 4923      6B53656C 
 4923      00
 4924              	.LASF9:
 4925 0165 75696E74 		.ascii	"uint8\000"
 4925      3800
 4926              	.LASF71:
 4927 016b 656E6162 		.ascii	"enable\000"
 4927      6C6500
 4928              	.LASF13:
 4929 0172 646F7562 		.ascii	"double\000"
 4929      6C6500
 4930              	.LASF28:
 4931 0179 636F6D70 		.ascii	"compensatedCycles\000"
 4931      656E7361 
 4931      74656443 
 4931      79636C65 
 4931      7300
 4932              	.LASF24:
 4933 018b 43795379 		.ascii	"CySysClkIloStop\000"
 4933      73436C6B 
 4933      496C6F53 
 4933      746F7000 
 4934              	.LASF29:
 4935 019b 696C6F43 		.ascii	"iloCompensatedCycles\000"
 4935      6F6D7065 
 4935      6E736174 
 4935      65644379 
 4935      636C6573 
 4936              	.LASF96:
 4937 01b0 636F756E 		.ascii	"countersMask\000"
 4937      74657273 
 4937      4D61736B 
 4937      00
 4938              	.LASF70:
 4939 01bd 43795379 		.ascii	"CySysTimerSetClearOnMatch\000"
 4939      7354696D 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 158


 4939      65725365 
 4939      74436C65 
 4939      61724F6E 
 4940              	.LASF11:
 4941 01d7 75696E74 		.ascii	"uint32\000"
 4941      333200
 4942              	.LASF26:
 4943 01de 43795379 		.ascii	"CySysClkIloStopMeasurement\000"
 4943      73436C6B 
 4943      496C6F53 
 4943      746F704D 
 4943      65617375 
 4944              	.LASF104:
 4945 01f9 74696D65 		.ascii	"timerIsrMask\000"
 4945      72497372 
 4945      4D61736B 
 4945      00
 4946              	.LASF58:
 4947 0206 70726576 		.ascii	"prevCallback\000"
 4947      43616C6C 
 4947      6261636B 
 4947      00
 4948              	.LASF46:
 4949 0213 43795379 		.ascii	"CySysWdtSetMatch\000"
 4949      73576474 
 4949      5365744D 
 4949      61746368 
 4949      00
 4950              	.LASF76:
 4951 0224 43795379 		.ascii	"CySysTimerSetCascade\000"
 4951      7354696D 
 4951      65725365 
 4951      74436173 
 4951      63616465 
 4952              	.LASF43:
 4953 0239 43795379 		.ascii	"CySysWdtEnable\000"
 4953      73576474 
 4953      456E6162 
 4953      6C6500
 4954              	.LASF56:
 4955 0248 43795379 		.ascii	"CySysWdtSetInterruptCallback\000"
 4955      73576474 
 4955      53657449 
 4955      6E746572 
 4955      72757074 
 4956              	.LASF74:
 4957 0265 636F756E 		.ascii	"counterMask\000"
 4957      7465724D 
 4957      61736B00 
 4958              	.LASF90:
 4959 0271 43795379 		.ascii	"CySysTimerGetInterruptCallback\000"
 4959      7354696D 
 4959      65724765 
 4959      74496E74 
 4959      65727275 
 4960              	.LASF8:
 4961 0290 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 159


 4961      676E6564 
 4961      20696E74 
 4961      00
 4962              	.LASF87:
 4963 029d 43795379 		.ascii	"CySysTimerGetInterruptSource\000"
 4963      7354696D 
 4963      65724765 
 4963      74496E74 
 4963      65727275 
 4964              	.LASF50:
 4965 02ba 43795379 		.ascii	"CySysWdtSetIgnoreBits\000"
 4965      73576474 
 4965      53657449 
 4965      676E6F72 
 4965      65426974 
 4966              	.LASF91:
 4967 02d0 72657443 		.ascii	"retCallback\000"
 4967      616C6C62 
 4967      61636B00 
 4968              	.LASF27:
 4969 02dc 64657369 		.ascii	"desiredDelay\000"
 4969      72656444 
 4969      656C6179 
 4969      00
 4970              	.LASF5:
 4971 02e9 6C6F6E67 		.ascii	"long unsigned int\000"
 4971      20756E73 
 4971      69676E65 
 4971      6420696E 
 4971      7400
 4972              	.LASF108:
 4973 02fb 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4973      4320342E 
 4973      392E3320 
 4973      32303135 
 4973      30333033 
 4974 032e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 4974      20726576 
 4974      6973696F 
 4974      6E203232 
 4974      31323230 
 4975 0361 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 4975      30202D66 
 4975      66756E63 
 4975      74696F6E 
 4975      2D736563 
 4976              	.LASF105:
 4977 038d 636F756E 		.ascii	"counterTimerIntMaskTbl\000"
 4977      74657254 
 4977      696D6572 
 4977      496E744D 
 4977      61736B54 
 4978              	.LASF100:
 4979 03a4 6D617463 		.ascii	"matchValue\000"
 4979      6856616C 
 4979      756500
 4980              	.LASF54:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 160


 4981 03af 43795379 		.ascii	"CySysWdtMaskInterrupt\000"
 4981      73576474 
 4981      4D61736B 
 4981      496E7465 
 4981      72727570 
 4982              	.LASF3:
 4983 03c5 73686F72 		.ascii	"short unsigned int\000"
 4983      7420756E 
 4983      7369676E 
 4983      65642069 
 4983      6E7400
 4984              	.LASF42:
 4985 03d8 43795379 		.ascii	"CySysWdtGetEnabledStatus\000"
 4985      73576474 
 4985      47657445 
 4985      6E61626C 
 4985      65645374 
 4986              	.LASF59:
 4987 03f1 43795379 		.ascii	"CySysWdtGetInterruptCallback\000"
 4987      73576474 
 4987      47657449 
 4987      6E746572 
 4987      72757074 
 4988              	.LASF84:
 4989 040e 43795379 		.ascii	"CySysTimerGetToggleBit\000"
 4989      7354696D 
 4989      65724765 
 4989      74546F67 
 4989      676C6542 
 4990              	.LASF60:
 4991 0425 43795379 		.ascii	"CySysWdtIsr\000"
 4991      73576474 
 4991      49737200 
 4992              	.LASF23:
 4993 0431 43795379 		.ascii	"CySysClkIloStart\000"
 4993      73436C6B 
 4993      496C6F53 
 4993      74617274 
 4993      00
 4994              	.LASF61:
 4995 0442 74696D65 		.ascii	"timerSource\000"
 4995      72536F75 
 4995      72636500 
 4996              	.LASF39:
 4997 044e 706F7765 		.ascii	"powerModeStatus\000"
 4997      724D6F64 
 4997      65537461 
 4997      74757300 
 4998              	.LASF16:
 4999 045e 72656733 		.ascii	"reg32\000"
 4999      3200
 5000              	.LASF112:
 5001 0464 43795379 		.ascii	"CySysClkGetTimerSource\000"
 5001      73436C6B 
 5001      47657454 
 5001      696D6572 
 5001      536F7572 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 161


 5002              	.LASF33:
 5003 047b 72657475 		.ascii	"returnStatus\000"
 5003      726E5374 
 5003      61747573 
 5003      00
 5004              	.LASF63:
 5005 0488 736F7572 		.ascii	"source\000"
 5005      636500
 5006              	.LASF45:
 5007 048f 43795379 		.ascii	"CySysClkWcoClockOutSelect\000"
 5007      73436C6B 
 5007      57636F43 
 5007      6C6F636B 
 5007      4F757453 
 5008              	.LASF22:
 5009 04a9 73697A65 		.ascii	"sizetype\000"
 5009      74797065 
 5009      00
 5010              	.LASF48:
 5011 04b2 43795379 		.ascii	"CySysWdtGetMatch\000"
 5011      73576474 
 5011      4765744D 
 5011      61746368 
 5011      00
 5012              	.LASF86:
 5013 04c3 43795379 		.ascii	"CySysTimerGetCount\000"
 5013      7354696D 
 5013      65724765 
 5013      74436F75 
 5013      6E7400
 5014              	.LASF47:
 5015 04d6 6D617463 		.ascii	"match\000"
 5015      6800
 5016              	.LASF79:
 5017 04dc 43795379 		.ascii	"CySysTimerGetCascade\000"
 5017      7354696D 
 5017      65724765 
 5017      74436173 
 5017      63616465 
 5018              	.LASF17:
 5019 04f1 43595F53 		.ascii	"CY_SYS_TIMER_WAIT\000"
 5019      59535F54 
 5019      494D4552 
 5019      5F574149 
 5019      5400
 5020              	.LASF32:
 5021 0503 63686563 		.ascii	"checkStatus\000"
 5021      6B537461 
 5021      74757300 
 5022              	.LASF113:
 5023 050f 63796465 		.ascii	"cydelayFreqHz\000"
 5023      6C617946 
 5023      72657148 
 5023      7A00
 5024              	.LASF67:
 5025 051d 43795379 		.ascii	"CySysTimerSetMode\000"
 5025      7354696D 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 162


 5025      65725365 
 5025      744D6F64 
 5025      6500
 5026              	.LASF53:
 5027 052f 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 5027      73576474 
 5027      436C6561 
 5027      72496E74 
 5027      65727275 
 5028              	.LASF12:
 5029 0546 666C6F61 		.ascii	"float\000"
 5029      7400
 5030              	.LASF101:
 5031 054c 43795379 		.ascii	"CySysTimerDelayUntilMatch\000"
 5031      7354696D 
 5031      65724465 
 5031      6C617955 
 5031      6E74696C 
 5032              	.LASF55:
 5033 0566 43795379 		.ascii	"CySysWdtUnmaskInterrupt\000"
 5033      73576474 
 5033      556E6D61 
 5033      736B496E 
 5033      74657272 
 5034              	.LASF51:
 5035 057e 62697473 		.ascii	"bitsNum\000"
 5035      4E756D00 
 5036              	.LASF97:
 5037 0586 43795379 		.ascii	"CySysTimerDelay\000"
 5037      7354696D 
 5037      65724465 
 5037      6C617900 
 5038              	.LASF93:
 5039 0596 43795379 		.ascii	"CySysTimerDisableIsr\000"
 5039      7354696D 
 5039      65724469 
 5039      7361626C 
 5039      65497372 
 5040              	.LASF1:
 5041 05ab 756E7369 		.ascii	"unsigned char\000"
 5041      676E6564 
 5041      20636861 
 5041      7200
 5042              	.LASF31:
 5043 05b9 636F6D70 		.ascii	"compensateRunningStatus\000"
 5043      656E7361 
 5043      74655275 
 5043      6E6E696E 
 5043      67537461 
 5044              	.LASF99:
 5045 05d1 64656C61 		.ascii	"delay\000"
 5045      7900
 5046              	.LASF2:
 5047 05d7 73686F72 		.ascii	"short int\000"
 5047      7420696E 
 5047      7400
 5048              	.LASF95:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 163


 5049 05e1 43795379 		.ascii	"CySysTimerResetCounters\000"
 5049      7354696D 
 5049      65725265 
 5049      73657443 
 5049      6F756E74 
 5050              	.LASF44:
 5051 05f9 43795379 		.ascii	"CySysWdtDisable\000"
 5051      73576474 
 5051      44697361 
 5051      626C6500 
 5052              	.LASF110:
 5053 0609 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 5053      73657273 
 5053      5C666E65 
 5053      7665735C 
 5053      446F6375 
 5054 0636 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 5054      655F7370 
 5054      6565645F 
 5054      73656E73 
 5054      6F722E63 
 5055              	.LASF73:
 5056 064f 43795379 		.ascii	"CySysTimerEnable\000"
 5056      7354696D 
 5056      6572456E 
 5056      61626C65 
 5056      00
 5057              	.LASF65:
 5058 0660 43795379 		.ascii	"CySysTimerGetEnabledStatus\000"
 5058      7354696D 
 5058      65724765 
 5058      74456E61 
 5058      626C6564 
 5059              	.LASF25:
 5060 067b 43795379 		.ascii	"CySysClkIloStartMeasurement\000"
 5060      73436C6B 
 5060      496C6F53 
 5060      74617274 
 5060      4D656173 
 5061              	.LASF78:
 5062 0697 636F756E 		.ascii	"countersEnableStatus\000"
 5062      74657273 
 5062      456E6162 
 5062      6C655374 
 5062      61747573 
 5063              	.LASF109:
 5064 06ac 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLFClk.c\000"
 5064      72617465 
 5064      645F536F 
 5064      75726365 
 5064      5C50536F 
 5065              	.LASF80:
 5066 06cd 43795379 		.ascii	"CySysTimerSetMatch\000"
 5066      7354696D 
 5066      65725365 
 5066      744D6174 
 5066      636800
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 164


 5067              	.LASF62:
 5068 06e0 43795379 		.ascii	"CySysClkSetTimerSource\000"
 5068      73436C6B 
 5068      53657454 
 5068      696D6572 
 5068      536F7572 
 5069              	.LASF35:
 5070 06f7 43795379 		.ascii	"CySysClkWcoStop\000"
 5070      73436C6B 
 5070      57636F53 
 5070      746F7000 
 5071              	.LASF37:
 5072 0707 43795379 		.ascii	"CySysClkWcoSetPowerMode\000"
 5072      73436C6B 
 5072      57636F53 
 5072      6574506F 
 5072      7765724D 
 5073              	.LASF14:
 5074 071f 63686172 		.ascii	"char\000"
 5074      00
 5075              	.LASF38:
 5076 0724 6D6F6465 		.ascii	"mode\000"
 5076      00
 5077              	.LASF49:
 5078 0729 43795379 		.ascii	"CySysWdtGetCount\000"
 5078      73576474 
 5078      47657443 
 5078      6F756E74 
 5078      00
 5079              	.LASF72:
 5080 073a 43795379 		.ascii	"CySysTimerGetClearOnMatch\000"
 5080      7354696D 
 5080      65724765 
 5080      74436C65 
 5080      61724F6E 
 5081              	.LASF102:
 5082 0754 746D7056 		.ascii	"tmpValue\000"
 5082      616C7565 
 5082      00
 5083              	.LASF89:
 5084 075d 43795379 		.ascii	"CySysTimerSetInterruptCallback\000"
 5084      7354696D 
 5084      65725365 
 5084      74496E74 
 5084      65727275 
 5085              	.LASF30:
 5086 077c 64657369 		.ascii	"desiredDelayInCounts\000"
 5086      72656444 
 5086      656C6179 
 5086      496E436F 
 5086      756E7473 
 5087              	.LASF34:
 5088 0791 43795379 		.ascii	"CySysClkWcoStart\000"
 5088      73436C6B 
 5088      57636F53 
 5088      74617274 
 5088      00
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAVJFlR.s 			page 165


 5089              	.LASF98:
 5090 07a2 64656C61 		.ascii	"delayType\000"
 5090      79547970 
 5090      6500
 5091              	.LASF68:
 5092 07ac 636F6E66 		.ascii	"configRegValue\000"
 5092      69675265 
 5092      6756616C 
 5092      756500
 5093              	.LASF82:
 5094 07bb 43795379 		.ascii	"CySysTimerSetToggleBit\000"
 5094      7354696D 
 5094      65725365 
 5094      74546F67 
 5094      676C6542 
 5095              	.LASF77:
 5096 07d2 63617363 		.ascii	"cascadeMask\000"
 5096      6164654D 
 5096      61736B00 
 5097              	.LASF75:
 5098 07de 43795379 		.ascii	"CySysTimerDisable\000"
 5098      7354696D 
 5098      65724469 
 5098      7361626C 
 5098      6500
 5099              	.LASF15:
 5100 07f0 63797374 		.ascii	"cystatus\000"
 5100      61747573 
 5100      00
 5101              	.LASF88:
 5102 07f9 43795379 		.ascii	"CySysTimerClearInterrupt\000"
 5102      7354696D 
 5102      6572436C 
 5102      65617249 
 5102      6E746572 
 5103              	.LASF103:
 5104 0812 64697361 		.ascii	"disableTimerServicedIsr\000"
 5104      626C6554 
 5104      696D6572 
 5104      53657276 
 5104      69636564 
 5105              	.LASF36:
 5106 082a 43795379 		.ascii	"CySysClkIloCompensate\000"
 5106      73436C6B 
 5106      496C6F43 
 5106      6F6D7065 
 5106      6E736174 
 5107              	.LASF18:
 5108 0840 43595F53 		.ascii	"CY_SYS_TIMER_INTERRUPT\000"
 5108      59535F54 
 5108      494D4552 
 5108      5F494E54 
 5108      45525255 
 5109              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
