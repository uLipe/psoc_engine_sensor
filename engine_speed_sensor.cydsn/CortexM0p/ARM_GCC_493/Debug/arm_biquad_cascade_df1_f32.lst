ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_biquad_cascade_df1_f32.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_fmul
  18              		.global	__aeabi_fadd
  19              		.section	.text.arm_biquad_cascade_df1_f32,"ax",%progbits
  20              		.align	2
  21              		.global	arm_biquad_cascade_df1_f32
  22              		.code	16
  23              		.thumb_func
  24              		.type	arm_biquad_cascade_df1_f32, %function
  25              	arm_biquad_cascade_df1_f32:
  26              	.LFB82:
  27              		.file 1 "Source\\FilteringFunctions\\arm_biquad_cascade_df1_f32.c"
   1:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** /* ----------------------------------------------------------------------
   2:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Project:      CMSIS DSP Library
   3:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Title:        arm_biquad_cascade_df1_f32.c
   4:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Description:  Processing function for the floating-point Biquad cascade DirectFormI(DF1) filter
   5:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
   6:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * $Date:        27. January 2017
   7:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * $Revision:    V.1.5.1
   8:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
   9:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Target Processor: Cortex-M cores
  10:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * -------------------------------------------------------------------- */
  11:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** /*
  12:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
  14:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
  16:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * not use this file except in compliance with the License.
  18:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * You may obtain a copy of the License at
  19:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
  20:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
  22:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * See the License for the specific language governing permissions and
  26:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * limitations under the License.
  27:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  */
  28:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
  29:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** #include "arm_math.h"
  30:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 2


  31:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** /**
  32:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * @ingroup groupFilters
  33:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  */
  34:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
  35:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** /**
  36:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * @defgroup BiquadCascadeDF1 Biquad Cascade IIR Filters Using Direct Form I Structure
  37:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
  38:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * This set of functions implements arbitrary order recursive (IIR) filters.
  39:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * The filters are implemented as a cascade of second order Biquad sections.
  40:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * The functions support Q15, Q31 and floating-point data types.
  41:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Fast version of Q15 and Q31 also supported on CortexM4 and Cortex-M3.
  42:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
  43:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * The functions operate on blocks of input and output data and each call to the function
  44:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * processes <code>blockSize</code> samples through the filter.
  45:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * <code>pSrc</code> points to the array of input data and
  46:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * <code>pDst</code> points to the array of output data.
  47:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Both arrays contain <code>blockSize</code> values.
  48:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
  49:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * \par Algorithm
  50:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Each Biquad stage implements a second order filter using the difference equation:
  51:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * <pre>
  52:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *     y[n] = b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2]
  53:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * </pre>
  54:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * A Direct Form I algorithm is used with 5 coefficients and 4 state variables per stage.
  55:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * \image html Biquad.gif "Single Biquad filter stage"
  56:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Coefficients <code>b0, b1 and b2 </code> multiply the input signal <code>x[n]</code> and are ref
  57:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Coefficients <code>a1</code> and <code>a2</code> multiply the output signal <code>y[n]</code> an
  58:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Pay careful attention to the sign of the feedback coefficients.
  59:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Some design tools use the difference equation
  60:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * <pre>
  61:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *     y[n] = b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] - a1 * y[n-1] - a2 * y[n-2]
  62:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * </pre>
  63:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * In this case the feedback coefficients <code>a1</code> and <code>a2</code> must be negated when 
  64:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
  65:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * \par
  66:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Higher order filters are realized as a cascade of second order sections.
  67:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * <code>numStages</code> refers to the number of second order stages used.
  68:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * For example, an 8th order filter would be realized with <code>numStages=4</code> second order st
  69:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * \image html BiquadCascade.gif "8th order filter using a cascade of Biquad stages"
  70:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * A 9th order filter would be realized with <code>numStages=5</code> second order stages with the 
  71:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
  72:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * \par
  73:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * The <code>pState</code> points to state variables array.
  74:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Each Biquad stage has 4 state variables <code>x[n-1], x[n-2], y[n-1],</code> and <code>y[n-2]</c
  75:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * The state variables are arranged in the <code>pState</code> array as:
  76:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * <pre>
  77:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *     {x[n-1], x[n-2], y[n-1], y[n-2]}
  78:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * </pre>
  79:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
  80:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * \par
  81:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * The 4 state variables for stage 1 are first, then the 4 state variables for stage 2, and so on.
  82:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * The state array has a total length of <code>4*numStages</code> values.
  83:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * The state variables are updated after each block of data is processed, the coefficients are unto
  84:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
  85:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * \par Instance Structure
  86:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * The coefficients and state variables for a filter are stored together in an instance data struct
  87:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * A separate instance structure must be defined for each filter.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 3


  88:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Coefficient arrays may be shared among several instances while state variable arrays cannot be s
  89:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * There are separate instance structure declarations for each of the 3 supported data types.
  90:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
  91:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * \par Init Functions
  92:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * There is also an associated initialization function for each data type.
  93:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * The initialization function performs following operations:
  94:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * - Sets the values of the internal structure fields.
  95:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * - Zeros out the values in the state buffer.
  96:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * To do this manually without calling the init function, assign the follow subfields of the instan
  97:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * numStages, pCoeffs, pState. Also set all of the values in pState to zero.
  98:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
  99:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * \par
 100:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Use of the initialization function is optional.
 101:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * However, if the initialization function is used, then the instance structure cannot be placed in
 102:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * To place an instance structure into a const data section, the instance structure must be manuall
 103:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Set the values in the state buffer to zeros before static initialization.
 104:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * The code below statically initializes each of the 3 different data type filter instance structur
 105:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * <pre>
 106:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *     arm_biquad_casd_df1_inst_f32 S1 = {numStages, pState, pCoeffs};
 107:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *     arm_biquad_casd_df1_inst_q15 S2 = {numStages, pState, pCoeffs, postShift};
 108:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *     arm_biquad_casd_df1_inst_q31 S3 = {numStages, pState, pCoeffs, postShift};
 109:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * </pre>
 110:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * where <code>numStages</code> is the number of Biquad stages in the filter; <code>pState</code> i
 111:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * <code>pCoeffs</code> is the address of the coefficient buffer; <code>postShift</code> shift to b
 112:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
 113:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * \par Fixed-Point Behavior
 114:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Care must be taken when using the Q15 and Q31 versions of the Biquad Cascade filter functions.
 115:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Following issues must be considered:
 116:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * - Scaling of coefficients
 117:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * - Filter gain
 118:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * - Overflow and saturation
 119:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
 120:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * \par
 121:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * <b>Scaling of coefficients: </b>
 122:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * Filter coefficients are represented as fractional values and
 123:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * coefficients are restricted to lie in the range <code>[-1 +1)</code>.
 124:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * The fixed-point functions have an additional scaling parameter <code>postShift</code>
 125:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * which allow the filter coefficients to exceed the range <code>[+1 -1)</code>.
 126:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * At the output of the filter's accumulator is a shift register which shifts the result by <code>p
 127:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * \image html BiquadPostshift.gif "Fixed-point Biquad with shift by postShift bits after accumulat
 128:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * This essentially scales the filter coefficients by <code>2^postShift</code>.
 129:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * For example, to realize the coefficients
 130:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * <pre>
 131:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *    {1.5, -0.8, 1.2, 1.6, -0.9}
 132:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * </pre>
 133:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * set the pCoeffs array to:
 134:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * <pre>
 135:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *    {0.75, -0.4, 0.6, 0.8, -0.45}
 136:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * </pre>
 137:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * and set <code>postShift=1</code>
 138:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
 139:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * \par
 140:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * <b>Filter gain: </b>
 141:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * The frequency response of a Biquad filter is a function of its coefficients.
 142:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * It is possible for the gain through the filter to exceed 1.0 meaning that the filter increases t
 143:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * This means that an input signal with amplitude < 1.0 may result in an output > 1.0 and these are
 144:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * To avoid this behavior the filter needs to be scaled down such that its peak gain < 1.0 or the i
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 4


 145:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
 146:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * \par
 147:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * <b>Overflow and saturation: </b>
 148:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * For Q15 and Q31 versions, it is described separately as part of the function specific documentat
 149:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  */
 150:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 151:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** /**
 152:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * @addtogroup BiquadCascadeDF1
 153:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * @{
 154:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  */
 155:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 156:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** /**
 157:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * @param[in]  *S         points to an instance of the floating-point Biquad cascade structure.
 158:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * @param[in]  *pSrc      points to the block of input data.
 159:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * @param[out] *pDst      points to the block of output data.
 160:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * @param[in]  blockSize  number of samples to process per call.
 161:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  * @return     none.
 162:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  *
 163:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****  */
 164:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 165:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** void arm_biquad_cascade_df1_f32(
 166:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   const arm_biquad_casd_df1_inst_f32 * S,
 167:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   float32_t * pSrc,
 168:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   float32_t * pDst,
 169:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   uint32_t blockSize)
 170:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** {
  28              		.loc 1 170 0
  29              		.cfi_startproc
  30 0000 90B5     		push	{r4, r7, lr}
  31              		.cfi_def_cfa_offset 12
  32              		.cfi_offset 4, -12
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 97B0     		sub	sp, sp, #92
  36              		.cfi_def_cfa_offset 104
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 F860     		str	r0, [r7, #12]
  40 0008 B960     		str	r1, [r7, #8]
  41 000a 7A60     		str	r2, [r7, #4]
  42 000c 3B60     		str	r3, [r7]
 171:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   float32_t *pIn = pSrc;                         /*  source pointer            */
  43              		.loc 1 171 0
  44 000e BB68     		ldr	r3, [r7, #8]
  45 0010 7B65     		str	r3, [r7, #84]
 172:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   float32_t *pOut = pDst;                        /*  destination pointer       */
  46              		.loc 1 172 0
  47 0012 7B68     		ldr	r3, [r7, #4]
  48 0014 3B65     		str	r3, [r7, #80]
 173:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   float32_t *pState = S->pState;                 /*  pState pointer            */
  49              		.loc 1 173 0
  50 0016 FB68     		ldr	r3, [r7, #12]
  51 0018 5B68     		ldr	r3, [r3, #4]
  52 001a FB64     		str	r3, [r7, #76]
 174:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   float32_t *pCoeffs = S->pCoeffs;               /*  coefficient pointer       */
  53              		.loc 1 174 0
  54 001c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 5


  55 001e 9B68     		ldr	r3, [r3, #8]
  56 0020 BB64     		str	r3, [r7, #72]
 175:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   float32_t acc;                                 /*  Simulates the accumulator */
 176:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   float32_t b0, b1, b2, a1, a2;                  /*  Filter coefficients       */
 177:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   float32_t Xn1, Xn2, Yn1, Yn2;                  /*  Filter pState variables   */
 178:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   float32_t Xn;                                  /*  temporary input           */
 179:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   uint32_t sample, stage = S->numStages;         /*  loop counters             */
  57              		.loc 1 179 0
  58 0022 FB68     		ldr	r3, [r7, #12]
  59 0024 1B68     		ldr	r3, [r3]
  60 0026 3B63     		str	r3, [r7, #48]
  61              	.L4:
 180:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 181:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 182:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** #if defined (ARM_MATH_DSP)
 183:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 184:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
 185:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 186:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   do
 187:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   {
 188:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /* Reading the coefficients */
 189:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     b0 = *pCoeffs++;
 190:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     b1 = *pCoeffs++;
 191:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     b2 = *pCoeffs++;
 192:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     a1 = *pCoeffs++;
 193:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     a2 = *pCoeffs++;
 194:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 195:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /* Reading the pState values */
 196:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     Xn1 = pState[0];
 197:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     Xn2 = pState[1];
 198:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     Yn1 = pState[2];
 199:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     Yn2 = pState[3];
 200:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 201:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /* Apply loop unrolling and compute 4 output values simultaneously. */
 202:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /*      The variable acc hold output values that are being computed:
 203:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****      *
 204:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****      *    acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1]   + a2 * y[n-2]
 205:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****      *    acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1]   + a2 * y[n-2]
 206:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****      *    acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1]   + a2 * y[n-2]
 207:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****      *    acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1]   + a2 * y[n-2]
 208:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****      */
 209:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 210:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     sample = blockSize >> 2u;
 211:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 212:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
 213:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****      ** a second loop below computes the remaining 1 to 3 samples. */
 214:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     while (sample > 0u)
 215:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     {
 216:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Read the first input */
 217:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Xn = *pIn++;
 218:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 219:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 220:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Yn2 = (b0 * Xn) + (b1 * Xn1) + (b2 * Xn2) + (a1 * Yn1) + (a2 * Yn2);
 221:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 222:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Store the result in the accumulator in the destination buffer. */
 223:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       *pOut++ = Yn2;
 224:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 6


 225:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Every time after the output is computed state should be updated. */
 226:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* The states should be updated as:  */
 227:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Xn2 = Xn1    */
 228:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Xn1 = Xn     */
 229:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Yn2 = Yn1    */
 230:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Yn1 = acc   */
 231:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 232:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Read the second input */
 233:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Xn2 = *pIn++;
 234:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 235:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 236:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Yn1 = (b0 * Xn2) + (b1 * Xn) + (b2 * Xn1) + (a1 * Yn2) + (a2 * Yn1);
 237:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 238:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Store the result in the accumulator in the destination buffer. */
 239:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       *pOut++ = Yn1;
 240:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 241:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Every time after the output is computed state should be updated. */
 242:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* The states should be updated as:  */
 243:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Xn2 = Xn1    */
 244:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Xn1 = Xn     */
 245:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Yn2 = Yn1    */
 246:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Yn1 = acc   */
 247:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 248:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Read the third input */
 249:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Xn1 = *pIn++;
 250:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 251:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 252:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Yn2 = (b0 * Xn1) + (b1 * Xn2) + (b2 * Xn) + (a1 * Yn1) + (a2 * Yn2);
 253:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 254:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Store the result in the accumulator in the destination buffer. */
 255:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       *pOut++ = Yn2;
 256:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 257:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Every time after the output is computed state should be updated. */
 258:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* The states should be updated as: */
 259:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Xn2 = Xn1    */
 260:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Xn1 = Xn     */
 261:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Yn2 = Yn1    */
 262:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Yn1 = acc   */
 263:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 264:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Read the forth input */
 265:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Xn = *pIn++;
 266:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 267:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 268:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Yn1 = (b0 * Xn) + (b1 * Xn1) + (b2 * Xn2) + (a1 * Yn2) + (a2 * Yn1);
 269:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 270:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Store the result in the accumulator in the destination buffer. */
 271:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       *pOut++ = Yn1;
 272:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 273:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Every time after the output is computed state should be updated. */
 274:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* The states should be updated as:  */
 275:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Xn2 = Xn1    */
 276:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Xn1 = Xn     */
 277:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Yn2 = Yn1    */
 278:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Yn1 = acc   */
 279:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Xn2 = Xn1;
 280:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Xn1 = Xn;
 281:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 7


 282:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* decrement the loop counter */
 283:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       sample--;
 284:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 285:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     }
 286:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 287:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 288:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****      ** No loop unrolling is used. */
 289:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     sample = blockSize & 0x3u;
 290:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 291:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     while (sample > 0u)
 292:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     {
 293:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Read the input */
 294:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Xn = *pIn++;
 295:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 296:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 297:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       acc = (b0 * Xn) + (b1 * Xn1) + (b2 * Xn2) + (a1 * Yn1) + (a2 * Yn2);
 298:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 299:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Store the result in the accumulator in the destination buffer. */
 300:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       *pOut++ = acc;
 301:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 302:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Every time after the output is computed state should be updated. */
 303:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* The states should be updated as:    */
 304:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Xn2 = Xn1    */
 305:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Xn1 = Xn     */
 306:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Yn2 = Yn1    */
 307:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Yn1 = acc   */
 308:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Xn2 = Xn1;
 309:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Xn1 = Xn;
 310:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Yn2 = Yn1;
 311:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Yn1 = acc;
 312:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 313:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* decrement the loop counter */
 314:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       sample--;
 315:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 316:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     }
 317:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 318:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /*  Store the updated state variables back into the pState array */
 319:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     *pState++ = Xn1;
 320:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     *pState++ = Xn2;
 321:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     *pState++ = Yn1;
 322:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     *pState++ = Yn2;
 323:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 324:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /*  The first stage goes from the input buffer to the output buffer. */
 325:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /*  Subsequent numStages  occur in-place in the output buffer */
 326:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     pIn = pDst;
 327:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 328:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /* Reset the output pointer */
 329:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     pOut = pDst;
 330:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 331:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /* decrement the loop counter */
 332:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     stage--;
 333:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 334:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   } while (stage > 0u);
 335:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 336:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** #else
 337:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 338:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   /* Run the below code for Cortex-M0 */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 8


 339:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 340:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   do
 341:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   {
 342:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /* Reading the coefficients */
 343:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     b0 = *pCoeffs++;
  62              		.loc 1 343 0
  63 0028 BB6C     		ldr	r3, [r7, #72]
  64 002a 1A1D     		add	r2, r3, #4
  65 002c BA64     		str	r2, [r7, #72]
  66 002e 1B68     		ldr	r3, [r3]
  67 0030 FB62     		str	r3, [r7, #44]
 344:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     b1 = *pCoeffs++;
  68              		.loc 1 344 0
  69 0032 BB6C     		ldr	r3, [r7, #72]
  70 0034 1A1D     		add	r2, r3, #4
  71 0036 BA64     		str	r2, [r7, #72]
  72 0038 1B68     		ldr	r3, [r3]
  73 003a BB62     		str	r3, [r7, #40]
 345:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     b2 = *pCoeffs++;
  74              		.loc 1 345 0
  75 003c BB6C     		ldr	r3, [r7, #72]
  76 003e 1A1D     		add	r2, r3, #4
  77 0040 BA64     		str	r2, [r7, #72]
  78 0042 1B68     		ldr	r3, [r3]
  79 0044 7B62     		str	r3, [r7, #36]
 346:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     a1 = *pCoeffs++;
  80              		.loc 1 346 0
  81 0046 BB6C     		ldr	r3, [r7, #72]
  82 0048 1A1D     		add	r2, r3, #4
  83 004a BA64     		str	r2, [r7, #72]
  84 004c 1B68     		ldr	r3, [r3]
  85 004e 3B62     		str	r3, [r7, #32]
 347:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     a2 = *pCoeffs++;
  86              		.loc 1 347 0
  87 0050 BB6C     		ldr	r3, [r7, #72]
  88 0052 1A1D     		add	r2, r3, #4
  89 0054 BA64     		str	r2, [r7, #72]
  90 0056 1B68     		ldr	r3, [r3]
  91 0058 FB61     		str	r3, [r7, #28]
 348:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 349:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /* Reading the pState values */
 350:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     Xn1 = pState[0];
  92              		.loc 1 350 0
  93 005a FB6C     		ldr	r3, [r7, #76]
  94 005c 1B68     		ldr	r3, [r3]
  95 005e 7B64     		str	r3, [r7, #68]
 351:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     Xn2 = pState[1];
  96              		.loc 1 351 0
  97 0060 FB6C     		ldr	r3, [r7, #76]
  98 0062 5B68     		ldr	r3, [r3, #4]
  99 0064 3B64     		str	r3, [r7, #64]
 352:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     Yn1 = pState[2];
 100              		.loc 1 352 0
 101 0066 FB6C     		ldr	r3, [r7, #76]
 102 0068 9B68     		ldr	r3, [r3, #8]
 103 006a FB63     		str	r3, [r7, #60]
 353:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     Yn2 = pState[3];
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 9


 104              		.loc 1 353 0
 105 006c FB6C     		ldr	r3, [r7, #76]
 106 006e DB68     		ldr	r3, [r3, #12]
 107 0070 BB63     		str	r3, [r7, #56]
 354:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 355:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /*      The variables acc holds the output value that is computed:
 356:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****      *    acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1]   + a2 * y[n-2]
 357:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****      */
 358:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 359:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     sample = blockSize;
 108              		.loc 1 359 0
 109 0072 3B68     		ldr	r3, [r7]
 110 0074 7B63     		str	r3, [r7, #52]
 360:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 361:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     while (sample > 0u)
 111              		.loc 1 361 0
 112 0076 46E0     		b	.L2
 113              	.L3:
 362:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     {
 363:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Read the input */
 364:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Xn = *pIn++;
 114              		.loc 1 364 0
 115 0078 7B6D     		ldr	r3, [r7, #84]
 116 007a 1A1D     		add	r2, r3, #4
 117 007c 7A65     		str	r2, [r7, #84]
 118 007e 1B68     		ldr	r3, [r3]
 119 0080 BB61     		str	r3, [r7, #24]
 365:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 366:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 367:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       acc = (b0 * Xn) + (b1 * Xn1) + (b2 * Xn2) + (a1 * Yn1) + (a2 * Yn2);
 120              		.loc 1 367 0
 121 0082 F86A     		ldr	r0, [r7, #44]
 122 0084 B969     		ldr	r1, [r7, #24]
 123 0086 FFF7FEFF 		bl	__aeabi_fmul
 124 008a 031C     		add	r3, r0, #0
 125 008c 1C1C     		add	r4, r3, #0
 126 008e B86A     		ldr	r0, [r7, #40]
 127 0090 796C     		ldr	r1, [r7, #68]
 128 0092 FFF7FEFF 		bl	__aeabi_fmul
 129 0096 031C     		add	r3, r0, #0
 130 0098 201C     		add	r0, r4, #0
 131 009a 191C     		add	r1, r3, #0
 132 009c FFF7FEFF 		bl	__aeabi_fadd
 133 00a0 031C     		add	r3, r0, #0
 134 00a2 1C1C     		add	r4, r3, #0
 135 00a4 786A     		ldr	r0, [r7, #36]
 136 00a6 396C     		ldr	r1, [r7, #64]
 137 00a8 FFF7FEFF 		bl	__aeabi_fmul
 138 00ac 031C     		add	r3, r0, #0
 139 00ae 201C     		add	r0, r4, #0
 140 00b0 191C     		add	r1, r3, #0
 141 00b2 FFF7FEFF 		bl	__aeabi_fadd
 142 00b6 031C     		add	r3, r0, #0
 143 00b8 1C1C     		add	r4, r3, #0
 144 00ba 386A     		ldr	r0, [r7, #32]
 145 00bc F96B     		ldr	r1, [r7, #60]
 146 00be FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 10


 147 00c2 031C     		add	r3, r0, #0
 148 00c4 201C     		add	r0, r4, #0
 149 00c6 191C     		add	r1, r3, #0
 150 00c8 FFF7FEFF 		bl	__aeabi_fadd
 151 00cc 031C     		add	r3, r0, #0
 152 00ce 1C1C     		add	r4, r3, #0
 153 00d0 F869     		ldr	r0, [r7, #28]
 154 00d2 B96B     		ldr	r1, [r7, #56]
 155 00d4 FFF7FEFF 		bl	__aeabi_fmul
 156 00d8 031C     		add	r3, r0, #0
 157 00da 201C     		add	r0, r4, #0
 158 00dc 191C     		add	r1, r3, #0
 159 00de FFF7FEFF 		bl	__aeabi_fadd
 160 00e2 031C     		add	r3, r0, #0
 161 00e4 7B61     		str	r3, [r7, #20]
 368:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 369:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Store the result in the accumulator in the destination buffer. */
 370:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       *pOut++ = acc;
 162              		.loc 1 370 0
 163 00e6 3B6D     		ldr	r3, [r7, #80]
 164 00e8 1A1D     		add	r2, r3, #4
 165 00ea 3A65     		str	r2, [r7, #80]
 166 00ec 7A69     		ldr	r2, [r7, #20]
 167 00ee 1A60     		str	r2, [r3]
 371:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 372:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Every time after the output is computed state should be updated. */
 373:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* The states should be updated as:    */
 374:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Xn2 = Xn1    */
 375:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Xn1 = Xn     */
 376:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Yn2 = Yn1    */
 377:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* Yn1 = acc   */
 378:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Xn2 = Xn1;
 168              		.loc 1 378 0
 169 00f0 7B6C     		ldr	r3, [r7, #68]
 170 00f2 3B64     		str	r3, [r7, #64]
 379:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Xn1 = Xn;
 171              		.loc 1 379 0
 172 00f4 BB69     		ldr	r3, [r7, #24]
 173 00f6 7B64     		str	r3, [r7, #68]
 380:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Yn2 = Yn1;
 174              		.loc 1 380 0
 175 00f8 FB6B     		ldr	r3, [r7, #60]
 176 00fa BB63     		str	r3, [r7, #56]
 381:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       Yn1 = acc;
 177              		.loc 1 381 0
 178 00fc 7B69     		ldr	r3, [r7, #20]
 179 00fe FB63     		str	r3, [r7, #60]
 382:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 383:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       /* decrement the loop counter */
 384:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****       sample--;
 180              		.loc 1 384 0
 181 0100 7B6B     		ldr	r3, [r7, #52]
 182 0102 013B     		sub	r3, r3, #1
 183 0104 7B63     		str	r3, [r7, #52]
 184              	.L2:
 361:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     {
 185              		.loc 1 361 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 11


 186 0106 7B6B     		ldr	r3, [r7, #52]
 187 0108 002B     		cmp	r3, #0
 188 010a B5D1     		bne	.L3
 385:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     }
 386:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 387:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /*  Store the updated state variables back into the pState array */
 388:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     *pState++ = Xn1;
 189              		.loc 1 388 0
 190 010c FB6C     		ldr	r3, [r7, #76]
 191 010e 1A1D     		add	r2, r3, #4
 192 0110 FA64     		str	r2, [r7, #76]
 193 0112 7A6C     		ldr	r2, [r7, #68]
 194 0114 1A60     		str	r2, [r3]
 389:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     *pState++ = Xn2;
 195              		.loc 1 389 0
 196 0116 FB6C     		ldr	r3, [r7, #76]
 197 0118 1A1D     		add	r2, r3, #4
 198 011a FA64     		str	r2, [r7, #76]
 199 011c 3A6C     		ldr	r2, [r7, #64]
 200 011e 1A60     		str	r2, [r3]
 390:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     *pState++ = Yn1;
 201              		.loc 1 390 0
 202 0120 FB6C     		ldr	r3, [r7, #76]
 203 0122 1A1D     		add	r2, r3, #4
 204 0124 FA64     		str	r2, [r7, #76]
 205 0126 FA6B     		ldr	r2, [r7, #60]
 206 0128 1A60     		str	r2, [r3]
 391:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     *pState++ = Yn2;
 207              		.loc 1 391 0
 208 012a FB6C     		ldr	r3, [r7, #76]
 209 012c 1A1D     		add	r2, r3, #4
 210 012e FA64     		str	r2, [r7, #76]
 211 0130 BA6B     		ldr	r2, [r7, #56]
 212 0132 1A60     		str	r2, [r3]
 392:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 393:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /*  The first stage goes from the input buffer to the output buffer. */
 394:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /*  Subsequent numStages  occur in-place in the output buffer */
 395:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     pIn = pDst;
 213              		.loc 1 395 0
 214 0134 7B68     		ldr	r3, [r7, #4]
 215 0136 7B65     		str	r3, [r7, #84]
 396:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 397:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /* Reset the output pointer */
 398:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     pOut = pDst;
 216              		.loc 1 398 0
 217 0138 7B68     		ldr	r3, [r7, #4]
 218 013a 3B65     		str	r3, [r7, #80]
 399:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 400:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     /* decrement the loop counter */
 401:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****     stage--;
 219              		.loc 1 401 0
 220 013c 3B6B     		ldr	r3, [r7, #48]
 221 013e 013B     		sub	r3, r3, #1
 222 0140 3B63     		str	r3, [r7, #48]
 402:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 403:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c ****   } while (stage > 0u);
 223              		.loc 1 403 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 12


 224 0142 3B6B     		ldr	r3, [r7, #48]
 225 0144 002B     		cmp	r3, #0
 226 0146 00D0     		beq	.LCB171
 227 0148 6EE7     		b	.L4	@long jump
 228              	.LCB171:
 404:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 405:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 406:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** 
 407:Source\FilteringFunctions/arm_biquad_cascade_df1_f32.c **** }
 229              		.loc 1 407 0
 230 014a BD46     		mov	sp, r7
 231 014c 17B0     		add	sp, sp, #92
 232              		@ sp needed
 233 014e 90BD     		pop	{r4, r7, pc}
 234              		.cfi_endproc
 235              	.LFE82:
 236              		.size	arm_biquad_cascade_df1_f32, .-arm_biquad_cascade_df1_f32
 237              		.text
 238              	.Letext0:
 239              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 240              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 241              		.file 4 ".\\Include/arm_math.h"
 242              		.section	.debug_info,"",%progbits
 243              	.Ldebug_info0:
 244 0000 38020000 		.4byte	0x238
 245 0004 0400     		.2byte	0x4
 246 0006 00000000 		.4byte	.Ldebug_abbrev0
 247 000a 04       		.byte	0x4
 248 000b 01       		.uleb128 0x1
 249 000c 4E010000 		.4byte	.LASF27
 250 0010 01       		.byte	0x1
 251 0011 17000000 		.4byte	.LASF28
 252 0015 72000000 		.4byte	.LASF29
 253 0019 00000000 		.4byte	.Ldebug_ranges0+0
 254 001d 00000000 		.4byte	0
 255 0021 00000000 		.4byte	.Ldebug_line0
 256 0025 02       		.uleb128 0x2
 257 0026 01       		.byte	0x1
 258 0027 06       		.byte	0x6
 259 0028 34020000 		.4byte	.LASF0
 260 002c 02       		.uleb128 0x2
 261 002d 01       		.byte	0x1
 262 002e 08       		.byte	0x8
 263 002f E0000000 		.4byte	.LASF1
 264 0033 02       		.uleb128 0x2
 265 0034 02       		.byte	0x2
 266 0035 05       		.byte	0x5
 267 0036 06020000 		.4byte	.LASF2
 268 003a 02       		.uleb128 0x2
 269 003b 02       		.byte	0x2
 270 003c 07       		.byte	0x7
 271 003d 00010000 		.4byte	.LASF3
 272 0041 02       		.uleb128 0x2
 273 0042 04       		.byte	0x4
 274 0043 05       		.byte	0x5
 275 0044 69000000 		.4byte	.LASF4
 276 0048 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 13


 277 0049 1F010000 		.4byte	.LASF9
 278 004d 02       		.byte	0x2
 279 004e 41       		.byte	0x41
 280 004f 53000000 		.4byte	0x53
 281 0053 02       		.uleb128 0x2
 282 0054 04       		.byte	0x4
 283 0055 07       		.byte	0x7
 284 0056 EE000000 		.4byte	.LASF5
 285 005a 02       		.uleb128 0x2
 286 005b 08       		.byte	0x8
 287 005c 05       		.byte	0x5
 288 005d E9010000 		.4byte	.LASF6
 289 0061 02       		.uleb128 0x2
 290 0062 08       		.byte	0x8
 291 0063 07       		.byte	0x7
 292 0064 37010000 		.4byte	.LASF7
 293 0068 04       		.uleb128 0x4
 294 0069 04       		.byte	0x4
 295 006a 05       		.byte	0x5
 296 006b 696E7400 		.ascii	"int\000"
 297 006f 02       		.uleb128 0x2
 298 0070 04       		.byte	0x4
 299 0071 07       		.byte	0x7
 300 0072 2A010000 		.4byte	.LASF8
 301 0076 03       		.uleb128 0x3
 302 0077 18020000 		.4byte	.LASF10
 303 007b 03       		.byte	0x3
 304 007c 2D       		.byte	0x2d
 305 007d 48000000 		.4byte	0x48
 306 0081 02       		.uleb128 0x2
 307 0082 04       		.byte	0x4
 308 0083 07       		.byte	0x7
 309 0084 E0010000 		.4byte	.LASF11
 310 0088 02       		.uleb128 0x2
 311 0089 01       		.byte	0x1
 312 008a 08       		.byte	0x8
 313 008b F7010000 		.4byte	.LASF12
 314 008f 02       		.uleb128 0x2
 315 0090 08       		.byte	0x8
 316 0091 04       		.byte	0x4
 317 0092 18010000 		.4byte	.LASF13
 318 0096 02       		.uleb128 0x2
 319 0097 04       		.byte	0x4
 320 0098 04       		.byte	0x4
 321 0099 11000000 		.4byte	.LASF14
 322 009d 02       		.uleb128 0x2
 323 009e 08       		.byte	0x8
 324 009f 04       		.byte	0x4
 325 00a0 28020000 		.4byte	.LASF15
 326 00a4 05       		.uleb128 0x5
 327 00a5 FC010000 		.4byte	.LASF16
 328 00a9 04       		.byte	0x4
 329 00aa A501     		.2byte	0x1a5
 330 00ac 96000000 		.4byte	0x96
 331 00b0 06       		.uleb128 0x6
 332 00b1 04       		.byte	0x4
 333 00b2 A4000000 		.4byte	0xa4
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 14


 334 00b6 07       		.uleb128 0x7
 335 00b7 0C       		.byte	0xc
 336 00b8 04       		.byte	0x4
 337 00b9 1B05     		.2byte	0x51b
 338 00bb E7000000 		.4byte	0xe7
 339 00bf 08       		.uleb128 0x8
 340 00c0 45020000 		.4byte	.LASF17
 341 00c4 04       		.byte	0x4
 342 00c5 1D05     		.2byte	0x51d
 343 00c7 76000000 		.4byte	0x76
 344 00cb 00       		.byte	0
 345 00cc 08       		.uleb128 0x8
 346 00cd 0A000000 		.4byte	.LASF18
 347 00d1 04       		.byte	0x4
 348 00d2 1E05     		.2byte	0x51e
 349 00d4 B0000000 		.4byte	0xb0
 350 00d8 04       		.byte	0x4
 351 00d9 08       		.uleb128 0x8
 352 00da 10020000 		.4byte	.LASF19
 353 00de 04       		.byte	0x4
 354 00df 1F05     		.2byte	0x51f
 355 00e1 B0000000 		.4byte	0xb0
 356 00e5 08       		.byte	0x8
 357 00e6 00       		.byte	0
 358 00e7 05       		.uleb128 0x5
 359 00e8 B8000000 		.4byte	.LASF20
 360 00ec 04       		.byte	0x4
 361 00ed 2005     		.2byte	0x520
 362 00ef B6000000 		.4byte	0xb6
 363 00f3 09       		.uleb128 0x9
 364 00f4 4E000000 		.4byte	.LASF30
 365 00f8 01       		.byte	0x1
 366 00f9 A5       		.byte	0xa5
 367 00fa 00000000 		.4byte	.LFB82
 368 00fe 50010000 		.4byte	.LFE82-.LFB82
 369 0102 01       		.uleb128 0x1
 370 0103 9C       		.byte	0x9c
 371 0104 30020000 		.4byte	0x230
 372 0108 0A       		.uleb128 0xa
 373 0109 5300     		.ascii	"S\000"
 374 010b 01       		.byte	0x1
 375 010c A6       		.byte	0xa6
 376 010d 30020000 		.4byte	0x230
 377 0111 03       		.uleb128 0x3
 378 0112 91       		.byte	0x91
 379 0113 A47F     		.sleb128 -92
 380 0115 0B       		.uleb128 0xb
 381 0116 40020000 		.4byte	.LASF21
 382 011a 01       		.byte	0x1
 383 011b A7       		.byte	0xa7
 384 011c B0000000 		.4byte	0xb0
 385 0120 03       		.uleb128 0x3
 386 0121 91       		.byte	0x91
 387 0122 A07F     		.sleb128 -96
 388 0124 0B       		.uleb128 0xb
 389 0125 13010000 		.4byte	.LASF22
 390 0129 01       		.byte	0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 15


 391 012a A8       		.byte	0xa8
 392 012b B0000000 		.4byte	0xb0
 393 012f 03       		.uleb128 0x3
 394 0130 91       		.byte	0x91
 395 0131 9C7F     		.sleb128 -100
 396 0133 0B       		.uleb128 0xb
 397 0134 00000000 		.4byte	.LASF23
 398 0138 01       		.byte	0x1
 399 0139 A9       		.byte	0xa9
 400 013a 76000000 		.4byte	0x76
 401 013e 03       		.uleb128 0x3
 402 013f 91       		.byte	0x91
 403 0140 987F     		.sleb128 -104
 404 0142 0C       		.uleb128 0xc
 405 0143 70496E00 		.ascii	"pIn\000"
 406 0147 01       		.byte	0x1
 407 0148 AB       		.byte	0xab
 408 0149 B0000000 		.4byte	0xb0
 409 014d 02       		.uleb128 0x2
 410 014e 91       		.byte	0x91
 411 014f 6C       		.sleb128 -20
 412 0150 0D       		.uleb128 0xd
 413 0151 DB000000 		.4byte	.LASF24
 414 0155 01       		.byte	0x1
 415 0156 AC       		.byte	0xac
 416 0157 B0000000 		.4byte	0xb0
 417 015b 02       		.uleb128 0x2
 418 015c 91       		.byte	0x91
 419 015d 68       		.sleb128 -24
 420 015e 0D       		.uleb128 0xd
 421 015f 0A000000 		.4byte	.LASF18
 422 0163 01       		.byte	0x1
 423 0164 AD       		.byte	0xad
 424 0165 B0000000 		.4byte	0xb0
 425 0169 02       		.uleb128 0x2
 426 016a 91       		.byte	0x91
 427 016b 64       		.sleb128 -28
 428 016c 0D       		.uleb128 0xd
 429 016d 10020000 		.4byte	.LASF19
 430 0171 01       		.byte	0x1
 431 0172 AE       		.byte	0xae
 432 0173 B0000000 		.4byte	0xb0
 433 0177 02       		.uleb128 0x2
 434 0178 91       		.byte	0x91
 435 0179 60       		.sleb128 -32
 436 017a 0C       		.uleb128 0xc
 437 017b 61636300 		.ascii	"acc\000"
 438 017f 01       		.byte	0x1
 439 0180 AF       		.byte	0xaf
 440 0181 A4000000 		.4byte	0xa4
 441 0185 03       		.uleb128 0x3
 442 0186 91       		.byte	0x91
 443 0187 AC7F     		.sleb128 -84
 444 0189 0C       		.uleb128 0xc
 445 018a 623000   		.ascii	"b0\000"
 446 018d 01       		.byte	0x1
 447 018e B0       		.byte	0xb0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 16


 448 018f A4000000 		.4byte	0xa4
 449 0193 02       		.uleb128 0x2
 450 0194 91       		.byte	0x91
 451 0195 44       		.sleb128 -60
 452 0196 0C       		.uleb128 0xc
 453 0197 623100   		.ascii	"b1\000"
 454 019a 01       		.byte	0x1
 455 019b B0       		.byte	0xb0
 456 019c A4000000 		.4byte	0xa4
 457 01a0 02       		.uleb128 0x2
 458 01a1 91       		.byte	0x91
 459 01a2 40       		.sleb128 -64
 460 01a3 0C       		.uleb128 0xc
 461 01a4 623200   		.ascii	"b2\000"
 462 01a7 01       		.byte	0x1
 463 01a8 B0       		.byte	0xb0
 464 01a9 A4000000 		.4byte	0xa4
 465 01ad 03       		.uleb128 0x3
 466 01ae 91       		.byte	0x91
 467 01af BC7F     		.sleb128 -68
 468 01b1 0C       		.uleb128 0xc
 469 01b2 613100   		.ascii	"a1\000"
 470 01b5 01       		.byte	0x1
 471 01b6 B0       		.byte	0xb0
 472 01b7 A4000000 		.4byte	0xa4
 473 01bb 03       		.uleb128 0x3
 474 01bc 91       		.byte	0x91
 475 01bd B87F     		.sleb128 -72
 476 01bf 0C       		.uleb128 0xc
 477 01c0 613200   		.ascii	"a2\000"
 478 01c3 01       		.byte	0x1
 479 01c4 B0       		.byte	0xb0
 480 01c5 A4000000 		.4byte	0xa4
 481 01c9 03       		.uleb128 0x3
 482 01ca 91       		.byte	0x91
 483 01cb B47F     		.sleb128 -76
 484 01cd 0C       		.uleb128 0xc
 485 01ce 586E3100 		.ascii	"Xn1\000"
 486 01d2 01       		.byte	0x1
 487 01d3 B1       		.byte	0xb1
 488 01d4 A4000000 		.4byte	0xa4
 489 01d8 02       		.uleb128 0x2
 490 01d9 91       		.byte	0x91
 491 01da 5C       		.sleb128 -36
 492 01db 0C       		.uleb128 0xc
 493 01dc 586E3200 		.ascii	"Xn2\000"
 494 01e0 01       		.byte	0x1
 495 01e1 B1       		.byte	0xb1
 496 01e2 A4000000 		.4byte	0xa4
 497 01e6 02       		.uleb128 0x2
 498 01e7 91       		.byte	0x91
 499 01e8 58       		.sleb128 -40
 500 01e9 0C       		.uleb128 0xc
 501 01ea 596E3100 		.ascii	"Yn1\000"
 502 01ee 01       		.byte	0x1
 503 01ef B1       		.byte	0xb1
 504 01f0 A4000000 		.4byte	0xa4
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 17


 505 01f4 02       		.uleb128 0x2
 506 01f5 91       		.byte	0x91
 507 01f6 54       		.sleb128 -44
 508 01f7 0C       		.uleb128 0xc
 509 01f8 596E3200 		.ascii	"Yn2\000"
 510 01fc 01       		.byte	0x1
 511 01fd B1       		.byte	0xb1
 512 01fe A4000000 		.4byte	0xa4
 513 0202 02       		.uleb128 0x2
 514 0203 91       		.byte	0x91
 515 0204 50       		.sleb128 -48
 516 0205 0C       		.uleb128 0xc
 517 0206 586E00   		.ascii	"Xn\000"
 518 0209 01       		.byte	0x1
 519 020a B2       		.byte	0xb2
 520 020b A4000000 		.4byte	0xa4
 521 020f 03       		.uleb128 0x3
 522 0210 91       		.byte	0x91
 523 0211 B07F     		.sleb128 -80
 524 0213 0D       		.uleb128 0xd
 525 0214 21020000 		.4byte	.LASF25
 526 0218 01       		.byte	0x1
 527 0219 B3       		.byte	0xb3
 528 021a 76000000 		.4byte	0x76
 529 021e 02       		.uleb128 0x2
 530 021f 91       		.byte	0x91
 531 0220 4C       		.sleb128 -52
 532 0221 0D       		.uleb128 0xd
 533 0222 D5000000 		.4byte	.LASF26
 534 0226 01       		.byte	0x1
 535 0227 B3       		.byte	0xb3
 536 0228 76000000 		.4byte	0x76
 537 022c 02       		.uleb128 0x2
 538 022d 91       		.byte	0x91
 539 022e 48       		.sleb128 -56
 540 022f 00       		.byte	0
 541 0230 06       		.uleb128 0x6
 542 0231 04       		.byte	0x4
 543 0232 36020000 		.4byte	0x236
 544 0236 0E       		.uleb128 0xe
 545 0237 E7000000 		.4byte	0xe7
 546 023b 00       		.byte	0
 547              		.section	.debug_abbrev,"",%progbits
 548              	.Ldebug_abbrev0:
 549 0000 01       		.uleb128 0x1
 550 0001 11       		.uleb128 0x11
 551 0002 01       		.byte	0x1
 552 0003 25       		.uleb128 0x25
 553 0004 0E       		.uleb128 0xe
 554 0005 13       		.uleb128 0x13
 555 0006 0B       		.uleb128 0xb
 556 0007 03       		.uleb128 0x3
 557 0008 0E       		.uleb128 0xe
 558 0009 1B       		.uleb128 0x1b
 559 000a 0E       		.uleb128 0xe
 560 000b 55       		.uleb128 0x55
 561 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 18


 562 000d 11       		.uleb128 0x11
 563 000e 01       		.uleb128 0x1
 564 000f 10       		.uleb128 0x10
 565 0010 17       		.uleb128 0x17
 566 0011 00       		.byte	0
 567 0012 00       		.byte	0
 568 0013 02       		.uleb128 0x2
 569 0014 24       		.uleb128 0x24
 570 0015 00       		.byte	0
 571 0016 0B       		.uleb128 0xb
 572 0017 0B       		.uleb128 0xb
 573 0018 3E       		.uleb128 0x3e
 574 0019 0B       		.uleb128 0xb
 575 001a 03       		.uleb128 0x3
 576 001b 0E       		.uleb128 0xe
 577 001c 00       		.byte	0
 578 001d 00       		.byte	0
 579 001e 03       		.uleb128 0x3
 580 001f 16       		.uleb128 0x16
 581 0020 00       		.byte	0
 582 0021 03       		.uleb128 0x3
 583 0022 0E       		.uleb128 0xe
 584 0023 3A       		.uleb128 0x3a
 585 0024 0B       		.uleb128 0xb
 586 0025 3B       		.uleb128 0x3b
 587 0026 0B       		.uleb128 0xb
 588 0027 49       		.uleb128 0x49
 589 0028 13       		.uleb128 0x13
 590 0029 00       		.byte	0
 591 002a 00       		.byte	0
 592 002b 04       		.uleb128 0x4
 593 002c 24       		.uleb128 0x24
 594 002d 00       		.byte	0
 595 002e 0B       		.uleb128 0xb
 596 002f 0B       		.uleb128 0xb
 597 0030 3E       		.uleb128 0x3e
 598 0031 0B       		.uleb128 0xb
 599 0032 03       		.uleb128 0x3
 600 0033 08       		.uleb128 0x8
 601 0034 00       		.byte	0
 602 0035 00       		.byte	0
 603 0036 05       		.uleb128 0x5
 604 0037 16       		.uleb128 0x16
 605 0038 00       		.byte	0
 606 0039 03       		.uleb128 0x3
 607 003a 0E       		.uleb128 0xe
 608 003b 3A       		.uleb128 0x3a
 609 003c 0B       		.uleb128 0xb
 610 003d 3B       		.uleb128 0x3b
 611 003e 05       		.uleb128 0x5
 612 003f 49       		.uleb128 0x49
 613 0040 13       		.uleb128 0x13
 614 0041 00       		.byte	0
 615 0042 00       		.byte	0
 616 0043 06       		.uleb128 0x6
 617 0044 0F       		.uleb128 0xf
 618 0045 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 19


 619 0046 0B       		.uleb128 0xb
 620 0047 0B       		.uleb128 0xb
 621 0048 49       		.uleb128 0x49
 622 0049 13       		.uleb128 0x13
 623 004a 00       		.byte	0
 624 004b 00       		.byte	0
 625 004c 07       		.uleb128 0x7
 626 004d 13       		.uleb128 0x13
 627 004e 01       		.byte	0x1
 628 004f 0B       		.uleb128 0xb
 629 0050 0B       		.uleb128 0xb
 630 0051 3A       		.uleb128 0x3a
 631 0052 0B       		.uleb128 0xb
 632 0053 3B       		.uleb128 0x3b
 633 0054 05       		.uleb128 0x5
 634 0055 01       		.uleb128 0x1
 635 0056 13       		.uleb128 0x13
 636 0057 00       		.byte	0
 637 0058 00       		.byte	0
 638 0059 08       		.uleb128 0x8
 639 005a 0D       		.uleb128 0xd
 640 005b 00       		.byte	0
 641 005c 03       		.uleb128 0x3
 642 005d 0E       		.uleb128 0xe
 643 005e 3A       		.uleb128 0x3a
 644 005f 0B       		.uleb128 0xb
 645 0060 3B       		.uleb128 0x3b
 646 0061 05       		.uleb128 0x5
 647 0062 49       		.uleb128 0x49
 648 0063 13       		.uleb128 0x13
 649 0064 38       		.uleb128 0x38
 650 0065 0B       		.uleb128 0xb
 651 0066 00       		.byte	0
 652 0067 00       		.byte	0
 653 0068 09       		.uleb128 0x9
 654 0069 2E       		.uleb128 0x2e
 655 006a 01       		.byte	0x1
 656 006b 3F       		.uleb128 0x3f
 657 006c 19       		.uleb128 0x19
 658 006d 03       		.uleb128 0x3
 659 006e 0E       		.uleb128 0xe
 660 006f 3A       		.uleb128 0x3a
 661 0070 0B       		.uleb128 0xb
 662 0071 3B       		.uleb128 0x3b
 663 0072 0B       		.uleb128 0xb
 664 0073 27       		.uleb128 0x27
 665 0074 19       		.uleb128 0x19
 666 0075 11       		.uleb128 0x11
 667 0076 01       		.uleb128 0x1
 668 0077 12       		.uleb128 0x12
 669 0078 06       		.uleb128 0x6
 670 0079 40       		.uleb128 0x40
 671 007a 18       		.uleb128 0x18
 672 007b 9642     		.uleb128 0x2116
 673 007d 19       		.uleb128 0x19
 674 007e 01       		.uleb128 0x1
 675 007f 13       		.uleb128 0x13
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 20


 676 0080 00       		.byte	0
 677 0081 00       		.byte	0
 678 0082 0A       		.uleb128 0xa
 679 0083 05       		.uleb128 0x5
 680 0084 00       		.byte	0
 681 0085 03       		.uleb128 0x3
 682 0086 08       		.uleb128 0x8
 683 0087 3A       		.uleb128 0x3a
 684 0088 0B       		.uleb128 0xb
 685 0089 3B       		.uleb128 0x3b
 686 008a 0B       		.uleb128 0xb
 687 008b 49       		.uleb128 0x49
 688 008c 13       		.uleb128 0x13
 689 008d 02       		.uleb128 0x2
 690 008e 18       		.uleb128 0x18
 691 008f 00       		.byte	0
 692 0090 00       		.byte	0
 693 0091 0B       		.uleb128 0xb
 694 0092 05       		.uleb128 0x5
 695 0093 00       		.byte	0
 696 0094 03       		.uleb128 0x3
 697 0095 0E       		.uleb128 0xe
 698 0096 3A       		.uleb128 0x3a
 699 0097 0B       		.uleb128 0xb
 700 0098 3B       		.uleb128 0x3b
 701 0099 0B       		.uleb128 0xb
 702 009a 49       		.uleb128 0x49
 703 009b 13       		.uleb128 0x13
 704 009c 02       		.uleb128 0x2
 705 009d 18       		.uleb128 0x18
 706 009e 00       		.byte	0
 707 009f 00       		.byte	0
 708 00a0 0C       		.uleb128 0xc
 709 00a1 34       		.uleb128 0x34
 710 00a2 00       		.byte	0
 711 00a3 03       		.uleb128 0x3
 712 00a4 08       		.uleb128 0x8
 713 00a5 3A       		.uleb128 0x3a
 714 00a6 0B       		.uleb128 0xb
 715 00a7 3B       		.uleb128 0x3b
 716 00a8 0B       		.uleb128 0xb
 717 00a9 49       		.uleb128 0x49
 718 00aa 13       		.uleb128 0x13
 719 00ab 02       		.uleb128 0x2
 720 00ac 18       		.uleb128 0x18
 721 00ad 00       		.byte	0
 722 00ae 00       		.byte	0
 723 00af 0D       		.uleb128 0xd
 724 00b0 34       		.uleb128 0x34
 725 00b1 00       		.byte	0
 726 00b2 03       		.uleb128 0x3
 727 00b3 0E       		.uleb128 0xe
 728 00b4 3A       		.uleb128 0x3a
 729 00b5 0B       		.uleb128 0xb
 730 00b6 3B       		.uleb128 0x3b
 731 00b7 0B       		.uleb128 0xb
 732 00b8 49       		.uleb128 0x49
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 21


 733 00b9 13       		.uleb128 0x13
 734 00ba 02       		.uleb128 0x2
 735 00bb 18       		.uleb128 0x18
 736 00bc 00       		.byte	0
 737 00bd 00       		.byte	0
 738 00be 0E       		.uleb128 0xe
 739 00bf 26       		.uleb128 0x26
 740 00c0 00       		.byte	0
 741 00c1 49       		.uleb128 0x49
 742 00c2 13       		.uleb128 0x13
 743 00c3 00       		.byte	0
 744 00c4 00       		.byte	0
 745 00c5 00       		.byte	0
 746              		.section	.debug_aranges,"",%progbits
 747 0000 1C000000 		.4byte	0x1c
 748 0004 0200     		.2byte	0x2
 749 0006 00000000 		.4byte	.Ldebug_info0
 750 000a 04       		.byte	0x4
 751 000b 00       		.byte	0
 752 000c 0000     		.2byte	0
 753 000e 0000     		.2byte	0
 754 0010 00000000 		.4byte	.LFB82
 755 0014 50010000 		.4byte	.LFE82-.LFB82
 756 0018 00000000 		.4byte	0
 757 001c 00000000 		.4byte	0
 758              		.section	.debug_ranges,"",%progbits
 759              	.Ldebug_ranges0:
 760 0000 00000000 		.4byte	.LFB82
 761 0004 50010000 		.4byte	.LFE82
 762 0008 00000000 		.4byte	0
 763 000c 00000000 		.4byte	0
 764              		.section	.debug_line,"",%progbits
 765              	.Ldebug_line0:
 766 0000 9E010000 		.section	.debug_str,"MS",%progbits,1
 766      02005D01 
 766      00000201 
 766      FB0E0D00 
 766      01010101 
 767              	.LASF23:
 768 0000 626C6F63 		.ascii	"blockSize\000"
 768      6B53697A 
 768      6500
 769              	.LASF18:
 770 000a 70537461 		.ascii	"pState\000"
 770      746500
 771              	.LASF14:
 772 0011 666C6F61 		.ascii	"float\000"
 772      7400
 773              	.LASF28:
 774 0017 536F7572 		.ascii	"Source\\FilteringFunctions\\arm_biquad_cascade_df1_"
 774      63655C46 
 774      696C7465 
 774      72696E67 
 774      46756E63 
 775 0048 6633322E 		.ascii	"f32.c\000"
 775      6300
 776              	.LASF30:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 22


 777 004e 61726D5F 		.ascii	"arm_biquad_cascade_df1_f32\000"
 777      62697175 
 777      61645F63 
 777      61736361 
 777      64655F64 
 778              	.LASF4:
 779 0069 6C6F6E67 		.ascii	"long int\000"
 779      20696E74 
 779      00
 780              	.LASF29:
 781 0072 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 781      73657273 
 781      5C666E65 
 781      7665735C 
 781      446F6375 
 782 009f 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 782      655F7370 
 782      6565645F 
 782      73656E73 
 782      6F722E63 
 783              	.LASF20:
 784 00b8 61726D5F 		.ascii	"arm_biquad_casd_df1_inst_f32\000"
 784      62697175 
 784      61645F63 
 784      6173645F 
 784      6466315F 
 785              	.LASF26:
 786 00d5 73746167 		.ascii	"stage\000"
 786      6500
 787              	.LASF24:
 788 00db 704F7574 		.ascii	"pOut\000"
 788      00
 789              	.LASF1:
 790 00e0 756E7369 		.ascii	"unsigned char\000"
 790      676E6564 
 790      20636861 
 790      7200
 791              	.LASF5:
 792 00ee 6C6F6E67 		.ascii	"long unsigned int\000"
 792      20756E73 
 792      69676E65 
 792      6420696E 
 792      7400
 793              	.LASF3:
 794 0100 73686F72 		.ascii	"short unsigned int\000"
 794      7420756E 
 794      7369676E 
 794      65642069 
 794      6E7400
 795              	.LASF22:
 796 0113 70447374 		.ascii	"pDst\000"
 796      00
 797              	.LASF13:
 798 0118 646F7562 		.ascii	"double\000"
 798      6C6500
 799              	.LASF9:
 800 011f 5F5F7569 		.ascii	"__uint32_t\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 23


 800      6E743332 
 800      5F7400
 801              	.LASF8:
 802 012a 756E7369 		.ascii	"unsigned int\000"
 802      676E6564 
 802      20696E74 
 802      00
 803              	.LASF7:
 804 0137 6C6F6E67 		.ascii	"long long unsigned int\000"
 804      206C6F6E 
 804      6720756E 
 804      7369676E 
 804      65642069 
 805              	.LASF27:
 806 014e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 806      4320342E 
 806      392E3320 
 806      32303135 
 806      30333033 
 807 0181 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 807      20726576 
 807      6973696F 
 807      6E203232 
 807      31323230 
 808 01b4 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 808      30202D66 
 808      66756E63 
 808      74696F6E 
 808      2D736563 
 809              	.LASF11:
 810 01e0 73697A65 		.ascii	"sizetype\000"
 810      74797065 
 810      00
 811              	.LASF6:
 812 01e9 6C6F6E67 		.ascii	"long long int\000"
 812      206C6F6E 
 812      6720696E 
 812      7400
 813              	.LASF12:
 814 01f7 63686172 		.ascii	"char\000"
 814      00
 815              	.LASF16:
 816 01fc 666C6F61 		.ascii	"float32_t\000"
 816      7433325F 
 816      7400
 817              	.LASF2:
 818 0206 73686F72 		.ascii	"short int\000"
 818      7420696E 
 818      7400
 819              	.LASF19:
 820 0210 70436F65 		.ascii	"pCoeffs\000"
 820      66667300 
 821              	.LASF10:
 822 0218 75696E74 		.ascii	"uint32_t\000"
 822      33325F74 
 822      00
 823              	.LASF25:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccEOjI7W.s 			page 24


 824 0221 73616D70 		.ascii	"sample\000"
 824      6C6500
 825              	.LASF15:
 826 0228 6C6F6E67 		.ascii	"long double\000"
 826      20646F75 
 826      626C6500 
 827              	.LASF0:
 828 0234 7369676E 		.ascii	"signed char\000"
 828      65642063 
 828      68617200 
 829              	.LASF21:
 830 0240 70537263 		.ascii	"pSrc\000"
 830      00
 831              	.LASF17:
 832 0245 6E756D53 		.ascii	"numStages\000"
 832      74616765 
 832      7300
 833              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
