ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccmlslBb.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_cmplx_dot_prod_f32.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_fmul
  18              		.global	__aeabi_fadd
  19              		.global	__aeabi_fsub
  20              		.section	.text.arm_cmplx_dot_prod_f32,"ax",%progbits
  21              		.align	2
  22              		.global	arm_cmplx_dot_prod_f32
  23              		.code	16
  24              		.thumb_func
  25              		.type	arm_cmplx_dot_prod_f32, %function
  26              	arm_cmplx_dot_prod_f32:
  27              	.LFB82:
  28              		.file 1 "Source\\ComplexMathFunctions\\arm_cmplx_dot_prod_f32.c"
   1:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /* ----------------------------------------------------------------------
   2:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Project:      CMSIS DSP Library
   3:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Title:        arm_cmplx_dot_prod_f32.c
   4:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Description:  Floating-point complex dot product
   5:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
   6:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * $Date:        27. January 2017
   7:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * $Revision:    V.1.5.1
   8:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
   9:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Target Processor: Cortex-M cores
  10:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * -------------------------------------------------------------------- */
  11:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /*
  12:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  14:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  16:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * not use this file except in compliance with the License.
  18:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * You may obtain a copy of the License at
  19:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  20:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  22:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * See the License for the specific language governing permissions and
  26:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * limitations under the License.
  27:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  28:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  29:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #include "arm_math.h"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccmlslBb.s 			page 2


  30:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  31:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  32:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * @ingroup groupCmplxMath
  33:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  34:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  35:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  36:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * @defgroup cmplx_dot_prod Complex Dot Product
  37:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  38:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Computes the dot product of two complex vectors.
  39:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * The vectors are multiplied element-by-element and then summed.
  40:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  41:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * The <code>pSrcA</code> points to the first complex input vector and
  42:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * <code>pSrcB</code> points to the second complex input vector.
  43:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * <code>numSamples</code> specifies the number of complex samples
  44:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * and the data in each array is stored in an interleaved fashion
  45:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * (real, imag, real, imag, ...).
  46:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Each array has a total of <code>2*numSamples</code> values.
  47:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  48:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * The underlying algorithm is used:
  49:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * <pre>
  50:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * realResult=0;
  51:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * imagResult=0;
  52:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * for(n=0; n<numSamples; n++) {
  53:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *     realResult += pSrcA[(2*n)+0]*pSrcB[(2*n)+0] - pSrcA[(2*n)+1]*pSrcB[(2*n)+1];
  54:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *     imagResult += pSrcA[(2*n)+0]*pSrcB[(2*n)+1] + pSrcA[(2*n)+1]*pSrcB[(2*n)+0];
  55:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * }
  56:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * </pre>
  57:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  58:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * There are separate functions for floating-point, Q15, and Q31 data types.
  59:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  60:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  61:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  62:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * @addtogroup cmplx_dot_prod
  63:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * @{
  64:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  65:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  66:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  67:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * @brief  Floating-point complex dot product
  68:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * @param  *pSrcA points to the first input vector
  69:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * @param  *pSrcB points to the second input vector
  70:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * @param  numSamples number of complex samples in each vector
  71:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * @param  *realResult real part of the result returned here
  72:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * @param  *imagResult imaginary part of the result returned here
  73:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * @return none.
  74:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  75:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  76:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** void arm_cmplx_dot_prod_f32(
  77:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   float32_t * pSrcA,
  78:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   float32_t * pSrcB,
  79:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   uint32_t numSamples,
  80:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   float32_t * realResult,
  81:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   float32_t * imagResult)
  82:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** {
  29              		.loc 1 82 0
  30              		.cfi_startproc
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccmlslBb.s 			page 3


  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 8AB0     		sub	sp, sp, #40
  36              		.cfi_def_cfa_offset 48
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 F860     		str	r0, [r7, #12]
  40 0008 B960     		str	r1, [r7, #8]
  41 000a 7A60     		str	r2, [r7, #4]
  42 000c 3B60     		str	r3, [r7]
  83:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   float32_t real_sum = 0.0f, imag_sum = 0.0f;    /* Temporary result storage */
  43              		.loc 1 83 0
  44 000e 0023     		mov	r3, #0
  45 0010 7B62     		str	r3, [r7, #36]
  46 0012 0023     		mov	r3, #0
  47 0014 3B62     		str	r3, [r7, #32]
  84:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   float32_t a0,b0,c0,d0;
  85:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  86:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #if defined (ARM_MATH_DSP)
  87:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  88:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  89:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   uint32_t blkCnt;                               /* loop counter */
  90:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  91:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /*loop Unrolling */
  92:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   blkCnt = numSamples >> 2u;
  93:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  94:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  95:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  96:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   while (blkCnt > 0u)
  97:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   {
  98:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       a0 = *pSrcA++;
  99:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       b0 = *pSrcA++;
 100:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       c0 = *pSrcB++;
 101:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       d0 = *pSrcB++;
 102:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 103:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       real_sum += a0 * c0;
 104:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       imag_sum += a0 * d0;
 105:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       real_sum -= b0 * d0;
 106:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       imag_sum += b0 * c0;
 107:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 108:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       a0 = *pSrcA++;
 109:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       b0 = *pSrcA++;
 110:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       c0 = *pSrcB++;
 111:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       d0 = *pSrcB++;
 112:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 113:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       real_sum += a0 * c0;
 114:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       imag_sum += a0 * d0;
 115:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       real_sum -= b0 * d0;
 116:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       imag_sum += b0 * c0;
 117:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 118:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       a0 = *pSrcA++;
 119:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       b0 = *pSrcA++;
 120:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       c0 = *pSrcB++;
 121:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       d0 = *pSrcB++;
 122:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 123:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       real_sum += a0 * c0;
 124:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       imag_sum += a0 * d0;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccmlslBb.s 			page 4


 125:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       real_sum -= b0 * d0;
 126:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       imag_sum += b0 * c0;
 127:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 128:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       a0 = *pSrcA++;
 129:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       b0 = *pSrcA++;
 130:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       c0 = *pSrcB++;
 131:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       d0 = *pSrcB++;
 132:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 133:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       real_sum += a0 * c0;
 134:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       imag_sum += a0 * d0;
 135:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       real_sum -= b0 * d0;
 136:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       imag_sum += b0 * c0;
 137:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 138:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       /* Decrement the loop counter */
 139:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       blkCnt--;
 140:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   }
 141:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 142:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* If the numSamples is not a multiple of 4, compute any remaining output samples here.
 143:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****    ** No loop unrolling is used. */
 144:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   blkCnt = numSamples & 0x3u;
 145:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 146:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   while (blkCnt > 0u)
 147:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   {
 148:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       a0 = *pSrcA++;
 149:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       b0 = *pSrcA++;
 150:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       c0 = *pSrcB++;
 151:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       d0 = *pSrcB++;
 152:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 153:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       real_sum += a0 * c0;
 154:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       imag_sum += a0 * d0;
 155:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       real_sum -= b0 * d0;
 156:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       imag_sum += b0 * c0;
 157:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 158:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       /* Decrement the loop counter */
 159:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       blkCnt--;
 160:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   }
 161:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 162:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #else
 163:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 164:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Run the below code for Cortex-M0 */
 165:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 166:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   while (numSamples > 0u)
  48              		.loc 1 166 0
  49 0016 42E0     		b	.L2
  50              	.L3:
 167:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   {
 168:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       a0 = *pSrcA++;
  51              		.loc 1 168 0
  52 0018 FB68     		ldr	r3, [r7, #12]
  53 001a 1A1D     		add	r2, r3, #4
  54 001c FA60     		str	r2, [r7, #12]
  55 001e 1B68     		ldr	r3, [r3]
  56 0020 FB61     		str	r3, [r7, #28]
 169:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       b0 = *pSrcA++;
  57              		.loc 1 169 0
  58 0022 FB68     		ldr	r3, [r7, #12]
  59 0024 1A1D     		add	r2, r3, #4
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccmlslBb.s 			page 5


  60 0026 FA60     		str	r2, [r7, #12]
  61 0028 1B68     		ldr	r3, [r3]
  62 002a BB61     		str	r3, [r7, #24]
 170:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       c0 = *pSrcB++;
  63              		.loc 1 170 0
  64 002c BB68     		ldr	r3, [r7, #8]
  65 002e 1A1D     		add	r2, r3, #4
  66 0030 BA60     		str	r2, [r7, #8]
  67 0032 1B68     		ldr	r3, [r3]
  68 0034 7B61     		str	r3, [r7, #20]
 171:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       d0 = *pSrcB++;
  69              		.loc 1 171 0
  70 0036 BB68     		ldr	r3, [r7, #8]
  71 0038 1A1D     		add	r2, r3, #4
  72 003a BA60     		str	r2, [r7, #8]
  73 003c 1B68     		ldr	r3, [r3]
  74 003e 3B61     		str	r3, [r7, #16]
 172:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 173:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       real_sum += a0 * c0;
  75              		.loc 1 173 0
  76 0040 F869     		ldr	r0, [r7, #28]
  77 0042 7969     		ldr	r1, [r7, #20]
  78 0044 FFF7FEFF 		bl	__aeabi_fmul
  79 0048 031C     		add	r3, r0, #0
  80 004a 786A     		ldr	r0, [r7, #36]
  81 004c 191C     		add	r1, r3, #0
  82 004e FFF7FEFF 		bl	__aeabi_fadd
  83 0052 031C     		add	r3, r0, #0
  84 0054 7B62     		str	r3, [r7, #36]
 174:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       imag_sum += a0 * d0;
  85              		.loc 1 174 0
  86 0056 F869     		ldr	r0, [r7, #28]
  87 0058 3969     		ldr	r1, [r7, #16]
  88 005a FFF7FEFF 		bl	__aeabi_fmul
  89 005e 031C     		add	r3, r0, #0
  90 0060 386A     		ldr	r0, [r7, #32]
  91 0062 191C     		add	r1, r3, #0
  92 0064 FFF7FEFF 		bl	__aeabi_fadd
  93 0068 031C     		add	r3, r0, #0
  94 006a 3B62     		str	r3, [r7, #32]
 175:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       real_sum -= b0 * d0;
  95              		.loc 1 175 0
  96 006c B869     		ldr	r0, [r7, #24]
  97 006e 3969     		ldr	r1, [r7, #16]
  98 0070 FFF7FEFF 		bl	__aeabi_fmul
  99 0074 031C     		add	r3, r0, #0
 100 0076 786A     		ldr	r0, [r7, #36]
 101 0078 191C     		add	r1, r3, #0
 102 007a FFF7FEFF 		bl	__aeabi_fsub
 103 007e 031C     		add	r3, r0, #0
 104 0080 7B62     		str	r3, [r7, #36]
 176:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       imag_sum += b0 * c0;
 105              		.loc 1 176 0
 106 0082 B869     		ldr	r0, [r7, #24]
 107 0084 7969     		ldr	r1, [r7, #20]
 108 0086 FFF7FEFF 		bl	__aeabi_fmul
 109 008a 031C     		add	r3, r0, #0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccmlslBb.s 			page 6


 110 008c 386A     		ldr	r0, [r7, #32]
 111 008e 191C     		add	r1, r3, #0
 112 0090 FFF7FEFF 		bl	__aeabi_fadd
 113 0094 031C     		add	r3, r0, #0
 114 0096 3B62     		str	r3, [r7, #32]
 177:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 178:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       /* Decrement the loop counter */
 179:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       numSamples--;
 115              		.loc 1 179 0
 116 0098 7B68     		ldr	r3, [r7, #4]
 117 009a 013B     		sub	r3, r3, #1
 118 009c 7B60     		str	r3, [r7, #4]
 119              	.L2:
 166:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   {
 120              		.loc 1 166 0
 121 009e 7B68     		ldr	r3, [r7, #4]
 122 00a0 002B     		cmp	r3, #0
 123 00a2 B9D1     		bne	.L3
 180:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   }
 181:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 182:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 183:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 184:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Store the real and imaginary results in the destination buffers */
 185:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   *realResult = real_sum;
 124              		.loc 1 185 0
 125 00a4 3B68     		ldr	r3, [r7]
 126 00a6 7A6A     		ldr	r2, [r7, #36]
 127 00a8 1A60     		str	r2, [r3]
 186:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   *imagResult = imag_sum;
 128              		.loc 1 186 0
 129 00aa 3B6B     		ldr	r3, [r7, #48]
 130 00ac 3A6A     		ldr	r2, [r7, #32]
 131 00ae 1A60     		str	r2, [r3]
 187:Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** }
 132              		.loc 1 187 0
 133 00b0 BD46     		mov	sp, r7
 134 00b2 0AB0     		add	sp, sp, #40
 135              		@ sp needed
 136 00b4 80BD     		pop	{r7, pc}
 137              		.cfi_endproc
 138              	.LFE82:
 139              		.size	arm_cmplx_dot_prod_f32, .-arm_cmplx_dot_prod_f32
 140 00b6 C046     		.text
 141              	.Letext0:
 142              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 143              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 144              		.file 4 ".\\Include/arm_math.h"
 145              		.section	.debug_info,"",%progbits
 146              	.Ldebug_info0:
 147 0000 5B010000 		.4byte	0x15b
 148 0004 0400     		.2byte	0x4
 149 0006 00000000 		.4byte	.Ldebug_abbrev0
 150 000a 04       		.byte	0x4
 151 000b 01       		.uleb128 0x1
 152 000c 2C010000 		.4byte	.LASF24
 153 0010 01       		.byte	0x1
 154 0011 AD000000 		.4byte	.LASF25
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccmlslBb.s 			page 7


 155 0015 23000000 		.4byte	.LASF26
 156 0019 00000000 		.4byte	.Ldebug_ranges0+0
 157 001d 00000000 		.4byte	0
 158 0021 00000000 		.4byte	.Ldebug_line0
 159 0025 02       		.uleb128 0x2
 160 0026 01       		.byte	0x1
 161 0027 06       		.byte	0x6
 162 0028 15020000 		.4byte	.LASF0
 163 002c 02       		.uleb128 0x2
 164 002d 01       		.byte	0x1
 165 002e 08       		.byte	0x8
 166 002f 7A000000 		.4byte	.LASF1
 167 0033 02       		.uleb128 0x2
 168 0034 02       		.byte	0x2
 169 0035 05       		.byte	0x5
 170 0036 ED010000 		.4byte	.LASF2
 171 003a 02       		.uleb128 0x2
 172 003b 02       		.byte	0x2
 173 003c 07       		.byte	0x7
 174 003d 9A000000 		.4byte	.LASF3
 175 0041 02       		.uleb128 0x2
 176 0042 04       		.byte	0x4
 177 0043 05       		.byte	0x5
 178 0044 00020000 		.4byte	.LASF4
 179 0048 03       		.uleb128 0x3
 180 0049 F4000000 		.4byte	.LASF9
 181 004d 02       		.byte	0x2
 182 004e 41       		.byte	0x41
 183 004f 53000000 		.4byte	0x53
 184 0053 02       		.uleb128 0x2
 185 0054 04       		.byte	0x4
 186 0055 07       		.byte	0x7
 187 0056 88000000 		.4byte	.LASF5
 188 005a 02       		.uleb128 0x2
 189 005b 08       		.byte	0x8
 190 005c 05       		.byte	0x5
 191 005d C7010000 		.4byte	.LASF6
 192 0061 02       		.uleb128 0x2
 193 0062 08       		.byte	0x8
 194 0063 07       		.byte	0x7
 195 0064 15010000 		.4byte	.LASF7
 196 0068 04       		.uleb128 0x4
 197 0069 04       		.byte	0x4
 198 006a 05       		.byte	0x5
 199 006b 696E7400 		.ascii	"int\000"
 200 006f 02       		.uleb128 0x2
 201 0070 04       		.byte	0x4
 202 0071 07       		.byte	0x7
 203 0072 08010000 		.4byte	.LASF8
 204 0076 03       		.uleb128 0x3
 205 0077 F7010000 		.4byte	.LASF10
 206 007b 03       		.byte	0x3
 207 007c 2D       		.byte	0x2d
 208 007d 48000000 		.4byte	0x48
 209 0081 02       		.uleb128 0x2
 210 0082 04       		.byte	0x4
 211 0083 07       		.byte	0x7
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccmlslBb.s 			page 8


 212 0084 BE010000 		.4byte	.LASF11
 213 0088 02       		.uleb128 0x2
 214 0089 01       		.byte	0x1
 215 008a 08       		.byte	0x8
 216 008b DE010000 		.4byte	.LASF12
 217 008f 02       		.uleb128 0x2
 218 0090 08       		.byte	0x8
 219 0091 04       		.byte	0x4
 220 0092 ED000000 		.4byte	.LASF13
 221 0096 02       		.uleb128 0x2
 222 0097 04       		.byte	0x4
 223 0098 04       		.byte	0x4
 224 0099 69000000 		.4byte	.LASF14
 225 009d 02       		.uleb128 0x2
 226 009e 08       		.byte	0x8
 227 009f 04       		.byte	0x4
 228 00a0 09020000 		.4byte	.LASF15
 229 00a4 05       		.uleb128 0x5
 230 00a5 E3010000 		.4byte	.LASF16
 231 00a9 04       		.byte	0x4
 232 00aa A501     		.2byte	0x1a5
 233 00ac 96000000 		.4byte	0x96
 234 00b0 06       		.uleb128 0x6
 235 00b1 04       		.byte	0x4
 236 00b2 A4000000 		.4byte	0xa4
 237 00b6 07       		.uleb128 0x7
 238 00b7 0C000000 		.4byte	.LASF27
 239 00bb 01       		.byte	0x1
 240 00bc 4C       		.byte	0x4c
 241 00bd 00000000 		.4byte	.LFB82
 242 00c1 B6000000 		.4byte	.LFE82-.LFB82
 243 00c5 01       		.uleb128 0x1
 244 00c6 9C       		.byte	0x9c
 245 00c7 08       		.uleb128 0x8
 246 00c8 00000000 		.4byte	.LASF17
 247 00cc 01       		.byte	0x1
 248 00cd 4D       		.byte	0x4d
 249 00ce B0000000 		.4byte	0xb0
 250 00d2 02       		.uleb128 0x2
 251 00d3 91       		.byte	0x91
 252 00d4 5C       		.sleb128 -36
 253 00d5 08       		.uleb128 0x8
 254 00d6 06000000 		.4byte	.LASF18
 255 00da 01       		.byte	0x1
 256 00db 4E       		.byte	0x4e
 257 00dc B0000000 		.4byte	0xb0
 258 00e0 02       		.uleb128 0x2
 259 00e1 91       		.byte	0x91
 260 00e2 58       		.sleb128 -40
 261 00e3 08       		.uleb128 0x8
 262 00e4 21020000 		.4byte	.LASF19
 263 00e8 01       		.byte	0x1
 264 00e9 4F       		.byte	0x4f
 265 00ea 76000000 		.4byte	0x76
 266 00ee 02       		.uleb128 0x2
 267 00ef 91       		.byte	0x91
 268 00f0 54       		.sleb128 -44
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccmlslBb.s 			page 9


 269 00f1 08       		.uleb128 0x8
 270 00f2 E2000000 		.4byte	.LASF20
 271 00f6 01       		.byte	0x1
 272 00f7 50       		.byte	0x50
 273 00f8 B0000000 		.4byte	0xb0
 274 00fc 02       		.uleb128 0x2
 275 00fd 91       		.byte	0x91
 276 00fe 50       		.sleb128 -48
 277 00ff 08       		.uleb128 0x8
 278 0100 6F000000 		.4byte	.LASF21
 279 0104 01       		.byte	0x1
 280 0105 51       		.byte	0x51
 281 0106 B0000000 		.4byte	0xb0
 282 010a 02       		.uleb128 0x2
 283 010b 91       		.byte	0x91
 284 010c 00       		.sleb128 0
 285 010d 09       		.uleb128 0x9
 286 010e FF000000 		.4byte	.LASF22
 287 0112 01       		.byte	0x1
 288 0113 53       		.byte	0x53
 289 0114 A4000000 		.4byte	0xa4
 290 0118 02       		.uleb128 0x2
 291 0119 91       		.byte	0x91
 292 011a 74       		.sleb128 -12
 293 011b 09       		.uleb128 0x9
 294 011c D5010000 		.4byte	.LASF23
 295 0120 01       		.byte	0x1
 296 0121 53       		.byte	0x53
 297 0122 A4000000 		.4byte	0xa4
 298 0126 02       		.uleb128 0x2
 299 0127 91       		.byte	0x91
 300 0128 70       		.sleb128 -16
 301 0129 0A       		.uleb128 0xa
 302 012a 613000   		.ascii	"a0\000"
 303 012d 01       		.byte	0x1
 304 012e 54       		.byte	0x54
 305 012f A4000000 		.4byte	0xa4
 306 0133 02       		.uleb128 0x2
 307 0134 91       		.byte	0x91
 308 0135 6C       		.sleb128 -20
 309 0136 0A       		.uleb128 0xa
 310 0137 623000   		.ascii	"b0\000"
 311 013a 01       		.byte	0x1
 312 013b 54       		.byte	0x54
 313 013c A4000000 		.4byte	0xa4
 314 0140 02       		.uleb128 0x2
 315 0141 91       		.byte	0x91
 316 0142 68       		.sleb128 -24
 317 0143 0A       		.uleb128 0xa
 318 0144 633000   		.ascii	"c0\000"
 319 0147 01       		.byte	0x1
 320 0148 54       		.byte	0x54
 321 0149 A4000000 		.4byte	0xa4
 322 014d 02       		.uleb128 0x2
 323 014e 91       		.byte	0x91
 324 014f 64       		.sleb128 -28
 325 0150 0A       		.uleb128 0xa
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccmlslBb.s 			page 10


 326 0151 643000   		.ascii	"d0\000"
 327 0154 01       		.byte	0x1
 328 0155 54       		.byte	0x54
 329 0156 A4000000 		.4byte	0xa4
 330 015a 02       		.uleb128 0x2
 331 015b 91       		.byte	0x91
 332 015c 60       		.sleb128 -32
 333 015d 00       		.byte	0
 334 015e 00       		.byte	0
 335              		.section	.debug_abbrev,"",%progbits
 336              	.Ldebug_abbrev0:
 337 0000 01       		.uleb128 0x1
 338 0001 11       		.uleb128 0x11
 339 0002 01       		.byte	0x1
 340 0003 25       		.uleb128 0x25
 341 0004 0E       		.uleb128 0xe
 342 0005 13       		.uleb128 0x13
 343 0006 0B       		.uleb128 0xb
 344 0007 03       		.uleb128 0x3
 345 0008 0E       		.uleb128 0xe
 346 0009 1B       		.uleb128 0x1b
 347 000a 0E       		.uleb128 0xe
 348 000b 55       		.uleb128 0x55
 349 000c 17       		.uleb128 0x17
 350 000d 11       		.uleb128 0x11
 351 000e 01       		.uleb128 0x1
 352 000f 10       		.uleb128 0x10
 353 0010 17       		.uleb128 0x17
 354 0011 00       		.byte	0
 355 0012 00       		.byte	0
 356 0013 02       		.uleb128 0x2
 357 0014 24       		.uleb128 0x24
 358 0015 00       		.byte	0
 359 0016 0B       		.uleb128 0xb
 360 0017 0B       		.uleb128 0xb
 361 0018 3E       		.uleb128 0x3e
 362 0019 0B       		.uleb128 0xb
 363 001a 03       		.uleb128 0x3
 364 001b 0E       		.uleb128 0xe
 365 001c 00       		.byte	0
 366 001d 00       		.byte	0
 367 001e 03       		.uleb128 0x3
 368 001f 16       		.uleb128 0x16
 369 0020 00       		.byte	0
 370 0021 03       		.uleb128 0x3
 371 0022 0E       		.uleb128 0xe
 372 0023 3A       		.uleb128 0x3a
 373 0024 0B       		.uleb128 0xb
 374 0025 3B       		.uleb128 0x3b
 375 0026 0B       		.uleb128 0xb
 376 0027 49       		.uleb128 0x49
 377 0028 13       		.uleb128 0x13
 378 0029 00       		.byte	0
 379 002a 00       		.byte	0
 380 002b 04       		.uleb128 0x4
 381 002c 24       		.uleb128 0x24
 382 002d 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccmlslBb.s 			page 11


 383 002e 0B       		.uleb128 0xb
 384 002f 0B       		.uleb128 0xb
 385 0030 3E       		.uleb128 0x3e
 386 0031 0B       		.uleb128 0xb
 387 0032 03       		.uleb128 0x3
 388 0033 08       		.uleb128 0x8
 389 0034 00       		.byte	0
 390 0035 00       		.byte	0
 391 0036 05       		.uleb128 0x5
 392 0037 16       		.uleb128 0x16
 393 0038 00       		.byte	0
 394 0039 03       		.uleb128 0x3
 395 003a 0E       		.uleb128 0xe
 396 003b 3A       		.uleb128 0x3a
 397 003c 0B       		.uleb128 0xb
 398 003d 3B       		.uleb128 0x3b
 399 003e 05       		.uleb128 0x5
 400 003f 49       		.uleb128 0x49
 401 0040 13       		.uleb128 0x13
 402 0041 00       		.byte	0
 403 0042 00       		.byte	0
 404 0043 06       		.uleb128 0x6
 405 0044 0F       		.uleb128 0xf
 406 0045 00       		.byte	0
 407 0046 0B       		.uleb128 0xb
 408 0047 0B       		.uleb128 0xb
 409 0048 49       		.uleb128 0x49
 410 0049 13       		.uleb128 0x13
 411 004a 00       		.byte	0
 412 004b 00       		.byte	0
 413 004c 07       		.uleb128 0x7
 414 004d 2E       		.uleb128 0x2e
 415 004e 01       		.byte	0x1
 416 004f 3F       		.uleb128 0x3f
 417 0050 19       		.uleb128 0x19
 418 0051 03       		.uleb128 0x3
 419 0052 0E       		.uleb128 0xe
 420 0053 3A       		.uleb128 0x3a
 421 0054 0B       		.uleb128 0xb
 422 0055 3B       		.uleb128 0x3b
 423 0056 0B       		.uleb128 0xb
 424 0057 27       		.uleb128 0x27
 425 0058 19       		.uleb128 0x19
 426 0059 11       		.uleb128 0x11
 427 005a 01       		.uleb128 0x1
 428 005b 12       		.uleb128 0x12
 429 005c 06       		.uleb128 0x6
 430 005d 40       		.uleb128 0x40
 431 005e 18       		.uleb128 0x18
 432 005f 9642     		.uleb128 0x2116
 433 0061 19       		.uleb128 0x19
 434 0062 00       		.byte	0
 435 0063 00       		.byte	0
 436 0064 08       		.uleb128 0x8
 437 0065 05       		.uleb128 0x5
 438 0066 00       		.byte	0
 439 0067 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccmlslBb.s 			page 12


 440 0068 0E       		.uleb128 0xe
 441 0069 3A       		.uleb128 0x3a
 442 006a 0B       		.uleb128 0xb
 443 006b 3B       		.uleb128 0x3b
 444 006c 0B       		.uleb128 0xb
 445 006d 49       		.uleb128 0x49
 446 006e 13       		.uleb128 0x13
 447 006f 02       		.uleb128 0x2
 448 0070 18       		.uleb128 0x18
 449 0071 00       		.byte	0
 450 0072 00       		.byte	0
 451 0073 09       		.uleb128 0x9
 452 0074 34       		.uleb128 0x34
 453 0075 00       		.byte	0
 454 0076 03       		.uleb128 0x3
 455 0077 0E       		.uleb128 0xe
 456 0078 3A       		.uleb128 0x3a
 457 0079 0B       		.uleb128 0xb
 458 007a 3B       		.uleb128 0x3b
 459 007b 0B       		.uleb128 0xb
 460 007c 49       		.uleb128 0x49
 461 007d 13       		.uleb128 0x13
 462 007e 02       		.uleb128 0x2
 463 007f 18       		.uleb128 0x18
 464 0080 00       		.byte	0
 465 0081 00       		.byte	0
 466 0082 0A       		.uleb128 0xa
 467 0083 34       		.uleb128 0x34
 468 0084 00       		.byte	0
 469 0085 03       		.uleb128 0x3
 470 0086 08       		.uleb128 0x8
 471 0087 3A       		.uleb128 0x3a
 472 0088 0B       		.uleb128 0xb
 473 0089 3B       		.uleb128 0x3b
 474 008a 0B       		.uleb128 0xb
 475 008b 49       		.uleb128 0x49
 476 008c 13       		.uleb128 0x13
 477 008d 02       		.uleb128 0x2
 478 008e 18       		.uleb128 0x18
 479 008f 00       		.byte	0
 480 0090 00       		.byte	0
 481 0091 00       		.byte	0
 482              		.section	.debug_aranges,"",%progbits
 483 0000 1C000000 		.4byte	0x1c
 484 0004 0200     		.2byte	0x2
 485 0006 00000000 		.4byte	.Ldebug_info0
 486 000a 04       		.byte	0x4
 487 000b 00       		.byte	0
 488 000c 0000     		.2byte	0
 489 000e 0000     		.2byte	0
 490 0010 00000000 		.4byte	.LFB82
 491 0014 B6000000 		.4byte	.LFE82-.LFB82
 492 0018 00000000 		.4byte	0
 493 001c 00000000 		.4byte	0
 494              		.section	.debug_ranges,"",%progbits
 495              	.Ldebug_ranges0:
 496 0000 00000000 		.4byte	.LFB82
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccmlslBb.s 			page 13


 497 0004 B6000000 		.4byte	.LFE82
 498 0008 00000000 		.4byte	0
 499 000c 00000000 		.4byte	0
 500              		.section	.debug_line,"",%progbits
 501              	.Ldebug_line0:
 502 0000 87010000 		.section	.debug_str,"MS",%progbits,1
 502      02005B01 
 502      00000201 
 502      FB0E0D00 
 502      01010101 
 503              	.LASF17:
 504 0000 70537263 		.ascii	"pSrcA\000"
 504      4100
 505              	.LASF18:
 506 0006 70537263 		.ascii	"pSrcB\000"
 506      4200
 507              	.LASF27:
 508 000c 61726D5F 		.ascii	"arm_cmplx_dot_prod_f32\000"
 508      636D706C 
 508      785F646F 
 508      745F7072 
 508      6F645F66 
 509              	.LASF26:
 510 0023 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 510      73657273 
 510      5C666E65 
 510      7665735C 
 510      446F6375 
 511 0050 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 511      655F7370 
 511      6565645F 
 511      73656E73 
 511      6F722E63 
 512              	.LASF14:
 513 0069 666C6F61 		.ascii	"float\000"
 513      7400
 514              	.LASF21:
 515 006f 696D6167 		.ascii	"imagResult\000"
 515      52657375 
 515      6C7400
 516              	.LASF1:
 517 007a 756E7369 		.ascii	"unsigned char\000"
 517      676E6564 
 517      20636861 
 517      7200
 518              	.LASF5:
 519 0088 6C6F6E67 		.ascii	"long unsigned int\000"
 519      20756E73 
 519      69676E65 
 519      6420696E 
 519      7400
 520              	.LASF3:
 521 009a 73686F72 		.ascii	"short unsigned int\000"
 521      7420756E 
 521      7369676E 
 521      65642069 
 521      6E7400
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccmlslBb.s 			page 14


 522              	.LASF25:
 523 00ad 536F7572 		.ascii	"Source\\ComplexMathFunctions\\arm_cmplx_dot_prod_f3"
 523      63655C43 
 523      6F6D706C 
 523      65784D61 
 523      74684675 
 524 00de 322E6300 		.ascii	"2.c\000"
 525              	.LASF20:
 526 00e2 7265616C 		.ascii	"realResult\000"
 526      52657375 
 526      6C7400
 527              	.LASF13:
 528 00ed 646F7562 		.ascii	"double\000"
 528      6C6500
 529              	.LASF9:
 530 00f4 5F5F7569 		.ascii	"__uint32_t\000"
 530      6E743332 
 530      5F7400
 531              	.LASF22:
 532 00ff 7265616C 		.ascii	"real_sum\000"
 532      5F73756D 
 532      00
 533              	.LASF8:
 534 0108 756E7369 		.ascii	"unsigned int\000"
 534      676E6564 
 534      20696E74 
 534      00
 535              	.LASF7:
 536 0115 6C6F6E67 		.ascii	"long long unsigned int\000"
 536      206C6F6E 
 536      6720756E 
 536      7369676E 
 536      65642069 
 537              	.LASF24:
 538 012c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 538      4320342E 
 538      392E3320 
 538      32303135 
 538      30333033 
 539 015f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 539      20726576 
 539      6973696F 
 539      6E203232 
 539      31323230 
 540 0192 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 540      30202D66 
 540      66756E63 
 540      74696F6E 
 540      2D736563 
 541              	.LASF11:
 542 01be 73697A65 		.ascii	"sizetype\000"
 542      74797065 
 542      00
 543              	.LASF6:
 544 01c7 6C6F6E67 		.ascii	"long long int\000"
 544      206C6F6E 
 544      6720696E 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccmlslBb.s 			page 15


 544      7400
 545              	.LASF23:
 546 01d5 696D6167 		.ascii	"imag_sum\000"
 546      5F73756D 
 546      00
 547              	.LASF12:
 548 01de 63686172 		.ascii	"char\000"
 548      00
 549              	.LASF16:
 550 01e3 666C6F61 		.ascii	"float32_t\000"
 550      7433325F 
 550      7400
 551              	.LASF2:
 552 01ed 73686F72 		.ascii	"short int\000"
 552      7420696E 
 552      7400
 553              	.LASF10:
 554 01f7 75696E74 		.ascii	"uint32_t\000"
 554      33325F74 
 554      00
 555              	.LASF4:
 556 0200 6C6F6E67 		.ascii	"long int\000"
 556      20696E74 
 556      00
 557              	.LASF15:
 558 0209 6C6F6E67 		.ascii	"long double\000"
 558      20646F75 
 558      626C6500 
 559              	.LASF0:
 560 0215 7369676E 		.ascii	"signed char\000"
 560      65642063 
 560      68617200 
 561              	.LASF19:
 562 0221 6E756D53 		.ascii	"numSamples\000"
 562      616D706C 
 562      657300
 563              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
