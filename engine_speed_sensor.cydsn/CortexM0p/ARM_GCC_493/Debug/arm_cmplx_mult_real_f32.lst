ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccTkQGkc.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_cmplx_mult_real_f32.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_fmul
  18              		.section	.text.arm_cmplx_mult_real_f32,"ax",%progbits
  19              		.align	2
  20              		.global	arm_cmplx_mult_real_f32
  21              		.code	16
  22              		.thumb_func
  23              		.type	arm_cmplx_mult_real_f32, %function
  24              	arm_cmplx_mult_real_f32:
  25              	.LFB82:
  26              		.file 1 "Source\\ComplexMathFunctions\\arm_cmplx_mult_real_f32.c"
   1:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** /* ----------------------------------------------------------------------
   2:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Project:      CMSIS DSP Library
   3:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Title:        arm_cmplx_mult_real_f32.c
   4:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Description:  Floating-point complex by real multiplication
   5:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
   6:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * $Date:        27. January 2017
   7:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * $Revision:    V.1.5.1
   8:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
   9:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Target Processor: Cortex-M cores
  10:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * -------------------------------------------------------------------- */
  11:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** /*
  12:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  14:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  16:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * not use this file except in compliance with the License.
  18:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * You may obtain a copy of the License at
  19:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  20:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  22:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * See the License for the specific language governing permissions and
  26:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * limitations under the License.
  27:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  */
  28:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  29:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** #include "arm_math.h"
  30:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  31:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** /**
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccTkQGkc.s 			page 2


  32:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @ingroup groupCmplxMath
  33:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  */
  34:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  35:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** /**
  36:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @defgroup CmplxByRealMult Complex-by-Real Multiplication
  37:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  38:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Multiplies a complex vector by a real vector and generates a complex result.
  39:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * The data in the complex arrays is stored in an interleaved fashion
  40:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * (real, imag, real, imag, ...).
  41:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * The parameter <code>numSamples</code> represents the number of complex
  42:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * samples processed.  The complex arrays have a total of <code>2*numSamples</code>
  43:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * real values while the real array has a total of <code>numSamples</code>
  44:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * real values.
  45:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  46:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * The underlying algorithm is used:
  47:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  48:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * <pre>
  49:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * for(n=0; n<numSamples; n++) {
  50:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *     pCmplxDst[(2*n)+0] = pSrcCmplx[(2*n)+0] * pSrcReal[n];
  51:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *     pCmplxDst[(2*n)+1] = pSrcCmplx[(2*n)+1] * pSrcReal[n];
  52:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * }
  53:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * </pre>
  54:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  55:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * There are separate functions for floating-point, Q15, and Q31 data types.
  56:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  */
  57:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  58:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** /**
  59:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @addtogroup CmplxByRealMult
  60:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @{
  61:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  */
  62:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  63:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  64:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** /**
  65:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @brief  Floating-point complex-by-real multiplication
  66:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @param[in]  *pSrcCmplx points to the complex input vector
  67:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @param[in]  *pSrcReal points to the real input vector
  68:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @param[out]  *pCmplxDst points to the complex output vector
  69:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @param[in]  numSamples number of samples in each vector
  70:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * @return none.
  71:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  */
  72:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  73:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** void arm_cmplx_mult_real_f32(
  74:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   float32_t * pSrcCmplx,
  75:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   float32_t * pSrcReal,
  76:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   float32_t * pCmplxDst,
  77:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   uint32_t numSamples)
  78:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** {
  27              		.loc 1 78 0
  28              		.cfi_startproc
  29 0000 90B5     		push	{r4, r7, lr}
  30              		.cfi_def_cfa_offset 12
  31              		.cfi_offset 4, -12
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 87B0     		sub	sp, sp, #28
  35              		.cfi_def_cfa_offset 40
  36 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccTkQGkc.s 			page 3


  37              		.cfi_def_cfa_register 7
  38 0006 F860     		str	r0, [r7, #12]
  39 0008 B960     		str	r1, [r7, #8]
  40 000a 7A60     		str	r2, [r7, #4]
  41 000c 3B60     		str	r3, [r7]
  79:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   float32_t in;                                  /* Temporary variable to store input value */
  80:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   uint32_t blkCnt;                               /* loop counters */
  81:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  82:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** #if defined (ARM_MATH_DSP)
  83:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  84:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  85:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   float32_t inA1, inA2, inA3, inA4;              /* Temporary variables to hold input data */
  86:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   float32_t inA5, inA6, inA7, inA8;              /* Temporary variables to hold input data */
  87:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   float32_t inB1, inB2, inB3, inB4;              /* Temporary variables to hold input data */
  88:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   float32_t out1, out2, out3, out4;              /* Temporary variables to hold output data */
  89:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   float32_t out5, out6, out7, out8;              /* Temporary variables to hold output data */
  90:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  91:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   /* loop Unrolling */
  92:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   blkCnt = numSamples >> 2u;
  93:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  94:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  95:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  96:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   while (blkCnt > 0u)
  97:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   {
  98:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* C[2 * i] = A[2 * i] * B[i].            */
  99:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* C[2 * i + 1] = A[2 * i + 1] * B[i].        */
 100:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from complex input buffer */
 101:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inA1 = pSrcCmplx[0];
 102:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inA2 = pSrcCmplx[1];
 103:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from real input buffer */
 104:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inB1 = pSrcReal[0];
 105:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 106:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from complex input buffer */
 107:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inA3 = pSrcCmplx[2];
 108:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 109:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* multiply complex buffer real input with real buffer input */
 110:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     out1 = inA1 * inB1;
 111:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 112:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from complex input buffer */
 113:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inA4 = pSrcCmplx[3];
 114:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 115:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* multiply complex buffer imaginary input with real buffer input */
 116:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     out2 = inA2 * inB1;
 117:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 118:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from real input buffer */
 119:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inB2 = pSrcReal[1];
 120:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from complex input buffer */
 121:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inA5 = pSrcCmplx[4];
 122:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 123:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* multiply complex buffer real input with real buffer input */
 124:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     out3 = inA3 * inB2;
 125:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 126:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from complex input buffer */
 127:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inA6 = pSrcCmplx[5];
 128:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from real input buffer */
 129:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inB3 = pSrcReal[2];
 130:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccTkQGkc.s 			page 4


 131:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* multiply complex buffer imaginary input with real buffer input */
 132:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     out4 = inA4 * inB2;
 133:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 134:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from complex input buffer */
 135:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inA7 = pSrcCmplx[6];
 136:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 137:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* multiply complex buffer real input with real buffer input */
 138:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     out5 = inA5 * inB3;
 139:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 140:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from complex input buffer */
 141:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inA8 = pSrcCmplx[7];
 142:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 143:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* multiply complex buffer imaginary input with real buffer input */
 144:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     out6 = inA6 * inB3;
 145:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 146:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* read input from real input buffer */
 147:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     inB4 = pSrcReal[3];
 148:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 149:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* store result to destination bufer */
 150:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pCmplxDst[0] = out1;
 151:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 152:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* multiply complex buffer real input with real buffer input */
 153:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     out7 = inA7 * inB4;
 154:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 155:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* store result to destination bufer */
 156:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pCmplxDst[1] = out2;
 157:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 158:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* multiply complex buffer imaginary input with real buffer input */
 159:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     out8 = inA8 * inB4;
 160:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 161:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* store result to destination bufer */
 162:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pCmplxDst[2] = out3;
 163:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pCmplxDst[3] = out4;
 164:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pCmplxDst[4] = out5;
 165:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 166:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* incremnet complex input buffer by 8 to process next samples */
 167:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pSrcCmplx += 8u;
 168:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 169:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* store result to destination bufer */
 170:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pCmplxDst[5] = out6;
 171:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 172:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* increment real input buffer by 4 to process next samples */
 173:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pSrcReal += 4u;
 174:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 175:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* store result to destination bufer */
 176:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pCmplxDst[6] = out7;
 177:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pCmplxDst[7] = out8;
 178:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 179:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* increment destination buffer by 8 to process next sampels */
 180:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     pCmplxDst += 8u;
 181:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 182:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* Decrement the numSamples loop counter */
 183:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     blkCnt--;
 184:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   }
 185:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 186:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   /* If the numSamples is not a multiple of 4, compute any remaining output samples here.
 187:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****    ** No loop unrolling is used. */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccTkQGkc.s 			page 5


 188:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   blkCnt = numSamples % 0x4u;
 189:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 190:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** #else
 191:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 192:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   /* Run the below code for Cortex-M0 */
 193:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   blkCnt = numSamples;
  42              		.loc 1 193 0
  43 000e 3B68     		ldr	r3, [r7]
  44 0010 7B61     		str	r3, [r7, #20]
 194:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 195:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 196:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 197:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   while (blkCnt > 0u)
  45              		.loc 1 197 0
  46 0012 21E0     		b	.L2
  47              	.L3:
 198:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   {
 199:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* C[2 * i] = A[2 * i] * B[i].            */
 200:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* C[2 * i + 1] = A[2 * i + 1] * B[i].        */
 201:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     in = *pSrcReal++;
  48              		.loc 1 201 0
  49 0014 BB68     		ldr	r3, [r7, #8]
  50 0016 1A1D     		add	r2, r3, #4
  51 0018 BA60     		str	r2, [r7, #8]
  52 001a 1B68     		ldr	r3, [r3]
  53 001c 3B61     		str	r3, [r7, #16]
 202:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* store the result in the destination buffer. */
 203:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     *pCmplxDst++ = (*pSrcCmplx++) * (in);
  54              		.loc 1 203 0
  55 001e 7C68     		ldr	r4, [r7, #4]
  56 0020 231D     		add	r3, r4, #4
  57 0022 7B60     		str	r3, [r7, #4]
  58 0024 FB68     		ldr	r3, [r7, #12]
  59 0026 1A1D     		add	r2, r3, #4
  60 0028 FA60     		str	r2, [r7, #12]
  61 002a 1B68     		ldr	r3, [r3]
  62 002c 181C     		add	r0, r3, #0
  63 002e 3969     		ldr	r1, [r7, #16]
  64 0030 FFF7FEFF 		bl	__aeabi_fmul
  65 0034 031C     		add	r3, r0, #0
  66 0036 2360     		str	r3, [r4]
 204:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     *pCmplxDst++ = (*pSrcCmplx++) * (in);
  67              		.loc 1 204 0
  68 0038 7C68     		ldr	r4, [r7, #4]
  69 003a 231D     		add	r3, r4, #4
  70 003c 7B60     		str	r3, [r7, #4]
  71 003e FB68     		ldr	r3, [r7, #12]
  72 0040 1A1D     		add	r2, r3, #4
  73 0042 FA60     		str	r2, [r7, #12]
  74 0044 1B68     		ldr	r3, [r3]
  75 0046 181C     		add	r0, r3, #0
  76 0048 3969     		ldr	r1, [r7, #16]
  77 004a FFF7FEFF 		bl	__aeabi_fmul
  78 004e 031C     		add	r3, r0, #0
  79 0050 2360     		str	r3, [r4]
 205:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 206:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* Decrement the numSamples loop counter */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccTkQGkc.s 			page 6


 207:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     blkCnt--;
  80              		.loc 1 207 0
  81 0052 7B69     		ldr	r3, [r7, #20]
  82 0054 013B     		sub	r3, r3, #1
  83 0056 7B61     		str	r3, [r7, #20]
  84              	.L2:
 197:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   {
  85              		.loc 1 197 0
  86 0058 7B69     		ldr	r3, [r7, #20]
  87 005a 002B     		cmp	r3, #0
  88 005c DAD1     		bne	.L3
 208:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   }
 209:Source\ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** }
  89              		.loc 1 209 0
  90 005e BD46     		mov	sp, r7
  91 0060 07B0     		add	sp, sp, #28
  92              		@ sp needed
  93 0062 90BD     		pop	{r4, r7, pc}
  94              		.cfi_endproc
  95              	.LFE82:
  96              		.size	arm_cmplx_mult_real_f32, .-arm_cmplx_mult_real_f32
  97              		.text
  98              	.Letext0:
  99              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 100              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 101              		.file 4 ".\\Include/arm_math.h"
 102              		.section	.debug_info,"",%progbits
 103              	.Ldebug_info0:
 104 0000 18010000 		.4byte	0x118
 105 0004 0400     		.2byte	0x4
 106 0006 00000000 		.4byte	.Ldebug_abbrev0
 107 000a 04       		.byte	0x4
 108 000b 01       		.uleb128 0x1
 109 000c 8C010000 		.4byte	.LASF22
 110 0010 01       		.byte	0x1
 111 0011 56010000 		.4byte	.LASF23
 112 0015 F4000000 		.4byte	.LASF24
 113 0019 00000000 		.4byte	.Ldebug_ranges0+0
 114 001d 00000000 		.4byte	0
 115 0021 00000000 		.4byte	.Ldebug_line0
 116 0025 02       		.uleb128 0x2
 117 0026 01       		.byte	0x1
 118 0027 06       		.byte	0x6
 119 0028 D1000000 		.4byte	.LASF0
 120 002c 02       		.uleb128 0x2
 121 002d 01       		.byte	0x1
 122 002e 08       		.byte	0x8
 123 002f 73000000 		.4byte	.LASF1
 124 0033 02       		.uleb128 0x2
 125 0034 02       		.byte	0x2
 126 0035 05       		.byte	0x5
 127 0036 98000000 		.4byte	.LASF2
 128 003a 02       		.uleb128 0x2
 129 003b 02       		.byte	0x2
 130 003c 07       		.byte	0x7
 131 003d BE000000 		.4byte	.LASF3
 132 0041 02       		.uleb128 0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccTkQGkc.s 			page 7


 133 0042 04       		.byte	0x4
 134 0043 05       		.byte	0x5
 135 0044 8F000000 		.4byte	.LASF4
 136 0048 03       		.uleb128 0x3
 137 0049 2F000000 		.4byte	.LASF9
 138 004d 02       		.byte	0x2
 139 004e 41       		.byte	0x41
 140 004f 53000000 		.4byte	0x53
 141 0053 02       		.uleb128 0x2
 142 0054 04       		.byte	0x4
 143 0055 07       		.byte	0x7
 144 0056 3A000000 		.4byte	.LASF5
 145 005a 02       		.uleb128 0x2
 146 005b 08       		.byte	0x8
 147 005c 05       		.byte	0x5
 148 005d A9000000 		.4byte	.LASF6
 149 0061 02       		.uleb128 0x2
 150 0062 08       		.byte	0x8
 151 0063 07       		.byte	0x7
 152 0064 4C000000 		.4byte	.LASF7
 153 0068 04       		.uleb128 0x4
 154 0069 04       		.byte	0x4
 155 006a 05       		.byte	0x5
 156 006b 696E7400 		.ascii	"int\000"
 157 006f 02       		.uleb128 0x2
 158 0070 04       		.byte	0x4
 159 0071 07       		.byte	0x7
 160 0072 0A000000 		.4byte	.LASF8
 161 0076 03       		.uleb128 0x3
 162 0077 86000000 		.4byte	.LASF10
 163 007b 03       		.byte	0x3
 164 007c 2D       		.byte	0x2d
 165 007d 48000000 		.4byte	0x48
 166 0081 02       		.uleb128 0x2
 167 0082 04       		.byte	0x4
 168 0083 07       		.byte	0x7
 169 0084 3A010000 		.4byte	.LASF11
 170 0088 02       		.uleb128 0x2
 171 0089 01       		.byte	0x1
 172 008a 08       		.byte	0x8
 173 008b 81000000 		.4byte	.LASF12
 174 008f 02       		.uleb128 0x2
 175 0090 08       		.byte	0x8
 176 0091 04       		.byte	0x4
 177 0092 A2000000 		.4byte	.LASF13
 178 0096 02       		.uleb128 0x2
 179 0097 04       		.byte	0x4
 180 0098 04       		.byte	0x4
 181 0099 63000000 		.4byte	.LASF14
 182 009d 02       		.uleb128 0x2
 183 009e 08       		.byte	0x8
 184 009f 04       		.byte	0x4
 185 00a0 DD000000 		.4byte	.LASF15
 186 00a4 05       		.uleb128 0x5
 187 00a5 69000000 		.4byte	.LASF16
 188 00a9 04       		.byte	0x4
 189 00aa A501     		.2byte	0x1a5
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccTkQGkc.s 			page 8


 190 00ac 96000000 		.4byte	0x96
 191 00b0 06       		.uleb128 0x6
 192 00b1 04       		.byte	0x4
 193 00b2 A4000000 		.4byte	0xa4
 194 00b6 07       		.uleb128 0x7
 195 00b7 17000000 		.4byte	.LASF25
 196 00bb 01       		.byte	0x1
 197 00bc 49       		.byte	0x49
 198 00bd 00000000 		.4byte	.LFB82
 199 00c1 64000000 		.4byte	.LFE82-.LFB82
 200 00c5 01       		.uleb128 0x1
 201 00c6 9C       		.byte	0x9c
 202 00c7 08       		.uleb128 0x8
 203 00c8 00000000 		.4byte	.LASF17
 204 00cc 01       		.byte	0x1
 205 00cd 4A       		.byte	0x4a
 206 00ce B0000000 		.4byte	0xb0
 207 00d2 02       		.uleb128 0x2
 208 00d3 91       		.byte	0x91
 209 00d4 64       		.sleb128 -28
 210 00d5 08       		.uleb128 0x8
 211 00d6 4D010000 		.4byte	.LASF18
 212 00da 01       		.byte	0x1
 213 00db 4B       		.byte	0x4b
 214 00dc B0000000 		.4byte	0xb0
 215 00e0 02       		.uleb128 0x2
 216 00e1 91       		.byte	0x91
 217 00e2 60       		.sleb128 -32
 218 00e3 08       		.uleb128 0x8
 219 00e4 43010000 		.4byte	.LASF19
 220 00e8 01       		.byte	0x1
 221 00e9 4C       		.byte	0x4c
 222 00ea B0000000 		.4byte	0xb0
 223 00ee 02       		.uleb128 0x2
 224 00ef 91       		.byte	0x91
 225 00f0 5C       		.sleb128 -36
 226 00f1 08       		.uleb128 0x8
 227 00f2 E9000000 		.4byte	.LASF20
 228 00f6 01       		.byte	0x1
 229 00f7 4D       		.byte	0x4d
 230 00f8 76000000 		.4byte	0x76
 231 00fc 02       		.uleb128 0x2
 232 00fd 91       		.byte	0x91
 233 00fe 58       		.sleb128 -40
 234 00ff 09       		.uleb128 0x9
 235 0100 696E00   		.ascii	"in\000"
 236 0103 01       		.byte	0x1
 237 0104 4F       		.byte	0x4f
 238 0105 A4000000 		.4byte	0xa4
 239 0109 02       		.uleb128 0x2
 240 010a 91       		.byte	0x91
 241 010b 68       		.sleb128 -24
 242 010c 0A       		.uleb128 0xa
 243 010d B7000000 		.4byte	.LASF21
 244 0111 01       		.byte	0x1
 245 0112 50       		.byte	0x50
 246 0113 76000000 		.4byte	0x76
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccTkQGkc.s 			page 9


 247 0117 02       		.uleb128 0x2
 248 0118 91       		.byte	0x91
 249 0119 6C       		.sleb128 -20
 250 011a 00       		.byte	0
 251 011b 00       		.byte	0
 252              		.section	.debug_abbrev,"",%progbits
 253              	.Ldebug_abbrev0:
 254 0000 01       		.uleb128 0x1
 255 0001 11       		.uleb128 0x11
 256 0002 01       		.byte	0x1
 257 0003 25       		.uleb128 0x25
 258 0004 0E       		.uleb128 0xe
 259 0005 13       		.uleb128 0x13
 260 0006 0B       		.uleb128 0xb
 261 0007 03       		.uleb128 0x3
 262 0008 0E       		.uleb128 0xe
 263 0009 1B       		.uleb128 0x1b
 264 000a 0E       		.uleb128 0xe
 265 000b 55       		.uleb128 0x55
 266 000c 17       		.uleb128 0x17
 267 000d 11       		.uleb128 0x11
 268 000e 01       		.uleb128 0x1
 269 000f 10       		.uleb128 0x10
 270 0010 17       		.uleb128 0x17
 271 0011 00       		.byte	0
 272 0012 00       		.byte	0
 273 0013 02       		.uleb128 0x2
 274 0014 24       		.uleb128 0x24
 275 0015 00       		.byte	0
 276 0016 0B       		.uleb128 0xb
 277 0017 0B       		.uleb128 0xb
 278 0018 3E       		.uleb128 0x3e
 279 0019 0B       		.uleb128 0xb
 280 001a 03       		.uleb128 0x3
 281 001b 0E       		.uleb128 0xe
 282 001c 00       		.byte	0
 283 001d 00       		.byte	0
 284 001e 03       		.uleb128 0x3
 285 001f 16       		.uleb128 0x16
 286 0020 00       		.byte	0
 287 0021 03       		.uleb128 0x3
 288 0022 0E       		.uleb128 0xe
 289 0023 3A       		.uleb128 0x3a
 290 0024 0B       		.uleb128 0xb
 291 0025 3B       		.uleb128 0x3b
 292 0026 0B       		.uleb128 0xb
 293 0027 49       		.uleb128 0x49
 294 0028 13       		.uleb128 0x13
 295 0029 00       		.byte	0
 296 002a 00       		.byte	0
 297 002b 04       		.uleb128 0x4
 298 002c 24       		.uleb128 0x24
 299 002d 00       		.byte	0
 300 002e 0B       		.uleb128 0xb
 301 002f 0B       		.uleb128 0xb
 302 0030 3E       		.uleb128 0x3e
 303 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccTkQGkc.s 			page 10


 304 0032 03       		.uleb128 0x3
 305 0033 08       		.uleb128 0x8
 306 0034 00       		.byte	0
 307 0035 00       		.byte	0
 308 0036 05       		.uleb128 0x5
 309 0037 16       		.uleb128 0x16
 310 0038 00       		.byte	0
 311 0039 03       		.uleb128 0x3
 312 003a 0E       		.uleb128 0xe
 313 003b 3A       		.uleb128 0x3a
 314 003c 0B       		.uleb128 0xb
 315 003d 3B       		.uleb128 0x3b
 316 003e 05       		.uleb128 0x5
 317 003f 49       		.uleb128 0x49
 318 0040 13       		.uleb128 0x13
 319 0041 00       		.byte	0
 320 0042 00       		.byte	0
 321 0043 06       		.uleb128 0x6
 322 0044 0F       		.uleb128 0xf
 323 0045 00       		.byte	0
 324 0046 0B       		.uleb128 0xb
 325 0047 0B       		.uleb128 0xb
 326 0048 49       		.uleb128 0x49
 327 0049 13       		.uleb128 0x13
 328 004a 00       		.byte	0
 329 004b 00       		.byte	0
 330 004c 07       		.uleb128 0x7
 331 004d 2E       		.uleb128 0x2e
 332 004e 01       		.byte	0x1
 333 004f 3F       		.uleb128 0x3f
 334 0050 19       		.uleb128 0x19
 335 0051 03       		.uleb128 0x3
 336 0052 0E       		.uleb128 0xe
 337 0053 3A       		.uleb128 0x3a
 338 0054 0B       		.uleb128 0xb
 339 0055 3B       		.uleb128 0x3b
 340 0056 0B       		.uleb128 0xb
 341 0057 27       		.uleb128 0x27
 342 0058 19       		.uleb128 0x19
 343 0059 11       		.uleb128 0x11
 344 005a 01       		.uleb128 0x1
 345 005b 12       		.uleb128 0x12
 346 005c 06       		.uleb128 0x6
 347 005d 40       		.uleb128 0x40
 348 005e 18       		.uleb128 0x18
 349 005f 9642     		.uleb128 0x2116
 350 0061 19       		.uleb128 0x19
 351 0062 00       		.byte	0
 352 0063 00       		.byte	0
 353 0064 08       		.uleb128 0x8
 354 0065 05       		.uleb128 0x5
 355 0066 00       		.byte	0
 356 0067 03       		.uleb128 0x3
 357 0068 0E       		.uleb128 0xe
 358 0069 3A       		.uleb128 0x3a
 359 006a 0B       		.uleb128 0xb
 360 006b 3B       		.uleb128 0x3b
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccTkQGkc.s 			page 11


 361 006c 0B       		.uleb128 0xb
 362 006d 49       		.uleb128 0x49
 363 006e 13       		.uleb128 0x13
 364 006f 02       		.uleb128 0x2
 365 0070 18       		.uleb128 0x18
 366 0071 00       		.byte	0
 367 0072 00       		.byte	0
 368 0073 09       		.uleb128 0x9
 369 0074 34       		.uleb128 0x34
 370 0075 00       		.byte	0
 371 0076 03       		.uleb128 0x3
 372 0077 08       		.uleb128 0x8
 373 0078 3A       		.uleb128 0x3a
 374 0079 0B       		.uleb128 0xb
 375 007a 3B       		.uleb128 0x3b
 376 007b 0B       		.uleb128 0xb
 377 007c 49       		.uleb128 0x49
 378 007d 13       		.uleb128 0x13
 379 007e 02       		.uleb128 0x2
 380 007f 18       		.uleb128 0x18
 381 0080 00       		.byte	0
 382 0081 00       		.byte	0
 383 0082 0A       		.uleb128 0xa
 384 0083 34       		.uleb128 0x34
 385 0084 00       		.byte	0
 386 0085 03       		.uleb128 0x3
 387 0086 0E       		.uleb128 0xe
 388 0087 3A       		.uleb128 0x3a
 389 0088 0B       		.uleb128 0xb
 390 0089 3B       		.uleb128 0x3b
 391 008a 0B       		.uleb128 0xb
 392 008b 49       		.uleb128 0x49
 393 008c 13       		.uleb128 0x13
 394 008d 02       		.uleb128 0x2
 395 008e 18       		.uleb128 0x18
 396 008f 00       		.byte	0
 397 0090 00       		.byte	0
 398 0091 00       		.byte	0
 399              		.section	.debug_aranges,"",%progbits
 400 0000 1C000000 		.4byte	0x1c
 401 0004 0200     		.2byte	0x2
 402 0006 00000000 		.4byte	.Ldebug_info0
 403 000a 04       		.byte	0x4
 404 000b 00       		.byte	0
 405 000c 0000     		.2byte	0
 406 000e 0000     		.2byte	0
 407 0010 00000000 		.4byte	.LFB82
 408 0014 64000000 		.4byte	.LFE82-.LFB82
 409 0018 00000000 		.4byte	0
 410 001c 00000000 		.4byte	0
 411              		.section	.debug_ranges,"",%progbits
 412              	.Ldebug_ranges0:
 413 0000 00000000 		.4byte	.LFB82
 414 0004 64000000 		.4byte	.LFE82
 415 0008 00000000 		.4byte	0
 416 000c 00000000 		.4byte	0
 417              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccTkQGkc.s 			page 12


 418              	.Ldebug_line0:
 419 0000 81010000 		.section	.debug_str,"MS",%progbits,1
 419      02005C01 
 419      00000201 
 419      FB0E0D00 
 419      01010101 
 420              	.LASF17:
 421 0000 70537263 		.ascii	"pSrcCmplx\000"
 421      436D706C 
 421      7800
 422              	.LASF8:
 423 000a 756E7369 		.ascii	"unsigned int\000"
 423      676E6564 
 423      20696E74 
 423      00
 424              	.LASF25:
 425 0017 61726D5F 		.ascii	"arm_cmplx_mult_real_f32\000"
 425      636D706C 
 425      785F6D75 
 425      6C745F72 
 425      65616C5F 
 426              	.LASF9:
 427 002f 5F5F7569 		.ascii	"__uint32_t\000"
 427      6E743332 
 427      5F7400
 428              	.LASF5:
 429 003a 6C6F6E67 		.ascii	"long unsigned int\000"
 429      20756E73 
 429      69676E65 
 429      6420696E 
 429      7400
 430              	.LASF7:
 431 004c 6C6F6E67 		.ascii	"long long unsigned int\000"
 431      206C6F6E 
 431      6720756E 
 431      7369676E 
 431      65642069 
 432              	.LASF14:
 433 0063 666C6F61 		.ascii	"float\000"
 433      7400
 434              	.LASF16:
 435 0069 666C6F61 		.ascii	"float32_t\000"
 435      7433325F 
 435      7400
 436              	.LASF1:
 437 0073 756E7369 		.ascii	"unsigned char\000"
 437      676E6564 
 437      20636861 
 437      7200
 438              	.LASF12:
 439 0081 63686172 		.ascii	"char\000"
 439      00
 440              	.LASF10:
 441 0086 75696E74 		.ascii	"uint32_t\000"
 441      33325F74 
 441      00
 442              	.LASF4:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccTkQGkc.s 			page 13


 443 008f 6C6F6E67 		.ascii	"long int\000"
 443      20696E74 
 443      00
 444              	.LASF2:
 445 0098 73686F72 		.ascii	"short int\000"
 445      7420696E 
 445      7400
 446              	.LASF13:
 447 00a2 646F7562 		.ascii	"double\000"
 447      6C6500
 448              	.LASF6:
 449 00a9 6C6F6E67 		.ascii	"long long int\000"
 449      206C6F6E 
 449      6720696E 
 449      7400
 450              	.LASF21:
 451 00b7 626C6B43 		.ascii	"blkCnt\000"
 451      6E7400
 452              	.LASF3:
 453 00be 73686F72 		.ascii	"short unsigned int\000"
 453      7420756E 
 453      7369676E 
 453      65642069 
 453      6E7400
 454              	.LASF0:
 455 00d1 7369676E 		.ascii	"signed char\000"
 455      65642063 
 455      68617200 
 456              	.LASF15:
 457 00dd 6C6F6E67 		.ascii	"long double\000"
 457      20646F75 
 457      626C6500 
 458              	.LASF20:
 459 00e9 6E756D53 		.ascii	"numSamples\000"
 459      616D706C 
 459      657300
 460              	.LASF24:
 461 00f4 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 461      73657273 
 461      5C666E65 
 461      7665735C 
 461      446F6375 
 462 0121 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 462      655F7370 
 462      6565645F 
 462      73656E73 
 462      6F722E63 
 463              	.LASF11:
 464 013a 73697A65 		.ascii	"sizetype\000"
 464      74797065 
 464      00
 465              	.LASF19:
 466 0143 70436D70 		.ascii	"pCmplxDst\000"
 466      6C784473 
 466      7400
 467              	.LASF18:
 468 014d 70537263 		.ascii	"pSrcReal\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccTkQGkc.s 			page 14


 468      5265616C 
 468      00
 469              	.LASF23:
 470 0156 536F7572 		.ascii	"Source\\ComplexMathFunctions\\arm_cmplx_mult_real_f"
 470      63655C43 
 470      6F6D706C 
 470      65784D61 
 470      74684675 
 471 0187 33322E63 		.ascii	"32.c\000"
 471      00
 472              	.LASF22:
 473 018c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 473      4320342E 
 473      392E3320 
 473      32303135 
 473      30333033 
 474 01bf 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 474      20726576 
 474      6973696F 
 474      6E203232 
 474      31323230 
 475 01f2 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 475      30202D66 
 475      66756E63 
 475      74696F6E 
 475      2D736563 
 476              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
