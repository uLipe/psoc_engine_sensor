ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	cydelayFreqHz
  18              		.data
  19              		.align	2
  20              		.type	cydelayFreqHz, %object
  21              		.size	cydelayFreqHz, 4
  22              	cydelayFreqHz:
  23 0000 006CDC02 		.word	48000000
  24              		.global	cydelayFreqKhz
  25              		.align	2
  26              		.type	cydelayFreqKhz, %object
  27              		.size	cydelayFreqKhz, 4
  28              	cydelayFreqKhz:
  29 0004 80BB0000 		.word	48000
  30              		.global	cydelayFreqMhz
  31              		.type	cydelayFreqMhz, %object
  32              		.size	cydelayFreqMhz, 1
  33              	cydelayFreqMhz:
  34 0008 30       		.byte	48
  35              		.global	cydelay32kMs
  36 0009 000000   		.align	2
  37              		.type	cydelay32kMs, %object
  38              		.size	cydelay32kMs, 4
  39              	cydelay32kMs:
  40 000c 0000C05D 		.word	1572864000
  41              		.bss
  42              		.align	2
  43              	CySysTickCallbacks:
  44 0000 00000000 		.space	20
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	CySysTickInitVar
  46              		.align	2
  47              		.type	CySysTickInitVar, %object
  48              		.size	CySysTickInitVar, 4
  49              	CySysTickInitVar:
  50 0014 00000000 		.space	4
  51              		.global	cyImoFreqMhz2DpllOffset
  52              		.section	.rodata
  53              		.align	2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 2


  54              		.type	cyImoFreqMhz2DpllOffset, %object
  55              		.size	cyImoFreqMhz2DpllOffset, 23
  56              	cyImoFreqMhz2DpllOffset:
  57 0000 EE       		.byte	-18
  58 0001 DB       		.byte	-37
  59 0002 C9       		.byte	-55
  60 0003 B9       		.byte	-71
  61 0004 AA       		.byte	-86
  62 0005 9B       		.byte	-101
  63 0006 8E       		.byte	-114
  64 0007 82       		.byte	-126
  65 0008 76       		.byte	118
  66 0009 6B       		.byte	107
  67 000a 60       		.byte	96
  68 000b 56       		.byte	86
  69 000c 4D       		.byte	77
  70 000d 44       		.byte	68
  71 000e 3B       		.byte	59
  72 000f 33       		.byte	51
  73 0010 2C       		.byte	44
  74 0011 24       		.byte	36
  75 0012 1D       		.byte	29
  76 0013 17       		.byte	23
  77 0014 10       		.byte	16
  78 0015 0A       		.byte	10
  79 0016 04       		.byte	4
  80              		.global	CySysClkPumpConfig
  81 0017 00       		.data
  82              		.align	2
  83              		.type	CySysClkPumpConfig, %object
  84              		.size	CySysClkPumpConfig, 4
  85              	CySysClkPumpConfig:
  86 0010 01000000 		.word	1
  87              		.section	.text.CySysClkImoStart,"ax",%progbits
  88              		.align	2
  89              		.global	CySysClkImoStart
  90              		.code	16
  91              		.thumb_func
  92              		.type	CySysClkImoStart, %function
  93              	CySysClkImoStart:
  94              	.LFB1:
  95              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 3


  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 4


  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  96              		.loc 1 108 0
  97              		.cfi_startproc
  98 0000 80B5     		push	{r7, lr}
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 7, -8
 101              		.cfi_offset 14, -4
 102 0002 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 104              		.loc 1 109 0
 105 0004 044B     		ldr	r3, .L2
 106 0006 044A     		ldr	r2, .L2
 107 0008 1268     		ldr	r2, [r2]
 108 000a 8021     		mov	r1, #128
 109 000c 0906     		lsl	r1, r1, #24
 110 000e 0A43     		orr	r2, r1
 111 0010 1A60     		str	r2, [r3]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 5


 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
 112              		.loc 1 124 0
 113 0012 BD46     		mov	sp, r7
 114              		@ sp needed
 115 0014 80BD     		pop	{r7, pc}
 116              	.L3:
 117 0016 C046     		.align	2
 118              	.L2:
 119 0018 30000340 		.word	1073938480
 120              		.cfi_endproc
 121              	.LFE1:
 122              		.size	CySysClkImoStart, .-CySysClkImoStart
 123              		.section	.text.CySysClkImoStop,"ax",%progbits
 124              		.align	2
 125              		.global	CySysClkImoStop
 126              		.code	16
 127              		.thumb_func
 128              		.type	CySysClkImoStop, %function
 129              	CySysClkImoStop:
 130              	.LFB2:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 131              		.loc 1 140 0
 132              		.cfi_startproc
 133 0000 80B5     		push	{r7, lr}
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 7, -8
 136              		.cfi_offset 14, -4
 137 0002 00AF     		add	r7, sp, #0
 138              		.cfi_def_cfa_register 7
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 139              		.loc 1 142 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 6


 140 0004 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 141              		.loc 1 149 0
 142 0008 034B     		ldr	r3, .L5
 143 000a 034A     		ldr	r2, .L5
 144 000c 1268     		ldr	r2, [r2]
 145 000e 5200     		lsl	r2, r2, #1
 146 0010 5208     		lsr	r2, r2, #1
 147 0012 1A60     		str	r2, [r3]
 150:Generated_Source\PSoC4/CyLib.c **** }
 148              		.loc 1 150 0
 149 0014 BD46     		mov	sp, r7
 150              		@ sp needed
 151 0016 80BD     		pop	{r7, pc}
 152              	.L6:
 153              		.align	2
 154              	.L5:
 155 0018 30000340 		.word	1073938480
 156              		.cfi_endproc
 157              	.LFE2:
 158              		.size	CySysClkImoStop, .-CySysClkImoStop
 159              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 160              		.align	2
 161              		.global	CySysClkImoEnableWcoLock
 162              		.code	16
 163              		.thumb_func
 164              		.type	CySysClkImoEnableWcoLock, %function
 165              	CySysClkImoEnableWcoLock:
 166              	.LFB3:
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 7


 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 167              		.loc 1 176 0
 168              		.cfi_startproc
 169 0000 90B5     		push	{r4, r7, lr}
 170              		.cfi_def_cfa_offset 12
 171              		.cfi_offset 4, -12
 172              		.cfi_offset 7, -8
 173              		.cfi_offset 14, -4
 174 0002 87B0     		sub	sp, sp, #28
 175              		.cfi_def_cfa_offset 40
 176 0004 00AF     		add	r7, sp, #0
 177              		.cfi_def_cfa_register 7
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 178              		.loc 1 184 0
 179 0006 0023     		mov	r3, #0
 180 0008 3B61     		str	r3, [r7, #16]
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 181              		.loc 1 187 0
 182 000a FFF7FEFF 		bl	CySysClkWcoEnabled
 183 000e 031E     		sub	r3, r0, #0
 184 0010 69D0     		beq	.L7
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 185              		.loc 1 189 0
 186 0012 0F23     		mov	r3, #15
 187 0014 FC18     		add	r4, r7, r3
 188 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 189 001a 031C     		mov	r3, r0
 190 001c 2370     		strb	r3, [r4]
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 8


 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 191              		.loc 1 212 0
 192 001e 334B     		ldr	r3, .L12
 193 0020 1B68     		ldr	r3, [r3]
 194 0022 0722     		mov	r2, #7
 195 0024 1340     		and	r3, r2
 196 0026 9B00     		lsl	r3, r3, #2
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 197              		.loc 1 213 0
 198 0028 1833     		add	r3, r3, #24
 199 002a 1A1C     		mov	r2, r3
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 200              		.loc 1 214 0
 201 002c 304B     		ldr	r3, .L12+4
 202 002e 1B68     		ldr	r3, [r3]
 203 0030 9B08     		lsr	r3, r3, #2
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 204              		.loc 1 213 0
 205 0032 191C     		mov	r1, r3
 206 0034 0323     		mov	r3, #3
 207 0036 0B40     		and	r3, r1
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 208              		.loc 1 212 0
 209 0038 DA40     		lsr	r2, r2, r3
 210 003a 131C     		mov	r3, r2
 211 003c BB60     		str	r3, [r7, #8]
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 212              		.loc 1 232 0
 213 003e 2D4B     		ldr	r3, .L12+8
 214 0040 1B68     		ldr	r3, [r3]
 215 0042 2D4A     		ldr	r2, .L12+12
 216 0044 1340     		and	r3, r2
 217 0046 7B61     		str	r3, [r7, #20]
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 9


 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 218              		.loc 1 238 0
 219 0048 BB68     		ldr	r3, [r7, #8]
 220 004a 2C4A     		ldr	r2, .L12+16
 221 004c 5343     		mul	r3, r2
 222 004e 8022     		mov	r2, #128
 223 0050 D201     		lsl	r2, r2, #7
 224 0052 9446     		mov	ip, r2
 225 0054 6344     		add	r3, r3, ip
 226 0056 DB0B     		lsr	r3, r3, #15
 227 0058 013B     		sub	r3, r3, #1
 228 005a 5B05     		lsl	r3, r3, #21
 229 005c 5B0D     		lsr	r3, r3, #21
 230 005e 7A69     		ldr	r2, [r7, #20]
 231 0060 1343     		orr	r3, r2
 232 0062 7B61     		str	r3, [r7, #20]
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 233              		.loc 1 241 0
 234 0064 7B69     		ldr	r3, [r7, #20]
 235 0066 A022     		mov	r2, #160
 236 0068 5203     		lsl	r2, r2, #13
 237 006a 1343     		orr	r3, r2
 238 006c 7B61     		str	r3, [r7, #20]
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 239              		.loc 1 244 0
 240 006e BB68     		ldr	r3, [r7, #8]
 241 0070 192B     		cmp	r3, #25
 242 0072 05D8     		bhi	.L9
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 243              		.loc 1 246 0
 244 0074 7B69     		ldr	r3, [r7, #20]
 245 0076 FF22     		mov	r2, #255
 246 0078 9205     		lsl	r2, r2, #22
 247 007a 1343     		orr	r3, r2
 248 007c 7B61     		str	r3, [r7, #20]
 249 007e 16E0     		b	.L10
 250              	.L9:
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251              		.loc 1 250 0
 252 0080 BB68     		ldr	r3, [r7, #8]
 253 0082 1F4A     		ldr	r2, .L12+20
 254 0084 9446     		mov	ip, r2
 255 0086 6344     		add	r3, r3, ip
 256 0088 1B78     		ldrb	r3, [r3]
 257 008a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 10


 258 008c 191C     		mov	r1, r3
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 259              		.loc 1 251 0
 260 008e BB68     		ldr	r3, [r7, #8]
 261 0090 1A3B     		sub	r3, r3, #26
 262 0092 1C4A     		ldr	r2, .L12+24
 263 0094 D35C     		ldrb	r3, [r2, r3]
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 264              		.loc 1 250 0
 265 0096 CB18     		add	r3, r1, r3
 266 0098 3B61     		str	r3, [r7, #16]
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 267              		.loc 1 253 0
 268 009a 3B69     		ldr	r3, [r7, #16]
 269 009c FF2B     		cmp	r3, #255
 270 009e 00D9     		bls	.L11
 271 00a0 FF23     		mov	r3, #255
 272              	.L11:
 273 00a2 3B61     		str	r3, [r7, #16]
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 274              		.loc 1 256 0
 275 00a4 3B69     		ldr	r3, [r7, #16]
 276 00a6 9B05     		lsl	r3, r3, #22
 277 00a8 7A69     		ldr	r2, [r7, #20]
 278 00aa 1343     		orr	r3, r2
 279 00ac 7B61     		str	r3, [r7, #20]
 280              	.L10:
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 281              		.loc 1 259 0
 282 00ae 114B     		ldr	r3, .L12+8
 283 00b0 7A69     		ldr	r2, [r7, #20]
 284 00b2 1A60     		str	r2, [r3]
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 285              		.loc 1 261 0
 286 00b4 144B     		ldr	r3, .L12+28
 287 00b6 1B68     		ldr	r3, [r3]
 288 00b8 7B60     		str	r3, [r7, #4]
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 289              		.loc 1 262 0
 290 00ba 3020     		mov	r0, #48
 291 00bc FFF7FEFF 		bl	CySysFlashSetWaitCycles
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 292              		.loc 1 263 0
 293 00c0 124B     		ldr	r3, .L12+32
 294 00c2 124A     		ldr	r2, .L12+32
 295 00c4 1268     		ldr	r2, [r2]
 296 00c6 8021     		mov	r1, #128
 297 00c8 C905     		lsl	r1, r1, #23
 298 00ca 0A43     		orr	r2, r1
 299 00cc 1A60     		str	r2, [r3]
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 11


 300              		.loc 1 264 0
 301 00ce 1420     		mov	r0, #20
 302 00d0 FFF7FEFF 		bl	CyDelay
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 303              		.loc 1 265 0
 304 00d4 0C4B     		ldr	r3, .L12+28
 305 00d6 7A68     		ldr	r2, [r7, #4]
 306 00d8 1A60     		str	r2, [r3]
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 307              		.loc 1 267 0
 308 00da 0F23     		mov	r3, #15
 309 00dc FB18     		add	r3, r7, r3
 310 00de 1B78     		ldrb	r3, [r3]
 311 00e0 181C     		mov	r0, r3
 312 00e2 FFF7FEFF 		bl	CyExitCriticalSection
 313              	.L7:
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 314              		.loc 1 269 0
 315 00e6 BD46     		mov	sp, r7
 316 00e8 07B0     		add	sp, sp, #28
 317              		@ sp needed
 318 00ea 90BD     		pop	{r4, r7, pc}
 319              	.L13:
 320              		.align	2
 321              	.L12:
 322 00ec 080F0340 		.word	1073942280
 323 00f0 28000340 		.word	1073938472
 324 00f4 08000640 		.word	1074135048
 325 00f8 00F800C0 		.word	-1073678336
 326 00fc 40420F00 		.word	1000000
 327 0100 CDF1FF0F 		.word	268431821
 328 0104 00000000 		.word	cyImoFreqMhz2DpllOffset
 329 0108 30001040 		.word	1074790448
 330 010c 00000640 		.word	1074135040
 331              		.cfi_endproc
 332              	.LFE3:
 333              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 334              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
 335              		.align	2
 336              		.global	CySysClkImoDisableWcoLock
 337              		.code	16
 338              		.thumb_func
 339              		.type	CySysClkImoDisableWcoLock, %function
 340              	CySysClkImoDisableWcoLock:
 341              	.LFB4:
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 12


 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 342              		.loc 1 286 0
 343              		.cfi_startproc
 344 0000 80B5     		push	{r7, lr}
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 7, -8
 347              		.cfi_offset 14, -4
 348 0002 00AF     		add	r7, sp, #0
 349              		.cfi_def_cfa_register 7
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 350              		.loc 1 287 0
 351 0004 034B     		ldr	r3, .L15
 352 0006 034A     		ldr	r2, .L15
 353 0008 1268     		ldr	r2, [r2]
 354 000a 0349     		ldr	r1, .L15+4
 355 000c 0A40     		and	r2, r1
 356 000e 1A60     		str	r2, [r3]
 288:Generated_Source\PSoC4/CyLib.c ****     }
 357              		.loc 1 288 0
 358 0010 BD46     		mov	sp, r7
 359              		@ sp needed
 360 0012 80BD     		pop	{r7, pc}
 361              	.L16:
 362              		.align	2
 363              	.L15:
 364 0014 00000640 		.word	1074135040
 365 0018 FFFFFFBF 		.word	-1073741825
 366              		.cfi_endproc
 367              	.LFE4:
 368              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 369              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 370              		.align	2
 371              		.global	CySysClkImoGetWcoLock
 372              		.code	16
 373              		.thumb_func
 374              		.type	CySysClkImoGetWcoLock, %function
 375              	CySysClkImoGetWcoLock:
 376              	.LFB5:
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 13


 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 377              		.loc 1 305 0
 378              		.cfi_startproc
 379 0000 80B5     		push	{r7, lr}
 380              		.cfi_def_cfa_offset 8
 381              		.cfi_offset 7, -8
 382              		.cfi_offset 14, -4
 383 0002 00AF     		add	r7, sp, #0
 384              		.cfi_def_cfa_register 7
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 385              		.loc 1 306 0
 386 0004 054B     		ldr	r3, .L21
 387 0006 1A68     		ldr	r2, [r3]
 388 0008 8023     		mov	r3, #128
 389 000a DB05     		lsl	r3, r3, #23
 390 000c 1340     		and	r3, r2
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 391              		.loc 1 307 0
 392 000e 01D0     		beq	.L18
 393              		.loc 1 307 0 is_stmt 0 discriminator 1
 394 0010 0123     		mov	r3, #1
 395 0012 00E0     		b	.L19
 396              	.L18:
 397              		.loc 1 307 0 discriminator 2
 398 0014 0023     		mov	r3, #0
 399              	.L19:
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 400              		.loc 1 309 0 is_stmt 1
 401 0016 181C     		mov	r0, r3
 402 0018 BD46     		mov	sp, r7
 403              		@ sp needed
 404 001a 80BD     		pop	{r7, pc}
 405              	.L22:
 406              		.align	2
 407              	.L21:
 408 001c 00000640 		.word	1074135040
 409              		.cfi_endproc
 410              	.LFE5:
 411              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 412              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 413              		.align	2
 414              		.global	CySysClkWriteHfclkDirect
 415              		.code	16
 416              		.thumb_func
 417              		.type	CySysClkWriteHfclkDirect, %function
 418              	CySysClkWriteHfclkDirect:
 419              	.LFB6:
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 14


 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 15


 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 16


 430:Generated_Source\PSoC4/CyLib.c **** {
 420              		.loc 1 430 0
 421              		.cfi_startproc
 422 0000 90B5     		push	{r4, r7, lr}
 423              		.cfi_def_cfa_offset 12
 424              		.cfi_offset 4, -12
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 427 0002 85B0     		sub	sp, sp, #20
 428              		.cfi_def_cfa_offset 32
 429 0004 00AF     		add	r7, sp, #0
 430              		.cfi_def_cfa_register 7
 431 0006 7860     		str	r0, [r7, #4]
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 432              		.loc 1 434 0
 433 0008 0F23     		mov	r3, #15
 434 000a FC18     		add	r4, r7, r3
 435 000c FFF7FEFF 		bl	CyEnterCriticalSection
 436 0010 031C     		mov	r3, r0
 437 0012 2370     		strb	r3, [r4]
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 438              		.loc 1 437 0
 439 0014 0B4B     		ldr	r3, .L24
 440 0016 1B68     		ldr	r3, [r3]
 441 0018 0322     		mov	r2, #3
 442 001a 9343     		bic	r3, r2
 443 001c BB60     		str	r3, [r7, #8]
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 444              		.loc 1 448 0
 445 001e 7B68     		ldr	r3, [r7, #4]
 446 0020 0322     		mov	r2, #3
 447 0022 1340     		and	r3, r2
 448 0024 BA68     		ldr	r2, [r7, #8]
 449 0026 1343     		orr	r3, r2
 450 0028 BB60     		str	r3, [r7, #8]
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 451              		.loc 1 451 0
 452 002a 064B     		ldr	r3, .L24
 453 002c BA68     		ldr	r2, [r7, #8]
 454 002e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 17


 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 455              		.loc 1 453 0
 456 0030 0F23     		mov	r3, #15
 457 0032 FB18     		add	r3, r7, r3
 458 0034 1B78     		ldrb	r3, [r3]
 459 0036 181C     		mov	r0, r3
 460 0038 FFF7FEFF 		bl	CyExitCriticalSection
 454:Generated_Source\PSoC4/CyLib.c **** }
 461              		.loc 1 454 0
 462 003c BD46     		mov	sp, r7
 463 003e 05B0     		add	sp, sp, #20
 464              		@ sp needed
 465 0040 90BD     		pop	{r4, r7, pc}
 466              	.L25:
 467 0042 C046     		.align	2
 468              	.L24:
 469 0044 28000340 		.word	1073938472
 470              		.cfi_endproc
 471              	.LFE6:
 472              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 473              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 474              		.align	2
 475              		.global	CySysEnablePumpClock
 476              		.code	16
 477              		.thumb_func
 478              		.type	CySysEnablePumpClock, %function
 479              	CySysEnablePumpClock:
 480              	.LFB7:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 481              		.loc 1 474 0
 482              		.cfi_startproc
 483 0000 80B5     		push	{r7, lr}
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 7, -8
 486              		.cfi_offset 14, -4
 487 0002 82B0     		sub	sp, sp, #8
 488              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 18


 489 0004 00AF     		add	r7, sp, #0
 490              		.cfi_def_cfa_register 7
 491 0006 7860     		str	r0, [r7, #4]
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 492              		.loc 1 487 0
 493 0008 7B68     		ldr	r3, [r7, #4]
 494 000a 0122     		mov	r2, #1
 495 000c 1340     		and	r3, r2
 496 000e 08D0     		beq	.L27
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 497              		.loc 1 489 0
 498 0010 0C4A     		ldr	r2, .L29
 499 0012 0C4B     		ldr	r3, .L29
 500 0014 1968     		ldr	r1, [r3]
 501 0016 0C4B     		ldr	r3, .L29+4
 502 0018 1B68     		ldr	r3, [r3]
 503 001a 1B01     		lsl	r3, r3, #4
 504 001c 0B43     		orr	r3, r1
 505 001e 1360     		str	r3, [r2]
 506 0020 0CE0     		b	.L26
 507              	.L27:
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 508              		.loc 1 493 0
 509 0022 084B     		ldr	r3, .L29
 510 0024 1B68     		ldr	r3, [r3]
 511 0026 1B09     		lsr	r3, r3, #4
 512 0028 0322     		mov	r2, #3
 513 002a 1A40     		and	r2, r3
 514 002c 064B     		ldr	r3, .L29+4
 515 002e 1A60     		str	r2, [r3]
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 516              		.loc 1 495 0
 517 0030 044B     		ldr	r3, .L29
 518 0032 044A     		ldr	r2, .L29
 519 0034 1268     		ldr	r2, [r2]
 520 0036 3021     		mov	r1, #48
 521 0038 8A43     		bic	r2, r1
 522 003a 1A60     		str	r2, [r3]
 523              	.L26:
 496:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 19


 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 524              		.loc 1 498 0
 525 003c BD46     		mov	sp, r7
 526 003e 02B0     		add	sp, sp, #8
 527              		@ sp needed
 528 0040 80BD     		pop	{r7, pc}
 529              	.L30:
 530 0042 C046     		.align	2
 531              	.L29:
 532 0044 28000340 		.word	1073938472
 533 0048 00000000 		.word	CySysClkPumpConfig
 534              		.cfi_endproc
 535              	.LFE7:
 536              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 537              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 538              		.align	2
 539              		.global	CySysClkGetSysclkSource
 540              		.code	16
 541              		.thumb_func
 542              		.type	CySysClkGetSysclkSource, %function
 543              	CySysClkGetSysclkSource:
 544              	.LFB8:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 545              		.loc 1 511 0
 546              		.cfi_startproc
 547 0000 90B5     		push	{r4, r7, lr}
 548              		.cfi_def_cfa_offset 12
 549              		.cfi_offset 4, -12
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 83B0     		sub	sp, sp, #12
 553              		.cfi_def_cfa_offset 24
 554 0004 00AF     		add	r7, sp, #0
 555              		.cfi_def_cfa_register 7
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 556              		.loc 1 515 0
 557 0006 FC1D     		add	r4, r7, #7
 558 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 559 000c 031C     		mov	r3, r0
 560 000e 2370     		strb	r3, [r4]
 516:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 20


 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 561              		.loc 1 525 0
 562 0010 074B     		ldr	r3, .L33
 563 0012 1B68     		ldr	r3, [r3]
 564 0014 0322     		mov	r2, #3
 565 0016 1340     		and	r3, r2
 566 0018 3B60     		str	r3, [r7]
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 567              		.loc 1 528 0
 568 001a FB1D     		add	r3, r7, #7
 569 001c 1B78     		ldrb	r3, [r3]
 570 001e 181C     		mov	r0, r3
 571 0020 FFF7FEFF 		bl	CyExitCriticalSection
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 572              		.loc 1 530 0
 573 0024 3B68     		ldr	r3, [r7]
 531:Generated_Source\PSoC4/CyLib.c **** }
 574              		.loc 1 531 0
 575 0026 181C     		mov	r0, r3
 576 0028 BD46     		mov	sp, r7
 577 002a 03B0     		add	sp, sp, #12
 578              		@ sp needed
 579 002c 90BD     		pop	{r4, r7, pc}
 580              	.L34:
 581 002e C046     		.align	2
 582              	.L33:
 583 0030 28000340 		.word	1073938472
 584              		.cfi_endproc
 585              	.LFE8:
 586              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 587              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 588              		.align	2
 589              		.global	CySysClkWriteSysclkDiv
 590              		.code	16
 591              		.thumb_func
 592              		.type	CySysClkWriteSysclkDiv, %function
 593              	CySysClkWriteSysclkDiv:
 594              	.LFB9:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 21


 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 595              		.loc 1 566 0
 596              		.cfi_startproc
 597 0000 90B5     		push	{r4, r7, lr}
 598              		.cfi_def_cfa_offset 12
 599              		.cfi_offset 4, -12
 600              		.cfi_offset 7, -8
 601              		.cfi_offset 14, -4
 602 0002 85B0     		sub	sp, sp, #20
 603              		.cfi_def_cfa_offset 32
 604 0004 00AF     		add	r7, sp, #0
 605              		.cfi_def_cfa_register 7
 606 0006 7860     		str	r0, [r7, #4]
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 607              		.loc 1 569 0
 608 0008 0F23     		mov	r3, #15
 609 000a FC18     		add	r4, r7, r3
 610 000c FFF7FEFF 		bl	CyEnterCriticalSection
 611 0010 031C     		mov	r3, r0
 612 0012 2370     		strb	r3, [r4]
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 613              		.loc 1 571 0
 614 0014 094B     		ldr	r3, .L36
 615 0016 7A68     		ldr	r2, [r7, #4]
 616 0018 9201     		lsl	r2, r2, #6
 617 001a FF21     		mov	r1, #255
 618 001c 1140     		and	r1, r2
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 22


 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 619              		.loc 1 573 0
 620 001e 074A     		ldr	r2, .L36
 621 0020 1268     		ldr	r2, [r2]
 622 0022 C020     		mov	r0, #192
 623 0024 8243     		bic	r2, r0
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 624              		.loc 1 572 0
 625 0026 0A43     		orr	r2, r1
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 626              		.loc 1 571 0
 627 0028 1A60     		str	r2, [r3]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 628              		.loc 1 576 0
 629 002a 0F23     		mov	r3, #15
 630 002c FB18     		add	r3, r7, r3
 631 002e 1B78     		ldrb	r3, [r3]
 632 0030 181C     		mov	r0, r3
 633 0032 FFF7FEFF 		bl	CyExitCriticalSection
 577:Generated_Source\PSoC4/CyLib.c **** }
 634              		.loc 1 577 0
 635 0036 BD46     		mov	sp, r7
 636 0038 05B0     		add	sp, sp, #20
 637              		@ sp needed
 638 003a 90BD     		pop	{r4, r7, pc}
 639              	.L37:
 640              		.align	2
 641              	.L36:
 642 003c 28000340 		.word	1073938472
 643              		.cfi_endproc
 644              	.LFE9:
 645              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 646              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 647              		.align	2
 648              		.global	CySysClkWriteImoFreq
 649              		.code	16
 650              		.thumb_func
 651              		.type	CySysClkWriteImoFreq, %function
 652              	CySysClkWriteImoFreq:
 653              	.LFB10:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 23


 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 24


 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 25


 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 26


 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 27


 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 654              		.loc 1 829 0
 655              		.cfi_startproc
 656 0000 90B5     		push	{r4, r7, lr}
 657              		.cfi_def_cfa_offset 12
 658              		.cfi_offset 4, -12
 659              		.cfi_offset 7, -8
 660              		.cfi_offset 14, -4
 661 0002 85B0     		sub	sp, sp, #20
 662              		.cfi_def_cfa_offset 32
 663 0004 00AF     		add	r7, sp, #0
 664              		.cfi_def_cfa_register 7
 665 0006 7860     		str	r0, [r7, #4]
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 666              		.loc 1 834 0
 667 0008 0023     		mov	r3, #0
 668 000a FB60     		str	r3, [r7, #12]
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 669              		.loc 1 846 0
 670 000c 7B68     		ldr	r3, [r7, #4]
 671 000e 182B     		cmp	r3, #24
 672 0010 11D0     		beq	.L39
 673              		.loc 1 846 0 is_stmt 0 discriminator 1
 674 0012 7B68     		ldr	r3, [r7, #4]
 675 0014 1C2B     		cmp	r3, #28
 676 0016 0ED0     		beq	.L39
 677              		.loc 1 846 0 discriminator 2
 678 0018 7B68     		ldr	r3, [r7, #4]
 679 001a 202B     		cmp	r3, #32
 680 001c 0BD0     		beq	.L39
 681              		.loc 1 846 0 discriminator 3
 682 001e 7B68     		ldr	r3, [r7, #4]
 683 0020 242B     		cmp	r3, #36
 684 0022 08D0     		beq	.L39
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 28


 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 685              		.loc 1 847 0 is_stmt 1
 686 0024 7B68     		ldr	r3, [r7, #4]
 687 0026 282B     		cmp	r3, #40
 688 0028 05D0     		beq	.L39
 689              		.loc 1 847 0 is_stmt 0 discriminator 1
 690 002a 7B68     		ldr	r3, [r7, #4]
 691 002c 2C2B     		cmp	r3, #44
 692 002e 02D0     		beq	.L39
 693              		.loc 1 847 0 discriminator 2
 694 0030 7B68     		ldr	r3, [r7, #4]
 695 0032 302B     		cmp	r3, #48
 696 0034 65D1     		bne	.L40
 697              	.L39:
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 698              		.loc 1 851 0 is_stmt 1
 699 0036 0B23     		mov	r3, #11
 700 0038 FC18     		add	r4, r7, r3
 701 003a FFF7FEFF 		bl	CyEnterCriticalSection
 702 003e 031C     		mov	r3, r0
 703 0040 2370     		strb	r3, [r4]
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 704              		.loc 1 854 0
 705 0042 FFF7FEFF 		bl	CySysClkImoGetWcoLock
 706 0046 031E     		sub	r3, r0, #0
 707 0048 03D0     		beq	.L41
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 708              		.loc 1 856 0
 709 004a 0123     		mov	r3, #1
 710 004c FB60     		str	r3, [r7, #12]
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 711              		.loc 1 857 0
 712 004e FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 713              	.L41:
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 29


 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 714              		.loc 1 882 0
 715 0052 2F4B     		ldr	r3, .L45
 716 0054 2E4A     		ldr	r2, .L45
 717 0056 1268     		ldr	r2, [r2]
 718 0058 0721     		mov	r1, #7
 719 005a 8A43     		bic	r2, r1
 720 005c 1A60     		str	r2, [r3]
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 721              		.loc 1 900 0
 722 005e 7B68     		ldr	r3, [r7, #4]
 723 0060 2C4A     		ldr	r2, .L45+4
 724 0062 9A18     		add	r2, r3, r2
 725 0064 0A23     		mov	r3, #10
 726 0066 FB18     		add	r3, r7, r3
 727 0068 1278     		ldrb	r2, [r2]
 728 006a 1A70     		strb	r2, [r3]
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 729              		.loc 1 902 0
 730 006c 2A4B     		ldr	r3, .L45+8
 731 006e 0A22     		mov	r2, #10
 732 0070 BA18     		add	r2, r7, r2
 733 0072 1278     		ldrb	r2, [r2]
 734 0074 1A60     		str	r2, [r3]
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 735              		.loc 1 905 0
 736 0076 294B     		ldr	r3, .L45+12
 737 0078 284A     		ldr	r2, .L45+12
 738 007a 1268     		ldr	r2, [r2]
 739 007c 0721     		mov	r1, #7
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 30


 740 007e 8A43     		bic	r2, r1
 741 0080 1A60     		str	r2, [r3]
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 742              		.loc 1 908 0
 743 0082 274B     		ldr	r3, .L45+16
 744 0084 264A     		ldr	r2, .L45+16
 745 0086 1268     		ldr	r2, [r2]
 746 0088 7F21     		mov	r1, #127
 747 008a 8A43     		bic	r2, r1
 748 008c 111C     		mov	r1, r2
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 749              		.loc 1 909 0
 750 008e 7A68     		ldr	r2, [r7, #4]
 751 0090 2448     		ldr	r0, .L45+20
 752 0092 8446     		mov	ip, r0
 753 0094 6244     		add	r2, r2, ip
 754 0096 1278     		ldrb	r2, [r2]
 755 0098 D2B2     		uxtb	r2, r2
 756 009a 101C     		mov	r0, r2
 757 009c 7F22     		mov	r2, #127
 758 009e 0240     		and	r2, r0
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 759              		.loc 1 908 0
 760 00a0 0A43     		orr	r2, r1
 761 00a2 1A60     		str	r2, [r3]
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 762              		.loc 1 911 0
 763 00a4 3220     		mov	r0, #50
 764 00a6 FFF7FEFF 		bl	CyDelayCycles
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 765              		.loc 1 913 0
 766 00aa 7B68     		ldr	r3, [r7, #4]
 767 00ac 182B     		cmp	r3, #24
 768 00ae 1CD9     		bls	.L42
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 769              		.loc 1 916 0
 770 00b0 174B     		ldr	r3, .L45
 771 00b2 174A     		ldr	r2, .L45
 772 00b4 1268     		ldr	r2, [r2]
 773 00b6 0721     		mov	r1, #7
 774 00b8 8A43     		bic	r2, r1
 775 00ba 111C     		mov	r1, r2
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 776              		.loc 1 917 0
 777 00bc 7A68     		ldr	r2, [r7, #4]
 778 00be 1C3A     		sub	r2, r2, #28
 779 00c0 9208     		lsr	r2, r2, #2
 780 00c2 0720     		mov	r0, #7
 781 00c4 0240     		and	r2, r0
 916:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 782              		.loc 1 916 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 31


 783 00c6 0A43     		orr	r2, r1
 784 00c8 1A60     		str	r2, [r3]
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 785              		.loc 1 919 0
 786 00ca 3220     		mov	r0, #50
 787 00cc FFF7FEFF 		bl	CyDelayCycles
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 788              		.loc 1 923 0
 789 00d0 0F4B     		ldr	r3, .L45
 790 00d2 0F4A     		ldr	r2, .L45
 791 00d4 1268     		ldr	r2, [r2]
 792 00d6 0721     		mov	r1, #7
 793 00d8 8A43     		bic	r2, r1
 794 00da 111C     		mov	r1, r2
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 795              		.loc 1 924 0
 796 00dc 7A68     		ldr	r2, [r7, #4]
 797 00de 183A     		sub	r2, r2, #24
 798 00e0 9208     		lsr	r2, r2, #2
 799 00e2 0720     		mov	r0, #7
 800 00e4 0240     		and	r2, r0
 923:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 801              		.loc 1 923 0
 802 00e6 0A43     		orr	r2, r1
 803 00e8 1A60     		str	r2, [r3]
 804              	.L42:
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 805              		.loc 1 928 0
 806 00ea FB68     		ldr	r3, [r7, #12]
 807 00ec 012B     		cmp	r3, #1
 808 00ee 01D1     		bne	.L43
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 809              		.loc 1 930 0
 810 00f0 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 811              	.L43:
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 812              		.loc 1 942 0
 813 00f4 0B23     		mov	r3, #11
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 32


 814 00f6 FB18     		add	r3, r7, r3
 815 00f8 1B78     		ldrb	r3, [r3]
 816 00fa 181C     		mov	r0, r3
 817 00fc FFF7FEFF 		bl	CyExitCriticalSection
 818 0100 02E0     		b	.L38
 819              	.L40:
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 820              		.loc 1 947 0 discriminator 1
 821 0102 0020     		mov	r0, #0
 822 0104 FFF7FEFF 		bl	CyHalt
 823              	.L38:
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 824              		.loc 1 949 0
 825 0108 BD46     		mov	sp, r7
 826 010a 05B0     		add	sp, sp, #20
 827              		@ sp needed
 828 010c 90BD     		pop	{r4, r7, pc}
 829              	.L46:
 830 010e C046     		.align	2
 831              	.L45:
 832 0110 080F0340 		.word	1073942280
 833 0114 CDF1FF0F 		.word	268431821
 834 0118 0C0F0340 		.word	1073942284
 835 011c 100F0340 		.word	1073942288
 836 0120 180F0340 		.word	1073942296
 837 0124 B4F1FF0F 		.word	268431796
 838              		.cfi_endproc
 839              	.LFE10:
 840              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 841              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 842              		.align	2
 843              		.global	CySysClkWriteHfclkDiv
 844              		.code	16
 845              		.thumb_func
 846              		.type	CySysClkWriteHfclkDiv, %function
 847              	CySysClkWriteHfclkDiv:
 848              	.LFB11:
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 33


 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 849              		.loc 1 982 0
 850              		.cfi_startproc
 851 0000 90B5     		push	{r4, r7, lr}
 852              		.cfi_def_cfa_offset 12
 853              		.cfi_offset 4, -12
 854              		.cfi_offset 7, -8
 855              		.cfi_offset 14, -4
 856 0002 85B0     		sub	sp, sp, #20
 857              		.cfi_def_cfa_offset 32
 858 0004 00AF     		add	r7, sp, #0
 859              		.cfi_def_cfa_register 7
 860 0006 7860     		str	r0, [r7, #4]
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 861              		.loc 1 985 0
 862 0008 0F23     		mov	r3, #15
 863 000a FC18     		add	r4, r7, r3
 864 000c FFF7FEFF 		bl	CyEnterCriticalSection
 865 0010 031C     		mov	r3, r0
 866 0012 2370     		strb	r3, [r4]
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 867              		.loc 1 987 0
 868 0014 0A4B     		ldr	r3, .L48
 869 0016 0A4A     		ldr	r2, .L48
 870 0018 1268     		ldr	r2, [r2]
 871 001a 0C21     		mov	r1, #12
 872 001c 8A43     		bic	r2, r1
 873 001e 111C     		mov	r1, r2
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 874              		.loc 1 989 0
 875 0020 7A68     		ldr	r2, [r7, #4]
 876 0022 0320     		mov	r0, #3
 877 0024 0240     		and	r2, r0
 878 0026 9200     		lsl	r2, r2, #2
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 879              		.loc 1 988 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 34


 880 0028 0A43     		orr	r2, r1
 987:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 881              		.loc 1 987 0
 882 002a 1A60     		str	r2, [r3]
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 883              		.loc 1 991 0
 884 002c 0F23     		mov	r3, #15
 885 002e FB18     		add	r3, r7, r3
 886 0030 1B78     		ldrb	r3, [r3]
 887 0032 181C     		mov	r0, r3
 888 0034 FFF7FEFF 		bl	CyExitCriticalSection
 992:Generated_Source\PSoC4/CyLib.c ****     }
 889              		.loc 1 992 0
 890 0038 BD46     		mov	sp, r7
 891 003a 05B0     		add	sp, sp, #20
 892              		@ sp needed
 893 003c 90BD     		pop	{r4, r7, pc}
 894              	.L49:
 895 003e C046     		.align	2
 896              	.L48:
 897 0040 28000340 		.word	1073938472
 898              		.cfi_endproc
 899              	.LFE11:
 900              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 901              		.section	.text.CySysGetResetReason,"ax",%progbits
 902              		.align	2
 903              		.global	CySysGetResetReason
 904              		.code	16
 905              		.thumb_func
 906              		.type	CySysGetResetReason, %function
 907              	CySysGetResetReason:
 908              	.LFB12:
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 35


1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 36


1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 37


1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 38


1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 39


1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 40


1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 41


1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 42


1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 43


1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 44


1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 45


1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 46


1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 47


1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 48


1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 49


1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 50


1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 51


1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 52


1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 53


2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 54


2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2152:Generated_Source\PSoC4/CyLib.c ****     }
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 55


2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2169:Generated_Source\PSoC4/CyLib.c ****     }
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2185:Generated_Source\PSoC4/CyLib.c ****     }
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 909              		.loc 1 2209 0
 910              		.cfi_startproc
 911 0000 80B5     		push	{r7, lr}
 912              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 56


 913              		.cfi_offset 7, -8
 914              		.cfi_offset 14, -4
 915 0002 84B0     		sub	sp, sp, #16
 916              		.cfi_def_cfa_offset 24
 917 0004 00AF     		add	r7, sp, #0
 918              		.cfi_def_cfa_register 7
 919 0006 7860     		str	r0, [r7, #4]
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 920              		.loc 1 2212 0
 921 0008 7B68     		ldr	r3, [r7, #4]
 922 000a 1922     		mov	r2, #25
 923 000c 1340     		and	r3, r2
 924 000e 7B60     		str	r3, [r7, #4]
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 925              		.loc 1 2213 0
 926 0010 064B     		ldr	r3, .L52
 927 0012 1B68     		ldr	r3, [r3]
 928 0014 1922     		mov	r2, #25
 929 0016 1340     		and	r3, r2
 930 0018 FB60     		str	r3, [r7, #12]
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 931              		.loc 1 2215 0
 932 001a 044B     		ldr	r3, .L52
 933 001c 7A68     		ldr	r2, [r7, #4]
 934 001e 1A60     		str	r2, [r3]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 935              		.loc 1 2217 0
 936 0020 FB68     		ldr	r3, [r7, #12]
2218:Generated_Source\PSoC4/CyLib.c **** }
 937              		.loc 1 2218 0
 938 0022 181C     		mov	r0, r3
 939 0024 BD46     		mov	sp, r7
 940 0026 04B0     		add	sp, sp, #16
 941              		@ sp needed
 942 0028 80BD     		pop	{r7, pc}
 943              	.L53:
 944 002a C046     		.align	2
 945              	.L52:
 946 002c 54000340 		.word	1073938516
 947              		.cfi_endproc
 948              	.LFE12:
 949              		.size	CySysGetResetReason, .-CySysGetResetReason
 950              		.section	.text.CyDisableInts,"ax",%progbits
 951              		.align	2
 952              		.global	CyDisableInts
 953              		.code	16
 954              		.thumb_func
 955              		.type	CyDisableInts, %function
 956              	CyDisableInts:
 957              	.LFB13:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 57


2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 958              		.loc 1 2232 0
 959              		.cfi_startproc
 960 0000 80B5     		push	{r7, lr}
 961              		.cfi_def_cfa_offset 8
 962              		.cfi_offset 7, -8
 963              		.cfi_offset 14, -4
 964 0002 82B0     		sub	sp, sp, #8
 965              		.cfi_def_cfa_offset 16
 966 0004 00AF     		add	r7, sp, #0
 967              		.cfi_def_cfa_register 7
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 968              		.loc 1 2236 0
 969 0006 064B     		ldr	r3, .L56
 970 0008 1B68     		ldr	r3, [r3]
 971 000a 7B60     		str	r3, [r7, #4]
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 972              		.loc 1 2239 0
 973 000c 044B     		ldr	r3, .L56
 974 000e 0122     		mov	r2, #1
 975 0010 5242     		neg	r2, r2
 976 0012 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 977              		.loc 1 2241 0
 978 0014 7B68     		ldr	r3, [r7, #4]
2242:Generated_Source\PSoC4/CyLib.c **** }
 979              		.loc 1 2242 0
 980 0016 181C     		mov	r0, r3
 981 0018 BD46     		mov	sp, r7
 982 001a 02B0     		add	sp, sp, #8
 983              		@ sp needed
 984 001c 80BD     		pop	{r7, pc}
 985              	.L57:
 986 001e C046     		.align	2
 987              	.L56:
 988 0020 80E100E0 		.word	-536813184
 989              		.cfi_endproc
 990              	.LFE13:
 991              		.size	CyDisableInts, .-CyDisableInts
 992              		.section	.text.CyEnableInts,"ax",%progbits
 993              		.align	2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 58


 994              		.global	CyEnableInts
 995              		.code	16
 996              		.thumb_func
 997              		.type	CyEnableInts, %function
 998              	CyEnableInts:
 999              	.LFB14:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 1000              		.loc 1 2255 0
 1001              		.cfi_startproc
 1002 0000 80B5     		push	{r7, lr}
 1003              		.cfi_def_cfa_offset 8
 1004              		.cfi_offset 7, -8
 1005              		.cfi_offset 14, -4
 1006 0002 82B0     		sub	sp, sp, #8
 1007              		.cfi_def_cfa_offset 16
 1008 0004 00AF     		add	r7, sp, #0
 1009              		.cfi_def_cfa_register 7
 1010 0006 7860     		str	r0, [r7, #4]
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1011              		.loc 1 2256 0
 1012 0008 024B     		ldr	r3, .L59
 1013 000a 7A68     		ldr	r2, [r7, #4]
 1014 000c 1A60     		str	r2, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 1015              		.loc 1 2257 0
 1016 000e BD46     		mov	sp, r7
 1017 0010 02B0     		add	sp, sp, #8
 1018              		@ sp needed
 1019 0012 80BD     		pop	{r7, pc}
 1020              	.L60:
 1021              		.align	2
 1022              	.L59:
 1023 0014 00E100E0 		.word	-536813312
 1024              		.cfi_endproc
 1025              	.LFE14:
 1026              		.size	CyEnableInts, .-CyEnableInts
 1027              		.section	.text.CyIntSetSysVector,"ax",%progbits
 1028              		.align	2
 1029              		.global	CyIntSetSysVector
 1030              		.code	16
 1031              		.thumb_func
 1032              		.type	CyIntSetSysVector, %function
 1033              	CyIntSetSysVector:
 1034              	.LFB15:
2258:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 59


2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
 1035              		.loc 1 2280 0
 1036              		.cfi_startproc
 1037 0000 80B5     		push	{r7, lr}
 1038              		.cfi_def_cfa_offset 8
 1039              		.cfi_offset 7, -8
 1040              		.cfi_offset 14, -4
 1041 0002 84B0     		sub	sp, sp, #16
 1042              		.cfi_def_cfa_offset 24
 1043 0004 00AF     		add	r7, sp, #0
 1044              		.cfi_def_cfa_register 7
 1045 0006 021C     		mov	r2, r0
 1046 0008 3960     		str	r1, [r7]
 1047 000a FB1D     		add	r3, r7, #7
 1048 000c 1A70     		strb	r2, [r3]
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1049              		.loc 1 2282 0
 1050 000e 8023     		mov	r3, #128
 1051 0010 9B05     		lsl	r3, r3, #22
 1052 0012 FB60     		str	r3, [r7, #12]
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1053              		.loc 1 2284 0
 1054 0014 FB1D     		add	r3, r7, #7
 1055 0016 1B78     		ldrb	r3, [r3]
 1056 0018 0F2B     		cmp	r3, #15
 1057 001a 02D9     		bls	.L62
 1058              		.loc 1 2284 0 is_stmt 0 discriminator 1
 1059 001c 0020     		mov	r0, #0
 1060 001e FFF7FEFF 		bl	CyHalt
 1061              	.L62:
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 1062              		.loc 1 2287 0 is_stmt 1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 60


 1063 0022 FB1D     		add	r3, r7, #7
 1064 0024 1B78     		ldrb	r3, [r3]
 1065 0026 9B00     		lsl	r3, r3, #2
 1066 0028 FA68     		ldr	r2, [r7, #12]
 1067 002a D318     		add	r3, r2, r3
 1068 002c 1B68     		ldr	r3, [r3]
 1069 002e BB60     		str	r3, [r7, #8]
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1070              		.loc 1 2290 0
 1071 0030 FB1D     		add	r3, r7, #7
 1072 0032 1B78     		ldrb	r3, [r3]
 1073 0034 9B00     		lsl	r3, r3, #2
 1074 0036 FA68     		ldr	r2, [r7, #12]
 1075 0038 D318     		add	r3, r2, r3
 1076 003a 3A68     		ldr	r2, [r7]
 1077 003c 1A60     		str	r2, [r3]
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1078              		.loc 1 2292 0
 1079 003e BB68     		ldr	r3, [r7, #8]
2293:Generated_Source\PSoC4/CyLib.c **** }
 1080              		.loc 1 2293 0
 1081 0040 181C     		mov	r0, r3
 1082 0042 BD46     		mov	sp, r7
 1083 0044 04B0     		add	sp, sp, #16
 1084              		@ sp needed
 1085 0046 80BD     		pop	{r7, pc}
 1086              		.cfi_endproc
 1087              	.LFE15:
 1088              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1089              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1090              		.align	2
 1091              		.global	CyIntGetSysVector
 1092              		.code	16
 1093              		.thumb_func
 1094              		.type	CyIntGetSysVector, %function
 1095              	CyIntGetSysVector:
 1096              	.LFB16:
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 61


2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
 1097              		.loc 1 2314 0
 1098              		.cfi_startproc
 1099 0000 80B5     		push	{r7, lr}
 1100              		.cfi_def_cfa_offset 8
 1101              		.cfi_offset 7, -8
 1102              		.cfi_offset 14, -4
 1103 0002 84B0     		sub	sp, sp, #16
 1104              		.cfi_def_cfa_offset 24
 1105 0004 00AF     		add	r7, sp, #0
 1106              		.cfi_def_cfa_register 7
 1107 0006 021C     		mov	r2, r0
 1108 0008 FB1D     		add	r3, r7, #7
 1109 000a 1A70     		strb	r2, [r3]
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1110              		.loc 1 2315 0
 1111 000c 8023     		mov	r3, #128
 1112 000e 9B05     		lsl	r3, r3, #22
 1113 0010 FB60     		str	r3, [r7, #12]
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1114              		.loc 1 2317 0
 1115 0012 FB1D     		add	r3, r7, #7
 1116 0014 1B78     		ldrb	r3, [r3]
 1117 0016 0F2B     		cmp	r3, #15
 1118 0018 02D9     		bls	.L65
 1119              		.loc 1 2317 0 is_stmt 0 discriminator 1
 1120 001a 0020     		mov	r0, #0
 1121 001c FFF7FEFF 		bl	CyHalt
 1122              	.L65:
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1123              		.loc 1 2319 0 is_stmt 1
 1124 0020 FB1D     		add	r3, r7, #7
 1125 0022 1B78     		ldrb	r3, [r3]
 1126 0024 9B00     		lsl	r3, r3, #2
 1127 0026 FA68     		ldr	r2, [r7, #12]
 1128 0028 D318     		add	r3, r2, r3
 1129 002a 1B68     		ldr	r3, [r3]
2320:Generated_Source\PSoC4/CyLib.c **** }
 1130              		.loc 1 2320 0
 1131 002c 181C     		mov	r0, r3
 1132 002e BD46     		mov	sp, r7
 1133 0030 04B0     		add	sp, sp, #16
 1134              		@ sp needed
 1135 0032 80BD     		pop	{r7, pc}
 1136              		.cfi_endproc
 1137              	.LFE16:
 1138              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1139              		.section	.text.CyIntSetVector,"ax",%progbits
 1140              		.align	2
 1141              		.global	CyIntSetVector
 1142              		.code	16
 1143              		.thumb_func
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 62


 1144              		.type	CyIntSetVector, %function
 1145              	CyIntSetVector:
 1146              	.LFB17:
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
 1147              		.loc 1 2336 0
 1148              		.cfi_startproc
 1149 0000 80B5     		push	{r7, lr}
 1150              		.cfi_def_cfa_offset 8
 1151              		.cfi_offset 7, -8
 1152              		.cfi_offset 14, -4
 1153 0002 84B0     		sub	sp, sp, #16
 1154              		.cfi_def_cfa_offset 24
 1155 0004 00AF     		add	r7, sp, #0
 1156              		.cfi_def_cfa_register 7
 1157 0006 021C     		mov	r2, r0
 1158 0008 3960     		str	r1, [r7]
 1159 000a FB1D     		add	r3, r7, #7
 1160 000c 1A70     		strb	r2, [r3]
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1161              		.loc 1 2338 0
 1162 000e 8023     		mov	r3, #128
 1163 0010 9B05     		lsl	r3, r3, #22
 1164 0012 FB60     		str	r3, [r7, #12]
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1165              		.loc 1 2340 0
 1166 0014 FB1D     		add	r3, r7, #7
 1167 0016 1B78     		ldrb	r3, [r3]
 1168 0018 182B     		cmp	r3, #24
 1169 001a 02D9     		bls	.L68
 1170              		.loc 1 2340 0 is_stmt 0 discriminator 1
 1171 001c 0020     		mov	r0, #0
 1172 001e FFF7FEFF 		bl	CyHalt
 1173              	.L68:
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1174              		.loc 1 2343 0 is_stmt 1
 1175 0022 FB1D     		add	r3, r7, #7
 1176 0024 1B78     		ldrb	r3, [r3]
 1177 0026 1033     		add	r3, r3, #16
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 63


 1178 0028 9B00     		lsl	r3, r3, #2
 1179 002a FA68     		ldr	r2, [r7, #12]
 1180 002c D318     		add	r3, r2, r3
 1181 002e 1B68     		ldr	r3, [r3]
 1182 0030 BB60     		str	r3, [r7, #8]
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1183              		.loc 1 2346 0
 1184 0032 FB1D     		add	r3, r7, #7
 1185 0034 1B78     		ldrb	r3, [r3]
 1186 0036 1033     		add	r3, r3, #16
 1187 0038 9B00     		lsl	r3, r3, #2
 1188 003a FA68     		ldr	r2, [r7, #12]
 1189 003c D318     		add	r3, r2, r3
 1190 003e 3A68     		ldr	r2, [r7]
 1191 0040 1A60     		str	r2, [r3]
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1192              		.loc 1 2348 0
 1193 0042 BB68     		ldr	r3, [r7, #8]
2349:Generated_Source\PSoC4/CyLib.c **** }
 1194              		.loc 1 2349 0
 1195 0044 181C     		mov	r0, r3
 1196 0046 BD46     		mov	sp, r7
 1197 0048 04B0     		add	sp, sp, #16
 1198              		@ sp needed
 1199 004a 80BD     		pop	{r7, pc}
 1200              		.cfi_endproc
 1201              	.LFE17:
 1202              		.size	CyIntSetVector, .-CyIntSetVector
 1203              		.section	.text.CyIntGetVector,"ax",%progbits
 1204              		.align	2
 1205              		.global	CyIntGetVector
 1206              		.code	16
 1207              		.thumb_func
 1208              		.type	CyIntGetVector, %function
 1209              	CyIntGetVector:
 1210              	.LFB18:
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
 1211              		.loc 1 2364 0
 1212              		.cfi_startproc
 1213 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 64


 1214              		.cfi_def_cfa_offset 8
 1215              		.cfi_offset 7, -8
 1216              		.cfi_offset 14, -4
 1217 0002 84B0     		sub	sp, sp, #16
 1218              		.cfi_def_cfa_offset 24
 1219 0004 00AF     		add	r7, sp, #0
 1220              		.cfi_def_cfa_register 7
 1221 0006 021C     		mov	r2, r0
 1222 0008 FB1D     		add	r3, r7, #7
 1223 000a 1A70     		strb	r2, [r3]
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1224              		.loc 1 2365 0
 1225 000c 8023     		mov	r3, #128
 1226 000e 9B05     		lsl	r3, r3, #22
 1227 0010 FB60     		str	r3, [r7, #12]
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1228              		.loc 1 2367 0
 1229 0012 FB1D     		add	r3, r7, #7
 1230 0014 1B78     		ldrb	r3, [r3]
 1231 0016 182B     		cmp	r3, #24
 1232 0018 02D9     		bls	.L71
 1233              		.loc 1 2367 0 is_stmt 0 discriminator 1
 1234 001a 0020     		mov	r0, #0
 1235 001c FFF7FEFF 		bl	CyHalt
 1236              	.L71:
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1237              		.loc 1 2369 0 is_stmt 1
 1238 0020 FB1D     		add	r3, r7, #7
 1239 0022 1B78     		ldrb	r3, [r3]
 1240 0024 1033     		add	r3, r3, #16
 1241 0026 9B00     		lsl	r3, r3, #2
 1242 0028 FA68     		ldr	r2, [r7, #12]
 1243 002a D318     		add	r3, r2, r3
 1244 002c 1B68     		ldr	r3, [r3]
2370:Generated_Source\PSoC4/CyLib.c **** }
 1245              		.loc 1 2370 0
 1246 002e 181C     		mov	r0, r3
 1247 0030 BD46     		mov	sp, r7
 1248 0032 04B0     		add	sp, sp, #16
 1249              		@ sp needed
 1250 0034 80BD     		pop	{r7, pc}
 1251              		.cfi_endproc
 1252              	.LFE18:
 1253              		.size	CyIntGetVector, .-CyIntGetVector
 1254              		.section	.text.CyIntSetPriority,"ax",%progbits
 1255              		.align	2
 1256              		.global	CyIntSetPriority
 1257              		.code	16
 1258              		.thumb_func
 1259              		.type	CyIntSetPriority, %function
 1260              	CyIntSetPriority:
 1261              	.LFB19:
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 65


2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
 1262              		.loc 1 2383 0
 1263              		.cfi_startproc
 1264 0000 90B5     		push	{r4, r7, lr}
 1265              		.cfi_def_cfa_offset 12
 1266              		.cfi_offset 4, -12
 1267              		.cfi_offset 7, -8
 1268              		.cfi_offset 14, -4
 1269 0002 87B0     		sub	sp, sp, #28
 1270              		.cfi_def_cfa_offset 40
 1271 0004 00AF     		add	r7, sp, #0
 1272              		.cfi_def_cfa_register 7
 1273 0006 021C     		mov	r2, r0
 1274 0008 FB1D     		add	r3, r7, #7
 1275 000a 1A70     		strb	r2, [r3]
 1276 000c BB1D     		add	r3, r7, #6
 1277 000e 0A1C     		add	r2, r1, #0
 1278 0010 1A70     		strb	r2, [r3]
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1279              		.loc 1 2388 0
 1280 0012 BB1D     		add	r3, r7, #6
 1281 0014 1B78     		ldrb	r3, [r3]
 1282 0016 032B     		cmp	r3, #3
 1283 0018 02D9     		bls	.L74
 1284              		.loc 1 2388 0 is_stmt 0 discriminator 1
 1285 001a 0020     		mov	r0, #0
 1286 001c FFF7FEFF 		bl	CyHalt
 1287              	.L74:
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1288              		.loc 1 2389 0 is_stmt 1
 1289 0020 FB1D     		add	r3, r7, #7
 1290 0022 1B78     		ldrb	r3, [r3]
 1291 0024 182B     		cmp	r3, #24
 1292 0026 02D9     		bls	.L75
 1293              		.loc 1 2389 0 is_stmt 0 discriminator 1
 1294 0028 0020     		mov	r0, #0
 1295 002a FFF7FEFF 		bl	CyHalt
 1296              	.L75:
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1297              		.loc 1 2391 0 is_stmt 1
 1298 002e FB1D     		add	r3, r7, #7
 1299 0030 1B78     		ldrb	r3, [r3]
 1300 0032 0322     		mov	r2, #3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 66


 1301 0034 1340     		and	r3, r2
 1302 0036 DB00     		lsl	r3, r3, #3
 1303 0038 0633     		add	r3, r3, #6
 1304 003a 7B61     		str	r3, [r7, #20]
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1305              		.loc 1 2393 0
 1306 003c 1323     		mov	r3, #19
 1307 003e FC18     		add	r4, r7, r3
 1308 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1309 0044 031C     		mov	r3, r0
 1310 0046 2370     		strb	r3, [r4]
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1311              		.loc 1 2395 0
 1312 0048 FB1D     		add	r3, r7, #7
 1313 004a 1B78     		ldrb	r3, [r3]
 1314 004c 9B08     		lsr	r3, r3, #2
 1315 004e DBB2     		uxtb	r3, r3
 1316 0050 9B00     		lsl	r3, r3, #2
 1317 0052 144A     		ldr	r2, .L76
 1318 0054 9446     		mov	ip, r2
 1319 0056 6344     		add	r3, r3, ip
 1320 0058 1B68     		ldr	r3, [r3]
 1321 005a FB60     		str	r3, [r7, #12]
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1322              		.loc 1 2396 0
 1323 005c 7B69     		ldr	r3, [r7, #20]
 1324 005e 0322     		mov	r2, #3
 1325 0060 9A40     		lsl	r2, r2, r3
 1326 0062 131C     		mov	r3, r2
 1327 0064 DA43     		mvn	r2, r3
 1328 0066 FB68     		ldr	r3, [r7, #12]
 1329 0068 1340     		and	r3, r2
 1330 006a FB60     		str	r3, [r7, #12]
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1331              		.loc 1 2397 0
 1332 006c BB1D     		add	r3, r7, #6
 1333 006e 1A78     		ldrb	r2, [r3]
 1334 0070 7B69     		ldr	r3, [r7, #20]
 1335 0072 9A40     		lsl	r2, r2, r3
 1336 0074 131C     		mov	r3, r2
 1337 0076 FA68     		ldr	r2, [r7, #12]
 1338 0078 1343     		orr	r3, r2
 1339 007a FB60     		str	r3, [r7, #12]
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1340              		.loc 1 2398 0
 1341 007c FB1D     		add	r3, r7, #7
 1342 007e 1B78     		ldrb	r3, [r3]
 1343 0080 9B08     		lsr	r3, r3, #2
 1344 0082 DBB2     		uxtb	r3, r3
 1345 0084 9B00     		lsl	r3, r3, #2
 1346 0086 074A     		ldr	r2, .L76
 1347 0088 9446     		mov	ip, r2
 1348 008a 6344     		add	r3, r3, ip
 1349 008c FA68     		ldr	r2, [r7, #12]
 1350 008e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 67


2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1351              		.loc 1 2400 0
 1352 0090 1323     		mov	r3, #19
 1353 0092 FB18     		add	r3, r7, r3
 1354 0094 1B78     		ldrb	r3, [r3]
 1355 0096 181C     		mov	r0, r3
 1356 0098 FFF7FEFF 		bl	CyExitCriticalSection
2401:Generated_Source\PSoC4/CyLib.c **** }
 1357              		.loc 1 2401 0
 1358 009c BD46     		mov	sp, r7
 1359 009e 07B0     		add	sp, sp, #28
 1360              		@ sp needed
 1361 00a0 90BD     		pop	{r4, r7, pc}
 1362              	.L77:
 1363 00a2 C046     		.align	2
 1364              	.L76:
 1365 00a4 00E400E0 		.word	-536812544
 1366              		.cfi_endproc
 1367              	.LFE19:
 1368              		.size	CyIntSetPriority, .-CyIntSetPriority
 1369              		.section	.text.CyIntGetPriority,"ax",%progbits
 1370              		.align	2
 1371              		.global	CyIntGetPriority
 1372              		.code	16
 1373              		.thumb_func
 1374              		.type	CyIntGetPriority, %function
 1375              	CyIntGetPriority:
 1376              	.LFB20:
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
 1377              		.loc 1 2417 0
 1378              		.cfi_startproc
 1379 0000 80B5     		push	{r7, lr}
 1380              		.cfi_def_cfa_offset 8
 1381              		.cfi_offset 7, -8
 1382              		.cfi_offset 14, -4
 1383 0002 84B0     		sub	sp, sp, #16
 1384              		.cfi_def_cfa_offset 24
 1385 0004 00AF     		add	r7, sp, #0
 1386              		.cfi_def_cfa_register 7
 1387 0006 021C     		mov	r2, r0
 1388 0008 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 68


 1389 000a 1A70     		strb	r2, [r3]
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1390              		.loc 1 2420 0
 1391 000c FB1D     		add	r3, r7, #7
 1392 000e 1B78     		ldrb	r3, [r3]
 1393 0010 182B     		cmp	r3, #24
 1394 0012 02D9     		bls	.L79
 1395              		.loc 1 2420 0 is_stmt 0 discriminator 1
 1396 0014 0020     		mov	r0, #0
 1397 0016 FFF7FEFF 		bl	CyHalt
 1398              	.L79:
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1399              		.loc 1 2422 0 is_stmt 1
 1400 001a FB1D     		add	r3, r7, #7
 1401 001c 1B78     		ldrb	r3, [r3]
 1402 001e 9B08     		lsr	r3, r3, #2
 1403 0020 DBB2     		uxtb	r3, r3
 1404 0022 9B00     		lsl	r3, r3, #2
 1405 0024 0C4A     		ldr	r2, .L81
 1406 0026 9446     		mov	ip, r2
 1407 0028 6344     		add	r3, r3, ip
 1408 002a 1B68     		ldr	r3, [r3]
 1409 002c FA1D     		add	r2, r7, #7
 1410 002e 1278     		ldrb	r2, [r2]
 1411 0030 0321     		mov	r1, #3
 1412 0032 0A40     		and	r2, r1
 1413 0034 D200     		lsl	r2, r2, #3
 1414 0036 0632     		add	r2, r2, #6
 1415 0038 D340     		lsr	r3, r3, r2
 1416 003a 1A1C     		mov	r2, r3
 1417 003c 0F23     		mov	r3, #15
 1418 003e FB18     		add	r3, r7, r3
 1419 0040 1A70     		strb	r2, [r3]
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1420              		.loc 1 2424 0
 1421 0042 0F23     		mov	r3, #15
 1422 0044 FB18     		add	r3, r7, r3
 1423 0046 1B78     		ldrb	r3, [r3]
 1424 0048 0322     		mov	r2, #3
 1425 004a 1340     		and	r3, r2
 1426 004c DBB2     		uxtb	r3, r3
2425:Generated_Source\PSoC4/CyLib.c **** }
 1427              		.loc 1 2425 0
 1428 004e 181C     		mov	r0, r3
 1429 0050 BD46     		mov	sp, r7
 1430 0052 04B0     		add	sp, sp, #16
 1431              		@ sp needed
 1432 0054 80BD     		pop	{r7, pc}
 1433              	.L82:
 1434 0056 C046     		.align	2
 1435              	.L81:
 1436 0058 00E400E0 		.word	-536812544
 1437              		.cfi_endproc
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 69


 1438              	.LFE20:
 1439              		.size	CyIntGetPriority, .-CyIntGetPriority
 1440              		.section	.text.CyIntEnable,"ax",%progbits
 1441              		.align	2
 1442              		.global	CyIntEnable
 1443              		.code	16
 1444              		.thumb_func
 1445              		.type	CyIntEnable, %function
 1446              	CyIntEnable:
 1447              	.LFB21:
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 1448              		.loc 1 2438 0
 1449              		.cfi_startproc
 1450 0000 80B5     		push	{r7, lr}
 1451              		.cfi_def_cfa_offset 8
 1452              		.cfi_offset 7, -8
 1453              		.cfi_offset 14, -4
 1454 0002 82B0     		sub	sp, sp, #8
 1455              		.cfi_def_cfa_offset 16
 1456 0004 00AF     		add	r7, sp, #0
 1457              		.cfi_def_cfa_register 7
 1458 0006 021C     		mov	r2, r0
 1459 0008 FB1D     		add	r3, r7, #7
 1460 000a 1A70     		strb	r2, [r3]
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1461              		.loc 1 2439 0
 1462 000c 054B     		ldr	r3, .L84
 1463 000e FA1D     		add	r2, r7, #7
 1464 0010 1278     		ldrb	r2, [r2]
 1465 0012 1F21     		mov	r1, #31
 1466 0014 0A40     		and	r2, r1
 1467 0016 0121     		mov	r1, #1
 1468 0018 9140     		lsl	r1, r1, r2
 1469 001a 0A1C     		mov	r2, r1
 1470 001c 1A60     		str	r2, [r3]
2440:Generated_Source\PSoC4/CyLib.c **** }
 1471              		.loc 1 2440 0
 1472 001e BD46     		mov	sp, r7
 1473 0020 02B0     		add	sp, sp, #8
 1474              		@ sp needed
 1475 0022 80BD     		pop	{r7, pc}
 1476              	.L85:
 1477              		.align	2
 1478              	.L84:
 1479 0024 00E100E0 		.word	-536813312
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 70


 1480              		.cfi_endproc
 1481              	.LFE21:
 1482              		.size	CyIntEnable, .-CyIntEnable
 1483              		.section	.text.CyIntGetState,"ax",%progbits
 1484              		.align	2
 1485              		.global	CyIntGetState
 1486              		.code	16
 1487              		.thumb_func
 1488              		.type	CyIntGetState, %function
 1489              	CyIntGetState:
 1490              	.LFB22:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 1491              		.loc 1 2456 0
 1492              		.cfi_startproc
 1493 0000 80B5     		push	{r7, lr}
 1494              		.cfi_def_cfa_offset 8
 1495              		.cfi_offset 7, -8
 1496              		.cfi_offset 14, -4
 1497 0002 82B0     		sub	sp, sp, #8
 1498              		.cfi_def_cfa_offset 16
 1499 0004 00AF     		add	r7, sp, #0
 1500              		.cfi_def_cfa_register 7
 1501 0006 021C     		mov	r2, r0
 1502 0008 FB1D     		add	r3, r7, #7
 1503 000a 1A70     		strb	r2, [r3]
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1504              		.loc 1 2458 0
 1505 000c 074B     		ldr	r3, .L88
 1506 000e 1A68     		ldr	r2, [r3]
 1507 0010 FB1D     		add	r3, r7, #7
 1508 0012 1B78     		ldrb	r3, [r3]
 1509 0014 1F21     		mov	r1, #31
 1510 0016 0B40     		and	r3, r1
 1511 0018 DA40     		lsr	r2, r2, r3
 1512 001a 131C     		mov	r3, r2
 1513 001c DBB2     		uxtb	r3, r3
 1514 001e 0122     		mov	r2, #1
 1515 0020 1340     		and	r3, r2
 1516 0022 DBB2     		uxtb	r3, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 1517              		.loc 1 2459 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 71


 1518 0024 181C     		mov	r0, r3
 1519 0026 BD46     		mov	sp, r7
 1520 0028 02B0     		add	sp, sp, #8
 1521              		@ sp needed
 1522 002a 80BD     		pop	{r7, pc}
 1523              	.L89:
 1524              		.align	2
 1525              	.L88:
 1526 002c 00E100E0 		.word	-536813312
 1527              		.cfi_endproc
 1528              	.LFE22:
 1529              		.size	CyIntGetState, .-CyIntGetState
 1530              		.section	.text.CyIntDisable,"ax",%progbits
 1531              		.align	2
 1532              		.global	CyIntDisable
 1533              		.code	16
 1534              		.thumb_func
 1535              		.type	CyIntDisable, %function
 1536              	CyIntDisable:
 1537              	.LFB23:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 1538              		.loc 1 2472 0
 1539              		.cfi_startproc
 1540 0000 80B5     		push	{r7, lr}
 1541              		.cfi_def_cfa_offset 8
 1542              		.cfi_offset 7, -8
 1543              		.cfi_offset 14, -4
 1544 0002 82B0     		sub	sp, sp, #8
 1545              		.cfi_def_cfa_offset 16
 1546 0004 00AF     		add	r7, sp, #0
 1547              		.cfi_def_cfa_register 7
 1548 0006 021C     		mov	r2, r0
 1549 0008 FB1D     		add	r3, r7, #7
 1550 000a 1A70     		strb	r2, [r3]
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1551              		.loc 1 2473 0
 1552 000c 054B     		ldr	r3, .L91
 1553 000e FA1D     		add	r2, r7, #7
 1554 0010 1278     		ldrb	r2, [r2]
 1555 0012 1F21     		mov	r1, #31
 1556 0014 0A40     		and	r2, r1
 1557 0016 0121     		mov	r1, #1
 1558 0018 9140     		lsl	r1, r1, r2
 1559 001a 0A1C     		mov	r2, r1
 1560 001c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 72


2474:Generated_Source\PSoC4/CyLib.c **** }
 1561              		.loc 1 2474 0
 1562 001e BD46     		mov	sp, r7
 1563 0020 02B0     		add	sp, sp, #8
 1564              		@ sp needed
 1565 0022 80BD     		pop	{r7, pc}
 1566              	.L92:
 1567              		.align	2
 1568              	.L91:
 1569 0024 80E100E0 		.word	-536813184
 1570              		.cfi_endproc
 1571              	.LFE23:
 1572              		.size	CyIntDisable, .-CyIntDisable
 1573              		.section	.text.CyIntSetPending,"ax",%progbits
 1574              		.align	2
 1575              		.global	CyIntSetPending
 1576              		.code	16
 1577              		.thumb_func
 1578              		.type	CyIntSetPending, %function
 1579              	CyIntSetPending:
 1580              	.LFB24:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 1581              		.loc 1 2486 0
 1582              		.cfi_startproc
 1583 0000 80B5     		push	{r7, lr}
 1584              		.cfi_def_cfa_offset 8
 1585              		.cfi_offset 7, -8
 1586              		.cfi_offset 14, -4
 1587 0002 82B0     		sub	sp, sp, #8
 1588              		.cfi_def_cfa_offset 16
 1589 0004 00AF     		add	r7, sp, #0
 1590              		.cfi_def_cfa_register 7
 1591 0006 021C     		mov	r2, r0
 1592 0008 FB1D     		add	r3, r7, #7
 1593 000a 1A70     		strb	r2, [r3]
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1594              		.loc 1 2487 0
 1595 000c 054B     		ldr	r3, .L94
 1596 000e FA1D     		add	r2, r7, #7
 1597 0010 1278     		ldrb	r2, [r2]
 1598 0012 1F21     		mov	r1, #31
 1599 0014 0A40     		and	r2, r1
 1600 0016 0121     		mov	r1, #1
 1601 0018 9140     		lsl	r1, r1, r2
 1602 001a 0A1C     		mov	r2, r1
 1603 001c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 73


2488:Generated_Source\PSoC4/CyLib.c **** }
 1604              		.loc 1 2488 0
 1605 001e BD46     		mov	sp, r7
 1606 0020 02B0     		add	sp, sp, #8
 1607              		@ sp needed
 1608 0022 80BD     		pop	{r7, pc}
 1609              	.L95:
 1610              		.align	2
 1611              	.L94:
 1612 0024 00E200E0 		.word	-536813056
 1613              		.cfi_endproc
 1614              	.LFE24:
 1615              		.size	CyIntSetPending, .-CyIntSetPending
 1616              		.section	.text.CyIntClearPending,"ax",%progbits
 1617              		.align	2
 1618              		.global	CyIntClearPending
 1619              		.code	16
 1620              		.thumb_func
 1621              		.type	CyIntClearPending, %function
 1622              	CyIntClearPending:
 1623              	.LFB25:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 1624              		.loc 1 2501 0
 1625              		.cfi_startproc
 1626 0000 80B5     		push	{r7, lr}
 1627              		.cfi_def_cfa_offset 8
 1628              		.cfi_offset 7, -8
 1629              		.cfi_offset 14, -4
 1630 0002 82B0     		sub	sp, sp, #8
 1631              		.cfi_def_cfa_offset 16
 1632 0004 00AF     		add	r7, sp, #0
 1633              		.cfi_def_cfa_register 7
 1634 0006 021C     		mov	r2, r0
 1635 0008 FB1D     		add	r3, r7, #7
 1636 000a 1A70     		strb	r2, [r3]
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1637              		.loc 1 2502 0
 1638 000c 054B     		ldr	r3, .L97
 1639 000e FA1D     		add	r2, r7, #7
 1640 0010 1278     		ldrb	r2, [r2]
 1641 0012 1F21     		mov	r1, #31
 1642 0014 0A40     		and	r2, r1
 1643 0016 0121     		mov	r1, #1
 1644 0018 9140     		lsl	r1, r1, r2
 1645 001a 0A1C     		mov	r2, r1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 74


 1646 001c 1A60     		str	r2, [r3]
2503:Generated_Source\PSoC4/CyLib.c **** }
 1647              		.loc 1 2503 0
 1648 001e BD46     		mov	sp, r7
 1649 0020 02B0     		add	sp, sp, #8
 1650              		@ sp needed
 1651 0022 80BD     		pop	{r7, pc}
 1652              	.L98:
 1653              		.align	2
 1654              	.L97:
 1655 0024 80E200E0 		.word	-536812928
 1656              		.cfi_endproc
 1657              	.LFE25:
 1658              		.size	CyIntClearPending, .-CyIntClearPending
 1659              		.section	.text.CyHalt,"ax",%progbits
 1660              		.align	2
 1661              		.global	CyHalt
 1662              		.code	16
 1663              		.thumb_func
 1664              		.type	CyHalt, %function
 1665              	CyHalt:
 1666              	.LFB26:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 1667              		.loc 1 2516 0
 1668              		.cfi_startproc
 1669 0000 80B5     		push	{r7, lr}
 1670              		.cfi_def_cfa_offset 8
 1671              		.cfi_offset 7, -8
 1672              		.cfi_offset 14, -4
 1673 0002 82B0     		sub	sp, sp, #8
 1674              		.cfi_def_cfa_offset 16
 1675 0004 00AF     		add	r7, sp, #0
 1676              		.cfi_def_cfa_register 7
 1677 0006 021C     		mov	r2, r0
 1678 0008 FB1D     		add	r3, r7, #7
 1679 000a 1A70     		strb	r2, [r3]
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 75


 1680              		.loc 1 2525 0
 1681              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1682 000c 01BE     		    bkpt    1
 1683              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 1684              		.loc 1 2529 0
 1685              		.code	16
 1686 000e BD46     		mov	sp, r7
 1687 0010 02B0     		add	sp, sp, #8
 1688              		@ sp needed
 1689 0012 80BD     		pop	{r7, pc}
 1690              		.cfi_endproc
 1691              	.LFE26:
 1692              		.size	CyHalt, .-CyHalt
 1693              		.section	.text.CySoftwareReset,"ax",%progbits
 1694              		.align	2
 1695              		.global	CySoftwareReset
 1696              		.code	16
 1697              		.thumb_func
 1698              		.type	CySoftwareReset, %function
 1699              	CySoftwareReset:
 1700              	.LFB27:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 1701              		.loc 1 2540 0
 1702              		.cfi_startproc
 1703 0000 80B5     		push	{r7, lr}
 1704              		.cfi_def_cfa_offset 8
 1705              		.cfi_offset 7, -8
 1706              		.cfi_offset 14, -4
 1707 0002 00AF     		add	r7, sp, #0
 1708              		.cfi_def_cfa_register 7
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1709              		.loc 1 2545 0
 1710 0004 044B     		ldr	r3, .L101
 1711 0006 044A     		ldr	r2, .L101
 1712 0008 1268     		ldr	r2, [r2]
 1713 000a 1204     		lsl	r2, r2, #16
 1714 000c 120C     		lsr	r2, r2, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1715              		.loc 1 2546 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 76


 1716 000e 0349     		ldr	r1, .L101+4
 1717 0010 0A43     		orr	r2, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1718              		.loc 1 2545 0
 1719 0012 1A60     		str	r2, [r3]
2547:Generated_Source\PSoC4/CyLib.c **** }
 1720              		.loc 1 2547 0
 1721 0014 BD46     		mov	sp, r7
 1722              		@ sp needed
 1723 0016 80BD     		pop	{r7, pc}
 1724              	.L102:
 1725              		.align	2
 1726              	.L101:
 1727 0018 0CED00E0 		.word	-536810228
 1728 001c 0400FA05 		.word	100270084
 1729              		.cfi_endproc
 1730              	.LFE27:
 1731              		.size	CySoftwareReset, .-CySoftwareReset
 1732              		.section	.text.CyDelay,"ax",%progbits
 1733              		.align	2
 1734              		.global	CyDelay
 1735              		.code	16
 1736              		.thumb_func
 1737              		.type	CyDelay, %function
 1738              	CyDelay:
 1739              	.LFB28:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1740              		.loc 1 2560 0
 1741              		.cfi_startproc
 1742 0000 80B5     		push	{r7, lr}
 1743              		.cfi_def_cfa_offset 8
 1744              		.cfi_offset 7, -8
 1745              		.cfi_offset 14, -4
 1746 0002 82B0     		sub	sp, sp, #8
 1747              		.cfi_def_cfa_offset 16
 1748 0004 00AF     		add	r7, sp, #0
 1749              		.cfi_def_cfa_register 7
 1750 0006 7860     		str	r0, [r7, #4]
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1751              		.loc 1 2561 0
 1752 0008 09E0     		b	.L104
 1753              	.L105:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 77


2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1754              		.loc 1 2566 0
 1755 000a 0C4B     		ldr	r3, .L106
 1756 000c 1B68     		ldr	r3, [r3]
 1757 000e 181C     		mov	r0, r3
 1758 0010 FFF7FEFF 		bl	CyDelayCycles
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1759              		.loc 1 2567 0
 1760 0014 7B68     		ldr	r3, [r7, #4]
 1761 0016 0A4A     		ldr	r2, .L106+4
 1762 0018 9446     		mov	ip, r2
 1763 001a 6344     		add	r3, r3, ip
 1764 001c 7B60     		str	r3, [r7, #4]
 1765              	.L104:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1766              		.loc 1 2561 0
 1767 001e 7A68     		ldr	r2, [r7, #4]
 1768 0020 8023     		mov	r3, #128
 1769 0022 1B02     		lsl	r3, r3, #8
 1770 0024 9A42     		cmp	r2, r3
 1771 0026 F0D8     		bhi	.L105
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1772              		.loc 1 2570 0
 1773 0028 064B     		ldr	r3, .L106+8
 1774 002a 1B68     		ldr	r3, [r3]
 1775 002c 7A68     		ldr	r2, [r7, #4]
 1776 002e 5343     		mul	r3, r2
 1777 0030 181C     		mov	r0, r3
 1778 0032 FFF7FEFF 		bl	CyDelayCycles
2571:Generated_Source\PSoC4/CyLib.c **** }
 1779              		.loc 1 2571 0
 1780 0036 BD46     		mov	sp, r7
 1781 0038 02B0     		add	sp, sp, #8
 1782              		@ sp needed
 1783 003a 80BD     		pop	{r7, pc}
 1784              	.L107:
 1785              		.align	2
 1786              	.L106:
 1787 003c 00000000 		.word	cydelay32kMs
 1788 0040 0080FFFF 		.word	-32768
 1789 0044 00000000 		.word	cydelayFreqKhz
 1790              		.cfi_endproc
 1791              	.LFE28:
 1792              		.size	CyDelay, .-CyDelay
 1793              		.section	.text.CyDelayUs,"ax",%progbits
 1794              		.align	2
 1795              		.global	CyDelayUs
 1796              		.code	16
 1797              		.thumb_func
 1798              		.type	CyDelayUs, %function
 1799              	CyDelayUs:
 1800              	.LFB29:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 78


2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1801              		.loc 1 2583 0
 1802              		.cfi_startproc
 1803 0000 80B5     		push	{r7, lr}
 1804              		.cfi_def_cfa_offset 8
 1805              		.cfi_offset 7, -8
 1806              		.cfi_offset 14, -4
 1807 0002 82B0     		sub	sp, sp, #8
 1808              		.cfi_def_cfa_offset 16
 1809 0004 00AF     		add	r7, sp, #0
 1810              		.cfi_def_cfa_register 7
 1811 0006 021C     		mov	r2, r0
 1812 0008 BB1D     		add	r3, r7, #6
 1813 000a 1A80     		strh	r2, [r3]
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1814              		.loc 1 2584 0
 1815 000c BB1D     		add	r3, r7, #6
 1816 000e 1B88     		ldrh	r3, [r3]
 1817 0010 044A     		ldr	r2, .L109
 1818 0012 1278     		ldrb	r2, [r2]
 1819 0014 5343     		mul	r3, r2
 1820 0016 181C     		mov	r0, r3
 1821 0018 FFF7FEFF 		bl	CyDelayCycles
2585:Generated_Source\PSoC4/CyLib.c **** }
 1822              		.loc 1 2585 0
 1823 001c BD46     		mov	sp, r7
 1824 001e 02B0     		add	sp, sp, #8
 1825              		@ sp needed
 1826 0020 80BD     		pop	{r7, pc}
 1827              	.L110:
 1828 0022 C046     		.align	2
 1829              	.L109:
 1830 0024 00000000 		.word	cydelayFreqMhz
 1831              		.cfi_endproc
 1832              	.LFE29:
 1833              		.size	CyDelayUs, .-CyDelayUs
 1834              		.global	__aeabi_uidiv
 1835              		.section	.text.CyDelayFreq,"ax",%progbits
 1836              		.align	2
 1837              		.global	CyDelayFreq
 1838              		.code	16
 1839              		.thumb_func
 1840              		.type	CyDelayFreq, %function
 1841              	CyDelayFreq:
 1842              	.LFB30:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 79


2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1843              		.loc 1 2597 0
 1844              		.cfi_startproc
 1845 0000 80B5     		push	{r7, lr}
 1846              		.cfi_def_cfa_offset 8
 1847              		.cfi_offset 7, -8
 1848              		.cfi_offset 14, -4
 1849 0002 82B0     		sub	sp, sp, #8
 1850              		.cfi_def_cfa_offset 16
 1851 0004 00AF     		add	r7, sp, #0
 1852              		.cfi_def_cfa_register 7
 1853 0006 7860     		str	r0, [r7, #4]
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1854              		.loc 1 2598 0
 1855 0008 7B68     		ldr	r3, [r7, #4]
 1856 000a 002B     		cmp	r3, #0
 1857 000c 03D0     		beq	.L112
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1858              		.loc 1 2600 0
 1859 000e 154B     		ldr	r3, .L114
 1860 0010 7A68     		ldr	r2, [r7, #4]
 1861 0012 1A60     		str	r2, [r3]
 1862 0014 02E0     		b	.L113
 1863              	.L112:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1864              		.loc 1 2604 0
 1865 0016 134B     		ldr	r3, .L114
 1866 0018 134A     		ldr	r2, .L114+4
 1867 001a 1A60     		str	r2, [r3]
 1868              	.L113:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1869              		.loc 1 2607 0
 1870 001c 114B     		ldr	r3, .L114
 1871 001e 1B68     		ldr	r3, [r3]
 1872 0020 124A     		ldr	r2, .L114+8
 1873 0022 9446     		mov	ip, r2
 1874 0024 6344     		add	r3, r3, ip
 1875 0026 181C     		mov	r0, r3
 1876 0028 1149     		ldr	r1, .L114+12
 1877 002a FFF7FEFF 		bl	__aeabi_uidiv
 1878 002e 031C     		mov	r3, r0
 1879 0030 DAB2     		uxtb	r2, r3
 1880 0032 104B     		ldr	r3, .L114+16
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 80


 1881 0034 1A70     		strb	r2, [r3]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1882              		.loc 1 2608 0
 1883 0036 0B4B     		ldr	r3, .L114
 1884 0038 1B68     		ldr	r3, [r3]
 1885 003a 0F4A     		ldr	r2, .L114+20
 1886 003c 9446     		mov	ip, r2
 1887 003e 6344     		add	r3, r3, ip
 1888 0040 181C     		mov	r0, r3
 1889 0042 FA23     		mov	r3, #250
 1890 0044 9900     		lsl	r1, r3, #2
 1891 0046 FFF7FEFF 		bl	__aeabi_uidiv
 1892 004a 031C     		mov	r3, r0
 1893 004c 1A1C     		mov	r2, r3
 1894 004e 0B4B     		ldr	r3, .L114+24
 1895 0050 1A60     		str	r2, [r3]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1896              		.loc 1 2609 0
 1897 0052 0A4B     		ldr	r3, .L114+24
 1898 0054 1B68     		ldr	r3, [r3]
 1899 0056 DA03     		lsl	r2, r3, #15
 1900 0058 094B     		ldr	r3, .L114+28
 1901 005a 1A60     		str	r2, [r3]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1902              		.loc 1 2610 0
 1903 005c BD46     		mov	sp, r7
 1904 005e 02B0     		add	sp, sp, #8
 1905              		@ sp needed
 1906 0060 80BD     		pop	{r7, pc}
 1907              	.L115:
 1908 0062 C046     		.align	2
 1909              	.L114:
 1910 0064 00000000 		.word	cydelayFreqHz
 1911 0068 006CDC02 		.word	48000000
 1912 006c 3F420F00 		.word	999999
 1913 0070 40420F00 		.word	1000000
 1914 0074 00000000 		.word	cydelayFreqMhz
 1915 0078 E7030000 		.word	999
 1916 007c 00000000 		.word	cydelayFreqKhz
 1917 0080 00000000 		.word	cydelay32kMs
 1918              		.cfi_endproc
 1919              	.LFE30:
 1920              		.size	CyDelayFreq, .-CyDelayFreq
 1921              		.section	.text.CySysTickStart,"ax",%progbits
 1922              		.align	2
 1923              		.global	CySysTickStart
 1924              		.code	16
 1925              		.thumb_func
 1926              		.type	CySysTickStart, %function
 1927              	CySysTickStart:
 1928              	.LFB31:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 81


2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
 1929              		.loc 1 2629 0
 1930              		.cfi_startproc
 1931 0000 80B5     		push	{r7, lr}
 1932              		.cfi_def_cfa_offset 8
 1933              		.cfi_offset 7, -8
 1934              		.cfi_offset 14, -4
 1935 0002 00AF     		add	r7, sp, #0
 1936              		.cfi_def_cfa_register 7
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1937              		.loc 1 2630 0
 1938 0004 064B     		ldr	r3, .L118
 1939 0006 1B68     		ldr	r3, [r3]
 1940 0008 002B     		cmp	r3, #0
 1941 000a 04D1     		bne	.L117
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 1942              		.loc 1 2632 0
 1943 000c FFF7FEFF 		bl	CySysTickInit
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1944              		.loc 1 2633 0
 1945 0010 034B     		ldr	r3, .L118
 1946 0012 0122     		mov	r2, #1
 1947 0014 1A60     		str	r2, [r3]
 1948              	.L117:
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 1949              		.loc 1 2636 0
 1950 0016 FFF7FEFF 		bl	CySysTickEnable
2637:Generated_Source\PSoC4/CyLib.c **** }
 1951              		.loc 1 2637 0
 1952 001a BD46     		mov	sp, r7
 1953              		@ sp needed
 1954 001c 80BD     		pop	{r7, pc}
 1955              	.L119:
 1956 001e C046     		.align	2
 1957              	.L118:
 1958 0020 00000000 		.word	CySysTickInitVar
 1959              		.cfi_endproc
 1960              	.LFE31:
 1961              		.size	CySysTickStart, .-CySysTickStart
 1962              		.section	.text.CySysTickInit,"ax",%progbits
 1963              		.align	2
 1964              		.global	CySysTickInit
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 82


 1965              		.code	16
 1966              		.thumb_func
 1967              		.type	CySysTickInit, %function
 1968              	CySysTickInit:
 1969              	.LFB32:
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 1970              		.loc 1 2658 0
 1971              		.cfi_startproc
 1972 0000 80B5     		push	{r7, lr}
 1973              		.cfi_def_cfa_offset 8
 1974              		.cfi_offset 7, -8
 1975              		.cfi_offset 14, -4
 1976 0002 82B0     		sub	sp, sp, #8
 1977              		.cfi_def_cfa_offset 16
 1978 0004 00AF     		add	r7, sp, #0
 1979              		.cfi_def_cfa_register 7
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1980              		.loc 1 2661 0
 1981 0006 0023     		mov	r3, #0
 1982 0008 7B60     		str	r3, [r7, #4]
 1983 000a 07E0     		b	.L121
 1984              	.L122:
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1985              		.loc 1 2663 0 discriminator 3
 1986 000c 124B     		ldr	r3, .L123
 1987 000e 7A68     		ldr	r2, [r7, #4]
 1988 0010 9200     		lsl	r2, r2, #2
 1989 0012 0021     		mov	r1, #0
 1990 0014 D150     		str	r1, [r2, r3]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1991              		.loc 1 2661 0 discriminator 3
 1992 0016 7B68     		ldr	r3, [r7, #4]
 1993 0018 0133     		add	r3, r3, #1
 1994 001a 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 83


 1995              	.L121:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1996              		.loc 1 2661 0 is_stmt 0 discriminator 1
 1997 001c 7B68     		ldr	r3, [r7, #4]
 1998 001e 042B     		cmp	r3, #4
 1999 0020 F4D9     		bls	.L122
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 2000              		.loc 1 2666 0 is_stmt 1
 2001 0022 0E4B     		ldr	r3, .L123+4
 2002 0024 0F20     		mov	r0, #15
 2003 0026 191C     		mov	r1, r3
 2004 0028 FFF7FEFF 		bl	CyIntSetSysVector
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 2005              		.loc 1 2669 0
 2006 002c 0120     		mov	r0, #1
 2007 002e FFF7FEFF 		bl	CySysTickSetClockSource
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 2008              		.loc 1 2672 0
 2009 0032 0B4B     		ldr	r3, .L123+8
 2010 0034 1B68     		ldr	r3, [r3]
 2011 0036 181C     		mov	r0, r3
 2012 0038 FA23     		mov	r3, #250
 2013 003a 9900     		lsl	r1, r3, #2
 2014 003c FFF7FEFF 		bl	__aeabi_uidiv
 2015 0040 031C     		mov	r3, r0
 2016 0042 181C     		mov	r0, r3
 2017 0044 FFF7FEFF 		bl	CySysTickSetReload
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2018              		.loc 1 2673 0
 2019 0048 FFF7FEFF 		bl	CySysTickClear
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 2020              		.loc 1 2674 0
 2021 004c 0F20     		mov	r0, #15
 2022 004e FFF7FEFF 		bl	CyIntEnable
2675:Generated_Source\PSoC4/CyLib.c **** }
 2023              		.loc 1 2675 0
 2024 0052 BD46     		mov	sp, r7
 2025 0054 02B0     		add	sp, sp, #8
 2026              		@ sp needed
 2027 0056 80BD     		pop	{r7, pc}
 2028              	.L124:
 2029              		.align	2
 2030              	.L123:
 2031 0058 00000000 		.word	CySysTickCallbacks
 2032 005c 00000000 		.word	CySysTickServiceCallbacks
 2033 0060 00000000 		.word	cydelayFreqHz
 2034              		.cfi_endproc
 2035              	.LFE32:
 2036              		.size	CySysTickInit, .-CySysTickInit
 2037              		.section	.text.CySysTickEnable,"ax",%progbits
 2038              		.align	2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 84


 2039              		.global	CySysTickEnable
 2040              		.code	16
 2041              		.thumb_func
 2042              		.type	CySysTickEnable, %function
 2043              	CySysTickEnable:
 2044              	.LFB33:
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2689:Generated_Source\PSoC4/CyLib.c **** {
 2045              		.loc 1 2689 0
 2046              		.cfi_startproc
 2047 0000 80B5     		push	{r7, lr}
 2048              		.cfi_def_cfa_offset 8
 2049              		.cfi_offset 7, -8
 2050              		.cfi_offset 14, -4
 2051 0002 00AF     		add	r7, sp, #0
 2052              		.cfi_def_cfa_register 7
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2053              		.loc 1 2690 0
 2054 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 2055              		.loc 1 2691 0
 2056 0008 034B     		ldr	r3, .L126
 2057 000a 034A     		ldr	r2, .L126
 2058 000c 1268     		ldr	r2, [r2]
 2059 000e 0121     		mov	r1, #1
 2060 0010 0A43     		orr	r2, r1
 2061 0012 1A60     		str	r2, [r3]
2692:Generated_Source\PSoC4/CyLib.c **** }
 2062              		.loc 1 2692 0
 2063 0014 BD46     		mov	sp, r7
 2064              		@ sp needed
 2065 0016 80BD     		pop	{r7, pc}
 2066              	.L127:
 2067              		.align	2
 2068              	.L126:
 2069 0018 10E000E0 		.word	-536813552
 2070              		.cfi_endproc
 2071              	.LFE33:
 2072              		.size	CySysTickEnable, .-CySysTickEnable
 2073              		.section	.text.CySysTickStop,"ax",%progbits
 2074              		.align	2
 2075              		.global	CySysTickStop
 2076              		.code	16
 2077              		.thumb_func
 2078              		.type	CySysTickStop, %function
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 85


 2079              	CySysTickStop:
 2080              	.LFB34:
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
 2081              		.loc 1 2706 0
 2082              		.cfi_startproc
 2083 0000 80B5     		push	{r7, lr}
 2084              		.cfi_def_cfa_offset 8
 2085              		.cfi_offset 7, -8
 2086              		.cfi_offset 14, -4
 2087 0002 00AF     		add	r7, sp, #0
 2088              		.cfi_def_cfa_register 7
2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2089              		.loc 1 2707 0
 2090 0004 034B     		ldr	r3, .L129
 2091 0006 034A     		ldr	r2, .L129
 2092 0008 1268     		ldr	r2, [r2]
 2093 000a 0121     		mov	r1, #1
 2094 000c 8A43     		bic	r2, r1
 2095 000e 1A60     		str	r2, [r3]
2708:Generated_Source\PSoC4/CyLib.c **** }
 2096              		.loc 1 2708 0
 2097 0010 BD46     		mov	sp, r7
 2098              		@ sp needed
 2099 0012 80BD     		pop	{r7, pc}
 2100              	.L130:
 2101              		.align	2
 2102              	.L129:
 2103 0014 10E000E0 		.word	-536813552
 2104              		.cfi_endproc
 2105              	.LFE34:
 2106              		.size	CySysTickStop, .-CySysTickStop
 2107              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2108              		.align	2
 2109              		.global	CySysTickEnableInterrupt
 2110              		.code	16
 2111              		.thumb_func
 2112              		.type	CySysTickEnableInterrupt, %function
 2113              	CySysTickEnableInterrupt:
 2114              	.LFB35:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 86


2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
 2115              		.loc 1 2722 0
 2116              		.cfi_startproc
 2117 0000 80B5     		push	{r7, lr}
 2118              		.cfi_def_cfa_offset 8
 2119              		.cfi_offset 7, -8
 2120              		.cfi_offset 14, -4
 2121 0002 00AF     		add	r7, sp, #0
 2122              		.cfi_def_cfa_register 7
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2123              		.loc 1 2723 0
 2124 0004 034B     		ldr	r3, .L132
 2125 0006 034A     		ldr	r2, .L132
 2126 0008 1268     		ldr	r2, [r2]
 2127 000a 0221     		mov	r1, #2
 2128 000c 0A43     		orr	r2, r1
 2129 000e 1A60     		str	r2, [r3]
2724:Generated_Source\PSoC4/CyLib.c **** }
 2130              		.loc 1 2724 0
 2131 0010 BD46     		mov	sp, r7
 2132              		@ sp needed
 2133 0012 80BD     		pop	{r7, pc}
 2134              	.L133:
 2135              		.align	2
 2136              	.L132:
 2137 0014 10E000E0 		.word	-536813552
 2138              		.cfi_endproc
 2139              	.LFE35:
 2140              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2141              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2142              		.align	2
 2143              		.global	CySysTickDisableInterrupt
 2144              		.code	16
 2145              		.thumb_func
 2146              		.type	CySysTickDisableInterrupt, %function
 2147              	CySysTickDisableInterrupt:
 2148              	.LFB36:
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 87


2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2738:Generated_Source\PSoC4/CyLib.c **** {
 2149              		.loc 1 2738 0
 2150              		.cfi_startproc
 2151 0000 80B5     		push	{r7, lr}
 2152              		.cfi_def_cfa_offset 8
 2153              		.cfi_offset 7, -8
 2154              		.cfi_offset 14, -4
 2155 0002 00AF     		add	r7, sp, #0
 2156              		.cfi_def_cfa_register 7
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2157              		.loc 1 2739 0
 2158 0004 034B     		ldr	r3, .L135
 2159 0006 034A     		ldr	r2, .L135
 2160 0008 1268     		ldr	r2, [r2]
 2161 000a 0221     		mov	r1, #2
 2162 000c 8A43     		bic	r2, r1
 2163 000e 1A60     		str	r2, [r3]
2740:Generated_Source\PSoC4/CyLib.c **** }
 2164              		.loc 1 2740 0
 2165 0010 BD46     		mov	sp, r7
 2166              		@ sp needed
 2167 0012 80BD     		pop	{r7, pc}
 2168              	.L136:
 2169              		.align	2
 2170              	.L135:
 2171 0014 10E000E0 		.word	-536813552
 2172              		.cfi_endproc
 2173              	.LFE36:
 2174              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2175              		.section	.text.CySysTickSetReload,"ax",%progbits
 2176              		.align	2
 2177              		.global	CySysTickSetReload
 2178              		.code	16
 2179              		.thumb_func
 2180              		.type	CySysTickSetReload, %function
 2181              	CySysTickSetReload:
 2182              	.LFB37:
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
 2183              		.loc 1 2755 0
 2184              		.cfi_startproc
 2185 0000 80B5     		push	{r7, lr}
 2186              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 88


 2187              		.cfi_offset 7, -8
 2188              		.cfi_offset 14, -4
 2189 0002 82B0     		sub	sp, sp, #8
 2190              		.cfi_def_cfa_offset 16
 2191 0004 00AF     		add	r7, sp, #0
 2192              		.cfi_def_cfa_register 7
 2193 0006 7860     		str	r0, [r7, #4]
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2194              		.loc 1 2756 0
 2195 0008 034B     		ldr	r3, .L138
 2196 000a 7A68     		ldr	r2, [r7, #4]
 2197 000c 1202     		lsl	r2, r2, #8
 2198 000e 120A     		lsr	r2, r2, #8
 2199 0010 1A60     		str	r2, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** }
 2200              		.loc 1 2757 0
 2201 0012 BD46     		mov	sp, r7
 2202 0014 02B0     		add	sp, sp, #8
 2203              		@ sp needed
 2204 0016 80BD     		pop	{r7, pc}
 2205              	.L139:
 2206              		.align	2
 2207              	.L138:
 2208 0018 14E000E0 		.word	-536813548
 2209              		.cfi_endproc
 2210              	.LFE37:
 2211              		.size	CySysTickSetReload, .-CySysTickSetReload
 2212              		.section	.text.CySysTickGetReload,"ax",%progbits
 2213              		.align	2
 2214              		.global	CySysTickGetReload
 2215              		.code	16
 2216              		.thumb_func
 2217              		.type	CySysTickGetReload, %function
 2218              	CySysTickGetReload:
 2219              	.LFB38:
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
 2220              		.loc 1 2771 0
 2221              		.cfi_startproc
 2222 0000 80B5     		push	{r7, lr}
 2223              		.cfi_def_cfa_offset 8
 2224              		.cfi_offset 7, -8
 2225              		.cfi_offset 14, -4
 2226 0002 00AF     		add	r7, sp, #0
 2227              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 89


2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2228              		.loc 1 2772 0
 2229 0004 034B     		ldr	r3, .L142
 2230 0006 1B68     		ldr	r3, [r3]
 2231 0008 1B02     		lsl	r3, r3, #8
 2232 000a 1B0A     		lsr	r3, r3, #8
2773:Generated_Source\PSoC4/CyLib.c **** }
 2233              		.loc 1 2773 0
 2234 000c 181C     		mov	r0, r3
 2235 000e BD46     		mov	sp, r7
 2236              		@ sp needed
 2237 0010 80BD     		pop	{r7, pc}
 2238              	.L143:
 2239 0012 C046     		.align	2
 2240              	.L142:
 2241 0014 14E000E0 		.word	-536813548
 2242              		.cfi_endproc
 2243              	.LFE38:
 2244              		.size	CySysTickGetReload, .-CySysTickGetReload
 2245              		.section	.text.CySysTickGetValue,"ax",%progbits
 2246              		.align	2
 2247              		.global	CySysTickGetValue
 2248              		.code	16
 2249              		.thumb_func
 2250              		.type	CySysTickGetValue, %function
 2251              	CySysTickGetValue:
 2252              	.LFB39:
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
 2253              		.loc 1 2787 0
 2254              		.cfi_startproc
 2255 0000 80B5     		push	{r7, lr}
 2256              		.cfi_def_cfa_offset 8
 2257              		.cfi_offset 7, -8
 2258              		.cfi_offset 14, -4
 2259 0002 00AF     		add	r7, sp, #0
 2260              		.cfi_def_cfa_register 7
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2261              		.loc 1 2788 0
 2262 0004 034B     		ldr	r3, .L146
 2263 0006 1B68     		ldr	r3, [r3]
 2264 0008 1B02     		lsl	r3, r3, #8
 2265 000a 1B0A     		lsr	r3, r3, #8
2789:Generated_Source\PSoC4/CyLib.c **** }
 2266              		.loc 1 2789 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 90


 2267 000c 181C     		mov	r0, r3
 2268 000e BD46     		mov	sp, r7
 2269              		@ sp needed
 2270 0010 80BD     		pop	{r7, pc}
 2271              	.L147:
 2272 0012 C046     		.align	2
 2273              	.L146:
 2274 0014 18E000E0 		.word	-536813544
 2275              		.cfi_endproc
 2276              	.LFE39:
 2277              		.size	CySysTickGetValue, .-CySysTickGetValue
 2278              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2279              		.align	2
 2280              		.global	CySysTickSetClockSource
 2281              		.code	16
 2282              		.thumb_func
 2283              		.type	CySysTickSetClockSource, %function
 2284              	CySysTickSetClockSource:
 2285              	.LFB40:
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
 2286              		.loc 1 2819 0
 2287              		.cfi_startproc
 2288 0000 80B5     		push	{r7, lr}
 2289              		.cfi_def_cfa_offset 8
 2290              		.cfi_offset 7, -8
 2291              		.cfi_offset 14, -4
 2292 0002 82B0     		sub	sp, sp, #8
 2293              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 91


 2294 0004 00AF     		add	r7, sp, #0
 2295              		.cfi_def_cfa_register 7
 2296 0006 7860     		str	r0, [r7, #4]
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2297              		.loc 1 2820 0
 2298 0008 7B68     		ldr	r3, [r7, #4]
 2299 000a 012B     		cmp	r3, #1
 2300 000c 06D1     		bne	.L149
2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 2301              		.loc 1 2822 0
 2302 000e 084B     		ldr	r3, .L151
 2303 0010 074A     		ldr	r2, .L151
 2304 0012 1268     		ldr	r2, [r2]
 2305 0014 0421     		mov	r1, #4
 2306 0016 0A43     		orr	r2, r1
 2307 0018 1A60     		str	r2, [r3]
 2308 001a 05E0     		b	.L148
 2309              	.L149:
2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 2310              		.loc 1 2826 0
 2311 001c 044B     		ldr	r3, .L151
 2312 001e 044A     		ldr	r2, .L151
 2313 0020 1268     		ldr	r2, [r2]
 2314 0022 0421     		mov	r1, #4
 2315 0024 8A43     		bic	r2, r1
 2316 0026 1A60     		str	r2, [r3]
 2317              	.L148:
2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
 2318              		.loc 1 2828 0
 2319 0028 BD46     		mov	sp, r7
 2320 002a 02B0     		add	sp, sp, #8
 2321              		@ sp needed
 2322 002c 80BD     		pop	{r7, pc}
 2323              	.L152:
 2324 002e C046     		.align	2
 2325              	.L151:
 2326 0030 10E000E0 		.word	-536813552
 2327              		.cfi_endproc
 2328              	.LFE40:
 2329              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2330              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2331              		.align	2
 2332              		.global	CySysTickGetClockSource
 2333              		.code	16
 2334              		.thumb_func
 2335              		.type	CySysTickGetClockSource, %function
 2336              	CySysTickGetClockSource:
 2337              	.LFB41:
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 92


2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2844:Generated_Source\PSoC4/CyLib.c ****     {
 2338              		.loc 1 2844 0
 2339              		.cfi_startproc
 2340 0000 80B5     		push	{r7, lr}
 2341              		.cfi_def_cfa_offset 8
 2342              		.cfi_offset 7, -8
 2343              		.cfi_offset 14, -4
 2344 0002 00AF     		add	r7, sp, #0
 2345              		.cfi_def_cfa_register 7
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2346              		.loc 1 2845 0
 2347 0004 034B     		ldr	r3, .L155
 2348 0006 1B68     		ldr	r3, [r3]
 2349 0008 9B08     		lsr	r3, r3, #2
 2350 000a 0122     		mov	r2, #1
 2351 000c 1340     		and	r3, r2
2846:Generated_Source\PSoC4/CyLib.c ****     }
 2352              		.loc 1 2846 0
 2353 000e 181C     		mov	r0, r3
 2354 0010 BD46     		mov	sp, r7
 2355              		@ sp needed
 2356 0012 80BD     		pop	{r7, pc}
 2357              	.L156:
 2358              		.align	2
 2359              	.L155:
 2360 0014 10E000E0 		.word	-536813552
 2361              		.cfi_endproc
 2362              	.LFE41:
 2363              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 2364              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2365              		.align	2
 2366              		.global	CySysTickGetCountFlag
 2367              		.code	16
 2368              		.thumb_func
 2369              		.type	CySysTickGetCountFlag, %function
 2370              	CySysTickGetCountFlag:
 2371              	.LFB42:
2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 93


2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
 2372              		.loc 1 2867 0
 2373              		.cfi_startproc
 2374 0000 80B5     		push	{r7, lr}
 2375              		.cfi_def_cfa_offset 8
 2376              		.cfi_offset 7, -8
 2377              		.cfi_offset 14, -4
 2378 0002 00AF     		add	r7, sp, #0
 2379              		.cfi_def_cfa_register 7
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2380              		.loc 1 2868 0
 2381 0004 034B     		ldr	r3, .L159
 2382 0006 1B68     		ldr	r3, [r3]
 2383 0008 1B0C     		lsr	r3, r3, #16
 2384 000a 0122     		mov	r2, #1
 2385 000c 1340     		and	r3, r2
2869:Generated_Source\PSoC4/CyLib.c **** }
 2386              		.loc 1 2869 0
 2387 000e 181C     		mov	r0, r3
 2388 0010 BD46     		mov	sp, r7
 2389              		@ sp needed
 2390 0012 80BD     		pop	{r7, pc}
 2391              	.L160:
 2392              		.align	2
 2393              	.L159:
 2394 0014 10E000E0 		.word	-536813552
 2395              		.cfi_endproc
 2396              	.LFE42:
 2397              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2398              		.section	.text.CySysTickClear,"ax",%progbits
 2399              		.align	2
 2400              		.global	CySysTickClear
 2401              		.code	16
 2402              		.thumb_func
 2403              		.type	CySysTickClear, %function
 2404              	CySysTickClear:
 2405              	.LFB43:
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 94


2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2880:Generated_Source\PSoC4/CyLib.c **** {
 2406              		.loc 1 2880 0
 2407              		.cfi_startproc
 2408 0000 80B5     		push	{r7, lr}
 2409              		.cfi_def_cfa_offset 8
 2410              		.cfi_offset 7, -8
 2411              		.cfi_offset 14, -4
 2412 0002 00AF     		add	r7, sp, #0
 2413              		.cfi_def_cfa_register 7
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2414              		.loc 1 2881 0
 2415 0004 024B     		ldr	r3, .L162
 2416 0006 0022     		mov	r2, #0
 2417 0008 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** }
 2418              		.loc 1 2882 0
 2419 000a BD46     		mov	sp, r7
 2420              		@ sp needed
 2421 000c 80BD     		pop	{r7, pc}
 2422              	.L163:
 2423 000e C046     		.align	2
 2424              	.L162:
 2425 0010 18E000E0 		.word	-536813544
 2426              		.cfi_endproc
 2427              	.LFE43:
 2428              		.size	CySysTickClear, .-CySysTickClear
 2429              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2430              		.align	2
 2431              		.global	CySysTickSetCallback
 2432              		.code	16
 2433              		.thumb_func
 2434              		.type	CySysTickSetCallback, %function
 2435              	CySysTickSetCallback:
 2436              	.LFB44:
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2888:Generated_Source\PSoC4/CyLib.c **** *
2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 95


2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2915:Generated_Source\PSoC4/CyLib.c **** {
 2437              		.loc 1 2915 0
 2438              		.cfi_startproc
 2439 0000 80B5     		push	{r7, lr}
 2440              		.cfi_def_cfa_offset 8
 2441              		.cfi_offset 7, -8
 2442              		.cfi_offset 14, -4
 2443 0002 84B0     		sub	sp, sp, #16
 2444              		.cfi_def_cfa_offset 24
 2445 0004 00AF     		add	r7, sp, #0
 2446              		.cfi_def_cfa_register 7
 2447 0006 7860     		str	r0, [r7, #4]
 2448 0008 3960     		str	r1, [r7]
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2449              		.loc 1 2918 0
 2450 000a 074B     		ldr	r3, .L166
 2451 000c 7A68     		ldr	r2, [r7, #4]
 2452 000e 9200     		lsl	r2, r2, #2
 2453 0010 D358     		ldr	r3, [r2, r3]
 2454 0012 FB60     		str	r3, [r7, #12]
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2455              		.loc 1 2919 0
 2456 0014 044B     		ldr	r3, .L166
 2457 0016 7A68     		ldr	r2, [r7, #4]
 2458 0018 9200     		lsl	r2, r2, #2
 2459 001a 3968     		ldr	r1, [r7]
 2460 001c D150     		str	r1, [r2, r3]
2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2461              		.loc 1 2920 0
 2462 001e FB68     		ldr	r3, [r7, #12]
2921:Generated_Source\PSoC4/CyLib.c **** }
 2463              		.loc 1 2921 0
 2464 0020 181C     		mov	r0, r3
 2465 0022 BD46     		mov	sp, r7
 2466 0024 04B0     		add	sp, sp, #16
 2467              		@ sp needed
 2468 0026 80BD     		pop	{r7, pc}
 2469              	.L167:
 2470              		.align	2
 2471              	.L166:
 2472 0028 00000000 		.word	CySysTickCallbacks
 2473              		.cfi_endproc
 2474              	.LFE44:
 2475              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2476              		.section	.text.CySysTickGetCallback,"ax",%progbits
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 96


 2477              		.align	2
 2478              		.global	CySysTickGetCallback
 2479              		.code	16
 2480              		.thumb_func
 2481              		.type	CySysTickGetCallback, %function
 2482              	CySysTickGetCallback:
 2483              	.LFB45:
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2939:Generated_Source\PSoC4/CyLib.c **** {
 2484              		.loc 1 2939 0
 2485              		.cfi_startproc
 2486 0000 80B5     		push	{r7, lr}
 2487              		.cfi_def_cfa_offset 8
 2488              		.cfi_offset 7, -8
 2489              		.cfi_offset 14, -4
 2490 0002 82B0     		sub	sp, sp, #8
 2491              		.cfi_def_cfa_offset 16
 2492 0004 00AF     		add	r7, sp, #0
 2493              		.cfi_def_cfa_register 7
 2494 0006 7860     		str	r0, [r7, #4]
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2495              		.loc 1 2940 0
 2496 0008 034B     		ldr	r3, .L170
 2497 000a 7A68     		ldr	r2, [r7, #4]
 2498 000c 9200     		lsl	r2, r2, #2
 2499 000e D358     		ldr	r3, [r2, r3]
2941:Generated_Source\PSoC4/CyLib.c **** }
 2500              		.loc 1 2941 0
 2501 0010 181C     		mov	r0, r3
 2502 0012 BD46     		mov	sp, r7
 2503 0014 02B0     		add	sp, sp, #8
 2504              		@ sp needed
 2505 0016 80BD     		pop	{r7, pc}
 2506              	.L171:
 2507              		.align	2
 2508              	.L170:
 2509 0018 00000000 		.word	CySysTickCallbacks
 2510              		.cfi_endproc
 2511              	.LFE45:
 2512              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2513              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 97


 2514              		.align	2
 2515              		.code	16
 2516              		.thumb_func
 2517              		.type	CySysTickServiceCallbacks, %function
 2518              	CySysTickServiceCallbacks:
 2519              	.LFB46:
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2952:Generated_Source\PSoC4/CyLib.c **** {
 2520              		.loc 1 2952 0
 2521              		.cfi_startproc
 2522 0000 80B5     		push	{r7, lr}
 2523              		.cfi_def_cfa_offset 8
 2524              		.cfi_offset 7, -8
 2525              		.cfi_offset 14, -4
 2526 0002 82B0     		sub	sp, sp, #8
 2527              		.cfi_def_cfa_offset 16
 2528 0004 00AF     		add	r7, sp, #0
 2529              		.cfi_def_cfa_register 7
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2530              		.loc 1 2956 0
 2531 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2532 000a 031E     		sub	r3, r0, #0
 2533 000c 012B     		cmp	r3, #1
 2534 000e 13D1     		bne	.L172
2957:Generated_Source\PSoC4/CyLib.c ****     {
2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2535              		.loc 1 2958 0
 2536 0010 0023     		mov	r3, #0
 2537 0012 7B60     		str	r3, [r7, #4]
 2538 0014 0DE0     		b	.L174
 2539              	.L176:
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2540              		.loc 1 2960 0
 2541 0016 0A4B     		ldr	r3, .L177
 2542 0018 7A68     		ldr	r2, [r7, #4]
 2543 001a 9200     		lsl	r2, r2, #2
 2544 001c D358     		ldr	r3, [r2, r3]
 2545 001e 002B     		cmp	r3, #0
 2546 0020 04D0     		beq	.L175
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2547              		.loc 1 2962 0
 2548 0022 074B     		ldr	r3, .L177
 2549 0024 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 98


 2550 0026 9200     		lsl	r2, r2, #2
 2551 0028 D358     		ldr	r3, [r2, r3]
 2552 002a 9847     		blx	r3
 2553              	.L175:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 2554              		.loc 1 2958 0 discriminator 2
 2555 002c 7B68     		ldr	r3, [r7, #4]
 2556 002e 0133     		add	r3, r3, #1
 2557 0030 7B60     		str	r3, [r7, #4]
 2558              	.L174:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 2559              		.loc 1 2958 0 is_stmt 0 discriminator 1
 2560 0032 7B68     		ldr	r3, [r7, #4]
 2561 0034 042B     		cmp	r3, #4
 2562 0036 EED9     		bls	.L176
 2563              	.L172:
2963:Generated_Source\PSoC4/CyLib.c ****             }
2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
2966:Generated_Source\PSoC4/CyLib.c **** }
 2564              		.loc 1 2966 0 is_stmt 1
 2565 0038 BD46     		mov	sp, r7
 2566 003a 02B0     		add	sp, sp, #8
 2567              		@ sp needed
 2568 003c 80BD     		pop	{r7, pc}
 2569              	.L178:
 2570 003e C046     		.align	2
 2571              	.L177:
 2572 0040 00000000 		.word	CySysTickCallbacks
 2573              		.cfi_endproc
 2574              	.LFE46:
 2575              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2576              		.section	.text.CyGetUniqueId,"ax",%progbits
 2577              		.align	2
 2578              		.global	CyGetUniqueId
 2579              		.code	16
 2580              		.thumb_func
 2581              		.type	CyGetUniqueId, %function
 2582              	CyGetUniqueId:
 2583              	.LFB47:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 99


2984:Generated_Source\PSoC4/CyLib.c **** {
 2584              		.loc 1 2984 0
 2585              		.cfi_startproc
 2586 0000 80B5     		push	{r7, lr}
 2587              		.cfi_def_cfa_offset 8
 2588              		.cfi_offset 7, -8
 2589              		.cfi_offset 14, -4
 2590 0002 82B0     		sub	sp, sp, #8
 2591              		.cfi_def_cfa_offset 16
 2592 0004 00AF     		add	r7, sp, #0
 2593              		.cfi_def_cfa_register 7
 2594 0006 7860     		str	r0, [r7, #4]
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2595              		.loc 1 2986 0
 2596 0008 254B     		ldr	r3, .L180
 2597 000a 1B78     		ldrb	r3, [r3]
 2598 000c DBB2     		uxtb	r3, r3
 2599 000e 1A1C     		mov	r2, r3
 2600 0010 7B68     		ldr	r3, [r7, #4]
 2601 0012 1A60     		str	r2, [r3]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2602              		.loc 1 2987 0
 2603 0014 234B     		ldr	r3, .L180+4
 2604 0016 1B78     		ldrb	r3, [r3]
 2605 0018 DBB2     		uxtb	r3, r3
 2606 001a 1A02     		lsl	r2, r3, #8
 2607 001c 7B68     		ldr	r3, [r7, #4]
 2608 001e 1B68     		ldr	r3, [r3]
 2609 0020 1A43     		orr	r2, r3
 2610 0022 7B68     		ldr	r3, [r7, #4]
 2611 0024 1A60     		str	r2, [r3]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2612              		.loc 1 2988 0
 2613 0026 204B     		ldr	r3, .L180+8
 2614 0028 1B78     		ldrb	r3, [r3]
 2615 002a DBB2     		uxtb	r3, r3
 2616 002c 1A04     		lsl	r2, r3, #16
 2617 002e 7B68     		ldr	r3, [r7, #4]
 2618 0030 1B68     		ldr	r3, [r3]
 2619 0032 1A43     		orr	r2, r3
 2620 0034 7B68     		ldr	r3, [r7, #4]
 2621 0036 1A60     		str	r2, [r3]
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2622              		.loc 1 2989 0
 2623 0038 1C4B     		ldr	r3, .L180+12
 2624 003a 1B78     		ldrb	r3, [r3]
 2625 003c DBB2     		uxtb	r3, r3
 2626 003e 1A06     		lsl	r2, r3, #24
 2627 0040 7B68     		ldr	r3, [r7, #4]
 2628 0042 1B68     		ldr	r3, [r3]
 2629 0044 1A43     		orr	r2, r3
 2630 0046 7B68     		ldr	r3, [r7, #4]
 2631 0048 1A60     		str	r2, [r3]
2990:Generated_Source\PSoC4/CyLib.c **** 
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2632              		.loc 1 2991 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 100


 2633 004a 7B68     		ldr	r3, [r7, #4]
 2634 004c 0433     		add	r3, r3, #4
 2635 004e 184A     		ldr	r2, .L180+16
 2636 0050 1278     		ldrb	r2, [r2]
 2637 0052 D2B2     		uxtb	r2, r2
 2638 0054 1A60     		str	r2, [r3]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2639              		.loc 1 2992 0
 2640 0056 174B     		ldr	r3, .L180+20
 2641 0058 1B78     		ldrb	r3, [r3]
 2642 005a DBB2     		uxtb	r3, r3
 2643 005c 1902     		lsl	r1, r3, #8
 2644 005e 7B68     		ldr	r3, [r7, #4]
 2645 0060 0433     		add	r3, r3, #4
 2646 0062 7A68     		ldr	r2, [r7, #4]
 2647 0064 0432     		add	r2, r2, #4
 2648 0066 1268     		ldr	r2, [r2]
 2649 0068 0A43     		orr	r2, r1
 2650 006a 1A60     		str	r2, [r3]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2651              		.loc 1 2993 0
 2652 006c 124B     		ldr	r3, .L180+24
 2653 006e 1B78     		ldrb	r3, [r3]
 2654 0070 DBB2     		uxtb	r3, r3
 2655 0072 1904     		lsl	r1, r3, #16
 2656 0074 7B68     		ldr	r3, [r7, #4]
 2657 0076 0433     		add	r3, r3, #4
 2658 0078 7A68     		ldr	r2, [r7, #4]
 2659 007a 0432     		add	r2, r2, #4
 2660 007c 1268     		ldr	r2, [r2]
 2661 007e 0A43     		orr	r2, r1
 2662 0080 1A60     		str	r2, [r3]
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2663              		.loc 1 2994 0
 2664 0082 0E4B     		ldr	r3, .L180+28
 2665 0084 1B78     		ldrb	r3, [r3]
 2666 0086 DBB2     		uxtb	r3, r3
 2667 0088 1906     		lsl	r1, r3, #24
 2668 008a 7B68     		ldr	r3, [r7, #4]
 2669 008c 0433     		add	r3, r3, #4
 2670 008e 7A68     		ldr	r2, [r7, #4]
 2671 0090 0432     		add	r2, r2, #4
 2672 0092 1268     		ldr	r2, [r2]
 2673 0094 0A43     		orr	r2, r1
 2674 0096 1A60     		str	r2, [r3]
2995:Generated_Source\PSoC4/CyLib.c **** #else
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 101


 2675              		.loc 1 3006 0
 2676 0098 BD46     		mov	sp, r7
 2677 009a 02B0     		add	sp, sp, #8
 2678              		@ sp needed
 2679 009c 80BD     		pop	{r7, pc}
 2680              	.L181:
 2681 009e C046     		.align	2
 2682              	.L180:
 2683 00a0 78F1FF0F 		.word	268431736
 2684 00a4 79F1FF0F 		.word	268431737
 2685 00a8 7AF1FF0F 		.word	268431738
 2686 00ac 7BF1FF0F 		.word	268431739
 2687 00b0 7CF1FF0F 		.word	268431740
 2688 00b4 7DF1FF0F 		.word	268431741
 2689 00b8 7EF1FF0F 		.word	268431742
 2690 00bc 7FF1FF0F 		.word	268431743
 2691              		.cfi_endproc
 2692              	.LFE47:
 2693              		.size	CyGetUniqueId, .-CyGetUniqueId
 2694              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2695              		.align	2
 2696              		.global	CySysSetRamAccessArbPriority
 2697              		.code	16
 2698              		.thumb_func
 2699              		.type	CySysSetRamAccessArbPriority, %function
 2700              	CySysSetRamAccessArbPriority:
 2701              	.LFB48:
3007:Generated_Source\PSoC4/CyLib.c **** 
3008:Generated_Source\PSoC4/CyLib.c **** 
3009:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3010:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3011:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3012:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3013:Generated_Source\PSoC4/CyLib.c ****     *
3014:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3015:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3016:Generated_Source\PSoC4/CyLib.c ****     *  details.
3017:Generated_Source\PSoC4/CyLib.c ****     *
3018:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3019:Generated_Source\PSoC4/CyLib.c ****     *
3020:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3021:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3022:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3023:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3024:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3025:Generated_Source\PSoC4/CyLib.c ****     *
3026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3027:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3028:Generated_Source\PSoC4/CyLib.c ****     {
 2702              		.loc 1 3028 0
 2703              		.cfi_startproc
 2704 0000 80B5     		push	{r7, lr}
 2705              		.cfi_def_cfa_offset 8
 2706              		.cfi_offset 7, -8
 2707              		.cfi_offset 14, -4
 2708 0002 84B0     		sub	sp, sp, #16
 2709              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 102


 2710 0004 00AF     		add	r7, sp, #0
 2711              		.cfi_def_cfa_register 7
 2712 0006 7860     		str	r0, [r7, #4]
3029:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3030:Generated_Source\PSoC4/CyLib.c **** 
3031:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2713              		.loc 1 3031 0
 2714 0008 094B     		ldr	r3, .L183
 2715 000a 1B68     		ldr	r3, [r3]
 2716 000c 094A     		ldr	r2, .L183+4
 2717 000e 1340     		and	r3, r2
 2718 0010 FB60     		str	r3, [r7, #12]
3032:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2719              		.loc 1 3032 0
 2720 0012 7B68     		ldr	r3, [r7, #4]
 2721 0014 5A04     		lsl	r2, r3, #17
 2722 0016 C023     		mov	r3, #192
 2723 0018 DB02     		lsl	r3, r3, #11
 2724 001a 1340     		and	r3, r2
 2725 001c FA68     		ldr	r2, [r7, #12]
 2726 001e 1343     		orr	r3, r2
 2727 0020 FB60     		str	r3, [r7, #12]
3033:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2728              		.loc 1 3033 0
 2729 0022 034B     		ldr	r3, .L183
 2730 0024 FA68     		ldr	r2, [r7, #12]
 2731 0026 1A60     		str	r2, [r3]
3034:Generated_Source\PSoC4/CyLib.c ****     }
 2732              		.loc 1 3034 0
 2733 0028 BD46     		mov	sp, r7
 2734 002a 04B0     		add	sp, sp, #16
 2735              		@ sp needed
 2736 002c 80BD     		pop	{r7, pc}
 2737              	.L184:
 2738 002e C046     		.align	2
 2739              	.L183:
 2740 0030 38001040 		.word	1074790456
 2741 0034 FFFFF9FF 		.word	-393217
 2742              		.cfi_endproc
 2743              	.LFE48:
 2744              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2745              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2746              		.align	2
 2747              		.global	CySysSetFlashAccessArbPriority
 2748              		.code	16
 2749              		.thumb_func
 2750              		.type	CySysSetFlashAccessArbPriority, %function
 2751              	CySysSetFlashAccessArbPriority:
 2752              	.LFB49:
3035:Generated_Source\PSoC4/CyLib.c **** 
3036:Generated_Source\PSoC4/CyLib.c **** 
3037:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3038:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3039:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3040:Generated_Source\PSoC4/CyLib.c ****     *
3041:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3042:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 103


3043:Generated_Source\PSoC4/CyLib.c ****     *  details.
3044:Generated_Source\PSoC4/CyLib.c ****     *
3045:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3046:Generated_Source\PSoC4/CyLib.c ****     *
3047:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3048:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3049:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3050:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3051:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3052:Generated_Source\PSoC4/CyLib.c ****     *
3053:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3054:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3055:Generated_Source\PSoC4/CyLib.c ****     {
 2753              		.loc 1 3055 0
 2754              		.cfi_startproc
 2755 0000 80B5     		push	{r7, lr}
 2756              		.cfi_def_cfa_offset 8
 2757              		.cfi_offset 7, -8
 2758              		.cfi_offset 14, -4
 2759 0002 84B0     		sub	sp, sp, #16
 2760              		.cfi_def_cfa_offset 24
 2761 0004 00AF     		add	r7, sp, #0
 2762              		.cfi_def_cfa_register 7
 2763 0006 7860     		str	r0, [r7, #4]
3056:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3057:Generated_Source\PSoC4/CyLib.c **** 
3058:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2764              		.loc 1 3058 0
 2765 0008 094B     		ldr	r3, .L186
 2766 000a 1B68     		ldr	r3, [r3]
 2767 000c 094A     		ldr	r2, .L186+4
 2768 000e 1340     		and	r3, r2
 2769 0010 FB60     		str	r3, [r7, #12]
3059:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2770              		.loc 1 3059 0
 2771 0012 7B68     		ldr	r3, [r7, #4]
 2772 0014 5A04     		lsl	r2, r3, #17
 2773 0016 C023     		mov	r3, #192
 2774 0018 DB02     		lsl	r3, r3, #11
 2775 001a 1340     		and	r3, r2
 2776 001c FA68     		ldr	r2, [r7, #12]
 2777 001e 1343     		orr	r3, r2
 2778 0020 FB60     		str	r3, [r7, #12]
3060:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2779              		.loc 1 3060 0
 2780 0022 034B     		ldr	r3, .L186
 2781 0024 FA68     		ldr	r2, [r7, #12]
 2782 0026 1A60     		str	r2, [r3]
3061:Generated_Source\PSoC4/CyLib.c ****     }
 2783              		.loc 1 3061 0
 2784 0028 BD46     		mov	sp, r7
 2785 002a 04B0     		add	sp, sp, #16
 2786              		@ sp needed
 2787 002c 80BD     		pop	{r7, pc}
 2788              	.L187:
 2789 002e C046     		.align	2
 2790              	.L186:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 104


 2791 0030 30001040 		.word	1074790448
 2792 0034 FFFFF9FF 		.word	-393217
 2793              		.cfi_endproc
 2794              	.LFE49:
 2795              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2796              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2797              		.align	2
 2798              		.global	CySysSetDmacAccessArbPriority
 2799              		.code	16
 2800              		.thumb_func
 2801              		.type	CySysSetDmacAccessArbPriority, %function
 2802              	CySysSetDmacAccessArbPriority:
 2803              	.LFB50:
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3065:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3066:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3067:Generated_Source\PSoC4/CyLib.c ****     *
3068:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3069:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3070:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3071:Generated_Source\PSoC4/CyLib.c ****     *
3072:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3073:Generated_Source\PSoC4/CyLib.c ****     *
3074:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3075:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3076:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3077:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3078:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3079:Generated_Source\PSoC4/CyLib.c ****     *
3080:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3081:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3082:Generated_Source\PSoC4/CyLib.c ****     {
 2804              		.loc 1 3082 0
 2805              		.cfi_startproc
 2806 0000 80B5     		push	{r7, lr}
 2807              		.cfi_def_cfa_offset 8
 2808              		.cfi_offset 7, -8
 2809              		.cfi_offset 14, -4
 2810 0002 84B0     		sub	sp, sp, #16
 2811              		.cfi_def_cfa_offset 24
 2812 0004 00AF     		add	r7, sp, #0
 2813              		.cfi_def_cfa_register 7
 2814 0006 7860     		str	r0, [r7, #4]
3083:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3084:Generated_Source\PSoC4/CyLib.c **** 
3085:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2815              		.loc 1 3085 0
 2816 0008 094B     		ldr	r3, .L189
 2817 000a 1B68     		ldr	r3, [r3]
 2818 000c 094A     		ldr	r2, .L189+4
 2819 000e 1340     		and	r3, r2
 2820 0010 FB60     		str	r3, [r7, #12]
3086:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2821              		.loc 1 3086 0
 2822 0012 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 105


 2823 0014 5A04     		lsl	r2, r3, #17
 2824 0016 C023     		mov	r3, #192
 2825 0018 DB02     		lsl	r3, r3, #11
 2826 001a 1340     		and	r3, r2
 2827 001c FA68     		ldr	r2, [r7, #12]
 2828 001e 1343     		orr	r3, r2
 2829 0020 FB60     		str	r3, [r7, #12]
3087:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2830              		.loc 1 3087 0
 2831 0022 034B     		ldr	r3, .L189
 2832 0024 FA68     		ldr	r2, [r7, #12]
 2833 0026 1A60     		str	r2, [r3]
3088:Generated_Source\PSoC4/CyLib.c ****     }
 2834              		.loc 1 3088 0
 2835 0028 BD46     		mov	sp, r7
 2836 002a 04B0     		add	sp, sp, #16
 2837              		@ sp needed
 2838 002c 80BD     		pop	{r7, pc}
 2839              	.L190:
 2840 002e C046     		.align	2
 2841              	.L189:
 2842 0030 3C001040 		.word	1074790460
 2843 0034 FFFFF9FF 		.word	-393217
 2844              		.cfi_endproc
 2845              	.LFE50:
 2846              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2847              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2848              		.align	2
 2849              		.global	CySysSetPeripheralAccessArbPriority
 2850              		.code	16
 2851              		.thumb_func
 2852              		.type	CySysSetPeripheralAccessArbPriority, %function
 2853              	CySysSetPeripheralAccessArbPriority:
 2854              	.LFB51:
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** 
3091:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3092:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3093:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3094:Generated_Source\PSoC4/CyLib.c ****     *
3095:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3096:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3097:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3098:Generated_Source\PSoC4/CyLib.c ****     *
3099:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3100:Generated_Source\PSoC4/CyLib.c ****     *
3101:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3102:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3103:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3104:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3105:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3106:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3107:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3108:Generated_Source\PSoC4/CyLib.c ****     *
3109:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3110:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3111:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 106


 2855              		.loc 1 3111 0
 2856              		.cfi_startproc
 2857 0000 80B5     		push	{r7, lr}
 2858              		.cfi_def_cfa_offset 8
 2859              		.cfi_offset 7, -8
 2860              		.cfi_offset 14, -4
 2861 0002 84B0     		sub	sp, sp, #16
 2862              		.cfi_def_cfa_offset 24
 2863 0004 00AF     		add	r7, sp, #0
 2864              		.cfi_def_cfa_register 7
 2865 0006 7860     		str	r0, [r7, #4]
 2866 0008 3960     		str	r1, [r7]
3112:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2867              		.loc 1 3114 0
 2868 000a 7B68     		ldr	r3, [r7, #4]
 2869 000c 002B     		cmp	r3, #0
 2870 000e 10D1     		bne	.L192
3115:Generated_Source\PSoC4/CyLib.c ****         {
3116:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2871              		.loc 1 3116 0
 2872 0010 154B     		ldr	r3, .L195
 2873 0012 1B68     		ldr	r3, [r3]
 2874 0014 154A     		ldr	r2, .L195+4
 2875 0016 1340     		and	r3, r2
 2876 0018 FB60     		str	r3, [r7, #12]
3117:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2877              		.loc 1 3117 0
 2878 001a 3B68     		ldr	r3, [r7]
 2879 001c 5A04     		lsl	r2, r3, #17
 2880 001e C023     		mov	r3, #192
 2881 0020 DB02     		lsl	r3, r3, #11
 2882 0022 1340     		and	r3, r2
 2883 0024 FA68     		ldr	r2, [r7, #12]
 2884 0026 1343     		orr	r3, r2
 2885 0028 FB60     		str	r3, [r7, #12]
3118:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 2886              		.loc 1 3118 0
 2887 002a 0F4B     		ldr	r3, .L195
 2888 002c FA68     		ldr	r2, [r7, #12]
 2889 002e 1A60     		str	r2, [r3]
 2890 0030 16E0     		b	.L191
 2891              	.L192:
3119:Generated_Source\PSoC4/CyLib.c ****         } else
3120:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3121:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2892              		.loc 1 3121 0
 2893 0032 7B68     		ldr	r3, [r7, #4]
 2894 0034 012B     		cmp	r3, #1
 2895 0036 10D1     		bne	.L194
3122:Generated_Source\PSoC4/CyLib.c ****         {
3123:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2896              		.loc 1 3123 0
 2897 0038 0D4B     		ldr	r3, .L195+8
 2898 003a 1B68     		ldr	r3, [r3]
 2899 003c 0B4A     		ldr	r2, .L195+4
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 107


 2900 003e 1340     		and	r3, r2
 2901 0040 FB60     		str	r3, [r7, #12]
3124:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2902              		.loc 1 3124 0
 2903 0042 3B68     		ldr	r3, [r7]
 2904 0044 5A04     		lsl	r2, r3, #17
 2905 0046 C023     		mov	r3, #192
 2906 0048 DB02     		lsl	r3, r3, #11
 2907 004a 1340     		and	r3, r2
 2908 004c FA68     		ldr	r2, [r7, #12]
 2909 004e 1343     		orr	r3, r2
 2910 0050 FB60     		str	r3, [r7, #12]
3125:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 2911              		.loc 1 3125 0
 2912 0052 074B     		ldr	r3, .L195+8
 2913 0054 FA68     		ldr	r2, [r7, #12]
 2914 0056 1A60     		str	r2, [r3]
 2915 0058 02E0     		b	.L191
 2916              	.L194:
3126:Generated_Source\PSoC4/CyLib.c ****         } else
3127:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3128:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3129:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
3130:Generated_Source\PSoC4/CyLib.c ****         {
3131:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3132:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3133:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
3134:Generated_Source\PSoC4/CyLib.c ****         } else
3135:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3136:Generated_Source\PSoC4/CyLib.c ****         {
3137:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3138:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 2917              		.loc 1 3138 0 discriminator 1
 2918 005a 0020     		mov	r0, #0
 2919 005c FFF7FEFF 		bl	CyHalt
 2920              	.L191:
3139:Generated_Source\PSoC4/CyLib.c ****         }
3140:Generated_Source\PSoC4/CyLib.c ****     }
 2921              		.loc 1 3140 0
 2922 0060 BD46     		mov	sp, r7
 2923 0062 04B0     		add	sp, sp, #16
 2924              		@ sp needed
 2925 0064 80BD     		pop	{r7, pc}
 2926              	.L196:
 2927 0066 C046     		.align	2
 2928              	.L195:
 2929 0068 00011040 		.word	1074790656
 2930 006c FFFFF9FF 		.word	-393217
 2931 0070 04011040 		.word	1074790660
 2932              		.cfi_endproc
 2933              	.LFE51:
 2934              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2935              		.section	.text.CySysPrbSetGlobalVrefSource,"ax",%progbits
 2936              		.align	2
 2937              		.global	CySysPrbSetGlobalVrefSource
 2938              		.code	16
 2939              		.thumb_func
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 108


 2940              		.type	CySysPrbSetGlobalVrefSource, %function
 2941              	CySysPrbSetGlobalVrefSource:
 2942              	.LFB52:
3141:Generated_Source\PSoC4/CyLib.c **** 
3142:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_DMAC_PRESENT) */
3143:Generated_Source\PSoC4/CyLib.c **** 
3144:Generated_Source\PSoC4/CyLib.c **** 
3145:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PASS)
3146:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3147:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetGlobalVrefSource
3148:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3149:Generated_Source\PSoC4/CyLib.c ****     *
3150:Generated_Source\PSoC4/CyLib.c ****     *  Selects the source of the global voltage reference.
3151:Generated_Source\PSoC4/CyLib.c ****     *
3152:Generated_Source\PSoC4/CyLib.c ****     *  \note The global voltage reference uses one of the available programmable
3153:Generated_Source\PSoC4/CyLib.c ****     *  voltage reference lines.
3154:Generated_Source\PSoC4/CyLib.c ****     *
3155:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4 devices that support the programmable
3156:Generated_Source\PSoC4/CyLib.c ****     *  reference block. Please refer to the device TRM for more details.
3157:Generated_Source\PSoC4/CyLib.c ****     *
3158:Generated_Source\PSoC4/CyLib.c ****     *  This API affects the voltage values available in
3159:Generated_Source\PSoC4/CyLib.c ****     *  \ref CySysPrbSetGlobalVrefVoltage().
3160:Generated_Source\PSoC4/CyLib.c ****     *
3161:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M, PSoC 4200L and PSoC 4400 devices only.
3162:Generated_Source\PSoC4/CyLib.c ****     *
3163:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3164:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_VREF_SOURCE_BG   Sets bandgap as the source of the global voltage
3165:Generated_Source\PSoC4/CyLib.c ****     *   reference.
3166:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_VREF_SOURCE_VDDA Sets VDDA as the source of the global voltage
3167:Generated_Source\PSoC4/CyLib.c ****     *   reference.
3168:Generated_Source\PSoC4/CyLib.c ****     *
3169:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3170:Generated_Source\PSoC4/CyLib.c ****     #ifdef CyDesignWideVoltageReference_PRB_REF
3171:Generated_Source\PSoC4/CyLib.c ****         void CySysPrbSetGlobalVrefSource(uint32 source)
3172:Generated_Source\PSoC4/CyLib.c ****         {
 2943              		.loc 1 3172 0
 2944              		.cfi_startproc
 2945 0000 80B5     		push	{r7, lr}
 2946              		.cfi_def_cfa_offset 8
 2947              		.cfi_offset 7, -8
 2948              		.cfi_offset 14, -4
 2949 0002 82B0     		sub	sp, sp, #8
 2950              		.cfi_def_cfa_offset 16
 2951 0004 00AF     		add	r7, sp, #0
 2952              		.cfi_def_cfa_register 7
 2953 0006 7860     		str	r0, [r7, #4]
3173:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_REF, CYFLD_PASS_VREF_SUP_SEL, source);
 2954              		.loc 1 3173 0
 2955 0008 074B     		ldr	r3, .L198
 2956 000a 074A     		ldr	r2, .L198
 2957 000c 1268     		ldr	r2, [r2]
 2958 000e 0221     		mov	r1, #2
 2959 0010 8A43     		bic	r2, r1
 2960 0012 111C     		mov	r1, r2
 2961 0014 7A68     		ldr	r2, [r7, #4]
 2962 0016 5200     		lsl	r2, r2, #1
 2963 0018 0220     		mov	r0, #2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 109


 2964 001a 0240     		and	r2, r0
 2965 001c 0A43     		orr	r2, r1
 2966 001e 1A60     		str	r2, [r3]
3174:Generated_Source\PSoC4/CyLib.c ****         }
 2967              		.loc 1 3174 0
 2968 0020 BD46     		mov	sp, r7
 2969 0022 02B0     		add	sp, sp, #8
 2970              		@ sp needed
 2971 0024 80BD     		pop	{r7, pc}
 2972              	.L199:
 2973 0026 C046     		.align	2
 2974              	.L198:
 2975 0028 04023F40 		.word	1077871108
 2976              		.cfi_endproc
 2977              	.LFE52:
 2978              		.size	CySysPrbSetGlobalVrefSource, .-CySysPrbSetGlobalVrefSource
 2979              		.section	.text.CySysPrbSetBgGain,"ax",%progbits
 2980              		.align	2
 2981              		.global	CySysPrbSetBgGain
 2982              		.code	16
 2983              		.thumb_func
 2984              		.type	CySysPrbSetBgGain, %function
 2985              	CySysPrbSetBgGain:
 2986              	.LFB53:
3175:Generated_Source\PSoC4/CyLib.c ****     #endif
3176:Generated_Source\PSoC4/CyLib.c **** 
3177:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3178:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetBgGain
3179:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3180:Generated_Source\PSoC4/CyLib.c ****     *
3181:Generated_Source\PSoC4/CyLib.c ****     * Selects the gain of bandgap reference buffer. Note that this API is effective
3182:Generated_Source\PSoC4/CyLib.c ****     * only when the bandgap is set as the source of global voltage reference.
3183:Generated_Source\PSoC4/CyLib.c ****     *
3184:Generated_Source\PSoC4/CyLib.c ****     * \note This API affects the voltage values available in \ref
3185:Generated_Source\PSoC4/CyLib.c ****     * CySysPrbSetGlobalVrefVoltage() API.
3186:Generated_Source\PSoC4/CyLib.c ****     *
3187:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3188:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3189:Generated_Source\PSoC4/CyLib.c ****     *
3190:Generated_Source\PSoC4/CyLib.c ****     * \param gain:
3191:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_VREF_BG_GAINx1  Gain is 1.
3192:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_VREF_BG_GAINx2  Gain is 2.
3193:Generated_Source\PSoC4/CyLib.c ****     *
3194:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3195:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbSetBgGain(uint32 gain)
3196:Generated_Source\PSoC4/CyLib.c ****     {
 2987              		.loc 1 3196 0
 2988              		.cfi_startproc
 2989 0000 80B5     		push	{r7, lr}
 2990              		.cfi_def_cfa_offset 8
 2991              		.cfi_offset 7, -8
 2992              		.cfi_offset 14, -4
 2993 0002 82B0     		sub	sp, sp, #8
 2994              		.cfi_def_cfa_offset 16
 2995 0004 00AF     		add	r7, sp, #0
 2996              		.cfi_def_cfa_register 7
 2997 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 110


3197:Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VBGR_BUF_GAIN, gain);
 2998              		.loc 1 3197 0
 2999 0008 064B     		ldr	r3, .L201
 3000 000a 064A     		ldr	r2, .L201
 3001 000c 1268     		ldr	r2, [r2]
 3002 000e 0321     		mov	r1, #3
 3003 0010 8A43     		bic	r2, r1
 3004 0012 111C     		mov	r1, r2
 3005 0014 7A68     		ldr	r2, [r7, #4]
 3006 0016 0320     		mov	r0, #3
 3007 0018 0240     		and	r2, r0
 3008 001a 0A43     		orr	r2, r1
 3009 001c 1A60     		str	r2, [r3]
3198:Generated_Source\PSoC4/CyLib.c ****     }
 3010              		.loc 1 3198 0
 3011 001e BD46     		mov	sp, r7
 3012 0020 02B0     		add	sp, sp, #8
 3013              		@ sp needed
 3014 0022 80BD     		pop	{r7, pc}
 3015              	.L202:
 3016              		.align	2
 3017              	.L201:
 3018 0024 00023F40 		.word	1077871104
 3019              		.cfi_endproc
 3020              	.LFE53:
 3021              		.size	CySysPrbSetBgGain, .-CySysPrbSetBgGain
 3022              		.section	.text.CySysPrbSetGlobalVrefVoltage,"ax",%progbits
 3023              		.align	2
 3024              		.global	CySysPrbSetGlobalVrefVoltage
 3025              		.code	16
 3026              		.thumb_func
 3027              		.type	CySysPrbSetGlobalVrefVoltage, %function
 3028              	CySysPrbSetGlobalVrefVoltage:
 3029              	.LFB54:
3199:Generated_Source\PSoC4/CyLib.c **** 
3200:Generated_Source\PSoC4/CyLib.c **** 
3201:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3202:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetGlobalVrefVoltage
3203:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3204:Generated_Source\PSoC4/CyLib.c ****     *
3205:Generated_Source\PSoC4/CyLib.c ****     * Selects the value of global voltage reference. Set the source of the global
3206:Generated_Source\PSoC4/CyLib.c ****     * voltage reference and bandgap buffer gain (if applicable) before calling this
3207:Generated_Source\PSoC4/CyLib.c ****     * API.
3208:Generated_Source\PSoC4/CyLib.c ****     *
3209:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3210:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3211:Generated_Source\PSoC4/CyLib.c ****     *
3212:Generated_Source\PSoC4/CyLib.c ****     * \param voltageTap The range is from 1 to 16 that corresponds to:
3213:Generated_Source\PSoC4/CyLib.c ****     * Source is bandgap (x1): 0.08 V to 1.20 V in steps of 0.07 V approximately.
3214:Generated_Source\PSoC4/CyLib.c ****     * Source is bandgap (x2): 0.16 V to 2.40 V in steps of 0.14 V approximately.
3215:Generated_Source\PSoC4/CyLib.c ****     * Source is Vdda: 0.21 V to 3.30 in steps of 0.21 V approximately. The Vdda
3216:Generated_Source\PSoC4/CyLib.c ****     * is equal to 3.3 V. Voltage value will change according to value of Vdda.
3217:Generated_Source\PSoC4/CyLib.c ****     *
3218:Generated_Source\PSoC4/CyLib.c ****     *   voltageTap  | If bandgap (x1), V| If bandgap (x2), V| If Vdda
3219:Generated_Source\PSoC4/CyLib.c ****     *   ------------|-------------------|-------------------|-------------------
3220:Generated_Source\PSoC4/CyLib.c ****     *       1       |       0.08        |       0.16        |       0.21
3221:Generated_Source\PSoC4/CyLib.c ****     *       2       |       0.15        |       0.30        |       0.41
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 111


3222:Generated_Source\PSoC4/CyLib.c ****     *       3       |       0.23        |       0.46        |       0.62
3223:Generated_Source\PSoC4/CyLib.c ****     *       4       |       0.30        |       0.60        |       0.83
3224:Generated_Source\PSoC4/CyLib.c ****     *       5       |       0.38        |       0.76        |       1.03
3225:Generated_Source\PSoC4/CyLib.c ****     *       6       |       0.45        |       0.90        |       1.24
3226:Generated_Source\PSoC4/CyLib.c ****     *       7       |       0.53        |       1.06        |       1.44
3227:Generated_Source\PSoC4/CyLib.c ****     *       8       |       0.60        |       1.20        |       1.65
3228:Generated_Source\PSoC4/CyLib.c ****     *       9       |       0.68        |       1.36        |       1.86
3229:Generated_Source\PSoC4/CyLib.c ****     *       10      |       0.75        |       1.50        |       2.06
3230:Generated_Source\PSoC4/CyLib.c ****     *       11      |       0.83        |       1.66        |       2.27
3231:Generated_Source\PSoC4/CyLib.c ****     *       12      |       0.90        |       1.80        |       2.48
3232:Generated_Source\PSoC4/CyLib.c ****     *       13      |       0.98        |       1.96        |       2.68
3233:Generated_Source\PSoC4/CyLib.c ****     *       14      |       1.05        |       2.10        |       2.89
3234:Generated_Source\PSoC4/CyLib.c ****     *       15      |       1.13        |       2.26        |       3.09
3235:Generated_Source\PSoC4/CyLib.c ****     *       16      |       1.20        |       2.40        |       3.30
3236:Generated_Source\PSoC4/CyLib.c ****     *
3237:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3238:Generated_Source\PSoC4/CyLib.c ****     #ifdef CyDesignWideVoltageReference_PRB_REF
3239:Generated_Source\PSoC4/CyLib.c ****         void CySysPrbSetGlobalVrefVoltage(uint32 voltageTap)
3240:Generated_Source\PSoC4/CyLib.c ****         {
 3030              		.loc 1 3240 0
 3031              		.cfi_startproc
 3032 0000 80B5     		push	{r7, lr}
 3033              		.cfi_def_cfa_offset 8
 3034              		.cfi_offset 7, -8
 3035              		.cfi_offset 14, -4
 3036 0002 82B0     		sub	sp, sp, #8
 3037              		.cfi_def_cfa_offset 16
 3038 0004 00AF     		add	r7, sp, #0
 3039              		.cfi_def_cfa_register 7
 3040 0006 7860     		str	r0, [r7, #4]
3241:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_REF, CYFLD_PASS_VREF_SEL, voltageTap);
 3041              		.loc 1 3241 0
 3042 0008 074B     		ldr	r3, .L204
 3043 000a 074A     		ldr	r2, .L204
 3044 000c 1268     		ldr	r2, [r2]
 3045 000e F021     		mov	r1, #240
 3046 0010 8A43     		bic	r2, r1
 3047 0012 111C     		mov	r1, r2
 3048 0014 7A68     		ldr	r2, [r7, #4]
 3049 0016 1201     		lsl	r2, r2, #4
 3050 0018 FF20     		mov	r0, #255
 3051 001a 0240     		and	r2, r0
 3052 001c 0A43     		orr	r2, r1
 3053 001e 1A60     		str	r2, [r3]
3242:Generated_Source\PSoC4/CyLib.c ****         }
 3054              		.loc 1 3242 0
 3055 0020 BD46     		mov	sp, r7
 3056 0022 02B0     		add	sp, sp, #8
 3057              		@ sp needed
 3058 0024 80BD     		pop	{r7, pc}
 3059              	.L205:
 3060 0026 C046     		.align	2
 3061              	.L204:
 3062 0028 04023F40 		.word	1077871108
 3063              		.cfi_endproc
 3064              	.LFE54:
 3065              		.size	CySysPrbSetGlobalVrefVoltage, .-CySysPrbSetGlobalVrefVoltage
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 112


 3066              		.section	.text.CySysPrbEnableDeepsleepVddaRef,"ax",%progbits
 3067              		.align	2
 3068              		.global	CySysPrbEnableDeepsleepVddaRef
 3069              		.code	16
 3070              		.thumb_func
 3071              		.type	CySysPrbEnableDeepsleepVddaRef, %function
 3072              	CySysPrbEnableDeepsleepVddaRef:
 3073              	.LFB55:
3243:Generated_Source\PSoC4/CyLib.c ****     #endif
3244:Generated_Source\PSoC4/CyLib.c **** 
3245:Generated_Source\PSoC4/CyLib.c **** 
3246:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3247:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbEnableDeepsleepVddaRef
3248:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3249:Generated_Source\PSoC4/CyLib.c ****     *
3250:Generated_Source\PSoC4/CyLib.c ****     * Enables the Vdda reference in deep sleep mode. The Vdda reference is by
3251:Generated_Source\PSoC4/CyLib.c ****     * default disabled when entering deep sleep mode.
3252:Generated_Source\PSoC4/CyLib.c ****     *
3253:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3254:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3255:Generated_Source\PSoC4/CyLib.c ****     *
3256:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3257:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbEnableDeepsleepVddaRef(void)
3258:Generated_Source\PSoC4/CyLib.c ****     {
 3074              		.loc 1 3258 0
 3075              		.cfi_startproc
 3076 0000 80B5     		push	{r7, lr}
 3077              		.cfi_def_cfa_offset 8
 3078              		.cfi_offset 7, -8
 3079              		.cfi_offset 14, -4
 3080 0002 00AF     		add	r7, sp, #0
 3081              		.cfi_def_cfa_register 7
3259:Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_DEEPSLEEP_ON, 1u);
 3082              		.loc 1 3259 0
 3083 0004 044B     		ldr	r3, .L207
 3084 0006 044A     		ldr	r2, .L207
 3085 0008 1268     		ldr	r2, [r2]
 3086 000a 8021     		mov	r1, #128
 3087 000c C905     		lsl	r1, r1, #23
 3088 000e 0A43     		orr	r2, r1
 3089 0010 1A60     		str	r2, [r3]
3260:Generated_Source\PSoC4/CyLib.c ****     }
 3090              		.loc 1 3260 0
 3091 0012 BD46     		mov	sp, r7
 3092              		@ sp needed
 3093 0014 80BD     		pop	{r7, pc}
 3094              	.L208:
 3095 0016 C046     		.align	2
 3096              	.L207:
 3097 0018 00023F40 		.word	1077871104
 3098              		.cfi_endproc
 3099              	.LFE55:
 3100              		.size	CySysPrbEnableDeepsleepVddaRef, .-CySysPrbEnableDeepsleepVddaRef
 3101              		.section	.text.CySysPrbDisableDeepsleepVddaRef,"ax",%progbits
 3102              		.align	2
 3103              		.global	CySysPrbDisableDeepsleepVddaRef
 3104              		.code	16
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 113


 3105              		.thumb_func
 3106              		.type	CySysPrbDisableDeepsleepVddaRef, %function
 3107              	CySysPrbDisableDeepsleepVddaRef:
 3108              	.LFB56:
3261:Generated_Source\PSoC4/CyLib.c **** 
3262:Generated_Source\PSoC4/CyLib.c **** 
3263:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3264:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbDisableDeepsleepVddaRef
3265:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3266:Generated_Source\PSoC4/CyLib.c ****     *
3267:Generated_Source\PSoC4/CyLib.c ****     * Disables the Vdda reference in deep sleep mode. The Vdda reference is by
3268:Generated_Source\PSoC4/CyLib.c ****     * default disabled when entering deep sleep mode.
3269:Generated_Source\PSoC4/CyLib.c ****     *
3270:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3271:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3272:Generated_Source\PSoC4/CyLib.c ****     *
3273:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3274:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbDisableDeepsleepVddaRef(void)
3275:Generated_Source\PSoC4/CyLib.c ****     {
 3109              		.loc 1 3275 0
 3110              		.cfi_startproc
 3111 0000 80B5     		push	{r7, lr}
 3112              		.cfi_def_cfa_offset 8
 3113              		.cfi_offset 7, -8
 3114              		.cfi_offset 14, -4
 3115 0002 00AF     		add	r7, sp, #0
 3116              		.cfi_def_cfa_register 7
3276:Generated_Source\PSoC4/CyLib.c ****         CY_CLEAR_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_DEEPSLEEP_ON);
 3117              		.loc 1 3276 0
 3118 0004 034B     		ldr	r3, .L210
 3119 0006 034A     		ldr	r2, .L210
 3120 0008 1268     		ldr	r2, [r2]
 3121 000a 0349     		ldr	r1, .L210+4
 3122 000c 0A40     		and	r2, r1
 3123 000e 1A60     		str	r2, [r3]
3277:Generated_Source\PSoC4/CyLib.c ****     }
 3124              		.loc 1 3277 0
 3125 0010 BD46     		mov	sp, r7
 3126              		@ sp needed
 3127 0012 80BD     		pop	{r7, pc}
 3128              	.L211:
 3129              		.align	2
 3130              	.L210:
 3131 0014 00023F40 		.word	1077871104
 3132 0018 FFFFFFBF 		.word	-1073741825
 3133              		.cfi_endproc
 3134              	.LFE56:
 3135              		.size	CySysPrbDisableDeepsleepVddaRef, .-CySysPrbDisableDeepsleepVddaRef
 3136              		.section	.text.CySysPrbEnableVddaRef,"ax",%progbits
 3137              		.align	2
 3138              		.global	CySysPrbEnableVddaRef
 3139              		.code	16
 3140              		.thumb_func
 3141              		.type	CySysPrbEnableVddaRef, %function
 3142              	CySysPrbEnableVddaRef:
 3143              	.LFB57:
3278:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 114


3279:Generated_Source\PSoC4/CyLib.c **** 
3280:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3281:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbEnableVddaRef
3282:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3283:Generated_Source\PSoC4/CyLib.c ****     *
3284:Generated_Source\PSoC4/CyLib.c ****     * Enables the Vdda reference. The Vdda reference is by default not enabled.
3285:Generated_Source\PSoC4/CyLib.c ****     *
3286:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3287:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3288:Generated_Source\PSoC4/CyLib.c ****     *
3289:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3290:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbEnableVddaRef(void)
3291:Generated_Source\PSoC4/CyLib.c ****     {
 3144              		.loc 1 3291 0
 3145              		.cfi_startproc
 3146 0000 80B5     		push	{r7, lr}
 3147              		.cfi_def_cfa_offset 8
 3148              		.cfi_offset 7, -8
 3149              		.cfi_offset 14, -4
 3150 0002 00AF     		add	r7, sp, #0
 3151              		.cfi_def_cfa_register 7
3292:Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VDDA_ENABLE, 1u);
 3152              		.loc 1 3292 0
 3153 0004 034B     		ldr	r3, .L213
 3154 0006 034A     		ldr	r2, .L213
 3155 0008 1268     		ldr	r2, [r2]
 3156 000a 1021     		mov	r1, #16
 3157 000c 0A43     		orr	r2, r1
 3158 000e 1A60     		str	r2, [r3]
3293:Generated_Source\PSoC4/CyLib.c ****     }
 3159              		.loc 1 3293 0
 3160 0010 BD46     		mov	sp, r7
 3161              		@ sp needed
 3162 0012 80BD     		pop	{r7, pc}
 3163              	.L214:
 3164              		.align	2
 3165              	.L213:
 3166 0014 00023F40 		.word	1077871104
 3167              		.cfi_endproc
 3168              	.LFE57:
 3169              		.size	CySysPrbEnableVddaRef, .-CySysPrbEnableVddaRef
 3170              		.section	.text.CySysPrbDisableVddaRef,"ax",%progbits
 3171              		.align	2
 3172              		.global	CySysPrbDisableVddaRef
 3173              		.code	16
 3174              		.thumb_func
 3175              		.type	CySysPrbDisableVddaRef, %function
 3176              	CySysPrbDisableVddaRef:
 3177              	.LFB58:
3294:Generated_Source\PSoC4/CyLib.c **** 
3295:Generated_Source\PSoC4/CyLib.c **** 
3296:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3297:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbDisableVddaRef
3298:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3299:Generated_Source\PSoC4/CyLib.c ****     *
3300:Generated_Source\PSoC4/CyLib.c ****     * Disables the Vdda reference. The Vdda reference is by default not enabled.
3301:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 115


3302:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3303:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3304:Generated_Source\PSoC4/CyLib.c ****     *
3305:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3306:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbDisableVddaRef(void)
3307:Generated_Source\PSoC4/CyLib.c ****     {
 3178              		.loc 1 3307 0
 3179              		.cfi_startproc
 3180 0000 80B5     		push	{r7, lr}
 3181              		.cfi_def_cfa_offset 8
 3182              		.cfi_offset 7, -8
 3183              		.cfi_offset 14, -4
 3184 0002 00AF     		add	r7, sp, #0
 3185              		.cfi_def_cfa_register 7
3308:Generated_Source\PSoC4/CyLib.c ****         CY_CLEAR_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VDDA_ENABLE);
 3186              		.loc 1 3308 0
 3187 0004 034B     		ldr	r3, .L216
 3188 0006 034A     		ldr	r2, .L216
 3189 0008 1268     		ldr	r2, [r2]
 3190 000a 1021     		mov	r1, #16
 3191 000c 8A43     		bic	r2, r1
 3192 000e 1A60     		str	r2, [r3]
3309:Generated_Source\PSoC4/CyLib.c ****     }
 3193              		.loc 1 3309 0
 3194 0010 BD46     		mov	sp, r7
 3195              		@ sp needed
 3196 0012 80BD     		pop	{r7, pc}
 3197              	.L217:
 3198              		.align	2
 3199              	.L216:
 3200 0014 00023F40 		.word	1077871104
 3201              		.cfi_endproc
 3202              	.LFE58:
 3203              		.size	CySysPrbDisableVddaRef, .-CySysPrbDisableVddaRef
 3204              		.section	.text.CySysPrbSetBgBufferTrim,"ax",%progbits
 3205              		.align	2
 3206              		.global	CySysPrbSetBgBufferTrim
 3207              		.code	16
 3208              		.thumb_func
 3209              		.type	CySysPrbSetBgBufferTrim, %function
 3210              	CySysPrbSetBgBufferTrim:
 3211              	.LFB59:
3310:Generated_Source\PSoC4/CyLib.c **** 
3311:Generated_Source\PSoC4/CyLib.c **** 
3312:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3313:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetBgBufferTrim
3314:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3315:Generated_Source\PSoC4/CyLib.c ****     *
3316:Generated_Source\PSoC4/CyLib.c ****     * Sets the trim for the bandgap reference buffer.
3317:Generated_Source\PSoC4/CyLib.c ****     *
3318:Generated_Source\PSoC4/CyLib.c ****     * \note Affects all bandgap sourced references.
3319:Generated_Source\PSoC4/CyLib.c ****     *
3320:Generated_Source\PSoC4/CyLib.c ****     * \param bgTrim The trim value from -32 to 31. Step size is approximately 1 mV.
3321:Generated_Source\PSoC4/CyLib.c ****     *
3322:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3323:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3324:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 116


3325:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3326:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbSetBgBufferTrim(int32 bgTrim)
3327:Generated_Source\PSoC4/CyLib.c ****     {
 3212              		.loc 1 3327 0
 3213              		.cfi_startproc
 3214 0000 80B5     		push	{r7, lr}
 3215              		.cfi_def_cfa_offset 8
 3216              		.cfi_offset 7, -8
 3217              		.cfi_offset 14, -4
 3218 0002 84B0     		sub	sp, sp, #16
 3219              		.cfi_def_cfa_offset 24
 3220 0004 00AF     		add	r7, sp, #0
 3221              		.cfi_def_cfa_register 7
 3222 0006 7860     		str	r0, [r7, #4]
3328:Generated_Source\PSoC4/CyLib.c ****         uint8 tmp = 0u;
 3223              		.loc 1 3328 0
 3224 0008 0F23     		mov	r3, #15
 3225 000a FB18     		add	r3, r7, r3
 3226 000c 0022     		mov	r2, #0
 3227 000e 1A70     		strb	r2, [r3]
3329:Generated_Source\PSoC4/CyLib.c **** 
3330:Generated_Source\PSoC4/CyLib.c ****         if (bgTrim >= 0)
 3228              		.loc 1 3330 0
 3229 0010 7B68     		ldr	r3, [r7, #4]
 3230 0012 002B     		cmp	r3, #0
 3231 0014 0BDB     		blt	.L219
3331:Generated_Source\PSoC4/CyLib.c ****         {
3332:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_TRIM, CYFLD_PASS_VBGR_BUF_TRIM, (uint32) bgTrim);
 3232              		.loc 1 3332 0
 3233 0016 184B     		ldr	r3, .L221
 3234 0018 174A     		ldr	r2, .L221
 3235 001a 1268     		ldr	r2, [r2]
 3236 001c 3F21     		mov	r1, #63
 3237 001e 8A43     		bic	r2, r1
 3238 0020 111C     		mov	r1, r2
 3239 0022 7A68     		ldr	r2, [r7, #4]
 3240 0024 3F20     		mov	r0, #63
 3241 0026 0240     		and	r2, r0
 3242 0028 0A43     		orr	r2, r1
 3243 002a 1A60     		str	r2, [r3]
 3244 002c 21E0     		b	.L218
 3245              	.L219:
3333:Generated_Source\PSoC4/CyLib.c ****         }
3334:Generated_Source\PSoC4/CyLib.c ****         else
3335:Generated_Source\PSoC4/CyLib.c ****         {
3336:Generated_Source\PSoC4/CyLib.c ****             tmp = (uint8)((int32) bgTrim * (int8) (-1));   /* Make positive */
 3246              		.loc 1 3336 0
 3247 002e 7B68     		ldr	r3, [r7, #4]
 3248 0030 DAB2     		uxtb	r2, r3
 3249 0032 0F23     		mov	r3, #15
 3250 0034 FB18     		add	r3, r7, r3
 3251 0036 5242     		neg	r2, r2
 3252 0038 1A70     		strb	r2, [r3]
3337:Generated_Source\PSoC4/CyLib.c ****             tmp = (uint8) ~tmp + 1u;                      /* Two's complement */
 3253              		.loc 1 3337 0
 3254 003a 0F23     		mov	r3, #15
 3255 003c FB18     		add	r3, r7, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 117


 3256 003e 0F22     		mov	r2, #15
 3257 0040 BA18     		add	r2, r7, r2
 3258 0042 1278     		ldrb	r2, [r2]
 3259 0044 5242     		neg	r2, r2
 3260 0046 1A70     		strb	r2, [r3]
3338:Generated_Source\PSoC4/CyLib.c ****             tmp |= (uint8) CY_SYS_VREF_BG_BUFFER_TRIM_SIGN_BIT;
 3261              		.loc 1 3338 0
 3262 0048 0F23     		mov	r3, #15
 3263 004a FB18     		add	r3, r7, r3
 3264 004c 0F22     		mov	r2, #15
 3265 004e BA18     		add	r2, r7, r2
 3266 0050 1278     		ldrb	r2, [r2]
 3267 0052 2021     		mov	r1, #32
 3268 0054 0A43     		orr	r2, r1
 3269 0056 1A70     		strb	r2, [r3]
3339:Generated_Source\PSoC4/CyLib.c **** 
3340:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_TRIM, CYFLD_PASS_VBGR_BUF_TRIM, tmp);
 3270              		.loc 1 3340 0
 3271 0058 074B     		ldr	r3, .L221
 3272 005a 074A     		ldr	r2, .L221
 3273 005c 1268     		ldr	r2, [r2]
 3274 005e 3F21     		mov	r1, #63
 3275 0060 8A43     		bic	r2, r1
 3276 0062 111C     		mov	r1, r2
 3277 0064 0F22     		mov	r2, #15
 3278 0066 BA18     		add	r2, r7, r2
 3279 0068 1278     		ldrb	r2, [r2]
 3280 006a 3F20     		mov	r0, #63
 3281 006c 0240     		and	r2, r0
 3282 006e 0A43     		orr	r2, r1
 3283 0070 1A60     		str	r2, [r3]
 3284              	.L218:
3341:Generated_Source\PSoC4/CyLib.c ****         }
3342:Generated_Source\PSoC4/CyLib.c ****     }
 3285              		.loc 1 3342 0
 3286 0072 BD46     		mov	sp, r7
 3287 0074 04B0     		add	sp, sp, #16
 3288              		@ sp needed
 3289 0076 80BD     		pop	{r7, pc}
 3290              	.L222:
 3291              		.align	2
 3292              	.L221:
 3293 0078 040F3F40 		.word	1077874436
 3294              		.cfi_endproc
 3295              	.LFE59:
 3296              		.size	CySysPrbSetBgBufferTrim, .-CySysPrbSetBgBufferTrim
 3297              		.section	.text.CySysPrbGetBgBufferTrim,"ax",%progbits
 3298              		.align	2
 3299              		.global	CySysPrbGetBgBufferTrim
 3300              		.code	16
 3301              		.thumb_func
 3302              		.type	CySysPrbGetBgBufferTrim, %function
 3303              	CySysPrbGetBgBufferTrim:
 3304              	.LFB60:
3343:Generated_Source\PSoC4/CyLib.c **** 
3344:Generated_Source\PSoC4/CyLib.c **** 
3345:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 118


3346:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbGetBgBufferTrim
3347:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3348:Generated_Source\PSoC4/CyLib.c ****     *
3349:Generated_Source\PSoC4/CyLib.c ****     * Returns the current trim of the bandgap reference buffer.
3350:Generated_Source\PSoC4/CyLib.c ****     *
3351:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3352:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3353:Generated_Source\PSoC4/CyLib.c ****     *
3354:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3355:Generated_Source\PSoC4/CyLib.c ****     int32 CySysPrbGetBgBufferTrim(void)
3356:Generated_Source\PSoC4/CyLib.c ****     {
 3305              		.loc 1 3356 0
 3306              		.cfi_startproc
 3307 0000 80B5     		push	{r7, lr}
 3308              		.cfi_def_cfa_offset 8
 3309              		.cfi_offset 7, -8
 3310              		.cfi_offset 14, -4
 3311 0002 82B0     		sub	sp, sp, #8
 3312              		.cfi_def_cfa_offset 16
 3313 0004 00AF     		add	r7, sp, #0
 3314              		.cfi_def_cfa_register 7
3357:Generated_Source\PSoC4/CyLib.c ****         uint8 tmp;
3358:Generated_Source\PSoC4/CyLib.c ****         int32 returnValue;
3359:Generated_Source\PSoC4/CyLib.c **** 
3360:Generated_Source\PSoC4/CyLib.c ****         tmp = (uint8) CY_GET_REG32_FIELD(CYREG_PASS_PRB_TRIM, CYFLD_PASS_VBGR_BUF_TRIM);
 3315              		.loc 1 3360 0
 3316 0006 0F4B     		ldr	r3, .L227
 3317 0008 1B68     		ldr	r3, [r3]
 3318 000a DAB2     		uxtb	r2, r3
 3319 000c FB1C     		add	r3, r7, #3
 3320 000e 3F21     		mov	r1, #63
 3321 0010 0A40     		and	r2, r1
 3322 0012 1A70     		strb	r2, [r3]
3361:Generated_Source\PSoC4/CyLib.c ****         if ((tmp & CY_SYS_VREF_BG_BUFFER_TRIM_SIGN_BIT) != 0u)
 3323              		.loc 1 3361 0
 3324 0014 FB1C     		add	r3, r7, #3
 3325 0016 1B78     		ldrb	r3, [r3]
 3326 0018 2022     		mov	r2, #32
 3327 001a 1340     		and	r3, r2
 3328 001c 09D0     		beq	.L224
3362:Generated_Source\PSoC4/CyLib.c ****         {
3363:Generated_Source\PSoC4/CyLib.c ****             tmp = ((uint8) ~tmp) + 1u;          /* Make positive */
 3329              		.loc 1 3363 0
 3330 001e FB1C     		add	r3, r7, #3
 3331 0020 FA1C     		add	r2, r7, #3
 3332 0022 1278     		ldrb	r2, [r2]
 3333 0024 5242     		neg	r2, r2
 3334 0026 1A70     		strb	r2, [r3]
3364:Generated_Source\PSoC4/CyLib.c ****             returnValue = (int32) tmp * (-1);   /* Make negative */
 3335              		.loc 1 3364 0
 3336 0028 FB1C     		add	r3, r7, #3
 3337 002a 1B78     		ldrb	r3, [r3]
 3338 002c 5B42     		neg	r3, r3
 3339 002e 7B60     		str	r3, [r7, #4]
 3340 0030 02E0     		b	.L225
 3341              	.L224:
3365:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 119


3366:Generated_Source\PSoC4/CyLib.c ****         else
3367:Generated_Source\PSoC4/CyLib.c ****         {
3368:Generated_Source\PSoC4/CyLib.c ****             returnValue = (int32) tmp;
 3342              		.loc 1 3368 0
 3343 0032 FB1C     		add	r3, r7, #3
 3344 0034 1B78     		ldrb	r3, [r3]
 3345 0036 7B60     		str	r3, [r7, #4]
 3346              	.L225:
3369:Generated_Source\PSoC4/CyLib.c ****         }
3370:Generated_Source\PSoC4/CyLib.c **** 
3371:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 3347              		.loc 1 3371 0
 3348 0038 7B68     		ldr	r3, [r7, #4]
3372:Generated_Source\PSoC4/CyLib.c ****     }
 3349              		.loc 1 3372 0
 3350 003a 181C     		mov	r0, r3
 3351 003c BD46     		mov	sp, r7
 3352 003e 02B0     		add	sp, sp, #8
 3353              		@ sp needed
 3354 0040 80BD     		pop	{r7, pc}
 3355              	.L228:
 3356 0042 C046     		.align	2
 3357              	.L227:
 3358 0044 040F3F40 		.word	1077874436
 3359              		.cfi_endproc
 3360              	.LFE60:
 3361              		.size	CySysPrbGetBgBufferTrim, .-CySysPrbGetBgBufferTrim
 3362              		.text
 3363              	.Letext0:
 3364              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 3365              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 3366              		.section	.debug_info,"",%progbits
 3367              	.Ldebug_info0:
 3368 0000 6A0B0000 		.4byte	0xb6a
 3369 0004 0400     		.2byte	0x4
 3370 0006 00000000 		.4byte	.Ldebug_abbrev0
 3371 000a 04       		.byte	0x4
 3372 000b 01       		.uleb128 0x1
 3373 000c 0A030000 		.4byte	.LASF124
 3374 0010 01       		.byte	0x1
 3375 0011 F7070000 		.4byte	.LASF125
 3376 0015 EF050000 		.4byte	.LASF126
 3377 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3378 001d 00000000 		.4byte	0
 3379 0021 00000000 		.4byte	.Ldebug_line0
 3380 0025 02       		.uleb128 0x2
 3381 0026 01       		.byte	0x1
 3382 0027 06       		.byte	0x6
 3383 0028 17010000 		.4byte	.LASF0
 3384 002c 02       		.uleb128 0x2
 3385 002d 01       		.byte	0x1
 3386 002e 08       		.byte	0x8
 3387 002f D7050000 		.4byte	.LASF1
 3388 0033 02       		.uleb128 0x2
 3389 0034 02       		.byte	0x2
 3390 0035 05       		.byte	0x5
 3391 0036 E5050000 		.4byte	.LASF2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 120


 3392 003a 02       		.uleb128 0x2
 3393 003b 02       		.byte	0x2
 3394 003c 07       		.byte	0x7
 3395 003d D8030000 		.4byte	.LASF3
 3396 0041 02       		.uleb128 0x2
 3397 0042 04       		.byte	0x4
 3398 0043 05       		.byte	0x5
 3399 0044 85010000 		.4byte	.LASF4
 3400 0048 02       		.uleb128 0x2
 3401 0049 04       		.byte	0x4
 3402 004a 07       		.byte	0x7
 3403 004b F1020000 		.4byte	.LASF5
 3404 004f 02       		.uleb128 0x2
 3405 0050 08       		.byte	0x8
 3406 0051 05       		.byte	0x5
 3407 0052 09010000 		.4byte	.LASF6
 3408 0056 02       		.uleb128 0x2
 3409 0057 08       		.byte	0x8
 3410 0058 07       		.byte	0x7
 3411 0059 8D000000 		.4byte	.LASF7
 3412 005d 03       		.uleb128 0x3
 3413 005e 04       		.byte	0x4
 3414 005f 05       		.byte	0x5
 3415 0060 696E7400 		.ascii	"int\000"
 3416 0064 02       		.uleb128 0x2
 3417 0065 04       		.byte	0x4
 3418 0066 07       		.byte	0x7
 3419 0067 BF020000 		.4byte	.LASF8
 3420 006b 04       		.uleb128 0x4
 3421 006c D0010000 		.4byte	.LASF9
 3422 0070 02       		.byte	0x2
 3423 0071 B901     		.2byte	0x1b9
 3424 0073 2C000000 		.4byte	0x2c
 3425 0077 04       		.uleb128 0x4
 3426 0078 0F000000 		.4byte	.LASF10
 3427 007c 02       		.byte	0x2
 3428 007d BA01     		.2byte	0x1ba
 3429 007f 3A000000 		.4byte	0x3a
 3430 0083 04       		.uleb128 0x4
 3431 0084 F9010000 		.4byte	.LASF11
 3432 0088 02       		.byte	0x2
 3433 0089 BB01     		.2byte	0x1bb
 3434 008b 48000000 		.4byte	0x48
 3435 008f 04       		.uleb128 0x4
 3436 0090 21040000 		.4byte	.LASF12
 3437 0094 02       		.byte	0x2
 3438 0095 BC01     		.2byte	0x1bc
 3439 0097 25000000 		.4byte	0x25
 3440 009b 04       		.uleb128 0x4
 3441 009c 43010000 		.4byte	.LASF13
 3442 00a0 02       		.byte	0x2
 3443 00a1 BE01     		.2byte	0x1be
 3444 00a3 41000000 		.4byte	0x41
 3445 00a7 02       		.uleb128 0x2
 3446 00a8 04       		.byte	0x4
 3447 00a9 04       		.byte	0x4
 3448 00aa 5E050000 		.4byte	.LASF14
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 121


 3449 00ae 02       		.uleb128 0x2
 3450 00af 08       		.byte	0x8
 3451 00b0 04       		.byte	0x4
 3452 00b1 EC010000 		.4byte	.LASF15
 3453 00b5 02       		.uleb128 0x2
 3454 00b6 01       		.byte	0x1
 3455 00b7 08       		.byte	0x8
 3456 00b8 7F060000 		.4byte	.LASF16
 3457 00bc 04       		.uleb128 0x4
 3458 00bd AE050000 		.4byte	.LASF17
 3459 00c1 02       		.byte	0x2
 3460 00c2 6302     		.2byte	0x263
 3461 00c4 C8000000 		.4byte	0xc8
 3462 00c8 05       		.uleb128 0x5
 3463 00c9 6B000000 		.4byte	0x6b
 3464 00cd 04       		.uleb128 0x4
 3465 00ce 96040000 		.4byte	.LASF18
 3466 00d2 02       		.byte	0x2
 3467 00d3 6502     		.2byte	0x265
 3468 00d5 D9000000 		.4byte	0xd9
 3469 00d9 05       		.uleb128 0x5
 3470 00da 83000000 		.4byte	0x83
 3471 00de 04       		.uleb128 0x4
 3472 00df 9C060000 		.4byte	.LASF19
 3473 00e3 02       		.byte	0x2
 3474 00e4 7502     		.2byte	0x275
 3475 00e6 EA000000 		.4byte	0xea
 3476 00ea 06       		.uleb128 0x6
 3477 00eb 04       		.byte	0x4
 3478 00ec F0000000 		.4byte	0xf0
 3479 00f0 07       		.uleb128 0x7
 3480 00f1 02       		.uleb128 0x2
 3481 00f2 04       		.byte	0x4
 3482 00f3 07       		.byte	0x7
 3483 00f4 BF040000 		.4byte	.LASF20
 3484 00f8 08       		.uleb128 0x8
 3485 00f9 64050000 		.4byte	.LASF21
 3486 00fd 03       		.byte	0x3
 3487 00fe F5       		.byte	0xf5
 3488 00ff EA000000 		.4byte	0xea
 3489 0103 09       		.uleb128 0x9
 3490 0104 B5070000 		.4byte	.LASF22
 3491 0108 01       		.byte	0x1
 3492 0109 6B       		.byte	0x6b
 3493 010a 00000000 		.4byte	.LFB1
 3494 010e 1C000000 		.4byte	.LFE1-.LFB1
 3495 0112 01       		.uleb128 0x1
 3496 0113 9C       		.byte	0x9c
 3497 0114 0A       		.uleb128 0xa
 3498 0115 9C030000 		.4byte	.LASF23
 3499 0119 01       		.byte	0x1
 3500 011a 8B       		.byte	0x8b
 3501 011b 00000000 		.4byte	.LFB2
 3502 011f 1C000000 		.4byte	.LFE2-.LFB2
 3503 0123 01       		.uleb128 0x1
 3504 0124 9C       		.byte	0x9c
 3505 0125 0B       		.uleb128 0xb
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 122


 3506 0126 2C020000 		.4byte	.LASF30
 3507 012a 01       		.byte	0x1
 3508 012b AF       		.byte	0xaf
 3509 012c 00000000 		.4byte	.LFB3
 3510 0130 10010000 		.4byte	.LFE3-.LFB3
 3511 0134 01       		.uleb128 0x1
 3512 0135 9C       		.byte	0x9c
 3513 0136 81010000 		.4byte	0x181
 3514 013a 0C       		.uleb128 0xc
 3515 013b 23010000 		.4byte	.LASF24
 3516 013f 01       		.byte	0x1
 3517 0140 B5       		.byte	0xb5
 3518 0141 83000000 		.4byte	0x83
 3519 0145 02       		.uleb128 0x2
 3520 0146 91       		.byte	0x91
 3521 0147 60       		.sleb128 -32
 3522 0148 0C       		.uleb128 0xc
 3523 0149 34010000 		.4byte	.LASF25
 3524 014d 01       		.byte	0x1
 3525 014e B6       		.byte	0xb6
 3526 014f 6B000000 		.4byte	0x6b
 3527 0153 02       		.uleb128 0x2
 3528 0154 91       		.byte	0x91
 3529 0155 67       		.sleb128 -25
 3530 0156 0C       		.uleb128 0xc
 3531 0157 EB030000 		.4byte	.LASF26
 3532 015b 01       		.byte	0x1
 3533 015c B7       		.byte	0xb7
 3534 015d 83000000 		.4byte	0x83
 3535 0161 02       		.uleb128 0x2
 3536 0162 91       		.byte	0x91
 3537 0163 6C       		.sleb128 -20
 3538 0164 0C       		.uleb128 0xc
 3539 0165 BC030000 		.4byte	.LASF27
 3540 0169 01       		.byte	0x1
 3541 016a B8       		.byte	0xb8
 3542 016b 83000000 		.4byte	0x83
 3543 016f 02       		.uleb128 0x2
 3544 0170 91       		.byte	0x91
 3545 0171 68       		.sleb128 -24
 3546 0172 0C       		.uleb128 0xc
 3547 0173 25070000 		.4byte	.LASF28
 3548 0177 01       		.byte	0x1
 3549 0178 B9       		.byte	0xb9
 3550 0179 D9000000 		.4byte	0xd9
 3551 017d 02       		.uleb128 0x2
 3552 017e 91       		.byte	0x91
 3553 017f 5C       		.sleb128 -36
 3554 0180 00       		.byte	0
 3555 0181 0D       		.uleb128 0xd
 3556 0182 7C040000 		.4byte	.LASF29
 3557 0186 01       		.byte	0x1
 3558 0187 1D01     		.2byte	0x11d
 3559 0189 00000000 		.4byte	.LFB4
 3560 018d 1C000000 		.4byte	.LFE4-.LFB4
 3561 0191 01       		.uleb128 0x1
 3562 0192 9C       		.byte	0x9c
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 123


 3563 0193 0E       		.uleb128 0xe
 3564 0194 67010000 		.4byte	.LASF83
 3565 0198 01       		.byte	0x1
 3566 0199 3001     		.2byte	0x130
 3567 019b 83000000 		.4byte	0x83
 3568 019f 00000000 		.4byte	.LFB5
 3569 01a3 20000000 		.4byte	.LFE5-.LFB5
 3570 01a7 01       		.uleb128 0x1
 3571 01a8 9C       		.byte	0x9c
 3572 01a9 0F       		.uleb128 0xf
 3573 01aa 1F000000 		.4byte	.LASF31
 3574 01ae 01       		.byte	0x1
 3575 01af AD01     		.2byte	0x1ad
 3576 01b1 00000000 		.4byte	.LFB6
 3577 01b5 48000000 		.4byte	.LFE6-.LFB6
 3578 01b9 01       		.uleb128 0x1
 3579 01ba 9C       		.byte	0x9c
 3580 01bb ED010000 		.4byte	0x1ed
 3581 01bf 10       		.uleb128 0x10
 3582 01c0 47060000 		.4byte	.LASF34
 3583 01c4 01       		.byte	0x1
 3584 01c5 AD01     		.2byte	0x1ad
 3585 01c7 83000000 		.4byte	0x83
 3586 01cb 02       		.uleb128 0x2
 3587 01cc 91       		.byte	0x91
 3588 01cd 64       		.sleb128 -28
 3589 01ce 11       		.uleb128 0x11
 3590 01cf 34010000 		.4byte	.LASF25
 3591 01d3 01       		.byte	0x1
 3592 01d4 AF01     		.2byte	0x1af
 3593 01d6 6B000000 		.4byte	0x6b
 3594 01da 02       		.uleb128 0x2
 3595 01db 91       		.byte	0x91
 3596 01dc 6F       		.sleb128 -17
 3597 01dd 11       		.uleb128 0x11
 3598 01de 23080000 		.4byte	.LASF32
 3599 01e2 01       		.byte	0x1
 3600 01e3 B001     		.2byte	0x1b0
 3601 01e5 83000000 		.4byte	0x83
 3602 01e9 02       		.uleb128 0x2
 3603 01ea 91       		.byte	0x91
 3604 01eb 68       		.sleb128 -24
 3605 01ec 00       		.byte	0
 3606 01ed 12       		.uleb128 0x12
 3607 01ee 63000000 		.4byte	.LASF33
 3608 01f2 01       		.byte	0x1
 3609 01f3 D901     		.2byte	0x1d9
 3610 01f5 00000000 		.4byte	.LFB7
 3611 01f9 4C000000 		.4byte	.LFE7-.LFB7
 3612 01fd 01       		.uleb128 0x1
 3613 01fe 9C       		.byte	0x9c
 3614 01ff 13020000 		.4byte	0x213
 3615 0203 10       		.uleb128 0x10
 3616 0204 E5010000 		.4byte	.LASF35
 3617 0208 01       		.byte	0x1
 3618 0209 D901     		.2byte	0x1d9
 3619 020b 83000000 		.4byte	0x83
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 124


 3620 020f 02       		.uleb128 0x2
 3621 0210 91       		.byte	0x91
 3622 0211 74       		.sleb128 -12
 3623 0212 00       		.byte	0
 3624 0213 13       		.uleb128 0x13
 3625 0214 14020000 		.4byte	.LASF43
 3626 0218 01       		.byte	0x1
 3627 0219 FE01     		.2byte	0x1fe
 3628 021b 83000000 		.4byte	0x83
 3629 021f 00000000 		.4byte	.LFB8
 3630 0223 34000000 		.4byte	.LFE8-.LFB8
 3631 0227 01       		.uleb128 0x1
 3632 0228 9C       		.byte	0x9c
 3633 0229 4C020000 		.4byte	0x24c
 3634 022d 11       		.uleb128 0x11
 3635 022e 34010000 		.4byte	.LASF25
 3636 0232 01       		.byte	0x1
 3637 0233 0002     		.2byte	0x200
 3638 0235 6B000000 		.4byte	0x6b
 3639 0239 02       		.uleb128 0x2
 3640 023a 91       		.byte	0x91
 3641 023b 6F       		.sleb128 -17
 3642 023c 11       		.uleb128 0x11
 3643 023d 12050000 		.4byte	.LASF36
 3644 0241 01       		.byte	0x1
 3645 0242 0102     		.2byte	0x201
 3646 0244 83000000 		.4byte	0x83
 3647 0248 02       		.uleb128 0x2
 3648 0249 91       		.byte	0x91
 3649 024a 68       		.sleb128 -24
 3650 024b 00       		.byte	0
 3651 024c 0F       		.uleb128 0xf
 3652 024d CF060000 		.4byte	.LASF37
 3653 0251 01       		.byte	0x1
 3654 0252 3502     		.2byte	0x235
 3655 0254 00000000 		.4byte	.LFB9
 3656 0258 40000000 		.4byte	.LFE9-.LFB9
 3657 025c 01       		.uleb128 0x1
 3658 025d 9C       		.byte	0x9c
 3659 025e 81020000 		.4byte	0x281
 3660 0262 10       		.uleb128 0x10
 3661 0263 AD070000 		.4byte	.LASF38
 3662 0267 01       		.byte	0x1
 3663 0268 3502     		.2byte	0x235
 3664 026a 83000000 		.4byte	0x83
 3665 026e 02       		.uleb128 0x2
 3666 026f 91       		.byte	0x91
 3667 0270 64       		.sleb128 -28
 3668 0271 11       		.uleb128 0x11
 3669 0272 34010000 		.4byte	.LASF25
 3670 0276 01       		.byte	0x1
 3671 0277 3702     		.2byte	0x237
 3672 0279 6B000000 		.4byte	0x6b
 3673 027d 02       		.uleb128 0x2
 3674 027e 91       		.byte	0x91
 3675 027f 6F       		.sleb128 -17
 3676 0280 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 125


 3677 0281 0F       		.uleb128 0xf
 3678 0282 36040000 		.4byte	.LASF39
 3679 0286 01       		.byte	0x1
 3680 0287 3C03     		.2byte	0x33c
 3681 0289 00000000 		.4byte	.LFB10
 3682 028d 28010000 		.4byte	.LFE10-.LFB10
 3683 0291 01       		.uleb128 0x1
 3684 0292 9C       		.byte	0x9c
 3685 0293 D4020000 		.4byte	0x2d4
 3686 0297 10       		.uleb128 0x10
 3687 0298 23010000 		.4byte	.LASF24
 3688 029c 01       		.byte	0x1
 3689 029d 3C03     		.2byte	0x33c
 3690 029f 83000000 		.4byte	0x83
 3691 02a3 02       		.uleb128 0x2
 3692 02a4 91       		.byte	0x91
 3693 02a5 64       		.sleb128 -28
 3694 02a6 11       		.uleb128 0x11
 3695 02a7 34010000 		.4byte	.LASF25
 3696 02ab 01       		.byte	0x1
 3697 02ac 3E03     		.2byte	0x33e
 3698 02ae 6B000000 		.4byte	0x6b
 3699 02b2 02       		.uleb128 0x2
 3700 02b3 91       		.byte	0x91
 3701 02b4 6B       		.sleb128 -21
 3702 02b5 11       		.uleb128 0x11
 3703 02b6 0E070000 		.4byte	.LASF40
 3704 02ba 01       		.byte	0x1
 3705 02bb 3F03     		.2byte	0x33f
 3706 02bd 6B000000 		.4byte	0x6b
 3707 02c1 02       		.uleb128 0x2
 3708 02c2 91       		.byte	0x91
 3709 02c3 6A       		.sleb128 -22
 3710 02c4 11       		.uleb128 0x11
 3711 02c5 7D010000 		.4byte	.LASF41
 3712 02c9 01       		.byte	0x1
 3713 02ca 4203     		.2byte	0x342
 3714 02cc 83000000 		.4byte	0x83
 3715 02d0 02       		.uleb128 0x2
 3716 02d1 91       		.byte	0x91
 3717 02d2 6C       		.sleb128 -20
 3718 02d3 00       		.byte	0
 3719 02d4 0F       		.uleb128 0xf
 3720 02d5 B9060000 		.4byte	.LASF42
 3721 02d9 01       		.byte	0x1
 3722 02da D503     		.2byte	0x3d5
 3723 02dc 00000000 		.4byte	.LFB11
 3724 02e0 44000000 		.4byte	.LFE11-.LFB11
 3725 02e4 01       		.uleb128 0x1
 3726 02e5 9C       		.byte	0x9c
 3727 02e6 09030000 		.4byte	0x309
 3728 02ea 10       		.uleb128 0x10
 3729 02eb AD070000 		.4byte	.LASF38
 3730 02ef 01       		.byte	0x1
 3731 02f0 D503     		.2byte	0x3d5
 3732 02f2 83000000 		.4byte	0x83
 3733 02f6 02       		.uleb128 0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 126


 3734 02f7 91       		.byte	0x91
 3735 02f8 64       		.sleb128 -28
 3736 02f9 11       		.uleb128 0x11
 3737 02fa 34010000 		.4byte	.LASF25
 3738 02fe 01       		.byte	0x1
 3739 02ff D703     		.2byte	0x3d7
 3740 0301 6B000000 		.4byte	0x6b
 3741 0305 02       		.uleb128 0x2
 3742 0306 91       		.byte	0x91
 3743 0307 6F       		.sleb128 -17
 3744 0308 00       		.byte	0
 3745 0309 14       		.uleb128 0x14
 3746 030a C4030000 		.4byte	.LASF44
 3747 030e 01       		.byte	0x1
 3748 030f A008     		.2byte	0x8a0
 3749 0311 83000000 		.4byte	0x83
 3750 0315 00000000 		.4byte	.LFB12
 3751 0319 30000000 		.4byte	.LFE12-.LFB12
 3752 031d 01       		.uleb128 0x1
 3753 031e 9C       		.byte	0x9c
 3754 031f 42030000 		.4byte	0x342
 3755 0323 10       		.uleb128 0x10
 3756 0324 5B060000 		.4byte	.LASF45
 3757 0328 01       		.byte	0x1
 3758 0329 A008     		.2byte	0x8a0
 3759 032b 83000000 		.4byte	0x83
 3760 032f 02       		.uleb128 0x2
 3761 0330 91       		.byte	0x91
 3762 0331 6C       		.sleb128 -20
 3763 0332 11       		.uleb128 0x11
 3764 0333 AB040000 		.4byte	.LASF46
 3765 0337 01       		.byte	0x1
 3766 0338 A208     		.2byte	0x8a2
 3767 033a 83000000 		.4byte	0x83
 3768 033e 02       		.uleb128 0x2
 3769 033f 91       		.byte	0x91
 3770 0340 74       		.sleb128 -12
 3771 0341 00       		.byte	0
 3772 0342 14       		.uleb128 0x14
 3773 0343 7F000000 		.4byte	.LASF47
 3774 0347 01       		.byte	0x1
 3775 0348 B708     		.2byte	0x8b7
 3776 034a 83000000 		.4byte	0x83
 3777 034e 00000000 		.4byte	.LFB13
 3778 0352 24000000 		.4byte	.LFE13-.LFB13
 3779 0356 01       		.uleb128 0x1
 3780 0357 9C       		.byte	0x9c
 3781 0358 6C030000 		.4byte	0x36c
 3782 035c 11       		.uleb128 0x11
 3783 035d 16000000 		.4byte	.LASF48
 3784 0361 01       		.byte	0x1
 3785 0362 B908     		.2byte	0x8b9
 3786 0364 83000000 		.4byte	0x83
 3787 0368 02       		.uleb128 0x2
 3788 0369 91       		.byte	0x91
 3789 036a 74       		.sleb128 -12
 3790 036b 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 127


 3791 036c 12       		.uleb128 0x12
 3792 036d B5000000 		.4byte	.LASF49
 3793 0371 01       		.byte	0x1
 3794 0372 CE08     		.2byte	0x8ce
 3795 0374 00000000 		.4byte	.LFB14
 3796 0378 18000000 		.4byte	.LFE14-.LFB14
 3797 037c 01       		.uleb128 0x1
 3798 037d 9C       		.byte	0x9c
 3799 037e 92030000 		.4byte	0x392
 3800 0382 10       		.uleb128 0x10
 3801 0383 0F020000 		.4byte	.LASF50
 3802 0387 01       		.byte	0x1
 3803 0388 CE08     		.2byte	0x8ce
 3804 038a 83000000 		.4byte	0x83
 3805 038e 02       		.uleb128 0x2
 3806 038f 91       		.byte	0x91
 3807 0390 74       		.sleb128 -12
 3808 0391 00       		.byte	0
 3809 0392 13       		.uleb128 0x13
 3810 0393 6A040000 		.4byte	.LASF51
 3811 0397 01       		.byte	0x1
 3812 0398 E708     		.2byte	0x8e7
 3813 039a DE000000 		.4byte	0xde
 3814 039e 00000000 		.4byte	.LFB15
 3815 03a2 48000000 		.4byte	.LFE15-.LFB15
 3816 03a6 01       		.uleb128 0x1
 3817 03a7 9C       		.byte	0x9c
 3818 03a8 E9030000 		.4byte	0x3e9
 3819 03ac 10       		.uleb128 0x10
 3820 03ad 26040000 		.4byte	.LASF52
 3821 03b1 01       		.byte	0x1
 3822 03b2 E708     		.2byte	0x8e7
 3823 03b4 6B000000 		.4byte	0x6b
 3824 03b8 02       		.uleb128 0x2
 3825 03b9 91       		.byte	0x91
 3826 03ba 6F       		.sleb128 -17
 3827 03bb 10       		.uleb128 0x10
 3828 03bc FE040000 		.4byte	.LASF53
 3829 03c0 01       		.byte	0x1
 3830 03c1 E708     		.2byte	0x8e7
 3831 03c3 DE000000 		.4byte	0xde
 3832 03c7 02       		.uleb128 0x2
 3833 03c8 91       		.byte	0x91
 3834 03c9 68       		.sleb128 -24
 3835 03ca 11       		.uleb128 0x11
 3836 03cb 6B070000 		.4byte	.LASF54
 3837 03cf 01       		.byte	0x1
 3838 03d0 E908     		.2byte	0x8e9
 3839 03d2 DE000000 		.4byte	0xde
 3840 03d6 02       		.uleb128 0x2
 3841 03d7 91       		.byte	0x91
 3842 03d8 70       		.sleb128 -16
 3843 03d9 11       		.uleb128 0x11
 3844 03da 00000000 		.4byte	.LASF55
 3845 03de 01       		.byte	0x1
 3846 03df EA08     		.2byte	0x8ea
 3847 03e1 E9030000 		.4byte	0x3e9
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 128


 3848 03e5 02       		.uleb128 0x2
 3849 03e6 91       		.byte	0x91
 3850 03e7 74       		.sleb128 -12
 3851 03e8 00       		.byte	0
 3852 03e9 06       		.uleb128 0x6
 3853 03ea 04       		.byte	0x4
 3854 03eb DE000000 		.4byte	0xde
 3855 03ef 13       		.uleb128 0x13
 3856 03f0 35060000 		.4byte	.LASF56
 3857 03f4 01       		.byte	0x1
 3858 03f5 0909     		.2byte	0x909
 3859 03f7 DE000000 		.4byte	0xde
 3860 03fb 00000000 		.4byte	.LFB16
 3861 03ff 34000000 		.4byte	.LFE16-.LFB16
 3862 0403 01       		.uleb128 0x1
 3863 0404 9C       		.byte	0x9c
 3864 0405 28040000 		.4byte	0x428
 3865 0409 10       		.uleb128 0x10
 3866 040a 26040000 		.4byte	.LASF52
 3867 040e 01       		.byte	0x1
 3868 040f 0909     		.2byte	0x909
 3869 0411 6B000000 		.4byte	0x6b
 3870 0415 02       		.uleb128 0x2
 3871 0416 91       		.byte	0x91
 3872 0417 6F       		.sleb128 -17
 3873 0418 11       		.uleb128 0x11
 3874 0419 00000000 		.4byte	.LASF55
 3875 041d 01       		.byte	0x1
 3876 041e 0B09     		.2byte	0x90b
 3877 0420 E9030000 		.4byte	0x3e9
 3878 0424 02       		.uleb128 0x2
 3879 0425 91       		.byte	0x91
 3880 0426 74       		.sleb128 -12
 3881 0427 00       		.byte	0
 3882 0428 13       		.uleb128 0x13
 3883 0429 00020000 		.4byte	.LASF57
 3884 042d 01       		.byte	0x1
 3885 042e 1F09     		.2byte	0x91f
 3886 0430 DE000000 		.4byte	0xde
 3887 0434 00000000 		.4byte	.LFB17
 3888 0438 4C000000 		.4byte	.LFE17-.LFB17
 3889 043c 01       		.uleb128 0x1
 3890 043d 9C       		.byte	0x9c
 3891 043e 7F040000 		.4byte	0x47f
 3892 0442 10       		.uleb128 0x10
 3893 0443 26040000 		.4byte	.LASF52
 3894 0447 01       		.byte	0x1
 3895 0448 1F09     		.2byte	0x91f
 3896 044a 6B000000 		.4byte	0x6b
 3897 044e 02       		.uleb128 0x2
 3898 044f 91       		.byte	0x91
 3899 0450 6F       		.sleb128 -17
 3900 0451 10       		.uleb128 0x10
 3901 0452 FE040000 		.4byte	.LASF53
 3902 0456 01       		.byte	0x1
 3903 0457 1F09     		.2byte	0x91f
 3904 0459 DE000000 		.4byte	0xde
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 129


 3905 045d 02       		.uleb128 0x2
 3906 045e 91       		.byte	0x91
 3907 045f 68       		.sleb128 -24
 3908 0460 11       		.uleb128 0x11
 3909 0461 6B070000 		.4byte	.LASF54
 3910 0465 01       		.byte	0x1
 3911 0466 2109     		.2byte	0x921
 3912 0468 DE000000 		.4byte	0xde
 3913 046c 02       		.uleb128 0x2
 3914 046d 91       		.byte	0x91
 3915 046e 70       		.sleb128 -16
 3916 046f 11       		.uleb128 0x11
 3917 0470 00000000 		.4byte	.LASF55
 3918 0474 01       		.byte	0x1
 3919 0475 2209     		.2byte	0x922
 3920 0477 E9030000 		.4byte	0x3e9
 3921 047b 02       		.uleb128 0x2
 3922 047c 91       		.byte	0x91
 3923 047d 74       		.sleb128 -12
 3924 047e 00       		.byte	0
 3925 047f 13       		.uleb128 0x13
 3926 0480 76050000 		.4byte	.LASF58
 3927 0484 01       		.byte	0x1
 3928 0485 3B09     		.2byte	0x93b
 3929 0487 DE000000 		.4byte	0xde
 3930 048b 00000000 		.4byte	.LFB18
 3931 048f 36000000 		.4byte	.LFE18-.LFB18
 3932 0493 01       		.uleb128 0x1
 3933 0494 9C       		.byte	0x9c
 3934 0495 B8040000 		.4byte	0x4b8
 3935 0499 10       		.uleb128 0x10
 3936 049a 26040000 		.4byte	.LASF52
 3937 049e 01       		.byte	0x1
 3938 049f 3B09     		.2byte	0x93b
 3939 04a1 6B000000 		.4byte	0x6b
 3940 04a5 02       		.uleb128 0x2
 3941 04a6 91       		.byte	0x91
 3942 04a7 6F       		.sleb128 -17
 3943 04a8 11       		.uleb128 0x11
 3944 04a9 00000000 		.4byte	.LASF55
 3945 04ad 01       		.byte	0x1
 3946 04ae 3D09     		.2byte	0x93d
 3947 04b0 E9030000 		.4byte	0x3e9
 3948 04b4 02       		.uleb128 0x2
 3949 04b5 91       		.byte	0x91
 3950 04b6 74       		.sleb128 -12
 3951 04b7 00       		.byte	0
 3952 04b8 0F       		.uleb128 0xf
 3953 04b9 48050000 		.4byte	.LASF59
 3954 04bd 01       		.byte	0x1
 3955 04be 4E09     		.2byte	0x94e
 3956 04c0 00000000 		.4byte	.LFB19
 3957 04c4 A8000000 		.4byte	.LFE19-.LFB19
 3958 04c8 01       		.uleb128 0x1
 3959 04c9 9C       		.byte	0x9c
 3960 04ca 1A050000 		.4byte	0x51a
 3961 04ce 10       		.uleb128 0x10
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 130


 3962 04cf 26040000 		.4byte	.LASF52
 3963 04d3 01       		.byte	0x1
 3964 04d4 4E09     		.2byte	0x94e
 3965 04d6 6B000000 		.4byte	0x6b
 3966 04da 02       		.uleb128 0x2
 3967 04db 91       		.byte	0x91
 3968 04dc 5F       		.sleb128 -33
 3969 04dd 10       		.uleb128 0x10
 3970 04de 2D040000 		.4byte	.LASF60
 3971 04e2 01       		.byte	0x1
 3972 04e3 4E09     		.2byte	0x94e
 3973 04e5 6B000000 		.4byte	0x6b
 3974 04e9 02       		.uleb128 0x2
 3975 04ea 91       		.byte	0x91
 3976 04eb 5E       		.sleb128 -34
 3977 04ec 11       		.uleb128 0x11
 3978 04ed 34010000 		.4byte	.LASF25
 3979 04f1 01       		.byte	0x1
 3980 04f2 5009     		.2byte	0x950
 3981 04f4 6B000000 		.4byte	0x6b
 3982 04f8 02       		.uleb128 0x2
 3983 04f9 91       		.byte	0x91
 3984 04fa 6B       		.sleb128 -21
 3985 04fb 11       		.uleb128 0x11
 3986 04fc F3010000 		.4byte	.LASF61
 3987 0500 01       		.byte	0x1
 3988 0501 5109     		.2byte	0x951
 3989 0503 83000000 		.4byte	0x83
 3990 0507 02       		.uleb128 0x2
 3991 0508 91       		.byte	0x91
 3992 0509 6C       		.sleb128 -20
 3993 050a 11       		.uleb128 0x11
 3994 050b 89020000 		.4byte	.LASF62
 3995 050f 01       		.byte	0x1
 3996 0510 5209     		.2byte	0x952
 3997 0512 83000000 		.4byte	0x83
 3998 0516 02       		.uleb128 0x2
 3999 0517 91       		.byte	0x91
 4000 0518 64       		.sleb128 -28
 4001 0519 00       		.byte	0
 4002 051a 13       		.uleb128 0x13
 4003 051b 45020000 		.4byte	.LASF63
 4004 051f 01       		.byte	0x1
 4005 0520 7009     		.2byte	0x970
 4006 0522 6B000000 		.4byte	0x6b
 4007 0526 00000000 		.4byte	.LFB20
 4008 052a 5C000000 		.4byte	.LFE20-.LFB20
 4009 052e 01       		.uleb128 0x1
 4010 052f 9C       		.byte	0x9c
 4011 0530 53050000 		.4byte	0x553
 4012 0534 10       		.uleb128 0x10
 4013 0535 26040000 		.4byte	.LASF52
 4014 0539 01       		.byte	0x1
 4015 053a 7009     		.2byte	0x970
 4016 053c 6B000000 		.4byte	0x6b
 4017 0540 02       		.uleb128 0x2
 4018 0541 91       		.byte	0x91
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 131


 4019 0542 6F       		.sleb128 -17
 4020 0543 11       		.uleb128 0x11
 4021 0544 2D040000 		.4byte	.LASF60
 4022 0548 01       		.byte	0x1
 4023 0549 7209     		.2byte	0x972
 4024 054b 6B000000 		.4byte	0x6b
 4025 054f 02       		.uleb128 0x2
 4026 0550 91       		.byte	0x91
 4027 0551 77       		.sleb128 -9
 4028 0552 00       		.byte	0
 4029 0553 12       		.uleb128 0x12
 4030 0554 06050000 		.4byte	.LASF64
 4031 0558 01       		.byte	0x1
 4032 0559 8509     		.2byte	0x985
 4033 055b 00000000 		.4byte	.LFB21
 4034 055f 28000000 		.4byte	.LFE21-.LFB21
 4035 0563 01       		.uleb128 0x1
 4036 0564 9C       		.byte	0x9c
 4037 0565 79050000 		.4byte	0x579
 4038 0569 10       		.uleb128 0x10
 4039 056a 26040000 		.4byte	.LASF52
 4040 056e 01       		.byte	0x1
 4041 056f 8509     		.2byte	0x985
 4042 0571 6B000000 		.4byte	0x6b
 4043 0575 02       		.uleb128 0x2
 4044 0576 91       		.byte	0x91
 4045 0577 77       		.sleb128 -9
 4046 0578 00       		.byte	0
 4047 0579 14       		.uleb128 0x14
 4048 057a FB000000 		.4byte	.LASF65
 4049 057e 01       		.byte	0x1
 4050 057f 9709     		.2byte	0x997
 4051 0581 6B000000 		.4byte	0x6b
 4052 0585 00000000 		.4byte	.LFB22
 4053 0589 30000000 		.4byte	.LFE22-.LFB22
 4054 058d 01       		.uleb128 0x1
 4055 058e 9C       		.byte	0x9c
 4056 058f A3050000 		.4byte	0x5a3
 4057 0593 10       		.uleb128 0x10
 4058 0594 26040000 		.4byte	.LASF52
 4059 0598 01       		.byte	0x1
 4060 0599 9709     		.2byte	0x997
 4061 059b 6B000000 		.4byte	0x6b
 4062 059f 02       		.uleb128 0x2
 4063 05a0 91       		.byte	0x91
 4064 05a1 77       		.sleb128 -9
 4065 05a2 00       		.byte	0
 4066 05a3 12       		.uleb128 0x12
 4067 05a4 8E010000 		.4byte	.LASF66
 4068 05a8 01       		.byte	0x1
 4069 05a9 A709     		.2byte	0x9a7
 4070 05ab 00000000 		.4byte	.LFB23
 4071 05af 28000000 		.4byte	.LFE23-.LFB23
 4072 05b3 01       		.uleb128 0x1
 4073 05b4 9C       		.byte	0x9c
 4074 05b5 C9050000 		.4byte	0x5c9
 4075 05b9 10       		.uleb128 0x10
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 132


 4076 05ba 26040000 		.4byte	.LASF52
 4077 05be 01       		.byte	0x1
 4078 05bf A709     		.2byte	0x9a7
 4079 05c1 6B000000 		.4byte	0x6b
 4080 05c5 02       		.uleb128 0x2
 4081 05c6 91       		.byte	0x91
 4082 05c7 77       		.sleb128 -9
 4083 05c8 00       		.byte	0
 4084 05c9 12       		.uleb128 0x12
 4085 05ca AC030000 		.4byte	.LASF67
 4086 05ce 01       		.byte	0x1
 4087 05cf B509     		.2byte	0x9b5
 4088 05d1 00000000 		.4byte	.LFB24
 4089 05d5 28000000 		.4byte	.LFE24-.LFB24
 4090 05d9 01       		.uleb128 0x1
 4091 05da 9C       		.byte	0x9c
 4092 05db EF050000 		.4byte	0x5ef
 4093 05df 10       		.uleb128 0x10
 4094 05e0 26040000 		.4byte	.LASF52
 4095 05e4 01       		.byte	0x1
 4096 05e5 B509     		.2byte	0x9b5
 4097 05e7 6B000000 		.4byte	0x6b
 4098 05eb 02       		.uleb128 0x2
 4099 05ec 91       		.byte	0x91
 4100 05ed 77       		.sleb128 -9
 4101 05ee 00       		.byte	0
 4102 05ef 12       		.uleb128 0x12
 4103 05f0 EC040000 		.4byte	.LASF68
 4104 05f4 01       		.byte	0x1
 4105 05f5 C409     		.2byte	0x9c4
 4106 05f7 00000000 		.4byte	.LFB25
 4107 05fb 28000000 		.4byte	.LFE25-.LFB25
 4108 05ff 01       		.uleb128 0x1
 4109 0600 9C       		.byte	0x9c
 4110 0601 15060000 		.4byte	0x615
 4111 0605 10       		.uleb128 0x10
 4112 0606 26040000 		.4byte	.LASF52
 4113 060a 01       		.byte	0x1
 4114 060b C409     		.2byte	0x9c4
 4115 060d 6B000000 		.4byte	0x6b
 4116 0611 02       		.uleb128 0x2
 4117 0612 91       		.byte	0x91
 4118 0613 77       		.sleb128 -9
 4119 0614 00       		.byte	0
 4120 0615 12       		.uleb128 0x12
 4121 0616 B3050000 		.4byte	.LASF69
 4122 061a 01       		.byte	0x1
 4123 061b D309     		.2byte	0x9d3
 4124 061d 00000000 		.4byte	.LFB26
 4125 0621 14000000 		.4byte	.LFE26-.LFB26
 4126 0625 01       		.uleb128 0x1
 4127 0626 9C       		.byte	0x9c
 4128 0627 3B060000 		.4byte	0x63b
 4129 062b 10       		.uleb128 0x10
 4130 062c 5B060000 		.4byte	.LASF45
 4131 0630 01       		.byte	0x1
 4132 0631 D309     		.2byte	0x9d3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 133


 4133 0633 6B000000 		.4byte	0x6b
 4134 0637 02       		.uleb128 0x2
 4135 0638 91       		.byte	0x91
 4136 0639 77       		.sleb128 -9
 4137 063a 00       		.byte	0
 4138 063b 0D       		.uleb128 0xd
 4139 063c D2000000 		.4byte	.LASF70
 4140 0640 01       		.byte	0x1
 4141 0641 EB09     		.2byte	0x9eb
 4142 0643 00000000 		.4byte	.LFB27
 4143 0647 20000000 		.4byte	.LFE27-.LFB27
 4144 064b 01       		.uleb128 0x1
 4145 064c 9C       		.byte	0x9c
 4146 064d 0F       		.uleb128 0xf
 4147 064e 31070000 		.4byte	.LASF71
 4148 0652 01       		.byte	0x1
 4149 0653 FF09     		.2byte	0x9ff
 4150 0655 00000000 		.4byte	.LFB28
 4151 0659 48000000 		.4byte	.LFE28-.LFB28
 4152 065d 01       		.uleb128 0x1
 4153 065e 9C       		.byte	0x9c
 4154 065f 73060000 		.4byte	0x673
 4155 0663 10       		.uleb128 0x10
 4156 0664 85050000 		.4byte	.LASF72
 4157 0668 01       		.byte	0x1
 4158 0669 FF09     		.2byte	0x9ff
 4159 066b 83000000 		.4byte	0x83
 4160 066f 02       		.uleb128 0x2
 4161 0670 91       		.byte	0x91
 4162 0671 74       		.sleb128 -12
 4163 0672 00       		.byte	0
 4164 0673 0F       		.uleb128 0xf
 4165 0674 51060000 		.4byte	.LASF73
 4166 0678 01       		.byte	0x1
 4167 0679 160A     		.2byte	0xa16
 4168 067b 00000000 		.4byte	.LFB29
 4169 067f 28000000 		.4byte	.LFE29-.LFB29
 4170 0683 01       		.uleb128 0x1
 4171 0684 9C       		.byte	0x9c
 4172 0685 99060000 		.4byte	0x699
 4173 0689 10       		.uleb128 0x10
 4174 068a 16080000 		.4byte	.LASF74
 4175 068e 01       		.byte	0x1
 4176 068f 160A     		.2byte	0xa16
 4177 0691 77000000 		.4byte	0x77
 4178 0695 02       		.uleb128 0x2
 4179 0696 91       		.byte	0x91
 4180 0697 76       		.sleb128 -10
 4181 0698 00       		.byte	0
 4182 0699 0F       		.uleb128 0xf
 4183 069a 28010000 		.4byte	.LASF75
 4184 069e 01       		.byte	0x1
 4185 069f 240A     		.2byte	0xa24
 4186 06a1 00000000 		.4byte	.LFB30
 4187 06a5 84000000 		.4byte	.LFE30-.LFB30
 4188 06a9 01       		.uleb128 0x1
 4189 06aa 9C       		.byte	0x9c
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 134


 4190 06ab BF060000 		.4byte	0x6bf
 4191 06af 10       		.uleb128 0x10
 4192 06b0 23010000 		.4byte	.LASF24
 4193 06b4 01       		.byte	0x1
 4194 06b5 240A     		.2byte	0xa24
 4195 06b7 83000000 		.4byte	0x83
 4196 06bb 02       		.uleb128 0x2
 4197 06bc 91       		.byte	0x91
 4198 06bd 74       		.sleb128 -12
 4199 06be 00       		.byte	0
 4200 06bf 15       		.uleb128 0x15
 4201 06c0 9C040000 		.4byte	.LASF76
 4202 06c4 01       		.byte	0x1
 4203 06c5 440A     		.2byte	0xa44
 4204 06c7 00000000 		.4byte	.LFB31
 4205 06cb 24000000 		.4byte	.LFE31-.LFB31
 4206 06cf 01       		.uleb128 0x1
 4207 06d0 9C       		.byte	0x9c
 4208 06d1 0F       		.uleb128 0xf
 4209 06d2 7B020000 		.4byte	.LASF77
 4210 06d6 01       		.byte	0x1
 4211 06d7 610A     		.2byte	0xa61
 4212 06d9 00000000 		.4byte	.LFB32
 4213 06dd 64000000 		.4byte	.LFE32-.LFB32
 4214 06e1 01       		.uleb128 0x1
 4215 06e2 9C       		.byte	0x9c
 4216 06e3 F5060000 		.4byte	0x6f5
 4217 06e7 16       		.uleb128 0x16
 4218 06e8 6900     		.ascii	"i\000"
 4219 06ea 01       		.byte	0x1
 4220 06eb 630A     		.2byte	0xa63
 4221 06ed 83000000 		.4byte	0x83
 4222 06f1 02       		.uleb128 0x2
 4223 06f2 91       		.byte	0x91
 4224 06f3 74       		.sleb128 -12
 4225 06f4 00       		.byte	0
 4226 06f5 15       		.uleb128 0x15
 4227 06f6 A9060000 		.4byte	.LASF78
 4228 06fa 01       		.byte	0x1
 4229 06fb 800A     		.2byte	0xa80
 4230 06fd 00000000 		.4byte	.LFB33
 4231 0701 1C000000 		.4byte	.LFE33-.LFB33
 4232 0705 01       		.uleb128 0x1
 4233 0706 9C       		.byte	0x9c
 4234 0707 0D       		.uleb128 0xd
 4235 0708 9F070000 		.4byte	.LASF79
 4236 070c 01       		.byte	0x1
 4237 070d 910A     		.2byte	0xa91
 4238 070f 00000000 		.4byte	.LFB34
 4239 0713 18000000 		.4byte	.LFE34-.LFB34
 4240 0717 01       		.uleb128 0x1
 4241 0718 9C       		.byte	0x9c
 4242 0719 0D       		.uleb128 0xd
 4243 071a E2000000 		.4byte	.LASF80
 4244 071e 01       		.byte	0x1
 4245 071f A10A     		.2byte	0xaa1
 4246 0721 00000000 		.4byte	.LFB35
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 135


 4247 0725 18000000 		.4byte	.LFE35-.LFB35
 4248 0729 01       		.uleb128 0x1
 4249 072a 9C       		.byte	0x9c
 4250 072b 0D       		.uleb128 0xd
 4251 072c 51070000 		.4byte	.LASF81
 4252 0730 01       		.byte	0x1
 4253 0731 B10A     		.2byte	0xab1
 4254 0733 00000000 		.4byte	.LFB36
 4255 0737 18000000 		.4byte	.LFE36-.LFB36
 4256 073b 01       		.uleb128 0x1
 4257 073c 9C       		.byte	0x9c
 4258 073d 12       		.uleb128 0x12
 4259 073e 2A080000 		.4byte	.LASF82
 4260 0742 01       		.byte	0x1
 4261 0743 C20A     		.2byte	0xac2
 4262 0745 00000000 		.4byte	.LFB37
 4263 0749 1C000000 		.4byte	.LFE37-.LFB37
 4264 074d 01       		.uleb128 0x1
 4265 074e 9C       		.byte	0x9c
 4266 074f 63070000 		.4byte	0x763
 4267 0753 10       		.uleb128 0x10
 4268 0754 89020000 		.4byte	.LASF62
 4269 0758 01       		.byte	0x1
 4270 0759 C20A     		.2byte	0xac2
 4271 075b 83000000 		.4byte	0x83
 4272 075f 02       		.uleb128 0x2
 4273 0760 91       		.byte	0x91
 4274 0761 74       		.sleb128 -12
 4275 0762 00       		.byte	0
 4276 0763 0E       		.uleb128 0xe
 4277 0764 49010000 		.4byte	.LASF84
 4278 0768 01       		.byte	0x1
 4279 0769 D20A     		.2byte	0xad2
 4280 076b 83000000 		.4byte	0x83
 4281 076f 00000000 		.4byte	.LFB38
 4282 0773 18000000 		.4byte	.LFE38-.LFB38
 4283 0777 01       		.uleb128 0x1
 4284 0778 9C       		.byte	0x9c
 4285 0779 0E       		.uleb128 0xe
 4286 077a 28050000 		.4byte	.LASF85
 4287 077e 01       		.byte	0x1
 4288 077f E20A     		.2byte	0xae2
 4289 0781 83000000 		.4byte	0x83
 4290 0785 00000000 		.4byte	.LFB39
 4291 0789 18000000 		.4byte	.LFE39-.LFB39
 4292 078d 01       		.uleb128 0x1
 4293 078e 9C       		.byte	0x9c
 4294 078f 12       		.uleb128 0x12
 4295 0790 09040000 		.4byte	.LASF86
 4296 0794 01       		.byte	0x1
 4297 0795 020B     		.2byte	0xb02
 4298 0797 00000000 		.4byte	.LFB40
 4299 079b 34000000 		.4byte	.LFE40-.LFB40
 4300 079f 01       		.uleb128 0x1
 4301 07a0 9C       		.byte	0x9c
 4302 07a1 B5070000 		.4byte	0x7b5
 4303 07a5 10       		.uleb128 0x10
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 136


 4304 07a6 8F020000 		.4byte	.LASF87
 4305 07aa 01       		.byte	0x1
 4306 07ab 020B     		.2byte	0xb02
 4307 07ad 83000000 		.4byte	0x83
 4308 07b1 02       		.uleb128 0x2
 4309 07b2 91       		.byte	0x91
 4310 07b3 74       		.sleb128 -12
 4311 07b4 00       		.byte	0
 4312 07b5 0E       		.uleb128 0xe
 4313 07b6 39070000 		.4byte	.LASF88
 4314 07ba 01       		.byte	0x1
 4315 07bb 1B0B     		.2byte	0xb1b
 4316 07bd 83000000 		.4byte	0x83
 4317 07c1 00000000 		.4byte	.LFB41
 4318 07c5 18000000 		.4byte	.LFE41-.LFB41
 4319 07c9 01       		.uleb128 0x1
 4320 07ca 9C       		.byte	0x9c
 4321 07cb 0E       		.uleb128 0xe
 4322 07cc A9020000 		.4byte	.LASF89
 4323 07d0 01       		.byte	0x1
 4324 07d1 320B     		.2byte	0xb32
 4325 07d3 83000000 		.4byte	0x83
 4326 07d7 00000000 		.4byte	.LFB42
 4327 07db 18000000 		.4byte	.LFE42-.LFB42
 4328 07df 01       		.uleb128 0x1
 4329 07e0 9C       		.byte	0x9c
 4330 07e1 0D       		.uleb128 0xd
 4331 07e2 E2020000 		.4byte	.LASF90
 4332 07e6 01       		.byte	0x1
 4333 07e7 3F0B     		.2byte	0xb3f
 4334 07e9 00000000 		.4byte	.LFB43
 4335 07ed 14000000 		.4byte	.LFE43-.LFB43
 4336 07f1 01       		.uleb128 0x1
 4337 07f2 9C       		.byte	0x9c
 4338 07f3 14       		.uleb128 0x14
 4339 07f4 E6060000 		.4byte	.LASF91
 4340 07f8 01       		.byte	0x1
 4341 07f9 620B     		.2byte	0xb62
 4342 07fb F8000000 		.4byte	0xf8
 4343 07ff 00000000 		.4byte	.LFB44
 4344 0803 2C000000 		.4byte	.LFE44-.LFB44
 4345 0807 01       		.uleb128 0x1
 4346 0808 9C       		.byte	0x9c
 4347 0809 3B080000 		.4byte	0x83b
 4348 080d 10       		.uleb128 0x10
 4349 080e 26040000 		.4byte	.LASF52
 4350 0812 01       		.byte	0x1
 4351 0813 620B     		.2byte	0xb62
 4352 0815 83000000 		.4byte	0x83
 4353 0819 02       		.uleb128 0x2
 4354 081a 91       		.byte	0x91
 4355 081b 6C       		.sleb128 -20
 4356 081c 10       		.uleb128 0x10
 4357 081d 1F050000 		.4byte	.LASF92
 4358 0821 01       		.byte	0x1
 4359 0822 620B     		.2byte	0xb62
 4360 0824 F8000000 		.4byte	0xf8
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 137


 4361 0828 02       		.uleb128 0x2
 4362 0829 91       		.byte	0x91
 4363 082a 68       		.sleb128 -24
 4364 082b 11       		.uleb128 0x11
 4365 082c 78000000 		.4byte	.LASF93
 4366 0830 01       		.byte	0x1
 4367 0831 640B     		.2byte	0xb64
 4368 0833 F8000000 		.4byte	0xf8
 4369 0837 02       		.uleb128 0x2
 4370 0838 91       		.byte	0x91
 4371 0839 74       		.sleb128 -12
 4372 083a 00       		.byte	0
 4373 083b 14       		.uleb128 0x14
 4374 083c BB010000 		.4byte	.LASF94
 4375 0840 01       		.byte	0x1
 4376 0841 7A0B     		.2byte	0xb7a
 4377 0843 F8000000 		.4byte	0xf8
 4378 0847 00000000 		.4byte	.LFB45
 4379 084b 1C000000 		.4byte	.LFE45-.LFB45
 4380 084f 01       		.uleb128 0x1
 4381 0850 9C       		.byte	0x9c
 4382 0851 65080000 		.4byte	0x865
 4383 0855 10       		.uleb128 0x10
 4384 0856 26040000 		.4byte	.LASF52
 4385 085a 01       		.byte	0x1
 4386 085b 7A0B     		.2byte	0xb7a
 4387 085d 83000000 		.4byte	0x83
 4388 0861 02       		.uleb128 0x2
 4389 0862 91       		.byte	0x91
 4390 0863 74       		.sleb128 -12
 4391 0864 00       		.byte	0
 4392 0865 17       		.uleb128 0x17
 4393 0866 3D080000 		.4byte	.LASF127
 4394 086a 01       		.byte	0x1
 4395 086b 870B     		.2byte	0xb87
 4396 086d 00000000 		.4byte	.LFB46
 4397 0871 44000000 		.4byte	.LFE46-.LFB46
 4398 0875 01       		.uleb128 0x1
 4399 0876 9C       		.byte	0x9c
 4400 0877 89080000 		.4byte	0x889
 4401 087b 16       		.uleb128 0x16
 4402 087c 6900     		.ascii	"i\000"
 4403 087e 01       		.byte	0x1
 4404 087f 890B     		.2byte	0xb89
 4405 0881 83000000 		.4byte	0x83
 4406 0885 02       		.uleb128 0x2
 4407 0886 91       		.byte	0x91
 4408 0887 74       		.sleb128 -12
 4409 0888 00       		.byte	0
 4410 0889 12       		.uleb128 0x12
 4411 088a 9B020000 		.4byte	.LASF95
 4412 088e 01       		.byte	0x1
 4413 088f A70B     		.2byte	0xba7
 4414 0891 00000000 		.4byte	.LFB47
 4415 0895 C0000000 		.4byte	.LFE47-.LFB47
 4416 0899 01       		.uleb128 0x1
 4417 089a 9C       		.byte	0x9c
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 138


 4418 089b AF080000 		.4byte	0x8af
 4419 089f 10       		.uleb128 0x10
 4420 08a0 1C070000 		.4byte	.LASF96
 4421 08a4 01       		.byte	0x1
 4422 08a5 A70B     		.2byte	0xba7
 4423 08a7 AF080000 		.4byte	0x8af
 4424 08ab 02       		.uleb128 0x2
 4425 08ac 91       		.byte	0x91
 4426 08ad 74       		.sleb128 -12
 4427 08ae 00       		.byte	0
 4428 08af 06       		.uleb128 0x6
 4429 08b0 04       		.byte	0x4
 4430 08b1 83000000 		.4byte	0x83
 4431 08b5 12       		.uleb128 0x12
 4432 08b6 BA050000 		.4byte	.LASF97
 4433 08ba 01       		.byte	0x1
 4434 08bb D30B     		.2byte	0xbd3
 4435 08bd 00000000 		.4byte	.LFB48
 4436 08c1 38000000 		.4byte	.LFE48-.LFB48
 4437 08c5 01       		.uleb128 0x1
 4438 08c6 9C       		.byte	0x9c
 4439 08c7 EA080000 		.4byte	0x8ea
 4440 08cb 10       		.uleb128 0x10
 4441 08cc B8040000 		.4byte	.LASF98
 4442 08d0 01       		.byte	0x1
 4443 08d1 D30B     		.2byte	0xbd3
 4444 08d3 83000000 		.4byte	0x83
 4445 08d7 02       		.uleb128 0x2
 4446 08d8 91       		.byte	0x91
 4447 08d9 6C       		.sleb128 -20
 4448 08da 11       		.uleb128 0x11
 4449 08db EB030000 		.4byte	.LASF26
 4450 08df 01       		.byte	0x1
 4451 08e0 D50B     		.2byte	0xbd5
 4452 08e2 83000000 		.4byte	0x83
 4453 08e6 02       		.uleb128 0x2
 4454 08e7 91       		.byte	0x91
 4455 08e8 74       		.sleb128 -12
 4456 08e9 00       		.byte	0
 4457 08ea 12       		.uleb128 0x12
 4458 08eb 4B040000 		.4byte	.LASF99
 4459 08ef 01       		.byte	0x1
 4460 08f0 EE0B     		.2byte	0xbee
 4461 08f2 00000000 		.4byte	.LFB49
 4462 08f6 38000000 		.4byte	.LFE49-.LFB49
 4463 08fa 01       		.uleb128 0x1
 4464 08fb 9C       		.byte	0x9c
 4465 08fc 1F090000 		.4byte	0x91f
 4466 0900 10       		.uleb128 0x10
 4467 0901 B8040000 		.4byte	.LASF98
 4468 0905 01       		.byte	0x1
 4469 0906 EE0B     		.2byte	0xbee
 4470 0908 83000000 		.4byte	0x83
 4471 090c 02       		.uleb128 0x2
 4472 090d 91       		.byte	0x91
 4473 090e 6C       		.sleb128 -20
 4474 090f 11       		.uleb128 0x11
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 139


 4475 0910 EB030000 		.4byte	.LASF26
 4476 0914 01       		.byte	0x1
 4477 0915 F00B     		.2byte	0xbf0
 4478 0917 83000000 		.4byte	0x83
 4479 091b 02       		.uleb128 0x2
 4480 091c 91       		.byte	0x91
 4481 091d 74       		.sleb128 -12
 4482 091e 00       		.byte	0
 4483 091f 12       		.uleb128 0x12
 4484 0920 81070000 		.4byte	.LASF100
 4485 0924 01       		.byte	0x1
 4486 0925 090C     		.2byte	0xc09
 4487 0927 00000000 		.4byte	.LFB50
 4488 092b 38000000 		.4byte	.LFE50-.LFB50
 4489 092f 01       		.uleb128 0x1
 4490 0930 9C       		.byte	0x9c
 4491 0931 54090000 		.4byte	0x954
 4492 0935 10       		.uleb128 0x10
 4493 0936 B8040000 		.4byte	.LASF98
 4494 093a 01       		.byte	0x1
 4495 093b 090C     		.2byte	0xc09
 4496 093d 83000000 		.4byte	0x83
 4497 0941 02       		.uleb128 0x2
 4498 0942 91       		.byte	0x91
 4499 0943 6C       		.sleb128 -20
 4500 0944 11       		.uleb128 0x11
 4501 0945 EB030000 		.4byte	.LASF26
 4502 0949 01       		.byte	0x1
 4503 094a 0B0C     		.2byte	0xc0b
 4504 094c 83000000 		.4byte	0x83
 4505 0950 02       		.uleb128 0x2
 4506 0951 91       		.byte	0x91
 4507 0952 74       		.sleb128 -12
 4508 0953 00       		.byte	0
 4509 0954 0F       		.uleb128 0xf
 4510 0955 C8040000 		.4byte	.LASF101
 4511 0959 01       		.byte	0x1
 4512 095a 260C     		.2byte	0xc26
 4513 095c 00000000 		.4byte	.LFB51
 4514 0960 74000000 		.4byte	.LFE51-.LFB51
 4515 0964 01       		.uleb128 0x1
 4516 0965 9C       		.byte	0x9c
 4517 0966 98090000 		.4byte	0x998
 4518 096a 10       		.uleb128 0x10
 4519 096b C2000000 		.4byte	.LASF102
 4520 096f 01       		.byte	0x1
 4521 0970 260C     		.2byte	0xc26
 4522 0972 83000000 		.4byte	0x83
 4523 0976 02       		.uleb128 0x2
 4524 0977 91       		.byte	0x91
 4525 0978 6C       		.sleb128 -20
 4526 0979 10       		.uleb128 0x10
 4527 097a B8040000 		.4byte	.LASF98
 4528 097e 01       		.byte	0x1
 4529 097f 260C     		.2byte	0xc26
 4530 0981 83000000 		.4byte	0x83
 4531 0985 02       		.uleb128 0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 140


 4532 0986 91       		.byte	0x91
 4533 0987 68       		.sleb128 -24
 4534 0988 11       		.uleb128 0x11
 4535 0989 EB030000 		.4byte	.LASF26
 4536 098d 01       		.byte	0x1
 4537 098e 280C     		.2byte	0xc28
 4538 0990 83000000 		.4byte	0x83
 4539 0994 02       		.uleb128 0x2
 4540 0995 91       		.byte	0x91
 4541 0996 74       		.sleb128 -12
 4542 0997 00       		.byte	0
 4543 0998 12       		.uleb128 0x12
 4544 0999 92050000 		.4byte	.LASF103
 4545 099d 01       		.byte	0x1
 4546 099e 630C     		.2byte	0xc63
 4547 09a0 00000000 		.4byte	.LFB52
 4548 09a4 2C000000 		.4byte	.LFE52-.LFB52
 4549 09a8 01       		.uleb128 0x1
 4550 09a9 9C       		.byte	0x9c
 4551 09aa BE090000 		.4byte	0x9be
 4552 09ae 10       		.uleb128 0x10
 4553 09af B8040000 		.4byte	.LASF98
 4554 09b3 01       		.byte	0x1
 4555 09b4 630C     		.2byte	0xc63
 4556 09b6 83000000 		.4byte	0x83
 4557 09ba 02       		.uleb128 0x2
 4558 09bb 91       		.byte	0x91
 4559 09bc 74       		.sleb128 -12
 4560 09bd 00       		.byte	0
 4561 09be 12       		.uleb128 0x12
 4562 09bf E5070000 		.4byte	.LASF104
 4563 09c3 01       		.byte	0x1
 4564 09c4 7B0C     		.2byte	0xc7b
 4565 09c6 00000000 		.4byte	.LFB53
 4566 09ca 28000000 		.4byte	.LFE53-.LFB53
 4567 09ce 01       		.uleb128 0x1
 4568 09cf 9C       		.byte	0x9c
 4569 09d0 E4090000 		.4byte	0x9e4
 4570 09d4 10       		.uleb128 0x10
 4571 09d5 59050000 		.4byte	.LASF105
 4572 09d9 01       		.byte	0x1
 4573 09da 7B0C     		.2byte	0xc7b
 4574 09dc 83000000 		.4byte	0x83
 4575 09e0 02       		.uleb128 0x2
 4576 09e1 91       		.byte	0x91
 4577 09e2 74       		.sleb128 -12
 4578 09e3 00       		.byte	0
 4579 09e4 12       		.uleb128 0x12
 4580 09e5 62060000 		.4byte	.LASF106
 4581 09e9 01       		.byte	0x1
 4582 09ea A70C     		.2byte	0xca7
 4583 09ec 00000000 		.4byte	.LFB54
 4584 09f0 2C000000 		.4byte	.LFE54-.LFB54
 4585 09f4 01       		.uleb128 0x1
 4586 09f5 9C       		.byte	0x9c
 4587 09f6 0A0A0000 		.4byte	0xa0a
 4588 09fa 10       		.uleb128 0x10
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 141


 4589 09fb 5C010000 		.4byte	.LASF107
 4590 09ff 01       		.byte	0x1
 4591 0a00 A70C     		.2byte	0xca7
 4592 0a02 83000000 		.4byte	0x83
 4593 0a06 02       		.uleb128 0x2
 4594 0a07 91       		.byte	0x91
 4595 0a08 74       		.sleb128 -12
 4596 0a09 00       		.byte	0
 4597 0a0a 0D       		.uleb128 0xd
 4598 0a0b C6070000 		.4byte	.LASF108
 4599 0a0f 01       		.byte	0x1
 4600 0a10 B90C     		.2byte	0xcb9
 4601 0a12 00000000 		.4byte	.LFB55
 4602 0a16 1C000000 		.4byte	.LFE55-.LFB55
 4603 0a1a 01       		.uleb128 0x1
 4604 0a1b 9C       		.byte	0x9c
 4605 0a1c 0D       		.uleb128 0xd
 4606 0a1d 9B010000 		.4byte	.LASF109
 4607 0a21 01       		.byte	0x1
 4608 0a22 CA0C     		.2byte	0xcca
 4609 0a24 00000000 		.4byte	.LFB56
 4610 0a28 1C000000 		.4byte	.LFE56-.LFB56
 4611 0a2c 01       		.uleb128 0x1
 4612 0a2d 9C       		.byte	0x9c
 4613 0a2e 0D       		.uleb128 0xd
 4614 0a2f CC020000 		.4byte	.LASF110
 4615 0a33 01       		.byte	0x1
 4616 0a34 DA0C     		.2byte	0xcda
 4617 0a36 00000000 		.4byte	.LFB57
 4618 0a3a 18000000 		.4byte	.LFE57-.LFB57
 4619 0a3e 01       		.uleb128 0x1
 4620 0a3f 9C       		.byte	0x9c
 4621 0a40 0D       		.uleb128 0xd
 4622 0a41 F2030000 		.4byte	.LASF111
 4623 0a45 01       		.byte	0x1
 4624 0a46 EA0C     		.2byte	0xcea
 4625 0a48 00000000 		.4byte	.LFB58
 4626 0a4c 18000000 		.4byte	.LFE58-.LFB58
 4627 0a50 01       		.uleb128 0x1
 4628 0a51 9C       		.byte	0x9c
 4629 0a52 12       		.uleb128 0x12
 4630 0a53 63020000 		.4byte	.LASF112
 4631 0a57 01       		.byte	0x1
 4632 0a58 FE0C     		.2byte	0xcfe
 4633 0a5a 00000000 		.4byte	.LFB59
 4634 0a5e 7C000000 		.4byte	.LFE59-.LFB59
 4635 0a62 01       		.uleb128 0x1
 4636 0a63 9C       		.byte	0x9c
 4637 0a64 870A0000 		.4byte	0xa87
 4638 0a68 10       		.uleb128 0x10
 4639 0a69 03030000 		.4byte	.LASF113
 4640 0a6d 01       		.byte	0x1
 4641 0a6e FE0C     		.2byte	0xcfe
 4642 0a70 9B000000 		.4byte	0x9b
 4643 0a74 02       		.uleb128 0x2
 4644 0a75 91       		.byte	0x91
 4645 0a76 6C       		.sleb128 -20
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 142


 4646 0a77 16       		.uleb128 0x16
 4647 0a78 746D7000 		.ascii	"tmp\000"
 4648 0a7c 01       		.byte	0x1
 4649 0a7d 000D     		.2byte	0xd00
 4650 0a7f 6B000000 		.4byte	0x6b
 4651 0a83 02       		.uleb128 0x2
 4652 0a84 91       		.byte	0x91
 4653 0a85 77       		.sleb128 -9
 4654 0a86 00       		.byte	0
 4655 0a87 14       		.uleb128 0x14
 4656 0a88 38000000 		.4byte	.LASF114
 4657 0a8c 01       		.byte	0x1
 4658 0a8d 1B0D     		.2byte	0xd1b
 4659 0a8f 9B000000 		.4byte	0x9b
 4660 0a93 00000000 		.4byte	.LFB60
 4661 0a97 48000000 		.4byte	.LFE60-.LFB60
 4662 0a9b 01       		.uleb128 0x1
 4663 0a9c 9C       		.byte	0x9c
 4664 0a9d C00A0000 		.4byte	0xac0
 4665 0aa1 16       		.uleb128 0x16
 4666 0aa2 746D7000 		.ascii	"tmp\000"
 4667 0aa6 01       		.byte	0x1
 4668 0aa7 1D0D     		.2byte	0xd1d
 4669 0aa9 6B000000 		.4byte	0x6b
 4670 0aad 02       		.uleb128 0x2
 4671 0aae 91       		.byte	0x91
 4672 0aaf 73       		.sleb128 -13
 4673 0ab0 11       		.uleb128 0x11
 4674 0ab1 57080000 		.4byte	.LASF115
 4675 0ab5 01       		.byte	0x1
 4676 0ab6 1E0D     		.2byte	0xd1e
 4677 0ab8 9B000000 		.4byte	0x9b
 4678 0abc 02       		.uleb128 0x2
 4679 0abd 91       		.byte	0x91
 4680 0abe 74       		.sleb128 -12
 4681 0abf 00       		.byte	0
 4682 0ac0 18       		.uleb128 0x18
 4683 0ac1 F8000000 		.4byte	0xf8
 4684 0ac5 D00A0000 		.4byte	0xad0
 4685 0ac9 19       		.uleb128 0x19
 4686 0aca F1000000 		.4byte	0xf1
 4687 0ace 04       		.byte	0x4
 4688 0acf 00       		.byte	0
 4689 0ad0 0C       		.uleb128 0xc
 4690 0ad1 FB060000 		.4byte	.LASF116
 4691 0ad5 01       		.byte	0x1
 4692 0ad6 22       		.byte	0x22
 4693 0ad7 C00A0000 		.4byte	0xac0
 4694 0adb 05       		.uleb128 0x5
 4695 0adc 03       		.byte	0x3
 4696 0add 00000000 		.4byte	CySysTickCallbacks
 4697 0ae1 1A       		.uleb128 0x1a
 4698 0ae2 3A050000 		.4byte	.LASF117
 4699 0ae6 01       		.byte	0x1
 4700 0ae7 1B       		.byte	0x1b
 4701 0ae8 83000000 		.4byte	0x83
 4702 0aec 05       		.uleb128 0x5
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 143


 4703 0aed 03       		.byte	0x3
 4704 0aee 00000000 		.4byte	cydelayFreqHz
 4705 0af2 1A       		.uleb128 0x1a
 4706 0af3 D6010000 		.4byte	.LASF118
 4707 0af7 01       		.byte	0x1
 4708 0af8 1C       		.byte	0x1c
 4709 0af9 83000000 		.4byte	0x83
 4710 0afd 05       		.uleb128 0x5
 4711 0afe 03       		.byte	0x3
 4712 0aff 00000000 		.4byte	cydelayFreqKhz
 4713 0b03 1A       		.uleb128 0x1a
 4714 0b04 72070000 		.4byte	.LASF119
 4715 0b08 01       		.byte	0x1
 4716 0b09 1D       		.byte	0x1d
 4717 0b0a 6B000000 		.4byte	0x6b
 4718 0b0e 05       		.uleb128 0x5
 4719 0b0f 03       		.byte	0x3
 4720 0b10 00000000 		.4byte	cydelayFreqMhz
 4721 0b14 1A       		.uleb128 0x1a
 4722 0b15 56020000 		.4byte	.LASF120
 4723 0b19 01       		.byte	0x1
 4724 0b1a 1E       		.byte	0x1e
 4725 0b1b 83000000 		.4byte	0x83
 4726 0b1f 05       		.uleb128 0x5
 4727 0b20 03       		.byte	0x3
 4728 0b21 00000000 		.4byte	cydelay32kMs
 4729 0b25 1A       		.uleb128 0x1a
 4730 0b26 A4000000 		.4byte	.LASF121
 4731 0b2a 01       		.byte	0x1
 4732 0b2b 36       		.byte	0x36
 4733 0b2c 83000000 		.4byte	0x83
 4734 0b30 05       		.uleb128 0x5
 4735 0b31 03       		.byte	0x3
 4736 0b32 00000000 		.4byte	CySysTickInitVar
 4737 0b36 18       		.uleb128 0x18
 4738 0b37 6B000000 		.4byte	0x6b
 4739 0b3b 460B0000 		.4byte	0xb46
 4740 0b3f 19       		.uleb128 0x19
 4741 0b40 F1000000 		.4byte	0xf1
 4742 0b44 16       		.byte	0x16
 4743 0b45 00       		.byte	0
 4744 0b46 1A       		.uleb128 0x1a
 4745 0b47 84060000 		.4byte	.LASF122
 4746 0b4b 01       		.byte	0x1
 4747 0b4c 4C       		.byte	0x4c
 4748 0b4d 570B0000 		.4byte	0xb57
 4749 0b51 05       		.uleb128 0x5
 4750 0b52 03       		.byte	0x3
 4751 0b53 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 4752 0b57 1B       		.uleb128 0x1b
 4753 0b58 360B0000 		.4byte	0xb36
 4754 0b5c 1A       		.uleb128 0x1a
 4755 0b5d 50000000 		.4byte	.LASF123
 4756 0b61 01       		.byte	0x1
 4757 0b62 5B       		.byte	0x5b
 4758 0b63 83000000 		.4byte	0x83
 4759 0b67 05       		.uleb128 0x5
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 144


 4760 0b68 03       		.byte	0x3
 4761 0b69 00000000 		.4byte	CySysClkPumpConfig
 4762 0b6d 00       		.byte	0
 4763              		.section	.debug_abbrev,"",%progbits
 4764              	.Ldebug_abbrev0:
 4765 0000 01       		.uleb128 0x1
 4766 0001 11       		.uleb128 0x11
 4767 0002 01       		.byte	0x1
 4768 0003 25       		.uleb128 0x25
 4769 0004 0E       		.uleb128 0xe
 4770 0005 13       		.uleb128 0x13
 4771 0006 0B       		.uleb128 0xb
 4772 0007 03       		.uleb128 0x3
 4773 0008 0E       		.uleb128 0xe
 4774 0009 1B       		.uleb128 0x1b
 4775 000a 0E       		.uleb128 0xe
 4776 000b 55       		.uleb128 0x55
 4777 000c 17       		.uleb128 0x17
 4778 000d 11       		.uleb128 0x11
 4779 000e 01       		.uleb128 0x1
 4780 000f 10       		.uleb128 0x10
 4781 0010 17       		.uleb128 0x17
 4782 0011 00       		.byte	0
 4783 0012 00       		.byte	0
 4784 0013 02       		.uleb128 0x2
 4785 0014 24       		.uleb128 0x24
 4786 0015 00       		.byte	0
 4787 0016 0B       		.uleb128 0xb
 4788 0017 0B       		.uleb128 0xb
 4789 0018 3E       		.uleb128 0x3e
 4790 0019 0B       		.uleb128 0xb
 4791 001a 03       		.uleb128 0x3
 4792 001b 0E       		.uleb128 0xe
 4793 001c 00       		.byte	0
 4794 001d 00       		.byte	0
 4795 001e 03       		.uleb128 0x3
 4796 001f 24       		.uleb128 0x24
 4797 0020 00       		.byte	0
 4798 0021 0B       		.uleb128 0xb
 4799 0022 0B       		.uleb128 0xb
 4800 0023 3E       		.uleb128 0x3e
 4801 0024 0B       		.uleb128 0xb
 4802 0025 03       		.uleb128 0x3
 4803 0026 08       		.uleb128 0x8
 4804 0027 00       		.byte	0
 4805 0028 00       		.byte	0
 4806 0029 04       		.uleb128 0x4
 4807 002a 16       		.uleb128 0x16
 4808 002b 00       		.byte	0
 4809 002c 03       		.uleb128 0x3
 4810 002d 0E       		.uleb128 0xe
 4811 002e 3A       		.uleb128 0x3a
 4812 002f 0B       		.uleb128 0xb
 4813 0030 3B       		.uleb128 0x3b
 4814 0031 05       		.uleb128 0x5
 4815 0032 49       		.uleb128 0x49
 4816 0033 13       		.uleb128 0x13
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 145


 4817 0034 00       		.byte	0
 4818 0035 00       		.byte	0
 4819 0036 05       		.uleb128 0x5
 4820 0037 35       		.uleb128 0x35
 4821 0038 00       		.byte	0
 4822 0039 49       		.uleb128 0x49
 4823 003a 13       		.uleb128 0x13
 4824 003b 00       		.byte	0
 4825 003c 00       		.byte	0
 4826 003d 06       		.uleb128 0x6
 4827 003e 0F       		.uleb128 0xf
 4828 003f 00       		.byte	0
 4829 0040 0B       		.uleb128 0xb
 4830 0041 0B       		.uleb128 0xb
 4831 0042 49       		.uleb128 0x49
 4832 0043 13       		.uleb128 0x13
 4833 0044 00       		.byte	0
 4834 0045 00       		.byte	0
 4835 0046 07       		.uleb128 0x7
 4836 0047 15       		.uleb128 0x15
 4837 0048 00       		.byte	0
 4838 0049 27       		.uleb128 0x27
 4839 004a 19       		.uleb128 0x19
 4840 004b 00       		.byte	0
 4841 004c 00       		.byte	0
 4842 004d 08       		.uleb128 0x8
 4843 004e 16       		.uleb128 0x16
 4844 004f 00       		.byte	0
 4845 0050 03       		.uleb128 0x3
 4846 0051 0E       		.uleb128 0xe
 4847 0052 3A       		.uleb128 0x3a
 4848 0053 0B       		.uleb128 0xb
 4849 0054 3B       		.uleb128 0x3b
 4850 0055 0B       		.uleb128 0xb
 4851 0056 49       		.uleb128 0x49
 4852 0057 13       		.uleb128 0x13
 4853 0058 00       		.byte	0
 4854 0059 00       		.byte	0
 4855 005a 09       		.uleb128 0x9
 4856 005b 2E       		.uleb128 0x2e
 4857 005c 00       		.byte	0
 4858 005d 3F       		.uleb128 0x3f
 4859 005e 19       		.uleb128 0x19
 4860 005f 03       		.uleb128 0x3
 4861 0060 0E       		.uleb128 0xe
 4862 0061 3A       		.uleb128 0x3a
 4863 0062 0B       		.uleb128 0xb
 4864 0063 3B       		.uleb128 0x3b
 4865 0064 0B       		.uleb128 0xb
 4866 0065 27       		.uleb128 0x27
 4867 0066 19       		.uleb128 0x19
 4868 0067 11       		.uleb128 0x11
 4869 0068 01       		.uleb128 0x1
 4870 0069 12       		.uleb128 0x12
 4871 006a 06       		.uleb128 0x6
 4872 006b 40       		.uleb128 0x40
 4873 006c 18       		.uleb128 0x18
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 146


 4874 006d 9742     		.uleb128 0x2117
 4875 006f 19       		.uleb128 0x19
 4876 0070 00       		.byte	0
 4877 0071 00       		.byte	0
 4878 0072 0A       		.uleb128 0xa
 4879 0073 2E       		.uleb128 0x2e
 4880 0074 00       		.byte	0
 4881 0075 3F       		.uleb128 0x3f
 4882 0076 19       		.uleb128 0x19
 4883 0077 03       		.uleb128 0x3
 4884 0078 0E       		.uleb128 0xe
 4885 0079 3A       		.uleb128 0x3a
 4886 007a 0B       		.uleb128 0xb
 4887 007b 3B       		.uleb128 0x3b
 4888 007c 0B       		.uleb128 0xb
 4889 007d 27       		.uleb128 0x27
 4890 007e 19       		.uleb128 0x19
 4891 007f 11       		.uleb128 0x11
 4892 0080 01       		.uleb128 0x1
 4893 0081 12       		.uleb128 0x12
 4894 0082 06       		.uleb128 0x6
 4895 0083 40       		.uleb128 0x40
 4896 0084 18       		.uleb128 0x18
 4897 0085 9642     		.uleb128 0x2116
 4898 0087 19       		.uleb128 0x19
 4899 0088 00       		.byte	0
 4900 0089 00       		.byte	0
 4901 008a 0B       		.uleb128 0xb
 4902 008b 2E       		.uleb128 0x2e
 4903 008c 01       		.byte	0x1
 4904 008d 3F       		.uleb128 0x3f
 4905 008e 19       		.uleb128 0x19
 4906 008f 03       		.uleb128 0x3
 4907 0090 0E       		.uleb128 0xe
 4908 0091 3A       		.uleb128 0x3a
 4909 0092 0B       		.uleb128 0xb
 4910 0093 3B       		.uleb128 0x3b
 4911 0094 0B       		.uleb128 0xb
 4912 0095 27       		.uleb128 0x27
 4913 0096 19       		.uleb128 0x19
 4914 0097 11       		.uleb128 0x11
 4915 0098 01       		.uleb128 0x1
 4916 0099 12       		.uleb128 0x12
 4917 009a 06       		.uleb128 0x6
 4918 009b 40       		.uleb128 0x40
 4919 009c 18       		.uleb128 0x18
 4920 009d 9642     		.uleb128 0x2116
 4921 009f 19       		.uleb128 0x19
 4922 00a0 01       		.uleb128 0x1
 4923 00a1 13       		.uleb128 0x13
 4924 00a2 00       		.byte	0
 4925 00a3 00       		.byte	0
 4926 00a4 0C       		.uleb128 0xc
 4927 00a5 34       		.uleb128 0x34
 4928 00a6 00       		.byte	0
 4929 00a7 03       		.uleb128 0x3
 4930 00a8 0E       		.uleb128 0xe
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 147


 4931 00a9 3A       		.uleb128 0x3a
 4932 00aa 0B       		.uleb128 0xb
 4933 00ab 3B       		.uleb128 0x3b
 4934 00ac 0B       		.uleb128 0xb
 4935 00ad 49       		.uleb128 0x49
 4936 00ae 13       		.uleb128 0x13
 4937 00af 02       		.uleb128 0x2
 4938 00b0 18       		.uleb128 0x18
 4939 00b1 00       		.byte	0
 4940 00b2 00       		.byte	0
 4941 00b3 0D       		.uleb128 0xd
 4942 00b4 2E       		.uleb128 0x2e
 4943 00b5 00       		.byte	0
 4944 00b6 3F       		.uleb128 0x3f
 4945 00b7 19       		.uleb128 0x19
 4946 00b8 03       		.uleb128 0x3
 4947 00b9 0E       		.uleb128 0xe
 4948 00ba 3A       		.uleb128 0x3a
 4949 00bb 0B       		.uleb128 0xb
 4950 00bc 3B       		.uleb128 0x3b
 4951 00bd 05       		.uleb128 0x5
 4952 00be 27       		.uleb128 0x27
 4953 00bf 19       		.uleb128 0x19
 4954 00c0 11       		.uleb128 0x11
 4955 00c1 01       		.uleb128 0x1
 4956 00c2 12       		.uleb128 0x12
 4957 00c3 06       		.uleb128 0x6
 4958 00c4 40       		.uleb128 0x40
 4959 00c5 18       		.uleb128 0x18
 4960 00c6 9742     		.uleb128 0x2117
 4961 00c8 19       		.uleb128 0x19
 4962 00c9 00       		.byte	0
 4963 00ca 00       		.byte	0
 4964 00cb 0E       		.uleb128 0xe
 4965 00cc 2E       		.uleb128 0x2e
 4966 00cd 00       		.byte	0
 4967 00ce 3F       		.uleb128 0x3f
 4968 00cf 19       		.uleb128 0x19
 4969 00d0 03       		.uleb128 0x3
 4970 00d1 0E       		.uleb128 0xe
 4971 00d2 3A       		.uleb128 0x3a
 4972 00d3 0B       		.uleb128 0xb
 4973 00d4 3B       		.uleb128 0x3b
 4974 00d5 05       		.uleb128 0x5
 4975 00d6 27       		.uleb128 0x27
 4976 00d7 19       		.uleb128 0x19
 4977 00d8 49       		.uleb128 0x49
 4978 00d9 13       		.uleb128 0x13
 4979 00da 11       		.uleb128 0x11
 4980 00db 01       		.uleb128 0x1
 4981 00dc 12       		.uleb128 0x12
 4982 00dd 06       		.uleb128 0x6
 4983 00de 40       		.uleb128 0x40
 4984 00df 18       		.uleb128 0x18
 4985 00e0 9742     		.uleb128 0x2117
 4986 00e2 19       		.uleb128 0x19
 4987 00e3 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 148


 4988 00e4 00       		.byte	0
 4989 00e5 0F       		.uleb128 0xf
 4990 00e6 2E       		.uleb128 0x2e
 4991 00e7 01       		.byte	0x1
 4992 00e8 3F       		.uleb128 0x3f
 4993 00e9 19       		.uleb128 0x19
 4994 00ea 03       		.uleb128 0x3
 4995 00eb 0E       		.uleb128 0xe
 4996 00ec 3A       		.uleb128 0x3a
 4997 00ed 0B       		.uleb128 0xb
 4998 00ee 3B       		.uleb128 0x3b
 4999 00ef 05       		.uleb128 0x5
 5000 00f0 27       		.uleb128 0x27
 5001 00f1 19       		.uleb128 0x19
 5002 00f2 11       		.uleb128 0x11
 5003 00f3 01       		.uleb128 0x1
 5004 00f4 12       		.uleb128 0x12
 5005 00f5 06       		.uleb128 0x6
 5006 00f6 40       		.uleb128 0x40
 5007 00f7 18       		.uleb128 0x18
 5008 00f8 9642     		.uleb128 0x2116
 5009 00fa 19       		.uleb128 0x19
 5010 00fb 01       		.uleb128 0x1
 5011 00fc 13       		.uleb128 0x13
 5012 00fd 00       		.byte	0
 5013 00fe 00       		.byte	0
 5014 00ff 10       		.uleb128 0x10
 5015 0100 05       		.uleb128 0x5
 5016 0101 00       		.byte	0
 5017 0102 03       		.uleb128 0x3
 5018 0103 0E       		.uleb128 0xe
 5019 0104 3A       		.uleb128 0x3a
 5020 0105 0B       		.uleb128 0xb
 5021 0106 3B       		.uleb128 0x3b
 5022 0107 05       		.uleb128 0x5
 5023 0108 49       		.uleb128 0x49
 5024 0109 13       		.uleb128 0x13
 5025 010a 02       		.uleb128 0x2
 5026 010b 18       		.uleb128 0x18
 5027 010c 00       		.byte	0
 5028 010d 00       		.byte	0
 5029 010e 11       		.uleb128 0x11
 5030 010f 34       		.uleb128 0x34
 5031 0110 00       		.byte	0
 5032 0111 03       		.uleb128 0x3
 5033 0112 0E       		.uleb128 0xe
 5034 0113 3A       		.uleb128 0x3a
 5035 0114 0B       		.uleb128 0xb
 5036 0115 3B       		.uleb128 0x3b
 5037 0116 05       		.uleb128 0x5
 5038 0117 49       		.uleb128 0x49
 5039 0118 13       		.uleb128 0x13
 5040 0119 02       		.uleb128 0x2
 5041 011a 18       		.uleb128 0x18
 5042 011b 00       		.byte	0
 5043 011c 00       		.byte	0
 5044 011d 12       		.uleb128 0x12
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 149


 5045 011e 2E       		.uleb128 0x2e
 5046 011f 01       		.byte	0x1
 5047 0120 3F       		.uleb128 0x3f
 5048 0121 19       		.uleb128 0x19
 5049 0122 03       		.uleb128 0x3
 5050 0123 0E       		.uleb128 0xe
 5051 0124 3A       		.uleb128 0x3a
 5052 0125 0B       		.uleb128 0xb
 5053 0126 3B       		.uleb128 0x3b
 5054 0127 05       		.uleb128 0x5
 5055 0128 27       		.uleb128 0x27
 5056 0129 19       		.uleb128 0x19
 5057 012a 11       		.uleb128 0x11
 5058 012b 01       		.uleb128 0x1
 5059 012c 12       		.uleb128 0x12
 5060 012d 06       		.uleb128 0x6
 5061 012e 40       		.uleb128 0x40
 5062 012f 18       		.uleb128 0x18
 5063 0130 9742     		.uleb128 0x2117
 5064 0132 19       		.uleb128 0x19
 5065 0133 01       		.uleb128 0x1
 5066 0134 13       		.uleb128 0x13
 5067 0135 00       		.byte	0
 5068 0136 00       		.byte	0
 5069 0137 13       		.uleb128 0x13
 5070 0138 2E       		.uleb128 0x2e
 5071 0139 01       		.byte	0x1
 5072 013a 3F       		.uleb128 0x3f
 5073 013b 19       		.uleb128 0x19
 5074 013c 03       		.uleb128 0x3
 5075 013d 0E       		.uleb128 0xe
 5076 013e 3A       		.uleb128 0x3a
 5077 013f 0B       		.uleb128 0xb
 5078 0140 3B       		.uleb128 0x3b
 5079 0141 05       		.uleb128 0x5
 5080 0142 27       		.uleb128 0x27
 5081 0143 19       		.uleb128 0x19
 5082 0144 49       		.uleb128 0x49
 5083 0145 13       		.uleb128 0x13
 5084 0146 11       		.uleb128 0x11
 5085 0147 01       		.uleb128 0x1
 5086 0148 12       		.uleb128 0x12
 5087 0149 06       		.uleb128 0x6
 5088 014a 40       		.uleb128 0x40
 5089 014b 18       		.uleb128 0x18
 5090 014c 9642     		.uleb128 0x2116
 5091 014e 19       		.uleb128 0x19
 5092 014f 01       		.uleb128 0x1
 5093 0150 13       		.uleb128 0x13
 5094 0151 00       		.byte	0
 5095 0152 00       		.byte	0
 5096 0153 14       		.uleb128 0x14
 5097 0154 2E       		.uleb128 0x2e
 5098 0155 01       		.byte	0x1
 5099 0156 3F       		.uleb128 0x3f
 5100 0157 19       		.uleb128 0x19
 5101 0158 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 150


 5102 0159 0E       		.uleb128 0xe
 5103 015a 3A       		.uleb128 0x3a
 5104 015b 0B       		.uleb128 0xb
 5105 015c 3B       		.uleb128 0x3b
 5106 015d 05       		.uleb128 0x5
 5107 015e 27       		.uleb128 0x27
 5108 015f 19       		.uleb128 0x19
 5109 0160 49       		.uleb128 0x49
 5110 0161 13       		.uleb128 0x13
 5111 0162 11       		.uleb128 0x11
 5112 0163 01       		.uleb128 0x1
 5113 0164 12       		.uleb128 0x12
 5114 0165 06       		.uleb128 0x6
 5115 0166 40       		.uleb128 0x40
 5116 0167 18       		.uleb128 0x18
 5117 0168 9742     		.uleb128 0x2117
 5118 016a 19       		.uleb128 0x19
 5119 016b 01       		.uleb128 0x1
 5120 016c 13       		.uleb128 0x13
 5121 016d 00       		.byte	0
 5122 016e 00       		.byte	0
 5123 016f 15       		.uleb128 0x15
 5124 0170 2E       		.uleb128 0x2e
 5125 0171 00       		.byte	0
 5126 0172 3F       		.uleb128 0x3f
 5127 0173 19       		.uleb128 0x19
 5128 0174 03       		.uleb128 0x3
 5129 0175 0E       		.uleb128 0xe
 5130 0176 3A       		.uleb128 0x3a
 5131 0177 0B       		.uleb128 0xb
 5132 0178 3B       		.uleb128 0x3b
 5133 0179 05       		.uleb128 0x5
 5134 017a 27       		.uleb128 0x27
 5135 017b 19       		.uleb128 0x19
 5136 017c 11       		.uleb128 0x11
 5137 017d 01       		.uleb128 0x1
 5138 017e 12       		.uleb128 0x12
 5139 017f 06       		.uleb128 0x6
 5140 0180 40       		.uleb128 0x40
 5141 0181 18       		.uleb128 0x18
 5142 0182 9642     		.uleb128 0x2116
 5143 0184 19       		.uleb128 0x19
 5144 0185 00       		.byte	0
 5145 0186 00       		.byte	0
 5146 0187 16       		.uleb128 0x16
 5147 0188 34       		.uleb128 0x34
 5148 0189 00       		.byte	0
 5149 018a 03       		.uleb128 0x3
 5150 018b 08       		.uleb128 0x8
 5151 018c 3A       		.uleb128 0x3a
 5152 018d 0B       		.uleb128 0xb
 5153 018e 3B       		.uleb128 0x3b
 5154 018f 05       		.uleb128 0x5
 5155 0190 49       		.uleb128 0x49
 5156 0191 13       		.uleb128 0x13
 5157 0192 02       		.uleb128 0x2
 5158 0193 18       		.uleb128 0x18
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 151


 5159 0194 00       		.byte	0
 5160 0195 00       		.byte	0
 5161 0196 17       		.uleb128 0x17
 5162 0197 2E       		.uleb128 0x2e
 5163 0198 01       		.byte	0x1
 5164 0199 03       		.uleb128 0x3
 5165 019a 0E       		.uleb128 0xe
 5166 019b 3A       		.uleb128 0x3a
 5167 019c 0B       		.uleb128 0xb
 5168 019d 3B       		.uleb128 0x3b
 5169 019e 05       		.uleb128 0x5
 5170 019f 27       		.uleb128 0x27
 5171 01a0 19       		.uleb128 0x19
 5172 01a1 11       		.uleb128 0x11
 5173 01a2 01       		.uleb128 0x1
 5174 01a3 12       		.uleb128 0x12
 5175 01a4 06       		.uleb128 0x6
 5176 01a5 40       		.uleb128 0x40
 5177 01a6 18       		.uleb128 0x18
 5178 01a7 9642     		.uleb128 0x2116
 5179 01a9 19       		.uleb128 0x19
 5180 01aa 01       		.uleb128 0x1
 5181 01ab 13       		.uleb128 0x13
 5182 01ac 00       		.byte	0
 5183 01ad 00       		.byte	0
 5184 01ae 18       		.uleb128 0x18
 5185 01af 01       		.uleb128 0x1
 5186 01b0 01       		.byte	0x1
 5187 01b1 49       		.uleb128 0x49
 5188 01b2 13       		.uleb128 0x13
 5189 01b3 01       		.uleb128 0x1
 5190 01b4 13       		.uleb128 0x13
 5191 01b5 00       		.byte	0
 5192 01b6 00       		.byte	0
 5193 01b7 19       		.uleb128 0x19
 5194 01b8 21       		.uleb128 0x21
 5195 01b9 00       		.byte	0
 5196 01ba 49       		.uleb128 0x49
 5197 01bb 13       		.uleb128 0x13
 5198 01bc 2F       		.uleb128 0x2f
 5199 01bd 0B       		.uleb128 0xb
 5200 01be 00       		.byte	0
 5201 01bf 00       		.byte	0
 5202 01c0 1A       		.uleb128 0x1a
 5203 01c1 34       		.uleb128 0x34
 5204 01c2 00       		.byte	0
 5205 01c3 03       		.uleb128 0x3
 5206 01c4 0E       		.uleb128 0xe
 5207 01c5 3A       		.uleb128 0x3a
 5208 01c6 0B       		.uleb128 0xb
 5209 01c7 3B       		.uleb128 0x3b
 5210 01c8 0B       		.uleb128 0xb
 5211 01c9 49       		.uleb128 0x49
 5212 01ca 13       		.uleb128 0x13
 5213 01cb 3F       		.uleb128 0x3f
 5214 01cc 19       		.uleb128 0x19
 5215 01cd 02       		.uleb128 0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 152


 5216 01ce 18       		.uleb128 0x18
 5217 01cf 00       		.byte	0
 5218 01d0 00       		.byte	0
 5219 01d1 1B       		.uleb128 0x1b
 5220 01d2 26       		.uleb128 0x26
 5221 01d3 00       		.byte	0
 5222 01d4 49       		.uleb128 0x49
 5223 01d5 13       		.uleb128 0x13
 5224 01d6 00       		.byte	0
 5225 01d7 00       		.byte	0
 5226 01d8 00       		.byte	0
 5227              		.section	.debug_aranges,"",%progbits
 5228 0000 F4010000 		.4byte	0x1f4
 5229 0004 0200     		.2byte	0x2
 5230 0006 00000000 		.4byte	.Ldebug_info0
 5231 000a 04       		.byte	0x4
 5232 000b 00       		.byte	0
 5233 000c 0000     		.2byte	0
 5234 000e 0000     		.2byte	0
 5235 0010 00000000 		.4byte	.LFB1
 5236 0014 1C000000 		.4byte	.LFE1-.LFB1
 5237 0018 00000000 		.4byte	.LFB2
 5238 001c 1C000000 		.4byte	.LFE2-.LFB2
 5239 0020 00000000 		.4byte	.LFB3
 5240 0024 10010000 		.4byte	.LFE3-.LFB3
 5241 0028 00000000 		.4byte	.LFB4
 5242 002c 1C000000 		.4byte	.LFE4-.LFB4
 5243 0030 00000000 		.4byte	.LFB5
 5244 0034 20000000 		.4byte	.LFE5-.LFB5
 5245 0038 00000000 		.4byte	.LFB6
 5246 003c 48000000 		.4byte	.LFE6-.LFB6
 5247 0040 00000000 		.4byte	.LFB7
 5248 0044 4C000000 		.4byte	.LFE7-.LFB7
 5249 0048 00000000 		.4byte	.LFB8
 5250 004c 34000000 		.4byte	.LFE8-.LFB8
 5251 0050 00000000 		.4byte	.LFB9
 5252 0054 40000000 		.4byte	.LFE9-.LFB9
 5253 0058 00000000 		.4byte	.LFB10
 5254 005c 28010000 		.4byte	.LFE10-.LFB10
 5255 0060 00000000 		.4byte	.LFB11
 5256 0064 44000000 		.4byte	.LFE11-.LFB11
 5257 0068 00000000 		.4byte	.LFB12
 5258 006c 30000000 		.4byte	.LFE12-.LFB12
 5259 0070 00000000 		.4byte	.LFB13
 5260 0074 24000000 		.4byte	.LFE13-.LFB13
 5261 0078 00000000 		.4byte	.LFB14
 5262 007c 18000000 		.4byte	.LFE14-.LFB14
 5263 0080 00000000 		.4byte	.LFB15
 5264 0084 48000000 		.4byte	.LFE15-.LFB15
 5265 0088 00000000 		.4byte	.LFB16
 5266 008c 34000000 		.4byte	.LFE16-.LFB16
 5267 0090 00000000 		.4byte	.LFB17
 5268 0094 4C000000 		.4byte	.LFE17-.LFB17
 5269 0098 00000000 		.4byte	.LFB18
 5270 009c 36000000 		.4byte	.LFE18-.LFB18
 5271 00a0 00000000 		.4byte	.LFB19
 5272 00a4 A8000000 		.4byte	.LFE19-.LFB19
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 153


 5273 00a8 00000000 		.4byte	.LFB20
 5274 00ac 5C000000 		.4byte	.LFE20-.LFB20
 5275 00b0 00000000 		.4byte	.LFB21
 5276 00b4 28000000 		.4byte	.LFE21-.LFB21
 5277 00b8 00000000 		.4byte	.LFB22
 5278 00bc 30000000 		.4byte	.LFE22-.LFB22
 5279 00c0 00000000 		.4byte	.LFB23
 5280 00c4 28000000 		.4byte	.LFE23-.LFB23
 5281 00c8 00000000 		.4byte	.LFB24
 5282 00cc 28000000 		.4byte	.LFE24-.LFB24
 5283 00d0 00000000 		.4byte	.LFB25
 5284 00d4 28000000 		.4byte	.LFE25-.LFB25
 5285 00d8 00000000 		.4byte	.LFB26
 5286 00dc 14000000 		.4byte	.LFE26-.LFB26
 5287 00e0 00000000 		.4byte	.LFB27
 5288 00e4 20000000 		.4byte	.LFE27-.LFB27
 5289 00e8 00000000 		.4byte	.LFB28
 5290 00ec 48000000 		.4byte	.LFE28-.LFB28
 5291 00f0 00000000 		.4byte	.LFB29
 5292 00f4 28000000 		.4byte	.LFE29-.LFB29
 5293 00f8 00000000 		.4byte	.LFB30
 5294 00fc 84000000 		.4byte	.LFE30-.LFB30
 5295 0100 00000000 		.4byte	.LFB31
 5296 0104 24000000 		.4byte	.LFE31-.LFB31
 5297 0108 00000000 		.4byte	.LFB32
 5298 010c 64000000 		.4byte	.LFE32-.LFB32
 5299 0110 00000000 		.4byte	.LFB33
 5300 0114 1C000000 		.4byte	.LFE33-.LFB33
 5301 0118 00000000 		.4byte	.LFB34
 5302 011c 18000000 		.4byte	.LFE34-.LFB34
 5303 0120 00000000 		.4byte	.LFB35
 5304 0124 18000000 		.4byte	.LFE35-.LFB35
 5305 0128 00000000 		.4byte	.LFB36
 5306 012c 18000000 		.4byte	.LFE36-.LFB36
 5307 0130 00000000 		.4byte	.LFB37
 5308 0134 1C000000 		.4byte	.LFE37-.LFB37
 5309 0138 00000000 		.4byte	.LFB38
 5310 013c 18000000 		.4byte	.LFE38-.LFB38
 5311 0140 00000000 		.4byte	.LFB39
 5312 0144 18000000 		.4byte	.LFE39-.LFB39
 5313 0148 00000000 		.4byte	.LFB40
 5314 014c 34000000 		.4byte	.LFE40-.LFB40
 5315 0150 00000000 		.4byte	.LFB41
 5316 0154 18000000 		.4byte	.LFE41-.LFB41
 5317 0158 00000000 		.4byte	.LFB42
 5318 015c 18000000 		.4byte	.LFE42-.LFB42
 5319 0160 00000000 		.4byte	.LFB43
 5320 0164 14000000 		.4byte	.LFE43-.LFB43
 5321 0168 00000000 		.4byte	.LFB44
 5322 016c 2C000000 		.4byte	.LFE44-.LFB44
 5323 0170 00000000 		.4byte	.LFB45
 5324 0174 1C000000 		.4byte	.LFE45-.LFB45
 5325 0178 00000000 		.4byte	.LFB46
 5326 017c 44000000 		.4byte	.LFE46-.LFB46
 5327 0180 00000000 		.4byte	.LFB47
 5328 0184 C0000000 		.4byte	.LFE47-.LFB47
 5329 0188 00000000 		.4byte	.LFB48
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 154


 5330 018c 38000000 		.4byte	.LFE48-.LFB48
 5331 0190 00000000 		.4byte	.LFB49
 5332 0194 38000000 		.4byte	.LFE49-.LFB49
 5333 0198 00000000 		.4byte	.LFB50
 5334 019c 38000000 		.4byte	.LFE50-.LFB50
 5335 01a0 00000000 		.4byte	.LFB51
 5336 01a4 74000000 		.4byte	.LFE51-.LFB51
 5337 01a8 00000000 		.4byte	.LFB52
 5338 01ac 2C000000 		.4byte	.LFE52-.LFB52
 5339 01b0 00000000 		.4byte	.LFB53
 5340 01b4 28000000 		.4byte	.LFE53-.LFB53
 5341 01b8 00000000 		.4byte	.LFB54
 5342 01bc 2C000000 		.4byte	.LFE54-.LFB54
 5343 01c0 00000000 		.4byte	.LFB55
 5344 01c4 1C000000 		.4byte	.LFE55-.LFB55
 5345 01c8 00000000 		.4byte	.LFB56
 5346 01cc 1C000000 		.4byte	.LFE56-.LFB56
 5347 01d0 00000000 		.4byte	.LFB57
 5348 01d4 18000000 		.4byte	.LFE57-.LFB57
 5349 01d8 00000000 		.4byte	.LFB58
 5350 01dc 18000000 		.4byte	.LFE58-.LFB58
 5351 01e0 00000000 		.4byte	.LFB59
 5352 01e4 7C000000 		.4byte	.LFE59-.LFB59
 5353 01e8 00000000 		.4byte	.LFB60
 5354 01ec 48000000 		.4byte	.LFE60-.LFB60
 5355 01f0 00000000 		.4byte	0
 5356 01f4 00000000 		.4byte	0
 5357              		.section	.debug_ranges,"",%progbits
 5358              	.Ldebug_ranges0:
 5359 0000 00000000 		.4byte	.LFB1
 5360 0004 1C000000 		.4byte	.LFE1
 5361 0008 00000000 		.4byte	.LFB2
 5362 000c 1C000000 		.4byte	.LFE2
 5363 0010 00000000 		.4byte	.LFB3
 5364 0014 10010000 		.4byte	.LFE3
 5365 0018 00000000 		.4byte	.LFB4
 5366 001c 1C000000 		.4byte	.LFE4
 5367 0020 00000000 		.4byte	.LFB5
 5368 0024 20000000 		.4byte	.LFE5
 5369 0028 00000000 		.4byte	.LFB6
 5370 002c 48000000 		.4byte	.LFE6
 5371 0030 00000000 		.4byte	.LFB7
 5372 0034 4C000000 		.4byte	.LFE7
 5373 0038 00000000 		.4byte	.LFB8
 5374 003c 34000000 		.4byte	.LFE8
 5375 0040 00000000 		.4byte	.LFB9
 5376 0044 40000000 		.4byte	.LFE9
 5377 0048 00000000 		.4byte	.LFB10
 5378 004c 28010000 		.4byte	.LFE10
 5379 0050 00000000 		.4byte	.LFB11
 5380 0054 44000000 		.4byte	.LFE11
 5381 0058 00000000 		.4byte	.LFB12
 5382 005c 30000000 		.4byte	.LFE12
 5383 0060 00000000 		.4byte	.LFB13
 5384 0064 24000000 		.4byte	.LFE13
 5385 0068 00000000 		.4byte	.LFB14
 5386 006c 18000000 		.4byte	.LFE14
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 155


 5387 0070 00000000 		.4byte	.LFB15
 5388 0074 48000000 		.4byte	.LFE15
 5389 0078 00000000 		.4byte	.LFB16
 5390 007c 34000000 		.4byte	.LFE16
 5391 0080 00000000 		.4byte	.LFB17
 5392 0084 4C000000 		.4byte	.LFE17
 5393 0088 00000000 		.4byte	.LFB18
 5394 008c 36000000 		.4byte	.LFE18
 5395 0090 00000000 		.4byte	.LFB19
 5396 0094 A8000000 		.4byte	.LFE19
 5397 0098 00000000 		.4byte	.LFB20
 5398 009c 5C000000 		.4byte	.LFE20
 5399 00a0 00000000 		.4byte	.LFB21
 5400 00a4 28000000 		.4byte	.LFE21
 5401 00a8 00000000 		.4byte	.LFB22
 5402 00ac 30000000 		.4byte	.LFE22
 5403 00b0 00000000 		.4byte	.LFB23
 5404 00b4 28000000 		.4byte	.LFE23
 5405 00b8 00000000 		.4byte	.LFB24
 5406 00bc 28000000 		.4byte	.LFE24
 5407 00c0 00000000 		.4byte	.LFB25
 5408 00c4 28000000 		.4byte	.LFE25
 5409 00c8 00000000 		.4byte	.LFB26
 5410 00cc 14000000 		.4byte	.LFE26
 5411 00d0 00000000 		.4byte	.LFB27
 5412 00d4 20000000 		.4byte	.LFE27
 5413 00d8 00000000 		.4byte	.LFB28
 5414 00dc 48000000 		.4byte	.LFE28
 5415 00e0 00000000 		.4byte	.LFB29
 5416 00e4 28000000 		.4byte	.LFE29
 5417 00e8 00000000 		.4byte	.LFB30
 5418 00ec 84000000 		.4byte	.LFE30
 5419 00f0 00000000 		.4byte	.LFB31
 5420 00f4 24000000 		.4byte	.LFE31
 5421 00f8 00000000 		.4byte	.LFB32
 5422 00fc 64000000 		.4byte	.LFE32
 5423 0100 00000000 		.4byte	.LFB33
 5424 0104 1C000000 		.4byte	.LFE33
 5425 0108 00000000 		.4byte	.LFB34
 5426 010c 18000000 		.4byte	.LFE34
 5427 0110 00000000 		.4byte	.LFB35
 5428 0114 18000000 		.4byte	.LFE35
 5429 0118 00000000 		.4byte	.LFB36
 5430 011c 18000000 		.4byte	.LFE36
 5431 0120 00000000 		.4byte	.LFB37
 5432 0124 1C000000 		.4byte	.LFE37
 5433 0128 00000000 		.4byte	.LFB38
 5434 012c 18000000 		.4byte	.LFE38
 5435 0130 00000000 		.4byte	.LFB39
 5436 0134 18000000 		.4byte	.LFE39
 5437 0138 00000000 		.4byte	.LFB40
 5438 013c 34000000 		.4byte	.LFE40
 5439 0140 00000000 		.4byte	.LFB41
 5440 0144 18000000 		.4byte	.LFE41
 5441 0148 00000000 		.4byte	.LFB42
 5442 014c 18000000 		.4byte	.LFE42
 5443 0150 00000000 		.4byte	.LFB43
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 156


 5444 0154 14000000 		.4byte	.LFE43
 5445 0158 00000000 		.4byte	.LFB44
 5446 015c 2C000000 		.4byte	.LFE44
 5447 0160 00000000 		.4byte	.LFB45
 5448 0164 1C000000 		.4byte	.LFE45
 5449 0168 00000000 		.4byte	.LFB46
 5450 016c 44000000 		.4byte	.LFE46
 5451 0170 00000000 		.4byte	.LFB47
 5452 0174 C0000000 		.4byte	.LFE47
 5453 0178 00000000 		.4byte	.LFB48
 5454 017c 38000000 		.4byte	.LFE48
 5455 0180 00000000 		.4byte	.LFB49
 5456 0184 38000000 		.4byte	.LFE49
 5457 0188 00000000 		.4byte	.LFB50
 5458 018c 38000000 		.4byte	.LFE50
 5459 0190 00000000 		.4byte	.LFB51
 5460 0194 74000000 		.4byte	.LFE51
 5461 0198 00000000 		.4byte	.LFB52
 5462 019c 2C000000 		.4byte	.LFE52
 5463 01a0 00000000 		.4byte	.LFB53
 5464 01a4 28000000 		.4byte	.LFE53
 5465 01a8 00000000 		.4byte	.LFB54
 5466 01ac 2C000000 		.4byte	.LFE54
 5467 01b0 00000000 		.4byte	.LFB55
 5468 01b4 1C000000 		.4byte	.LFE55
 5469 01b8 00000000 		.4byte	.LFB56
 5470 01bc 1C000000 		.4byte	.LFE56
 5471 01c0 00000000 		.4byte	.LFB57
 5472 01c4 18000000 		.4byte	.LFE57
 5473 01c8 00000000 		.4byte	.LFB58
 5474 01cc 18000000 		.4byte	.LFE58
 5475 01d0 00000000 		.4byte	.LFB59
 5476 01d4 7C000000 		.4byte	.LFE59
 5477 01d8 00000000 		.4byte	.LFB60
 5478 01dc 48000000 		.4byte	.LFE60
 5479 01e0 00000000 		.4byte	0
 5480 01e4 00000000 		.4byte	0
 5481              		.section	.debug_line,"",%progbits
 5482              	.Ldebug_line0:
 5483 0000 C7050000 		.section	.debug_str,"MS",%progbits,1
 5483      02004D00 
 5483      00000201 
 5483      FB0E0D00 
 5483      01010101 
 5484              	.LASF55:
 5485 0000 72616D56 		.ascii	"ramVectorTable\000"
 5485      6563746F 
 5485      72546162 
 5485      6C6500
 5486              	.LASF10:
 5487 000f 75696E74 		.ascii	"uint16\000"
 5487      313600
 5488              	.LASF48:
 5489 0016 696E7453 		.ascii	"intState\000"
 5489      74617465 
 5489      00
 5490              	.LASF31:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 157


 5491 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5491      73436C6B 
 5491      57726974 
 5491      65486663 
 5491      6C6B4469 
 5492              	.LASF114:
 5493 0038 43795379 		.ascii	"CySysPrbGetBgBufferTrim\000"
 5493      73507262 
 5493      47657442 
 5493      67427566 
 5493      66657254 
 5494              	.LASF123:
 5495 0050 43795379 		.ascii	"CySysClkPumpConfig\000"
 5495      73436C6B 
 5495      50756D70 
 5495      436F6E66 
 5495      696700
 5496              	.LASF33:
 5497 0063 43795379 		.ascii	"CySysEnablePumpClock\000"
 5497      73456E61 
 5497      626C6550 
 5497      756D7043 
 5497      6C6F636B 
 5498              	.LASF93:
 5499 0078 72657456 		.ascii	"retVal\000"
 5499      616C00
 5500              	.LASF47:
 5501 007f 43794469 		.ascii	"CyDisableInts\000"
 5501      7361626C 
 5501      65496E74 
 5501      7300
 5502              	.LASF7:
 5503 008d 6C6F6E67 		.ascii	"long long unsigned int\000"
 5503      206C6F6E 
 5503      6720756E 
 5503      7369676E 
 5503      65642069 
 5504              	.LASF121:
 5505 00a4 43795379 		.ascii	"CySysTickInitVar\000"
 5505      73546963 
 5505      6B496E69 
 5505      74566172 
 5505      00
 5506              	.LASF49:
 5507 00b5 4379456E 		.ascii	"CyEnableInts\000"
 5507      61626C65 
 5507      496E7473 
 5507      00
 5508              	.LASF102:
 5509 00c2 696E7465 		.ascii	"interfaceNumber\000"
 5509      72666163 
 5509      654E756D 
 5509      62657200 
 5510              	.LASF70:
 5511 00d2 4379536F 		.ascii	"CySoftwareReset\000"
 5511      66747761 
 5511      72655265 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 158


 5511      73657400 
 5512              	.LASF80:
 5513 00e2 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5513      73546963 
 5513      6B456E61 
 5513      626C6549 
 5513      6E746572 
 5514              	.LASF65:
 5515 00fb 4379496E 		.ascii	"CyIntGetState\000"
 5515      74476574 
 5515      53746174 
 5515      6500
 5516              	.LASF6:
 5517 0109 6C6F6E67 		.ascii	"long long int\000"
 5517      206C6F6E 
 5517      6720696E 
 5517      7400
 5518              	.LASF0:
 5519 0117 7369676E 		.ascii	"signed char\000"
 5519      65642063 
 5519      68617200 
 5520              	.LASF24:
 5521 0123 66726571 		.ascii	"freq\000"
 5521      00
 5522              	.LASF75:
 5523 0128 43794465 		.ascii	"CyDelayFreq\000"
 5523      6C617946 
 5523      72657100 
 5524              	.LASF25:
 5525 0134 696E7465 		.ascii	"interruptState\000"
 5525      72727570 
 5525      74537461 
 5525      746500
 5526              	.LASF13:
 5527 0143 696E7433 		.ascii	"int32\000"
 5527      3200
 5528              	.LASF84:
 5529 0149 43795379 		.ascii	"CySysTickGetReload\000"
 5529      73546963 
 5529      6B476574 
 5529      52656C6F 
 5529      616400
 5530              	.LASF107:
 5531 015c 766F6C74 		.ascii	"voltageTap\000"
 5531      61676554 
 5531      617000
 5532              	.LASF83:
 5533 0167 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 5533      73436C6B 
 5533      496D6F47 
 5533      65745763 
 5533      6F4C6F63 
 5534              	.LASF41:
 5535 017d 77636F4C 		.ascii	"wcoLock\000"
 5535      6F636B00 
 5536              	.LASF4:
 5537 0185 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 159


 5537      20696E74 
 5537      00
 5538              	.LASF66:
 5539 018e 4379496E 		.ascii	"CyIntDisable\000"
 5539      74446973 
 5539      61626C65 
 5539      00
 5540              	.LASF109:
 5541 019b 43795379 		.ascii	"CySysPrbDisableDeepsleepVddaRef\000"
 5541      73507262 
 5541      44697361 
 5541      626C6544 
 5541      65657073 
 5542              	.LASF94:
 5543 01bb 43795379 		.ascii	"CySysTickGetCallback\000"
 5543      73546963 
 5543      6B476574 
 5543      43616C6C 
 5543      6261636B 
 5544              	.LASF9:
 5545 01d0 75696E74 		.ascii	"uint8\000"
 5545      3800
 5546              	.LASF118:
 5547 01d6 63796465 		.ascii	"cydelayFreqKhz\000"
 5547      6C617946 
 5547      7265714B 
 5547      687A00
 5548              	.LASF35:
 5549 01e5 656E6162 		.ascii	"enable\000"
 5549      6C6500
 5550              	.LASF15:
 5551 01ec 646F7562 		.ascii	"double\000"
 5551      6C6500
 5552              	.LASF61:
 5553 01f3 73686966 		.ascii	"shift\000"
 5553      7400
 5554              	.LASF11:
 5555 01f9 75696E74 		.ascii	"uint32\000"
 5555      333200
 5556              	.LASF57:
 5557 0200 4379496E 		.ascii	"CyIntSetVector\000"
 5557      74536574 
 5557      56656374 
 5557      6F7200
 5558              	.LASF50:
 5559 020f 6D61736B 		.ascii	"mask\000"
 5559      00
 5560              	.LASF43:
 5561 0214 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5561      73436C6B 
 5561      47657453 
 5561      7973636C 
 5561      6B536F75 
 5562              	.LASF30:
 5563 022c 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 5563      73436C6B 
 5563      496D6F45 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 160


 5563      6E61626C 
 5563      6557636F 
 5564              	.LASF63:
 5565 0245 4379496E 		.ascii	"CyIntGetPriority\000"
 5565      74476574 
 5565      5072696F 
 5565      72697479 
 5565      00
 5566              	.LASF120:
 5567 0256 63796465 		.ascii	"cydelay32kMs\000"
 5567      6C617933 
 5567      326B4D73 
 5567      00
 5568              	.LASF112:
 5569 0263 43795379 		.ascii	"CySysPrbSetBgBufferTrim\000"
 5569      73507262 
 5569      53657442 
 5569      67427566 
 5569      66657254 
 5570              	.LASF77:
 5571 027b 43795379 		.ascii	"CySysTickInit\000"
 5571      73546963 
 5571      6B496E69 
 5571      7400
 5572              	.LASF62:
 5573 0289 76616C75 		.ascii	"value\000"
 5573      6500
 5574              	.LASF87:
 5575 028f 636C6F63 		.ascii	"clockSource\000"
 5575      6B536F75 
 5575      72636500 
 5576              	.LASF95:
 5577 029b 43794765 		.ascii	"CyGetUniqueId\000"
 5577      74556E69 
 5577      71756549 
 5577      6400
 5578              	.LASF89:
 5579 02a9 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5579      73546963 
 5579      6B476574 
 5579      436F756E 
 5579      74466C61 
 5580              	.LASF8:
 5581 02bf 756E7369 		.ascii	"unsigned int\000"
 5581      676E6564 
 5581      20696E74 
 5581      00
 5582              	.LASF110:
 5583 02cc 43795379 		.ascii	"CySysPrbEnableVddaRef\000"
 5583      73507262 
 5583      456E6162 
 5583      6C655664 
 5583      64615265 
 5584              	.LASF90:
 5585 02e2 43795379 		.ascii	"CySysTickClear\000"
 5585      73546963 
 5585      6B436C65 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 161


 5585      617200
 5586              	.LASF5:
 5587 02f1 6C6F6E67 		.ascii	"long unsigned int\000"
 5587      20756E73 
 5587      69676E65 
 5587      6420696E 
 5587      7400
 5588              	.LASF113:
 5589 0303 62675472 		.ascii	"bgTrim\000"
 5589      696D00
 5590              	.LASF124:
 5591 030a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5591      4320342E 
 5591      392E3320 
 5591      32303135 
 5591      30333033 
 5592 033d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 5592      20726576 
 5592      6973696F 
 5592      6E203232 
 5592      31323230 
 5593 0370 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 5593      30202D66 
 5593      66756E63 
 5593      74696F6E 
 5593      2D736563 
 5594              	.LASF23:
 5595 039c 43795379 		.ascii	"CySysClkImoStop\000"
 5595      73436C6B 
 5595      496D6F53 
 5595      746F7000 
 5596              	.LASF67:
 5597 03ac 4379496E 		.ascii	"CyIntSetPending\000"
 5597      74536574 
 5597      50656E64 
 5597      696E6700 
 5598              	.LASF27:
 5599 03bc 6C664C69 		.ascii	"lfLimit\000"
 5599      6D697400 
 5600              	.LASF44:
 5601 03c4 43795379 		.ascii	"CySysGetResetReason\000"
 5601      73476574 
 5601      52657365 
 5601      74526561 
 5601      736F6E00 
 5602              	.LASF3:
 5603 03d8 73686F72 		.ascii	"short unsigned int\000"
 5603      7420756E 
 5603      7369676E 
 5603      65642069 
 5603      6E7400
 5604              	.LASF26:
 5605 03eb 72656754 		.ascii	"regTmp\000"
 5605      6D7000
 5606              	.LASF111:
 5607 03f2 43795379 		.ascii	"CySysPrbDisableVddaRef\000"
 5607      73507262 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 162


 5607      44697361 
 5607      626C6556 
 5607      64646152 
 5608              	.LASF86:
 5609 0409 43795379 		.ascii	"CySysTickSetClockSource\000"
 5609      73546963 
 5609      6B536574 
 5609      436C6F63 
 5609      6B536F75 
 5610              	.LASF12:
 5611 0421 696E7438 		.ascii	"int8\000"
 5611      00
 5612              	.LASF52:
 5613 0426 6E756D62 		.ascii	"number\000"
 5613      657200
 5614              	.LASF60:
 5615 042d 7072696F 		.ascii	"priority\000"
 5615      72697479 
 5615      00
 5616              	.LASF39:
 5617 0436 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5617      73436C6B 
 5617      57726974 
 5617      65496D6F 
 5617      46726571 
 5618              	.LASF99:
 5619 044b 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5619      73536574 
 5619      466C6173 
 5619      68416363 
 5619      65737341 
 5620              	.LASF51:
 5621 046a 4379496E 		.ascii	"CyIntSetSysVector\000"
 5621      74536574 
 5621      53797356 
 5621      6563746F 
 5621      7200
 5622              	.LASF29:
 5623 047c 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 5623      73436C6B 
 5623      496D6F44 
 5623      69736162 
 5623      6C655763 
 5624              	.LASF18:
 5625 0496 72656733 		.ascii	"reg32\000"
 5625      3200
 5626              	.LASF76:
 5627 049c 43795379 		.ascii	"CySysTickStart\000"
 5627      73546963 
 5627      6B537461 
 5627      727400
 5628              	.LASF46:
 5629 04ab 72657475 		.ascii	"returnStatus\000"
 5629      726E5374 
 5629      61747573 
 5629      00
 5630              	.LASF98:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 163


 5631 04b8 736F7572 		.ascii	"source\000"
 5631      636500
 5632              	.LASF20:
 5633 04bf 73697A65 		.ascii	"sizetype\000"
 5633      74797065 
 5633      00
 5634              	.LASF101:
 5635 04c8 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5635      73536574 
 5635      50657269 
 5635      70686572 
 5635      616C4163 
 5636              	.LASF68:
 5637 04ec 4379496E 		.ascii	"CyIntClearPending\000"
 5637      74436C65 
 5637      61725065 
 5637      6E64696E 
 5637      6700
 5638              	.LASF53:
 5639 04fe 61646472 		.ascii	"address\000"
 5639      65737300 
 5640              	.LASF64:
 5641 0506 4379496E 		.ascii	"CyIntEnable\000"
 5641      74456E61 
 5641      626C6500 
 5642              	.LASF36:
 5643 0512 73797363 		.ascii	"sysclkSource\000"
 5643      6C6B536F 
 5643      75726365 
 5643      00
 5644              	.LASF92:
 5645 051f 66756E63 		.ascii	"function\000"
 5645      74696F6E 
 5645      00
 5646              	.LASF85:
 5647 0528 43795379 		.ascii	"CySysTickGetValue\000"
 5647      73546963 
 5647      6B476574 
 5647      56616C75 
 5647      6500
 5648              	.LASF117:
 5649 053a 63796465 		.ascii	"cydelayFreqHz\000"
 5649      6C617946 
 5649      72657148 
 5649      7A00
 5650              	.LASF59:
 5651 0548 4379496E 		.ascii	"CyIntSetPriority\000"
 5651      74536574 
 5651      5072696F 
 5651      72697479 
 5651      00
 5652              	.LASF105:
 5653 0559 6761696E 		.ascii	"gain\000"
 5653      00
 5654              	.LASF14:
 5655 055e 666C6F61 		.ascii	"float\000"
 5655      7400
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 164


 5656              	.LASF21:
 5657 0564 63795379 		.ascii	"cySysTickCallback\000"
 5657      73546963 
 5657      6B43616C 
 5657      6C626163 
 5657      6B00
 5658              	.LASF58:
 5659 0576 4379496E 		.ascii	"CyIntGetVector\000"
 5659      74476574 
 5659      56656374 
 5659      6F7200
 5660              	.LASF72:
 5661 0585 6D696C6C 		.ascii	"milliseconds\000"
 5661      69736563 
 5661      6F6E6473 
 5661      00
 5662              	.LASF103:
 5663 0592 43795379 		.ascii	"CySysPrbSetGlobalVrefSource\000"
 5663      73507262 
 5663      53657447 
 5663      6C6F6261 
 5663      6C567265 
 5664              	.LASF17:
 5665 05ae 72656738 		.ascii	"reg8\000"
 5665      00
 5666              	.LASF69:
 5667 05b3 43794861 		.ascii	"CyHalt\000"
 5667      6C7400
 5668              	.LASF97:
 5669 05ba 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5669      73536574 
 5669      52616D41 
 5669      63636573 
 5669      73417262 
 5670              	.LASF1:
 5671 05d7 756E7369 		.ascii	"unsigned char\000"
 5671      676E6564 
 5671      20636861 
 5671      7200
 5672              	.LASF2:
 5673 05e5 73686F72 		.ascii	"short int\000"
 5673      7420696E 
 5673      7400
 5674              	.LASF126:
 5675 05ef 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 5675      73657273 
 5675      5C666E65 
 5675      7665735C 
 5675      446F6375 
 5676 061c 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 5676      655F7370 
 5676      6565645F 
 5676      73656E73 
 5676      6F722E63 
 5677              	.LASF56:
 5678 0635 4379496E 		.ascii	"CyIntGetSysVector\000"
 5678      74476574 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 165


 5678      53797356 
 5678      6563746F 
 5678      7200
 5679              	.LASF34:
 5680 0647 636C6B53 		.ascii	"clkSelect\000"
 5680      656C6563 
 5680      7400
 5681              	.LASF73:
 5682 0651 43794465 		.ascii	"CyDelayUs\000"
 5682      6C617955 
 5682      7300
 5683              	.LASF45:
 5684 065b 72656173 		.ascii	"reason\000"
 5684      6F6E00
 5685              	.LASF106:
 5686 0662 43795379 		.ascii	"CySysPrbSetGlobalVrefVoltage\000"
 5686      73507262 
 5686      53657447 
 5686      6C6F6261 
 5686      6C567265 
 5687              	.LASF16:
 5688 067f 63686172 		.ascii	"char\000"
 5688      00
 5689              	.LASF122:
 5690 0684 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 5690      6F467265 
 5690      714D687A 
 5690      3244706C 
 5690      6C4F6666 
 5691              	.LASF19:
 5692 069c 63796973 		.ascii	"cyisraddress\000"
 5692      72616464 
 5692      72657373 
 5692      00
 5693              	.LASF78:
 5694 06a9 43795379 		.ascii	"CySysTickEnable\000"
 5694      73546963 
 5694      6B456E61 
 5694      626C6500 
 5695              	.LASF42:
 5696 06b9 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
 5696      73436C6B 
 5696      57726974 
 5696      65486663 
 5696      6C6B4469 
 5697              	.LASF37:
 5698 06cf 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5698      73436C6B 
 5698      57726974 
 5698      65537973 
 5698      636C6B44 
 5699              	.LASF91:
 5700 06e6 43795379 		.ascii	"CySysTickSetCallback\000"
 5700      73546963 
 5700      6B536574 
 5700      43616C6C 
 5700      6261636B 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 166


 5701              	.LASF116:
 5702 06fb 43795379 		.ascii	"CySysTickCallbacks\000"
 5702      73546963 
 5702      6B43616C 
 5702      6C626163 
 5702      6B7300
 5703              	.LASF40:
 5704 070e 696D6F54 		.ascii	"imoTrim1Value\000"
 5704      72696D31 
 5704      56616C75 
 5704      6500
 5705              	.LASF96:
 5706 071c 756E6971 		.ascii	"uniqueId\000"
 5706      75654964 
 5706      00
 5707              	.LASF28:
 5708 0725 666C6173 		.ascii	"flashCtlReg\000"
 5708      6843746C 
 5708      52656700 
 5709              	.LASF71:
 5710 0731 43794465 		.ascii	"CyDelay\000"
 5710      6C617900 
 5711              	.LASF88:
 5712 0739 43795379 		.ascii	"CySysTickGetClockSource\000"
 5712      73546963 
 5712      6B476574 
 5712      436C6F63 
 5712      6B536F75 
 5713              	.LASF81:
 5714 0751 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5714      73546963 
 5714      6B446973 
 5714      61626C65 
 5714      496E7465 
 5715              	.LASF54:
 5716 076b 6F6C6449 		.ascii	"oldIsr\000"
 5716      737200
 5717              	.LASF119:
 5718 0772 63796465 		.ascii	"cydelayFreqMhz\000"
 5718      6C617946 
 5718      7265714D 
 5718      687A00
 5719              	.LASF100:
 5720 0781 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5720      73536574 
 5720      446D6163 
 5720      41636365 
 5720      73734172 
 5721              	.LASF79:
 5722 079f 43795379 		.ascii	"CySysTickStop\000"
 5722      73546963 
 5722      6B53746F 
 5722      7000
 5723              	.LASF38:
 5724 07ad 64697669 		.ascii	"divider\000"
 5724      64657200 
 5725              	.LASF22:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccHhCNQO.s 			page 167


 5726 07b5 43795379 		.ascii	"CySysClkImoStart\000"
 5726      73436C6B 
 5726      496D6F53 
 5726      74617274 
 5726      00
 5727              	.LASF108:
 5728 07c6 43795379 		.ascii	"CySysPrbEnableDeepsleepVddaRef\000"
 5728      73507262 
 5728      456E6162 
 5728      6C654465 
 5728      6570736C 
 5729              	.LASF104:
 5730 07e5 43795379 		.ascii	"CySysPrbSetBgGain\000"
 5730      73507262 
 5730      53657442 
 5730      67476169 
 5730      6E00
 5731              	.LASF125:
 5732 07f7 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5732      72617465 
 5732      645F536F 
 5732      75726365 
 5732      5C50536F 
 5733              	.LASF74:
 5734 0816 6D696372 		.ascii	"microseconds\000"
 5734      6F736563 
 5734      6F6E6473 
 5734      00
 5735              	.LASF32:
 5736 0823 746D7052 		.ascii	"tmpReg\000"
 5736      656700
 5737              	.LASF82:
 5738 082a 43795379 		.ascii	"CySysTickSetReload\000"
 5738      73546963 
 5738      6B536574 
 5738      52656C6F 
 5738      616400
 5739              	.LASF127:
 5740 083d 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5740      73546963 
 5740      6B536572 
 5740      76696365 
 5740      43616C6C 
 5741              	.LASF115:
 5742 0857 72657475 		.ascii	"returnValue\000"
 5742      726E5661 
 5742      6C756500 
 5743              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
