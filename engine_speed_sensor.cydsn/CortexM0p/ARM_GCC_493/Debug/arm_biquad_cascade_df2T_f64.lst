ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_biquad_cascade_df2T_f64.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_dmul
  18              		.global	__aeabi_dadd
  19              		.section	.text.arm_biquad_cascade_df2T_f64,"ax",%progbits
  20              		.align	2
  21              		.global	arm_biquad_cascade_df2T_f64
  22              		.code	16
  23              		.thumb_func
  24              		.type	arm_biquad_cascade_df2T_f64, %function
  25              	arm_biquad_cascade_df2T_f64:
  26              	.LFB82:
  27              		.file 1 "Source\\FilteringFunctions\\arm_biquad_cascade_df2T_f64.c"
   1:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** /* ----------------------------------------------------------------------
   2:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  * Project:      CMSIS DSP Library
   3:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  * Title:        arm_biquad_cascade_df2T_f64.c
   4:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  * Description:  Processing function for floating-point transposed direct form II Biquad cascade fi
   5:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  *
   6:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  * $Date:        27. January 2017
   7:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  * $Revision:    V.1.5.1
   8:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  *
   9:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  * Target Processor: Cortex-M cores
  10:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  * -------------------------------------------------------------------- */
  11:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** /*
  12:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  *
  14:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  *
  16:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  * not use this file except in compliance with the License.
  18:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  * You may obtain a copy of the License at
  19:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  *
  20:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  *
  22:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  * See the License for the specific language governing permissions and
  26:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  * limitations under the License.
  27:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****  */
  28:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
  29:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** #include "arm_math.h"
  30:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 2


  31:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** /**
  32:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * @ingroup groupFilters
  33:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** */
  34:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
  35:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** /**
  36:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * @defgroup BiquadCascadeDF2T Biquad Cascade IIR Filters Using a Direct Form II Transposed Structur
  37:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *
  38:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * This set of functions implements arbitrary order recursive (IIR) filters using a transposed direc
  39:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * The filters are implemented as a cascade of second order Biquad sections.
  40:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * These functions provide a slight memory savings as compared to the direct form I Biquad filter fu
  41:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * Only floating-point data is supported.
  42:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *
  43:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * This function operate on blocks of input and output data and each call to the function
  44:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * processes <code>blockSize</code> samples through the filter.
  45:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * <code>pSrc</code> points to the array of input data and
  46:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * <code>pDst</code> points to the array of output data.
  47:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * Both arrays contain <code>blockSize</code> values.
  48:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *
  49:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * \par Algorithm
  50:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * Each Biquad stage implements a second order filter using the difference equation:
  51:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * <pre>
  52:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *    y[n] = b0 * x[n] + d1
  53:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *    d1 = b1 * x[n] + a1 * y[n] + d2
  54:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *    d2 = b2 * x[n] + a2 * y[n]
  55:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * </pre>
  56:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * where d1 and d2 represent the two state values.
  57:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *
  58:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * \par
  59:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * A Biquad filter using a transposed Direct Form II structure is shown below.
  60:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * \image html BiquadDF2Transposed.gif "Single transposed Direct Form II Biquad"
  61:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * Coefficients <code>b0, b1, and b2 </code> multiply the input signal <code>x[n]</code> and are ref
  62:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * Coefficients <code>a1</code> and <code>a2</code> multiply the output signal <code>y[n]</code> and
  63:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * Pay careful attention to the sign of the feedback coefficients.
  64:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * Some design tools flip the sign of the feedback coefficients:
  65:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * <pre>
  66:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *    y[n] = b0 * x[n] + d1;
  67:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *    d1 = b1 * x[n] - a1 * y[n] + d2;
  68:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *    d2 = b2 * x[n] - a2 * y[n];
  69:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * </pre>
  70:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * In this case the feedback coefficients <code>a1</code> and <code>a2</code> must be negated when u
  71:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *
  72:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * \par
  73:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * Higher order filters are realized as a cascade of second order sections.
  74:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * <code>numStages</code> refers to the number of second order stages used.
  75:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * For example, an 8th order filter would be realized with <code>numStages=4</code> second order sta
  76:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * A 9th order filter would be realized with <code>numStages=5</code> second order stages with the
  77:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * coefficients for one of the stages configured as a first order filter (<code>b2=0</code> and <cod
  78:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *
  79:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * \par
  80:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * <code>pState</code> points to the state variable array.
  81:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * Each Biquad stage has 2 state variables <code>d1</code> and <code>d2</code>.
  82:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * The state variables are arranged in the <code>pState</code> array as:
  83:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * <pre>
  84:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *     {d11, d12, d21, d22, ...}
  85:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * </pre>
  86:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * where <code>d1x</code> refers to the state variables for the first Biquad and
  87:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * <code>d2x</code> refers to the state variables for the second Biquad.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 3


  88:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * The state array has a total length of <code>2*numStages</code> values.
  89:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * The state variables are updated after each block of data is processed; the coefficients are untou
  90:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *
  91:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * \par
  92:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * The CMSIS library contains Biquad filters in both Direct Form I and transposed Direct Form II.
  93:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * The advantage of the Direct Form I structure is that it is numerically more robust for fixed-poin
  94:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * That is why the Direct Form I structure supports Q15 and Q31 data types.
  95:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * The transposed Direct Form II structure, on the other hand, requires a wide dynamic range for the
  96:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * Because of this, the CMSIS library only has a floating-point version of the Direct Form II Biquad
  97:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * The advantage of the Direct Form II Biquad is that it requires half the number of state variables
  98:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *
  99:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * \par Instance Structure
 100:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * The coefficients and state variables for a filter are stored together in an instance data structu
 101:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * A separate instance structure must be defined for each filter.
 102:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * Coefficient arrays may be shared among several instances while state variable arrays cannot be sh
 103:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *
 104:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * \par Init Functions
 105:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * There is also an associated initialization function.
 106:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * The initialization function performs following operations:
 107:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * - Sets the values of the internal structure fields.
 108:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * - Zeros out the values in the state buffer.
 109:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * To do this manually without calling the init function, assign the follow subfields of the instanc
 110:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * numStages, pCoeffs, pState. Also set all of the values in pState to zero.
 111:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *
 112:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * \par
 113:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * Use of the initialization function is optional.
 114:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * However, if the initialization function is used, then the instance structure cannot be placed int
 115:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * To place an instance structure into a const data section, the instance structure must be manually
 116:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * Set the values in the state buffer to zeros before static initialization.
 117:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * For example, to statically initialize the instance structure use
 118:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * <pre>
 119:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *     arm_biquad_cascade_df2T_instance_f64 S1 = {numStages, pState, pCoeffs};
 120:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * </pre>
 121:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * where <code>numStages</code> is the number of Biquad stages in the filter; <code>pState</code> is
 122:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * <code>pCoeffs</code> is the address of the coefficient buffer;
 123:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** *
 124:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** */
 125:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 126:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** /**
 127:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * @addtogroup BiquadCascadeDF2T
 128:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * @{
 129:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** */
 130:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 131:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** /**
 132:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * @brief Processing function for the floating-point transposed direct form II Biquad cascade filter
 133:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * @param[in]  *S        points to an instance of the filter data structure.
 134:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * @param[in]  *pSrc     points to the block of input data.
 135:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * @param[out] *pDst     points to the block of output data
 136:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * @param[in]  blockSize number of samples to process.
 137:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** * @return none.
 138:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** */
 139:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 140:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 141:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** LOW_OPTIMIZATION_ENTER
 142:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** void arm_biquad_cascade_df2T_f64(
 143:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** const arm_biquad_cascade_df2T_instance_f64 * S,
 144:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** float64_t * pSrc,
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 4


 145:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** float64_t * pDst,
 146:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** uint32_t blockSize)
 147:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** {
  28              		.loc 1 147 0
  29              		.cfi_startproc
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              		.cfi_def_cfa_offset 16
  32              		.cfi_offset 4, -16
  33              		.cfi_offset 5, -12
  34              		.cfi_offset 6, -8
  35              		.cfi_offset 14, -4
  36 0002 5E46     		mov	r6, fp
  37 0004 5546     		mov	r5, r10
  38 0006 4C46     		mov	r4, r9
  39 0008 70B4     		push	{r4, r5, r6}
  40              		.cfi_def_cfa_offset 28
  41              		.cfi_offset 9, -28
  42              		.cfi_offset 10, -24
  43              		.cfi_offset 11, -20
  44 000a 4646     		mov	r6, r8
  45 000c 40B4     		push	{r6}
  46              		.cfi_def_cfa_offset 32
  47              		.cfi_offset 8, -32
  48 000e 94B0     		sub	sp, sp, #80
  49              		.cfi_def_cfa_offset 112
  50 0010 1292     		str	r2, [sp, #72]
  51 0012 1393     		str	r3, [sp, #76]
 148:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 149:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    float64_t *pIn = pSrc;                         /*  source pointer            */
 150:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    float64_t *pOut = pDst;                        /*  destination pointer       */
 151:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    float64_t *pState = S->pState;                 /*  State pointer             */
 152:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    float64_t *pCoeffs = S->pCoeffs;               /*  coefficient pointer       */
 153:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    float64_t acc1;                                /*  accumulator               */
 154:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    float64_t b0, b1, b2, a1, a2;                  /*  Filter coefficients       */
 155:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    float64_t Xn1;                                 /*  temporary input           */
 156:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    float64_t d1, d2;                              /*  state variables           */
 157:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    uint32_t sample, stage = S->numStages;         /*  loop counters             */
  52              		.loc 1 157 0
  53 0014 0378     		ldrb	r3, [r0]
  54 0016 1093     		str	r3, [sp, #64]
  55 0018 4368     		ldr	r3, [r0, #4]
  56 001a 9B46     		mov	fp, r3
  57 001c 8368     		ldr	r3, [r0, #8]
  58 001e 9A46     		mov	r10, r3
  59              	.L4:
 158:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 159:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** #if defined(ARM_MATH_CM7)
 160:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 161:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    float64_t Xn2, Xn3, Xn4, Xn5, Xn6, Xn7, Xn8;   /*  Input State variables     */
 162:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    float64_t Xn9, Xn10, Xn11, Xn12, Xn13, Xn14, Xn15, Xn16;
 163:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    float64_t acc2, acc3, acc4, acc5, acc6, acc7;  /*  Simulates the accumulator */
 164:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    float64_t acc8, acc9, acc10, acc11, acc12, acc13, acc14, acc15, acc16;
 165:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 166:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    do
 167:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    {
 168:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /* Reading the coefficients */
 169:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       b0 = pCoeffs[0];
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 5


 170:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       b1 = pCoeffs[1];
 171:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       b2 = pCoeffs[2];
 172:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       a1 = pCoeffs[3];
 173:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /* Apply loop unrolling and compute 16 output values simultaneously. */
 174:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       sample = blockSize >> 4u;
 175:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       a2 = pCoeffs[4];
 176:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 177:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /*Reading the state values */
 178:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       d1 = pState[0];
 179:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       d2 = pState[1];
 180:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 181:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       pCoeffs += 5u;
 182:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 183:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 184:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /* First part of the processing with loop unrolling.  Compute 16 outputs at a time.
 185:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****        ** a second loop below computes the remaining 1 to 15 samples. */
 186:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       while (sample > 0u) {
 187:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 188:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* y[n] = b0 * x[n] + d1 */
 189:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* d1 = b1 * x[n] + a1 * y[n] + d2 */
 190:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* d2 = b2 * x[n] + a2 * y[n] */
 191:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 192:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Read the first 2 inputs. 2 cycles */
 193:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn1  = pIn[0 ];
 194:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn2  = pIn[1 ];
 195:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 196:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Sample 1. 5 cycles */
 197:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn3  = pIn[2 ];
 198:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc1 = b0 * Xn1 + d1;
 199:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 200:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn4  = pIn[3 ];
 201:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = b1 * Xn1 + d2;
 202:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 203:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn5  = pIn[4 ];
 204:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = b2 * Xn1;
 205:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 206:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn6  = pIn[5 ];
 207:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 += a1 * acc1;
 208:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 209:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn7  = pIn[6 ];
 210:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 += a2 * acc1;
 211:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 212:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Sample 2. 5 cycles */
 213:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn8  = pIn[7 ];
 214:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc2 = b0 * Xn2 + d1;
 215:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 216:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn9  = pIn[8 ];
 217:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = b1 * Xn2 + d2;
 218:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 219:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn10 = pIn[9 ];
 220:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = b2 * Xn2;
 221:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 222:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn11 = pIn[10];
 223:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 += a1 * acc2;
 224:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 225:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn12 = pIn[11];
 226:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 += a2 * acc2;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 6


 227:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 228:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Sample 3. 5 cycles */
 229:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn13 = pIn[12];
 230:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc3 = b0 * Xn3 + d1;
 231:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 232:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn14 = pIn[13];
 233:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = b1 * Xn3 + d2;
 234:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 235:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn15 = pIn[14];
 236:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = b2 * Xn3;
 237:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 238:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn16 = pIn[15];
 239:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 += a1 * acc3;
 240:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 241:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pIn += 16;
 242:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 += a2 * acc3;
 243:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 244:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Sample 4. 5 cycles */
 245:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc4 = b0 * Xn4 + d1;
 246:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = b1 * Xn4 + d2;
 247:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = b2 * Xn4;
 248:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 += a1 * acc4;
 249:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 += a2 * acc4;
 250:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 251:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Sample 5. 5 cycles */
 252:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc5 = b0 * Xn5 + d1;
 253:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = b1 * Xn5 + d2;
 254:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = b2 * Xn5;
 255:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 += a1 * acc5;
 256:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 += a2 * acc5;
 257:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 258:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Sample 6. 5 cycles */
 259:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc6 = b0 * Xn6 + d1;
 260:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = b1 * Xn6 + d2;
 261:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = b2 * Xn6;
 262:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 += a1 * acc6;
 263:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 += a2 * acc6;
 264:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 265:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Sample 7. 5 cycles */
 266:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc7 = b0 * Xn7 + d1;
 267:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = b1 * Xn7 + d2;
 268:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = b2 * Xn7;
 269:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 += a1 * acc7;
 270:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 += a2 * acc7;
 271:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 272:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Sample 8. 5 cycles */
 273:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc8 = b0 * Xn8 + d1;
 274:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = b1 * Xn8 + d2;
 275:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = b2 * Xn8;
 276:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 += a1 * acc8;
 277:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 += a2 * acc8;
 278:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 279:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Sample 9. 5 cycles */
 280:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc9 = b0 * Xn9 + d1;
 281:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = b1 * Xn9 + d2;
 282:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = b2 * Xn9;
 283:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 += a1 * acc9;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 7


 284:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 += a2 * acc9;
 285:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 286:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Sample 10. 5 cycles */
 287:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc10 = b0 * Xn10 + d1;
 288:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = b1 * Xn10 + d2;
 289:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = b2 * Xn10;
 290:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 += a1 * acc10;
 291:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 += a2 * acc10;
 292:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 293:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Sample 11. 5 cycles */
 294:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc11 = b0 * Xn11 + d1;
 295:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = b1 * Xn11 + d2;
 296:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = b2 * Xn11;
 297:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 += a1 * acc11;
 298:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 += a2 * acc11;
 299:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 300:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Sample 12. 5 cycles */
 301:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc12 = b0 * Xn12 + d1;
 302:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = b1 * Xn12 + d2;
 303:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = b2 * Xn12;
 304:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 += a1 * acc12;
 305:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 += a2 * acc12;
 306:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 307:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Sample 13. 5 cycles */
 308:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc13 = b0 * Xn13 + d1;
 309:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = b1 * Xn13 + d2;
 310:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = b2 * Xn13;
 311:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 312:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[0 ] = acc1 ;
 313:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 += a1 * acc13;
 314:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 315:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[1 ] = acc2 ;
 316:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 += a2 * acc13;
 317:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 318:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Sample 14. 5 cycles */
 319:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[2 ] = acc3 ;
 320:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc14 = b0 * Xn14 + d1;
 321:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 322:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[3 ] = acc4 ;
 323:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = b1 * Xn14 + d2;
 324:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 325:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[4 ] = acc5 ;
 326:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = b2 * Xn14;
 327:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 328:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[5 ] = acc6 ;
 329:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 += a1 * acc14;
 330:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 331:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[6 ] = acc7 ;
 332:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 += a2 * acc14;
 333:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 334:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Sample 15. 5 cycles */
 335:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[7 ] = acc8 ;
 336:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[8 ] = acc9 ;
 337:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc15 = b0 * Xn15 + d1;
 338:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 339:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[9 ] = acc10;
 340:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = b1 * Xn15 + d2;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 8


 341:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 342:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[10] = acc11;
 343:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = b2 * Xn15;
 344:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 345:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[11] = acc12;
 346:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 += a1 * acc15;
 347:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 348:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[12] = acc13;
 349:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 += a2 * acc15;
 350:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 351:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Sample 16. 5 cycles */
 352:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[13] = acc14;
 353:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc16 = b0 * Xn16 + d1;
 354:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 355:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[14] = acc15;
 356:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = b1 * Xn16 + d2;
 357:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 358:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[15] = acc16;
 359:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = b2 * Xn16;
 360:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 361:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          sample--;
 362:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 += a1 * acc16;
 363:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 364:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut += 16;
 365:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 += a2 * acc16;
 366:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       }
 367:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 368:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       sample = blockSize & 0xFu;
 369:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       while (sample > 0u) {
 370:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn1 = *pIn;
 371:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc1 = b0 * Xn1 + d1;
 372:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 373:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pIn++;
 374:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = b1 * Xn1 + d2;
 375:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 376:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          *pOut = acc1;
 377:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = b2 * Xn1;
 378:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 379:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut++;
 380:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 += a1 * acc1;
 381:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 382:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          sample--;
 383:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 += a2 * acc1;
 384:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       }
 385:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 386:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /* Store the updated state variables back into the state array */
 387:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       pState[0] = d1;
 388:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /* The current stage input is given as the output to the next stage */
 389:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       pIn = pDst;
 390:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 391:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       pState[1] = d2;
 392:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /* decrement the loop counter */
 393:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       stage--;
 394:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 395:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       pState += 2u;
 396:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 397:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /*Reset the output working pointer */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 9


 398:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       pOut = pDst;
 399:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 400:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    } while (stage > 0u);
 401:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 402:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** #elif defined(ARM_MATH_CM0_FAMILY)
 403:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 404:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    /* Run the below code for Cortex-M0 */
 405:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 406:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    do
 407:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    {
 408:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /* Reading the coefficients */
 409:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       b0 = *pCoeffs++;
  60              		.loc 1 409 0
  61 0020 5346     		mov	r3, r10
  62 0022 5C68     		ldr	r4, [r3, #4]
  63 0024 1B68     		ldr	r3, [r3]
  64 0026 0693     		str	r3, [sp, #24]
  65 0028 0794     		str	r4, [sp, #28]
 410:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       b1 = *pCoeffs++;
  66              		.loc 1 410 0
  67 002a 5346     		mov	r3, r10
  68 002c DC68     		ldr	r4, [r3, #12]
  69 002e 9B68     		ldr	r3, [r3, #8]
  70 0030 0893     		str	r3, [sp, #32]
  71 0032 0994     		str	r4, [sp, #36]
 411:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       b2 = *pCoeffs++;
  72              		.loc 1 411 0
  73 0034 5346     		mov	r3, r10
  74 0036 5C69     		ldr	r4, [r3, #20]
  75 0038 1B69     		ldr	r3, [r3, #16]
  76 003a 0A93     		str	r3, [sp, #40]
  77 003c 0B94     		str	r4, [sp, #44]
 412:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       a1 = *pCoeffs++;
  78              		.loc 1 412 0
  79 003e 5346     		mov	r3, r10
  80 0040 DC69     		ldr	r4, [r3, #28]
  81 0042 9B69     		ldr	r3, [r3, #24]
  82 0044 0C93     		str	r3, [sp, #48]
  83 0046 0D94     		str	r4, [sp, #52]
 413:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       a2 = *pCoeffs++;
  84              		.loc 1 413 0
  85 0048 5346     		mov	r3, r10
  86 004a 5C6A     		ldr	r4, [r3, #36]
  87 004c 1B6A     		ldr	r3, [r3, #32]
  88 004e 0E93     		str	r3, [sp, #56]
  89 0050 0F94     		str	r4, [sp, #60]
  90 0052 5B46     		mov	r3, fp
  91 0054 1193     		str	r3, [sp, #68]
 414:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 415:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /*Reading the state values */
 416:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       d1 = pState[0];
  92              		.loc 1 416 0
  93 0056 5C68     		ldr	r4, [r3, #4]
  94 0058 1B68     		ldr	r3, [r3]
  95 005a 0293     		str	r3, [sp, #8]
  96 005c 0394     		str	r4, [sp, #12]
 417:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       d2 = pState[1];
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 10


  97              		.loc 1 417 0
  98 005e 5B46     		mov	r3, fp
  99 0060 DC68     		ldr	r4, [r3, #12]
 100 0062 9B68     		ldr	r3, [r3, #8]
 101 0064 0493     		str	r3, [sp, #16]
 102 0066 0594     		str	r4, [sp, #20]
 418:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 419:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 420:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       sample = blockSize;
 421:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 422:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       while (sample > 0u)
 103              		.loc 1 422 0
 104 0068 139E     		ldr	r6, [sp, #76]
 105 006a 002E     		cmp	r6, #0
 106 006c 49D0     		beq	.L2
 107 006e 8846     		mov	r8, r1
 108 0070 129B     		ldr	r3, [sp, #72]
 109 0072 9946     		mov	r9, r3
 110              	.L3:
 423:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       {
 424:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Read the input */
 425:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn1 = *pIn++;
 111              		.loc 1 425 0
 112 0074 4246     		mov	r2, r8
 113 0076 18CA     		ldmia	r2!, {r3, r4}
 114 0078 9046     		mov	r8, r2
 426:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 427:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* y[n] = b0 * x[n] + d1 */
 428:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc1 = (b0 * Xn1) + d1;
 115              		.loc 1 428 0
 116 007a 0698     		ldr	r0, [sp, #24]
 117 007c 0799     		ldr	r1, [sp, #28]
 118 007e 0093     		str	r3, [sp]
 119 0080 0194     		str	r4, [sp, #4]
 120 0082 1A1C     		mov	r2, r3
 121 0084 231C     		mov	r3, r4
 122 0086 FFF7FEFF 		bl	__aeabi_dmul
 123 008a 029A     		ldr	r2, [sp, #8]
 124 008c 039B     		ldr	r3, [sp, #12]
 125 008e FFF7FEFF 		bl	__aeabi_dadd
 126 0092 041C     		mov	r4, r0
 127 0094 0D1C     		mov	r5, r1
 429:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 430:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Store the result in the accumulator in the destination buffer. */
 431:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          *pOut++ = acc1;
 128              		.loc 1 431 0
 129 0096 4A46     		mov	r2, r9
 130 0098 30C2     		stmia	r2!, {r4, r5}
 131 009a 9146     		mov	r9, r2
 432:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 433:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Every time after the output is computed state should be updated. */
 434:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* d1 = b1 * x[n] + a1 * y[n] + d2 */
 435:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = ((b1 * Xn1) + (a1 * acc1)) + d2;
 132              		.loc 1 435 0
 133 009c 0898     		ldr	r0, [sp, #32]
 134 009e 0999     		ldr	r1, [sp, #36]
 135 00a0 009A     		ldr	r2, [sp]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 11


 136 00a2 019B     		ldr	r3, [sp, #4]
 137 00a4 FFF7FEFF 		bl	__aeabi_dmul
 138 00a8 0290     		str	r0, [sp, #8]
 139 00aa 0391     		str	r1, [sp, #12]
 140 00ac 0C98     		ldr	r0, [sp, #48]
 141 00ae 0D99     		ldr	r1, [sp, #52]
 142 00b0 221C     		mov	r2, r4
 143 00b2 2B1C     		mov	r3, r5
 144 00b4 FFF7FEFF 		bl	__aeabi_dmul
 145 00b8 021C     		mov	r2, r0
 146 00ba 0B1C     		mov	r3, r1
 147 00bc 0298     		ldr	r0, [sp, #8]
 148 00be 0399     		ldr	r1, [sp, #12]
 149 00c0 FFF7FEFF 		bl	__aeabi_dadd
 150 00c4 049A     		ldr	r2, [sp, #16]
 151 00c6 059B     		ldr	r3, [sp, #20]
 152 00c8 FFF7FEFF 		bl	__aeabi_dadd
 153 00cc 0290     		str	r0, [sp, #8]
 154 00ce 0391     		str	r1, [sp, #12]
 436:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 437:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* d2 = b2 * x[n] + a2 * y[n] */
 438:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = (b2 * Xn1) + (a2 * acc1);
 155              		.loc 1 438 0
 156 00d0 0A98     		ldr	r0, [sp, #40]
 157 00d2 0B99     		ldr	r1, [sp, #44]
 158 00d4 009A     		ldr	r2, [sp]
 159 00d6 019B     		ldr	r3, [sp, #4]
 160 00d8 FFF7FEFF 		bl	__aeabi_dmul
 161 00dc 0090     		str	r0, [sp]
 162 00de 0191     		str	r1, [sp, #4]
 163 00e0 0E98     		ldr	r0, [sp, #56]
 164 00e2 0F99     		ldr	r1, [sp, #60]
 165 00e4 221C     		mov	r2, r4
 166 00e6 2B1C     		mov	r3, r5
 167 00e8 FFF7FEFF 		bl	__aeabi_dmul
 168 00ec 021C     		mov	r2, r0
 169 00ee 0B1C     		mov	r3, r1
 170 00f0 0098     		ldr	r0, [sp]
 171 00f2 0199     		ldr	r1, [sp, #4]
 172 00f4 FFF7FEFF 		bl	__aeabi_dadd
 173 00f8 0490     		str	r0, [sp, #16]
 174 00fa 0591     		str	r1, [sp, #20]
 439:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 440:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* decrement the loop counter */
 441:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          sample--;
 175              		.loc 1 441 0
 176 00fc 013E     		sub	r6, r6, #1
 422:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       {
 177              		.loc 1 422 0
 178 00fe 002E     		cmp	r6, #0
 179 0100 B8D1     		bne	.L3
 180              	.L2:
 442:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       }
 443:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 444:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /* Store the updated state variables back into the state array */
 445:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       *pState++ = d1;
 181              		.loc 1 445 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 12


 182 0102 119B     		ldr	r3, [sp, #68]
 183 0104 0299     		ldr	r1, [sp, #8]
 184 0106 039A     		ldr	r2, [sp, #12]
 185 0108 1960     		str	r1, [r3]
 186 010a 5A60     		str	r2, [r3, #4]
 446:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       *pState++ = d2;
 187              		.loc 1 446 0
 188 010c 0499     		ldr	r1, [sp, #16]
 189 010e 059A     		ldr	r2, [sp, #20]
 190 0110 9960     		str	r1, [r3, #8]
 191 0112 DA60     		str	r2, [r3, #12]
 447:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 448:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /* The current stage input is given as the output to the next stage */
 449:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       pIn = pDst;
 450:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 451:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /*Reset the output working pointer */
 452:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       pOut = pDst;
 453:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 454:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /* decrement the loop counter */
 455:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       stage--;
 192              		.loc 1 455 0
 193 0114 109B     		ldr	r3, [sp, #64]
 194 0116 013B     		sub	r3, r3, #1
 195 0118 1093     		str	r3, [sp, #64]
 196 011a 1022     		mov	r2, #16
 197 011c 9446     		mov	ip, r2
 198 011e E344     		add	fp, fp, ip
 199 0120 1832     		add	r2, r2, #24
 200 0122 9446     		mov	ip, r2
 201 0124 E244     		add	r10, r10, ip
 449:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 202              		.loc 1 449 0
 203 0126 1299     		ldr	r1, [sp, #72]
 456:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 457:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    } while (stage > 0u);
 204              		.loc 1 457 0
 205 0128 002B     		cmp	r3, #0
 206 012a 00D0     		beq	.LCB131
 207 012c 78E7     		b	.L4	@long jump
 208              	.LCB131:
 458:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 459:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** #else
 460:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 461:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    float64_t Xn2, Xn3, Xn4;                  	  /*  Input State variables     */
 462:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    float64_t acc2, acc3, acc4;              		  /*  accumulator               */
 463:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 464:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 465:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    float64_t p0, p1, p2, p3, p4, A1;
 466:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 467:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    /* Run the below code for Cortex-M4 and Cortex-M3 */
 468:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    do
 469:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    {
 470:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /* Reading the coefficients */
 471:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       b0 = *pCoeffs++;
 472:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       b1 = *pCoeffs++;
 473:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       b2 = *pCoeffs++;
 474:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       a1 = *pCoeffs++;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 13


 475:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       a2 = *pCoeffs++;
 476:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 477:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 478:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /*Reading the state values */
 479:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       d1 = pState[0];
 480:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       d2 = pState[1];
 481:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 482:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /* Apply loop unrolling and compute 4 output values simultaneously. */
 483:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       sample = blockSize >> 2u;
 484:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 485:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
 486:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
 487:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       while (sample > 0u) {
 488:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 489:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* y[n] = b0 * x[n] + d1 */
 490:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* d1 = b1 * x[n] + a1 * y[n] + d2 */
 491:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* d2 = b2 * x[n] + a2 * y[n] */
 492:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 493:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          /* Read the four inputs */
 494:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn1 = pIn[0];
 495:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn2 = pIn[1];
 496:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn3 = pIn[2];
 497:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn4 = pIn[3];
 498:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pIn += 4;
 499:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 500:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p0 = b0 * Xn1;
 501:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p1 = b1 * Xn1;
 502:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc1 = p0 + d1;
 503:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p0 = b0 * Xn2;
 504:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p3 = a1 * acc1;
 505:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p2 = b2 * Xn1;
 506:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          A1 = p1 + p3;
 507:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p4 = a2 * acc1;
 508:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = A1 + d2;
 509:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = p2 + p4;
 510:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 511:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p1 = b1 * Xn2;
 512:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc2 = p0 + d1;
 513:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p0 = b0 * Xn3;
 514:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p3 = a1 * acc2;
 515:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p2 = b2 * Xn2;
 516:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          A1 = p1 + p3;
 517:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p4 = a2 * acc2;
 518:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = A1 + d2;
 519:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = p2 + p4;
 520:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 521:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p1 = b1 * Xn3;
 522:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc3 = p0 + d1;
 523:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p0 = b0 * Xn4;
 524:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p3 = a1 * acc3;
 525:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p2 = b2 * Xn3;
 526:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          A1 = p1 + p3;
 527:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p4 = a2 * acc3;
 528:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = A1 + d2;
 529:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = p2 + p4;
 530:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 531:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc4 = p0 + d1;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 14


 532:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p1 = b1 * Xn4;
 533:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p3 = a1 * acc4;
 534:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p2 = b2 * Xn4;
 535:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          A1 = p1 + p3;
 536:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p4 = a2 * acc4;
 537:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = A1 + d2;
 538:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = p2 + p4;
 539:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 540:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[0] = acc1;
 541:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[1] = acc2;
 542:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[2] = acc3;
 543:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          pOut[3] = acc4;
 544:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 				 pOut += 4;
 545:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 546:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          sample--;
 547:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       }
 548:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 549:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       sample = blockSize & 0x3u;
 550:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       while (sample > 0u) {
 551:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          Xn1 = *pIn++;
 552:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 553:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p0 = b0 * Xn1;
 554:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p1 = b1 * Xn1;
 555:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          acc1 = p0 + d1;
 556:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p3 = a1 * acc1;
 557:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p2 = b2 * Xn1;
 558:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          A1 = p1 + p3;
 559:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          p4 = a2 * acc1;
 560:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d1 = A1 + d2;
 561:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          d2 = p2 + p4;
 562:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 563:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          *pOut++ = acc1;
 564:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 565:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****          sample--;
 566:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       }
 567:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 568:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /* Store the updated state variables back into the state array */
 569:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       *pState++ = d1;
 570:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       *pState++ = d2;
 571:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 572:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /* The current stage input is given as the output to the next stage */
 573:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       pIn = pDst;
 574:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 575:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /*Reset the output working pointer */
 576:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       pOut = pDst;
 577:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 578:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       /* decrement the loop counter */
 579:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****       stage--;
 580:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 581:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c ****    } while (stage > 0u);
 582:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 583:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** #endif
 584:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** 
 585:Source\FilteringFunctions/arm_biquad_cascade_df2T_f64.c **** }
 209              		.loc 1 585 0
 210 012e 14B0     		add	sp, sp, #80
 211              		@ sp needed
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 15


 212 0130 3CBC     		pop	{r2, r3, r4, r5}
 213 0132 9046     		mov	r8, r2
 214 0134 9946     		mov	r9, r3
 215 0136 A246     		mov	r10, r4
 216 0138 AB46     		mov	fp, r5
 217 013a 70BD     		pop	{r4, r5, r6, pc}
 218              		.cfi_endproc
 219              	.LFE82:
 220              		.size	arm_biquad_cascade_df2T_f64, .-arm_biquad_cascade_df2T_f64
 221              		.text
 222              	.Letext0:
 223              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 224              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 225              		.file 4 ".\\Include/arm_math.h"
 226              		.section	.debug_info,"",%progbits
 227              	.Ldebug_info0:
 228 0000 F7010000 		.4byte	0x1f7
 229 0004 0400     		.2byte	0x4
 230 0006 00000000 		.4byte	.Ldebug_abbrev0
 231 000a 04       		.byte	0x4
 232 000b 01       		.uleb128 0x1
 233 000c EA000000 		.4byte	.LASF30
 234 0010 01       		.byte	0x1
 235 0011 24020000 		.4byte	.LASF31
 236 0015 23000000 		.4byte	.LASF32
 237 0019 00000000 		.4byte	.Ldebug_ranges0+0
 238 001d 00000000 		.4byte	0
 239 0021 00000000 		.4byte	.Ldebug_line0
 240 0025 02       		.uleb128 0x2
 241 0026 01       		.byte	0x1
 242 0027 06       		.byte	0x6
 243 0028 18020000 		.4byte	.LASF0
 244 002c 03       		.uleb128 0x3
 245 002d 00000000 		.4byte	.LASF5
 246 0031 02       		.byte	0x2
 247 0032 1D       		.byte	0x1d
 248 0033 37000000 		.4byte	0x37
 249 0037 02       		.uleb128 0x2
 250 0038 01       		.byte	0x1
 251 0039 08       		.byte	0x8
 252 003a 7C000000 		.4byte	.LASF1
 253 003e 02       		.uleb128 0x2
 254 003f 02       		.byte	0x2
 255 0040 05       		.byte	0x5
 256 0041 CE010000 		.4byte	.LASF2
 257 0045 02       		.uleb128 0x2
 258 0046 02       		.byte	0x2
 259 0047 07       		.byte	0x7
 260 0048 9C000000 		.4byte	.LASF3
 261 004c 02       		.uleb128 0x2
 262 004d 04       		.byte	0x4
 263 004e 05       		.byte	0x5
 264 004f 1A000000 		.4byte	.LASF4
 265 0053 03       		.uleb128 0x3
 266 0054 BB000000 		.4byte	.LASF6
 267 0058 02       		.byte	0x2
 268 0059 41       		.byte	0x41
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 16


 269 005a 5E000000 		.4byte	0x5e
 270 005e 02       		.uleb128 0x2
 271 005f 04       		.byte	0x4
 272 0060 07       		.byte	0x7
 273 0061 8A000000 		.4byte	.LASF7
 274 0065 02       		.uleb128 0x2
 275 0066 08       		.byte	0x8
 276 0067 05       		.byte	0x5
 277 0068 AA010000 		.4byte	.LASF8
 278 006c 02       		.uleb128 0x2
 279 006d 08       		.byte	0x8
 280 006e 07       		.byte	0x7
 281 006f D3000000 		.4byte	.LASF9
 282 0073 04       		.uleb128 0x4
 283 0074 04       		.byte	0x4
 284 0075 05       		.byte	0x5
 285 0076 696E7400 		.ascii	"int\000"
 286 007a 02       		.uleb128 0x2
 287 007b 04       		.byte	0x4
 288 007c 07       		.byte	0x7
 289 007d C6000000 		.4byte	.LASF10
 290 0081 03       		.uleb128 0x3
 291 0082 69000000 		.4byte	.LASF11
 292 0086 03       		.byte	0x3
 293 0087 15       		.byte	0x15
 294 0088 2C000000 		.4byte	0x2c
 295 008c 03       		.uleb128 0x3
 296 008d FC010000 		.4byte	.LASF12
 297 0091 03       		.byte	0x3
 298 0092 2D       		.byte	0x2d
 299 0093 53000000 		.4byte	0x53
 300 0097 02       		.uleb128 0x2
 301 0098 04       		.byte	0x4
 302 0099 07       		.byte	0x7
 303 009a A1010000 		.4byte	.LASF13
 304 009e 02       		.uleb128 0x2
 305 009f 01       		.byte	0x1
 306 00a0 08       		.byte	0x8
 307 00a1 C9010000 		.4byte	.LASF14
 308 00a5 02       		.uleb128 0x2
 309 00a6 08       		.byte	0x8
 310 00a7 04       		.byte	0x4
 311 00a8 B4000000 		.4byte	.LASF15
 312 00ac 02       		.uleb128 0x2
 313 00ad 04       		.byte	0x4
 314 00ae 04       		.byte	0x4
 315 00af 0A000000 		.4byte	.LASF16
 316 00b3 02       		.uleb128 0x2
 317 00b4 08       		.byte	0x8
 318 00b5 04       		.byte	0x4
 319 00b6 0C020000 		.4byte	.LASF17
 320 00ba 05       		.uleb128 0x5
 321 00bb 10000000 		.4byte	.LASF18
 322 00bf 04       		.byte	0x4
 323 00c0 AA01     		.2byte	0x1aa
 324 00c2 A5000000 		.4byte	0xa5
 325 00c6 06       		.uleb128 0x6
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 17


 326 00c7 04       		.byte	0x4
 327 00c8 BA000000 		.4byte	0xba
 328 00cc 07       		.uleb128 0x7
 329 00cd 0C       		.byte	0xc
 330 00ce 04       		.byte	0x4
 331 00cf 6D0E     		.2byte	0xe6d
 332 00d1 FD000000 		.4byte	0xfd
 333 00d5 08       		.uleb128 0x8
 334 00d6 61020000 		.4byte	.LASF19
 335 00da 04       		.byte	0x4
 336 00db 6F0E     		.2byte	0xe6f
 337 00dd 81000000 		.4byte	0x81
 338 00e1 00       		.byte	0
 339 00e2 08       		.uleb128 0x8
 340 00e3 C2010000 		.4byte	.LASF20
 341 00e7 04       		.byte	0x4
 342 00e8 700E     		.2byte	0xe70
 343 00ea C6000000 		.4byte	0xc6
 344 00ee 04       		.byte	0x4
 345 00ef 08       		.uleb128 0x8
 346 00f0 F4010000 		.4byte	.LASF21
 347 00f4 04       		.byte	0x4
 348 00f5 710E     		.2byte	0xe71
 349 00f7 C6000000 		.4byte	0xc6
 350 00fb 08       		.byte	0x8
 351 00fc 00       		.byte	0
 352 00fd 05       		.uleb128 0x5
 353 00fe 7C010000 		.4byte	.LASF22
 354 0102 04       		.byte	0x4
 355 0103 720E     		.2byte	0xe72
 356 0105 CC000000 		.4byte	0xcc
 357 0109 09       		.uleb128 0x9
 358 010a D8010000 		.4byte	.LASF33
 359 010e 01       		.byte	0x1
 360 010f 8E       		.byte	0x8e
 361 0110 00000000 		.4byte	.LFB82
 362 0114 3C010000 		.4byte	.LFE82-.LFB82
 363 0118 01       		.uleb128 0x1
 364 0119 9C       		.byte	0x9c
 365 011a EF010000 		.4byte	0x1ef
 366 011e 0A       		.uleb128 0xa
 367 011f 5300     		.ascii	"S\000"
 368 0121 01       		.byte	0x1
 369 0122 8F       		.byte	0x8f
 370 0123 EF010000 		.4byte	0x1ef
 371 0127 01       		.uleb128 0x1
 372 0128 50       		.byte	0x50
 373 0129 0B       		.uleb128 0xb
 374 012a 5C020000 		.4byte	.LASF23
 375 012e 01       		.byte	0x1
 376 012f 90       		.byte	0x90
 377 0130 C6000000 		.4byte	0xc6
 378 0134 01       		.uleb128 0x1
 379 0135 51       		.byte	0x51
 380 0136 0B       		.uleb128 0xb
 381 0137 AF000000 		.4byte	.LASF24
 382 013b 01       		.byte	0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 18


 383 013c 91       		.byte	0x91
 384 013d C6000000 		.4byte	0xc6
 385 0141 01       		.uleb128 0x1
 386 0142 52       		.byte	0x52
 387 0143 0B       		.uleb128 0xb
 388 0144 B8010000 		.4byte	.LASF25
 389 0148 01       		.byte	0x1
 390 0149 92       		.byte	0x92
 391 014a 8C000000 		.4byte	0x8c
 392 014e 01       		.uleb128 0x1
 393 014f 53       		.byte	0x53
 394 0150 0C       		.uleb128 0xc
 395 0151 70496E00 		.ascii	"pIn\000"
 396 0155 01       		.byte	0x1
 397 0156 95       		.byte	0x95
 398 0157 C6000000 		.4byte	0xc6
 399 015b 0D       		.uleb128 0xd
 400 015c 77000000 		.4byte	.LASF26
 401 0160 01       		.byte	0x1
 402 0161 96       		.byte	0x96
 403 0162 C6000000 		.4byte	0xc6
 404 0166 0D       		.uleb128 0xd
 405 0167 C2010000 		.4byte	.LASF20
 406 016b 01       		.byte	0x1
 407 016c 97       		.byte	0x97
 408 016d C6000000 		.4byte	0xc6
 409 0171 0D       		.uleb128 0xd
 410 0172 F4010000 		.4byte	.LASF21
 411 0176 01       		.byte	0x1
 412 0177 98       		.byte	0x98
 413 0178 C6000000 		.4byte	0xc6
 414 017c 0D       		.uleb128 0xd
 415 017d 6B020000 		.4byte	.LASF27
 416 0181 01       		.byte	0x1
 417 0182 99       		.byte	0x99
 418 0183 BA000000 		.4byte	0xba
 419 0187 0C       		.uleb128 0xc
 420 0188 623000   		.ascii	"b0\000"
 421 018b 01       		.byte	0x1
 422 018c 9A       		.byte	0x9a
 423 018d BA000000 		.4byte	0xba
 424 0191 0C       		.uleb128 0xc
 425 0192 623100   		.ascii	"b1\000"
 426 0195 01       		.byte	0x1
 427 0196 9A       		.byte	0x9a
 428 0197 BA000000 		.4byte	0xba
 429 019b 0C       		.uleb128 0xc
 430 019c 623200   		.ascii	"b2\000"
 431 019f 01       		.byte	0x1
 432 01a0 9A       		.byte	0x9a
 433 01a1 BA000000 		.4byte	0xba
 434 01a5 0C       		.uleb128 0xc
 435 01a6 613100   		.ascii	"a1\000"
 436 01a9 01       		.byte	0x1
 437 01aa 9A       		.byte	0x9a
 438 01ab BA000000 		.4byte	0xba
 439 01af 0C       		.uleb128 0xc
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 19


 440 01b0 613200   		.ascii	"a2\000"
 441 01b3 01       		.byte	0x1
 442 01b4 9A       		.byte	0x9a
 443 01b5 BA000000 		.4byte	0xba
 444 01b9 0C       		.uleb128 0xc
 445 01ba 586E3100 		.ascii	"Xn1\000"
 446 01be 01       		.byte	0x1
 447 01bf 9B       		.byte	0x9b
 448 01c0 BA000000 		.4byte	0xba
 449 01c4 0C       		.uleb128 0xc
 450 01c5 643100   		.ascii	"d1\000"
 451 01c8 01       		.byte	0x1
 452 01c9 9C       		.byte	0x9c
 453 01ca BA000000 		.4byte	0xba
 454 01ce 0C       		.uleb128 0xc
 455 01cf 643200   		.ascii	"d2\000"
 456 01d2 01       		.byte	0x1
 457 01d3 9C       		.byte	0x9c
 458 01d4 BA000000 		.4byte	0xba
 459 01d8 0D       		.uleb128 0xd
 460 01d9 05020000 		.4byte	.LASF28
 461 01dd 01       		.byte	0x1
 462 01de 9D       		.byte	0x9d
 463 01df 8C000000 		.4byte	0x8c
 464 01e3 0D       		.uleb128 0xd
 465 01e4 71000000 		.4byte	.LASF29
 466 01e8 01       		.byte	0x1
 467 01e9 9D       		.byte	0x9d
 468 01ea 8C000000 		.4byte	0x8c
 469 01ee 00       		.byte	0
 470 01ef 06       		.uleb128 0x6
 471 01f0 04       		.byte	0x4
 472 01f1 F5010000 		.4byte	0x1f5
 473 01f5 0E       		.uleb128 0xe
 474 01f6 FD000000 		.4byte	0xfd
 475 01fa 00       		.byte	0
 476              		.section	.debug_abbrev,"",%progbits
 477              	.Ldebug_abbrev0:
 478 0000 01       		.uleb128 0x1
 479 0001 11       		.uleb128 0x11
 480 0002 01       		.byte	0x1
 481 0003 25       		.uleb128 0x25
 482 0004 0E       		.uleb128 0xe
 483 0005 13       		.uleb128 0x13
 484 0006 0B       		.uleb128 0xb
 485 0007 03       		.uleb128 0x3
 486 0008 0E       		.uleb128 0xe
 487 0009 1B       		.uleb128 0x1b
 488 000a 0E       		.uleb128 0xe
 489 000b 55       		.uleb128 0x55
 490 000c 17       		.uleb128 0x17
 491 000d 11       		.uleb128 0x11
 492 000e 01       		.uleb128 0x1
 493 000f 10       		.uleb128 0x10
 494 0010 17       		.uleb128 0x17
 495 0011 00       		.byte	0
 496 0012 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 20


 497 0013 02       		.uleb128 0x2
 498 0014 24       		.uleb128 0x24
 499 0015 00       		.byte	0
 500 0016 0B       		.uleb128 0xb
 501 0017 0B       		.uleb128 0xb
 502 0018 3E       		.uleb128 0x3e
 503 0019 0B       		.uleb128 0xb
 504 001a 03       		.uleb128 0x3
 505 001b 0E       		.uleb128 0xe
 506 001c 00       		.byte	0
 507 001d 00       		.byte	0
 508 001e 03       		.uleb128 0x3
 509 001f 16       		.uleb128 0x16
 510 0020 00       		.byte	0
 511 0021 03       		.uleb128 0x3
 512 0022 0E       		.uleb128 0xe
 513 0023 3A       		.uleb128 0x3a
 514 0024 0B       		.uleb128 0xb
 515 0025 3B       		.uleb128 0x3b
 516 0026 0B       		.uleb128 0xb
 517 0027 49       		.uleb128 0x49
 518 0028 13       		.uleb128 0x13
 519 0029 00       		.byte	0
 520 002a 00       		.byte	0
 521 002b 04       		.uleb128 0x4
 522 002c 24       		.uleb128 0x24
 523 002d 00       		.byte	0
 524 002e 0B       		.uleb128 0xb
 525 002f 0B       		.uleb128 0xb
 526 0030 3E       		.uleb128 0x3e
 527 0031 0B       		.uleb128 0xb
 528 0032 03       		.uleb128 0x3
 529 0033 08       		.uleb128 0x8
 530 0034 00       		.byte	0
 531 0035 00       		.byte	0
 532 0036 05       		.uleb128 0x5
 533 0037 16       		.uleb128 0x16
 534 0038 00       		.byte	0
 535 0039 03       		.uleb128 0x3
 536 003a 0E       		.uleb128 0xe
 537 003b 3A       		.uleb128 0x3a
 538 003c 0B       		.uleb128 0xb
 539 003d 3B       		.uleb128 0x3b
 540 003e 05       		.uleb128 0x5
 541 003f 49       		.uleb128 0x49
 542 0040 13       		.uleb128 0x13
 543 0041 00       		.byte	0
 544 0042 00       		.byte	0
 545 0043 06       		.uleb128 0x6
 546 0044 0F       		.uleb128 0xf
 547 0045 00       		.byte	0
 548 0046 0B       		.uleb128 0xb
 549 0047 0B       		.uleb128 0xb
 550 0048 49       		.uleb128 0x49
 551 0049 13       		.uleb128 0x13
 552 004a 00       		.byte	0
 553 004b 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 21


 554 004c 07       		.uleb128 0x7
 555 004d 13       		.uleb128 0x13
 556 004e 01       		.byte	0x1
 557 004f 0B       		.uleb128 0xb
 558 0050 0B       		.uleb128 0xb
 559 0051 3A       		.uleb128 0x3a
 560 0052 0B       		.uleb128 0xb
 561 0053 3B       		.uleb128 0x3b
 562 0054 05       		.uleb128 0x5
 563 0055 01       		.uleb128 0x1
 564 0056 13       		.uleb128 0x13
 565 0057 00       		.byte	0
 566 0058 00       		.byte	0
 567 0059 08       		.uleb128 0x8
 568 005a 0D       		.uleb128 0xd
 569 005b 00       		.byte	0
 570 005c 03       		.uleb128 0x3
 571 005d 0E       		.uleb128 0xe
 572 005e 3A       		.uleb128 0x3a
 573 005f 0B       		.uleb128 0xb
 574 0060 3B       		.uleb128 0x3b
 575 0061 05       		.uleb128 0x5
 576 0062 49       		.uleb128 0x49
 577 0063 13       		.uleb128 0x13
 578 0064 38       		.uleb128 0x38
 579 0065 0B       		.uleb128 0xb
 580 0066 00       		.byte	0
 581 0067 00       		.byte	0
 582 0068 09       		.uleb128 0x9
 583 0069 2E       		.uleb128 0x2e
 584 006a 01       		.byte	0x1
 585 006b 3F       		.uleb128 0x3f
 586 006c 19       		.uleb128 0x19
 587 006d 03       		.uleb128 0x3
 588 006e 0E       		.uleb128 0xe
 589 006f 3A       		.uleb128 0x3a
 590 0070 0B       		.uleb128 0xb
 591 0071 3B       		.uleb128 0x3b
 592 0072 0B       		.uleb128 0xb
 593 0073 27       		.uleb128 0x27
 594 0074 19       		.uleb128 0x19
 595 0075 11       		.uleb128 0x11
 596 0076 01       		.uleb128 0x1
 597 0077 12       		.uleb128 0x12
 598 0078 06       		.uleb128 0x6
 599 0079 40       		.uleb128 0x40
 600 007a 18       		.uleb128 0x18
 601 007b 9642     		.uleb128 0x2116
 602 007d 19       		.uleb128 0x19
 603 007e 01       		.uleb128 0x1
 604 007f 13       		.uleb128 0x13
 605 0080 00       		.byte	0
 606 0081 00       		.byte	0
 607 0082 0A       		.uleb128 0xa
 608 0083 05       		.uleb128 0x5
 609 0084 00       		.byte	0
 610 0085 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 22


 611 0086 08       		.uleb128 0x8
 612 0087 3A       		.uleb128 0x3a
 613 0088 0B       		.uleb128 0xb
 614 0089 3B       		.uleb128 0x3b
 615 008a 0B       		.uleb128 0xb
 616 008b 49       		.uleb128 0x49
 617 008c 13       		.uleb128 0x13
 618 008d 02       		.uleb128 0x2
 619 008e 18       		.uleb128 0x18
 620 008f 00       		.byte	0
 621 0090 00       		.byte	0
 622 0091 0B       		.uleb128 0xb
 623 0092 05       		.uleb128 0x5
 624 0093 00       		.byte	0
 625 0094 03       		.uleb128 0x3
 626 0095 0E       		.uleb128 0xe
 627 0096 3A       		.uleb128 0x3a
 628 0097 0B       		.uleb128 0xb
 629 0098 3B       		.uleb128 0x3b
 630 0099 0B       		.uleb128 0xb
 631 009a 49       		.uleb128 0x49
 632 009b 13       		.uleb128 0x13
 633 009c 02       		.uleb128 0x2
 634 009d 18       		.uleb128 0x18
 635 009e 00       		.byte	0
 636 009f 00       		.byte	0
 637 00a0 0C       		.uleb128 0xc
 638 00a1 34       		.uleb128 0x34
 639 00a2 00       		.byte	0
 640 00a3 03       		.uleb128 0x3
 641 00a4 08       		.uleb128 0x8
 642 00a5 3A       		.uleb128 0x3a
 643 00a6 0B       		.uleb128 0xb
 644 00a7 3B       		.uleb128 0x3b
 645 00a8 0B       		.uleb128 0xb
 646 00a9 49       		.uleb128 0x49
 647 00aa 13       		.uleb128 0x13
 648 00ab 00       		.byte	0
 649 00ac 00       		.byte	0
 650 00ad 0D       		.uleb128 0xd
 651 00ae 34       		.uleb128 0x34
 652 00af 00       		.byte	0
 653 00b0 03       		.uleb128 0x3
 654 00b1 0E       		.uleb128 0xe
 655 00b2 3A       		.uleb128 0x3a
 656 00b3 0B       		.uleb128 0xb
 657 00b4 3B       		.uleb128 0x3b
 658 00b5 0B       		.uleb128 0xb
 659 00b6 49       		.uleb128 0x49
 660 00b7 13       		.uleb128 0x13
 661 00b8 00       		.byte	0
 662 00b9 00       		.byte	0
 663 00ba 0E       		.uleb128 0xe
 664 00bb 26       		.uleb128 0x26
 665 00bc 00       		.byte	0
 666 00bd 49       		.uleb128 0x49
 667 00be 13       		.uleb128 0x13
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 23


 668 00bf 00       		.byte	0
 669 00c0 00       		.byte	0
 670 00c1 00       		.byte	0
 671              		.section	.debug_aranges,"",%progbits
 672 0000 1C000000 		.4byte	0x1c
 673 0004 0200     		.2byte	0x2
 674 0006 00000000 		.4byte	.Ldebug_info0
 675 000a 04       		.byte	0x4
 676 000b 00       		.byte	0
 677 000c 0000     		.2byte	0
 678 000e 0000     		.2byte	0
 679 0010 00000000 		.4byte	.LFB82
 680 0014 3C010000 		.4byte	.LFE82-.LFB82
 681 0018 00000000 		.4byte	0
 682 001c 00000000 		.4byte	0
 683              		.section	.debug_ranges,"",%progbits
 684              	.Ldebug_ranges0:
 685 0000 00000000 		.4byte	.LFB82
 686 0004 3C010000 		.4byte	.LFE82
 687 0008 00000000 		.4byte	0
 688 000c 00000000 		.4byte	0
 689              		.section	.debug_line,"",%progbits
 690              	.Ldebug_line0:
 691 0000 9C010000 		.section	.debug_str,"MS",%progbits,1
 691      02005E01 
 691      00000201 
 691      FB0E0D00 
 691      01010101 
 692              	.LASF5:
 693 0000 5F5F7569 		.ascii	"__uint8_t\000"
 693      6E74385F 
 693      7400
 694              	.LASF16:
 695 000a 666C6F61 		.ascii	"float\000"
 695      7400
 696              	.LASF18:
 697 0010 666C6F61 		.ascii	"float64_t\000"
 697      7436345F 
 697      7400
 698              	.LASF4:
 699 001a 6C6F6E67 		.ascii	"long int\000"
 699      20696E74 
 699      00
 700              	.LASF32:
 701 0023 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 701      73657273 
 701      5C666E65 
 701      7665735C 
 701      446F6375 
 702 0050 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 702      655F7370 
 702      6565645F 
 702      73656E73 
 702      6F722E63 
 703              	.LASF11:
 704 0069 75696E74 		.ascii	"uint8_t\000"
 704      385F7400 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 24


 705              	.LASF29:
 706 0071 73746167 		.ascii	"stage\000"
 706      6500
 707              	.LASF26:
 708 0077 704F7574 		.ascii	"pOut\000"
 708      00
 709              	.LASF1:
 710 007c 756E7369 		.ascii	"unsigned char\000"
 710      676E6564 
 710      20636861 
 710      7200
 711              	.LASF7:
 712 008a 6C6F6E67 		.ascii	"long unsigned int\000"
 712      20756E73 
 712      69676E65 
 712      6420696E 
 712      7400
 713              	.LASF3:
 714 009c 73686F72 		.ascii	"short unsigned int\000"
 714      7420756E 
 714      7369676E 
 714      65642069 
 714      6E7400
 715              	.LASF24:
 716 00af 70447374 		.ascii	"pDst\000"
 716      00
 717              	.LASF15:
 718 00b4 646F7562 		.ascii	"double\000"
 718      6C6500
 719              	.LASF6:
 720 00bb 5F5F7569 		.ascii	"__uint32_t\000"
 720      6E743332 
 720      5F7400
 721              	.LASF10:
 722 00c6 756E7369 		.ascii	"unsigned int\000"
 722      676E6564 
 722      20696E74 
 722      00
 723              	.LASF9:
 724 00d3 6C6F6E67 		.ascii	"long long unsigned int\000"
 724      206C6F6E 
 724      6720756E 
 724      7369676E 
 724      65642069 
 725              	.LASF30:
 726 00ea 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 726      4320342E 
 726      392E3320 
 726      32303135 
 726      30333033 
 727 011d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 727      20726576 
 727      6973696F 
 727      6E203232 
 727      31323230 
 728 0150 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 728      30202D66 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 25


 728      66756E63 
 728      74696F6E 
 728      2D736563 
 729              	.LASF22:
 730 017c 61726D5F 		.ascii	"arm_biquad_cascade_df2T_instance_f64\000"
 730      62697175 
 730      61645F63 
 730      61736361 
 730      64655F64 
 731              	.LASF13:
 732 01a1 73697A65 		.ascii	"sizetype\000"
 732      74797065 
 732      00
 733              	.LASF8:
 734 01aa 6C6F6E67 		.ascii	"long long int\000"
 734      206C6F6E 
 734      6720696E 
 734      7400
 735              	.LASF25:
 736 01b8 626C6F63 		.ascii	"blockSize\000"
 736      6B53697A 
 736      6500
 737              	.LASF20:
 738 01c2 70537461 		.ascii	"pState\000"
 738      746500
 739              	.LASF14:
 740 01c9 63686172 		.ascii	"char\000"
 740      00
 741              	.LASF2:
 742 01ce 73686F72 		.ascii	"short int\000"
 742      7420696E 
 742      7400
 743              	.LASF33:
 744 01d8 61726D5F 		.ascii	"arm_biquad_cascade_df2T_f64\000"
 744      62697175 
 744      61645F63 
 744      61736361 
 744      64655F64 
 745              	.LASF21:
 746 01f4 70436F65 		.ascii	"pCoeffs\000"
 746      66667300 
 747              	.LASF12:
 748 01fc 75696E74 		.ascii	"uint32_t\000"
 748      33325F74 
 748      00
 749              	.LASF28:
 750 0205 73616D70 		.ascii	"sample\000"
 750      6C6500
 751              	.LASF17:
 752 020c 6C6F6E67 		.ascii	"long double\000"
 752      20646F75 
 752      626C6500 
 753              	.LASF0:
 754 0218 7369676E 		.ascii	"signed char\000"
 754      65642063 
 754      68617200 
 755              	.LASF31:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccFFq45p.s 			page 26


 756 0224 536F7572 		.ascii	"Source\\FilteringFunctions\\arm_biquad_cascade_df2T"
 756      63655C46 
 756      696C7465 
 756      72696E67 
 756      46756E63 
 757 0255 5F663634 		.ascii	"_f64.c\000"
 757      2E6300
 758              	.LASF23:
 759 025c 70537263 		.ascii	"pSrc\000"
 759      00
 760              	.LASF19:
 761 0261 6E756D53 		.ascii	"numStages\000"
 761      74616765 
 761      7300
 762              	.LASF27:
 763 026b 61636331 		.ascii	"acc1\000"
 763      00
 764              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
