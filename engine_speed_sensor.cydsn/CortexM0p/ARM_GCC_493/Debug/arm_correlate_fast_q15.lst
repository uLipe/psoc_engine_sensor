ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_correlate_fast_q15.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.arm_correlate_fast_q15,"ax",%progbits
  18              		.align	2
  19              		.global	arm_correlate_fast_q15
  20              		.code	16
  21              		.thumb_func
  22              		.type	arm_correlate_fast_q15, %function
  23              	arm_correlate_fast_q15:
  24              	.LFB82:
  25              		.file 1 "Source\\FilteringFunctions\\arm_correlate_fast_q15.c"
   1:Source\FilteringFunctions/arm_correlate_fast_q15.c **** /* ----------------------------------------------------------------------
   2:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * Project:      CMSIS DSP Library
   3:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * Title:        arm_correlate_fast_q15.c
   4:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * Description:  Fast Q15 Correlation
   5:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  *
   6:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * $Date:        27. January 2017
   7:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * $Revision:    V.1.5.1
   8:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  *
   9:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * Target Processor: Cortex-M cores
  10:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * -------------------------------------------------------------------- */
  11:Source\FilteringFunctions/arm_correlate_fast_q15.c **** /*
  12:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  *
  14:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  *
  16:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * not use this file except in compliance with the License.
  18:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * You may obtain a copy of the License at
  19:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  *
  20:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  *
  22:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * See the License for the specific language governing permissions and
  26:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * limitations under the License.
  27:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  */
  28:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
  29:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #include "arm_math.h"
  30:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
  31:Source\FilteringFunctions/arm_correlate_fast_q15.c **** /**
  32:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * @ingroup groupFilters
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 2


  33:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  */
  34:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
  35:Source\FilteringFunctions/arm_correlate_fast_q15.c **** /**
  36:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * @addtogroup Corr
  37:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * @{
  38:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  */
  39:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
  40:Source\FilteringFunctions/arm_correlate_fast_q15.c **** /**
  41:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
  42:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * @param[in] *pSrcA points to the first input sequence.
  43:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * @param[in] srcALen length of the first input sequence.
  44:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * @param[in] *pSrcB points to the second input sequence.
  45:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * @param[in] srcBLen length of the second input sequence.
  46:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * @param[out] *pDst points to the location where the output result is written.  Length 2 * max(src
  47:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * @return none.
  48:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  *
  49:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * <b>Scaling and Overflow Behavior:</b>
  50:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  *
  51:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * \par
  52:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * This fast version uses a 32-bit accumulator with 2.30 format.
  53:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * The accumulator maintains full precision of the intermediate multiplication results but provides
  54:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * There is no saturation on intermediate additions.
  55:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * Thus, if the accumulator overflows it wraps around and distorts the result.
  56:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * The input signals should be scaled down to avoid intermediate overflows.
  57:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * Scale down one of the inputs by 1/min(srcALen, srcBLen) to avoid overflow since a
  58:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * maximum of min(srcALen, srcBLen) number of additions is carried internally.
  59:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * The 2.30 accumulator is right shifted by 15 bits and then saturated to 1.15 format to yield the 
  60:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  *
  61:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * \par
  62:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  * See <code>arm_correlate_q15()</code> for a slower implementation of this function which uses a 6
  63:Source\FilteringFunctions/arm_correlate_fast_q15.c ****  */
  64:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
  65:Source\FilteringFunctions/arm_correlate_fast_q15.c **** void arm_correlate_fast_q15(
  66:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q15_t * pSrcA,
  67:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   uint32_t srcALen,
  68:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q15_t * pSrcB,
  69:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   uint32_t srcBLen,
  70:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q15_t * pDst)
  71:Source\FilteringFunctions/arm_correlate_fast_q15.c **** {
  26              		.loc 1 71 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 F8B0     		sub	sp, sp, #480
  33              		.cfi_def_cfa_offset 488
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  36 0006 F860     		str	r0, [r7, #12]
  37 0008 B960     		str	r1, [r7, #8]
  38 000a 7A60     		str	r2, [r7, #4]
  39 000c 3B60     		str	r3, [r7]
  72:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
  73:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
  74:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q15_t *pIn1;                                   /* inputA pointer               */
  75:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q15_t *pIn2;                                   /* inputB pointer               */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 3


  76:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q15_t *pOut = pDst;                            /* output pointer               */
  40              		.loc 1 76 0
  41 000e F423     		mov	r3, #244
  42 0010 5B00     		lsl	r3, r3, #1
  43 0012 FB18     		add	r3, r7, r3
  44 0014 1B68     		ldr	r3, [r3]
  45 0016 EA22     		mov	r2, #234
  46 0018 5200     		lsl	r2, r2, #1
  47 001a BA18     		add	r2, r7, r2
  48 001c 1360     		str	r3, [r2]
  77:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q31_t sum, acc0, acc1, acc2, acc3;             /* Accumulators                  */
  78:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q15_t *px;                                     /* Intermediate inputA pointer  */
  79:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q15_t *py;                                     /* Intermediate inputB pointer  */
  80:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q15_t *pSrc1;                                  /* Intermediate pointers        */
  81:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q31_t x0, x1, x2, x3, c0;                      /* temporary variables for holding input and coeff
  82:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   uint32_t j, k = 0u, count, blkCnt, outBlockSize, blockSize1, blockSize2, blockSize3;  /* loop cou
  49              		.loc 1 82 0
  50 001e 0023     		mov	r3, #0
  51 0020 D822     		mov	r2, #216
  52 0022 5200     		lsl	r2, r2, #1
  53 0024 BA18     		add	r2, r7, r2
  54 0026 1360     		str	r3, [r2]
  83:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   int32_t inc = 1;                               /* Destination address modifier */
  55              		.loc 1 83 0
  56 0028 0123     		mov	r3, #1
  57 002a CE22     		mov	r2, #206
  58 002c 5200     		lsl	r2, r2, #1
  59 002e BA18     		add	r2, r7, r2
  60 0030 1360     		str	r3, [r2]
  84:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
  85:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
  86:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
  87:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* srcB is always made to slide across srcA. */
  88:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
  89:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* But CORR(x, y) is reverse of CORR(y, x) */
  90:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* So, when srcBLen > srcALen, output pointer is made to point to the end of the output buffer */
  91:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* and the destination pointer modifier, inc is set to -1 */
  92:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* If srcALen > srcBLen, zero pad has to be done to srcB to make the two inputs of same length */
  93:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* But to improve the performance,
  94:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * we include zeroes in the output instead of zero padding either of the the inputs*/
  95:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* If srcALen > srcBLen,
  96:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * (srcALen - srcBLen) zeroes has to included in the starting of the output buffer */
  97:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* If srcALen < srcBLen,
  98:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * (srcALen - srcBLen) zeroes has to included in the ending of the output buffer */
  99:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   if (srcALen >= srcBLen)
  61              		.loc 1 99 0
  62 0032 BA68     		ldr	r2, [r7, #8]
  63 0034 3B68     		ldr	r3, [r7]
  64 0036 9A42     		cmp	r2, r3
  65 0038 2CD3     		bcc	.L2
 100:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   {
 101:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Initialization of inputA pointer */
 102:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     pIn1 = (pSrcA);
  66              		.loc 1 102 0
  67 003a FB68     		ldr	r3, [r7, #12]
  68 003c EE22     		mov	r2, #238
  69 003e 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 4


  70 0040 BA18     		add	r2, r7, r2
  71 0042 1360     		str	r3, [r2]
 103:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 104:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Initialization of inputB pointer */
 105:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     pIn2 = (pSrcB);
  72              		.loc 1 105 0
  73 0044 7B68     		ldr	r3, [r7, #4]
  74 0046 EC22     		mov	r2, #236
  75 0048 5200     		lsl	r2, r2, #1
  76 004a BA18     		add	r2, r7, r2
  77 004c 1360     		str	r3, [r2]
 106:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 107:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Number of output samples is calculated */
 108:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     outBlockSize = (2u * srcALen) - 1u;
  78              		.loc 1 108 0
  79 004e BB68     		ldr	r3, [r7, #8]
  80 0050 5B00     		lsl	r3, r3, #1
  81 0052 013B     		sub	r3, r3, #1
  82 0054 CC22     		mov	r2, #204
  83 0056 5200     		lsl	r2, r2, #1
  84 0058 BA18     		add	r2, r7, r2
  85 005a 1360     		str	r3, [r2]
 109:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 110:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* When srcALen > srcBLen, zero padding is done to srcB
 111:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      * to make their lengths equal.
 112:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      * Instead, (outBlockSize - (srcALen + srcBLen - 1))
 113:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      * number of output samples are made zero */
 114:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     j = outBlockSize - (srcALen + (srcBLen - 1u));
  86              		.loc 1 114 0
  87 005c 3A68     		ldr	r2, [r7]
  88 005e BB68     		ldr	r3, [r7, #8]
  89 0060 D318     		add	r3, r2, r3
  90 0062 CC22     		mov	r2, #204
  91 0064 5200     		lsl	r2, r2, #1
  92 0066 BA18     		add	r2, r7, r2
  93 0068 1268     		ldr	r2, [r2]
  94 006a D31A     		sub	r3, r2, r3
  95 006c 0133     		add	r3, r3, #1
  96 006e CA22     		mov	r2, #202
  97 0070 5200     		lsl	r2, r2, #1
  98 0072 BA18     		add	r2, r7, r2
  99 0074 1360     		str	r3, [r2]
 115:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 116:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Updating the pointer position to non zero value */
 117:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     pOut += j;
 100              		.loc 1 117 0
 101 0076 CA23     		mov	r3, #202
 102 0078 5B00     		lsl	r3, r3, #1
 103 007a FB18     		add	r3, r7, r3
 104 007c 1B68     		ldr	r3, [r3]
 105 007e 5B00     		lsl	r3, r3, #1
 106 0080 EA22     		mov	r2, #234
 107 0082 5200     		lsl	r2, r2, #1
 108 0084 BA18     		add	r2, r7, r2
 109 0086 1268     		ldr	r2, [r2]
 110 0088 D318     		add	r3, r2, r3
 111 008a EA22     		mov	r2, #234
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 5


 112 008c 5200     		lsl	r2, r2, #1
 113 008e BA18     		add	r2, r7, r2
 114 0090 1360     		str	r3, [r2]
 115 0092 2BE0     		b	.L3
 116              	.L2:
 118:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 119:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   }
 120:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   else
 121:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   {
 122:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Initialization of inputA pointer */
 123:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     pIn1 = (pSrcB);
 117              		.loc 1 123 0
 118 0094 7B68     		ldr	r3, [r7, #4]
 119 0096 EE22     		mov	r2, #238
 120 0098 5200     		lsl	r2, r2, #1
 121 009a BA18     		add	r2, r7, r2
 122 009c 1360     		str	r3, [r2]
 124:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 125:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Initialization of inputB pointer */
 126:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     pIn2 = (pSrcA);
 123              		.loc 1 126 0
 124 009e FB68     		ldr	r3, [r7, #12]
 125 00a0 EC22     		mov	r2, #236
 126 00a2 5200     		lsl	r2, r2, #1
 127 00a4 BA18     		add	r2, r7, r2
 128 00a6 1360     		str	r3, [r2]
 127:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 128:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 129:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     j = srcBLen;
 129              		.loc 1 129 0
 130 00a8 3B68     		ldr	r3, [r7]
 131 00aa CA22     		mov	r2, #202
 132 00ac 5200     		lsl	r2, r2, #1
 133 00ae BA18     		add	r2, r7, r2
 134 00b0 1360     		str	r3, [r2]
 130:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     srcBLen = srcALen;
 135              		.loc 1 130 0
 136 00b2 BB68     		ldr	r3, [r7, #8]
 137 00b4 3B60     		str	r3, [r7]
 131:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     srcALen = j;
 138              		.loc 1 131 0
 139 00b6 CA23     		mov	r3, #202
 140 00b8 5B00     		lsl	r3, r3, #1
 141 00ba FB18     		add	r3, r7, r3
 142 00bc 1B68     		ldr	r3, [r3]
 143 00be BB60     		str	r3, [r7, #8]
 132:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 133:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* CORR(x, y) = Reverse order(CORR(y, x)) */
 134:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Hence set the destination pointer to point to the last output sample */
 135:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     pOut = pDst + ((srcALen + srcBLen) - 2u);
 144              		.loc 1 135 0
 145 00c0 BA68     		ldr	r2, [r7, #8]
 146 00c2 3B68     		ldr	r3, [r7]
 147 00c4 D318     		add	r3, r2, r3
 148 00c6 CF4A     		ldr	r2, .L64
 149 00c8 9446     		mov	ip, r2
 150 00ca 6344     		add	r3, r3, ip
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 6


 151 00cc 5B00     		lsl	r3, r3, #1
 152 00ce F422     		mov	r2, #244
 153 00d0 5200     		lsl	r2, r2, #1
 154 00d2 BA18     		add	r2, r7, r2
 155 00d4 1268     		ldr	r2, [r2]
 156 00d6 D318     		add	r3, r2, r3
 157 00d8 EA22     		mov	r2, #234
 158 00da 5200     		lsl	r2, r2, #1
 159 00dc BA18     		add	r2, r7, r2
 160 00de 1360     		str	r3, [r2]
 136:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 137:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Destination address modifier is set to -1 */
 138:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     inc = -1;
 161              		.loc 1 138 0
 162 00e0 0123     		mov	r3, #1
 163 00e2 5B42     		neg	r3, r3
 164 00e4 CE22     		mov	r2, #206
 165 00e6 5200     		lsl	r2, r2, #1
 166 00e8 BA18     		add	r2, r7, r2
 167 00ea 1360     		str	r3, [r2]
 168              	.L3:
 139:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 140:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   }
 141:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 142:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* The function is internally
 143:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * divided into three parts according to the number of multiplications that has to be
 144:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * taken place between inputA samples and inputB samples. In the first part of the
 145:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * algorithm, the multiplications increase by one for every iteration.
 146:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * In the second part of the algorithm, srcBLen number of multiplications are done.
 147:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * In the third part of the algorithm, the multiplications decrease by one
 148:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * for every iteration.*/
 149:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* The algorithm is implemented in three stages.
 150:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * The loop counters of each stage is initiated here. */
 151:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   blockSize1 = srcBLen - 1u;
 169              		.loc 1 151 0
 170 00ec 3B68     		ldr	r3, [r7]
 171 00ee 013B     		sub	r3, r3, #1
 172 00f0 D222     		mov	r2, #210
 173 00f2 5200     		lsl	r2, r2, #1
 174 00f4 BA18     		add	r2, r7, r2
 175 00f6 1360     		str	r3, [r2]
 152:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   blockSize2 = srcALen - (srcBLen - 1u);
 176              		.loc 1 152 0
 177 00f8 BA68     		ldr	r2, [r7, #8]
 178 00fa 3B68     		ldr	r3, [r7]
 179 00fc D31A     		sub	r3, r2, r3
 180 00fe 0133     		add	r3, r3, #1
 181 0100 C822     		mov	r2, #200
 182 0102 5200     		lsl	r2, r2, #1
 183 0104 BA18     		add	r2, r7, r2
 184 0106 1360     		str	r3, [r2]
 153:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   blockSize3 = blockSize1;
 185              		.loc 1 153 0
 186 0108 D223     		mov	r3, #210
 187 010a 5B00     		lsl	r3, r3, #1
 188 010c FB18     		add	r3, r7, r3
 189 010e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 7


 190 0110 D022     		mov	r2, #208
 191 0112 5200     		lsl	r2, r2, #1
 192 0114 BA18     		add	r2, r7, r2
 193 0116 1360     		str	r3, [r2]
 154:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 155:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* --------------------------
 156:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * Initializations of stage1
 157:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * -------------------------*/
 158:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 159:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* sum = x[0] * y[srcBlen - 1]
 160:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * sum = x[0] * y[srcBlen - 2] + x[1] * y[srcBlen - 1]
 161:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * ....
 162:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * sum = x[0] * y[0] + x[1] * y[1] +...+ x[srcBLen - 1] * y[srcBLen - 1]
 163:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    */
 164:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 165:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* In this stage the MAC operations are increased by 1 for every iteration.
 166:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      The count variable holds the number of MAC operations performed */
 167:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   count = 1u;
 194              		.loc 1 167 0
 195 0118 0123     		mov	r3, #1
 196 011a D622     		mov	r2, #214
 197 011c 5200     		lsl	r2, r2, #1
 198 011e BA18     		add	r2, r7, r2
 199 0120 1360     		str	r3, [r2]
 168:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 169:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* Working pointer of inputA */
 170:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   px = pIn1;
 200              		.loc 1 170 0
 201 0122 EE23     		mov	r3, #238
 202 0124 5B00     		lsl	r3, r3, #1
 203 0126 FB18     		add	r3, r7, r3
 204 0128 1B68     		ldr	r3, [r3]
 205 012a BB61     		str	r3, [r7, #24]
 171:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 172:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* Working pointer of inputB */
 173:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   pSrc1 = pIn2 + (srcBLen - 1u);
 206              		.loc 1 173 0
 207 012c 3B68     		ldr	r3, [r7]
 208 012e B64A     		ldr	r2, .L64+4
 209 0130 9446     		mov	ip, r2
 210 0132 6344     		add	r3, r3, ip
 211 0134 5B00     		lsl	r3, r3, #1
 212 0136 EC22     		mov	r2, #236
 213 0138 5200     		lsl	r2, r2, #1
 214 013a BA18     		add	r2, r7, r2
 215 013c 1268     		ldr	r2, [r2]
 216 013e D318     		add	r3, r2, r3
 217 0140 DE22     		mov	r2, #222
 218 0142 5200     		lsl	r2, r2, #1
 219 0144 BA18     		add	r2, r7, r2
 220 0146 1360     		str	r3, [r2]
 174:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   py = pSrc1;
 221              		.loc 1 174 0
 222 0148 DE23     		mov	r3, #222
 223 014a 5B00     		lsl	r3, r3, #1
 224 014c FB18     		add	r3, r7, r3
 225 014e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 8


 226 0150 7B61     		str	r3, [r7, #20]
 175:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 176:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* ------------------------
 177:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * Stage1 process
 178:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * ----------------------*/
 179:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 180:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* The first loop starts here */
 181:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   while (blockSize1 > 0u)
 227              		.loc 1 181 0
 228 0152 30E1     		b	.L4
 229              	.L12:
 182:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   {
 183:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Accumulator is made zero for every iteration */
 184:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     sum = 0;
 230              		.loc 1 184 0
 231 0154 0023     		mov	r3, #0
 232 0156 E822     		mov	r2, #232
 233 0158 5200     		lsl	r2, r2, #1
 234 015a BA18     		add	r2, r7, r2
 235 015c 1360     		str	r3, [r2]
 185:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 186:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 187:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     k = count >> 2;
 236              		.loc 1 187 0
 237 015e D623     		mov	r3, #214
 238 0160 5B00     		lsl	r3, r3, #1
 239 0162 FB18     		add	r3, r7, r3
 240 0164 1B68     		ldr	r3, [r3]
 241 0166 9B08     		lsr	r3, r3, #2
 242 0168 D822     		mov	r2, #216
 243 016a 5200     		lsl	r2, r2, #1
 244 016c BA18     		add	r2, r7, r2
 245 016e 1360     		str	r3, [r2]
 188:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 189:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 190:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 191:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     while (k > 0u)
 246              		.loc 1 191 0
 247 0170 88E0     		b	.L5
 248              	.L8:
 192:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
 193:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* x[0] * y[srcBLen - 4] , x[1] * y[srcBLen - 3] */
 194:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       sum = __SMLAD(*__SIMD32(px)++, *__SIMD32(py)++, sum);
 249              		.loc 1 194 0
 250 0172 1823     		mov	r3, #24
 251 0174 FB18     		add	r3, r7, r3
 252 0176 1A68     		ldr	r2, [r3]
 253 0178 111D     		add	r1, r2, #4
 254 017a 1960     		str	r1, [r3]
 255 017c 1368     		ldr	r3, [r2]
 256 017e 181C     		mov	r0, r3
 257 0180 1423     		mov	r3, #20
 258 0182 FB18     		add	r3, r7, r3
 259 0184 1A68     		ldr	r2, [r3]
 260 0186 111D     		add	r1, r2, #4
 261 0188 1960     		str	r1, [r3]
 262 018a 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 9


 263 018c 1A1C     		mov	r2, r3
 264 018e E823     		mov	r3, #232
 265 0190 5B00     		lsl	r3, r3, #1
 266 0192 FB18     		add	r3, r7, r3
 267 0194 1B68     		ldr	r3, [r3]
 268 0196 C021     		mov	r1, #192
 269 0198 4900     		lsl	r1, r1, #1
 270 019a 7918     		add	r1, r7, r1
 271 019c 0860     		str	r0, [r1]
 272 019e BE21     		mov	r1, #190
 273 01a0 4900     		lsl	r1, r1, #1
 274 01a2 7918     		add	r1, r7, r1
 275 01a4 0A60     		str	r2, [r1]
 276 01a6 BC22     		mov	r2, #188
 277 01a8 5200     		lsl	r2, r2, #1
 278 01aa BA18     		add	r2, r7, r2
 279 01ac 1360     		str	r3, [r2]
 280              	.LBB62:
 281              	.LBB63:
 282              		.file 2 ".\\Include/arm_math.h"
   1:.\Include/arm_math.h **** /* ----------------------------------------------------------------------
   2:.\Include/arm_math.h ****  * Project:      CMSIS DSP Library
   3:.\Include/arm_math.h ****  * Title:        arm_math.h
   4:.\Include/arm_math.h ****  * Description:  Public header file for CMSIS DSP Library
   5:.\Include/arm_math.h ****  *
   6:.\Include/arm_math.h ****  * $Date:        27. January 2017
   7:.\Include/arm_math.h ****  * $Revision:    V.1.5.1
   8:.\Include/arm_math.h ****  *
   9:.\Include/arm_math.h ****  * Target Processor: Cortex-M cores
  10:.\Include/arm_math.h ****  * -------------------------------------------------------------------- */
  11:.\Include/arm_math.h **** /*
  12:.\Include/arm_math.h ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:.\Include/arm_math.h ****  *
  14:.\Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  15:.\Include/arm_math.h ****  *
  16:.\Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.\Include/arm_math.h ****  * not use this file except in compliance with the License.
  18:.\Include/arm_math.h ****  * You may obtain a copy of the License at
  19:.\Include/arm_math.h ****  *
  20:.\Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  21:.\Include/arm_math.h ****  *
  22:.\Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  23:.\Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.\Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.\Include/arm_math.h ****  * See the License for the specific language governing permissions and
  26:.\Include/arm_math.h ****  * limitations under the License.
  27:.\Include/arm_math.h ****  */
  28:.\Include/arm_math.h **** 
  29:.\Include/arm_math.h **** /**
  30:.\Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  31:.\Include/arm_math.h ****    *
  32:.\Include/arm_math.h ****    * Introduction
  33:.\Include/arm_math.h ****    * ------------
  34:.\Include/arm_math.h ****    *
  35:.\Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  36:.\Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  37:.\Include/arm_math.h ****    *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 10


  38:.\Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  39:.\Include/arm_math.h ****    * - Basic math functions
  40:.\Include/arm_math.h ****    * - Fast math functions
  41:.\Include/arm_math.h ****    * - Complex math functions
  42:.\Include/arm_math.h ****    * - Filters
  43:.\Include/arm_math.h ****    * - Matrix functions
  44:.\Include/arm_math.h ****    * - Transforms
  45:.\Include/arm_math.h ****    * - Motor control functions
  46:.\Include/arm_math.h ****    * - Statistical functions
  47:.\Include/arm_math.h ****    * - Support functions
  48:.\Include/arm_math.h ****    * - Interpolation functions
  49:.\Include/arm_math.h ****    *
  50:.\Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  51:.\Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  52:.\Include/arm_math.h ****    *
  53:.\Include/arm_math.h ****    * Using the Library
  54:.\Include/arm_math.h ****    * ------------
  55:.\Include/arm_math.h ****    *
  56:.\Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  57:.\Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  58:.\Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  59:.\Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  60:.\Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  61:.\Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  62:.\Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  63:.\Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  64:.\Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  65:.\Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  66:.\Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  67:.\Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  68:.\Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  69:.\Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  70:.\Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  71:.\Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (ARMv8M Baseline, Little endian)
  72:.\Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (ARMv8M Mainline, Little endian)
  73:.\Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (ARMv8M Mainline, Little endian, Single Precision Floating Point U
  74:.\Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (ARMv8M Mainline, Little endian, DSP instructions)
  75:.\Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (ARMv8M Mainline, Little endian, DSP instructions, Single Precisi
  76:.\Include/arm_math.h ****    *
  77:.\Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  78:.\Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  79:.\Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  80:.\Include/arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  81:.\Include/arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  82:.\Include/arm_math.h ****    * For ARMv8M cores define pre processor MACRO ARM_MATH_ARMV8MBL or ARM_MATH_ARMV8MML.
  83:.\Include/arm_math.h ****    * Set Pre processor MACRO __DSP_PRESENT if ARMv8M Mainline core supports DSP instructions.
  84:.\Include/arm_math.h ****    * 
  85:.\Include/arm_math.h ****    *
  86:.\Include/arm_math.h ****    * Examples
  87:.\Include/arm_math.h ****    * --------
  88:.\Include/arm_math.h ****    *
  89:.\Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  90:.\Include/arm_math.h ****    *
  91:.\Include/arm_math.h ****    * Toolchain Support
  92:.\Include/arm_math.h ****    * ------------
  93:.\Include/arm_math.h ****    *
  94:.\Include/arm_math.h ****    * The library has been developed and tested with MDK-ARM version 5.14.0.0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 11


  95:.\Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  96:.\Include/arm_math.h ****    *
  97:.\Include/arm_math.h ****    * Building the Library
  98:.\Include/arm_math.h ****    * ------------
  99:.\Include/arm_math.h ****    *
 100:.\Include/arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 101:.\Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
 102:.\Include/arm_math.h ****    *
 103:.\Include/arm_math.h ****    *
 104:.\Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 105:.\Include/arm_math.h ****    *
 106:.\Include/arm_math.h ****    * Pre-processor Macros
 107:.\Include/arm_math.h ****    * ------------
 108:.\Include/arm_math.h ****    *
 109:.\Include/arm_math.h ****    * Each library project have differant pre-processor macros.
 110:.\Include/arm_math.h ****    *
 111:.\Include/arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 112:.\Include/arm_math.h ****    *
 113:.\Include/arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 114:.\Include/arm_math.h ****    *
 115:.\Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 116:.\Include/arm_math.h ****    *
 117:.\Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 118:.\Include/arm_math.h ****    *
 119:.\Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 120:.\Include/arm_math.h ****    *
 121:.\Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 122:.\Include/arm_math.h ****    *
 123:.\Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 124:.\Include/arm_math.h ****    *
 125:.\Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 126:.\Include/arm_math.h ****    *
 127:.\Include/arm_math.h ****    * - ARM_MATH_CMx:
 128:.\Include/arm_math.h ****    *
 129:.\Include/arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 130:.\Include/arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 131:.\Include/arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 132:.\Include/arm_math.h ****    *
 133:.\Include/arm_math.h ****    * - ARM_MATH_ARMV8MxL:
 134:.\Include/arm_math.h ****    *
 135:.\Include/arm_math.h ****    * Define macro ARM_MATH_ARMV8MBL for building the library on ARMv8M Baseline target, ARM_MATH_AR
 136:.\Include/arm_math.h ****    * on ARMv8M Mainline target.
 137:.\Include/arm_math.h ****    *
 138:.\Include/arm_math.h ****    * - __FPU_PRESENT:
 139:.\Include/arm_math.h ****    *
 140:.\Include/arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 141:.\Include/arm_math.h ****    *
 142:.\Include/arm_math.h ****    * - __DSP_PRESENT:
 143:.\Include/arm_math.h ****    *
 144:.\Include/arm_math.h ****    * Initialize macro __DSP_PRESENT = 1 when ARMv8M Mainline core supports DSP instructions.
 145:.\Include/arm_math.h ****    *
 146:.\Include/arm_math.h ****    * <hr>
 147:.\Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 148:.\Include/arm_math.h ****    * -----------------------------
 149:.\Include/arm_math.h ****    *
 150:.\Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 151:.\Include/arm_math.h ****    * |File/Folder                   |Content                                                       
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 12


 152:.\Include/arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 153:.\Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 154:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 155:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 156:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 157:.\Include/arm_math.h ****    *
 158:.\Include/arm_math.h ****    * <hr>
 159:.\Include/arm_math.h ****    * Revision History of CMSIS-DSP
 160:.\Include/arm_math.h ****    * ------------
 161:.\Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 162:.\Include/arm_math.h ****    *
 163:.\Include/arm_math.h ****    * Copyright Notice
 164:.\Include/arm_math.h ****    * ------------
 165:.\Include/arm_math.h ****    *
 166:.\Include/arm_math.h ****    * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
 167:.\Include/arm_math.h ****    */
 168:.\Include/arm_math.h **** 
 169:.\Include/arm_math.h **** 
 170:.\Include/arm_math.h **** /**
 171:.\Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 172:.\Include/arm_math.h ****  */
 173:.\Include/arm_math.h **** 
 174:.\Include/arm_math.h **** /**
 175:.\Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 176:.\Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 177:.\Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 178:.\Include/arm_math.h ****  * operate on individual values and not arrays.
 179:.\Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 180:.\Include/arm_math.h ****  *
 181:.\Include/arm_math.h ****  */
 182:.\Include/arm_math.h **** 
 183:.\Include/arm_math.h **** /**
 184:.\Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 185:.\Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 186:.\Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 187:.\Include/arm_math.h ****  * (real, imag, real, imag, ...).
 188:.\Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 189:.\Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 190:.\Include/arm_math.h ****  * real values.
 191:.\Include/arm_math.h ****  */
 192:.\Include/arm_math.h **** 
 193:.\Include/arm_math.h **** /**
 194:.\Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 195:.\Include/arm_math.h ****  */
 196:.\Include/arm_math.h **** 
 197:.\Include/arm_math.h **** /**
 198:.\Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 199:.\Include/arm_math.h ****  *
 200:.\Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 201:.\Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 202:.\Include/arm_math.h ****  * the type
 203:.\Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 204:.\Include/arm_math.h ****  * below:
 205:.\Include/arm_math.h ****  * <pre>
 206:.\Include/arm_math.h ****  *     typedef struct
 207:.\Include/arm_math.h ****  *     {
 208:.\Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 13


 209:.\Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 210:.\Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 211:.\Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 212:.\Include/arm_math.h ****  * </pre>
 213:.\Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 214:.\Include/arm_math.h ****  *
 215:.\Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 216:.\Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 217:.\Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 218:.\Include/arm_math.h ****  * matrix element (i, j) is stored at:
 219:.\Include/arm_math.h ****  * <pre>
 220:.\Include/arm_math.h ****  *     pData[i*numCols + j]
 221:.\Include/arm_math.h ****  * </pre>
 222:.\Include/arm_math.h ****  *
 223:.\Include/arm_math.h ****  * \par Init Functions
 224:.\Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 225:.\Include/arm_math.h ****  * data structure.
 226:.\Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 227:.\Include/arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 228:.\Include/arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 229:.\Include/arm_math.h ****  *
 230:.\Include/arm_math.h ****  * \par
 231:.\Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 232:.\Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 233:.\Include/arm_math.h ****  * To place the instance structure in a const data
 234:.\Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 235:.\Include/arm_math.h ****  * <pre>
 236:.\Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 237:.\Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 238:.\Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 239:.\Include/arm_math.h ****  * </pre>
 240:.\Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 241:.\Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 242:.\Include/arm_math.h ****  * data array.
 243:.\Include/arm_math.h ****  *
 244:.\Include/arm_math.h ****  * \par Size Checking
 245:.\Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 246:.\Include/arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 247:.\Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 248:.\Include/arm_math.h ****  * columns.  If the size check fails the functions return:
 249:.\Include/arm_math.h ****  * <pre>
 250:.\Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 251:.\Include/arm_math.h ****  * </pre>
 252:.\Include/arm_math.h ****  * Otherwise the functions return
 253:.\Include/arm_math.h ****  * <pre>
 254:.\Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 255:.\Include/arm_math.h ****  * </pre>
 256:.\Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 257:.\Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 258:.\Include/arm_math.h ****  * <pre>
 259:.\Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 260:.\Include/arm_math.h ****  * </pre>
 261:.\Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 262:.\Include/arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 263:.\Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 264:.\Include/arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
 265:.\Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 14


 266:.\Include/arm_math.h ****  */
 267:.\Include/arm_math.h **** 
 268:.\Include/arm_math.h **** /**
 269:.\Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 270:.\Include/arm_math.h ****  */
 271:.\Include/arm_math.h **** 
 272:.\Include/arm_math.h **** /**
 273:.\Include/arm_math.h ****  * @defgroup groupController Controller Functions
 274:.\Include/arm_math.h ****  */
 275:.\Include/arm_math.h **** 
 276:.\Include/arm_math.h **** /**
 277:.\Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 278:.\Include/arm_math.h ****  */
 279:.\Include/arm_math.h **** /**
 280:.\Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 281:.\Include/arm_math.h ****  */
 282:.\Include/arm_math.h **** 
 283:.\Include/arm_math.h **** /**
 284:.\Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 285:.\Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 286:.\Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 287:.\Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 288:.\Include/arm_math.h ****  */
 289:.\Include/arm_math.h **** 
 290:.\Include/arm_math.h **** /**
 291:.\Include/arm_math.h ****  * @defgroup groupExamples Examples
 292:.\Include/arm_math.h ****  */
 293:.\Include/arm_math.h **** #ifndef _ARM_MATH_H
 294:.\Include/arm_math.h **** #define _ARM_MATH_H
 295:.\Include/arm_math.h **** 
 296:.\Include/arm_math.h **** /* ignore some GCC warnings */
 297:.\Include/arm_math.h **** #if defined ( __GNUC__ )
 298:.\Include/arm_math.h **** #pragma GCC diagnostic push
 299:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 300:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 301:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 302:.\Include/arm_math.h **** #endif
 303:.\Include/arm_math.h **** 
 304:.\Include/arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 305:.\Include/arm_math.h **** 
 306:.\Include/arm_math.h **** #if defined(ARM_MATH_CM7)
 307:.\Include/arm_math.h ****   #include "core_cm7.h"
 308:.\Include/arm_math.h ****   #define ARM_MATH_DSP
 309:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM4)
 310:.\Include/arm_math.h ****   #include "core_cm4.h"
 311:.\Include/arm_math.h ****   #define ARM_MATH_DSP
 312:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM3)
 313:.\Include/arm_math.h ****   #include "core_cm3.h"
 314:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM0)
 315:.\Include/arm_math.h ****   #include "core_cm0.h"
 316:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 317:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
 318:.\Include/arm_math.h ****   #include "core_cm0plus.h"
 319:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 320:.\Include/arm_math.h **** #elif defined (ARM_MATH_ARMV8MBL)
 321:.\Include/arm_math.h ****   #include "core_armv8mbl.h"
 322:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 15


 323:.\Include/arm_math.h **** #elif defined (ARM_MATH_ARMV8MML)
 324:.\Include/arm_math.h ****   #include "core_armv8mml.h"
 325:.\Include/arm_math.h ****   #if (defined (__DSP_PRESENT) && (__DSP_PRESENT == 1))
 326:.\Include/arm_math.h ****     #define ARM_MATH_DSP
 327:.\Include/arm_math.h ****   #endif
 328:.\Include/arm_math.h **** #else
 329:.\Include/arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 330:.\Include/arm_math.h **** #endif
 331:.\Include/arm_math.h **** 
 332:.\Include/arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 333:.\Include/arm_math.h **** #include "string.h"
 334:.\Include/arm_math.h **** #include "math.h"
 335:.\Include/arm_math.h **** #ifdef   __cplusplus
 336:.\Include/arm_math.h **** extern "C"
 337:.\Include/arm_math.h **** {
 338:.\Include/arm_math.h **** #endif
 339:.\Include/arm_math.h **** 
 340:.\Include/arm_math.h **** 
 341:.\Include/arm_math.h ****   /**
 342:.\Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:.\Include/arm_math.h ****    */
 344:.\Include/arm_math.h **** 
 345:.\Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:.\Include/arm_math.h **** #define DELTA_Q15          0x5
 347:.\Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:.\Include/arm_math.h **** #ifndef PI
 349:.\Include/arm_math.h ****   #define PI               3.14159265358979f
 350:.\Include/arm_math.h **** #endif
 351:.\Include/arm_math.h **** 
 352:.\Include/arm_math.h ****   /**
 353:.\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:.\Include/arm_math.h ****    */
 355:.\Include/arm_math.h **** 
 356:.\Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:.\Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:.\Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:.\Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:.\Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:.\Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:.\Include/arm_math.h **** 
 363:.\Include/arm_math.h ****   /**
 364:.\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:.\Include/arm_math.h ****    */
 366:.\Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:.\Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:.\Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:.\Include/arm_math.h **** 
 370:.\Include/arm_math.h ****   /**
 371:.\Include/arm_math.h ****    * @brief Macro for Unaligned Support
 372:.\Include/arm_math.h ****    */
 373:.\Include/arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 374:.\Include/arm_math.h ****     #define ALIGN4
 375:.\Include/arm_math.h **** #else
 376:.\Include/arm_math.h ****   #if defined  (__GNUC__)
 377:.\Include/arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 378:.\Include/arm_math.h ****   #else
 379:.\Include/arm_math.h ****     #define ALIGN4 __align(4)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 16


 380:.\Include/arm_math.h ****   #endif
 381:.\Include/arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 382:.\Include/arm_math.h **** 
 383:.\Include/arm_math.h ****   /**
 384:.\Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 385:.\Include/arm_math.h ****    */
 386:.\Include/arm_math.h **** 
 387:.\Include/arm_math.h ****   typedef enum
 388:.\Include/arm_math.h ****   {
 389:.\Include/arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 390:.\Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 391:.\Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 392:.\Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 393:.\Include/arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 394:.\Include/arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 395:.\Include/arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 396:.\Include/arm_math.h ****   } arm_status;
 397:.\Include/arm_math.h **** 
 398:.\Include/arm_math.h ****   /**
 399:.\Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 400:.\Include/arm_math.h ****    */
 401:.\Include/arm_math.h ****   typedef int8_t q7_t;
 402:.\Include/arm_math.h **** 
 403:.\Include/arm_math.h ****   /**
 404:.\Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 405:.\Include/arm_math.h ****    */
 406:.\Include/arm_math.h ****   typedef int16_t q15_t;
 407:.\Include/arm_math.h **** 
 408:.\Include/arm_math.h ****   /**
 409:.\Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 410:.\Include/arm_math.h ****    */
 411:.\Include/arm_math.h ****   typedef int32_t q31_t;
 412:.\Include/arm_math.h **** 
 413:.\Include/arm_math.h ****   /**
 414:.\Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 415:.\Include/arm_math.h ****    */
 416:.\Include/arm_math.h ****   typedef int64_t q63_t;
 417:.\Include/arm_math.h **** 
 418:.\Include/arm_math.h ****   /**
 419:.\Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 420:.\Include/arm_math.h ****    */
 421:.\Include/arm_math.h ****   typedef float float32_t;
 422:.\Include/arm_math.h **** 
 423:.\Include/arm_math.h ****   /**
 424:.\Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 425:.\Include/arm_math.h ****    */
 426:.\Include/arm_math.h ****   typedef double float64_t;
 427:.\Include/arm_math.h **** 
 428:.\Include/arm_math.h ****   /**
 429:.\Include/arm_math.h ****    * @brief definition to read/write two 16 bit values.
 430:.\Include/arm_math.h ****    */
 431:.\Include/arm_math.h **** #if   defined ( __CC_ARM )
 432:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 433:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 434:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 435:.\Include/arm_math.h **** 
 436:.\Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 17


 437:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 438:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 439:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 440:.\Include/arm_math.h **** 
 441:.\Include/arm_math.h **** #elif defined ( __GNUC__ )
 442:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 443:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 444:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 445:.\Include/arm_math.h **** 
 446:.\Include/arm_math.h **** #elif defined ( __ICCARM__ )
 447:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 448:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 449:.\Include/arm_math.h ****   #define CMSIS_INLINE
 450:.\Include/arm_math.h **** 
 451:.\Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 452:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 453:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 454:.\Include/arm_math.h ****   #define CMSIS_INLINE
 455:.\Include/arm_math.h **** 
 456:.\Include/arm_math.h **** #elif defined ( __CSMC__ )
 457:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 458:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 459:.\Include/arm_math.h ****   #define CMSIS_INLINE
 460:.\Include/arm_math.h **** 
 461:.\Include/arm_math.h **** #elif defined ( __TASKING__ )
 462:.\Include/arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 463:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 464:.\Include/arm_math.h ****   #define CMSIS_INLINE
 465:.\Include/arm_math.h **** 
 466:.\Include/arm_math.h **** #else
 467:.\Include/arm_math.h ****   #error Unknown compiler
 468:.\Include/arm_math.h **** #endif
 469:.\Include/arm_math.h **** 
 470:.\Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 471:.\Include/arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 472:.\Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 473:.\Include/arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 474:.\Include/arm_math.h **** 
 475:.\Include/arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 476:.\Include/arm_math.h **** #if !defined (ARM_MATH_DSP)
 477:.\Include/arm_math.h ****   /**
 478:.\Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 479:.\Include/arm_math.h ****    */
 480:.\Include/arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 481:.\Include/arm_math.h ****                                     (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 482:.\Include/arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 483:.\Include/arm_math.h ****                                     (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 484:.\Include/arm_math.h **** 
 485:.\Include/arm_math.h **** /* #endif // defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 486:.\Include/arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
 487:.\Include/arm_math.h **** 
 488:.\Include/arm_math.h ****    /**
 489:.\Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
 490:.\Include/arm_math.h ****    */
 491:.\Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 492:.\Include/arm_math.h **** 
 493:.\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 18


 494:.\Include/arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 495:.\Include/arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 496:.\Include/arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 497:.\Include/arm_math.h **** #else
 498:.\Include/arm_math.h **** 
 499:.\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 500:.\Include/arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 501:.\Include/arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 502:.\Include/arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 503:.\Include/arm_math.h **** 
 504:.\Include/arm_math.h **** #endif
 505:.\Include/arm_math.h **** 
 506:.\Include/arm_math.h **** 
 507:.\Include/arm_math.h ****   /**
 508:.\Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 509:.\Include/arm_math.h ****    */
 510:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t clip_q63_to_q31(
 511:.\Include/arm_math.h ****   q63_t x)
 512:.\Include/arm_math.h ****   {
 513:.\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 514:.\Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 515:.\Include/arm_math.h ****   }
 516:.\Include/arm_math.h **** 
 517:.\Include/arm_math.h ****   /**
 518:.\Include/arm_math.h ****    * @brief Clips Q63 to Q15 values.
 519:.\Include/arm_math.h ****    */
 520:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q63_to_q15(
 521:.\Include/arm_math.h ****   q63_t x)
 522:.\Include/arm_math.h ****   {
 523:.\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 524:.\Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 525:.\Include/arm_math.h ****   }
 526:.\Include/arm_math.h **** 
 527:.\Include/arm_math.h ****   /**
 528:.\Include/arm_math.h ****    * @brief Clips Q31 to Q7 values.
 529:.\Include/arm_math.h ****    */
 530:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q7_t clip_q31_to_q7(
 531:.\Include/arm_math.h ****   q31_t x)
 532:.\Include/arm_math.h ****   {
 533:.\Include/arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 534:.\Include/arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 535:.\Include/arm_math.h ****   }
 536:.\Include/arm_math.h **** 
 537:.\Include/arm_math.h ****   /**
 538:.\Include/arm_math.h ****    * @brief Clips Q31 to Q15 values.
 539:.\Include/arm_math.h ****    */
 540:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q31_to_q15(
 541:.\Include/arm_math.h ****   q31_t x)
 542:.\Include/arm_math.h ****   {
 543:.\Include/arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 544:.\Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 545:.\Include/arm_math.h ****   }
 546:.\Include/arm_math.h **** 
 547:.\Include/arm_math.h ****   /**
 548:.\Include/arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 549:.\Include/arm_math.h ****    */
 550:.\Include/arm_math.h **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 19


 551:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q63_t mult32x64(
 552:.\Include/arm_math.h ****   q63_t x,
 553:.\Include/arm_math.h ****   q31_t y)
 554:.\Include/arm_math.h ****   {
 555:.\Include/arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 556:.\Include/arm_math.h ****             (((q63_t) (x >> 32) * y)));
 557:.\Include/arm_math.h ****   }
 558:.\Include/arm_math.h **** 
 559:.\Include/arm_math.h **** /*
 560:.\Include/arm_math.h ****   #if defined (ARM_MATH_CM0_FAMILY) && defined ( __CC_ARM   )
 561:.\Include/arm_math.h ****   #define __CLZ __clz
 562:.\Include/arm_math.h ****   #endif
 563:.\Include/arm_math.h ****  */
 564:.\Include/arm_math.h **** /* note: function can be removed when all toolchain support __CLZ for Cortex-M0 */
 565:.\Include/arm_math.h **** #if defined (ARM_MATH_CM0_FAMILY) && ((defined (__ICCARM__))  )
 566:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 567:.\Include/arm_math.h ****   q31_t data);
 568:.\Include/arm_math.h **** 
 569:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 570:.\Include/arm_math.h ****   q31_t data)
 571:.\Include/arm_math.h ****   {
 572:.\Include/arm_math.h ****     uint32_t count = 0;
 573:.\Include/arm_math.h ****     uint32_t mask = 0x80000000;
 574:.\Include/arm_math.h **** 
 575:.\Include/arm_math.h ****     while ((data & mask) == 0)
 576:.\Include/arm_math.h ****     {
 577:.\Include/arm_math.h ****       count += 1u;
 578:.\Include/arm_math.h ****       mask = mask >> 1u;
 579:.\Include/arm_math.h ****     }
 580:.\Include/arm_math.h **** 
 581:.\Include/arm_math.h ****     return (count);
 582:.\Include/arm_math.h ****   }
 583:.\Include/arm_math.h **** #endif
 584:.\Include/arm_math.h **** 
 585:.\Include/arm_math.h ****   /**
 586:.\Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 587:.\Include/arm_math.h ****    */
 588:.\Include/arm_math.h **** 
 589:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q31(
 590:.\Include/arm_math.h ****   q31_t in,
 591:.\Include/arm_math.h ****   q31_t * dst,
 592:.\Include/arm_math.h ****   q31_t * pRecipTable)
 593:.\Include/arm_math.h ****   {
 594:.\Include/arm_math.h ****     q31_t out;
 595:.\Include/arm_math.h ****     uint32_t tempVal;
 596:.\Include/arm_math.h ****     uint32_t index, i;
 597:.\Include/arm_math.h ****     uint32_t signBits;
 598:.\Include/arm_math.h **** 
 599:.\Include/arm_math.h ****     if (in > 0)
 600:.\Include/arm_math.h ****     {
 601:.\Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 602:.\Include/arm_math.h ****     }
 603:.\Include/arm_math.h ****     else
 604:.\Include/arm_math.h ****     {
 605:.\Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 606:.\Include/arm_math.h ****     }
 607:.\Include/arm_math.h **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 20


 608:.\Include/arm_math.h ****     /* Convert input sample to 1.31 format */
 609:.\Include/arm_math.h ****     in = (in << signBits);
 610:.\Include/arm_math.h **** 
 611:.\Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 612:.\Include/arm_math.h ****     index = (uint32_t)(in >> 24);
 613:.\Include/arm_math.h ****     index = (index & INDEX_MASK);
 614:.\Include/arm_math.h **** 
 615:.\Include/arm_math.h ****     /* 1.31 with exp 1 */
 616:.\Include/arm_math.h ****     out = pRecipTable[index];
 617:.\Include/arm_math.h **** 
 618:.\Include/arm_math.h ****     /* calculation of reciprocal value */
 619:.\Include/arm_math.h ****     /* running approximation for two iterations */
 620:.\Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 621:.\Include/arm_math.h ****     {
 622:.\Include/arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 623:.\Include/arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 624:.\Include/arm_math.h ****       /*      1.31 with exp 1 */
 625:.\Include/arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 626:.\Include/arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 627:.\Include/arm_math.h ****     }
 628:.\Include/arm_math.h **** 
 629:.\Include/arm_math.h ****     /* write output */
 630:.\Include/arm_math.h ****     *dst = out;
 631:.\Include/arm_math.h **** 
 632:.\Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 633:.\Include/arm_math.h ****     return (signBits + 1u);
 634:.\Include/arm_math.h ****   }
 635:.\Include/arm_math.h **** 
 636:.\Include/arm_math.h **** 
 637:.\Include/arm_math.h ****   /**
 638:.\Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
 639:.\Include/arm_math.h ****    */
 640:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q15(
 641:.\Include/arm_math.h ****   q15_t in,
 642:.\Include/arm_math.h ****   q15_t * dst,
 643:.\Include/arm_math.h ****   q15_t * pRecipTable)
 644:.\Include/arm_math.h ****   {
 645:.\Include/arm_math.h ****     q15_t out = 0;
 646:.\Include/arm_math.h ****     uint32_t tempVal = 0;
 647:.\Include/arm_math.h ****     uint32_t index = 0, i = 0;
 648:.\Include/arm_math.h ****     uint32_t signBits = 0;
 649:.\Include/arm_math.h **** 
 650:.\Include/arm_math.h ****     if (in > 0)
 651:.\Include/arm_math.h ****     {
 652:.\Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
 653:.\Include/arm_math.h ****     }
 654:.\Include/arm_math.h ****     else
 655:.\Include/arm_math.h ****     {
 656:.\Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
 657:.\Include/arm_math.h ****     }
 658:.\Include/arm_math.h **** 
 659:.\Include/arm_math.h ****     /* Convert input sample to 1.15 format */
 660:.\Include/arm_math.h ****     in = (in << signBits);
 661:.\Include/arm_math.h **** 
 662:.\Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 663:.\Include/arm_math.h ****     index = (uint32_t)(in >>  8);
 664:.\Include/arm_math.h ****     index = (index & INDEX_MASK);
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 21


 665:.\Include/arm_math.h **** 
 666:.\Include/arm_math.h ****     /*      1.15 with exp 1  */
 667:.\Include/arm_math.h ****     out = pRecipTable[index];
 668:.\Include/arm_math.h **** 
 669:.\Include/arm_math.h ****     /* calculation of reciprocal value */
 670:.\Include/arm_math.h ****     /* running approximation for two iterations */
 671:.\Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 672:.\Include/arm_math.h ****     {
 673:.\Include/arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
 674:.\Include/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 675:.\Include/arm_math.h ****       /*      1.15 with exp 1 */
 676:.\Include/arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
 677:.\Include/arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
 678:.\Include/arm_math.h ****     }
 679:.\Include/arm_math.h **** 
 680:.\Include/arm_math.h ****     /* write output */
 681:.\Include/arm_math.h ****     *dst = out;
 682:.\Include/arm_math.h **** 
 683:.\Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 684:.\Include/arm_math.h ****     return (signBits + 1);
 685:.\Include/arm_math.h ****   }
 686:.\Include/arm_math.h **** 
 687:.\Include/arm_math.h **** 
 688:.\Include/arm_math.h ****   /*
 689:.\Include/arm_math.h ****    * @brief C custom defined intrinisic function for only M0 processors
 690:.\Include/arm_math.h ****    */
 691:.\Include/arm_math.h **** #if defined(ARM_MATH_CM0_FAMILY)
 692:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t __SSAT(
 693:.\Include/arm_math.h ****   q31_t x,
 694:.\Include/arm_math.h ****   uint32_t y)
 695:.\Include/arm_math.h ****   {
 696:.\Include/arm_math.h ****     int32_t posMax, negMin;
 697:.\Include/arm_math.h ****     uint32_t i;
 698:.\Include/arm_math.h **** 
 699:.\Include/arm_math.h ****     posMax = 1;
 700:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 701:.\Include/arm_math.h ****     {
 702:.\Include/arm_math.h ****       posMax = posMax * 2;
 703:.\Include/arm_math.h ****     }
 704:.\Include/arm_math.h **** 
 705:.\Include/arm_math.h ****     if (x > 0)
 706:.\Include/arm_math.h ****     {
 707:.\Include/arm_math.h ****       posMax = (posMax - 1);
 708:.\Include/arm_math.h **** 
 709:.\Include/arm_math.h ****       if (x > posMax)
 710:.\Include/arm_math.h ****       {
 711:.\Include/arm_math.h ****         x = posMax;
 712:.\Include/arm_math.h ****       }
 713:.\Include/arm_math.h ****     }
 714:.\Include/arm_math.h ****     else
 715:.\Include/arm_math.h ****     {
 716:.\Include/arm_math.h ****       negMin = -posMax;
 717:.\Include/arm_math.h **** 
 718:.\Include/arm_math.h ****       if (x < negMin)
 719:.\Include/arm_math.h ****       {
 720:.\Include/arm_math.h ****         x = negMin;
 721:.\Include/arm_math.h ****       }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 22


 722:.\Include/arm_math.h ****     }
 723:.\Include/arm_math.h ****     return (x);
 724:.\Include/arm_math.h ****   }
 725:.\Include/arm_math.h **** #endif /* end of ARM_MATH_CM0_FAMILY */
 726:.\Include/arm_math.h **** 
 727:.\Include/arm_math.h **** 
 728:.\Include/arm_math.h ****   /*
 729:.\Include/arm_math.h ****    * @brief C custom defined intrinsic function for M3 and M0 processors
 730:.\Include/arm_math.h ****    */
 731:.\Include/arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 732:.\Include/arm_math.h **** #if !defined (ARM_MATH_DSP)
 733:.\Include/arm_math.h **** 
 734:.\Include/arm_math.h ****   /*
 735:.\Include/arm_math.h ****    * @brief C custom defined QADD8 for M3 and M0 processors
 736:.\Include/arm_math.h ****    */
 737:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD8(
 738:.\Include/arm_math.h ****   uint32_t x,
 739:.\Include/arm_math.h ****   uint32_t y)
 740:.\Include/arm_math.h ****   {
 741:.\Include/arm_math.h ****     q31_t r, s, t, u;
 742:.\Include/arm_math.h **** 
 743:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) + (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 744:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) + (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 745:.\Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) + (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 746:.\Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) + (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 747:.\Include/arm_math.h **** 
 748:.\Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 749:.\Include/arm_math.h ****   }
 750:.\Include/arm_math.h **** 
 751:.\Include/arm_math.h **** 
 752:.\Include/arm_math.h ****   /*
 753:.\Include/arm_math.h ****    * @brief C custom defined QSUB8 for M3 and M0 processors
 754:.\Include/arm_math.h ****    */
 755:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB8(
 756:.\Include/arm_math.h ****   uint32_t x,
 757:.\Include/arm_math.h ****   uint32_t y)
 758:.\Include/arm_math.h ****   {
 759:.\Include/arm_math.h ****     q31_t r, s, t, u;
 760:.\Include/arm_math.h **** 
 761:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) - (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 762:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) - (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 763:.\Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) - (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 764:.\Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) - (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 765:.\Include/arm_math.h **** 
 766:.\Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 767:.\Include/arm_math.h ****   }
 768:.\Include/arm_math.h **** 
 769:.\Include/arm_math.h **** 
 770:.\Include/arm_math.h ****   /*
 771:.\Include/arm_math.h ****    * @brief C custom defined QADD16 for M3 and M0 processors
 772:.\Include/arm_math.h ****    */
 773:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD16(
 774:.\Include/arm_math.h ****   uint32_t x,
 775:.\Include/arm_math.h ****   uint32_t y)
 776:.\Include/arm_math.h ****   {
 777:.\Include/arm_math.h **** /*  q31_t r,     s;  without initialisation 'arm_offset_q15 test' fails  but 'intrinsic' tests pass
 778:.\Include/arm_math.h ****     q31_t r = 0, s = 0;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 23


 779:.\Include/arm_math.h **** 
 780:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 781:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 782:.\Include/arm_math.h **** 
 783:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 784:.\Include/arm_math.h ****   }
 785:.\Include/arm_math.h **** 
 786:.\Include/arm_math.h **** 
 787:.\Include/arm_math.h ****   /*
 788:.\Include/arm_math.h ****    * @brief C custom defined SHADD16 for M3 and M0 processors
 789:.\Include/arm_math.h ****    */
 790:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHADD16(
 791:.\Include/arm_math.h ****   uint32_t x,
 792:.\Include/arm_math.h ****   uint32_t y)
 793:.\Include/arm_math.h ****   {
 794:.\Include/arm_math.h ****     q31_t r, s;
 795:.\Include/arm_math.h **** 
 796:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 797:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 798:.\Include/arm_math.h **** 
 799:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 800:.\Include/arm_math.h ****   }
 801:.\Include/arm_math.h **** 
 802:.\Include/arm_math.h **** 
 803:.\Include/arm_math.h ****   /*
 804:.\Include/arm_math.h ****    * @brief C custom defined QSUB16 for M3 and M0 processors
 805:.\Include/arm_math.h ****    */
 806:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB16(
 807:.\Include/arm_math.h ****   uint32_t x,
 808:.\Include/arm_math.h ****   uint32_t y)
 809:.\Include/arm_math.h ****   {
 810:.\Include/arm_math.h ****     q31_t r, s;
 811:.\Include/arm_math.h **** 
 812:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 813:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 814:.\Include/arm_math.h **** 
 815:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 816:.\Include/arm_math.h ****   }
 817:.\Include/arm_math.h **** 
 818:.\Include/arm_math.h **** 
 819:.\Include/arm_math.h ****   /*
 820:.\Include/arm_math.h ****    * @brief C custom defined SHSUB16 for M3 and M0 processors
 821:.\Include/arm_math.h ****    */
 822:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSUB16(
 823:.\Include/arm_math.h ****   uint32_t x,
 824:.\Include/arm_math.h ****   uint32_t y)
 825:.\Include/arm_math.h ****   {
 826:.\Include/arm_math.h ****     q31_t r, s;
 827:.\Include/arm_math.h **** 
 828:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 829:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 830:.\Include/arm_math.h **** 
 831:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 832:.\Include/arm_math.h ****   }
 833:.\Include/arm_math.h **** 
 834:.\Include/arm_math.h **** 
 835:.\Include/arm_math.h ****   /*
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 24


 836:.\Include/arm_math.h ****    * @brief C custom defined QASX for M3 and M0 processors
 837:.\Include/arm_math.h ****    */
 838:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QASX(
 839:.\Include/arm_math.h ****   uint32_t x,
 840:.\Include/arm_math.h ****   uint32_t y)
 841:.\Include/arm_math.h ****   {
 842:.\Include/arm_math.h ****     q31_t r, s;
 843:.\Include/arm_math.h **** 
 844:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 845:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 846:.\Include/arm_math.h **** 
 847:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 848:.\Include/arm_math.h ****   }
 849:.\Include/arm_math.h **** 
 850:.\Include/arm_math.h **** 
 851:.\Include/arm_math.h ****   /*
 852:.\Include/arm_math.h ****    * @brief C custom defined SHASX for M3 and M0 processors
 853:.\Include/arm_math.h ****    */
 854:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHASX(
 855:.\Include/arm_math.h ****   uint32_t x,
 856:.\Include/arm_math.h ****   uint32_t y)
 857:.\Include/arm_math.h ****   {
 858:.\Include/arm_math.h ****     q31_t r, s;
 859:.\Include/arm_math.h **** 
 860:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 861:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 862:.\Include/arm_math.h **** 
 863:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 864:.\Include/arm_math.h ****   }
 865:.\Include/arm_math.h **** 
 866:.\Include/arm_math.h **** 
 867:.\Include/arm_math.h ****   /*
 868:.\Include/arm_math.h ****    * @brief C custom defined QSAX for M3 and M0 processors
 869:.\Include/arm_math.h ****    */
 870:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSAX(
 871:.\Include/arm_math.h ****   uint32_t x,
 872:.\Include/arm_math.h ****   uint32_t y)
 873:.\Include/arm_math.h ****   {
 874:.\Include/arm_math.h ****     q31_t r, s;
 875:.\Include/arm_math.h **** 
 876:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 877:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 878:.\Include/arm_math.h **** 
 879:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 880:.\Include/arm_math.h ****   }
 881:.\Include/arm_math.h **** 
 882:.\Include/arm_math.h **** 
 883:.\Include/arm_math.h ****   /*
 884:.\Include/arm_math.h ****    * @brief C custom defined SHSAX for M3 and M0 processors
 885:.\Include/arm_math.h ****    */
 886:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSAX(
 887:.\Include/arm_math.h ****   uint32_t x,
 888:.\Include/arm_math.h ****   uint32_t y)
 889:.\Include/arm_math.h ****   {
 890:.\Include/arm_math.h ****     q31_t r, s;
 891:.\Include/arm_math.h **** 
 892:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 25


 893:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 894:.\Include/arm_math.h **** 
 895:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 896:.\Include/arm_math.h ****   }
 897:.\Include/arm_math.h **** 
 898:.\Include/arm_math.h **** 
 899:.\Include/arm_math.h ****   /*
 900:.\Include/arm_math.h ****    * @brief C custom defined SMUSDX for M3 and M0 processors
 901:.\Include/arm_math.h ****    */
 902:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUSDX(
 903:.\Include/arm_math.h ****   uint32_t x,
 904:.\Include/arm_math.h ****   uint32_t y)
 905:.\Include/arm_math.h ****   {
 906:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 907:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 908:.\Include/arm_math.h ****   }
 909:.\Include/arm_math.h **** 
 910:.\Include/arm_math.h ****   /*
 911:.\Include/arm_math.h ****    * @brief C custom defined SMUADX for M3 and M0 processors
 912:.\Include/arm_math.h ****    */
 913:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUADX(
 914:.\Include/arm_math.h ****   uint32_t x,
 915:.\Include/arm_math.h ****   uint32_t y)
 916:.\Include/arm_math.h ****   {
 917:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 918:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 919:.\Include/arm_math.h ****   }
 920:.\Include/arm_math.h **** 
 921:.\Include/arm_math.h **** 
 922:.\Include/arm_math.h ****   /*
 923:.\Include/arm_math.h ****    * @brief C custom defined QADD for M3 and M0 processors
 924:.\Include/arm_math.h ****    */
 925:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QADD(
 926:.\Include/arm_math.h ****   int32_t x,
 927:.\Include/arm_math.h ****   int32_t y)
 928:.\Include/arm_math.h ****   {
 929:.\Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x + (q31_t)y)));
 930:.\Include/arm_math.h ****   }
 931:.\Include/arm_math.h **** 
 932:.\Include/arm_math.h **** 
 933:.\Include/arm_math.h ****   /*
 934:.\Include/arm_math.h ****    * @brief C custom defined QSUB for M3 and M0 processors
 935:.\Include/arm_math.h ****    */
 936:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QSUB(
 937:.\Include/arm_math.h ****   int32_t x,
 938:.\Include/arm_math.h ****   int32_t y)
 939:.\Include/arm_math.h ****   {
 940:.\Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x - (q31_t)y)));
 941:.\Include/arm_math.h ****   }
 942:.\Include/arm_math.h **** 
 943:.\Include/arm_math.h **** 
 944:.\Include/arm_math.h ****   /*
 945:.\Include/arm_math.h ****    * @brief C custom defined SMLAD for M3 and M0 processors
 946:.\Include/arm_math.h ****    */
 947:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLAD(
 948:.\Include/arm_math.h ****   uint32_t x,
 949:.\Include/arm_math.h ****   uint32_t y,
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 26


 950:.\Include/arm_math.h ****   uint32_t sum)
 951:.\Include/arm_math.h ****   {
 952:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 283              		.loc 2 952 0
 284 01ae C023     		mov	r3, #192
 285 01b0 5B00     		lsl	r3, r3, #1
 286 01b2 FB18     		add	r3, r7, r3
 287 01b4 1B68     		ldr	r3, [r3]
 288 01b6 1B04     		lsl	r3, r3, #16
 289 01b8 1B14     		asr	r3, r3, #16
 290 01ba BE22     		mov	r2, #190
 291 01bc 5200     		lsl	r2, r2, #1
 292 01be BA18     		add	r2, r7, r2
 293 01c0 1268     		ldr	r2, [r2]
 294 01c2 1204     		lsl	r2, r2, #16
 295 01c4 1214     		asr	r2, r2, #16
 296 01c6 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 297              		.loc 2 953 0
 298 01c8 C023     		mov	r3, #192
 299 01ca 5B00     		lsl	r3, r3, #1
 300 01cc FB18     		add	r3, r7, r3
 301 01ce 1B68     		ldr	r3, [r3]
 302 01d0 1B14     		asr	r3, r3, #16
 303 01d2 BE21     		mov	r1, #190
 304 01d4 4900     		lsl	r1, r1, #1
 305 01d6 7918     		add	r1, r7, r1
 306 01d8 0968     		ldr	r1, [r1]
 307 01da 0914     		asr	r1, r1, #16
 308 01dc 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 309              		.loc 2 952 0
 310 01de D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 311              		.loc 2 954 0
 312 01e0 BC23     		mov	r3, #188
 313 01e2 5B00     		lsl	r3, r3, #1
 314 01e4 FB18     		add	r3, r7, r3
 315 01e6 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 316              		.loc 2 953 0
 317 01e8 D318     		add	r3, r2, r3
 318              	.LBE63:
 319              	.LBE62:
 320              		.loc 1 194 0
 321 01ea E822     		mov	r2, #232
 322 01ec 5200     		lsl	r2, r2, #1
 323 01ee BA18     		add	r2, r7, r2
 324 01f0 1360     		str	r3, [r2]
 195:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* x[3] * y[srcBLen - 1] , x[2] * y[srcBLen - 2] */
 196:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       sum = __SMLAD(*__SIMD32(px)++, *__SIMD32(py)++, sum);
 325              		.loc 1 196 0
 326 01f2 1823     		mov	r3, #24
 327 01f4 FB18     		add	r3, r7, r3
 328 01f6 1A68     		ldr	r2, [r3]
 329 01f8 111D     		add	r1, r2, #4
 330 01fa 1960     		str	r1, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 27


 331 01fc 1368     		ldr	r3, [r2]
 332 01fe 181C     		mov	r0, r3
 333 0200 1423     		mov	r3, #20
 334 0202 FB18     		add	r3, r7, r3
 335 0204 1A68     		ldr	r2, [r3]
 336 0206 111D     		add	r1, r2, #4
 337 0208 1960     		str	r1, [r3]
 338 020a 1368     		ldr	r3, [r2]
 339 020c 1A1C     		mov	r2, r3
 340 020e E823     		mov	r3, #232
 341 0210 5B00     		lsl	r3, r3, #1
 342 0212 FB18     		add	r3, r7, r3
 343 0214 1B68     		ldr	r3, [r3]
 344 0216 BA21     		mov	r1, #186
 345 0218 4900     		lsl	r1, r1, #1
 346 021a 7918     		add	r1, r7, r1
 347 021c 0860     		str	r0, [r1]
 348 021e B821     		mov	r1, #184
 349 0220 4900     		lsl	r1, r1, #1
 350 0222 7918     		add	r1, r7, r1
 351 0224 0A60     		str	r2, [r1]
 352 0226 B622     		mov	r2, #182
 353 0228 5200     		lsl	r2, r2, #1
 354 022a BA18     		add	r2, r7, r2
 355 022c 1360     		str	r3, [r2]
 356              	.LBB64:
 357              	.LBB65:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 358              		.loc 2 952 0
 359 022e BA23     		mov	r3, #186
 360 0230 5B00     		lsl	r3, r3, #1
 361 0232 FB18     		add	r3, r7, r3
 362 0234 1B68     		ldr	r3, [r3]
 363 0236 1B04     		lsl	r3, r3, #16
 364 0238 1B14     		asr	r3, r3, #16
 365 023a B822     		mov	r2, #184
 366 023c 5200     		lsl	r2, r2, #1
 367 023e BA18     		add	r2, r7, r2
 368 0240 1268     		ldr	r2, [r2]
 369 0242 1204     		lsl	r2, r2, #16
 370 0244 1214     		asr	r2, r2, #16
 371 0246 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 372              		.loc 2 953 0
 373 0248 BA23     		mov	r3, #186
 374 024a 5B00     		lsl	r3, r3, #1
 375 024c FB18     		add	r3, r7, r3
 376 024e 1B68     		ldr	r3, [r3]
 377 0250 1B14     		asr	r3, r3, #16
 378 0252 B821     		mov	r1, #184
 379 0254 4900     		lsl	r1, r1, #1
 380 0256 7918     		add	r1, r7, r1
 381 0258 0968     		ldr	r1, [r1]
 382 025a 0914     		asr	r1, r1, #16
 383 025c 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 384              		.loc 2 952 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 28


 385 025e D218     		add	r2, r2, r3
 386              		.loc 2 954 0
 387 0260 B623     		mov	r3, #182
 388 0262 5B00     		lsl	r3, r3, #1
 389 0264 FB18     		add	r3, r7, r3
 390 0266 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 391              		.loc 2 953 0
 392 0268 D318     		add	r3, r2, r3
 393              	.LBE65:
 394              	.LBE64:
 395              		.loc 1 196 0
 396 026a E822     		mov	r2, #232
 397 026c 5200     		lsl	r2, r2, #1
 398 026e BA18     		add	r2, r7, r2
 399 0270 1360     		str	r3, [r2]
 197:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 198:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Decrement the loop counter */
 199:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       k--;
 400              		.loc 1 199 0
 401 0272 D823     		mov	r3, #216
 402 0274 5B00     		lsl	r3, r3, #1
 403 0276 FB18     		add	r3, r7, r3
 404 0278 1B68     		ldr	r3, [r3]
 405 027a 013B     		sub	r3, r3, #1
 406 027c D822     		mov	r2, #216
 407 027e 5200     		lsl	r2, r2, #1
 408 0280 BA18     		add	r2, r7, r2
 409 0282 1360     		str	r3, [r2]
 410              	.L5:
 191:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
 411              		.loc 1 191 0
 412 0284 D823     		mov	r3, #216
 413 0286 5B00     		lsl	r3, r3, #1
 414 0288 FB18     		add	r3, r7, r3
 415 028a 1B68     		ldr	r3, [r3]
 416 028c 002B     		cmp	r3, #0
 417 028e 00D0     		beq	.LCB357
 418 0290 6FE7     		b	.L8	@long jump
 419              	.LCB357:
 200:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     }
 201:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 202:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* If the count is not a multiple of 4, compute any remaining MACs here.
 203:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      ** No loop unrolling is used. */
 204:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     k = count % 0x4u;
 420              		.loc 1 204 0
 421 0292 D623     		mov	r3, #214
 422 0294 5B00     		lsl	r3, r3, #1
 423 0296 FB18     		add	r3, r7, r3
 424 0298 1B68     		ldr	r3, [r3]
 425 029a 0322     		mov	r2, #3
 426 029c 1340     		and	r3, r2
 427 029e D822     		mov	r2, #216
 428 02a0 5200     		lsl	r2, r2, #1
 429 02a2 BA18     		add	r2, r7, r2
 430 02a4 1360     		str	r3, [r2]
 205:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 29


 206:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     while (k > 0u)
 431              		.loc 1 206 0
 432 02a6 44E0     		b	.L9
 433              	.L11:
 207:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
 208:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Perform the multiply-accumulates */
 209:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* x[0] * y[srcBLen - 1] */
 210:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       sum = __SMLAD(*px++, *py++, sum);
 434              		.loc 1 210 0
 435 02a8 BB69     		ldr	r3, [r7, #24]
 436 02aa 9A1C     		add	r2, r3, #2
 437 02ac BA61     		str	r2, [r7, #24]
 438 02ae 1B88     		ldrh	r3, [r3]
 439 02b0 19B2     		sxth	r1, r3
 440 02b2 7B69     		ldr	r3, [r7, #20]
 441 02b4 9A1C     		add	r2, r3, #2
 442 02b6 7A61     		str	r2, [r7, #20]
 443 02b8 1B88     		ldrh	r3, [r3]
 444 02ba 1AB2     		sxth	r2, r3
 445 02bc E823     		mov	r3, #232
 446 02be 5B00     		lsl	r3, r3, #1
 447 02c0 FB18     		add	r3, r7, r3
 448 02c2 1B68     		ldr	r3, [r3]
 449 02c4 B420     		mov	r0, #180
 450 02c6 4000     		lsl	r0, r0, #1
 451 02c8 3818     		add	r0, r7, r0
 452 02ca 0160     		str	r1, [r0]
 453 02cc B221     		mov	r1, #178
 454 02ce 4900     		lsl	r1, r1, #1
 455 02d0 7918     		add	r1, r7, r1
 456 02d2 0A60     		str	r2, [r1]
 457 02d4 B022     		mov	r2, #176
 458 02d6 5200     		lsl	r2, r2, #1
 459 02d8 BA18     		add	r2, r7, r2
 460 02da 1360     		str	r3, [r2]
 461              	.LBB66:
 462              	.LBB67:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 463              		.loc 2 952 0
 464 02dc B423     		mov	r3, #180
 465 02de 5B00     		lsl	r3, r3, #1
 466 02e0 FB18     		add	r3, r7, r3
 467 02e2 1B68     		ldr	r3, [r3]
 468 02e4 1B04     		lsl	r3, r3, #16
 469 02e6 1B14     		asr	r3, r3, #16
 470 02e8 B222     		mov	r2, #178
 471 02ea 5200     		lsl	r2, r2, #1
 472 02ec BA18     		add	r2, r7, r2
 473 02ee 1268     		ldr	r2, [r2]
 474 02f0 1204     		lsl	r2, r2, #16
 475 02f2 1214     		asr	r2, r2, #16
 476 02f4 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 477              		.loc 2 953 0
 478 02f6 B423     		mov	r3, #180
 479 02f8 5B00     		lsl	r3, r3, #1
 480 02fa FB18     		add	r3, r7, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 30


 481 02fc 1B68     		ldr	r3, [r3]
 482 02fe 1B14     		asr	r3, r3, #16
 483 0300 B221     		mov	r1, #178
 484 0302 4900     		lsl	r1, r1, #1
 485 0304 7918     		add	r1, r7, r1
 486 0306 0968     		ldr	r1, [r1]
 487 0308 0914     		asr	r1, r1, #16
 488 030a 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 489              		.loc 2 952 0
 490 030c D218     		add	r2, r2, r3
 491              		.loc 2 954 0
 492 030e B023     		mov	r3, #176
 493 0310 5B00     		lsl	r3, r3, #1
 494 0312 FB18     		add	r3, r7, r3
 495 0314 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 496              		.loc 2 953 0
 497 0316 D318     		add	r3, r2, r3
 498              	.LBE67:
 499              	.LBE66:
 500              		.loc 1 210 0
 501 0318 E822     		mov	r2, #232
 502 031a 5200     		lsl	r2, r2, #1
 503 031c BA18     		add	r2, r7, r2
 504 031e 1360     		str	r3, [r2]
 211:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 212:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Decrement the loop counter */
 213:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       k--;
 505              		.loc 1 213 0
 506 0320 D823     		mov	r3, #216
 507 0322 5B00     		lsl	r3, r3, #1
 508 0324 FB18     		add	r3, r7, r3
 509 0326 1B68     		ldr	r3, [r3]
 510 0328 013B     		sub	r3, r3, #1
 511 032a D822     		mov	r2, #216
 512 032c 5200     		lsl	r2, r2, #1
 513 032e BA18     		add	r2, r7, r2
 514 0330 1360     		str	r3, [r2]
 515              	.L9:
 206:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
 516              		.loc 1 206 0
 517 0332 D823     		mov	r3, #216
 518 0334 5B00     		lsl	r3, r3, #1
 519 0336 FB18     		add	r3, r7, r3
 520 0338 1B68     		ldr	r3, [r3]
 521 033a 002B     		cmp	r3, #0
 522 033c B4D1     		bne	.L11
 214:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     }
 215:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 216:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
 217:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     *pOut = (q15_t) (sum >> 15);
 523              		.loc 1 217 0
 524 033e E823     		mov	r3, #232
 525 0340 5B00     		lsl	r3, r3, #1
 526 0342 FB18     		add	r3, r7, r3
 527 0344 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 31


 528 0346 DB13     		asr	r3, r3, #15
 529 0348 9AB2     		uxth	r2, r3
 530 034a EA23     		mov	r3, #234
 531 034c 5B00     		lsl	r3, r3, #1
 532 034e FB18     		add	r3, r7, r3
 533 0350 1B68     		ldr	r3, [r3]
 534 0352 1A80     		strh	r2, [r3]
 218:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Destination pointer is updated according to the address modifier, inc */
 219:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     pOut += inc;
 535              		.loc 1 219 0
 536 0354 CE23     		mov	r3, #206
 537 0356 5B00     		lsl	r3, r3, #1
 538 0358 FB18     		add	r3, r7, r3
 539 035a 1B68     		ldr	r3, [r3]
 540 035c 5B00     		lsl	r3, r3, #1
 541 035e EA22     		mov	r2, #234
 542 0360 5200     		lsl	r2, r2, #1
 543 0362 BA18     		add	r2, r7, r2
 544 0364 1268     		ldr	r2, [r2]
 545 0366 D318     		add	r3, r2, r3
 546 0368 EA22     		mov	r2, #234
 547 036a 5200     		lsl	r2, r2, #1
 548 036c BA18     		add	r2, r7, r2
 549 036e 1360     		str	r3, [r2]
 220:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 221:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 222:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     py = pSrc1 - count;
 550              		.loc 1 222 0
 551 0370 D623     		mov	r3, #214
 552 0372 5B00     		lsl	r3, r3, #1
 553 0374 FB18     		add	r3, r7, r3
 554 0376 1B68     		ldr	r3, [r3]
 555 0378 5B00     		lsl	r3, r3, #1
 556 037a 5B42     		neg	r3, r3
 557 037c DE22     		mov	r2, #222
 558 037e 5200     		lsl	r2, r2, #1
 559 0380 BA18     		add	r2, r7, r2
 560 0382 1268     		ldr	r2, [r2]
 561 0384 D318     		add	r3, r2, r3
 562 0386 7B61     		str	r3, [r7, #20]
 223:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     px = pIn1;
 563              		.loc 1 223 0
 564 0388 EE23     		mov	r3, #238
 565 038a 5B00     		lsl	r3, r3, #1
 566 038c FB18     		add	r3, r7, r3
 567 038e 1B68     		ldr	r3, [r3]
 568 0390 BB61     		str	r3, [r7, #24]
 224:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 225:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Increment the MAC count */
 226:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     count++;
 569              		.loc 1 226 0
 570 0392 D623     		mov	r3, #214
 571 0394 5B00     		lsl	r3, r3, #1
 572 0396 FB18     		add	r3, r7, r3
 573 0398 1B68     		ldr	r3, [r3]
 574 039a 0133     		add	r3, r3, #1
 575 039c D622     		mov	r2, #214
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 32


 576 039e 5200     		lsl	r2, r2, #1
 577 03a0 BA18     		add	r2, r7, r2
 578 03a2 1360     		str	r3, [r2]
 227:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 228:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Decrement the loop counter */
 229:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     blockSize1--;
 579              		.loc 1 229 0
 580 03a4 D223     		mov	r3, #210
 581 03a6 5B00     		lsl	r3, r3, #1
 582 03a8 FB18     		add	r3, r7, r3
 583 03aa 1B68     		ldr	r3, [r3]
 584 03ac 013B     		sub	r3, r3, #1
 585 03ae D222     		mov	r2, #210
 586 03b0 5200     		lsl	r2, r2, #1
 587 03b2 BA18     		add	r2, r7, r2
 588 03b4 1360     		str	r3, [r2]
 589              	.L4:
 181:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   {
 590              		.loc 1 181 0
 591 03b6 D223     		mov	r3, #210
 592 03b8 5B00     		lsl	r3, r3, #1
 593 03ba FB18     		add	r3, r7, r3
 594 03bc 1B68     		ldr	r3, [r3]
 595 03be 002B     		cmp	r3, #0
 596 03c0 00D0     		beq	.LCB520
 597 03c2 C7E6     		b	.L12	@long jump
 598              	.LCB520:
 230:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   }
 231:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 232:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* --------------------------
 233:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * Initializations of stage2
 234:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * ------------------------*/
 235:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 236:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* sum = x[0] * y[0] + x[1] * y[1] +...+ x[srcBLen-1] * y[srcBLen-1]
 237:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * sum = x[1] * y[0] + x[2] * y[1] +...+ x[srcBLen] * y[srcBLen-1]
 238:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * ....
 239:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * sum = x[srcALen-srcBLen-2] * y[0] + x[srcALen-srcBLen-1] * y[1] +...+ x[srcALen-1] * y[srcBLen
 240:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    */
 241:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 242:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* Working pointer of inputA */
 243:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   px = pIn1;
 599              		.loc 1 243 0
 600 03c4 EE23     		mov	r3, #238
 601 03c6 5B00     		lsl	r3, r3, #1
 602 03c8 FB18     		add	r3, r7, r3
 603 03ca 1B68     		ldr	r3, [r3]
 604 03cc BB61     		str	r3, [r7, #24]
 244:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 245:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* Working pointer of inputB */
 246:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   py = pIn2;
 605              		.loc 1 246 0
 606 03ce EC23     		mov	r3, #236
 607 03d0 5B00     		lsl	r3, r3, #1
 608 03d2 FB18     		add	r3, r7, r3
 609 03d4 1B68     		ldr	r3, [r3]
 610 03d6 7B61     		str	r3, [r7, #20]
 247:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 33


 248:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* count is index by which the pointer pIn1 to be incremented */
 249:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   count = 0u;
 611              		.loc 1 249 0
 612 03d8 0023     		mov	r3, #0
 613 03da D622     		mov	r2, #214
 614 03dc 5200     		lsl	r2, r2, #1
 615 03de BA18     		add	r2, r7, r2
 616 03e0 1360     		str	r3, [r2]
 250:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 251:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* -------------------
 252:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * Stage2 process
 253:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * ------------------*/
 254:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 255:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 256:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * So, to loop unroll over blockSize2,
 257:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * srcBLen should be greater than or equal to 4, to loop unroll the srcBLen loop */
 258:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   if (srcBLen >= 4u)
 617              		.loc 1 258 0
 618 03e2 3B68     		ldr	r3, [r7]
 619 03e4 032B     		cmp	r3, #3
 620 03e6 01D8     		bhi	.LCB538
 621 03e8 00F00DFF 		bl	.L13	@far jump
 622              	.LCB538:
 259:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   {
 260:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Loop unroll over blockSize2, by 4 */
 261:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     blkCnt = blockSize2 >> 2u;
 623              		.loc 1 261 0
 624 03ec C823     		mov	r3, #200
 625 03ee 5B00     		lsl	r3, r3, #1
 626 03f0 FB18     		add	r3, r7, r3
 627 03f2 1B68     		ldr	r3, [r3]
 628 03f4 9B08     		lsr	r3, r3, #2
 629 03f6 D422     		mov	r2, #212
 630 03f8 5200     		lsl	r2, r2, #1
 631 03fa BA18     		add	r2, r7, r2
 632 03fc 1360     		str	r3, [r2]
 262:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 263:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     while (blkCnt > 0u)
 633              		.loc 1 263 0
 634 03fe 00F016FE 		bl	.L14	@ far jump
 635              	.L65:
 636 0402 C046     		.align	2
 637              	.L64:
 638 0404 FEFFFF7F 		.word	2147483646
 639 0408 FFFFFF7F 		.word	2147483647
 640              	.L43:
 264:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
 265:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Set all accumulators to zero */
 266:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       acc0 = 0;
 641              		.loc 1 266 0
 642 040c 0023     		mov	r3, #0
 643 040e E622     		mov	r2, #230
 644 0410 5200     		lsl	r2, r2, #1
 645 0412 BA18     		add	r2, r7, r2
 646 0414 1360     		str	r3, [r2]
 267:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       acc1 = 0;
 647              		.loc 1 267 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 34


 648 0416 0023     		mov	r3, #0
 649 0418 E422     		mov	r2, #228
 650 041a 5200     		lsl	r2, r2, #1
 651 041c BA18     		add	r2, r7, r2
 652 041e 1360     		str	r3, [r2]
 268:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       acc2 = 0;
 653              		.loc 1 268 0
 654 0420 0023     		mov	r3, #0
 655 0422 E222     		mov	r2, #226
 656 0424 5200     		lsl	r2, r2, #1
 657 0426 BA18     		add	r2, r7, r2
 658 0428 1360     		str	r3, [r2]
 269:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       acc3 = 0;
 659              		.loc 1 269 0
 660 042a 0023     		mov	r3, #0
 661 042c E022     		mov	r2, #224
 662 042e 5200     		lsl	r2, r2, #1
 663 0430 BA18     		add	r2, r7, r2
 664 0432 1360     		str	r3, [r2]
 270:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 271:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* read x[0], x[1] samples */
 272:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       x0 = *__SIMD32(px);
 665              		.loc 1 272 0
 666 0434 1823     		mov	r3, #24
 667 0436 FB18     		add	r3, r7, r3
 668 0438 1B68     		ldr	r3, [r3]
 669 043a 1B68     		ldr	r3, [r3]
 670 043c DC22     		mov	r2, #220
 671 043e 5200     		lsl	r2, r2, #1
 672 0440 BA18     		add	r2, r7, r2
 673 0442 1360     		str	r3, [r2]
 273:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* read x[1], x[2] samples */
 274:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       x1 = _SIMD32_OFFSET(px + 1);
 674              		.loc 1 274 0
 675 0444 BB69     		ldr	r3, [r7, #24]
 676 0446 0233     		add	r3, r3, #2
 677 0448 1B68     		ldr	r3, [r3]
 678 044a DA22     		mov	r2, #218
 679 044c 5200     		lsl	r2, r2, #1
 680 044e BA18     		add	r2, r7, r2
 681 0450 1360     		str	r3, [r2]
 275:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  px += 2u;
 682              		.loc 1 275 0
 683 0452 BB69     		ldr	r3, [r7, #24]
 684 0454 0433     		add	r3, r3, #4
 685 0456 BB61     		str	r3, [r7, #24]
 276:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 277:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 278:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       k = srcBLen >> 2u;
 686              		.loc 1 278 0
 687 0458 3B68     		ldr	r3, [r7]
 688 045a 9B08     		lsr	r3, r3, #2
 689 045c D822     		mov	r2, #216
 690 045e 5200     		lsl	r2, r2, #1
 691 0460 BA18     		add	r2, r7, r2
 692 0462 1360     		str	r3, [r2]
 693              	.L23:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 35


 279:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 280:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 281:Source\FilteringFunctions/arm_correlate_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 282:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       do
 283:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       {
 284:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read the first two inputB samples using SIMD:
 285:Source\FilteringFunctions/arm_correlate_fast_q15.c ****          * y[0] and y[1] */
 286:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         c0 = *__SIMD32(py)++;
 694              		.loc 1 286 0 discriminator 1
 695 0464 1423     		mov	r3, #20
 696 0466 FB18     		add	r3, r7, r3
 697 0468 1A68     		ldr	r2, [r3]
 698 046a 111D     		add	r1, r2, #4
 699 046c 1960     		str	r1, [r3]
 700 046e 1368     		ldr	r3, [r2]
 701 0470 C622     		mov	r2, #198
 702 0472 5200     		lsl	r2, r2, #1
 703 0474 BA18     		add	r2, r7, r2
 704 0476 1360     		str	r3, [r2]
 287:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 288:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* acc0 +=  x[0] * y[0] + x[1] * y[1] */
 289:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc0 = __SMLAD(x0, c0, acc0);
 705              		.loc 1 289 0 discriminator 1
 706 0478 DC23     		mov	r3, #220
 707 047a 5B00     		lsl	r3, r3, #1
 708 047c FB18     		add	r3, r7, r3
 709 047e 1968     		ldr	r1, [r3]
 710 0480 C623     		mov	r3, #198
 711 0482 5B00     		lsl	r3, r3, #1
 712 0484 FB18     		add	r3, r7, r3
 713 0486 1A68     		ldr	r2, [r3]
 714 0488 E623     		mov	r3, #230
 715 048a 5B00     		lsl	r3, r3, #1
 716 048c FB18     		add	r3, r7, r3
 717 048e 1B68     		ldr	r3, [r3]
 718 0490 AE20     		mov	r0, #174
 719 0492 4000     		lsl	r0, r0, #1
 720 0494 3818     		add	r0, r7, r0
 721 0496 0160     		str	r1, [r0]
 722 0498 AC21     		mov	r1, #172
 723 049a 4900     		lsl	r1, r1, #1
 724 049c 7918     		add	r1, r7, r1
 725 049e 0A60     		str	r2, [r1]
 726 04a0 AA22     		mov	r2, #170
 727 04a2 5200     		lsl	r2, r2, #1
 728 04a4 BA18     		add	r2, r7, r2
 729 04a6 1360     		str	r3, [r2]
 730              	.LBB68:
 731              	.LBB69:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 732              		.loc 2 952 0 discriminator 1
 733 04a8 AE23     		mov	r3, #174
 734 04aa 5B00     		lsl	r3, r3, #1
 735 04ac FB18     		add	r3, r7, r3
 736 04ae 1B68     		ldr	r3, [r3]
 737 04b0 1B04     		lsl	r3, r3, #16
 738 04b2 1B14     		asr	r3, r3, #16
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 36


 739 04b4 AC22     		mov	r2, #172
 740 04b6 5200     		lsl	r2, r2, #1
 741 04b8 BA18     		add	r2, r7, r2
 742 04ba 1268     		ldr	r2, [r2]
 743 04bc 1204     		lsl	r2, r2, #16
 744 04be 1214     		asr	r2, r2, #16
 745 04c0 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 746              		.loc 2 953 0 discriminator 1
 747 04c2 AE23     		mov	r3, #174
 748 04c4 5B00     		lsl	r3, r3, #1
 749 04c6 FB18     		add	r3, r7, r3
 750 04c8 1B68     		ldr	r3, [r3]
 751 04ca 1B14     		asr	r3, r3, #16
 752 04cc AC21     		mov	r1, #172
 753 04ce 4900     		lsl	r1, r1, #1
 754 04d0 7918     		add	r1, r7, r1
 755 04d2 0968     		ldr	r1, [r1]
 756 04d4 0914     		asr	r1, r1, #16
 757 04d6 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 758              		.loc 2 952 0 discriminator 1
 759 04d8 D218     		add	r2, r2, r3
 760              		.loc 2 954 0 discriminator 1
 761 04da AA23     		mov	r3, #170
 762 04dc 5B00     		lsl	r3, r3, #1
 763 04de FB18     		add	r3, r7, r3
 764 04e0 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 765              		.loc 2 953 0 discriminator 1
 766 04e2 D318     		add	r3, r2, r3
 767              	.LBE69:
 768              	.LBE68:
 769              		.loc 1 289 0 discriminator 1
 770 04e4 E622     		mov	r2, #230
 771 04e6 5200     		lsl	r2, r2, #1
 772 04e8 BA18     		add	r2, r7, r2
 773 04ea 1360     		str	r3, [r2]
 290:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 291:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* acc1 +=  x[1] * y[0] + x[2] * y[1] */
 292:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc1 = __SMLAD(x1, c0, acc1);
 774              		.loc 1 292 0 discriminator 1
 775 04ec DA23     		mov	r3, #218
 776 04ee 5B00     		lsl	r3, r3, #1
 777 04f0 FB18     		add	r3, r7, r3
 778 04f2 1968     		ldr	r1, [r3]
 779 04f4 C623     		mov	r3, #198
 780 04f6 5B00     		lsl	r3, r3, #1
 781 04f8 FB18     		add	r3, r7, r3
 782 04fa 1A68     		ldr	r2, [r3]
 783 04fc E423     		mov	r3, #228
 784 04fe 5B00     		lsl	r3, r3, #1
 785 0500 FB18     		add	r3, r7, r3
 786 0502 1B68     		ldr	r3, [r3]
 787 0504 A820     		mov	r0, #168
 788 0506 4000     		lsl	r0, r0, #1
 789 0508 3818     		add	r0, r7, r0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 37


 790 050a 0160     		str	r1, [r0]
 791 050c A621     		mov	r1, #166
 792 050e 4900     		lsl	r1, r1, #1
 793 0510 7918     		add	r1, r7, r1
 794 0512 0A60     		str	r2, [r1]
 795 0514 A422     		mov	r2, #164
 796 0516 5200     		lsl	r2, r2, #1
 797 0518 BA18     		add	r2, r7, r2
 798 051a 1360     		str	r3, [r2]
 799              	.LBB70:
 800              	.LBB71:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 801              		.loc 2 952 0 discriminator 1
 802 051c A823     		mov	r3, #168
 803 051e 5B00     		lsl	r3, r3, #1
 804 0520 FB18     		add	r3, r7, r3
 805 0522 1B68     		ldr	r3, [r3]
 806 0524 1B04     		lsl	r3, r3, #16
 807 0526 1B14     		asr	r3, r3, #16
 808 0528 A622     		mov	r2, #166
 809 052a 5200     		lsl	r2, r2, #1
 810 052c BA18     		add	r2, r7, r2
 811 052e 1268     		ldr	r2, [r2]
 812 0530 1204     		lsl	r2, r2, #16
 813 0532 1214     		asr	r2, r2, #16
 814 0534 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 815              		.loc 2 953 0 discriminator 1
 816 0536 A823     		mov	r3, #168
 817 0538 5B00     		lsl	r3, r3, #1
 818 053a FB18     		add	r3, r7, r3
 819 053c 1B68     		ldr	r3, [r3]
 820 053e 1B14     		asr	r3, r3, #16
 821 0540 A621     		mov	r1, #166
 822 0542 4900     		lsl	r1, r1, #1
 823 0544 7918     		add	r1, r7, r1
 824 0546 0968     		ldr	r1, [r1]
 825 0548 0914     		asr	r1, r1, #16
 826 054a 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 827              		.loc 2 952 0 discriminator 1
 828 054c D218     		add	r2, r2, r3
 829              		.loc 2 954 0 discriminator 1
 830 054e A423     		mov	r3, #164
 831 0550 5B00     		lsl	r3, r3, #1
 832 0552 FB18     		add	r3, r7, r3
 833 0554 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 834              		.loc 2 953 0 discriminator 1
 835 0556 D318     		add	r3, r2, r3
 836              	.LBE71:
 837              	.LBE70:
 838              		.loc 1 292 0 discriminator 1
 839 0558 E422     		mov	r2, #228
 840 055a 5200     		lsl	r2, r2, #1
 841 055c BA18     		add	r2, r7, r2
 842 055e 1360     		str	r3, [r2]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 38


 293:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 294:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read x[2], x[3] */
 295:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         x2 = *__SIMD32(px);
 843              		.loc 1 295 0 discriminator 1
 844 0560 1823     		mov	r3, #24
 845 0562 FB18     		add	r3, r7, r3
 846 0564 1B68     		ldr	r3, [r3]
 847 0566 1B68     		ldr	r3, [r3]
 848 0568 C422     		mov	r2, #196
 849 056a 5200     		lsl	r2, r2, #1
 850 056c BA18     		add	r2, r7, r2
 851 056e 1360     		str	r3, [r2]
 296:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 297:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read x[3], x[4] */
 298:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         x3 = _SIMD32_OFFSET(px + 1);
 852              		.loc 1 298 0 discriminator 1
 853 0570 BB69     		ldr	r3, [r7, #24]
 854 0572 0233     		add	r3, r3, #2
 855 0574 1B68     		ldr	r3, [r3]
 856 0576 C222     		mov	r2, #194
 857 0578 5200     		lsl	r2, r2, #1
 858 057a BA18     		add	r2, r7, r2
 859 057c 1360     		str	r3, [r2]
 299:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 300:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* acc2 +=  x[2] * y[0] + x[3] * y[1] */
 301:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc2 = __SMLAD(x2, c0, acc2);
 860              		.loc 1 301 0 discriminator 1
 861 057e C423     		mov	r3, #196
 862 0580 5B00     		lsl	r3, r3, #1
 863 0582 FB18     		add	r3, r7, r3
 864 0584 1968     		ldr	r1, [r3]
 865 0586 C623     		mov	r3, #198
 866 0588 5B00     		lsl	r3, r3, #1
 867 058a FB18     		add	r3, r7, r3
 868 058c 1A68     		ldr	r2, [r3]
 869 058e E223     		mov	r3, #226
 870 0590 5B00     		lsl	r3, r3, #1
 871 0592 FB18     		add	r3, r7, r3
 872 0594 1B68     		ldr	r3, [r3]
 873 0596 A220     		mov	r0, #162
 874 0598 4000     		lsl	r0, r0, #1
 875 059a 3818     		add	r0, r7, r0
 876 059c 0160     		str	r1, [r0]
 877 059e A021     		mov	r1, #160
 878 05a0 4900     		lsl	r1, r1, #1
 879 05a2 7918     		add	r1, r7, r1
 880 05a4 0A60     		str	r2, [r1]
 881 05a6 9E22     		mov	r2, #158
 882 05a8 5200     		lsl	r2, r2, #1
 883 05aa BA18     		add	r2, r7, r2
 884 05ac 1360     		str	r3, [r2]
 885              	.LBB72:
 886              	.LBB73:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 887              		.loc 2 952 0 discriminator 1
 888 05ae A223     		mov	r3, #162
 889 05b0 5B00     		lsl	r3, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 39


 890 05b2 FB18     		add	r3, r7, r3
 891 05b4 1B68     		ldr	r3, [r3]
 892 05b6 1B04     		lsl	r3, r3, #16
 893 05b8 1B14     		asr	r3, r3, #16
 894 05ba A022     		mov	r2, #160
 895 05bc 5200     		lsl	r2, r2, #1
 896 05be BA18     		add	r2, r7, r2
 897 05c0 1268     		ldr	r2, [r2]
 898 05c2 1204     		lsl	r2, r2, #16
 899 05c4 1214     		asr	r2, r2, #16
 900 05c6 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 901              		.loc 2 953 0 discriminator 1
 902 05c8 A223     		mov	r3, #162
 903 05ca 5B00     		lsl	r3, r3, #1
 904 05cc FB18     		add	r3, r7, r3
 905 05ce 1B68     		ldr	r3, [r3]
 906 05d0 1B14     		asr	r3, r3, #16
 907 05d2 A021     		mov	r1, #160
 908 05d4 4900     		lsl	r1, r1, #1
 909 05d6 7918     		add	r1, r7, r1
 910 05d8 0968     		ldr	r1, [r1]
 911 05da 0914     		asr	r1, r1, #16
 912 05dc 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 913              		.loc 2 952 0 discriminator 1
 914 05de D218     		add	r2, r2, r3
 915              		.loc 2 954 0 discriminator 1
 916 05e0 9E23     		mov	r3, #158
 917 05e2 5B00     		lsl	r3, r3, #1
 918 05e4 FB18     		add	r3, r7, r3
 919 05e6 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 920              		.loc 2 953 0 discriminator 1
 921 05e8 D318     		add	r3, r2, r3
 922              	.LBE73:
 923              	.LBE72:
 924              		.loc 1 301 0 discriminator 1
 925 05ea E222     		mov	r2, #226
 926 05ec 5200     		lsl	r2, r2, #1
 927 05ee BA18     		add	r2, r7, r2
 928 05f0 1360     		str	r3, [r2]
 302:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 303:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* acc3 +=  x[3] * y[0] + x[4] * y[1] */
 304:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc3 = __SMLAD(x3, c0, acc3);
 929              		.loc 1 304 0 discriminator 1
 930 05f2 C223     		mov	r3, #194
 931 05f4 5B00     		lsl	r3, r3, #1
 932 05f6 FB18     		add	r3, r7, r3
 933 05f8 1968     		ldr	r1, [r3]
 934 05fa C623     		mov	r3, #198
 935 05fc 5B00     		lsl	r3, r3, #1
 936 05fe FB18     		add	r3, r7, r3
 937 0600 1A68     		ldr	r2, [r3]
 938 0602 E023     		mov	r3, #224
 939 0604 5B00     		lsl	r3, r3, #1
 940 0606 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 40


 941 0608 1B68     		ldr	r3, [r3]
 942 060a 9C20     		mov	r0, #156
 943 060c 4000     		lsl	r0, r0, #1
 944 060e 3818     		add	r0, r7, r0
 945 0610 0160     		str	r1, [r0]
 946 0612 9A21     		mov	r1, #154
 947 0614 4900     		lsl	r1, r1, #1
 948 0616 7918     		add	r1, r7, r1
 949 0618 0A60     		str	r2, [r1]
 950 061a 9822     		mov	r2, #152
 951 061c 5200     		lsl	r2, r2, #1
 952 061e BA18     		add	r2, r7, r2
 953 0620 1360     		str	r3, [r2]
 954              	.LBB74:
 955              	.LBB75:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 956              		.loc 2 952 0 discriminator 1
 957 0622 9C23     		mov	r3, #156
 958 0624 5B00     		lsl	r3, r3, #1
 959 0626 FB18     		add	r3, r7, r3
 960 0628 1B68     		ldr	r3, [r3]
 961 062a 1B04     		lsl	r3, r3, #16
 962 062c 1B14     		asr	r3, r3, #16
 963 062e 9A22     		mov	r2, #154
 964 0630 5200     		lsl	r2, r2, #1
 965 0632 BA18     		add	r2, r7, r2
 966 0634 1268     		ldr	r2, [r2]
 967 0636 1204     		lsl	r2, r2, #16
 968 0638 1214     		asr	r2, r2, #16
 969 063a 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 970              		.loc 2 953 0 discriminator 1
 971 063c 9C23     		mov	r3, #156
 972 063e 5B00     		lsl	r3, r3, #1
 973 0640 FB18     		add	r3, r7, r3
 974 0642 1B68     		ldr	r3, [r3]
 975 0644 1B14     		asr	r3, r3, #16
 976 0646 9A21     		mov	r1, #154
 977 0648 4900     		lsl	r1, r1, #1
 978 064a 7918     		add	r1, r7, r1
 979 064c 0968     		ldr	r1, [r1]
 980 064e 0914     		asr	r1, r1, #16
 981 0650 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 982              		.loc 2 952 0 discriminator 1
 983 0652 D218     		add	r2, r2, r3
 984              		.loc 2 954 0 discriminator 1
 985 0654 9823     		mov	r3, #152
 986 0656 5B00     		lsl	r3, r3, #1
 987 0658 FB18     		add	r3, r7, r3
 988 065a 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 989              		.loc 2 953 0 discriminator 1
 990 065c D318     		add	r3, r2, r3
 991              	.LBE75:
 992              	.LBE74:
 993              		.loc 1 304 0 discriminator 1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 41


 994 065e E022     		mov	r2, #224
 995 0660 5200     		lsl	r2, r2, #1
 996 0662 BA18     		add	r2, r7, r2
 997 0664 1360     		str	r3, [r2]
 305:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 306:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read y[2] and y[3] */
 307:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         c0 = *__SIMD32(py)++;
 998              		.loc 1 307 0 discriminator 1
 999 0666 1423     		mov	r3, #20
 1000 0668 FB18     		add	r3, r7, r3
 1001 066a 1A68     		ldr	r2, [r3]
 1002 066c 111D     		add	r1, r2, #4
 1003 066e 1960     		str	r1, [r3]
 1004 0670 1368     		ldr	r3, [r2]
 1005 0672 C622     		mov	r2, #198
 1006 0674 5200     		lsl	r2, r2, #1
 1007 0676 BA18     		add	r2, r7, r2
 1008 0678 1360     		str	r3, [r2]
 308:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 309:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* acc0 +=  x[2] * y[2] + x[3] * y[3] */
 310:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc0 = __SMLAD(x2, c0, acc0);
 1009              		.loc 1 310 0 discriminator 1
 1010 067a C423     		mov	r3, #196
 1011 067c 5B00     		lsl	r3, r3, #1
 1012 067e FB18     		add	r3, r7, r3
 1013 0680 1968     		ldr	r1, [r3]
 1014 0682 C623     		mov	r3, #198
 1015 0684 5B00     		lsl	r3, r3, #1
 1016 0686 FB18     		add	r3, r7, r3
 1017 0688 1A68     		ldr	r2, [r3]
 1018 068a E623     		mov	r3, #230
 1019 068c 5B00     		lsl	r3, r3, #1
 1020 068e FB18     		add	r3, r7, r3
 1021 0690 1B68     		ldr	r3, [r3]
 1022 0692 9620     		mov	r0, #150
 1023 0694 4000     		lsl	r0, r0, #1
 1024 0696 3818     		add	r0, r7, r0
 1025 0698 0160     		str	r1, [r0]
 1026 069a 9421     		mov	r1, #148
 1027 069c 4900     		lsl	r1, r1, #1
 1028 069e 7918     		add	r1, r7, r1
 1029 06a0 0A60     		str	r2, [r1]
 1030 06a2 9222     		mov	r2, #146
 1031 06a4 5200     		lsl	r2, r2, #1
 1032 06a6 BA18     		add	r2, r7, r2
 1033 06a8 1360     		str	r3, [r2]
 1034              	.LBB76:
 1035              	.LBB77:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1036              		.loc 2 952 0 discriminator 1
 1037 06aa 9623     		mov	r3, #150
 1038 06ac 5B00     		lsl	r3, r3, #1
 1039 06ae FB18     		add	r3, r7, r3
 1040 06b0 1B68     		ldr	r3, [r3]
 1041 06b2 1B04     		lsl	r3, r3, #16
 1042 06b4 1B14     		asr	r3, r3, #16
 1043 06b6 9422     		mov	r2, #148
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 42


 1044 06b8 5200     		lsl	r2, r2, #1
 1045 06ba BA18     		add	r2, r7, r2
 1046 06bc 1268     		ldr	r2, [r2]
 1047 06be 1204     		lsl	r2, r2, #16
 1048 06c0 1214     		asr	r2, r2, #16
 1049 06c2 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1050              		.loc 2 953 0 discriminator 1
 1051 06c4 9623     		mov	r3, #150
 1052 06c6 5B00     		lsl	r3, r3, #1
 1053 06c8 FB18     		add	r3, r7, r3
 1054 06ca 1B68     		ldr	r3, [r3]
 1055 06cc 1B14     		asr	r3, r3, #16
 1056 06ce 9421     		mov	r1, #148
 1057 06d0 4900     		lsl	r1, r1, #1
 1058 06d2 7918     		add	r1, r7, r1
 1059 06d4 0968     		ldr	r1, [r1]
 1060 06d6 0914     		asr	r1, r1, #16
 1061 06d8 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1062              		.loc 2 952 0 discriminator 1
 1063 06da D218     		add	r2, r2, r3
 1064              		.loc 2 954 0 discriminator 1
 1065 06dc 9223     		mov	r3, #146
 1066 06de 5B00     		lsl	r3, r3, #1
 1067 06e0 FB18     		add	r3, r7, r3
 1068 06e2 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1069              		.loc 2 953 0 discriminator 1
 1070 06e4 D318     		add	r3, r2, r3
 1071              	.LBE77:
 1072              	.LBE76:
 1073              		.loc 1 310 0 discriminator 1
 1074 06e6 E622     		mov	r2, #230
 1075 06e8 5200     		lsl	r2, r2, #1
 1076 06ea BA18     		add	r2, r7, r2
 1077 06ec 1360     		str	r3, [r2]
 311:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 312:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* acc1 +=  x[3] * y[2] + x[4] * y[3] */
 313:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc1 = __SMLAD(x3, c0, acc1);
 1078              		.loc 1 313 0 discriminator 1
 1079 06ee C223     		mov	r3, #194
 1080 06f0 5B00     		lsl	r3, r3, #1
 1081 06f2 FB18     		add	r3, r7, r3
 1082 06f4 1968     		ldr	r1, [r3]
 1083 06f6 C623     		mov	r3, #198
 1084 06f8 5B00     		lsl	r3, r3, #1
 1085 06fa FB18     		add	r3, r7, r3
 1086 06fc 1A68     		ldr	r2, [r3]
 1087 06fe E423     		mov	r3, #228
 1088 0700 5B00     		lsl	r3, r3, #1
 1089 0702 FB18     		add	r3, r7, r3
 1090 0704 1B68     		ldr	r3, [r3]
 1091 0706 9020     		mov	r0, #144
 1092 0708 4000     		lsl	r0, r0, #1
 1093 070a 3818     		add	r0, r7, r0
 1094 070c 0160     		str	r1, [r0]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 43


 1095 070e 8E21     		mov	r1, #142
 1096 0710 4900     		lsl	r1, r1, #1
 1097 0712 7918     		add	r1, r7, r1
 1098 0714 0A60     		str	r2, [r1]
 1099 0716 8C22     		mov	r2, #140
 1100 0718 5200     		lsl	r2, r2, #1
 1101 071a BA18     		add	r2, r7, r2
 1102 071c 1360     		str	r3, [r2]
 1103              	.LBB78:
 1104              	.LBB79:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1105              		.loc 2 952 0 discriminator 1
 1106 071e 9023     		mov	r3, #144
 1107 0720 5B00     		lsl	r3, r3, #1
 1108 0722 FB18     		add	r3, r7, r3
 1109 0724 1B68     		ldr	r3, [r3]
 1110 0726 1B04     		lsl	r3, r3, #16
 1111 0728 1B14     		asr	r3, r3, #16
 1112 072a 8E22     		mov	r2, #142
 1113 072c 5200     		lsl	r2, r2, #1
 1114 072e BA18     		add	r2, r7, r2
 1115 0730 1268     		ldr	r2, [r2]
 1116 0732 1204     		lsl	r2, r2, #16
 1117 0734 1214     		asr	r2, r2, #16
 1118 0736 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1119              		.loc 2 953 0 discriminator 1
 1120 0738 9023     		mov	r3, #144
 1121 073a 5B00     		lsl	r3, r3, #1
 1122 073c FB18     		add	r3, r7, r3
 1123 073e 1B68     		ldr	r3, [r3]
 1124 0740 1B14     		asr	r3, r3, #16
 1125 0742 8E21     		mov	r1, #142
 1126 0744 4900     		lsl	r1, r1, #1
 1127 0746 7918     		add	r1, r7, r1
 1128 0748 0968     		ldr	r1, [r1]
 1129 074a 0914     		asr	r1, r1, #16
 1130 074c 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1131              		.loc 2 952 0 discriminator 1
 1132 074e D218     		add	r2, r2, r3
 1133              		.loc 2 954 0 discriminator 1
 1134 0750 8C23     		mov	r3, #140
 1135 0752 5B00     		lsl	r3, r3, #1
 1136 0754 FB18     		add	r3, r7, r3
 1137 0756 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1138              		.loc 2 953 0 discriminator 1
 1139 0758 D318     		add	r3, r2, r3
 1140              	.LBE79:
 1141              	.LBE78:
 1142              		.loc 1 313 0 discriminator 1
 1143 075a E422     		mov	r2, #228
 1144 075c 5200     		lsl	r2, r2, #1
 1145 075e BA18     		add	r2, r7, r2
 1146 0760 1360     		str	r3, [r2]
 314:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 44


 315:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read x[4], x[5] */
 316:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         x0 = _SIMD32_OFFSET(px + 2);
 1147              		.loc 1 316 0 discriminator 1
 1148 0762 BB69     		ldr	r3, [r7, #24]
 1149 0764 5B68     		ldr	r3, [r3, #4]
 1150 0766 DC22     		mov	r2, #220
 1151 0768 5200     		lsl	r2, r2, #1
 1152 076a BA18     		add	r2, r7, r2
 1153 076c 1360     		str	r3, [r2]
 317:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 318:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read x[5], x[6] */
 319:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         x1 = _SIMD32_OFFSET(px + 3);
 1154              		.loc 1 319 0 discriminator 1
 1155 076e BB69     		ldr	r3, [r7, #24]
 1156 0770 0633     		add	r3, r3, #6
 1157 0772 1B68     		ldr	r3, [r3]
 1158 0774 DA22     		mov	r2, #218
 1159 0776 5200     		lsl	r2, r2, #1
 1160 0778 BA18     		add	r2, r7, r2
 1161 077a 1360     		str	r3, [r2]
 320:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		px += 4u;
 1162              		.loc 1 320 0 discriminator 1
 1163 077c BB69     		ldr	r3, [r7, #24]
 1164 077e 0833     		add	r3, r3, #8
 1165 0780 BB61     		str	r3, [r7, #24]
 321:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 322:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* acc2 +=  x[4] * y[2] + x[5] * y[3] */
 323:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc2 = __SMLAD(x0, c0, acc2);
 1166              		.loc 1 323 0 discriminator 1
 1167 0782 DC23     		mov	r3, #220
 1168 0784 5B00     		lsl	r3, r3, #1
 1169 0786 FB18     		add	r3, r7, r3
 1170 0788 1968     		ldr	r1, [r3]
 1171 078a C623     		mov	r3, #198
 1172 078c 5B00     		lsl	r3, r3, #1
 1173 078e FB18     		add	r3, r7, r3
 1174 0790 1A68     		ldr	r2, [r3]
 1175 0792 E223     		mov	r3, #226
 1176 0794 5B00     		lsl	r3, r3, #1
 1177 0796 FB18     		add	r3, r7, r3
 1178 0798 1B68     		ldr	r3, [r3]
 1179 079a 8A20     		mov	r0, #138
 1180 079c 4000     		lsl	r0, r0, #1
 1181 079e 3818     		add	r0, r7, r0
 1182 07a0 0160     		str	r1, [r0]
 1183 07a2 8821     		mov	r1, #136
 1184 07a4 4900     		lsl	r1, r1, #1
 1185 07a6 7918     		add	r1, r7, r1
 1186 07a8 0A60     		str	r2, [r1]
 1187 07aa 8622     		mov	r2, #134
 1188 07ac 5200     		lsl	r2, r2, #1
 1189 07ae BA18     		add	r2, r7, r2
 1190 07b0 1360     		str	r3, [r2]
 1191              	.LBB80:
 1192              	.LBB81:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1193              		.loc 2 952 0 discriminator 1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 45


 1194 07b2 8A23     		mov	r3, #138
 1195 07b4 5B00     		lsl	r3, r3, #1
 1196 07b6 FB18     		add	r3, r7, r3
 1197 07b8 1B68     		ldr	r3, [r3]
 1198 07ba 1B04     		lsl	r3, r3, #16
 1199 07bc 1B14     		asr	r3, r3, #16
 1200 07be 8822     		mov	r2, #136
 1201 07c0 5200     		lsl	r2, r2, #1
 1202 07c2 BA18     		add	r2, r7, r2
 1203 07c4 1268     		ldr	r2, [r2]
 1204 07c6 1204     		lsl	r2, r2, #16
 1205 07c8 1214     		asr	r2, r2, #16
 1206 07ca 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1207              		.loc 2 953 0 discriminator 1
 1208 07cc 8A23     		mov	r3, #138
 1209 07ce 5B00     		lsl	r3, r3, #1
 1210 07d0 FB18     		add	r3, r7, r3
 1211 07d2 1B68     		ldr	r3, [r3]
 1212 07d4 1B14     		asr	r3, r3, #16
 1213 07d6 8821     		mov	r1, #136
 1214 07d8 4900     		lsl	r1, r1, #1
 1215 07da 7918     		add	r1, r7, r1
 1216 07dc 0968     		ldr	r1, [r1]
 1217 07de 0914     		asr	r1, r1, #16
 1218 07e0 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1219              		.loc 2 952 0 discriminator 1
 1220 07e2 D218     		add	r2, r2, r3
 1221              		.loc 2 954 0 discriminator 1
 1222 07e4 8623     		mov	r3, #134
 1223 07e6 5B00     		lsl	r3, r3, #1
 1224 07e8 FB18     		add	r3, r7, r3
 1225 07ea 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1226              		.loc 2 953 0 discriminator 1
 1227 07ec D318     		add	r3, r2, r3
 1228              	.LBE81:
 1229              	.LBE80:
 1230              		.loc 1 323 0 discriminator 1
 1231 07ee E222     		mov	r2, #226
 1232 07f0 5200     		lsl	r2, r2, #1
 1233 07f2 BA18     		add	r2, r7, r2
 1234 07f4 1360     		str	r3, [r2]
 324:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 325:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* acc3 +=  x[5] * y[2] + x[6] * y[3] */
 326:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc3 = __SMLAD(x1, c0, acc3);
 1235              		.loc 1 326 0 discriminator 1
 1236 07f6 DA23     		mov	r3, #218
 1237 07f8 5B00     		lsl	r3, r3, #1
 1238 07fa FB18     		add	r3, r7, r3
 1239 07fc 1968     		ldr	r1, [r3]
 1240 07fe C623     		mov	r3, #198
 1241 0800 5B00     		lsl	r3, r3, #1
 1242 0802 FB18     		add	r3, r7, r3
 1243 0804 1A68     		ldr	r2, [r3]
 1244 0806 E023     		mov	r3, #224
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 46


 1245 0808 5B00     		lsl	r3, r3, #1
 1246 080a FB18     		add	r3, r7, r3
 1247 080c 1B68     		ldr	r3, [r3]
 1248 080e 8420     		mov	r0, #132
 1249 0810 4000     		lsl	r0, r0, #1
 1250 0812 3818     		add	r0, r7, r0
 1251 0814 0160     		str	r1, [r0]
 1252 0816 791D     		add	r1, r7, #5
 1253 0818 FF31     		add	r1, r1, #255
 1254 081a 0A60     		str	r2, [r1]
 1255 081c 7A1C     		add	r2, r7, #1
 1256 081e FF32     		add	r2, r2, #255
 1257 0820 1360     		str	r3, [r2]
 1258              	.LBB82:
 1259              	.LBB83:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1260              		.loc 2 952 0 discriminator 1
 1261 0822 8423     		mov	r3, #132
 1262 0824 5B00     		lsl	r3, r3, #1
 1263 0826 FB18     		add	r3, r7, r3
 1264 0828 1B68     		ldr	r3, [r3]
 1265 082a 1B04     		lsl	r3, r3, #16
 1266 082c 1B14     		asr	r3, r3, #16
 1267 082e 7A1D     		add	r2, r7, #5
 1268 0830 FF32     		add	r2, r2, #255
 1269 0832 1268     		ldr	r2, [r2]
 1270 0834 1204     		lsl	r2, r2, #16
 1271 0836 1214     		asr	r2, r2, #16
 1272 0838 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1273              		.loc 2 953 0 discriminator 1
 1274 083a 8423     		mov	r3, #132
 1275 083c 5B00     		lsl	r3, r3, #1
 1276 083e FB18     		add	r3, r7, r3
 1277 0840 1B68     		ldr	r3, [r3]
 1278 0842 1B14     		asr	r3, r3, #16
 1279 0844 791D     		add	r1, r7, #5
 1280 0846 FF31     		add	r1, r1, #255
 1281 0848 0968     		ldr	r1, [r1]
 1282 084a 0914     		asr	r1, r1, #16
 1283 084c 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1284              		.loc 2 952 0 discriminator 1
 1285 084e D218     		add	r2, r2, r3
 1286              		.loc 2 954 0 discriminator 1
 1287 0850 7B1C     		add	r3, r7, #1
 1288 0852 FF33     		add	r3, r3, #255
 1289 0854 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1290              		.loc 2 953 0 discriminator 1
 1291 0856 D318     		add	r3, r2, r3
 1292              	.LBE83:
 1293              	.LBE82:
 1294              		.loc 1 326 0 discriminator 1
 1295 0858 E022     		mov	r2, #224
 1296 085a 5200     		lsl	r2, r2, #1
 1297 085c BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 47


 1298 085e 1360     		str	r3, [r2]
 327:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 328:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       } while (--k);
 1299              		.loc 1 328 0 discriminator 1
 1300 0860 D823     		mov	r3, #216
 1301 0862 5B00     		lsl	r3, r3, #1
 1302 0864 FB18     		add	r3, r7, r3
 1303 0866 1B68     		ldr	r3, [r3]
 1304 0868 013B     		sub	r3, r3, #1
 1305 086a D822     		mov	r2, #216
 1306 086c 5200     		lsl	r2, r2, #1
 1307 086e BA18     		add	r2, r7, r2
 1308 0870 1360     		str	r3, [r2]
 1309 0872 D823     		mov	r3, #216
 1310 0874 5B00     		lsl	r3, r3, #1
 1311 0876 FB18     		add	r3, r7, r3
 1312 0878 1B68     		ldr	r3, [r3]
 1313 087a 002B     		cmp	r3, #0
 1314 087c 00D0     		beq	.LCB1161
 1315 087e F1E5     		b	.L23	@long jump
 1316              	.LCB1161:
 329:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 330:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* For the next MAC operations, SIMD is not used
 331:Source\FilteringFunctions/arm_correlate_fast_q15.c ****        * So, the 16 bit pointer if inputB, py is updated */
 332:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 333:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 334:Source\FilteringFunctions/arm_correlate_fast_q15.c ****        ** No loop unrolling is used. */
 335:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       k = srcBLen % 0x4u;
 1317              		.loc 1 335 0
 1318 0880 3B68     		ldr	r3, [r7]
 1319 0882 0322     		mov	r2, #3
 1320 0884 1340     		and	r3, r2
 1321 0886 D822     		mov	r2, #216
 1322 0888 5200     		lsl	r2, r2, #1
 1323 088a BA18     		add	r2, r7, r2
 1324 088c 1360     		str	r3, [r2]
 336:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 337:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       if (k == 1u)
 1325              		.loc 1 337 0
 1326 088e D823     		mov	r3, #216
 1327 0890 5B00     		lsl	r3, r3, #1
 1328 0892 FB18     		add	r3, r7, r3
 1329 0894 1B68     		ldr	r3, [r3]
 1330 0896 012B     		cmp	r3, #1
 1331 0898 00D0     		beq	.LCB1174
 1332 089a E3E0     		b	.L24	@long jump
 1333              	.LCB1174:
 338:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       {
 339:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read y[4] */
 340:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         c0 = *py;
 1334              		.loc 1 340 0
 1335 089c 7B69     		ldr	r3, [r7, #20]
 1336 089e 1B88     		ldrh	r3, [r3]
 1337 08a0 1BB2     		sxth	r3, r3
 1338 08a2 C622     		mov	r2, #198
 1339 08a4 5200     		lsl	r2, r2, #1
 1340 08a6 BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 48


 1341 08a8 1360     		str	r3, [r2]
 341:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 342:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 343:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         c0 = c0 << 16u;
 344:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 345:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #else
 346:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 347:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         c0 = c0 & 0x0000FFFF;
 1342              		.loc 1 347 0
 1343 08aa C623     		mov	r3, #198
 1344 08ac 5B00     		lsl	r3, r3, #1
 1345 08ae FB18     		add	r3, r7, r3
 1346 08b0 1B68     		ldr	r3, [r3]
 1347 08b2 1B04     		lsl	r3, r3, #16
 1348 08b4 1B0C     		lsr	r3, r3, #16
 1349 08b6 C622     		mov	r2, #198
 1350 08b8 5200     		lsl	r2, r2, #1
 1351 08ba BA18     		add	r2, r7, r2
 1352 08bc 1360     		str	r3, [r2]
 348:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 349:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
 350:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 351:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read x[7] */
 352:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         x3 = *__SIMD32(px);
 1353              		.loc 1 352 0
 1354 08be 1823     		mov	r3, #24
 1355 08c0 FB18     		add	r3, r7, r3
 1356 08c2 1B68     		ldr	r3, [r3]
 1357 08c4 1B68     		ldr	r3, [r3]
 1358 08c6 C222     		mov	r2, #194
 1359 08c8 5200     		lsl	r2, r2, #1
 1360 08ca BA18     		add	r2, r7, r2
 1361 08cc 1360     		str	r3, [r2]
 353:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		px++;
 1362              		.loc 1 353 0
 1363 08ce BB69     		ldr	r3, [r7, #24]
 1364 08d0 0233     		add	r3, r3, #2
 1365 08d2 BB61     		str	r3, [r7, #24]
 354:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 355:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Perform the multiply-accumulates */
 356:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc0 = __SMLAD(x0, c0, acc0);
 1366              		.loc 1 356 0
 1367 08d4 DC23     		mov	r3, #220
 1368 08d6 5B00     		lsl	r3, r3, #1
 1369 08d8 FB18     		add	r3, r7, r3
 1370 08da 1968     		ldr	r1, [r3]
 1371 08dc C623     		mov	r3, #198
 1372 08de 5B00     		lsl	r3, r3, #1
 1373 08e0 FB18     		add	r3, r7, r3
 1374 08e2 1A68     		ldr	r2, [r3]
 1375 08e4 E623     		mov	r3, #230
 1376 08e6 5B00     		lsl	r3, r3, #1
 1377 08e8 FB18     		add	r3, r7, r3
 1378 08ea 1B68     		ldr	r3, [r3]
 1379 08ec FC20     		mov	r0, #252
 1380 08ee 3818     		add	r0, r7, r0
 1381 08f0 0160     		str	r1, [r0]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 49


 1382 08f2 F821     		mov	r1, #248
 1383 08f4 7918     		add	r1, r7, r1
 1384 08f6 0A60     		str	r2, [r1]
 1385 08f8 F422     		mov	r2, #244
 1386 08fa BA18     		add	r2, r7, r2
 1387 08fc 1360     		str	r3, [r2]
 1388              	.LBB84:
 1389              	.LBB85:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1390              		.loc 2 952 0
 1391 08fe FC23     		mov	r3, #252
 1392 0900 FB18     		add	r3, r7, r3
 1393 0902 1B68     		ldr	r3, [r3]
 1394 0904 1B04     		lsl	r3, r3, #16
 1395 0906 1B14     		asr	r3, r3, #16
 1396 0908 F822     		mov	r2, #248
 1397 090a BA18     		add	r2, r7, r2
 1398 090c 1268     		ldr	r2, [r2]
 1399 090e 1204     		lsl	r2, r2, #16
 1400 0910 1214     		asr	r2, r2, #16
 1401 0912 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1402              		.loc 2 953 0
 1403 0914 FC23     		mov	r3, #252
 1404 0916 FB18     		add	r3, r7, r3
 1405 0918 1B68     		ldr	r3, [r3]
 1406 091a 1B14     		asr	r3, r3, #16
 1407 091c F821     		mov	r1, #248
 1408 091e 7918     		add	r1, r7, r1
 1409 0920 0968     		ldr	r1, [r1]
 1410 0922 0914     		asr	r1, r1, #16
 1411 0924 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1412              		.loc 2 952 0
 1413 0926 D218     		add	r2, r2, r3
 1414              		.loc 2 954 0
 1415 0928 F423     		mov	r3, #244
 1416 092a FB18     		add	r3, r7, r3
 1417 092c 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1418              		.loc 2 953 0
 1419 092e D318     		add	r3, r2, r3
 1420              	.LBE85:
 1421              	.LBE84:
 1422              		.loc 1 356 0
 1423 0930 E622     		mov	r2, #230
 1424 0932 5200     		lsl	r2, r2, #1
 1425 0934 BA18     		add	r2, r7, r2
 1426 0936 1360     		str	r3, [r2]
 357:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc1 = __SMLAD(x1, c0, acc1);
 1427              		.loc 1 357 0
 1428 0938 DA23     		mov	r3, #218
 1429 093a 5B00     		lsl	r3, r3, #1
 1430 093c FB18     		add	r3, r7, r3
 1431 093e 1968     		ldr	r1, [r3]
 1432 0940 C623     		mov	r3, #198
 1433 0942 5B00     		lsl	r3, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 50


 1434 0944 FB18     		add	r3, r7, r3
 1435 0946 1A68     		ldr	r2, [r3]
 1436 0948 E423     		mov	r3, #228
 1437 094a 5B00     		lsl	r3, r3, #1
 1438 094c FB18     		add	r3, r7, r3
 1439 094e 1B68     		ldr	r3, [r3]
 1440 0950 F020     		mov	r0, #240
 1441 0952 3818     		add	r0, r7, r0
 1442 0954 0160     		str	r1, [r0]
 1443 0956 EC21     		mov	r1, #236
 1444 0958 7918     		add	r1, r7, r1
 1445 095a 0A60     		str	r2, [r1]
 1446 095c E822     		mov	r2, #232
 1447 095e BA18     		add	r2, r7, r2
 1448 0960 1360     		str	r3, [r2]
 1449              	.LBB86:
 1450              	.LBB87:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1451              		.loc 2 952 0
 1452 0962 F023     		mov	r3, #240
 1453 0964 FB18     		add	r3, r7, r3
 1454 0966 1B68     		ldr	r3, [r3]
 1455 0968 1B04     		lsl	r3, r3, #16
 1456 096a 1B14     		asr	r3, r3, #16
 1457 096c EC22     		mov	r2, #236
 1458 096e BA18     		add	r2, r7, r2
 1459 0970 1268     		ldr	r2, [r2]
 1460 0972 1204     		lsl	r2, r2, #16
 1461 0974 1214     		asr	r2, r2, #16
 1462 0976 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1463              		.loc 2 953 0
 1464 0978 F023     		mov	r3, #240
 1465 097a FB18     		add	r3, r7, r3
 1466 097c 1B68     		ldr	r3, [r3]
 1467 097e 1B14     		asr	r3, r3, #16
 1468 0980 EC21     		mov	r1, #236
 1469 0982 7918     		add	r1, r7, r1
 1470 0984 0968     		ldr	r1, [r1]
 1471 0986 0914     		asr	r1, r1, #16
 1472 0988 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1473              		.loc 2 952 0
 1474 098a D218     		add	r2, r2, r3
 1475              		.loc 2 954 0
 1476 098c E823     		mov	r3, #232
 1477 098e FB18     		add	r3, r7, r3
 1478 0990 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1479              		.loc 2 953 0
 1480 0992 D318     		add	r3, r2, r3
 1481              	.LBE87:
 1482              	.LBE86:
 1483              		.loc 1 357 0
 1484 0994 E422     		mov	r2, #228
 1485 0996 5200     		lsl	r2, r2, #1
 1486 0998 BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 51


 1487 099a 1360     		str	r3, [r2]
 358:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc2 = __SMLADX(x1, c0, acc2);
 1488              		.loc 1 358 0
 1489 099c DA23     		mov	r3, #218
 1490 099e 5B00     		lsl	r3, r3, #1
 1491 09a0 FB18     		add	r3, r7, r3
 1492 09a2 1968     		ldr	r1, [r3]
 1493 09a4 C623     		mov	r3, #198
 1494 09a6 5B00     		lsl	r3, r3, #1
 1495 09a8 FB18     		add	r3, r7, r3
 1496 09aa 1A68     		ldr	r2, [r3]
 1497 09ac E223     		mov	r3, #226
 1498 09ae 5B00     		lsl	r3, r3, #1
 1499 09b0 FB18     		add	r3, r7, r3
 1500 09b2 1B68     		ldr	r3, [r3]
 1501 09b4 E420     		mov	r0, #228
 1502 09b6 3818     		add	r0, r7, r0
 1503 09b8 0160     		str	r1, [r0]
 1504 09ba E021     		mov	r1, #224
 1505 09bc 7918     		add	r1, r7, r1
 1506 09be 0A60     		str	r2, [r1]
 1507 09c0 DC22     		mov	r2, #220
 1508 09c2 BA18     		add	r2, r7, r2
 1509 09c4 1360     		str	r3, [r2]
 1510              	.LBB88:
 1511              	.LBB89:
 955:.\Include/arm_math.h ****   }
 956:.\Include/arm_math.h **** 
 957:.\Include/arm_math.h **** 
 958:.\Include/arm_math.h ****   /*
 959:.\Include/arm_math.h ****    * @brief C custom defined SMLADX for M3 and M0 processors
 960:.\Include/arm_math.h ****    */
 961:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLADX(
 962:.\Include/arm_math.h ****   uint32_t x,
 963:.\Include/arm_math.h ****   uint32_t y,
 964:.\Include/arm_math.h ****   uint32_t sum)
 965:.\Include/arm_math.h ****   {
 966:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 1512              		.loc 2 966 0
 1513 09c6 E423     		mov	r3, #228
 1514 09c8 FB18     		add	r3, r7, r3
 1515 09ca 1B68     		ldr	r3, [r3]
 1516 09cc 1B04     		lsl	r3, r3, #16
 1517 09ce 1B14     		asr	r3, r3, #16
 1518 09d0 E022     		mov	r2, #224
 1519 09d2 BA18     		add	r2, r7, r2
 1520 09d4 1268     		ldr	r2, [r2]
 1521 09d6 1214     		asr	r2, r2, #16
 1522 09d8 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 1523              		.loc 2 967 0
 1524 09da E423     		mov	r3, #228
 1525 09dc FB18     		add	r3, r7, r3
 1526 09de 1B68     		ldr	r3, [r3]
 1527 09e0 1B14     		asr	r3, r3, #16
 1528 09e2 E021     		mov	r1, #224
 1529 09e4 7918     		add	r1, r7, r1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 52


 1530 09e6 0968     		ldr	r1, [r1]
 1531 09e8 0904     		lsl	r1, r1, #16
 1532 09ea 0914     		asr	r1, r1, #16
 1533 09ec 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 1534              		.loc 2 966 0
 1535 09ee D218     		add	r2, r2, r3
 968:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1536              		.loc 2 968 0
 1537 09f0 DC23     		mov	r3, #220
 1538 09f2 FB18     		add	r3, r7, r3
 1539 09f4 1B68     		ldr	r3, [r3]
 967:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 1540              		.loc 2 967 0
 1541 09f6 D318     		add	r3, r2, r3
 1542              	.LBE89:
 1543              	.LBE88:
 1544              		.loc 1 358 0
 1545 09f8 E222     		mov	r2, #226
 1546 09fa 5200     		lsl	r2, r2, #1
 1547 09fc BA18     		add	r2, r7, r2
 1548 09fe 1360     		str	r3, [r2]
 359:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
 1549              		.loc 1 359 0
 1550 0a00 C223     		mov	r3, #194
 1551 0a02 5B00     		lsl	r3, r3, #1
 1552 0a04 FB18     		add	r3, r7, r3
 1553 0a06 1968     		ldr	r1, [r3]
 1554 0a08 C623     		mov	r3, #198
 1555 0a0a 5B00     		lsl	r3, r3, #1
 1556 0a0c FB18     		add	r3, r7, r3
 1557 0a0e 1A68     		ldr	r2, [r3]
 1558 0a10 E023     		mov	r3, #224
 1559 0a12 5B00     		lsl	r3, r3, #1
 1560 0a14 FB18     		add	r3, r7, r3
 1561 0a16 1B68     		ldr	r3, [r3]
 1562 0a18 D820     		mov	r0, #216
 1563 0a1a 3818     		add	r0, r7, r0
 1564 0a1c 0160     		str	r1, [r0]
 1565 0a1e D421     		mov	r1, #212
 1566 0a20 7918     		add	r1, r7, r1
 1567 0a22 0A60     		str	r2, [r1]
 1568 0a24 D022     		mov	r2, #208
 1569 0a26 BA18     		add	r2, r7, r2
 1570 0a28 1360     		str	r3, [r2]
 1571              	.LBB90:
 1572              	.LBB91:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 1573              		.loc 2 966 0
 1574 0a2a D823     		mov	r3, #216
 1575 0a2c FB18     		add	r3, r7, r3
 1576 0a2e 1B68     		ldr	r3, [r3]
 1577 0a30 1B04     		lsl	r3, r3, #16
 1578 0a32 1B14     		asr	r3, r3, #16
 1579 0a34 D422     		mov	r2, #212
 1580 0a36 BA18     		add	r2, r7, r2
 1581 0a38 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 53


 1582 0a3a 1214     		asr	r2, r2, #16
 1583 0a3c 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1584              		.loc 2 967 0
 1585 0a3e D823     		mov	r3, #216
 1586 0a40 FB18     		add	r3, r7, r3
 1587 0a42 1B68     		ldr	r3, [r3]
 1588 0a44 1B14     		asr	r3, r3, #16
 1589 0a46 D421     		mov	r1, #212
 1590 0a48 7918     		add	r1, r7, r1
 1591 0a4a 0968     		ldr	r1, [r1]
 1592 0a4c 0904     		lsl	r1, r1, #16
 1593 0a4e 0914     		asr	r1, r1, #16
 1594 0a50 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 1595              		.loc 2 966 0
 1596 0a52 D218     		add	r2, r2, r3
 1597              		.loc 2 968 0
 1598 0a54 D023     		mov	r3, #208
 1599 0a56 FB18     		add	r3, r7, r3
 1600 0a58 1B68     		ldr	r3, [r3]
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1601              		.loc 2 967 0
 1602 0a5a D318     		add	r3, r2, r3
 1603              	.LBE91:
 1604              	.LBE90:
 1605              		.loc 1 359 0
 1606 0a5c E022     		mov	r2, #224
 1607 0a5e 5200     		lsl	r2, r2, #1
 1608 0a60 BA18     		add	r2, r7, r2
 1609 0a62 1360     		str	r3, [r2]
 1610              	.L24:
 360:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       }
 361:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 362:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       if (k == 2u)
 1611              		.loc 1 362 0
 1612 0a64 D823     		mov	r3, #216
 1613 0a66 5B00     		lsl	r3, r3, #1
 1614 0a68 FB18     		add	r3, r7, r3
 1615 0a6a 1B68     		ldr	r3, [r3]
 1616 0a6c 022B     		cmp	r3, #2
 1617 0a6e 00D0     		beq	.LCB1426
 1618 0a70 E1E0     		b	.L29	@long jump
 1619              	.LCB1426:
 363:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       {
 364:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read y[4], y[5] */
 365:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         c0 = *__SIMD32(py);
 1620              		.loc 1 365 0
 1621 0a72 1423     		mov	r3, #20
 1622 0a74 FB18     		add	r3, r7, r3
 1623 0a76 1B68     		ldr	r3, [r3]
 1624 0a78 1B68     		ldr	r3, [r3]
 1625 0a7a C622     		mov	r2, #198
 1626 0a7c 5200     		lsl	r2, r2, #1
 1627 0a7e BA18     		add	r2, r7, r2
 1628 0a80 1360     		str	r3, [r2]
 366:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 54


 367:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read x[7], x[8] */
 368:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         x3 = *__SIMD32(px);
 1629              		.loc 1 368 0
 1630 0a82 1823     		mov	r3, #24
 1631 0a84 FB18     		add	r3, r7, r3
 1632 0a86 1B68     		ldr	r3, [r3]
 1633 0a88 1B68     		ldr	r3, [r3]
 1634 0a8a C222     		mov	r2, #194
 1635 0a8c 5200     		lsl	r2, r2, #1
 1636 0a8e BA18     		add	r2, r7, r2
 1637 0a90 1360     		str	r3, [r2]
 369:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 370:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read x[9] */
 371:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         x2 = _SIMD32_OFFSET(px + 1);
 1638              		.loc 1 371 0
 1639 0a92 BB69     		ldr	r3, [r7, #24]
 1640 0a94 0233     		add	r3, r3, #2
 1641 0a96 1B68     		ldr	r3, [r3]
 1642 0a98 C422     		mov	r2, #196
 1643 0a9a 5200     		lsl	r2, r2, #1
 1644 0a9c BA18     		add	r2, r7, r2
 1645 0a9e 1360     		str	r3, [r2]
 372:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		px += 2u;
 1646              		.loc 1 372 0
 1647 0aa0 BB69     		ldr	r3, [r7, #24]
 1648 0aa2 0433     		add	r3, r3, #4
 1649 0aa4 BB61     		str	r3, [r7, #24]
 373:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 374:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Perform the multiply-accumulates */
 375:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc0 = __SMLAD(x0, c0, acc0);
 1650              		.loc 1 375 0
 1651 0aa6 DC23     		mov	r3, #220
 1652 0aa8 5B00     		lsl	r3, r3, #1
 1653 0aaa FB18     		add	r3, r7, r3
 1654 0aac 1968     		ldr	r1, [r3]
 1655 0aae C623     		mov	r3, #198
 1656 0ab0 5B00     		lsl	r3, r3, #1
 1657 0ab2 FB18     		add	r3, r7, r3
 1658 0ab4 1A68     		ldr	r2, [r3]
 1659 0ab6 E623     		mov	r3, #230
 1660 0ab8 5B00     		lsl	r3, r3, #1
 1661 0aba FB18     		add	r3, r7, r3
 1662 0abc 1B68     		ldr	r3, [r3]
 1663 0abe CC20     		mov	r0, #204
 1664 0ac0 3818     		add	r0, r7, r0
 1665 0ac2 0160     		str	r1, [r0]
 1666 0ac4 C821     		mov	r1, #200
 1667 0ac6 7918     		add	r1, r7, r1
 1668 0ac8 0A60     		str	r2, [r1]
 1669 0aca C422     		mov	r2, #196
 1670 0acc BA18     		add	r2, r7, r2
 1671 0ace 1360     		str	r3, [r2]
 1672              	.LBB92:
 1673              	.LBB93:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1674              		.loc 2 952 0
 1675 0ad0 CC23     		mov	r3, #204
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 55


 1676 0ad2 FB18     		add	r3, r7, r3
 1677 0ad4 1B68     		ldr	r3, [r3]
 1678 0ad6 1B04     		lsl	r3, r3, #16
 1679 0ad8 1B14     		asr	r3, r3, #16
 1680 0ada C822     		mov	r2, #200
 1681 0adc BA18     		add	r2, r7, r2
 1682 0ade 1268     		ldr	r2, [r2]
 1683 0ae0 1204     		lsl	r2, r2, #16
 1684 0ae2 1214     		asr	r2, r2, #16
 1685 0ae4 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1686              		.loc 2 953 0
 1687 0ae6 CC23     		mov	r3, #204
 1688 0ae8 FB18     		add	r3, r7, r3
 1689 0aea 1B68     		ldr	r3, [r3]
 1690 0aec 1B14     		asr	r3, r3, #16
 1691 0aee C821     		mov	r1, #200
 1692 0af0 7918     		add	r1, r7, r1
 1693 0af2 0968     		ldr	r1, [r1]
 1694 0af4 0914     		asr	r1, r1, #16
 1695 0af6 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1696              		.loc 2 952 0
 1697 0af8 D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 1698              		.loc 2 954 0
 1699 0afa C423     		mov	r3, #196
 1700 0afc FB18     		add	r3, r7, r3
 1701 0afe 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1702              		.loc 2 953 0
 1703 0b00 D318     		add	r3, r2, r3
 1704              	.LBE93:
 1705              	.LBE92:
 1706              		.loc 1 375 0
 1707 0b02 E622     		mov	r2, #230
 1708 0b04 5200     		lsl	r2, r2, #1
 1709 0b06 BA18     		add	r2, r7, r2
 1710 0b08 1360     		str	r3, [r2]
 376:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc1 = __SMLAD(x1, c0, acc1);
 1711              		.loc 1 376 0
 1712 0b0a DA23     		mov	r3, #218
 1713 0b0c 5B00     		lsl	r3, r3, #1
 1714 0b0e FB18     		add	r3, r7, r3
 1715 0b10 1968     		ldr	r1, [r3]
 1716 0b12 C623     		mov	r3, #198
 1717 0b14 5B00     		lsl	r3, r3, #1
 1718 0b16 FB18     		add	r3, r7, r3
 1719 0b18 1A68     		ldr	r2, [r3]
 1720 0b1a E423     		mov	r3, #228
 1721 0b1c 5B00     		lsl	r3, r3, #1
 1722 0b1e FB18     		add	r3, r7, r3
 1723 0b20 1B68     		ldr	r3, [r3]
 1724 0b22 C020     		mov	r0, #192
 1725 0b24 3818     		add	r0, r7, r0
 1726 0b26 0160     		str	r1, [r0]
 1727 0b28 BC21     		mov	r1, #188
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 56


 1728 0b2a 7918     		add	r1, r7, r1
 1729 0b2c 0A60     		str	r2, [r1]
 1730 0b2e B822     		mov	r2, #184
 1731 0b30 BA18     		add	r2, r7, r2
 1732 0b32 1360     		str	r3, [r2]
 1733              	.LBB94:
 1734              	.LBB95:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1735              		.loc 2 952 0
 1736 0b34 C023     		mov	r3, #192
 1737 0b36 FB18     		add	r3, r7, r3
 1738 0b38 1B68     		ldr	r3, [r3]
 1739 0b3a 1B04     		lsl	r3, r3, #16
 1740 0b3c 1B14     		asr	r3, r3, #16
 1741 0b3e BC22     		mov	r2, #188
 1742 0b40 BA18     		add	r2, r7, r2
 1743 0b42 1268     		ldr	r2, [r2]
 1744 0b44 1204     		lsl	r2, r2, #16
 1745 0b46 1214     		asr	r2, r2, #16
 1746 0b48 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1747              		.loc 2 953 0
 1748 0b4a C023     		mov	r3, #192
 1749 0b4c FB18     		add	r3, r7, r3
 1750 0b4e 1B68     		ldr	r3, [r3]
 1751 0b50 1B14     		asr	r3, r3, #16
 1752 0b52 BC21     		mov	r1, #188
 1753 0b54 7918     		add	r1, r7, r1
 1754 0b56 0968     		ldr	r1, [r1]
 1755 0b58 0914     		asr	r1, r1, #16
 1756 0b5a 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1757              		.loc 2 952 0
 1758 0b5c D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 1759              		.loc 2 954 0
 1760 0b5e B823     		mov	r3, #184
 1761 0b60 FB18     		add	r3, r7, r3
 1762 0b62 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1763              		.loc 2 953 0
 1764 0b64 D318     		add	r3, r2, r3
 1765              	.LBE95:
 1766              	.LBE94:
 1767              		.loc 1 376 0
 1768 0b66 E422     		mov	r2, #228
 1769 0b68 5200     		lsl	r2, r2, #1
 1770 0b6a BA18     		add	r2, r7, r2
 1771 0b6c 1360     		str	r3, [r2]
 377:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc2 = __SMLAD(x3, c0, acc2);
 1772              		.loc 1 377 0
 1773 0b6e C223     		mov	r3, #194
 1774 0b70 5B00     		lsl	r3, r3, #1
 1775 0b72 FB18     		add	r3, r7, r3
 1776 0b74 1968     		ldr	r1, [r3]
 1777 0b76 C623     		mov	r3, #198
 1778 0b78 5B00     		lsl	r3, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 57


 1779 0b7a FB18     		add	r3, r7, r3
 1780 0b7c 1A68     		ldr	r2, [r3]
 1781 0b7e E223     		mov	r3, #226
 1782 0b80 5B00     		lsl	r3, r3, #1
 1783 0b82 FB18     		add	r3, r7, r3
 1784 0b84 1B68     		ldr	r3, [r3]
 1785 0b86 B420     		mov	r0, #180
 1786 0b88 3818     		add	r0, r7, r0
 1787 0b8a 0160     		str	r1, [r0]
 1788 0b8c B021     		mov	r1, #176
 1789 0b8e 7918     		add	r1, r7, r1
 1790 0b90 0A60     		str	r2, [r1]
 1791 0b92 AC22     		mov	r2, #172
 1792 0b94 BA18     		add	r2, r7, r2
 1793 0b96 1360     		str	r3, [r2]
 1794              	.LBB96:
 1795              	.LBB97:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1796              		.loc 2 952 0
 1797 0b98 B423     		mov	r3, #180
 1798 0b9a FB18     		add	r3, r7, r3
 1799 0b9c 1B68     		ldr	r3, [r3]
 1800 0b9e 1B04     		lsl	r3, r3, #16
 1801 0ba0 1B14     		asr	r3, r3, #16
 1802 0ba2 B022     		mov	r2, #176
 1803 0ba4 BA18     		add	r2, r7, r2
 1804 0ba6 1268     		ldr	r2, [r2]
 1805 0ba8 1204     		lsl	r2, r2, #16
 1806 0baa 1214     		asr	r2, r2, #16
 1807 0bac 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1808              		.loc 2 953 0
 1809 0bae B423     		mov	r3, #180
 1810 0bb0 FB18     		add	r3, r7, r3
 1811 0bb2 1B68     		ldr	r3, [r3]
 1812 0bb4 1B14     		asr	r3, r3, #16
 1813 0bb6 B021     		mov	r1, #176
 1814 0bb8 7918     		add	r1, r7, r1
 1815 0bba 0968     		ldr	r1, [r1]
 1816 0bbc 0914     		asr	r1, r1, #16
 1817 0bbe 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1818              		.loc 2 952 0
 1819 0bc0 D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 1820              		.loc 2 954 0
 1821 0bc2 AC23     		mov	r3, #172
 1822 0bc4 FB18     		add	r3, r7, r3
 1823 0bc6 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1824              		.loc 2 953 0
 1825 0bc8 D318     		add	r3, r2, r3
 1826              	.LBE97:
 1827              	.LBE96:
 1828              		.loc 1 377 0
 1829 0bca E222     		mov	r2, #226
 1830 0bcc 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 58


 1831 0bce BA18     		add	r2, r7, r2
 1832 0bd0 1360     		str	r3, [r2]
 378:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc3 = __SMLAD(x2, c0, acc3);
 1833              		.loc 1 378 0
 1834 0bd2 C423     		mov	r3, #196
 1835 0bd4 5B00     		lsl	r3, r3, #1
 1836 0bd6 FB18     		add	r3, r7, r3
 1837 0bd8 1968     		ldr	r1, [r3]
 1838 0bda C623     		mov	r3, #198
 1839 0bdc 5B00     		lsl	r3, r3, #1
 1840 0bde FB18     		add	r3, r7, r3
 1841 0be0 1A68     		ldr	r2, [r3]
 1842 0be2 E023     		mov	r3, #224
 1843 0be4 5B00     		lsl	r3, r3, #1
 1844 0be6 FB18     		add	r3, r7, r3
 1845 0be8 1B68     		ldr	r3, [r3]
 1846 0bea A820     		mov	r0, #168
 1847 0bec 3818     		add	r0, r7, r0
 1848 0bee 0160     		str	r1, [r0]
 1849 0bf0 A421     		mov	r1, #164
 1850 0bf2 7918     		add	r1, r7, r1
 1851 0bf4 0A60     		str	r2, [r1]
 1852 0bf6 A022     		mov	r2, #160
 1853 0bf8 BA18     		add	r2, r7, r2
 1854 0bfa 1360     		str	r3, [r2]
 1855              	.LBB98:
 1856              	.LBB99:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1857              		.loc 2 952 0
 1858 0bfc A823     		mov	r3, #168
 1859 0bfe FB18     		add	r3, r7, r3
 1860 0c00 1B68     		ldr	r3, [r3]
 1861 0c02 1B04     		lsl	r3, r3, #16
 1862 0c04 1B14     		asr	r3, r3, #16
 1863 0c06 A422     		mov	r2, #164
 1864 0c08 BA18     		add	r2, r7, r2
 1865 0c0a 1268     		ldr	r2, [r2]
 1866 0c0c 1204     		lsl	r2, r2, #16
 1867 0c0e 1214     		asr	r2, r2, #16
 1868 0c10 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1869              		.loc 2 953 0
 1870 0c12 A823     		mov	r3, #168
 1871 0c14 FB18     		add	r3, r7, r3
 1872 0c16 1B68     		ldr	r3, [r3]
 1873 0c18 1B14     		asr	r3, r3, #16
 1874 0c1a A421     		mov	r1, #164
 1875 0c1c 7918     		add	r1, r7, r1
 1876 0c1e 0968     		ldr	r1, [r1]
 1877 0c20 0914     		asr	r1, r1, #16
 1878 0c22 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1879              		.loc 2 952 0
 1880 0c24 D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 1881              		.loc 2 954 0
 1882 0c26 A023     		mov	r3, #160
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 59


 1883 0c28 FB18     		add	r3, r7, r3
 1884 0c2a 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1885              		.loc 2 953 0
 1886 0c2c D318     		add	r3, r2, r3
 1887              	.LBE99:
 1888              	.LBE98:
 1889              		.loc 1 378 0
 1890 0c2e E022     		mov	r2, #224
 1891 0c30 5200     		lsl	r2, r2, #1
 1892 0c32 BA18     		add	r2, r7, r2
 1893 0c34 1360     		str	r3, [r2]
 1894              	.L29:
 379:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       }
 380:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 381:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       if (k == 3u)
 1895              		.loc 1 381 0
 1896 0c36 D823     		mov	r3, #216
 1897 0c38 5B00     		lsl	r3, r3, #1
 1898 0c3a FB18     		add	r3, r7, r3
 1899 0c3c 1B68     		ldr	r3, [r3]
 1900 0c3e 032B     		cmp	r3, #3
 1901 0c40 00D0     		beq	.LCB1676
 1902 0c42 6EE1     		b	.L34	@long jump
 1903              	.LCB1676:
 382:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       {
 383:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read y[4], y[5] */
 384:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         c0 = *__SIMD32(py)++;
 1904              		.loc 1 384 0
 1905 0c44 1423     		mov	r3, #20
 1906 0c46 FB18     		add	r3, r7, r3
 1907 0c48 1A68     		ldr	r2, [r3]
 1908 0c4a 111D     		add	r1, r2, #4
 1909 0c4c 1960     		str	r1, [r3]
 1910 0c4e 1368     		ldr	r3, [r2]
 1911 0c50 C622     		mov	r2, #198
 1912 0c52 5200     		lsl	r2, r2, #1
 1913 0c54 BA18     		add	r2, r7, r2
 1914 0c56 1360     		str	r3, [r2]
 385:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 386:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read x[7], x[8] */
 387:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         x3 = *__SIMD32(px);
 1915              		.loc 1 387 0
 1916 0c58 1823     		mov	r3, #24
 1917 0c5a FB18     		add	r3, r7, r3
 1918 0c5c 1B68     		ldr	r3, [r3]
 1919 0c5e 1B68     		ldr	r3, [r3]
 1920 0c60 C222     		mov	r2, #194
 1921 0c62 5200     		lsl	r2, r2, #1
 1922 0c64 BA18     		add	r2, r7, r2
 1923 0c66 1360     		str	r3, [r2]
 388:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 389:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read x[9] */
 390:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         x2 = _SIMD32_OFFSET(px + 1);
 1924              		.loc 1 390 0
 1925 0c68 BB69     		ldr	r3, [r7, #24]
 1926 0c6a 0233     		add	r3, r3, #2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 60


 1927 0c6c 1B68     		ldr	r3, [r3]
 1928 0c6e C422     		mov	r2, #196
 1929 0c70 5200     		lsl	r2, r2, #1
 1930 0c72 BA18     		add	r2, r7, r2
 1931 0c74 1360     		str	r3, [r2]
 391:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 392:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Perform the multiply-accumulates */
 393:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc0 = __SMLAD(x0, c0, acc0);
 1932              		.loc 1 393 0
 1933 0c76 DC23     		mov	r3, #220
 1934 0c78 5B00     		lsl	r3, r3, #1
 1935 0c7a FB18     		add	r3, r7, r3
 1936 0c7c 1968     		ldr	r1, [r3]
 1937 0c7e C623     		mov	r3, #198
 1938 0c80 5B00     		lsl	r3, r3, #1
 1939 0c82 FB18     		add	r3, r7, r3
 1940 0c84 1A68     		ldr	r2, [r3]
 1941 0c86 E623     		mov	r3, #230
 1942 0c88 5B00     		lsl	r3, r3, #1
 1943 0c8a FB18     		add	r3, r7, r3
 1944 0c8c 1B68     		ldr	r3, [r3]
 1945 0c8e 9C20     		mov	r0, #156
 1946 0c90 3818     		add	r0, r7, r0
 1947 0c92 0160     		str	r1, [r0]
 1948 0c94 9821     		mov	r1, #152
 1949 0c96 7918     		add	r1, r7, r1
 1950 0c98 0A60     		str	r2, [r1]
 1951 0c9a 9422     		mov	r2, #148
 1952 0c9c BA18     		add	r2, r7, r2
 1953 0c9e 1360     		str	r3, [r2]
 1954              	.LBB100:
 1955              	.LBB101:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 1956              		.loc 2 952 0
 1957 0ca0 9C23     		mov	r3, #156
 1958 0ca2 FB18     		add	r3, r7, r3
 1959 0ca4 1B68     		ldr	r3, [r3]
 1960 0ca6 1B04     		lsl	r3, r3, #16
 1961 0ca8 1B14     		asr	r3, r3, #16
 1962 0caa 9822     		mov	r2, #152
 1963 0cac BA18     		add	r2, r7, r2
 1964 0cae 1268     		ldr	r2, [r2]
 1965 0cb0 1204     		lsl	r2, r2, #16
 1966 0cb2 1214     		asr	r2, r2, #16
 1967 0cb4 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1968              		.loc 2 953 0
 1969 0cb6 9C23     		mov	r3, #156
 1970 0cb8 FB18     		add	r3, r7, r3
 1971 0cba 1B68     		ldr	r3, [r3]
 1972 0cbc 1B14     		asr	r3, r3, #16
 1973 0cbe 9821     		mov	r1, #152
 1974 0cc0 7918     		add	r1, r7, r1
 1975 0cc2 0968     		ldr	r1, [r1]
 1976 0cc4 0914     		asr	r1, r1, #16
 1977 0cc6 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 61


 1978              		.loc 2 952 0
 1979 0cc8 D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 1980              		.loc 2 954 0
 1981 0cca 9423     		mov	r3, #148
 1982 0ccc FB18     		add	r3, r7, r3
 1983 0cce 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 1984              		.loc 2 953 0
 1985 0cd0 D318     		add	r3, r2, r3
 1986              	.LBE101:
 1987              	.LBE100:
 1988              		.loc 1 393 0
 1989 0cd2 E622     		mov	r2, #230
 1990 0cd4 5200     		lsl	r2, r2, #1
 1991 0cd6 BA18     		add	r2, r7, r2
 1992 0cd8 1360     		str	r3, [r2]
 394:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc1 = __SMLAD(x1, c0, acc1);
 1993              		.loc 1 394 0
 1994 0cda DA23     		mov	r3, #218
 1995 0cdc 5B00     		lsl	r3, r3, #1
 1996 0cde FB18     		add	r3, r7, r3
 1997 0ce0 1968     		ldr	r1, [r3]
 1998 0ce2 C623     		mov	r3, #198
 1999 0ce4 5B00     		lsl	r3, r3, #1
 2000 0ce6 FB18     		add	r3, r7, r3
 2001 0ce8 1A68     		ldr	r2, [r3]
 2002 0cea E423     		mov	r3, #228
 2003 0cec 5B00     		lsl	r3, r3, #1
 2004 0cee FB18     		add	r3, r7, r3
 2005 0cf0 1B68     		ldr	r3, [r3]
 2006 0cf2 9020     		mov	r0, #144
 2007 0cf4 3818     		add	r0, r7, r0
 2008 0cf6 0160     		str	r1, [r0]
 2009 0cf8 8C21     		mov	r1, #140
 2010 0cfa 7918     		add	r1, r7, r1
 2011 0cfc 0A60     		str	r2, [r1]
 2012 0cfe 8822     		mov	r2, #136
 2013 0d00 BA18     		add	r2, r7, r2
 2014 0d02 1360     		str	r3, [r2]
 2015              	.LBB102:
 2016              	.LBB103:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 2017              		.loc 2 952 0
 2018 0d04 9023     		mov	r3, #144
 2019 0d06 FB18     		add	r3, r7, r3
 2020 0d08 1B68     		ldr	r3, [r3]
 2021 0d0a 1B04     		lsl	r3, r3, #16
 2022 0d0c 1B14     		asr	r3, r3, #16
 2023 0d0e 8C22     		mov	r2, #140
 2024 0d10 BA18     		add	r2, r7, r2
 2025 0d12 1268     		ldr	r2, [r2]
 2026 0d14 1204     		lsl	r2, r2, #16
 2027 0d16 1214     		asr	r2, r2, #16
 2028 0d18 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 2029              		.loc 2 953 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 62


 2030 0d1a 9023     		mov	r3, #144
 2031 0d1c FB18     		add	r3, r7, r3
 2032 0d1e 1B68     		ldr	r3, [r3]
 2033 0d20 1B14     		asr	r3, r3, #16
 2034 0d22 8C21     		mov	r1, #140
 2035 0d24 7918     		add	r1, r7, r1
 2036 0d26 0968     		ldr	r1, [r1]
 2037 0d28 0914     		asr	r1, r1, #16
 2038 0d2a 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 2039              		.loc 2 952 0
 2040 0d2c D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 2041              		.loc 2 954 0
 2042 0d2e 8823     		mov	r3, #136
 2043 0d30 FB18     		add	r3, r7, r3
 2044 0d32 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 2045              		.loc 2 953 0
 2046 0d34 D318     		add	r3, r2, r3
 2047              	.LBE103:
 2048              	.LBE102:
 2049              		.loc 1 394 0
 2050 0d36 E422     		mov	r2, #228
 2051 0d38 5200     		lsl	r2, r2, #1
 2052 0d3a BA18     		add	r2, r7, r2
 2053 0d3c 1360     		str	r3, [r2]
 395:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc2 = __SMLAD(x3, c0, acc2);
 2054              		.loc 1 395 0
 2055 0d3e C223     		mov	r3, #194
 2056 0d40 5B00     		lsl	r3, r3, #1
 2057 0d42 FB18     		add	r3, r7, r3
 2058 0d44 1968     		ldr	r1, [r3]
 2059 0d46 C623     		mov	r3, #198
 2060 0d48 5B00     		lsl	r3, r3, #1
 2061 0d4a FB18     		add	r3, r7, r3
 2062 0d4c 1A68     		ldr	r2, [r3]
 2063 0d4e E223     		mov	r3, #226
 2064 0d50 5B00     		lsl	r3, r3, #1
 2065 0d52 FB18     		add	r3, r7, r3
 2066 0d54 1B68     		ldr	r3, [r3]
 2067 0d56 8420     		mov	r0, #132
 2068 0d58 3818     		add	r0, r7, r0
 2069 0d5a 0160     		str	r1, [r0]
 2070 0d5c 8021     		mov	r1, #128
 2071 0d5e 7918     		add	r1, r7, r1
 2072 0d60 0A60     		str	r2, [r1]
 2073 0d62 FB67     		str	r3, [r7, #124]
 2074              	.LBB104:
 2075              	.LBB105:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 2076              		.loc 2 952 0
 2077 0d64 8423     		mov	r3, #132
 2078 0d66 FB18     		add	r3, r7, r3
 2079 0d68 1B68     		ldr	r3, [r3]
 2080 0d6a 1B04     		lsl	r3, r3, #16
 2081 0d6c 1B14     		asr	r3, r3, #16
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 63


 2082 0d6e 8022     		mov	r2, #128
 2083 0d70 BA18     		add	r2, r7, r2
 2084 0d72 1268     		ldr	r2, [r2]
 2085 0d74 1204     		lsl	r2, r2, #16
 2086 0d76 1214     		asr	r2, r2, #16
 2087 0d78 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 2088              		.loc 2 953 0
 2089 0d7a 8423     		mov	r3, #132
 2090 0d7c FB18     		add	r3, r7, r3
 2091 0d7e 1B68     		ldr	r3, [r3]
 2092 0d80 1B14     		asr	r3, r3, #16
 2093 0d82 8021     		mov	r1, #128
 2094 0d84 7918     		add	r1, r7, r1
 2095 0d86 0968     		ldr	r1, [r1]
 2096 0d88 0914     		asr	r1, r1, #16
 2097 0d8a 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 2098              		.loc 2 952 0
 2099 0d8c D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 2100              		.loc 2 954 0
 2101 0d8e FB6F     		ldr	r3, [r7, #124]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 2102              		.loc 2 953 0
 2103 0d90 D318     		add	r3, r2, r3
 2104              	.LBE105:
 2105              	.LBE104:
 2106              		.loc 1 395 0
 2107 0d92 E222     		mov	r2, #226
 2108 0d94 5200     		lsl	r2, r2, #1
 2109 0d96 BA18     		add	r2, r7, r2
 2110 0d98 1360     		str	r3, [r2]
 396:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc3 = __SMLAD(x2, c0, acc3);
 2111              		.loc 1 396 0
 2112 0d9a C423     		mov	r3, #196
 2113 0d9c 5B00     		lsl	r3, r3, #1
 2114 0d9e FB18     		add	r3, r7, r3
 2115 0da0 1968     		ldr	r1, [r3]
 2116 0da2 C623     		mov	r3, #198
 2117 0da4 5B00     		lsl	r3, r3, #1
 2118 0da6 FB18     		add	r3, r7, r3
 2119 0da8 1A68     		ldr	r2, [r3]
 2120 0daa E023     		mov	r3, #224
 2121 0dac 5B00     		lsl	r3, r3, #1
 2122 0dae FB18     		add	r3, r7, r3
 2123 0db0 1B68     		ldr	r3, [r3]
 2124 0db2 B967     		str	r1, [r7, #120]
 2125 0db4 7A67     		str	r2, [r7, #116]
 2126 0db6 3B67     		str	r3, [r7, #112]
 2127              	.LBB106:
 2128              	.LBB107:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 2129              		.loc 2 952 0
 2130 0db8 BB6F     		ldr	r3, [r7, #120]
 2131 0dba 1B04     		lsl	r3, r3, #16
 2132 0dbc 1B14     		asr	r3, r3, #16
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 64


 2133 0dbe 7A6F     		ldr	r2, [r7, #116]
 2134 0dc0 1204     		lsl	r2, r2, #16
 2135 0dc2 1214     		asr	r2, r2, #16
 2136 0dc4 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 2137              		.loc 2 953 0
 2138 0dc6 BB6F     		ldr	r3, [r7, #120]
 2139 0dc8 1B14     		asr	r3, r3, #16
 2140 0dca 796F     		ldr	r1, [r7, #116]
 2141 0dcc 0914     		asr	r1, r1, #16
 2142 0dce 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 2143              		.loc 2 952 0
 2144 0dd0 D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 2145              		.loc 2 954 0
 2146 0dd2 3B6F     		ldr	r3, [r7, #112]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 2147              		.loc 2 953 0
 2148 0dd4 D318     		add	r3, r2, r3
 2149              	.LBE107:
 2150              	.LBE106:
 2151              		.loc 1 396 0
 2152 0dd6 E022     		mov	r2, #224
 2153 0dd8 5200     		lsl	r2, r2, #1
 2154 0dda BA18     		add	r2, r7, r2
 2155 0ddc 1360     		str	r3, [r2]
 397:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 398:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         c0 = (*py);
 2156              		.loc 1 398 0
 2157 0dde 7B69     		ldr	r3, [r7, #20]
 2158 0de0 1B88     		ldrh	r3, [r3]
 2159 0de2 1BB2     		sxth	r3, r3
 2160 0de4 C622     		mov	r2, #198
 2161 0de6 5200     		lsl	r2, r2, #1
 2162 0de8 BA18     		add	r2, r7, r2
 2163 0dea 1360     		str	r3, [r2]
 399:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read y[6] */
 400:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 401:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 402:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         c0 = c0 << 16u;
 403:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #else
 404:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 405:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         c0 = c0 & 0x0000FFFF;
 2164              		.loc 1 405 0
 2165 0dec C623     		mov	r3, #198
 2166 0dee 5B00     		lsl	r3, r3, #1
 2167 0df0 FB18     		add	r3, r7, r3
 2168 0df2 1B68     		ldr	r3, [r3]
 2169 0df4 1B04     		lsl	r3, r3, #16
 2170 0df6 1B0C     		lsr	r3, r3, #16
 2171 0df8 C622     		mov	r2, #198
 2172 0dfa 5200     		lsl	r2, r2, #1
 2173 0dfc BA18     		add	r2, r7, r2
 2174 0dfe 1360     		str	r3, [r2]
 406:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
 407:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 65


 408:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read x[10] */
 409:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         x3 = _SIMD32_OFFSET(px + 2);
 2175              		.loc 1 409 0
 2176 0e00 BB69     		ldr	r3, [r7, #24]
 2177 0e02 5B68     		ldr	r3, [r3, #4]
 2178 0e04 C222     		mov	r2, #194
 2179 0e06 5200     		lsl	r2, r2, #1
 2180 0e08 BA18     		add	r2, r7, r2
 2181 0e0a 1360     		str	r3, [r2]
 410:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		px += 3u;
 2182              		.loc 1 410 0
 2183 0e0c BB69     		ldr	r3, [r7, #24]
 2184 0e0e 0633     		add	r3, r3, #6
 2185 0e10 BB61     		str	r3, [r7, #24]
 411:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 412:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Perform the multiply-accumulates */
 413:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc0 = __SMLADX(x1, c0, acc0);
 2186              		.loc 1 413 0
 2187 0e12 DA23     		mov	r3, #218
 2188 0e14 5B00     		lsl	r3, r3, #1
 2189 0e16 FB18     		add	r3, r7, r3
 2190 0e18 1968     		ldr	r1, [r3]
 2191 0e1a C623     		mov	r3, #198
 2192 0e1c 5B00     		lsl	r3, r3, #1
 2193 0e1e FB18     		add	r3, r7, r3
 2194 0e20 1A68     		ldr	r2, [r3]
 2195 0e22 E623     		mov	r3, #230
 2196 0e24 5B00     		lsl	r3, r3, #1
 2197 0e26 FB18     		add	r3, r7, r3
 2198 0e28 1B68     		ldr	r3, [r3]
 2199 0e2a F966     		str	r1, [r7, #108]
 2200 0e2c BA66     		str	r2, [r7, #104]
 2201 0e2e 7B66     		str	r3, [r7, #100]
 2202              	.LBB108:
 2203              	.LBB109:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 2204              		.loc 2 966 0
 2205 0e30 FB6E     		ldr	r3, [r7, #108]
 2206 0e32 1B04     		lsl	r3, r3, #16
 2207 0e34 1B14     		asr	r3, r3, #16
 2208 0e36 BA6E     		ldr	r2, [r7, #104]
 2209 0e38 1214     		asr	r2, r2, #16
 2210 0e3a 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 2211              		.loc 2 967 0
 2212 0e3c FB6E     		ldr	r3, [r7, #108]
 2213 0e3e 1B14     		asr	r3, r3, #16
 2214 0e40 B96E     		ldr	r1, [r7, #104]
 2215 0e42 0904     		lsl	r1, r1, #16
 2216 0e44 0914     		asr	r1, r1, #16
 2217 0e46 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 2218              		.loc 2 966 0
 2219 0e48 D218     		add	r2, r2, r3
 2220              		.loc 2 968 0
 2221 0e4a 7B6E     		ldr	r3, [r7, #100]
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 66


 2222              		.loc 2 967 0
 2223 0e4c D318     		add	r3, r2, r3
 2224              	.LBE109:
 2225              	.LBE108:
 2226              		.loc 1 413 0
 2227 0e4e E622     		mov	r2, #230
 2228 0e50 5200     		lsl	r2, r2, #1
 2229 0e52 BA18     		add	r2, r7, r2
 2230 0e54 1360     		str	r3, [r2]
 414:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc1 = __SMLAD(x2, c0, acc1);
 2231              		.loc 1 414 0
 2232 0e56 C423     		mov	r3, #196
 2233 0e58 5B00     		lsl	r3, r3, #1
 2234 0e5a FB18     		add	r3, r7, r3
 2235 0e5c 1968     		ldr	r1, [r3]
 2236 0e5e C623     		mov	r3, #198
 2237 0e60 5B00     		lsl	r3, r3, #1
 2238 0e62 FB18     		add	r3, r7, r3
 2239 0e64 1A68     		ldr	r2, [r3]
 2240 0e66 E423     		mov	r3, #228
 2241 0e68 5B00     		lsl	r3, r3, #1
 2242 0e6a FB18     		add	r3, r7, r3
 2243 0e6c 1B68     		ldr	r3, [r3]
 2244 0e6e 3966     		str	r1, [r7, #96]
 2245 0e70 FA65     		str	r2, [r7, #92]
 2246 0e72 BB65     		str	r3, [r7, #88]
 2247              	.LBB110:
 2248              	.LBB111:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 2249              		.loc 2 952 0
 2250 0e74 3B6E     		ldr	r3, [r7, #96]
 2251 0e76 1B04     		lsl	r3, r3, #16
 2252 0e78 1B14     		asr	r3, r3, #16
 2253 0e7a FA6D     		ldr	r2, [r7, #92]
 2254 0e7c 1204     		lsl	r2, r2, #16
 2255 0e7e 1214     		asr	r2, r2, #16
 2256 0e80 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 2257              		.loc 2 953 0
 2258 0e82 3B6E     		ldr	r3, [r7, #96]
 2259 0e84 1B14     		asr	r3, r3, #16
 2260 0e86 F96D     		ldr	r1, [r7, #92]
 2261 0e88 0914     		asr	r1, r1, #16
 2262 0e8a 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 2263              		.loc 2 952 0
 2264 0e8c D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 2265              		.loc 2 954 0
 2266 0e8e BB6D     		ldr	r3, [r7, #88]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 2267              		.loc 2 953 0
 2268 0e90 D318     		add	r3, r2, r3
 2269              	.LBE111:
 2270              	.LBE110:
 2271              		.loc 1 414 0
 2272 0e92 E422     		mov	r2, #228
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 67


 2273 0e94 5200     		lsl	r2, r2, #1
 2274 0e96 BA18     		add	r2, r7, r2
 2275 0e98 1360     		str	r3, [r2]
 415:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc2 = __SMLADX(x2, c0, acc2);
 2276              		.loc 1 415 0
 2277 0e9a C423     		mov	r3, #196
 2278 0e9c 5B00     		lsl	r3, r3, #1
 2279 0e9e FB18     		add	r3, r7, r3
 2280 0ea0 1968     		ldr	r1, [r3]
 2281 0ea2 C623     		mov	r3, #198
 2282 0ea4 5B00     		lsl	r3, r3, #1
 2283 0ea6 FB18     		add	r3, r7, r3
 2284 0ea8 1A68     		ldr	r2, [r3]
 2285 0eaa E223     		mov	r3, #226
 2286 0eac 5B00     		lsl	r3, r3, #1
 2287 0eae FB18     		add	r3, r7, r3
 2288 0eb0 1B68     		ldr	r3, [r3]
 2289 0eb2 7965     		str	r1, [r7, #84]
 2290 0eb4 3A65     		str	r2, [r7, #80]
 2291 0eb6 FB64     		str	r3, [r7, #76]
 2292              	.LBB112:
 2293              	.LBB113:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 2294              		.loc 2 966 0
 2295 0eb8 7B6D     		ldr	r3, [r7, #84]
 2296 0eba 1B04     		lsl	r3, r3, #16
 2297 0ebc 1B14     		asr	r3, r3, #16
 2298 0ebe 3A6D     		ldr	r2, [r7, #80]
 2299 0ec0 1214     		asr	r2, r2, #16
 2300 0ec2 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 2301              		.loc 2 967 0
 2302 0ec4 7B6D     		ldr	r3, [r7, #84]
 2303 0ec6 1B14     		asr	r3, r3, #16
 2304 0ec8 396D     		ldr	r1, [r7, #80]
 2305 0eca 0904     		lsl	r1, r1, #16
 2306 0ecc 0914     		asr	r1, r1, #16
 2307 0ece 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 2308              		.loc 2 966 0
 2309 0ed0 D218     		add	r2, r2, r3
 2310              		.loc 2 968 0
 2311 0ed2 FB6C     		ldr	r3, [r7, #76]
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 2312              		.loc 2 967 0
 2313 0ed4 D318     		add	r3, r2, r3
 2314              	.LBE113:
 2315              	.LBE112:
 2316              		.loc 1 415 0
 2317 0ed6 E222     		mov	r2, #226
 2318 0ed8 5200     		lsl	r2, r2, #1
 2319 0eda BA18     		add	r2, r7, r2
 2320 0edc 1360     		str	r3, [r2]
 416:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
 2321              		.loc 1 416 0
 2322 0ede C223     		mov	r3, #194
 2323 0ee0 5B00     		lsl	r3, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 68


 2324 0ee2 FB18     		add	r3, r7, r3
 2325 0ee4 1968     		ldr	r1, [r3]
 2326 0ee6 C623     		mov	r3, #198
 2327 0ee8 5B00     		lsl	r3, r3, #1
 2328 0eea FB18     		add	r3, r7, r3
 2329 0eec 1A68     		ldr	r2, [r3]
 2330 0eee E023     		mov	r3, #224
 2331 0ef0 5B00     		lsl	r3, r3, #1
 2332 0ef2 FB18     		add	r3, r7, r3
 2333 0ef4 1B68     		ldr	r3, [r3]
 2334 0ef6 B964     		str	r1, [r7, #72]
 2335 0ef8 7A64     		str	r2, [r7, #68]
 2336 0efa 3B64     		str	r3, [r7, #64]
 2337              	.LBB114:
 2338              	.LBB115:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 2339              		.loc 2 966 0
 2340 0efc BB6C     		ldr	r3, [r7, #72]
 2341 0efe 1B04     		lsl	r3, r3, #16
 2342 0f00 1B14     		asr	r3, r3, #16
 2343 0f02 7A6C     		ldr	r2, [r7, #68]
 2344 0f04 1214     		asr	r2, r2, #16
 2345 0f06 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 2346              		.loc 2 967 0
 2347 0f08 BB6C     		ldr	r3, [r7, #72]
 2348 0f0a 1B14     		asr	r3, r3, #16
 2349 0f0c 796C     		ldr	r1, [r7, #68]
 2350 0f0e 0904     		lsl	r1, r1, #16
 2351 0f10 0914     		asr	r1, r1, #16
 2352 0f12 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 2353              		.loc 2 966 0
 2354 0f14 D218     		add	r2, r2, r3
 2355              		.loc 2 968 0
 2356 0f16 3B6C     		ldr	r3, [r7, #64]
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 2357              		.loc 2 967 0
 2358 0f18 D318     		add	r3, r2, r3
 2359              	.LBE115:
 2360              	.LBE114:
 2361              		.loc 1 416 0
 2362 0f1a E022     		mov	r2, #224
 2363 0f1c 5200     		lsl	r2, r2, #1
 2364 0f1e BA18     		add	r2, r7, r2
 2365 0f20 1360     		str	r3, [r2]
 2366              	.L34:
 417:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       }
 418:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 419:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 420:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       *pOut = (q15_t) (acc0 >> 15);
 2367              		.loc 1 420 0
 2368 0f22 E623     		mov	r3, #230
 2369 0f24 5B00     		lsl	r3, r3, #1
 2370 0f26 FB18     		add	r3, r7, r3
 2371 0f28 1B68     		ldr	r3, [r3]
 2372 0f2a DB13     		asr	r3, r3, #15
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 69


 2373 0f2c 9AB2     		uxth	r2, r3
 2374 0f2e EA23     		mov	r3, #234
 2375 0f30 5B00     		lsl	r3, r3, #1
 2376 0f32 FB18     		add	r3, r7, r3
 2377 0f34 1B68     		ldr	r3, [r3]
 2378 0f36 1A80     		strh	r2, [r3]
 421:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Destination pointer is updated according to the address modifier, inc */
 422:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       pOut += inc;
 2379              		.loc 1 422 0
 2380 0f38 CE23     		mov	r3, #206
 2381 0f3a 5B00     		lsl	r3, r3, #1
 2382 0f3c FB18     		add	r3, r7, r3
 2383 0f3e 1B68     		ldr	r3, [r3]
 2384 0f40 5B00     		lsl	r3, r3, #1
 2385 0f42 EA22     		mov	r2, #234
 2386 0f44 5200     		lsl	r2, r2, #1
 2387 0f46 BA18     		add	r2, r7, r2
 2388 0f48 1268     		ldr	r2, [r2]
 2389 0f4a D318     		add	r3, r2, r3
 2390 0f4c EA22     		mov	r2, #234
 2391 0f4e 5200     		lsl	r2, r2, #1
 2392 0f50 BA18     		add	r2, r7, r2
 2393 0f52 1360     		str	r3, [r2]
 423:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 424:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       *pOut = (q15_t) (acc1 >> 15);
 2394              		.loc 1 424 0
 2395 0f54 E423     		mov	r3, #228
 2396 0f56 5B00     		lsl	r3, r3, #1
 2397 0f58 FB18     		add	r3, r7, r3
 2398 0f5a 1B68     		ldr	r3, [r3]
 2399 0f5c DB13     		asr	r3, r3, #15
 2400 0f5e 9AB2     		uxth	r2, r3
 2401 0f60 EA23     		mov	r3, #234
 2402 0f62 5B00     		lsl	r3, r3, #1
 2403 0f64 FB18     		add	r3, r7, r3
 2404 0f66 1B68     		ldr	r3, [r3]
 2405 0f68 1A80     		strh	r2, [r3]
 425:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       pOut += inc;
 2406              		.loc 1 425 0
 2407 0f6a CE23     		mov	r3, #206
 2408 0f6c 5B00     		lsl	r3, r3, #1
 2409 0f6e FB18     		add	r3, r7, r3
 2410 0f70 1B68     		ldr	r3, [r3]
 2411 0f72 5B00     		lsl	r3, r3, #1
 2412 0f74 EA22     		mov	r2, #234
 2413 0f76 5200     		lsl	r2, r2, #1
 2414 0f78 BA18     		add	r2, r7, r2
 2415 0f7a 1268     		ldr	r2, [r2]
 2416 0f7c D318     		add	r3, r2, r3
 2417 0f7e EA22     		mov	r2, #234
 2418 0f80 5200     		lsl	r2, r2, #1
 2419 0f82 BA18     		add	r2, r7, r2
 2420 0f84 1360     		str	r3, [r2]
 426:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 427:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       *pOut = (q15_t) (acc2 >> 15);
 2421              		.loc 1 427 0
 2422 0f86 E223     		mov	r3, #226
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 70


 2423 0f88 5B00     		lsl	r3, r3, #1
 2424 0f8a FB18     		add	r3, r7, r3
 2425 0f8c 1B68     		ldr	r3, [r3]
 2426 0f8e DB13     		asr	r3, r3, #15
 2427 0f90 9AB2     		uxth	r2, r3
 2428 0f92 EA23     		mov	r3, #234
 2429 0f94 5B00     		lsl	r3, r3, #1
 2430 0f96 FB18     		add	r3, r7, r3
 2431 0f98 1B68     		ldr	r3, [r3]
 2432 0f9a 1A80     		strh	r2, [r3]
 428:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       pOut += inc;
 2433              		.loc 1 428 0
 2434 0f9c CE23     		mov	r3, #206
 2435 0f9e 5B00     		lsl	r3, r3, #1
 2436 0fa0 FB18     		add	r3, r7, r3
 2437 0fa2 1B68     		ldr	r3, [r3]
 2438 0fa4 5B00     		lsl	r3, r3, #1
 2439 0fa6 EA22     		mov	r2, #234
 2440 0fa8 5200     		lsl	r2, r2, #1
 2441 0faa BA18     		add	r2, r7, r2
 2442 0fac 1268     		ldr	r2, [r2]
 2443 0fae D318     		add	r3, r2, r3
 2444 0fb0 EA22     		mov	r2, #234
 2445 0fb2 5200     		lsl	r2, r2, #1
 2446 0fb4 BA18     		add	r2, r7, r2
 2447 0fb6 1360     		str	r3, [r2]
 429:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 430:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       *pOut = (q15_t) (acc3 >> 15);
 2448              		.loc 1 430 0
 2449 0fb8 E023     		mov	r3, #224
 2450 0fba 5B00     		lsl	r3, r3, #1
 2451 0fbc FB18     		add	r3, r7, r3
 2452 0fbe 1B68     		ldr	r3, [r3]
 2453 0fc0 DB13     		asr	r3, r3, #15
 2454 0fc2 9AB2     		uxth	r2, r3
 2455 0fc4 EA23     		mov	r3, #234
 2456 0fc6 5B00     		lsl	r3, r3, #1
 2457 0fc8 FB18     		add	r3, r7, r3
 2458 0fca 1B68     		ldr	r3, [r3]
 2459 0fcc 1A80     		strh	r2, [r3]
 431:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       pOut += inc;
 2460              		.loc 1 431 0
 2461 0fce CE23     		mov	r3, #206
 2462 0fd0 5B00     		lsl	r3, r3, #1
 2463 0fd2 FB18     		add	r3, r7, r3
 2464 0fd4 1B68     		ldr	r3, [r3]
 2465 0fd6 5B00     		lsl	r3, r3, #1
 2466 0fd8 EA22     		mov	r2, #234
 2467 0fda 5200     		lsl	r2, r2, #1
 2468 0fdc BA18     		add	r2, r7, r2
 2469 0fde 1268     		ldr	r2, [r2]
 2470 0fe0 D318     		add	r3, r2, r3
 2471 0fe2 EA22     		mov	r2, #234
 2472 0fe4 5200     		lsl	r2, r2, #1
 2473 0fe6 BA18     		add	r2, r7, r2
 2474 0fe8 1360     		str	r3, [r2]
 432:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 71


 433:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Increment the pointer pIn1 index, count by 1 */
 434:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       count += 4u;
 2475              		.loc 1 434 0
 2476 0fea D623     		mov	r3, #214
 2477 0fec 5B00     		lsl	r3, r3, #1
 2478 0fee FB18     		add	r3, r7, r3
 2479 0ff0 1B68     		ldr	r3, [r3]
 2480 0ff2 0433     		add	r3, r3, #4
 2481 0ff4 D622     		mov	r2, #214
 2482 0ff6 5200     		lsl	r2, r2, #1
 2483 0ff8 BA18     		add	r2, r7, r2
 2484 0ffa 1360     		str	r3, [r2]
 435:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 436:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 437:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       px = pIn1 + count;
 2485              		.loc 1 437 0
 2486 0ffc D623     		mov	r3, #214
 2487 0ffe 5B00     		lsl	r3, r3, #1
 2488 1000 FB18     		add	r3, r7, r3
 2489 1002 1B68     		ldr	r3, [r3]
 2490 1004 5B00     		lsl	r3, r3, #1
 2491 1006 EE22     		mov	r2, #238
 2492 1008 5200     		lsl	r2, r2, #1
 2493 100a BA18     		add	r2, r7, r2
 2494 100c 1268     		ldr	r2, [r2]
 2495 100e D318     		add	r3, r2, r3
 2496 1010 BB61     		str	r3, [r7, #24]
 438:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       py = pIn2;
 2497              		.loc 1 438 0
 2498 1012 EC23     		mov	r3, #236
 2499 1014 5B00     		lsl	r3, r3, #1
 2500 1016 FB18     		add	r3, r7, r3
 2501 1018 1B68     		ldr	r3, [r3]
 2502 101a 7B61     		str	r3, [r7, #20]
 439:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 440:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 441:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Decrement the loop counter */
 442:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       blkCnt--;
 2503              		.loc 1 442 0
 2504 101c D423     		mov	r3, #212
 2505 101e 5B00     		lsl	r3, r3, #1
 2506 1020 FB18     		add	r3, r7, r3
 2507 1022 1B68     		ldr	r3, [r3]
 2508 1024 013B     		sub	r3, r3, #1
 2509 1026 D422     		mov	r2, #212
 2510 1028 5200     		lsl	r2, r2, #1
 2511 102a BA18     		add	r2, r7, r2
 2512 102c 1360     		str	r3, [r2]
 2513              	.L14:
 263:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
 2514              		.loc 1 263 0
 2515 102e D423     		mov	r3, #212
 2516 1030 5B00     		lsl	r3, r3, #1
 2517 1032 FB18     		add	r3, r7, r3
 2518 1034 1B68     		ldr	r3, [r3]
 2519 1036 002B     		cmp	r3, #0
 2520 1038 01D0     		beq	.LCB2219
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 72


 2521 103a FFF7E7F9 		bl	.L43	@far jump
 2522              	.LCB2219:
 443:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     }
 444:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 445:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* If the blockSize2 is not a multiple of 4, compute any remaining output samples here.
 446:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      ** No loop unrolling is used. */
 447:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     blkCnt = blockSize2 % 0x4u;
 2523              		.loc 1 447 0
 2524 103e C823     		mov	r3, #200
 2525 1040 5B00     		lsl	r3, r3, #1
 2526 1042 FB18     		add	r3, r7, r3
 2527 1044 1B68     		ldr	r3, [r3]
 2528 1046 0322     		mov	r2, #3
 2529 1048 1340     		and	r3, r2
 2530 104a D422     		mov	r2, #212
 2531 104c 5200     		lsl	r2, r2, #1
 2532 104e BA18     		add	r2, r7, r2
 2533 1050 1360     		str	r3, [r2]
 448:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 449:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     while (blkCnt > 0u)
 2534              		.loc 1 449 0
 2535 1052 D0E0     		b	.L44
 2536              	.L49:
 450:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
 451:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 452:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       sum = 0;
 2537              		.loc 1 452 0
 2538 1054 0023     		mov	r3, #0
 2539 1056 E822     		mov	r2, #232
 2540 1058 5200     		lsl	r2, r2, #1
 2541 105a BA18     		add	r2, r7, r2
 2542 105c 1360     		str	r3, [r2]
 453:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 454:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 455:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       k = srcBLen >> 2u;
 2543              		.loc 1 455 0
 2544 105e 3B68     		ldr	r3, [r7]
 2545 1060 9B08     		lsr	r3, r3, #2
 2546 1062 D822     		mov	r2, #216
 2547 1064 5200     		lsl	r2, r2, #1
 2548 1066 BA18     		add	r2, r7, r2
 2549 1068 1360     		str	r3, [r2]
 456:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 457:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 458:Source\FilteringFunctions/arm_correlate_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 459:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       while (k > 0u)
 2550              		.loc 1 459 0
 2551 106a 58E0     		b	.L45
 2552              	.L46:
 460:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       {
 461:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Perform the multiply-accumulates */
 462:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
 2553              		.loc 1 462 0
 2554 106c BB69     		ldr	r3, [r7, #24]
 2555 106e 9A1C     		add	r2, r3, #2
 2556 1070 BA61     		str	r2, [r7, #24]
 2557 1072 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 73


 2558 1074 1AB2     		sxth	r2, r3
 2559 1076 7B69     		ldr	r3, [r7, #20]
 2560 1078 991C     		add	r1, r3, #2
 2561 107a 7961     		str	r1, [r7, #20]
 2562 107c 1B88     		ldrh	r3, [r3]
 2563 107e 1BB2     		sxth	r3, r3
 2564 1080 5343     		mul	r3, r2
 2565 1082 E822     		mov	r2, #232
 2566 1084 5200     		lsl	r2, r2, #1
 2567 1086 BA18     		add	r2, r7, r2
 2568 1088 1268     		ldr	r2, [r2]
 2569 108a D318     		add	r3, r2, r3
 2570 108c E822     		mov	r2, #232
 2571 108e 5200     		lsl	r2, r2, #1
 2572 1090 BA18     		add	r2, r7, r2
 2573 1092 1360     		str	r3, [r2]
 463:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
 2574              		.loc 1 463 0
 2575 1094 BB69     		ldr	r3, [r7, #24]
 2576 1096 9A1C     		add	r2, r3, #2
 2577 1098 BA61     		str	r2, [r7, #24]
 2578 109a 1B88     		ldrh	r3, [r3]
 2579 109c 1AB2     		sxth	r2, r3
 2580 109e 7B69     		ldr	r3, [r7, #20]
 2581 10a0 991C     		add	r1, r3, #2
 2582 10a2 7961     		str	r1, [r7, #20]
 2583 10a4 1B88     		ldrh	r3, [r3]
 2584 10a6 1BB2     		sxth	r3, r3
 2585 10a8 5343     		mul	r3, r2
 2586 10aa E822     		mov	r2, #232
 2587 10ac 5200     		lsl	r2, r2, #1
 2588 10ae BA18     		add	r2, r7, r2
 2589 10b0 1268     		ldr	r2, [r2]
 2590 10b2 D318     		add	r3, r2, r3
 2591 10b4 E822     		mov	r2, #232
 2592 10b6 5200     		lsl	r2, r2, #1
 2593 10b8 BA18     		add	r2, r7, r2
 2594 10ba 1360     		str	r3, [r2]
 464:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
 2595              		.loc 1 464 0
 2596 10bc BB69     		ldr	r3, [r7, #24]
 2597 10be 9A1C     		add	r2, r3, #2
 2598 10c0 BA61     		str	r2, [r7, #24]
 2599 10c2 1B88     		ldrh	r3, [r3]
 2600 10c4 1AB2     		sxth	r2, r3
 2601 10c6 7B69     		ldr	r3, [r7, #20]
 2602 10c8 991C     		add	r1, r3, #2
 2603 10ca 7961     		str	r1, [r7, #20]
 2604 10cc 1B88     		ldrh	r3, [r3]
 2605 10ce 1BB2     		sxth	r3, r3
 2606 10d0 5343     		mul	r3, r2
 2607 10d2 E822     		mov	r2, #232
 2608 10d4 5200     		lsl	r2, r2, #1
 2609 10d6 BA18     		add	r2, r7, r2
 2610 10d8 1268     		ldr	r2, [r2]
 2611 10da D318     		add	r3, r2, r3
 2612 10dc E822     		mov	r2, #232
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 74


 2613 10de 5200     		lsl	r2, r2, #1
 2614 10e0 BA18     		add	r2, r7, r2
 2615 10e2 1360     		str	r3, [r2]
 465:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
 2616              		.loc 1 465 0
 2617 10e4 BB69     		ldr	r3, [r7, #24]
 2618 10e6 9A1C     		add	r2, r3, #2
 2619 10e8 BA61     		str	r2, [r7, #24]
 2620 10ea 1B88     		ldrh	r3, [r3]
 2621 10ec 1AB2     		sxth	r2, r3
 2622 10ee 7B69     		ldr	r3, [r7, #20]
 2623 10f0 991C     		add	r1, r3, #2
 2624 10f2 7961     		str	r1, [r7, #20]
 2625 10f4 1B88     		ldrh	r3, [r3]
 2626 10f6 1BB2     		sxth	r3, r3
 2627 10f8 5343     		mul	r3, r2
 2628 10fa E822     		mov	r2, #232
 2629 10fc 5200     		lsl	r2, r2, #1
 2630 10fe BA18     		add	r2, r7, r2
 2631 1100 1268     		ldr	r2, [r2]
 2632 1102 D318     		add	r3, r2, r3
 2633 1104 E822     		mov	r2, #232
 2634 1106 5200     		lsl	r2, r2, #1
 2635 1108 BA18     		add	r2, r7, r2
 2636 110a 1360     		str	r3, [r2]
 466:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 467:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Decrement the loop counter */
 468:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         k--;
 2637              		.loc 1 468 0
 2638 110c D823     		mov	r3, #216
 2639 110e 5B00     		lsl	r3, r3, #1
 2640 1110 FB18     		add	r3, r7, r3
 2641 1112 1B68     		ldr	r3, [r3]
 2642 1114 013B     		sub	r3, r3, #1
 2643 1116 D822     		mov	r2, #216
 2644 1118 5200     		lsl	r2, r2, #1
 2645 111a BA18     		add	r2, r7, r2
 2646 111c 1360     		str	r3, [r2]
 2647              	.L45:
 459:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       {
 2648              		.loc 1 459 0
 2649 111e D823     		mov	r3, #216
 2650 1120 5B00     		lsl	r3, r3, #1
 2651 1122 FB18     		add	r3, r7, r3
 2652 1124 1B68     		ldr	r3, [r3]
 2653 1126 002B     		cmp	r3, #0
 2654 1128 A0D1     		bne	.L46
 469:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       }
 470:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 471:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 472:Source\FilteringFunctions/arm_correlate_fast_q15.c ****        ** No loop unrolling is used. */
 473:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       k = srcBLen % 0x4u;
 2655              		.loc 1 473 0
 2656 112a 3B68     		ldr	r3, [r7]
 2657 112c 0322     		mov	r2, #3
 2658 112e 1340     		and	r3, r2
 2659 1130 D822     		mov	r2, #216
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 75


 2660 1132 5200     		lsl	r2, r2, #1
 2661 1134 BA18     		add	r2, r7, r2
 2662 1136 1360     		str	r3, [r2]
 474:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 475:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       while (k > 0u)
 2663              		.loc 1 475 0
 2664 1138 1CE0     		b	.L47
 2665              	.L48:
 476:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       {
 477:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Perform the multiply-accumulates */
 478:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
 2666              		.loc 1 478 0
 2667 113a BB69     		ldr	r3, [r7, #24]
 2668 113c 9A1C     		add	r2, r3, #2
 2669 113e BA61     		str	r2, [r7, #24]
 2670 1140 1B88     		ldrh	r3, [r3]
 2671 1142 1AB2     		sxth	r2, r3
 2672 1144 7B69     		ldr	r3, [r7, #20]
 2673 1146 991C     		add	r1, r3, #2
 2674 1148 7961     		str	r1, [r7, #20]
 2675 114a 1B88     		ldrh	r3, [r3]
 2676 114c 1BB2     		sxth	r3, r3
 2677 114e 5343     		mul	r3, r2
 2678 1150 E822     		mov	r2, #232
 2679 1152 5200     		lsl	r2, r2, #1
 2680 1154 BA18     		add	r2, r7, r2
 2681 1156 1268     		ldr	r2, [r2]
 2682 1158 D318     		add	r3, r2, r3
 2683 115a E822     		mov	r2, #232
 2684 115c 5200     		lsl	r2, r2, #1
 2685 115e BA18     		add	r2, r7, r2
 2686 1160 1360     		str	r3, [r2]
 479:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 480:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Decrement the loop counter */
 481:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         k--;
 2687              		.loc 1 481 0
 2688 1162 D823     		mov	r3, #216
 2689 1164 5B00     		lsl	r3, r3, #1
 2690 1166 FB18     		add	r3, r7, r3
 2691 1168 1B68     		ldr	r3, [r3]
 2692 116a 013B     		sub	r3, r3, #1
 2693 116c D822     		mov	r2, #216
 2694 116e 5200     		lsl	r2, r2, #1
 2695 1170 BA18     		add	r2, r7, r2
 2696 1172 1360     		str	r3, [r2]
 2697              	.L47:
 475:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       {
 2698              		.loc 1 475 0
 2699 1174 D823     		mov	r3, #216
 2700 1176 5B00     		lsl	r3, r3, #1
 2701 1178 FB18     		add	r3, r7, r3
 2702 117a 1B68     		ldr	r3, [r3]
 2703 117c 002B     		cmp	r3, #0
 2704 117e DCD1     		bne	.L48
 482:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       }
 483:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 484:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 76


 485:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       *pOut = (q15_t) (sum >> 15);
 2705              		.loc 1 485 0
 2706 1180 E823     		mov	r3, #232
 2707 1182 5B00     		lsl	r3, r3, #1
 2708 1184 FB18     		add	r3, r7, r3
 2709 1186 1B68     		ldr	r3, [r3]
 2710 1188 DB13     		asr	r3, r3, #15
 2711 118a 9AB2     		uxth	r2, r3
 2712 118c EA23     		mov	r3, #234
 2713 118e 5B00     		lsl	r3, r3, #1
 2714 1190 FB18     		add	r3, r7, r3
 2715 1192 1B68     		ldr	r3, [r3]
 2716 1194 1A80     		strh	r2, [r3]
 486:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Destination pointer is updated according to the address modifier, inc */
 487:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       pOut += inc;
 2717              		.loc 1 487 0
 2718 1196 CE23     		mov	r3, #206
 2719 1198 5B00     		lsl	r3, r3, #1
 2720 119a FB18     		add	r3, r7, r3
 2721 119c 1B68     		ldr	r3, [r3]
 2722 119e 5B00     		lsl	r3, r3, #1
 2723 11a0 EA22     		mov	r2, #234
 2724 11a2 5200     		lsl	r2, r2, #1
 2725 11a4 BA18     		add	r2, r7, r2
 2726 11a6 1268     		ldr	r2, [r2]
 2727 11a8 D318     		add	r3, r2, r3
 2728 11aa EA22     		mov	r2, #234
 2729 11ac 5200     		lsl	r2, r2, #1
 2730 11ae BA18     		add	r2, r7, r2
 2731 11b0 1360     		str	r3, [r2]
 488:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 489:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Increment the pointer pIn1 index, count by 1 */
 490:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       count++;
 2732              		.loc 1 490 0
 2733 11b2 D623     		mov	r3, #214
 2734 11b4 5B00     		lsl	r3, r3, #1
 2735 11b6 FB18     		add	r3, r7, r3
 2736 11b8 1B68     		ldr	r3, [r3]
 2737 11ba 0133     		add	r3, r3, #1
 2738 11bc D622     		mov	r2, #214
 2739 11be 5200     		lsl	r2, r2, #1
 2740 11c0 BA18     		add	r2, r7, r2
 2741 11c2 1360     		str	r3, [r2]
 491:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 492:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 493:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       px = pIn1 + count;
 2742              		.loc 1 493 0
 2743 11c4 D623     		mov	r3, #214
 2744 11c6 5B00     		lsl	r3, r3, #1
 2745 11c8 FB18     		add	r3, r7, r3
 2746 11ca 1B68     		ldr	r3, [r3]
 2747 11cc 5B00     		lsl	r3, r3, #1
 2748 11ce EE22     		mov	r2, #238
 2749 11d0 5200     		lsl	r2, r2, #1
 2750 11d2 BA18     		add	r2, r7, r2
 2751 11d4 1268     		ldr	r2, [r2]
 2752 11d6 D318     		add	r3, r2, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 77


 2753 11d8 BB61     		str	r3, [r7, #24]
 494:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       py = pIn2;
 2754              		.loc 1 494 0
 2755 11da EC23     		mov	r3, #236
 2756 11dc 5B00     		lsl	r3, r3, #1
 2757 11de FB18     		add	r3, r7, r3
 2758 11e0 1B68     		ldr	r3, [r3]
 2759 11e2 7B61     		str	r3, [r7, #20]
 495:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 496:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Decrement the loop counter */
 497:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       blkCnt--;
 2760              		.loc 1 497 0
 2761 11e4 D423     		mov	r3, #212
 2762 11e6 5B00     		lsl	r3, r3, #1
 2763 11e8 FB18     		add	r3, r7, r3
 2764 11ea 1B68     		ldr	r3, [r3]
 2765 11ec 013B     		sub	r3, r3, #1
 2766 11ee D422     		mov	r2, #212
 2767 11f0 5200     		lsl	r2, r2, #1
 2768 11f2 BA18     		add	r2, r7, r2
 2769 11f4 1360     		str	r3, [r2]
 2770              	.L44:
 449:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
 2771              		.loc 1 449 0
 2772 11f6 D423     		mov	r3, #212
 2773 11f8 5B00     		lsl	r3, r3, #1
 2774 11fa FB18     		add	r3, r7, r3
 2775 11fc 1B68     		ldr	r3, [r3]
 2776 11fe 002B     		cmp	r3, #0
 2777 1200 00D0     		beq	.LCB2460
 2778 1202 27E7     		b	.L49	@long jump
 2779              	.LCB2460:
 2780 1204 77E0     		b	.L50
 2781              	.L13:
 498:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     }
 499:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   }
 500:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   else
 501:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   {
 502:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* If the srcBLen is not a multiple of 4,
 503:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      * the blockSize2 loop cannot be unrolled by 4 */
 504:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     blkCnt = blockSize2;
 2782              		.loc 1 504 0
 2783 1206 C823     		mov	r3, #200
 2784 1208 5B00     		lsl	r3, r3, #1
 2785 120a FB18     		add	r3, r7, r3
 2786 120c 1B68     		ldr	r3, [r3]
 2787 120e D422     		mov	r2, #212
 2788 1210 5200     		lsl	r2, r2, #1
 2789 1212 BA18     		add	r2, r7, r2
 2790 1214 1360     		str	r3, [r2]
 505:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 506:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     while (blkCnt > 0u)
 2791              		.loc 1 506 0
 2792 1216 68E0     		b	.L51
 2793              	.L54:
 507:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
 508:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Accumulator is made zero for every iteration */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 78


 509:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       sum = 0;
 2794              		.loc 1 509 0
 2795 1218 0023     		mov	r3, #0
 2796 121a E822     		mov	r2, #232
 2797 121c 5200     		lsl	r2, r2, #1
 2798 121e BA18     		add	r2, r7, r2
 2799 1220 1360     		str	r3, [r2]
 510:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 511:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Loop over srcBLen */
 512:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       k = srcBLen;
 2800              		.loc 1 512 0
 2801 1222 3B68     		ldr	r3, [r7]
 2802 1224 D822     		mov	r2, #216
 2803 1226 5200     		lsl	r2, r2, #1
 2804 1228 BA18     		add	r2, r7, r2
 2805 122a 1360     		str	r3, [r2]
 513:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 514:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       while (k > 0u)
 2806              		.loc 1 514 0
 2807 122c 1CE0     		b	.L52
 2808              	.L53:
 515:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       {
 516:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Perform the multiply-accumulate */
 517:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
 2809              		.loc 1 517 0
 2810 122e BB69     		ldr	r3, [r7, #24]
 2811 1230 9A1C     		add	r2, r3, #2
 2812 1232 BA61     		str	r2, [r7, #24]
 2813 1234 1B88     		ldrh	r3, [r3]
 2814 1236 1AB2     		sxth	r2, r3
 2815 1238 7B69     		ldr	r3, [r7, #20]
 2816 123a 991C     		add	r1, r3, #2
 2817 123c 7961     		str	r1, [r7, #20]
 2818 123e 1B88     		ldrh	r3, [r3]
 2819 1240 1BB2     		sxth	r3, r3
 2820 1242 5343     		mul	r3, r2
 2821 1244 E822     		mov	r2, #232
 2822 1246 5200     		lsl	r2, r2, #1
 2823 1248 BA18     		add	r2, r7, r2
 2824 124a 1268     		ldr	r2, [r2]
 2825 124c D318     		add	r3, r2, r3
 2826 124e E822     		mov	r2, #232
 2827 1250 5200     		lsl	r2, r2, #1
 2828 1252 BA18     		add	r2, r7, r2
 2829 1254 1360     		str	r3, [r2]
 518:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 519:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Decrement the loop counter */
 520:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         k--;
 2830              		.loc 1 520 0
 2831 1256 D823     		mov	r3, #216
 2832 1258 5B00     		lsl	r3, r3, #1
 2833 125a FB18     		add	r3, r7, r3
 2834 125c 1B68     		ldr	r3, [r3]
 2835 125e 013B     		sub	r3, r3, #1
 2836 1260 D822     		mov	r2, #216
 2837 1262 5200     		lsl	r2, r2, #1
 2838 1264 BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 79


 2839 1266 1360     		str	r3, [r2]
 2840              	.L52:
 514:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       {
 2841              		.loc 1 514 0
 2842 1268 D823     		mov	r3, #216
 2843 126a 5B00     		lsl	r3, r3, #1
 2844 126c FB18     		add	r3, r7, r3
 2845 126e 1B68     		ldr	r3, [r3]
 2846 1270 002B     		cmp	r3, #0
 2847 1272 DCD1     		bne	.L53
 521:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       }
 522:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 523:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 524:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       *pOut = (q15_t) (sum >> 15);
 2848              		.loc 1 524 0
 2849 1274 E823     		mov	r3, #232
 2850 1276 5B00     		lsl	r3, r3, #1
 2851 1278 FB18     		add	r3, r7, r3
 2852 127a 1B68     		ldr	r3, [r3]
 2853 127c DB13     		asr	r3, r3, #15
 2854 127e 9AB2     		uxth	r2, r3
 2855 1280 EA23     		mov	r3, #234
 2856 1282 5B00     		lsl	r3, r3, #1
 2857 1284 FB18     		add	r3, r7, r3
 2858 1286 1B68     		ldr	r3, [r3]
 2859 1288 1A80     		strh	r2, [r3]
 525:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Destination pointer is updated according to the address modifier, inc */
 526:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       pOut += inc;
 2860              		.loc 1 526 0
 2861 128a CE23     		mov	r3, #206
 2862 128c 5B00     		lsl	r3, r3, #1
 2863 128e FB18     		add	r3, r7, r3
 2864 1290 1B68     		ldr	r3, [r3]
 2865 1292 5B00     		lsl	r3, r3, #1
 2866 1294 EA22     		mov	r2, #234
 2867 1296 5200     		lsl	r2, r2, #1
 2868 1298 BA18     		add	r2, r7, r2
 2869 129a 1268     		ldr	r2, [r2]
 2870 129c D318     		add	r3, r2, r3
 2871 129e EA22     		mov	r2, #234
 2872 12a0 5200     		lsl	r2, r2, #1
 2873 12a2 BA18     		add	r2, r7, r2
 2874 12a4 1360     		str	r3, [r2]
 527:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 528:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Increment the MAC count */
 529:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       count++;
 2875              		.loc 1 529 0
 2876 12a6 D623     		mov	r3, #214
 2877 12a8 5B00     		lsl	r3, r3, #1
 2878 12aa FB18     		add	r3, r7, r3
 2879 12ac 1B68     		ldr	r3, [r3]
 2880 12ae 0133     		add	r3, r3, #1
 2881 12b0 D622     		mov	r2, #214
 2882 12b2 5200     		lsl	r2, r2, #1
 2883 12b4 BA18     		add	r2, r7, r2
 2884 12b6 1360     		str	r3, [r2]
 530:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 80


 531:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 532:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       px = pIn1 + count;
 2885              		.loc 1 532 0
 2886 12b8 D623     		mov	r3, #214
 2887 12ba 5B00     		lsl	r3, r3, #1
 2888 12bc FB18     		add	r3, r7, r3
 2889 12be 1B68     		ldr	r3, [r3]
 2890 12c0 5B00     		lsl	r3, r3, #1
 2891 12c2 EE22     		mov	r2, #238
 2892 12c4 5200     		lsl	r2, r2, #1
 2893 12c6 BA18     		add	r2, r7, r2
 2894 12c8 1268     		ldr	r2, [r2]
 2895 12ca D318     		add	r3, r2, r3
 2896 12cc BB61     		str	r3, [r7, #24]
 533:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       py = pIn2;
 2897              		.loc 1 533 0
 2898 12ce EC23     		mov	r3, #236
 2899 12d0 5B00     		lsl	r3, r3, #1
 2900 12d2 FB18     		add	r3, r7, r3
 2901 12d4 1B68     		ldr	r3, [r3]
 2902 12d6 7B61     		str	r3, [r7, #20]
 534:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 535:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Decrement the loop counter */
 536:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       blkCnt--;
 2903              		.loc 1 536 0
 2904 12d8 D423     		mov	r3, #212
 2905 12da 5B00     		lsl	r3, r3, #1
 2906 12dc FB18     		add	r3, r7, r3
 2907 12de 1B68     		ldr	r3, [r3]
 2908 12e0 013B     		sub	r3, r3, #1
 2909 12e2 D422     		mov	r2, #212
 2910 12e4 5200     		lsl	r2, r2, #1
 2911 12e6 BA18     		add	r2, r7, r2
 2912 12e8 1360     		str	r3, [r2]
 2913              	.L51:
 506:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
 2914              		.loc 1 506 0
 2915 12ea D423     		mov	r3, #212
 2916 12ec 5B00     		lsl	r3, r3, #1
 2917 12ee FB18     		add	r3, r7, r3
 2918 12f0 1B68     		ldr	r3, [r3]
 2919 12f2 002B     		cmp	r3, #0
 2920 12f4 90D1     		bne	.L54
 2921              	.L50:
 537:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     }
 538:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   }
 539:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 540:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* --------------------------
 541:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * Initializations of stage3
 542:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * -------------------------*/
 543:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 544:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* sum += x[srcALen-srcBLen+1] * y[0] + x[srcALen-srcBLen+2] * y[1] +...+ x[srcALen-1] * y[srcBLe
 545:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * sum += x[srcALen-srcBLen+2] * y[0] + x[srcALen-srcBLen+3] * y[1] +...+ x[srcALen-1] * y[srcBLe
 546:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * ....
 547:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * sum +=  x[srcALen-2] * y[0] + x[srcALen-1] * y[1]
 548:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * sum +=  x[srcALen-1] * y[0]
 549:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 81


 550:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 551:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* In this stage the MAC operations are decreased by 1 for every iteration.
 552:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      The count variable holds the number of MAC operations performed */
 553:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   count = srcBLen - 1u;
 2922              		.loc 1 553 0
 2923 12f6 3B68     		ldr	r3, [r7]
 2924 12f8 013B     		sub	r3, r3, #1
 2925 12fa D622     		mov	r2, #214
 2926 12fc 5200     		lsl	r2, r2, #1
 2927 12fe BA18     		add	r2, r7, r2
 2928 1300 1360     		str	r3, [r2]
 554:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 555:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* Working pointer of inputA */
 556:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   pSrc1 = (pIn1 + srcALen) - (srcBLen - 1u);
 2929              		.loc 1 556 0
 2930 1302 BA68     		ldr	r2, [r7, #8]
 2931 1304 3B68     		ldr	r3, [r7]
 2932 1306 D31A     		sub	r3, r2, r3
 2933 1308 0133     		add	r3, r3, #1
 2934 130a 5B00     		lsl	r3, r3, #1
 2935 130c EE22     		mov	r2, #238
 2936 130e 5200     		lsl	r2, r2, #1
 2937 1310 BA18     		add	r2, r7, r2
 2938 1312 1268     		ldr	r2, [r2]
 2939 1314 D318     		add	r3, r2, r3
 2940 1316 DE22     		mov	r2, #222
 2941 1318 5200     		lsl	r2, r2, #1
 2942 131a BA18     		add	r2, r7, r2
 2943 131c 1360     		str	r3, [r2]
 557:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   px = pSrc1;
 2944              		.loc 1 557 0
 2945 131e DE23     		mov	r3, #222
 2946 1320 5B00     		lsl	r3, r3, #1
 2947 1322 FB18     		add	r3, r7, r3
 2948 1324 1B68     		ldr	r3, [r3]
 2949 1326 BB61     		str	r3, [r7, #24]
 558:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 559:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* Working pointer of inputB */
 560:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   py = pIn2;
 2950              		.loc 1 560 0
 2951 1328 EC23     		mov	r3, #236
 2952 132a 5B00     		lsl	r3, r3, #1
 2953 132c FB18     		add	r3, r7, r3
 2954 132e 1B68     		ldr	r3, [r3]
 2955 1330 7B61     		str	r3, [r7, #20]
 561:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 562:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* -------------------
 563:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * Stage3 process
 564:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * ------------------*/
 565:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 566:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   while (blockSize3 > 0u)
 2956              		.loc 1 566 0
 2957 1332 E9E0     		b	.L55
 2958              	.L63:
 567:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   {
 568:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Accumulator is made zero for every iteration */
 569:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     sum = 0;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 82


 2959              		.loc 1 569 0
 2960 1334 0023     		mov	r3, #0
 2961 1336 E822     		mov	r2, #232
 2962 1338 5200     		lsl	r2, r2, #1
 2963 133a BA18     		add	r2, r7, r2
 2964 133c 1360     		str	r3, [r2]
 570:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 571:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 572:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     k = count >> 2u;
 2965              		.loc 1 572 0
 2966 133e D623     		mov	r3, #214
 2967 1340 5B00     		lsl	r3, r3, #1
 2968 1342 FB18     		add	r3, r7, r3
 2969 1344 1B68     		ldr	r3, [r3]
 2970 1346 9B08     		lsr	r3, r3, #2
 2971 1348 D822     		mov	r2, #216
 2972 134a 5200     		lsl	r2, r2, #1
 2973 134c BA18     		add	r2, r7, r2
 2974 134e 1360     		str	r3, [r2]
 573:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 574:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 575:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 576:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     while (k > 0u)
 2975              		.loc 1 576 0
 2976 1350 58E0     		b	.L56
 2977              	.L59:
 577:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
 578:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Perform the multiply-accumulates */
 579:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* sum += x[srcALen - srcBLen + 4] * y[3] , sum += x[srcALen - srcBLen + 3] * y[2] */
 580:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       sum = __SMLAD(*__SIMD32(px)++, *__SIMD32(py)++, sum);
 2978              		.loc 1 580 0
 2979 1352 1823     		mov	r3, #24
 2980 1354 FB18     		add	r3, r7, r3
 2981 1356 1A68     		ldr	r2, [r3]
 2982 1358 111D     		add	r1, r2, #4
 2983 135a 1960     		str	r1, [r3]
 2984 135c 1368     		ldr	r3, [r2]
 2985 135e 181C     		mov	r0, r3
 2986 1360 1423     		mov	r3, #20
 2987 1362 FB18     		add	r3, r7, r3
 2988 1364 1A68     		ldr	r2, [r3]
 2989 1366 111D     		add	r1, r2, #4
 2990 1368 1960     		str	r1, [r3]
 2991 136a 1368     		ldr	r3, [r2]
 2992 136c 1A1C     		mov	r2, r3
 2993 136e E823     		mov	r3, #232
 2994 1370 5B00     		lsl	r3, r3, #1
 2995 1372 FB18     		add	r3, r7, r3
 2996 1374 1B68     		ldr	r3, [r3]
 2997 1376 F863     		str	r0, [r7, #60]
 2998 1378 BA63     		str	r2, [r7, #56]
 2999 137a 7B63     		str	r3, [r7, #52]
 3000              	.LBB116:
 3001              	.LBB117:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 3002              		.loc 2 952 0
 3003 137c FB6B     		ldr	r3, [r7, #60]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 83


 3004 137e 1B04     		lsl	r3, r3, #16
 3005 1380 1B14     		asr	r3, r3, #16
 3006 1382 BA6B     		ldr	r2, [r7, #56]
 3007 1384 1204     		lsl	r2, r2, #16
 3008 1386 1214     		asr	r2, r2, #16
 3009 1388 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 3010              		.loc 2 953 0
 3011 138a FB6B     		ldr	r3, [r7, #60]
 3012 138c 1B14     		asr	r3, r3, #16
 3013 138e B96B     		ldr	r1, [r7, #56]
 3014 1390 0914     		asr	r1, r1, #16
 3015 1392 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 3016              		.loc 2 952 0
 3017 1394 D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 3018              		.loc 2 954 0
 3019 1396 7B6B     		ldr	r3, [r7, #52]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 3020              		.loc 2 953 0
 3021 1398 D318     		add	r3, r2, r3
 3022              	.LBE117:
 3023              	.LBE116:
 3024              		.loc 1 580 0
 3025 139a E822     		mov	r2, #232
 3026 139c 5200     		lsl	r2, r2, #1
 3027 139e BA18     		add	r2, r7, r2
 3028 13a0 1360     		str	r3, [r2]
 581:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* sum += x[srcALen - srcBLen + 2] * y[1] , sum += x[srcALen - srcBLen + 1] * y[0] */
 582:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       sum = __SMLAD(*__SIMD32(px)++, *__SIMD32(py)++, sum);
 3029              		.loc 1 582 0
 3030 13a2 1823     		mov	r3, #24
 3031 13a4 FB18     		add	r3, r7, r3
 3032 13a6 1A68     		ldr	r2, [r3]
 3033 13a8 111D     		add	r1, r2, #4
 3034 13aa 1960     		str	r1, [r3]
 3035 13ac 1368     		ldr	r3, [r2]
 3036 13ae 181C     		mov	r0, r3
 3037 13b0 1423     		mov	r3, #20
 3038 13b2 FB18     		add	r3, r7, r3
 3039 13b4 1A68     		ldr	r2, [r3]
 3040 13b6 111D     		add	r1, r2, #4
 3041 13b8 1960     		str	r1, [r3]
 3042 13ba 1368     		ldr	r3, [r2]
 3043 13bc 1A1C     		mov	r2, r3
 3044 13be E823     		mov	r3, #232
 3045 13c0 5B00     		lsl	r3, r3, #1
 3046 13c2 FB18     		add	r3, r7, r3
 3047 13c4 1B68     		ldr	r3, [r3]
 3048 13c6 3863     		str	r0, [r7, #48]
 3049 13c8 FA62     		str	r2, [r7, #44]
 3050 13ca BB62     		str	r3, [r7, #40]
 3051              	.LBB118:
 3052              	.LBB119:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 3053              		.loc 2 952 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 84


 3054 13cc 3B6B     		ldr	r3, [r7, #48]
 3055 13ce 1B04     		lsl	r3, r3, #16
 3056 13d0 1B14     		asr	r3, r3, #16
 3057 13d2 FA6A     		ldr	r2, [r7, #44]
 3058 13d4 1204     		lsl	r2, r2, #16
 3059 13d6 1214     		asr	r2, r2, #16
 3060 13d8 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 3061              		.loc 2 953 0
 3062 13da 3B6B     		ldr	r3, [r7, #48]
 3063 13dc 1B14     		asr	r3, r3, #16
 3064 13de F96A     		ldr	r1, [r7, #44]
 3065 13e0 0914     		asr	r1, r1, #16
 3066 13e2 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 3067              		.loc 2 952 0
 3068 13e4 D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 3069              		.loc 2 954 0
 3070 13e6 BB6A     		ldr	r3, [r7, #40]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 3071              		.loc 2 953 0
 3072 13e8 D318     		add	r3, r2, r3
 3073              	.LBE119:
 3074              	.LBE118:
 3075              		.loc 1 582 0
 3076 13ea E822     		mov	r2, #232
 3077 13ec 5200     		lsl	r2, r2, #1
 3078 13ee BA18     		add	r2, r7, r2
 3079 13f0 1360     		str	r3, [r2]
 583:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 584:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Decrement the loop counter */
 585:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       k--;
 3080              		.loc 1 585 0
 3081 13f2 D823     		mov	r3, #216
 3082 13f4 5B00     		lsl	r3, r3, #1
 3083 13f6 FB18     		add	r3, r7, r3
 3084 13f8 1B68     		ldr	r3, [r3]
 3085 13fa 013B     		sub	r3, r3, #1
 3086 13fc D822     		mov	r2, #216
 3087 13fe 5200     		lsl	r2, r2, #1
 3088 1400 BA18     		add	r2, r7, r2
 3089 1402 1360     		str	r3, [r2]
 3090              	.L56:
 576:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
 3091              		.loc 1 576 0
 3092 1404 D823     		mov	r3, #216
 3093 1406 5B00     		lsl	r3, r3, #1
 3094 1408 FB18     		add	r3, r7, r3
 3095 140a 1B68     		ldr	r3, [r3]
 3096 140c 002B     		cmp	r3, #0
 3097 140e A0D1     		bne	.L59
 586:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     }
 587:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 588:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* If the count is not a multiple of 4, compute any remaining MACs here.
 589:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      ** No loop unrolling is used. */
 590:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     k = count % 0x4u;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 85


 3098              		.loc 1 590 0
 3099 1410 D623     		mov	r3, #214
 3100 1412 5B00     		lsl	r3, r3, #1
 3101 1414 FB18     		add	r3, r7, r3
 3102 1416 1B68     		ldr	r3, [r3]
 3103 1418 0322     		mov	r2, #3
 3104 141a 1340     		and	r3, r2
 3105 141c D822     		mov	r2, #216
 3106 141e 5200     		lsl	r2, r2, #1
 3107 1420 BA18     		add	r2, r7, r2
 3108 1422 1360     		str	r3, [r2]
 591:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 592:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     while (k > 0u)
 3109              		.loc 1 592 0
 3110 1424 2CE0     		b	.L60
 3111              	.L62:
 593:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
 594:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Perform the multiply-accumulates */
 595:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       sum = __SMLAD(*px++, *py++, sum);
 3112              		.loc 1 595 0
 3113 1426 BB69     		ldr	r3, [r7, #24]
 3114 1428 9A1C     		add	r2, r3, #2
 3115 142a BA61     		str	r2, [r7, #24]
 3116 142c 1B88     		ldrh	r3, [r3]
 3117 142e 19B2     		sxth	r1, r3
 3118 1430 7B69     		ldr	r3, [r7, #20]
 3119 1432 9A1C     		add	r2, r3, #2
 3120 1434 7A61     		str	r2, [r7, #20]
 3121 1436 1B88     		ldrh	r3, [r3]
 3122 1438 1AB2     		sxth	r2, r3
 3123 143a E823     		mov	r3, #232
 3124 143c 5B00     		lsl	r3, r3, #1
 3125 143e FB18     		add	r3, r7, r3
 3126 1440 1B68     		ldr	r3, [r3]
 3127 1442 7962     		str	r1, [r7, #36]
 3128 1444 3A62     		str	r2, [r7, #32]
 3129 1446 FB61     		str	r3, [r7, #28]
 3130              	.LBB120:
 3131              	.LBB121:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 3132              		.loc 2 952 0
 3133 1448 7B6A     		ldr	r3, [r7, #36]
 3134 144a 1B04     		lsl	r3, r3, #16
 3135 144c 1B14     		asr	r3, r3, #16
 3136 144e 3A6A     		ldr	r2, [r7, #32]
 3137 1450 1204     		lsl	r2, r2, #16
 3138 1452 1214     		asr	r2, r2, #16
 3139 1454 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 3140              		.loc 2 953 0
 3141 1456 7B6A     		ldr	r3, [r7, #36]
 3142 1458 1B14     		asr	r3, r3, #16
 3143 145a 396A     		ldr	r1, [r7, #32]
 3144 145c 0914     		asr	r1, r1, #16
 3145 145e 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 3146              		.loc 2 952 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 86


 3147 1460 D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 3148              		.loc 2 954 0
 3149 1462 FB69     		ldr	r3, [r7, #28]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 3150              		.loc 2 953 0
 3151 1464 D318     		add	r3, r2, r3
 3152              	.LBE121:
 3153              	.LBE120:
 3154              		.loc 1 595 0
 3155 1466 E822     		mov	r2, #232
 3156 1468 5200     		lsl	r2, r2, #1
 3157 146a BA18     		add	r2, r7, r2
 3158 146c 1360     		str	r3, [r2]
 596:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 597:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Decrement the loop counter */
 598:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       k--;
 3159              		.loc 1 598 0
 3160 146e D823     		mov	r3, #216
 3161 1470 5B00     		lsl	r3, r3, #1
 3162 1472 FB18     		add	r3, r7, r3
 3163 1474 1B68     		ldr	r3, [r3]
 3164 1476 013B     		sub	r3, r3, #1
 3165 1478 D822     		mov	r2, #216
 3166 147a 5200     		lsl	r2, r2, #1
 3167 147c BA18     		add	r2, r7, r2
 3168 147e 1360     		str	r3, [r2]
 3169              	.L60:
 592:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
 3170              		.loc 1 592 0
 3171 1480 D823     		mov	r3, #216
 3172 1482 5B00     		lsl	r3, r3, #1
 3173 1484 FB18     		add	r3, r7, r3
 3174 1486 1B68     		ldr	r3, [r3]
 3175 1488 002B     		cmp	r3, #0
 3176 148a CCD1     		bne	.L62
 599:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     }
 600:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 601:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
 602:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     *pOut = (q15_t) (sum >> 15);
 3177              		.loc 1 602 0
 3178 148c E823     		mov	r3, #232
 3179 148e 5B00     		lsl	r3, r3, #1
 3180 1490 FB18     		add	r3, r7, r3
 3181 1492 1B68     		ldr	r3, [r3]
 3182 1494 DB13     		asr	r3, r3, #15
 3183 1496 9AB2     		uxth	r2, r3
 3184 1498 EA23     		mov	r3, #234
 3185 149a 5B00     		lsl	r3, r3, #1
 3186 149c FB18     		add	r3, r7, r3
 3187 149e 1B68     		ldr	r3, [r3]
 3188 14a0 1A80     		strh	r2, [r3]
 603:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Destination pointer is updated according to the address modifier, inc */
 604:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     pOut += inc;
 3189              		.loc 1 604 0
 3190 14a2 CE23     		mov	r3, #206
 3191 14a4 5B00     		lsl	r3, r3, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 87


 3192 14a6 FB18     		add	r3, r7, r3
 3193 14a8 1B68     		ldr	r3, [r3]
 3194 14aa 5B00     		lsl	r3, r3, #1
 3195 14ac EA22     		mov	r2, #234
 3196 14ae 5200     		lsl	r2, r2, #1
 3197 14b0 BA18     		add	r2, r7, r2
 3198 14b2 1268     		ldr	r2, [r2]
 3199 14b4 D318     		add	r3, r2, r3
 3200 14b6 EA22     		mov	r2, #234
 3201 14b8 5200     		lsl	r2, r2, #1
 3202 14ba BA18     		add	r2, r7, r2
 3203 14bc 1360     		str	r3, [r2]
 605:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 606:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 607:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     px = ++pSrc1;
 3204              		.loc 1 607 0
 3205 14be DE23     		mov	r3, #222
 3206 14c0 5B00     		lsl	r3, r3, #1
 3207 14c2 FB18     		add	r3, r7, r3
 3208 14c4 1B68     		ldr	r3, [r3]
 3209 14c6 0233     		add	r3, r3, #2
 3210 14c8 DE22     		mov	r2, #222
 3211 14ca 5200     		lsl	r2, r2, #1
 3212 14cc BA18     		add	r2, r7, r2
 3213 14ce 1360     		str	r3, [r2]
 3214 14d0 DE23     		mov	r3, #222
 3215 14d2 5B00     		lsl	r3, r3, #1
 3216 14d4 FB18     		add	r3, r7, r3
 3217 14d6 1B68     		ldr	r3, [r3]
 3218 14d8 BB61     		str	r3, [r7, #24]
 608:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     py = pIn2;
 3219              		.loc 1 608 0
 3220 14da EC23     		mov	r3, #236
 3221 14dc 5B00     		lsl	r3, r3, #1
 3222 14de FB18     		add	r3, r7, r3
 3223 14e0 1B68     		ldr	r3, [r3]
 3224 14e2 7B61     		str	r3, [r7, #20]
 609:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 610:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Decrement the MAC count */
 611:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     count--;
 3225              		.loc 1 611 0
 3226 14e4 D623     		mov	r3, #214
 3227 14e6 5B00     		lsl	r3, r3, #1
 3228 14e8 FB18     		add	r3, r7, r3
 3229 14ea 1B68     		ldr	r3, [r3]
 3230 14ec 013B     		sub	r3, r3, #1
 3231 14ee D622     		mov	r2, #214
 3232 14f0 5200     		lsl	r2, r2, #1
 3233 14f2 BA18     		add	r2, r7, r2
 3234 14f4 1360     		str	r3, [r2]
 612:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 613:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Decrement the loop counter */
 614:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     blockSize3--;
 3235              		.loc 1 614 0
 3236 14f6 D023     		mov	r3, #208
 3237 14f8 5B00     		lsl	r3, r3, #1
 3238 14fa FB18     		add	r3, r7, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 88


 3239 14fc 1B68     		ldr	r3, [r3]
 3240 14fe 013B     		sub	r3, r3, #1
 3241 1500 D022     		mov	r2, #208
 3242 1502 5200     		lsl	r2, r2, #1
 3243 1504 BA18     		add	r2, r7, r2
 3244 1506 1360     		str	r3, [r2]
 3245              	.L55:
 566:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   {
 3246              		.loc 1 566 0
 3247 1508 D023     		mov	r3, #208
 3248 150a 5B00     		lsl	r3, r3, #1
 3249 150c FB18     		add	r3, r7, r3
 3250 150e 1B68     		ldr	r3, [r3]
 3251 1510 002B     		cmp	r3, #0
 3252 1512 00D0     		beq	.LCB2893
 3253 1514 0EE7     		b	.L63	@long jump
 3254              	.LCB2893:
 615:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   }
 616:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 617:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #else
 618:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 619:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q15_t *pIn1;                                   /* inputA pointer               */
 620:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q15_t *pIn2;                                   /* inputB pointer               */
 621:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q15_t *pOut = pDst;                            /* output pointer               */
 622:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q31_t sum, acc0, acc1, acc2, acc3;             /* Accumulators                  */
 623:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q15_t *px;                                     /* Intermediate inputA pointer  */
 624:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q15_t *py;                                     /* Intermediate inputB pointer  */
 625:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q15_t *pSrc1;                                  /* Intermediate pointers        */
 626:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q31_t x0, x1, x2, x3, c0;                      /* temporary variables for holding input and coeff
 627:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   uint32_t j, k = 0u, count, blkCnt, outBlockSize, blockSize1, blockSize2, blockSize3;  /* loop cou
 628:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   int32_t inc = 1;                               /* Destination address modifier */
 629:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   q15_t a, b;
 630:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 631:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 632:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
 633:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* srcB is always made to slide across srcA. */
 634:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
 635:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* But CORR(x, y) is reverse of CORR(y, x) */
 636:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* So, when srcBLen > srcALen, output pointer is made to point to the end of the output buffer */
 637:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* and the destination pointer modifier, inc is set to -1 */
 638:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* If srcALen > srcBLen, zero pad has to be done to srcB to make the two inputs of same length */
 639:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* But to improve the performance,
 640:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * we include zeroes in the output instead of zero padding either of the the inputs*/
 641:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* If srcALen > srcBLen,
 642:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * (srcALen - srcBLen) zeroes has to included in the starting of the output buffer */
 643:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* If srcALen < srcBLen,
 644:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * (srcALen - srcBLen) zeroes has to included in the ending of the output buffer */
 645:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   if (srcALen >= srcBLen)
 646:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   {
 647:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Initialization of inputA pointer */
 648:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     pIn1 = (pSrcA);
 649:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 650:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Initialization of inputB pointer */
 651:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     pIn2 = (pSrcB);
 652:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 653:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Number of output samples is calculated */
 654:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     outBlockSize = (2u * srcALen) - 1u;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 89


 655:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 656:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* When srcALen > srcBLen, zero padding is done to srcB
 657:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      * to make their lengths equal.
 658:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      * Instead, (outBlockSize - (srcALen + srcBLen - 1))
 659:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      * number of output samples are made zero */
 660:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     j = outBlockSize - (srcALen + (srcBLen - 1u));
 661:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 662:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Updating the pointer position to non zero value */
 663:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     pOut += j;
 664:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 665:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   }
 666:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   else
 667:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   {
 668:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Initialization of inputA pointer */
 669:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     pIn1 = (pSrcB);
 670:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 671:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Initialization of inputB pointer */
 672:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     pIn2 = (pSrcA);
 673:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 674:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 675:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     j = srcBLen;
 676:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     srcBLen = srcALen;
 677:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     srcALen = j;
 678:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 679:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* CORR(x, y) = Reverse order(CORR(y, x)) */
 680:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Hence set the destination pointer to point to the last output sample */
 681:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     pOut = pDst + ((srcALen + srcBLen) - 2u);
 682:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 683:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Destination address modifier is set to -1 */
 684:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     inc = -1;
 685:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 686:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   }
 687:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 688:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* The function is internally
 689:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * divided into three parts according to the number of multiplications that has to be
 690:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * taken place between inputA samples and inputB samples. In the first part of the
 691:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * algorithm, the multiplications increase by one for every iteration.
 692:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * In the second part of the algorithm, srcBLen number of multiplications are done.
 693:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * In the third part of the algorithm, the multiplications decrease by one
 694:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * for every iteration.*/
 695:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* The algorithm is implemented in three stages.
 696:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * The loop counters of each stage is initiated here. */
 697:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   blockSize1 = srcBLen - 1u;
 698:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   blockSize2 = srcALen - (srcBLen - 1u);
 699:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   blockSize3 = blockSize1;
 700:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 701:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* --------------------------
 702:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * Initializations of stage1
 703:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * -------------------------*/
 704:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 705:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* sum = x[0] * y[srcBlen - 1]
 706:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * sum = x[0] * y[srcBlen - 2] + x[1] * y[srcBlen - 1]
 707:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * ....
 708:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * sum = x[0] * y[0] + x[1] * y[1] +...+ x[srcBLen - 1] * y[srcBLen - 1]
 709:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    */
 710:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 711:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* In this stage the MAC operations are increased by 1 for every iteration.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 90


 712:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      The count variable holds the number of MAC operations performed */
 713:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   count = 1u;
 714:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 715:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* Working pointer of inputA */
 716:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   px = pIn1;
 717:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 718:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* Working pointer of inputB */
 719:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   pSrc1 = pIn2 + (srcBLen - 1u);
 720:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   py = pSrc1;
 721:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 722:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* ------------------------
 723:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * Stage1 process
 724:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * ----------------------*/
 725:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 726:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* The first loop starts here */
 727:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   while (blockSize1 > 0u)
 728:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   {
 729:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Accumulator is made zero for every iteration */
 730:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     sum = 0;
 731:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 732:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 733:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     k = count >> 2;
 734:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 735:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 736:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 737:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     while (k > 0u)
 738:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
 739:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* x[0] * y[srcBLen - 4] , x[1] * y[srcBLen - 3] */
 740:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
 741:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
 742:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
 743:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
 744:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 745:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Decrement the loop counter */
 746:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       k--;
 747:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     }
 748:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 749:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* If the count is not a multiple of 4, compute any remaining MACs here.
 750:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      ** No loop unrolling is used. */
 751:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     k = count % 0x4u;
 752:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 753:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     while (k > 0u)
 754:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
 755:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Perform the multiply-accumulates */
 756:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* x[0] * y[srcBLen - 1] */
 757:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
 758:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 759:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Decrement the loop counter */
 760:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       k--;
 761:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     }
 762:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 763:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
 764:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     *pOut = (q15_t) (sum >> 15);
 765:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Destination pointer is updated according to the address modifier, inc */
 766:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     pOut += inc;
 767:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 768:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 91


 769:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     py = pSrc1 - count;
 770:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     px = pIn1;
 771:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 772:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Increment the MAC count */
 773:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     count++;
 774:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 775:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Decrement the loop counter */
 776:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     blockSize1--;
 777:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   }
 778:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 779:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* --------------------------
 780:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * Initializations of stage2
 781:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * ------------------------*/
 782:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 783:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* sum = x[0] * y[0] + x[1] * y[1] +...+ x[srcBLen-1] * y[srcBLen-1]
 784:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * sum = x[1] * y[0] + x[2] * y[1] +...+ x[srcBLen] * y[srcBLen-1]
 785:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * ....
 786:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * sum = x[srcALen-srcBLen-2] * y[0] + x[srcALen-srcBLen-1] * y[1] +...+ x[srcALen-1] * y[srcBLen
 787:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    */
 788:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 789:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* Working pointer of inputA */
 790:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   px = pIn1;
 791:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 792:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* Working pointer of inputB */
 793:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   py = pIn2;
 794:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 795:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* count is index by which the pointer pIn1 to be incremented */
 796:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   count = 0u;
 797:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 798:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* -------------------
 799:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * Stage2 process
 800:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * ------------------*/
 801:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 802:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 803:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * So, to loop unroll over blockSize2,
 804:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * srcBLen should be greater than or equal to 4, to loop unroll the srcBLen loop */
 805:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   if (srcBLen >= 4u)
 806:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   {
 807:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Loop unroll over blockSize2, by 4 */
 808:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     blkCnt = blockSize2 >> 2u;
 809:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 810:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     while (blkCnt > 0u)
 811:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
 812:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Set all accumulators to zero */
 813:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       acc0 = 0;
 814:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       acc1 = 0;
 815:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       acc2 = 0;
 816:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       acc3 = 0;
 817:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 818:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* read x[0], x[1], x[2] samples */
 819:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  a = *px;
 820:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  b = *(px + 1);
 821:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 822:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 823:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 824:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  x0 = __PKHBT(a, b, 16);
 825:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  a = *(px + 2);
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 92


 826:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  x1 = __PKHBT(b, a, 16);
 827:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 828:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #else
 829:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 830:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  x0 = __PKHBT(b, a, 16);
 831:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  a = *(px + 2);
 832:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  x1 = __PKHBT(a, b, 16);
 833:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 834:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
 835:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 836:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  px += 2u;
 837:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 838:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 839:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       k = srcBLen >> 2u;
 840:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 841:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 842:Source\FilteringFunctions/arm_correlate_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 843:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       do
 844:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       {
 845:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read the first two inputB samples using SIMD:
 846:Source\FilteringFunctions/arm_correlate_fast_q15.c ****          * y[0] and y[1] */
 847:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		  a = *py;
 848:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		  b = *(py + 1);
 849:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 850:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 851:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 852:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		  c0 = __PKHBT(a, b, 16);
 853:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 854:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #else
 855:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 856:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		  c0 = __PKHBT(b, a, 16);
 857:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 858:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
 859:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 860:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* acc0 +=  x[0] * y[0] + x[1] * y[1] */
 861:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc0 = __SMLAD(x0, c0, acc0);
 862:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 863:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* acc1 +=  x[1] * y[0] + x[2] * y[1] */
 864:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc1 = __SMLAD(x1, c0, acc1);
 865:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 866:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read x[2], x[3], x[4] */
 867:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	a = *px;
 868:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	b = *(px + 1);
 869:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 870:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 871:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 872:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	x2 = __PKHBT(a, b, 16);
 873:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	a = *(px + 2);
 874:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	x3 = __PKHBT(b, a, 16);
 875:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 876:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #else
 877:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 878:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	x2 = __PKHBT(b, a, 16);
 879:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	a = *(px + 2);
 880:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	x3 = __PKHBT(a, b, 16);
 881:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 882:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 93


 883:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 884:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* acc2 +=  x[2] * y[0] + x[3] * y[1] */
 885:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc2 = __SMLAD(x2, c0, acc2);
 886:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 887:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* acc3 +=  x[3] * y[0] + x[4] * y[1] */
 888:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc3 = __SMLAD(x3, c0, acc3);
 889:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 890:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read y[2] and y[3] */
 891:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		  a = *(py + 2);
 892:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		  b = *(py + 3);
 893:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 894:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		  py += 4u;
 895:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 896:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 897:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 898:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		  c0 = __PKHBT(a, b, 16);
 899:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 900:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #else
 901:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 902:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		  c0 = __PKHBT(b, a, 16);
 903:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 904:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
 905:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 906:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* acc0 +=  x[2] * y[2] + x[3] * y[3] */
 907:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc0 = __SMLAD(x2, c0, acc0);
 908:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 909:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* acc1 +=  x[3] * y[2] + x[4] * y[3] */
 910:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc1 = __SMLAD(x3, c0, acc1);
 911:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 912:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read x[4], x[5], x[6] */
 913:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	a = *(px + 2);
 914:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	b = *(px + 3);
 915:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 916:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 917:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 918:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	x0 = __PKHBT(a, b, 16);
 919:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	a = *(px + 4);
 920:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	x1 = __PKHBT(b, a, 16);
 921:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 922:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #else
 923:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 924:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	x0 = __PKHBT(b, a, 16);
 925:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	a = *(px + 4);
 926:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	x1 = __PKHBT(a, b, 16);
 927:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 928:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
 929:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 930:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		px += 4u;
 931:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 932:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* acc2 +=  x[4] * y[2] + x[5] * y[3] */
 933:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc2 = __SMLAD(x0, c0, acc2);
 934:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 935:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* acc3 +=  x[5] * y[2] + x[6] * y[3] */
 936:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc3 = __SMLAD(x1, c0, acc3);
 937:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 938:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       } while (--k);
 939:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 94


 940:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* For the next MAC operations, SIMD is not used
 941:Source\FilteringFunctions/arm_correlate_fast_q15.c ****        * So, the 16 bit pointer if inputB, py is updated */
 942:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 943:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 944:Source\FilteringFunctions/arm_correlate_fast_q15.c ****        ** No loop unrolling is used. */
 945:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       k = srcBLen % 0x4u;
 946:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 947:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       if (k == 1u)
 948:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       {
 949:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read y[4] */
 950:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         c0 = *py;
 951:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 952:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 953:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         c0 = c0 << 16u;
 954:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 955:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #else
 956:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 957:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         c0 = c0 & 0x0000FFFF;
 958:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 959:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
 960:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 961:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read x[7] */
 962:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		a = *px;
 963:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		b = *(px + 1);
 964:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 965:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		px++;;
 966:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 967:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 968:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 969:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		x3 = __PKHBT(a, b, 16);
 970:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 971:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #else
 972:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 973:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		x3 = __PKHBT(b, a, 16);
 974:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 975:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
 976:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 977:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		px++;
 978:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 979:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Perform the multiply-accumulates */
 980:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc0 = __SMLAD(x0, c0, acc0);
 981:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc1 = __SMLAD(x1, c0, acc1);
 982:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc2 = __SMLADX(x1, c0, acc2);
 983:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
 984:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       }
 985:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 986:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       if (k == 2u)
 987:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       {
 988:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read y[4], y[5] */
 989:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		  a = *py;
 990:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		  b = *(py + 1);
 991:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 992:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 993:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 994:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		  c0 = __PKHBT(a, b, 16);
 995:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 996:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #else
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 95


 997:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
 998:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		  c0 = __PKHBT(b, a, 16);
 999:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1000:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1001:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1002:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read x[7], x[8], x[9] */
1003:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	a = *px;
1004:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	b = *(px + 1);
1005:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1006:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1007:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1008:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	x3 = __PKHBT(a, b, 16);
1009:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	a = *(px + 2);
1010:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	x2 = __PKHBT(b, a, 16);
1011:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1012:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #else
1013:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1014:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	x3 = __PKHBT(b, a, 16);
1015:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	a = *(px + 2);
1016:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	x2 = __PKHBT(a, b, 16);
1017:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1018:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1019:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1020:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		px += 2u;
1021:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1022:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Perform the multiply-accumulates */
1023:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc0 = __SMLAD(x0, c0, acc0);
1024:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc1 = __SMLAD(x1, c0, acc1);
1025:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc2 = __SMLAD(x3, c0, acc2);
1026:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc3 = __SMLAD(x2, c0, acc3);
1027:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       }
1028:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1029:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       if (k == 3u)
1030:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       {
1031:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read y[4], y[5] */
1032:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		  a = *py;
1033:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		  b = *(py + 1);
1034:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1035:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1036:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1037:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		  c0 = __PKHBT(a, b, 16);
1038:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1039:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #else
1040:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1041:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		  c0 = __PKHBT(b, a, 16);
1042:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1043:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1044:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1045:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		py += 2u;
1046:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1047:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read x[7], x[8], x[9] */
1048:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	a = *px;
1049:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	b = *(px + 1);
1050:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1051:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1052:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1053:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	x3 = __PKHBT(a, b, 16);
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 96


1054:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	a = *(px + 2);
1055:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	x2 = __PKHBT(b, a, 16);
1056:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1057:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #else
1058:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1059:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	x3 = __PKHBT(b, a, 16);
1060:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	a = *(px + 2);
1061:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 	  	x2 = __PKHBT(a, b, 16);
1062:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1063:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1064:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1065:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Perform the multiply-accumulates */
1066:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc0 = __SMLAD(x0, c0, acc0);
1067:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc1 = __SMLAD(x1, c0, acc1);
1068:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc2 = __SMLAD(x3, c0, acc2);
1069:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc3 = __SMLAD(x2, c0, acc3);
1070:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1071:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         c0 = (*py);
1072:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read y[6] */
1073:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
1074:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1075:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         c0 = c0 << 16u;
1076:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #else
1077:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1078:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         c0 = c0 & 0x0000FFFF;
1079:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
1080:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1081:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Read x[10] */
1082:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		b = *(px + 3);
1083:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1084:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1085:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1086:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		x3 = __PKHBT(a, b, 16);
1087:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1088:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #else
1089:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1090:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		x3 = __PKHBT(b, a, 16);
1091:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1092:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1093:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1094:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 		px += 3u;
1095:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1096:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Perform the multiply-accumulates */
1097:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc0 = __SMLADX(x1, c0, acc0);
1098:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc1 = __SMLAD(x2, c0, acc1);
1099:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc2 = __SMLADX(x2, c0, acc2);
1100:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
1101:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       }
1102:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1103:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
1104:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       *pOut = (q15_t) (acc0 >> 15);
1105:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Destination pointer is updated according to the address modifier, inc */
1106:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       pOut += inc;
1107:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1108:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       *pOut = (q15_t) (acc1 >> 15);
1109:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       pOut += inc;
1110:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 97


1111:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       *pOut = (q15_t) (acc2 >> 15);
1112:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       pOut += inc;
1113:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1114:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       *pOut = (q15_t) (acc3 >> 15);
1115:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       pOut += inc;
1116:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1117:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Increment the pointer pIn1 index, count by 1 */
1118:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       count += 4u;
1119:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1120:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
1121:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       px = pIn1 + count;
1122:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       py = pIn2;
1123:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1124:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1125:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Decrement the loop counter */
1126:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       blkCnt--;
1127:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     }
1128:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1129:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* If the blockSize2 is not a multiple of 4, compute any remaining output samples here.
1130:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      ** No loop unrolling is used. */
1131:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     blkCnt = blockSize2 % 0x4u;
1132:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1133:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     while (blkCnt > 0u)
1134:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
1135:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Accumulator is made zero for every iteration */
1136:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       sum = 0;
1137:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1138:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
1139:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       k = srcBLen >> 2u;
1140:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1141:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
1142:Source\FilteringFunctions/arm_correlate_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
1143:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       while (k > 0u)
1144:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       {
1145:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Perform the multiply-accumulates */
1146:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
1147:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
1148:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
1149:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
1150:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1151:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Decrement the loop counter */
1152:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         k--;
1153:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       }
1154:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1155:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
1156:Source\FilteringFunctions/arm_correlate_fast_q15.c ****        ** No loop unrolling is used. */
1157:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       k = srcBLen % 0x4u;
1158:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1159:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       while (k > 0u)
1160:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       {
1161:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Perform the multiply-accumulates */
1162:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
1163:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1164:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Decrement the loop counter */
1165:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         k--;
1166:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       }
1167:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 98


1168:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
1169:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       *pOut = (q15_t) (sum >> 15);
1170:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Destination pointer is updated according to the address modifier, inc */
1171:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       pOut += inc;
1172:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1173:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Increment the pointer pIn1 index, count by 1 */
1174:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       count++;
1175:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1176:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
1177:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       px = pIn1 + count;
1178:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       py = pIn2;
1179:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1180:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Decrement the loop counter */
1181:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       blkCnt--;
1182:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     }
1183:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   }
1184:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   else
1185:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   {
1186:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* If the srcBLen is not a multiple of 4,
1187:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      * the blockSize2 loop cannot be unrolled by 4 */
1188:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     blkCnt = blockSize2;
1189:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1190:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     while (blkCnt > 0u)
1191:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
1192:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Accumulator is made zero for every iteration */
1193:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       sum = 0;
1194:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1195:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Loop over srcBLen */
1196:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       k = srcBLen;
1197:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1198:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       while (k > 0u)
1199:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       {
1200:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Perform the multiply-accumulate */
1201:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
1202:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1203:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         /* Decrement the loop counter */
1204:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         k--;
1205:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       }
1206:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1207:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
1208:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       *pOut = (q15_t) (sum >> 15);
1209:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Destination pointer is updated according to the address modifier, inc */
1210:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       pOut += inc;
1211:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1212:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Increment the MAC count */
1213:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       count++;
1214:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1215:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
1216:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       px = pIn1 + count;
1217:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       py = pIn2;
1218:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1219:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Decrement the loop counter */
1220:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       blkCnt--;
1221:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     }
1222:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   }
1223:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1224:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* --------------------------
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 99


1225:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * Initializations of stage3
1226:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * -------------------------*/
1227:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1228:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* sum += x[srcALen-srcBLen+1] * y[0] + x[srcALen-srcBLen+2] * y[1] +...+ x[srcALen-1] * y[srcBLe
1229:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * sum += x[srcALen-srcBLen+2] * y[0] + x[srcALen-srcBLen+3] * y[1] +...+ x[srcALen-1] * y[srcBLe
1230:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * ....
1231:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * sum +=  x[srcALen-2] * y[0] + x[srcALen-1] * y[1]
1232:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * sum +=  x[srcALen-1] * y[0]
1233:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    */
1234:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1235:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* In this stage the MAC operations are decreased by 1 for every iteration.
1236:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      The count variable holds the number of MAC operations performed */
1237:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   count = srcBLen - 1u;
1238:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1239:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* Working pointer of inputA */
1240:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   pSrc1 = (pIn1 + srcALen) - (srcBLen - 1u);
1241:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   px = pSrc1;
1242:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1243:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* Working pointer of inputB */
1244:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   py = pIn2;
1245:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1246:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   /* -------------------
1247:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * Stage3 process
1248:Source\FilteringFunctions/arm_correlate_fast_q15.c ****    * ------------------*/
1249:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1250:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   while (blockSize3 > 0u)
1251:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   {
1252:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Accumulator is made zero for every iteration */
1253:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     sum = 0;
1254:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1255:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
1256:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     k = count >> 2u;
1257:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1258:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
1259:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
1260:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     while (k > 0u)
1261:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
1262:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Perform the multiply-accumulates */
1263:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
1264:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
1265:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
1266:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
1267:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1268:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Decrement the loop counter */
1269:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       k--;
1270:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     }
1271:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1272:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* If the count is not a multiple of 4, compute any remaining MACs here.
1273:Source\FilteringFunctions/arm_correlate_fast_q15.c ****      ** No loop unrolling is used. */
1274:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     k = count % 0x4u;
1275:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1276:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     while (k > 0u)
1277:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     {
1278:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Perform the multiply-accumulates */
1279:Source\FilteringFunctions/arm_correlate_fast_q15.c ****         sum += ((q31_t) * px++ * *py++);
1280:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1281:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       /* Decrement the loop counter */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 100


1282:Source\FilteringFunctions/arm_correlate_fast_q15.c ****       k--;
1283:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     }
1284:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1285:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
1286:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     *pOut = (q15_t) (sum >> 15);
1287:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Destination pointer is updated according to the address modifier, inc */
1288:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     pOut += inc;
1289:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1290:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
1291:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     px = ++pSrc1;
1292:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     py = pIn2;
1293:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1294:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Decrement the MAC count */
1295:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     count--;
1296:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1297:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     /* Decrement the loop counter */
1298:Source\FilteringFunctions/arm_correlate_fast_q15.c ****     blockSize3--;
1299:Source\FilteringFunctions/arm_correlate_fast_q15.c ****   }
1300:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1301:Source\FilteringFunctions/arm_correlate_fast_q15.c **** #endif /*   #ifndef UNALIGNED_SUPPORT_DISABLE */
1302:Source\FilteringFunctions/arm_correlate_fast_q15.c **** 
1303:Source\FilteringFunctions/arm_correlate_fast_q15.c **** }
 3255              		.loc 1 1303 0
 3256 1516 BD46     		mov	sp, r7
 3257 1518 78B0     		add	sp, sp, #480
 3258              		@ sp needed
 3259 151a 80BD     		pop	{r7, pc}
 3260              		.cfi_endproc
 3261              	.LFE82:
 3262              		.size	arm_correlate_fast_q15, .-arm_correlate_fast_q15
 3263              		.text
 3264              	.Letext0:
 3265              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 3266              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 3267              		.section	.debug_info,"",%progbits
 3268              	.Ldebug_info0:
 3269 0000 A2080000 		.4byte	0x8a2
 3270 0004 0400     		.2byte	0x4
 3271 0006 00000000 		.4byte	.Ldebug_abbrev0
 3272 000a 04       		.byte	0x4
 3273 000b 01       		.uleb128 0x1
 3274 000c 44010000 		.4byte	.LASF43
 3275 0010 01       		.byte	0x1
 3276 0011 2A020000 		.4byte	.LASF44
 3277 0015 2B000000 		.4byte	.LASF45
 3278 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3279 001d 00000000 		.4byte	0
 3280 0021 00000000 		.4byte	.Ldebug_line0
 3281 0025 02       		.uleb128 0x2
 3282 0026 01       		.byte	0x1
 3283 0027 06       		.byte	0x6
 3284 0028 81020000 		.4byte	.LASF0
 3285 002c 02       		.uleb128 0x2
 3286 002d 01       		.byte	0x1
 3287 002e 08       		.byte	0x8
 3288 002f AF000000 		.4byte	.LASF1
 3289 0033 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 101


 3290 0034 05000000 		.4byte	.LASF4
 3291 0038 03       		.byte	0x3
 3292 0039 29       		.byte	0x29
 3293 003a 3E000000 		.4byte	0x3e
 3294 003e 02       		.uleb128 0x2
 3295 003f 02       		.byte	0x2
 3296 0040 05       		.byte	0x5
 3297 0041 20020000 		.4byte	.LASF2
 3298 0045 02       		.uleb128 0x2
 3299 0046 02       		.byte	0x2
 3300 0047 07       		.byte	0x7
 3301 0048 E3000000 		.4byte	.LASF3
 3302 004c 03       		.uleb128 0x3
 3303 004d 21000000 		.4byte	.LASF5
 3304 0051 03       		.byte	0x3
 3305 0052 3F       		.byte	0x3f
 3306 0053 57000000 		.4byte	0x57
 3307 0057 02       		.uleb128 0x2
 3308 0058 04       		.byte	0x4
 3309 0059 05       		.byte	0x5
 3310 005a 66020000 		.4byte	.LASF6
 3311 005e 03       		.uleb128 0x3
 3312 005f 15010000 		.4byte	.LASF7
 3313 0063 03       		.byte	0x3
 3314 0064 41       		.byte	0x41
 3315 0065 69000000 		.4byte	0x69
 3316 0069 02       		.uleb128 0x2
 3317 006a 04       		.byte	0x4
 3318 006b 07       		.byte	0x7
 3319 006c D1000000 		.4byte	.LASF8
 3320 0070 02       		.uleb128 0x2
 3321 0071 08       		.byte	0x8
 3322 0072 05       		.byte	0x5
 3323 0073 EF010000 		.4byte	.LASF9
 3324 0077 02       		.uleb128 0x2
 3325 0078 08       		.byte	0x8
 3326 0079 07       		.byte	0x7
 3327 007a 2D010000 		.4byte	.LASF10
 3328 007e 04       		.uleb128 0x4
 3329 007f 04       		.byte	0x4
 3330 0080 05       		.byte	0x5
 3331 0081 696E7400 		.ascii	"int\000"
 3332 0085 02       		.uleb128 0x2
 3333 0086 04       		.byte	0x4
 3334 0087 07       		.byte	0x7
 3335 0088 20010000 		.4byte	.LASF11
 3336 008c 03       		.uleb128 0x3
 3337 008d D6010000 		.4byte	.LASF12
 3338 0091 04       		.byte	0x4
 3339 0092 20       		.byte	0x20
 3340 0093 33000000 		.4byte	0x33
 3341 0097 03       		.uleb128 0x3
 3342 0098 DE010000 		.4byte	.LASF13
 3343 009c 04       		.byte	0x4
 3344 009d 2C       		.byte	0x2c
 3345 009e 4C000000 		.4byte	0x4c
 3346 00a2 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 102


 3347 00a3 5D020000 		.4byte	.LASF14
 3348 00a7 04       		.byte	0x4
 3349 00a8 2D       		.byte	0x2d
 3350 00a9 5E000000 		.4byte	0x5e
 3351 00ad 02       		.uleb128 0x2
 3352 00ae 04       		.byte	0x4
 3353 00af 07       		.byte	0x7
 3354 00b0 E6010000 		.4byte	.LASF15
 3355 00b4 02       		.uleb128 0x2
 3356 00b5 01       		.byte	0x1
 3357 00b6 08       		.byte	0x8
 3358 00b7 13020000 		.4byte	.LASF16
 3359 00bb 02       		.uleb128 0x2
 3360 00bc 08       		.byte	0x8
 3361 00bd 04       		.byte	0x4
 3362 00be 03010000 		.4byte	.LASF17
 3363 00c2 02       		.uleb128 0x2
 3364 00c3 04       		.byte	0x4
 3365 00c4 04       		.byte	0x4
 3366 00c5 7B020000 		.4byte	.LASF18
 3367 00c9 02       		.uleb128 0x2
 3368 00ca 08       		.byte	0x8
 3369 00cb 04       		.byte	0x4
 3370 00cc 6F020000 		.4byte	.LASF19
 3371 00d0 05       		.uleb128 0x5
 3372 00d1 9E000000 		.4byte	.LASF20
 3373 00d5 02       		.byte	0x2
 3374 00d6 9601     		.2byte	0x196
 3375 00d8 8C000000 		.4byte	0x8c
 3376 00dc 05       		.uleb128 0x5
 3377 00dd A9000000 		.4byte	.LASF21
 3378 00e1 02       		.byte	0x2
 3379 00e2 9B01     		.2byte	0x19b
 3380 00e4 97000000 		.4byte	0x97
 3381 00e8 06       		.uleb128 0x6
 3382 00e9 04       		.byte	0x4
 3383 00ea D0000000 		.4byte	0xd0
 3384 00ee 07       		.uleb128 0x7
 3385 00ef C9000000 		.4byte	.LASF22
 3386 00f3 02       		.byte	0x2
 3387 00f4 B303     		.2byte	0x3b3
 3388 00f6 A2000000 		.4byte	0xa2
 3389 00fa 03       		.byte	0x3
 3390 00fb 20010000 		.4byte	0x120
 3391 00ff 08       		.uleb128 0x8
 3392 0100 7800     		.ascii	"x\000"
 3393 0102 02       		.byte	0x2
 3394 0103 B403     		.2byte	0x3b4
 3395 0105 A2000000 		.4byte	0xa2
 3396 0109 08       		.uleb128 0x8
 3397 010a 7900     		.ascii	"y\000"
 3398 010c 02       		.byte	0x2
 3399 010d B503     		.2byte	0x3b5
 3400 010f A2000000 		.4byte	0xa2
 3401 0113 08       		.uleb128 0x8
 3402 0114 73756D00 		.ascii	"sum\000"
 3403 0118 02       		.byte	0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 103


 3404 0119 B603     		.2byte	0x3b6
 3405 011b A2000000 		.4byte	0xa2
 3406 011f 00       		.byte	0
 3407 0120 07       		.uleb128 0x7
 3408 0121 95000000 		.4byte	.LASF23
 3409 0125 02       		.byte	0x2
 3410 0126 C103     		.2byte	0x3c1
 3411 0128 A2000000 		.4byte	0xa2
 3412 012c 03       		.byte	0x3
 3413 012d 52010000 		.4byte	0x152
 3414 0131 08       		.uleb128 0x8
 3415 0132 7800     		.ascii	"x\000"
 3416 0134 02       		.byte	0x2
 3417 0135 C203     		.2byte	0x3c2
 3418 0137 A2000000 		.4byte	0xa2
 3419 013b 08       		.uleb128 0x8
 3420 013c 7900     		.ascii	"y\000"
 3421 013e 02       		.byte	0x2
 3422 013f C303     		.2byte	0x3c3
 3423 0141 A2000000 		.4byte	0xa2
 3424 0145 08       		.uleb128 0x8
 3425 0146 73756D00 		.ascii	"sum\000"
 3426 014a 02       		.byte	0x2
 3427 014b C403     		.2byte	0x3c4
 3428 014d A2000000 		.4byte	0xa2
 3429 0151 00       		.byte	0
 3430 0152 09       		.uleb128 0x9
 3431 0153 7E000000 		.4byte	.LASF46
 3432 0157 01       		.byte	0x1
 3433 0158 41       		.byte	0x41
 3434 0159 00000000 		.4byte	.LFB82
 3435 015d 1C150000 		.4byte	.LFE82-.LFB82
 3436 0161 01       		.uleb128 0x1
 3437 0162 9C       		.byte	0x9c
 3438 0163 0A       		.uleb128 0xa
 3439 0164 0F000000 		.4byte	.LASF24
 3440 0168 01       		.byte	0x1
 3441 0169 42       		.byte	0x42
 3442 016a E8000000 		.4byte	0xe8
 3443 016e 03       		.uleb128 0x3
 3444 016f 91       		.byte	0x91
 3445 0170 A47C     		.sleb128 -476
 3446 0172 0A       		.uleb128 0xa
 3447 0173 18020000 		.4byte	.LASF25
 3448 0177 01       		.byte	0x1
 3449 0178 43       		.byte	0x43
 3450 0179 A2000000 		.4byte	0xa2
 3451 017d 03       		.uleb128 0x3
 3452 017e 91       		.byte	0x91
 3453 017f A07C     		.sleb128 -480
 3454 0181 0A       		.uleb128 0xa
 3455 0182 15000000 		.4byte	.LASF26
 3456 0186 01       		.byte	0x1
 3457 0187 44       		.byte	0x44
 3458 0188 E8000000 		.4byte	0xe8
 3459 018c 03       		.uleb128 0x3
 3460 018d 91       		.byte	0x91
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 104


 3461 018e 9C7C     		.sleb128 -484
 3462 0190 0A       		.uleb128 0xa
 3463 0191 FB000000 		.4byte	.LASF27
 3464 0195 01       		.byte	0x1
 3465 0196 45       		.byte	0x45
 3466 0197 A2000000 		.4byte	0xa2
 3467 019b 03       		.uleb128 0x3
 3468 019c 91       		.byte	0x91
 3469 019d 987C     		.sleb128 -488
 3470 019f 0A       		.uleb128 0xa
 3471 01a0 F6000000 		.4byte	.LASF28
 3472 01a4 01       		.byte	0x1
 3473 01a5 46       		.byte	0x46
 3474 01a6 E8000000 		.4byte	0xe8
 3475 01aa 02       		.uleb128 0x2
 3476 01ab 91       		.byte	0x91
 3477 01ac 00       		.sleb128 0
 3478 01ad 0B       		.uleb128 0xb
 3479 01ae 93020000 		.4byte	.LASF29
 3480 01b2 01       		.byte	0x1
 3481 01b3 4A       		.byte	0x4a
 3482 01b4 E8000000 		.4byte	0xe8
 3483 01b8 02       		.uleb128 0x2
 3484 01b9 91       		.byte	0x91
 3485 01ba 74       		.sleb128 -12
 3486 01bb 0B       		.uleb128 0xb
 3487 01bc BD000000 		.4byte	.LASF30
 3488 01c0 01       		.byte	0x1
 3489 01c1 4B       		.byte	0x4b
 3490 01c2 E8000000 		.4byte	0xe8
 3491 01c6 02       		.uleb128 0x2
 3492 01c7 91       		.byte	0x91
 3493 01c8 70       		.sleb128 -16
 3494 01c9 0B       		.uleb128 0xb
 3495 01ca A4000000 		.4byte	.LASF31
 3496 01ce 01       		.byte	0x1
 3497 01cf 4C       		.byte	0x4c
 3498 01d0 E8000000 		.4byte	0xe8
 3499 01d4 02       		.uleb128 0x2
 3500 01d5 91       		.byte	0x91
 3501 01d6 6C       		.sleb128 -20
 3502 01d7 0C       		.uleb128 0xc
 3503 01d8 73756D00 		.ascii	"sum\000"
 3504 01dc 01       		.byte	0x1
 3505 01dd 4D       		.byte	0x4d
 3506 01de DC000000 		.4byte	0xdc
 3507 01e2 02       		.uleb128 0x2
 3508 01e3 91       		.byte	0x91
 3509 01e4 68       		.sleb128 -24
 3510 01e5 0B       		.uleb128 0xb
 3511 01e6 98020000 		.4byte	.LASF32
 3512 01ea 01       		.byte	0x1
 3513 01eb 4D       		.byte	0x4d
 3514 01ec DC000000 		.4byte	0xdc
 3515 01f0 02       		.uleb128 0x2
 3516 01f1 91       		.byte	0x91
 3517 01f2 64       		.sleb128 -28
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 105


 3518 01f3 0B       		.uleb128 0xb
 3519 01f4 9D020000 		.4byte	.LASF33
 3520 01f8 01       		.byte	0x1
 3521 01f9 4D       		.byte	0x4d
 3522 01fa DC000000 		.4byte	0xdc
 3523 01fe 02       		.uleb128 0x2
 3524 01ff 91       		.byte	0x91
 3525 0200 60       		.sleb128 -32
 3526 0201 0B       		.uleb128 0xb
 3527 0202 A2020000 		.4byte	.LASF34
 3528 0206 01       		.byte	0x1
 3529 0207 4D       		.byte	0x4d
 3530 0208 DC000000 		.4byte	0xdc
 3531 020c 02       		.uleb128 0x2
 3532 020d 91       		.byte	0x91
 3533 020e 5C       		.sleb128 -36
 3534 020f 0B       		.uleb128 0xb
 3535 0210 00000000 		.4byte	.LASF35
 3536 0214 01       		.byte	0x1
 3537 0215 4D       		.byte	0x4d
 3538 0216 DC000000 		.4byte	0xdc
 3539 021a 02       		.uleb128 0x2
 3540 021b 91       		.byte	0x91
 3541 021c 58       		.sleb128 -40
 3542 021d 0C       		.uleb128 0xc
 3543 021e 707800   		.ascii	"px\000"
 3544 0221 01       		.byte	0x1
 3545 0222 4E       		.byte	0x4e
 3546 0223 E8000000 		.4byte	0xe8
 3547 0227 03       		.uleb128 0x3
 3548 0228 91       		.byte	0x91
 3549 0229 B07C     		.sleb128 -464
 3550 022b 0C       		.uleb128 0xc
 3551 022c 707900   		.ascii	"py\000"
 3552 022f 01       		.byte	0x1
 3553 0230 4F       		.byte	0x4f
 3554 0231 E8000000 		.4byte	0xe8
 3555 0235 03       		.uleb128 0x3
 3556 0236 91       		.byte	0x91
 3557 0237 AC7C     		.sleb128 -468
 3558 0239 0B       		.uleb128 0xb
 3559 023a 8D020000 		.4byte	.LASF36
 3560 023e 01       		.byte	0x1
 3561 023f 50       		.byte	0x50
 3562 0240 E8000000 		.4byte	0xe8
 3563 0244 02       		.uleb128 0x2
 3564 0245 91       		.byte	0x91
 3565 0246 54       		.sleb128 -44
 3566 0247 0C       		.uleb128 0xc
 3567 0248 783000   		.ascii	"x0\000"
 3568 024b 01       		.byte	0x1
 3569 024c 51       		.byte	0x51
 3570 024d DC000000 		.4byte	0xdc
 3571 0251 02       		.uleb128 0x2
 3572 0252 91       		.byte	0x91
 3573 0253 50       		.sleb128 -48
 3574 0254 0C       		.uleb128 0xc
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 106


 3575 0255 783100   		.ascii	"x1\000"
 3576 0258 01       		.byte	0x1
 3577 0259 51       		.byte	0x51
 3578 025a DC000000 		.4byte	0xdc
 3579 025e 02       		.uleb128 0x2
 3580 025f 91       		.byte	0x91
 3581 0260 4C       		.sleb128 -52
 3582 0261 0C       		.uleb128 0xc
 3583 0262 783200   		.ascii	"x2\000"
 3584 0265 01       		.byte	0x1
 3585 0266 51       		.byte	0x51
 3586 0267 DC000000 		.4byte	0xdc
 3587 026b 03       		.uleb128 0x3
 3588 026c 91       		.byte	0x91
 3589 026d A07F     		.sleb128 -96
 3590 026f 0C       		.uleb128 0xc
 3591 0270 783300   		.ascii	"x3\000"
 3592 0273 01       		.byte	0x1
 3593 0274 51       		.byte	0x51
 3594 0275 DC000000 		.4byte	0xdc
 3595 0279 03       		.uleb128 0x3
 3596 027a 91       		.byte	0x91
 3597 027b 9C7F     		.sleb128 -100
 3598 027d 0C       		.uleb128 0xc
 3599 027e 633000   		.ascii	"c0\000"
 3600 0281 01       		.byte	0x1
 3601 0282 51       		.byte	0x51
 3602 0283 DC000000 		.4byte	0xdc
 3603 0287 03       		.uleb128 0x3
 3604 0288 91       		.byte	0x91
 3605 0289 A47F     		.sleb128 -92
 3606 028b 0C       		.uleb128 0xc
 3607 028c 6A00     		.ascii	"j\000"
 3608 028e 01       		.byte	0x1
 3609 028f 52       		.byte	0x52
 3610 0290 A2000000 		.4byte	0xa2
 3611 0294 03       		.uleb128 0x3
 3612 0295 91       		.byte	0x91
 3613 0296 AC7F     		.sleb128 -84
 3614 0298 0C       		.uleb128 0xc
 3615 0299 6B00     		.ascii	"k\000"
 3616 029b 01       		.byte	0x1
 3617 029c 52       		.byte	0x52
 3618 029d A2000000 		.4byte	0xa2
 3619 02a1 02       		.uleb128 0x2
 3620 02a2 91       		.byte	0x91
 3621 02a3 48       		.sleb128 -56
 3622 02a4 0B       		.uleb128 0xb
 3623 02a5 1B000000 		.4byte	.LASF37
 3624 02a9 01       		.byte	0x1
 3625 02aa 52       		.byte	0x52
 3626 02ab A2000000 		.4byte	0xa2
 3627 02af 02       		.uleb128 0x2
 3628 02b0 91       		.byte	0x91
 3629 02b1 44       		.sleb128 -60
 3630 02b2 0B       		.uleb128 0xb
 3631 02b3 C2000000 		.4byte	.LASF38
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 107


 3632 02b7 01       		.byte	0x1
 3633 02b8 52       		.byte	0x52
 3634 02b9 A2000000 		.4byte	0xa2
 3635 02bd 02       		.uleb128 0x2
 3636 02be 91       		.byte	0x91
 3637 02bf 40       		.sleb128 -64
 3638 02c0 0B       		.uleb128 0xb
 3639 02c1 71000000 		.4byte	.LASF39
 3640 02c5 01       		.byte	0x1
 3641 02c6 52       		.byte	0x52
 3642 02c7 A2000000 		.4byte	0xa2
 3643 02cb 03       		.uleb128 0x3
 3644 02cc 91       		.byte	0x91
 3645 02cd B07F     		.sleb128 -80
 3646 02cf 0B       		.uleb128 0xb
 3647 02d0 FD010000 		.4byte	.LASF40
 3648 02d4 01       		.byte	0x1
 3649 02d5 52       		.byte	0x52
 3650 02d6 A2000000 		.4byte	0xa2
 3651 02da 03       		.uleb128 0x3
 3652 02db 91       		.byte	0x91
 3653 02dc BC7F     		.sleb128 -68
 3654 02de 0B       		.uleb128 0xb
 3655 02df 08020000 		.4byte	.LASF41
 3656 02e3 01       		.byte	0x1
 3657 02e4 52       		.byte	0x52
 3658 02e5 A2000000 		.4byte	0xa2
 3659 02e9 03       		.uleb128 0x3
 3660 02ea 91       		.byte	0x91
 3661 02eb A87F     		.sleb128 -88
 3662 02ed 0B       		.uleb128 0xb
 3663 02ee 0A010000 		.4byte	.LASF42
 3664 02f2 01       		.byte	0x1
 3665 02f3 52       		.byte	0x52
 3666 02f4 A2000000 		.4byte	0xa2
 3667 02f8 03       		.uleb128 0x3
 3668 02f9 91       		.byte	0x91
 3669 02fa B87F     		.sleb128 -72
 3670 02fc 0C       		.uleb128 0xc
 3671 02fd 696E6300 		.ascii	"inc\000"
 3672 0301 01       		.byte	0x1
 3673 0302 53       		.byte	0x53
 3674 0303 97000000 		.4byte	0x97
 3675 0307 03       		.uleb128 0x3
 3676 0308 91       		.byte	0x91
 3677 0309 B47F     		.sleb128 -76
 3678 030b 0D       		.uleb128 0xd
 3679 030c EE000000 		.4byte	0xee
 3680 0310 AE010000 		.4byte	.LBB62
 3681 0314 3C000000 		.4byte	.LBE62-.LBB62
 3682 0318 01       		.byte	0x1
 3683 0319 C2       		.byte	0xc2
 3684 031a 3A030000 		.4byte	0x33a
 3685 031e 0E       		.uleb128 0xe
 3686 031f 13010000 		.4byte	0x113
 3687 0323 03       		.uleb128 0x3
 3688 0324 91       		.byte	0x91
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 108


 3689 0325 907F     		.sleb128 -112
 3690 0327 0E       		.uleb128 0xe
 3691 0328 09010000 		.4byte	0x109
 3692 032c 03       		.uleb128 0x3
 3693 032d 91       		.byte	0x91
 3694 032e 947F     		.sleb128 -108
 3695 0330 0E       		.uleb128 0xe
 3696 0331 FF000000 		.4byte	0xff
 3697 0335 03       		.uleb128 0x3
 3698 0336 91       		.byte	0x91
 3699 0337 987F     		.sleb128 -104
 3700 0339 00       		.byte	0
 3701 033a 0D       		.uleb128 0xd
 3702 033b EE000000 		.4byte	0xee
 3703 033f 2E020000 		.4byte	.LBB64
 3704 0343 3C000000 		.4byte	.LBE64-.LBB64
 3705 0347 01       		.byte	0x1
 3706 0348 C4       		.byte	0xc4
 3707 0349 69030000 		.4byte	0x369
 3708 034d 0E       		.uleb128 0xe
 3709 034e 13010000 		.4byte	0x113
 3710 0352 03       		.uleb128 0x3
 3711 0353 91       		.byte	0x91
 3712 0354 847F     		.sleb128 -124
 3713 0356 0E       		.uleb128 0xe
 3714 0357 09010000 		.4byte	0x109
 3715 035b 03       		.uleb128 0x3
 3716 035c 91       		.byte	0x91
 3717 035d 887F     		.sleb128 -120
 3718 035f 0E       		.uleb128 0xe
 3719 0360 FF000000 		.4byte	0xff
 3720 0364 03       		.uleb128 0x3
 3721 0365 91       		.byte	0x91
 3722 0366 8C7F     		.sleb128 -116
 3723 0368 00       		.byte	0
 3724 0369 0D       		.uleb128 0xd
 3725 036a EE000000 		.4byte	0xee
 3726 036e DC020000 		.4byte	.LBB66
 3727 0372 3C000000 		.4byte	.LBE66-.LBB66
 3728 0376 01       		.byte	0x1
 3729 0377 D2       		.byte	0xd2
 3730 0378 98030000 		.4byte	0x398
 3731 037c 0E       		.uleb128 0xe
 3732 037d 13010000 		.4byte	0x113
 3733 0381 03       		.uleb128 0x3
 3734 0382 91       		.byte	0x91
 3735 0383 F87E     		.sleb128 -136
 3736 0385 0E       		.uleb128 0xe
 3737 0386 09010000 		.4byte	0x109
 3738 038a 03       		.uleb128 0x3
 3739 038b 91       		.byte	0x91
 3740 038c FC7E     		.sleb128 -132
 3741 038e 0E       		.uleb128 0xe
 3742 038f FF000000 		.4byte	0xff
 3743 0393 03       		.uleb128 0x3
 3744 0394 91       		.byte	0x91
 3745 0395 807F     		.sleb128 -128
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 109


 3746 0397 00       		.byte	0
 3747 0398 0F       		.uleb128 0xf
 3748 0399 EE000000 		.4byte	0xee
 3749 039d A8040000 		.4byte	.LBB68
 3750 03a1 3C000000 		.4byte	.LBE68-.LBB68
 3751 03a5 01       		.byte	0x1
 3752 03a6 2101     		.2byte	0x121
 3753 03a8 C8030000 		.4byte	0x3c8
 3754 03ac 0E       		.uleb128 0xe
 3755 03ad 13010000 		.4byte	0x113
 3756 03b1 03       		.uleb128 0x3
 3757 03b2 91       		.byte	0x91
 3758 03b3 EC7E     		.sleb128 -148
 3759 03b5 0E       		.uleb128 0xe
 3760 03b6 09010000 		.4byte	0x109
 3761 03ba 03       		.uleb128 0x3
 3762 03bb 91       		.byte	0x91
 3763 03bc F07E     		.sleb128 -144
 3764 03be 0E       		.uleb128 0xe
 3765 03bf FF000000 		.4byte	0xff
 3766 03c3 03       		.uleb128 0x3
 3767 03c4 91       		.byte	0x91
 3768 03c5 F47E     		.sleb128 -140
 3769 03c7 00       		.byte	0
 3770 03c8 0F       		.uleb128 0xf
 3771 03c9 EE000000 		.4byte	0xee
 3772 03cd 1C050000 		.4byte	.LBB70
 3773 03d1 3C000000 		.4byte	.LBE70-.LBB70
 3774 03d5 01       		.byte	0x1
 3775 03d6 2401     		.2byte	0x124
 3776 03d8 F8030000 		.4byte	0x3f8
 3777 03dc 0E       		.uleb128 0xe
 3778 03dd 13010000 		.4byte	0x113
 3779 03e1 03       		.uleb128 0x3
 3780 03e2 91       		.byte	0x91
 3781 03e3 E07E     		.sleb128 -160
 3782 03e5 0E       		.uleb128 0xe
 3783 03e6 09010000 		.4byte	0x109
 3784 03ea 03       		.uleb128 0x3
 3785 03eb 91       		.byte	0x91
 3786 03ec E47E     		.sleb128 -156
 3787 03ee 0E       		.uleb128 0xe
 3788 03ef FF000000 		.4byte	0xff
 3789 03f3 03       		.uleb128 0x3
 3790 03f4 91       		.byte	0x91
 3791 03f5 E87E     		.sleb128 -152
 3792 03f7 00       		.byte	0
 3793 03f8 0F       		.uleb128 0xf
 3794 03f9 EE000000 		.4byte	0xee
 3795 03fd AE050000 		.4byte	.LBB72
 3796 0401 3C000000 		.4byte	.LBE72-.LBB72
 3797 0405 01       		.byte	0x1
 3798 0406 2D01     		.2byte	0x12d
 3799 0408 28040000 		.4byte	0x428
 3800 040c 0E       		.uleb128 0xe
 3801 040d 13010000 		.4byte	0x113
 3802 0411 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 110


 3803 0412 91       		.byte	0x91
 3804 0413 D47E     		.sleb128 -172
 3805 0415 0E       		.uleb128 0xe
 3806 0416 09010000 		.4byte	0x109
 3807 041a 03       		.uleb128 0x3
 3808 041b 91       		.byte	0x91
 3809 041c D87E     		.sleb128 -168
 3810 041e 0E       		.uleb128 0xe
 3811 041f FF000000 		.4byte	0xff
 3812 0423 03       		.uleb128 0x3
 3813 0424 91       		.byte	0x91
 3814 0425 DC7E     		.sleb128 -164
 3815 0427 00       		.byte	0
 3816 0428 0F       		.uleb128 0xf
 3817 0429 EE000000 		.4byte	0xee
 3818 042d 22060000 		.4byte	.LBB74
 3819 0431 3C000000 		.4byte	.LBE74-.LBB74
 3820 0435 01       		.byte	0x1
 3821 0436 3001     		.2byte	0x130
 3822 0438 58040000 		.4byte	0x458
 3823 043c 0E       		.uleb128 0xe
 3824 043d 13010000 		.4byte	0x113
 3825 0441 03       		.uleb128 0x3
 3826 0442 91       		.byte	0x91
 3827 0443 C87E     		.sleb128 -184
 3828 0445 0E       		.uleb128 0xe
 3829 0446 09010000 		.4byte	0x109
 3830 044a 03       		.uleb128 0x3
 3831 044b 91       		.byte	0x91
 3832 044c CC7E     		.sleb128 -180
 3833 044e 0E       		.uleb128 0xe
 3834 044f FF000000 		.4byte	0xff
 3835 0453 03       		.uleb128 0x3
 3836 0454 91       		.byte	0x91
 3837 0455 D07E     		.sleb128 -176
 3838 0457 00       		.byte	0
 3839 0458 0F       		.uleb128 0xf
 3840 0459 EE000000 		.4byte	0xee
 3841 045d AA060000 		.4byte	.LBB76
 3842 0461 3C000000 		.4byte	.LBE76-.LBB76
 3843 0465 01       		.byte	0x1
 3844 0466 3601     		.2byte	0x136
 3845 0468 88040000 		.4byte	0x488
 3846 046c 0E       		.uleb128 0xe
 3847 046d 13010000 		.4byte	0x113
 3848 0471 03       		.uleb128 0x3
 3849 0472 91       		.byte	0x91
 3850 0473 BC7E     		.sleb128 -196
 3851 0475 0E       		.uleb128 0xe
 3852 0476 09010000 		.4byte	0x109
 3853 047a 03       		.uleb128 0x3
 3854 047b 91       		.byte	0x91
 3855 047c C07E     		.sleb128 -192
 3856 047e 0E       		.uleb128 0xe
 3857 047f FF000000 		.4byte	0xff
 3858 0483 03       		.uleb128 0x3
 3859 0484 91       		.byte	0x91
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 111


 3860 0485 C47E     		.sleb128 -188
 3861 0487 00       		.byte	0
 3862 0488 0F       		.uleb128 0xf
 3863 0489 EE000000 		.4byte	0xee
 3864 048d 1E070000 		.4byte	.LBB78
 3865 0491 3C000000 		.4byte	.LBE78-.LBB78
 3866 0495 01       		.byte	0x1
 3867 0496 3901     		.2byte	0x139
 3868 0498 B8040000 		.4byte	0x4b8
 3869 049c 0E       		.uleb128 0xe
 3870 049d 13010000 		.4byte	0x113
 3871 04a1 03       		.uleb128 0x3
 3872 04a2 91       		.byte	0x91
 3873 04a3 B07E     		.sleb128 -208
 3874 04a5 0E       		.uleb128 0xe
 3875 04a6 09010000 		.4byte	0x109
 3876 04aa 03       		.uleb128 0x3
 3877 04ab 91       		.byte	0x91
 3878 04ac B47E     		.sleb128 -204
 3879 04ae 0E       		.uleb128 0xe
 3880 04af FF000000 		.4byte	0xff
 3881 04b3 03       		.uleb128 0x3
 3882 04b4 91       		.byte	0x91
 3883 04b5 B87E     		.sleb128 -200
 3884 04b7 00       		.byte	0
 3885 04b8 0F       		.uleb128 0xf
 3886 04b9 EE000000 		.4byte	0xee
 3887 04bd B2070000 		.4byte	.LBB80
 3888 04c1 3C000000 		.4byte	.LBE80-.LBB80
 3889 04c5 01       		.byte	0x1
 3890 04c6 4301     		.2byte	0x143
 3891 04c8 E8040000 		.4byte	0x4e8
 3892 04cc 0E       		.uleb128 0xe
 3893 04cd 13010000 		.4byte	0x113
 3894 04d1 03       		.uleb128 0x3
 3895 04d2 91       		.byte	0x91
 3896 04d3 A47E     		.sleb128 -220
 3897 04d5 0E       		.uleb128 0xe
 3898 04d6 09010000 		.4byte	0x109
 3899 04da 03       		.uleb128 0x3
 3900 04db 91       		.byte	0x91
 3901 04dc A87E     		.sleb128 -216
 3902 04de 0E       		.uleb128 0xe
 3903 04df FF000000 		.4byte	0xff
 3904 04e3 03       		.uleb128 0x3
 3905 04e4 91       		.byte	0x91
 3906 04e5 AC7E     		.sleb128 -212
 3907 04e7 00       		.byte	0
 3908 04e8 0F       		.uleb128 0xf
 3909 04e9 EE000000 		.4byte	0xee
 3910 04ed 22080000 		.4byte	.LBB82
 3911 04f1 36000000 		.4byte	.LBE82-.LBB82
 3912 04f5 01       		.byte	0x1
 3913 04f6 4601     		.2byte	0x146
 3914 04f8 18050000 		.4byte	0x518
 3915 04fc 0E       		.uleb128 0xe
 3916 04fd 13010000 		.4byte	0x113
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 112


 3917 0501 03       		.uleb128 0x3
 3918 0502 91       		.byte	0x91
 3919 0503 987E     		.sleb128 -232
 3920 0505 0E       		.uleb128 0xe
 3921 0506 09010000 		.4byte	0x109
 3922 050a 03       		.uleb128 0x3
 3923 050b 91       		.byte	0x91
 3924 050c 9C7E     		.sleb128 -228
 3925 050e 0E       		.uleb128 0xe
 3926 050f FF000000 		.4byte	0xff
 3927 0513 03       		.uleb128 0x3
 3928 0514 91       		.byte	0x91
 3929 0515 A07E     		.sleb128 -224
 3930 0517 00       		.byte	0
 3931 0518 0F       		.uleb128 0xf
 3932 0519 EE000000 		.4byte	0xee
 3933 051d FE080000 		.4byte	.LBB84
 3934 0521 32000000 		.4byte	.LBE84-.LBB84
 3935 0525 01       		.byte	0x1
 3936 0526 6401     		.2byte	0x164
 3937 0528 48050000 		.4byte	0x548
 3938 052c 0E       		.uleb128 0xe
 3939 052d 13010000 		.4byte	0x113
 3940 0531 03       		.uleb128 0x3
 3941 0532 91       		.byte	0x91
 3942 0533 8C7E     		.sleb128 -244
 3943 0535 0E       		.uleb128 0xe
 3944 0536 09010000 		.4byte	0x109
 3945 053a 03       		.uleb128 0x3
 3946 053b 91       		.byte	0x91
 3947 053c 907E     		.sleb128 -240
 3948 053e 0E       		.uleb128 0xe
 3949 053f FF000000 		.4byte	0xff
 3950 0543 03       		.uleb128 0x3
 3951 0544 91       		.byte	0x91
 3952 0545 947E     		.sleb128 -236
 3953 0547 00       		.byte	0
 3954 0548 0F       		.uleb128 0xf
 3955 0549 EE000000 		.4byte	0xee
 3956 054d 62090000 		.4byte	.LBB86
 3957 0551 32000000 		.4byte	.LBE86-.LBB86
 3958 0555 01       		.byte	0x1
 3959 0556 6501     		.2byte	0x165
 3960 0558 78050000 		.4byte	0x578
 3961 055c 0E       		.uleb128 0xe
 3962 055d 13010000 		.4byte	0x113
 3963 0561 03       		.uleb128 0x3
 3964 0562 91       		.byte	0x91
 3965 0563 807E     		.sleb128 -256
 3966 0565 0E       		.uleb128 0xe
 3967 0566 09010000 		.4byte	0x109
 3968 056a 03       		.uleb128 0x3
 3969 056b 91       		.byte	0x91
 3970 056c 847E     		.sleb128 -252
 3971 056e 0E       		.uleb128 0xe
 3972 056f FF000000 		.4byte	0xff
 3973 0573 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 113


 3974 0574 91       		.byte	0x91
 3975 0575 887E     		.sleb128 -248
 3976 0577 00       		.byte	0
 3977 0578 0F       		.uleb128 0xf
 3978 0579 20010000 		.4byte	0x120
 3979 057d C6090000 		.4byte	.LBB88
 3980 0581 32000000 		.4byte	.LBE88-.LBB88
 3981 0585 01       		.byte	0x1
 3982 0586 6601     		.2byte	0x166
 3983 0588 A8050000 		.4byte	0x5a8
 3984 058c 0E       		.uleb128 0xe
 3985 058d 45010000 		.4byte	0x145
 3986 0591 03       		.uleb128 0x3
 3987 0592 91       		.byte	0x91
 3988 0593 F47D     		.sleb128 -268
 3989 0595 0E       		.uleb128 0xe
 3990 0596 3B010000 		.4byte	0x13b
 3991 059a 03       		.uleb128 0x3
 3992 059b 91       		.byte	0x91
 3993 059c F87D     		.sleb128 -264
 3994 059e 0E       		.uleb128 0xe
 3995 059f 31010000 		.4byte	0x131
 3996 05a3 03       		.uleb128 0x3
 3997 05a4 91       		.byte	0x91
 3998 05a5 FC7D     		.sleb128 -260
 3999 05a7 00       		.byte	0
 4000 05a8 0F       		.uleb128 0xf
 4001 05a9 20010000 		.4byte	0x120
 4002 05ad 2A0A0000 		.4byte	.LBB90
 4003 05b1 32000000 		.4byte	.LBE90-.LBB90
 4004 05b5 01       		.byte	0x1
 4005 05b6 6701     		.2byte	0x167
 4006 05b8 D8050000 		.4byte	0x5d8
 4007 05bc 0E       		.uleb128 0xe
 4008 05bd 45010000 		.4byte	0x145
 4009 05c1 03       		.uleb128 0x3
 4010 05c2 91       		.byte	0x91
 4011 05c3 E87D     		.sleb128 -280
 4012 05c5 0E       		.uleb128 0xe
 4013 05c6 3B010000 		.4byte	0x13b
 4014 05ca 03       		.uleb128 0x3
 4015 05cb 91       		.byte	0x91
 4016 05cc EC7D     		.sleb128 -276
 4017 05ce 0E       		.uleb128 0xe
 4018 05cf 31010000 		.4byte	0x131
 4019 05d3 03       		.uleb128 0x3
 4020 05d4 91       		.byte	0x91
 4021 05d5 F07D     		.sleb128 -272
 4022 05d7 00       		.byte	0
 4023 05d8 0F       		.uleb128 0xf
 4024 05d9 EE000000 		.4byte	0xee
 4025 05dd D00A0000 		.4byte	.LBB92
 4026 05e1 32000000 		.4byte	.LBE92-.LBB92
 4027 05e5 01       		.byte	0x1
 4028 05e6 7701     		.2byte	0x177
 4029 05e8 08060000 		.4byte	0x608
 4030 05ec 0E       		.uleb128 0xe
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 114


 4031 05ed 13010000 		.4byte	0x113
 4032 05f1 03       		.uleb128 0x3
 4033 05f2 91       		.byte	0x91
 4034 05f3 DC7D     		.sleb128 -292
 4035 05f5 0E       		.uleb128 0xe
 4036 05f6 09010000 		.4byte	0x109
 4037 05fa 03       		.uleb128 0x3
 4038 05fb 91       		.byte	0x91
 4039 05fc E07D     		.sleb128 -288
 4040 05fe 0E       		.uleb128 0xe
 4041 05ff FF000000 		.4byte	0xff
 4042 0603 03       		.uleb128 0x3
 4043 0604 91       		.byte	0x91
 4044 0605 E47D     		.sleb128 -284
 4045 0607 00       		.byte	0
 4046 0608 0F       		.uleb128 0xf
 4047 0609 EE000000 		.4byte	0xee
 4048 060d 340B0000 		.4byte	.LBB94
 4049 0611 32000000 		.4byte	.LBE94-.LBB94
 4050 0615 01       		.byte	0x1
 4051 0616 7801     		.2byte	0x178
 4052 0618 38060000 		.4byte	0x638
 4053 061c 0E       		.uleb128 0xe
 4054 061d 13010000 		.4byte	0x113
 4055 0621 03       		.uleb128 0x3
 4056 0622 91       		.byte	0x91
 4057 0623 D07D     		.sleb128 -304
 4058 0625 0E       		.uleb128 0xe
 4059 0626 09010000 		.4byte	0x109
 4060 062a 03       		.uleb128 0x3
 4061 062b 91       		.byte	0x91
 4062 062c D47D     		.sleb128 -300
 4063 062e 0E       		.uleb128 0xe
 4064 062f FF000000 		.4byte	0xff
 4065 0633 03       		.uleb128 0x3
 4066 0634 91       		.byte	0x91
 4067 0635 D87D     		.sleb128 -296
 4068 0637 00       		.byte	0
 4069 0638 0F       		.uleb128 0xf
 4070 0639 EE000000 		.4byte	0xee
 4071 063d 980B0000 		.4byte	.LBB96
 4072 0641 32000000 		.4byte	.LBE96-.LBB96
 4073 0645 01       		.byte	0x1
 4074 0646 7901     		.2byte	0x179
 4075 0648 68060000 		.4byte	0x668
 4076 064c 0E       		.uleb128 0xe
 4077 064d 13010000 		.4byte	0x113
 4078 0651 03       		.uleb128 0x3
 4079 0652 91       		.byte	0x91
 4080 0653 C47D     		.sleb128 -316
 4081 0655 0E       		.uleb128 0xe
 4082 0656 09010000 		.4byte	0x109
 4083 065a 03       		.uleb128 0x3
 4084 065b 91       		.byte	0x91
 4085 065c C87D     		.sleb128 -312
 4086 065e 0E       		.uleb128 0xe
 4087 065f FF000000 		.4byte	0xff
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 115


 4088 0663 03       		.uleb128 0x3
 4089 0664 91       		.byte	0x91
 4090 0665 CC7D     		.sleb128 -308
 4091 0667 00       		.byte	0
 4092 0668 0F       		.uleb128 0xf
 4093 0669 EE000000 		.4byte	0xee
 4094 066d FC0B0000 		.4byte	.LBB98
 4095 0671 32000000 		.4byte	.LBE98-.LBB98
 4096 0675 01       		.byte	0x1
 4097 0676 7A01     		.2byte	0x17a
 4098 0678 98060000 		.4byte	0x698
 4099 067c 0E       		.uleb128 0xe
 4100 067d 13010000 		.4byte	0x113
 4101 0681 03       		.uleb128 0x3
 4102 0682 91       		.byte	0x91
 4103 0683 B87D     		.sleb128 -328
 4104 0685 0E       		.uleb128 0xe
 4105 0686 09010000 		.4byte	0x109
 4106 068a 03       		.uleb128 0x3
 4107 068b 91       		.byte	0x91
 4108 068c BC7D     		.sleb128 -324
 4109 068e 0E       		.uleb128 0xe
 4110 068f FF000000 		.4byte	0xff
 4111 0693 03       		.uleb128 0x3
 4112 0694 91       		.byte	0x91
 4113 0695 C07D     		.sleb128 -320
 4114 0697 00       		.byte	0
 4115 0698 0F       		.uleb128 0xf
 4116 0699 EE000000 		.4byte	0xee
 4117 069d A00C0000 		.4byte	.LBB100
 4118 06a1 32000000 		.4byte	.LBE100-.LBB100
 4119 06a5 01       		.byte	0x1
 4120 06a6 8901     		.2byte	0x189
 4121 06a8 C8060000 		.4byte	0x6c8
 4122 06ac 0E       		.uleb128 0xe
 4123 06ad 13010000 		.4byte	0x113
 4124 06b1 03       		.uleb128 0x3
 4125 06b2 91       		.byte	0x91
 4126 06b3 AC7D     		.sleb128 -340
 4127 06b5 0E       		.uleb128 0xe
 4128 06b6 09010000 		.4byte	0x109
 4129 06ba 03       		.uleb128 0x3
 4130 06bb 91       		.byte	0x91
 4131 06bc B07D     		.sleb128 -336
 4132 06be 0E       		.uleb128 0xe
 4133 06bf FF000000 		.4byte	0xff
 4134 06c3 03       		.uleb128 0x3
 4135 06c4 91       		.byte	0x91
 4136 06c5 B47D     		.sleb128 -332
 4137 06c7 00       		.byte	0
 4138 06c8 0F       		.uleb128 0xf
 4139 06c9 EE000000 		.4byte	0xee
 4140 06cd 040D0000 		.4byte	.LBB102
 4141 06d1 32000000 		.4byte	.LBE102-.LBB102
 4142 06d5 01       		.byte	0x1
 4143 06d6 8A01     		.2byte	0x18a
 4144 06d8 F8060000 		.4byte	0x6f8
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 116


 4145 06dc 0E       		.uleb128 0xe
 4146 06dd 13010000 		.4byte	0x113
 4147 06e1 03       		.uleb128 0x3
 4148 06e2 91       		.byte	0x91
 4149 06e3 A07D     		.sleb128 -352
 4150 06e5 0E       		.uleb128 0xe
 4151 06e6 09010000 		.4byte	0x109
 4152 06ea 03       		.uleb128 0x3
 4153 06eb 91       		.byte	0x91
 4154 06ec A47D     		.sleb128 -348
 4155 06ee 0E       		.uleb128 0xe
 4156 06ef FF000000 		.4byte	0xff
 4157 06f3 03       		.uleb128 0x3
 4158 06f4 91       		.byte	0x91
 4159 06f5 A87D     		.sleb128 -344
 4160 06f7 00       		.byte	0
 4161 06f8 0F       		.uleb128 0xf
 4162 06f9 EE000000 		.4byte	0xee
 4163 06fd 640D0000 		.4byte	.LBB104
 4164 0701 2E000000 		.4byte	.LBE104-.LBB104
 4165 0705 01       		.byte	0x1
 4166 0706 8B01     		.2byte	0x18b
 4167 0708 28070000 		.4byte	0x728
 4168 070c 0E       		.uleb128 0xe
 4169 070d 13010000 		.4byte	0x113
 4170 0711 03       		.uleb128 0x3
 4171 0712 91       		.byte	0x91
 4172 0713 947D     		.sleb128 -364
 4173 0715 0E       		.uleb128 0xe
 4174 0716 09010000 		.4byte	0x109
 4175 071a 03       		.uleb128 0x3
 4176 071b 91       		.byte	0x91
 4177 071c 987D     		.sleb128 -360
 4178 071e 0E       		.uleb128 0xe
 4179 071f FF000000 		.4byte	0xff
 4180 0723 03       		.uleb128 0x3
 4181 0724 91       		.byte	0x91
 4182 0725 9C7D     		.sleb128 -356
 4183 0727 00       		.byte	0
 4184 0728 0F       		.uleb128 0xf
 4185 0729 EE000000 		.4byte	0xee
 4186 072d B80D0000 		.4byte	.LBB106
 4187 0731 1E000000 		.4byte	.LBE106-.LBB106
 4188 0735 01       		.byte	0x1
 4189 0736 8C01     		.2byte	0x18c
 4190 0738 58070000 		.4byte	0x758
 4191 073c 0E       		.uleb128 0xe
 4192 073d 13010000 		.4byte	0x113
 4193 0741 03       		.uleb128 0x3
 4194 0742 91       		.byte	0x91
 4195 0743 887D     		.sleb128 -376
 4196 0745 0E       		.uleb128 0xe
 4197 0746 09010000 		.4byte	0x109
 4198 074a 03       		.uleb128 0x3
 4199 074b 91       		.byte	0x91
 4200 074c 8C7D     		.sleb128 -372
 4201 074e 0E       		.uleb128 0xe
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 117


 4202 074f FF000000 		.4byte	0xff
 4203 0753 03       		.uleb128 0x3
 4204 0754 91       		.byte	0x91
 4205 0755 907D     		.sleb128 -368
 4206 0757 00       		.byte	0
 4207 0758 0F       		.uleb128 0xf
 4208 0759 20010000 		.4byte	0x120
 4209 075d 300E0000 		.4byte	.LBB108
 4210 0761 1E000000 		.4byte	.LBE108-.LBB108
 4211 0765 01       		.byte	0x1
 4212 0766 9D01     		.2byte	0x19d
 4213 0768 88070000 		.4byte	0x788
 4214 076c 0E       		.uleb128 0xe
 4215 076d 45010000 		.4byte	0x145
 4216 0771 03       		.uleb128 0x3
 4217 0772 91       		.byte	0x91
 4218 0773 FC7C     		.sleb128 -388
 4219 0775 0E       		.uleb128 0xe
 4220 0776 3B010000 		.4byte	0x13b
 4221 077a 03       		.uleb128 0x3
 4222 077b 91       		.byte	0x91
 4223 077c 807D     		.sleb128 -384
 4224 077e 0E       		.uleb128 0xe
 4225 077f 31010000 		.4byte	0x131
 4226 0783 03       		.uleb128 0x3
 4227 0784 91       		.byte	0x91
 4228 0785 847D     		.sleb128 -380
 4229 0787 00       		.byte	0
 4230 0788 0F       		.uleb128 0xf
 4231 0789 EE000000 		.4byte	0xee
 4232 078d 740E0000 		.4byte	.LBB110
 4233 0791 1E000000 		.4byte	.LBE110-.LBB110
 4234 0795 01       		.byte	0x1
 4235 0796 9E01     		.2byte	0x19e
 4236 0798 B8070000 		.4byte	0x7b8
 4237 079c 0E       		.uleb128 0xe
 4238 079d 13010000 		.4byte	0x113
 4239 07a1 03       		.uleb128 0x3
 4240 07a2 91       		.byte	0x91
 4241 07a3 F07C     		.sleb128 -400
 4242 07a5 0E       		.uleb128 0xe
 4243 07a6 09010000 		.4byte	0x109
 4244 07aa 03       		.uleb128 0x3
 4245 07ab 91       		.byte	0x91
 4246 07ac F47C     		.sleb128 -396
 4247 07ae 0E       		.uleb128 0xe
 4248 07af FF000000 		.4byte	0xff
 4249 07b3 03       		.uleb128 0x3
 4250 07b4 91       		.byte	0x91
 4251 07b5 F87C     		.sleb128 -392
 4252 07b7 00       		.byte	0
 4253 07b8 0F       		.uleb128 0xf
 4254 07b9 20010000 		.4byte	0x120
 4255 07bd B80E0000 		.4byte	.LBB112
 4256 07c1 1E000000 		.4byte	.LBE112-.LBB112
 4257 07c5 01       		.byte	0x1
 4258 07c6 9F01     		.2byte	0x19f
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 118


 4259 07c8 E8070000 		.4byte	0x7e8
 4260 07cc 0E       		.uleb128 0xe
 4261 07cd 45010000 		.4byte	0x145
 4262 07d1 03       		.uleb128 0x3
 4263 07d2 91       		.byte	0x91
 4264 07d3 E47C     		.sleb128 -412
 4265 07d5 0E       		.uleb128 0xe
 4266 07d6 3B010000 		.4byte	0x13b
 4267 07da 03       		.uleb128 0x3
 4268 07db 91       		.byte	0x91
 4269 07dc E87C     		.sleb128 -408
 4270 07de 0E       		.uleb128 0xe
 4271 07df 31010000 		.4byte	0x131
 4272 07e3 03       		.uleb128 0x3
 4273 07e4 91       		.byte	0x91
 4274 07e5 EC7C     		.sleb128 -404
 4275 07e7 00       		.byte	0
 4276 07e8 0F       		.uleb128 0xf
 4277 07e9 20010000 		.4byte	0x120
 4278 07ed FC0E0000 		.4byte	.LBB114
 4279 07f1 1E000000 		.4byte	.LBE114-.LBB114
 4280 07f5 01       		.byte	0x1
 4281 07f6 A001     		.2byte	0x1a0
 4282 07f8 18080000 		.4byte	0x818
 4283 07fc 0E       		.uleb128 0xe
 4284 07fd 45010000 		.4byte	0x145
 4285 0801 03       		.uleb128 0x3
 4286 0802 91       		.byte	0x91
 4287 0803 D87C     		.sleb128 -424
 4288 0805 0E       		.uleb128 0xe
 4289 0806 3B010000 		.4byte	0x13b
 4290 080a 03       		.uleb128 0x3
 4291 080b 91       		.byte	0x91
 4292 080c DC7C     		.sleb128 -420
 4293 080e 0E       		.uleb128 0xe
 4294 080f 31010000 		.4byte	0x131
 4295 0813 03       		.uleb128 0x3
 4296 0814 91       		.byte	0x91
 4297 0815 E07C     		.sleb128 -416
 4298 0817 00       		.byte	0
 4299 0818 0F       		.uleb128 0xf
 4300 0819 EE000000 		.4byte	0xee
 4301 081d 7C130000 		.4byte	.LBB116
 4302 0821 1E000000 		.4byte	.LBE116-.LBB116
 4303 0825 01       		.byte	0x1
 4304 0826 4402     		.2byte	0x244
 4305 0828 48080000 		.4byte	0x848
 4306 082c 0E       		.uleb128 0xe
 4307 082d 13010000 		.4byte	0x113
 4308 0831 03       		.uleb128 0x3
 4309 0832 91       		.byte	0x91
 4310 0833 CC7C     		.sleb128 -436
 4311 0835 0E       		.uleb128 0xe
 4312 0836 09010000 		.4byte	0x109
 4313 083a 03       		.uleb128 0x3
 4314 083b 91       		.byte	0x91
 4315 083c D07C     		.sleb128 -432
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 119


 4316 083e 0E       		.uleb128 0xe
 4317 083f FF000000 		.4byte	0xff
 4318 0843 03       		.uleb128 0x3
 4319 0844 91       		.byte	0x91
 4320 0845 D47C     		.sleb128 -428
 4321 0847 00       		.byte	0
 4322 0848 0F       		.uleb128 0xf
 4323 0849 EE000000 		.4byte	0xee
 4324 084d CC130000 		.4byte	.LBB118
 4325 0851 1E000000 		.4byte	.LBE118-.LBB118
 4326 0855 01       		.byte	0x1
 4327 0856 4602     		.2byte	0x246
 4328 0858 78080000 		.4byte	0x878
 4329 085c 0E       		.uleb128 0xe
 4330 085d 13010000 		.4byte	0x113
 4331 0861 03       		.uleb128 0x3
 4332 0862 91       		.byte	0x91
 4333 0863 C07C     		.sleb128 -448
 4334 0865 0E       		.uleb128 0xe
 4335 0866 09010000 		.4byte	0x109
 4336 086a 03       		.uleb128 0x3
 4337 086b 91       		.byte	0x91
 4338 086c C47C     		.sleb128 -444
 4339 086e 0E       		.uleb128 0xe
 4340 086f FF000000 		.4byte	0xff
 4341 0873 03       		.uleb128 0x3
 4342 0874 91       		.byte	0x91
 4343 0875 C87C     		.sleb128 -440
 4344 0877 00       		.byte	0
 4345 0878 10       		.uleb128 0x10
 4346 0879 EE000000 		.4byte	0xee
 4347 087d 48140000 		.4byte	.LBB120
 4348 0881 1E000000 		.4byte	.LBE120-.LBB120
 4349 0885 01       		.byte	0x1
 4350 0886 5302     		.2byte	0x253
 4351 0888 0E       		.uleb128 0xe
 4352 0889 13010000 		.4byte	0x113
 4353 088d 03       		.uleb128 0x3
 4354 088e 91       		.byte	0x91
 4355 088f B47C     		.sleb128 -460
 4356 0891 0E       		.uleb128 0xe
 4357 0892 09010000 		.4byte	0x109
 4358 0896 03       		.uleb128 0x3
 4359 0897 91       		.byte	0x91
 4360 0898 B87C     		.sleb128 -456
 4361 089a 0E       		.uleb128 0xe
 4362 089b FF000000 		.4byte	0xff
 4363 089f 03       		.uleb128 0x3
 4364 08a0 91       		.byte	0x91
 4365 08a1 BC7C     		.sleb128 -452
 4366 08a3 00       		.byte	0
 4367 08a4 00       		.byte	0
 4368 08a5 00       		.byte	0
 4369              		.section	.debug_abbrev,"",%progbits
 4370              	.Ldebug_abbrev0:
 4371 0000 01       		.uleb128 0x1
 4372 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 120


 4373 0002 01       		.byte	0x1
 4374 0003 25       		.uleb128 0x25
 4375 0004 0E       		.uleb128 0xe
 4376 0005 13       		.uleb128 0x13
 4377 0006 0B       		.uleb128 0xb
 4378 0007 03       		.uleb128 0x3
 4379 0008 0E       		.uleb128 0xe
 4380 0009 1B       		.uleb128 0x1b
 4381 000a 0E       		.uleb128 0xe
 4382 000b 55       		.uleb128 0x55
 4383 000c 17       		.uleb128 0x17
 4384 000d 11       		.uleb128 0x11
 4385 000e 01       		.uleb128 0x1
 4386 000f 10       		.uleb128 0x10
 4387 0010 17       		.uleb128 0x17
 4388 0011 00       		.byte	0
 4389 0012 00       		.byte	0
 4390 0013 02       		.uleb128 0x2
 4391 0014 24       		.uleb128 0x24
 4392 0015 00       		.byte	0
 4393 0016 0B       		.uleb128 0xb
 4394 0017 0B       		.uleb128 0xb
 4395 0018 3E       		.uleb128 0x3e
 4396 0019 0B       		.uleb128 0xb
 4397 001a 03       		.uleb128 0x3
 4398 001b 0E       		.uleb128 0xe
 4399 001c 00       		.byte	0
 4400 001d 00       		.byte	0
 4401 001e 03       		.uleb128 0x3
 4402 001f 16       		.uleb128 0x16
 4403 0020 00       		.byte	0
 4404 0021 03       		.uleb128 0x3
 4405 0022 0E       		.uleb128 0xe
 4406 0023 3A       		.uleb128 0x3a
 4407 0024 0B       		.uleb128 0xb
 4408 0025 3B       		.uleb128 0x3b
 4409 0026 0B       		.uleb128 0xb
 4410 0027 49       		.uleb128 0x49
 4411 0028 13       		.uleb128 0x13
 4412 0029 00       		.byte	0
 4413 002a 00       		.byte	0
 4414 002b 04       		.uleb128 0x4
 4415 002c 24       		.uleb128 0x24
 4416 002d 00       		.byte	0
 4417 002e 0B       		.uleb128 0xb
 4418 002f 0B       		.uleb128 0xb
 4419 0030 3E       		.uleb128 0x3e
 4420 0031 0B       		.uleb128 0xb
 4421 0032 03       		.uleb128 0x3
 4422 0033 08       		.uleb128 0x8
 4423 0034 00       		.byte	0
 4424 0035 00       		.byte	0
 4425 0036 05       		.uleb128 0x5
 4426 0037 16       		.uleb128 0x16
 4427 0038 00       		.byte	0
 4428 0039 03       		.uleb128 0x3
 4429 003a 0E       		.uleb128 0xe
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 121


 4430 003b 3A       		.uleb128 0x3a
 4431 003c 0B       		.uleb128 0xb
 4432 003d 3B       		.uleb128 0x3b
 4433 003e 05       		.uleb128 0x5
 4434 003f 49       		.uleb128 0x49
 4435 0040 13       		.uleb128 0x13
 4436 0041 00       		.byte	0
 4437 0042 00       		.byte	0
 4438 0043 06       		.uleb128 0x6
 4439 0044 0F       		.uleb128 0xf
 4440 0045 00       		.byte	0
 4441 0046 0B       		.uleb128 0xb
 4442 0047 0B       		.uleb128 0xb
 4443 0048 49       		.uleb128 0x49
 4444 0049 13       		.uleb128 0x13
 4445 004a 00       		.byte	0
 4446 004b 00       		.byte	0
 4447 004c 07       		.uleb128 0x7
 4448 004d 2E       		.uleb128 0x2e
 4449 004e 01       		.byte	0x1
 4450 004f 03       		.uleb128 0x3
 4451 0050 0E       		.uleb128 0xe
 4452 0051 3A       		.uleb128 0x3a
 4453 0052 0B       		.uleb128 0xb
 4454 0053 3B       		.uleb128 0x3b
 4455 0054 05       		.uleb128 0x5
 4456 0055 27       		.uleb128 0x27
 4457 0056 19       		.uleb128 0x19
 4458 0057 49       		.uleb128 0x49
 4459 0058 13       		.uleb128 0x13
 4460 0059 20       		.uleb128 0x20
 4461 005a 0B       		.uleb128 0xb
 4462 005b 01       		.uleb128 0x1
 4463 005c 13       		.uleb128 0x13
 4464 005d 00       		.byte	0
 4465 005e 00       		.byte	0
 4466 005f 08       		.uleb128 0x8
 4467 0060 05       		.uleb128 0x5
 4468 0061 00       		.byte	0
 4469 0062 03       		.uleb128 0x3
 4470 0063 08       		.uleb128 0x8
 4471 0064 3A       		.uleb128 0x3a
 4472 0065 0B       		.uleb128 0xb
 4473 0066 3B       		.uleb128 0x3b
 4474 0067 05       		.uleb128 0x5
 4475 0068 49       		.uleb128 0x49
 4476 0069 13       		.uleb128 0x13
 4477 006a 00       		.byte	0
 4478 006b 00       		.byte	0
 4479 006c 09       		.uleb128 0x9
 4480 006d 2E       		.uleb128 0x2e
 4481 006e 01       		.byte	0x1
 4482 006f 3F       		.uleb128 0x3f
 4483 0070 19       		.uleb128 0x19
 4484 0071 03       		.uleb128 0x3
 4485 0072 0E       		.uleb128 0xe
 4486 0073 3A       		.uleb128 0x3a
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 122


 4487 0074 0B       		.uleb128 0xb
 4488 0075 3B       		.uleb128 0x3b
 4489 0076 0B       		.uleb128 0xb
 4490 0077 27       		.uleb128 0x27
 4491 0078 19       		.uleb128 0x19
 4492 0079 11       		.uleb128 0x11
 4493 007a 01       		.uleb128 0x1
 4494 007b 12       		.uleb128 0x12
 4495 007c 06       		.uleb128 0x6
 4496 007d 40       		.uleb128 0x40
 4497 007e 18       		.uleb128 0x18
 4498 007f 9742     		.uleb128 0x2117
 4499 0081 19       		.uleb128 0x19
 4500 0082 00       		.byte	0
 4501 0083 00       		.byte	0
 4502 0084 0A       		.uleb128 0xa
 4503 0085 05       		.uleb128 0x5
 4504 0086 00       		.byte	0
 4505 0087 03       		.uleb128 0x3
 4506 0088 0E       		.uleb128 0xe
 4507 0089 3A       		.uleb128 0x3a
 4508 008a 0B       		.uleb128 0xb
 4509 008b 3B       		.uleb128 0x3b
 4510 008c 0B       		.uleb128 0xb
 4511 008d 49       		.uleb128 0x49
 4512 008e 13       		.uleb128 0x13
 4513 008f 02       		.uleb128 0x2
 4514 0090 18       		.uleb128 0x18
 4515 0091 00       		.byte	0
 4516 0092 00       		.byte	0
 4517 0093 0B       		.uleb128 0xb
 4518 0094 34       		.uleb128 0x34
 4519 0095 00       		.byte	0
 4520 0096 03       		.uleb128 0x3
 4521 0097 0E       		.uleb128 0xe
 4522 0098 3A       		.uleb128 0x3a
 4523 0099 0B       		.uleb128 0xb
 4524 009a 3B       		.uleb128 0x3b
 4525 009b 0B       		.uleb128 0xb
 4526 009c 49       		.uleb128 0x49
 4527 009d 13       		.uleb128 0x13
 4528 009e 02       		.uleb128 0x2
 4529 009f 18       		.uleb128 0x18
 4530 00a0 00       		.byte	0
 4531 00a1 00       		.byte	0
 4532 00a2 0C       		.uleb128 0xc
 4533 00a3 34       		.uleb128 0x34
 4534 00a4 00       		.byte	0
 4535 00a5 03       		.uleb128 0x3
 4536 00a6 08       		.uleb128 0x8
 4537 00a7 3A       		.uleb128 0x3a
 4538 00a8 0B       		.uleb128 0xb
 4539 00a9 3B       		.uleb128 0x3b
 4540 00aa 0B       		.uleb128 0xb
 4541 00ab 49       		.uleb128 0x49
 4542 00ac 13       		.uleb128 0x13
 4543 00ad 02       		.uleb128 0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 123


 4544 00ae 18       		.uleb128 0x18
 4545 00af 00       		.byte	0
 4546 00b0 00       		.byte	0
 4547 00b1 0D       		.uleb128 0xd
 4548 00b2 1D       		.uleb128 0x1d
 4549 00b3 01       		.byte	0x1
 4550 00b4 31       		.uleb128 0x31
 4551 00b5 13       		.uleb128 0x13
 4552 00b6 11       		.uleb128 0x11
 4553 00b7 01       		.uleb128 0x1
 4554 00b8 12       		.uleb128 0x12
 4555 00b9 06       		.uleb128 0x6
 4556 00ba 58       		.uleb128 0x58
 4557 00bb 0B       		.uleb128 0xb
 4558 00bc 59       		.uleb128 0x59
 4559 00bd 0B       		.uleb128 0xb
 4560 00be 01       		.uleb128 0x1
 4561 00bf 13       		.uleb128 0x13
 4562 00c0 00       		.byte	0
 4563 00c1 00       		.byte	0
 4564 00c2 0E       		.uleb128 0xe
 4565 00c3 05       		.uleb128 0x5
 4566 00c4 00       		.byte	0
 4567 00c5 31       		.uleb128 0x31
 4568 00c6 13       		.uleb128 0x13
 4569 00c7 02       		.uleb128 0x2
 4570 00c8 18       		.uleb128 0x18
 4571 00c9 00       		.byte	0
 4572 00ca 00       		.byte	0
 4573 00cb 0F       		.uleb128 0xf
 4574 00cc 1D       		.uleb128 0x1d
 4575 00cd 01       		.byte	0x1
 4576 00ce 31       		.uleb128 0x31
 4577 00cf 13       		.uleb128 0x13
 4578 00d0 11       		.uleb128 0x11
 4579 00d1 01       		.uleb128 0x1
 4580 00d2 12       		.uleb128 0x12
 4581 00d3 06       		.uleb128 0x6
 4582 00d4 58       		.uleb128 0x58
 4583 00d5 0B       		.uleb128 0xb
 4584 00d6 59       		.uleb128 0x59
 4585 00d7 05       		.uleb128 0x5
 4586 00d8 01       		.uleb128 0x1
 4587 00d9 13       		.uleb128 0x13
 4588 00da 00       		.byte	0
 4589 00db 00       		.byte	0
 4590 00dc 10       		.uleb128 0x10
 4591 00dd 1D       		.uleb128 0x1d
 4592 00de 01       		.byte	0x1
 4593 00df 31       		.uleb128 0x31
 4594 00e0 13       		.uleb128 0x13
 4595 00e1 11       		.uleb128 0x11
 4596 00e2 01       		.uleb128 0x1
 4597 00e3 12       		.uleb128 0x12
 4598 00e4 06       		.uleb128 0x6
 4599 00e5 58       		.uleb128 0x58
 4600 00e6 0B       		.uleb128 0xb
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 124


 4601 00e7 59       		.uleb128 0x59
 4602 00e8 05       		.uleb128 0x5
 4603 00e9 00       		.byte	0
 4604 00ea 00       		.byte	0
 4605 00eb 00       		.byte	0
 4606              		.section	.debug_aranges,"",%progbits
 4607 0000 1C000000 		.4byte	0x1c
 4608 0004 0200     		.2byte	0x2
 4609 0006 00000000 		.4byte	.Ldebug_info0
 4610 000a 04       		.byte	0x4
 4611 000b 00       		.byte	0
 4612 000c 0000     		.2byte	0
 4613 000e 0000     		.2byte	0
 4614 0010 00000000 		.4byte	.LFB82
 4615 0014 1C150000 		.4byte	.LFE82-.LFB82
 4616 0018 00000000 		.4byte	0
 4617 001c 00000000 		.4byte	0
 4618              		.section	.debug_ranges,"",%progbits
 4619              	.Ldebug_ranges0:
 4620 0000 00000000 		.4byte	.LFB82
 4621 0004 1C150000 		.4byte	.LFE82
 4622 0008 00000000 		.4byte	0
 4623 000c 00000000 		.4byte	0
 4624              		.section	.debug_line,"",%progbits
 4625              	.Ldebug_line0:
 4626 0000 61050000 		.section	.debug_str,"MS",%progbits,1
 4626      02005901 
 4626      00000201 
 4626      FB0E0D00 
 4626      01010101 
 4627              	.LASF35:
 4628 0000 61636333 		.ascii	"acc3\000"
 4628      00
 4629              	.LASF4:
 4630 0005 5F5F696E 		.ascii	"__int16_t\000"
 4630      7431365F 
 4630      7400
 4631              	.LASF24:
 4632 000f 70537263 		.ascii	"pSrcA\000"
 4632      4100
 4633              	.LASF26:
 4634 0015 70537263 		.ascii	"pSrcB\000"
 4634      4200
 4635              	.LASF37:
 4636 001b 636F756E 		.ascii	"count\000"
 4636      7400
 4637              	.LASF5:
 4638 0021 5F5F696E 		.ascii	"__int32_t\000"
 4638      7433325F 
 4638      7400
 4639              	.LASF45:
 4640 002b 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 4640      73657273 
 4640      5C666E65 
 4640      7665735C 
 4640      446F6375 
 4641 0058 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 125


 4641      655F7370 
 4641      6565645F 
 4641      73656E73 
 4641      6F722E63 
 4642              	.LASF39:
 4643 0071 6F757442 		.ascii	"outBlockSize\000"
 4643      6C6F636B 
 4643      53697A65 
 4643      00
 4644              	.LASF46:
 4645 007e 61726D5F 		.ascii	"arm_correlate_fast_q15\000"
 4645      636F7272 
 4645      656C6174 
 4645      655F6661 
 4645      73745F71 
 4646              	.LASF23:
 4647 0095 5F5F534D 		.ascii	"__SMLADX\000"
 4647      4C414458 
 4647      00
 4648              	.LASF20:
 4649 009e 7131355F 		.ascii	"q15_t\000"
 4649      7400
 4650              	.LASF31:
 4651 00a4 704F7574 		.ascii	"pOut\000"
 4651      00
 4652              	.LASF21:
 4653 00a9 7133315F 		.ascii	"q31_t\000"
 4653      7400
 4654              	.LASF1:
 4655 00af 756E7369 		.ascii	"unsigned char\000"
 4655      676E6564 
 4655      20636861 
 4655      7200
 4656              	.LASF30:
 4657 00bd 70496E32 		.ascii	"pIn2\000"
 4657      00
 4658              	.LASF38:
 4659 00c2 626C6B43 		.ascii	"blkCnt\000"
 4659      6E7400
 4660              	.LASF22:
 4661 00c9 5F5F534D 		.ascii	"__SMLAD\000"
 4661      4C414400 
 4662              	.LASF8:
 4663 00d1 6C6F6E67 		.ascii	"long unsigned int\000"
 4663      20756E73 
 4663      69676E65 
 4663      6420696E 
 4663      7400
 4664              	.LASF3:
 4665 00e3 73686F72 		.ascii	"short unsigned int\000"
 4665      7420756E 
 4665      7369676E 
 4665      65642069 
 4665      6E7400
 4666              	.LASF28:
 4667 00f6 70447374 		.ascii	"pDst\000"
 4667      00
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 126


 4668              	.LASF27:
 4669 00fb 73726342 		.ascii	"srcBLen\000"
 4669      4C656E00 
 4670              	.LASF17:
 4671 0103 646F7562 		.ascii	"double\000"
 4671      6C6500
 4672              	.LASF42:
 4673 010a 626C6F63 		.ascii	"blockSize3\000"
 4673      6B53697A 
 4673      653300
 4674              	.LASF7:
 4675 0115 5F5F7569 		.ascii	"__uint32_t\000"
 4675      6E743332 
 4675      5F7400
 4676              	.LASF11:
 4677 0120 756E7369 		.ascii	"unsigned int\000"
 4677      676E6564 
 4677      20696E74 
 4677      00
 4678              	.LASF10:
 4679 012d 6C6F6E67 		.ascii	"long long unsigned int\000"
 4679      206C6F6E 
 4679      6720756E 
 4679      7369676E 
 4679      65642069 
 4680              	.LASF43:
 4681 0144 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4681      4320342E 
 4681      392E3320 
 4681      32303135 
 4681      30333033 
 4682 0177 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 4682      20726576 
 4682      6973696F 
 4682      6E203232 
 4682      31323230 
 4683 01aa 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 4683      30202D66 
 4683      66756E63 
 4683      74696F6E 
 4683      2D736563 
 4684              	.LASF12:
 4685 01d6 696E7431 		.ascii	"int16_t\000"
 4685      365F7400 
 4686              	.LASF13:
 4687 01de 696E7433 		.ascii	"int32_t\000"
 4687      325F7400 
 4688              	.LASF15:
 4689 01e6 73697A65 		.ascii	"sizetype\000"
 4689      74797065 
 4689      00
 4690              	.LASF9:
 4691 01ef 6C6F6E67 		.ascii	"long long int\000"
 4691      206C6F6E 
 4691      6720696E 
 4691      7400
 4692              	.LASF40:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 127


 4693 01fd 626C6F63 		.ascii	"blockSize1\000"
 4693      6B53697A 
 4693      653100
 4694              	.LASF41:
 4695 0208 626C6F63 		.ascii	"blockSize2\000"
 4695      6B53697A 
 4695      653200
 4696              	.LASF16:
 4697 0213 63686172 		.ascii	"char\000"
 4697      00
 4698              	.LASF25:
 4699 0218 73726341 		.ascii	"srcALen\000"
 4699      4C656E00 
 4700              	.LASF2:
 4701 0220 73686F72 		.ascii	"short int\000"
 4701      7420696E 
 4701      7400
 4702              	.LASF44:
 4703 022a 536F7572 		.ascii	"Source\\FilteringFunctions\\arm_correlate_fast_q15."
 4703      63655C46 
 4703      696C7465 
 4703      72696E67 
 4703      46756E63 
 4704 025b 6300     		.ascii	"c\000"
 4705              	.LASF14:
 4706 025d 75696E74 		.ascii	"uint32_t\000"
 4706      33325F74 
 4706      00
 4707              	.LASF6:
 4708 0266 6C6F6E67 		.ascii	"long int\000"
 4708      20696E74 
 4708      00
 4709              	.LASF19:
 4710 026f 6C6F6E67 		.ascii	"long double\000"
 4710      20646F75 
 4710      626C6500 
 4711              	.LASF18:
 4712 027b 666C6F61 		.ascii	"float\000"
 4712      7400
 4713              	.LASF0:
 4714 0281 7369676E 		.ascii	"signed char\000"
 4714      65642063 
 4714      68617200 
 4715              	.LASF36:
 4716 028d 70537263 		.ascii	"pSrc1\000"
 4716      3100
 4717              	.LASF29:
 4718 0293 70496E31 		.ascii	"pIn1\000"
 4718      00
 4719              	.LASF32:
 4720 0298 61636330 		.ascii	"acc0\000"
 4720      00
 4721              	.LASF33:
 4722 029d 61636331 		.ascii	"acc1\000"
 4722      00
 4723              	.LASF34:
 4724 02a2 61636332 		.ascii	"acc2\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc46n6iO.s 			page 128


 4724      00
 4725              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
