ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_fir_lattice_f32.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_fmul
  18              		.global	__aeabi_fadd
  19              		.section	.text.arm_fir_lattice_f32,"ax",%progbits
  20              		.align	2
  21              		.global	arm_fir_lattice_f32
  22              		.code	16
  23              		.thumb_func
  24              		.type	arm_fir_lattice_f32, %function
  25              	arm_fir_lattice_f32:
  26              	.LFB82:
  27              		.file 1 "Source\\FilteringFunctions\\arm_fir_lattice_f32.c"
   1:Source\FilteringFunctions/arm_fir_lattice_f32.c **** /* ----------------------------------------------------------------------
   2:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * Project:      CMSIS DSP Library
   3:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * Title:        arm_fir_lattice_f32.c
   4:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * Description:  Processing function for the floating-point FIR Lattice filter
   5:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *
   6:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * $Date:        27. January 2017
   7:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * $Revision:    V.1.5.1
   8:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *
   9:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * Target Processor: Cortex-M cores
  10:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * -------------------------------------------------------------------- */
  11:Source\FilteringFunctions/arm_fir_lattice_f32.c **** /*
  12:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *
  14:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *
  16:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * not use this file except in compliance with the License.
  18:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * You may obtain a copy of the License at
  19:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *
  20:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *
  22:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * See the License for the specific language governing permissions and
  26:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * limitations under the License.
  27:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  */
  28:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
  29:Source\FilteringFunctions/arm_fir_lattice_f32.c **** #include "arm_math.h"
  30:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 2


  31:Source\FilteringFunctions/arm_fir_lattice_f32.c **** /**
  32:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * @ingroup groupFilters
  33:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  */
  34:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
  35:Source\FilteringFunctions/arm_fir_lattice_f32.c **** /**
  36:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * @defgroup FIR_Lattice Finite Impulse Response (FIR) Lattice Filters
  37:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *
  38:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * This set of functions implements Finite Impulse Response (FIR) lattice filters
  39:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * for Q15, Q31 and floating-point data types.  Lattice filters are used in a
  40:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * variety of adaptive filter applications.  The filter structure is feedforward and
  41:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * the net impulse response is finite length.
  42:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * The functions operate on blocks
  43:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * of input and output data and each call to the function processes
  44:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * <code>blockSize</code> samples through the filter.  <code>pSrc</code> and
  45:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * <code>pDst</code> point to input and output arrays containing <code>blockSize</code> values.
  46:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *
  47:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * \par Algorithm:
  48:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * \image html FIRLattice.gif "Finite Impulse Response Lattice filter"
  49:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * The following difference equation is implemented:
  50:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * <pre>
  51:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *    f0[n] = g0[n] = x[n]
  52:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *    fm[n] = fm-1[n] + km * gm-1[n-1] for m = 1, 2, ...M
  53:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *    gm[n] = km * fm-1[n] + gm-1[n-1] for m = 1, 2, ...M
  54:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *    y[n] = fM[n]
  55:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * </pre>
  56:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * \par
  57:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * <code>pCoeffs</code> points to tha array of reflection coefficients of size <code>numStages</cod
  58:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * Reflection Coefficients are stored in the following order.
  59:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * \par
  60:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * <pre>
  61:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *    {k1, k2, ..., kM}
  62:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * </pre>
  63:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * where M is number of stages
  64:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * \par
  65:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * <code>pState</code> points to a state array of size <code>numStages</code>.
  66:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * The state variables (g values) hold previous inputs and are stored in the following order.
  67:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * <pre>
  68:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *    {g0[n], g1[n], g2[n] ...gM-1[n]}
  69:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * </pre>
  70:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * The state variables are updated after each block of data is processed; the coefficients are unto
  71:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * \par Instance Structure
  72:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * The coefficients and state variables for a filter are stored together in an instance data struct
  73:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * A separate instance structure must be defined for each filter.
  74:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * Coefficient arrays may be shared among several instances while state variable arrays cannot be s
  75:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * There are separate instance structure declarations for each of the 3 supported data types.
  76:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *
  77:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * \par Initialization Functions
  78:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * There is also an associated initialization function for each data type.
  79:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * The initialization function performs the following operations:
  80:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * - Sets the values of the internal structure fields.
  81:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * - Zeros out the values in the state buffer.
  82:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * To do this manually without calling the init function, assign the follow subfields of the instan
  83:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * numStages, pCoeffs, pState. Also set all of the values in pState to zero.
  84:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *
  85:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * \par
  86:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * Use of the initialization function is optional.
  87:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * However, if the initialization function is used, then the instance structure cannot be placed in
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 3


  88:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * To place an instance structure into a const data section, the instance structure must be manuall
  89:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * Set the values in the state buffer to zeros and then manually initialize the instance structure 
  90:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * <pre>
  91:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *arm_fir_lattice_instance_f32 S = {numStages, pState, pCoeffs};
  92:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *arm_fir_lattice_instance_q31 S = {numStages, pState, pCoeffs};
  93:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  *arm_fir_lattice_instance_q15 S = {numStages, pState, pCoeffs};
  94:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * </pre>
  95:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * \par
  96:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * where <code>numStages</code> is the number of stages in the filter; <code>pState</code> is the a
  97:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * <code>pCoeffs</code> is the address of the coefficient buffer.
  98:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * \par Fixed-Point Behavior
  99:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * Care must be taken when using the fixed-point versions of the FIR Lattice filter functions.
 100:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * In particular, the overflow and saturation behavior of the accumulator used in each function mus
 101:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * Refer to the function specific documentation below for usage guidelines.
 102:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  */
 103:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 104:Source\FilteringFunctions/arm_fir_lattice_f32.c **** /**
 105:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * @addtogroup FIR_Lattice
 106:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  * @{
 107:Source\FilteringFunctions/arm_fir_lattice_f32.c ****  */
 108:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 109:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 110:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   /**
 111:Source\FilteringFunctions/arm_fir_lattice_f32.c ****    * @brief Processing function for the floating-point FIR lattice filter.
 112:Source\FilteringFunctions/arm_fir_lattice_f32.c ****    * @param[in]  *S        points to an instance of the floating-point FIR lattice structure.
 113:Source\FilteringFunctions/arm_fir_lattice_f32.c ****    * @param[in]  *pSrc     points to the block of input data.
 114:Source\FilteringFunctions/arm_fir_lattice_f32.c ****    * @param[out] *pDst     points to the block of output data
 115:Source\FilteringFunctions/arm_fir_lattice_f32.c ****    * @param[in]  blockSize number of samples to process.
 116:Source\FilteringFunctions/arm_fir_lattice_f32.c ****    * @return none.
 117:Source\FilteringFunctions/arm_fir_lattice_f32.c ****    */
 118:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 119:Source\FilteringFunctions/arm_fir_lattice_f32.c **** void arm_fir_lattice_f32(
 120:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   const arm_fir_lattice_instance_f32 * S,
 121:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   float32_t * pSrc,
 122:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   float32_t * pDst,
 123:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   uint32_t blockSize)
 124:Source\FilteringFunctions/arm_fir_lattice_f32.c **** {
  28              		.loc 1 124 0
  29              		.cfi_startproc
  30 0000 80B5     		push	{r7, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 90B0     		sub	sp, sp, #64
  35              		.cfi_def_cfa_offset 72
  36 0004 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  38 0006 F860     		str	r0, [r7, #12]
  39 0008 B960     		str	r1, [r7, #8]
  40 000a 7A60     		str	r2, [r7, #4]
  41 000c 3B60     		str	r3, [r7]
 125:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   float32_t *pState;                             /* State pointer */
 126:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   float32_t *pCoeffs = S->pCoeffs;               /* Coefficient pointer */
  42              		.loc 1 126 0
  43 000e FB68     		ldr	r3, [r7, #12]
  44 0010 9B68     		ldr	r3, [r3, #8]
  45 0012 7B62     		str	r3, [r7, #36]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 4


 127:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   float32_t *px;                                 /* temporary state pointer */
 128:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   float32_t *pk;                                 /* temporary coefficient pointer */
 129:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 130:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 131:Source\FilteringFunctions/arm_fir_lattice_f32.c **** #if defined (ARM_MATH_DSP)
 132:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 133:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
 134:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 135:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   float32_t fcurr1, fnext1, gcurr1, gnext1;      /* temporary variables for first sample in loop un
 136:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   float32_t fcurr2, fnext2, gnext2;              /* temporary variables for second sample in loop u
 137:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   float32_t fcurr3, fnext3, gnext3;              /* temporary variables for third sample in loop un
 138:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   float32_t fcurr4, fnext4, gnext4;              /* temporary variables for fourth sample in loop u
 139:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   uint32_t numStages = S->numStages;             /* Number of stages in the filter */
 140:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   uint32_t blkCnt, stageCnt;                     /* temporary variables for counts */
 141:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 142:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   gcurr1 = 0.0f;
 143:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   pState = &S->pState[0];
 144:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 145:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   blkCnt = blockSize >> 2;
 146:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 147:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
 148:Source\FilteringFunctions/arm_fir_lattice_f32.c ****      a second loop below computes the remaining 1 to 3 samples. */
 149:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   while (blkCnt > 0u)
 150:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   {
 151:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 152:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* Read two samples from input buffer */
 153:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* f0(n) = x(n) */
 154:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     fcurr1 = *pSrc++;
 155:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     fcurr2 = *pSrc++;
 156:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 157:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* Initialize coeff pointer */
 158:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     pk = (pCoeffs);
 159:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 160:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* Initialize state pointer */
 161:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     px = pState;
 162:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 163:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* Read g0(n-1) from state */
 164:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     gcurr1 = *px;
 165:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 166:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* Process first sample for first tap */
 167:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* f1(n) = f0(n) +  K1 * g0(n-1) */
 168:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     fnext1 = fcurr1 + ((*pk) * gcurr1);
 169:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* g1(n) = f0(n) * K1  +  g0(n-1) */
 170:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     gnext1 = (fcurr1 * (*pk)) + gcurr1;
 171:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 172:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* Process second sample for first tap */
 173:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* for sample 2 processing */
 174:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     fnext2 = fcurr2 + ((*pk) * fcurr1);
 175:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     gnext2 = (fcurr2 * (*pk)) + fcurr1;
 176:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 177:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* Read next two samples from input buffer */
 178:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* f0(n+2) = x(n+2) */
 179:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     fcurr3 = *pSrc++;
 180:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     fcurr4 = *pSrc++;
 181:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 182:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* Copy only last input samples into the state buffer
 183:Source\FilteringFunctions/arm_fir_lattice_f32.c ****        which will be used for next four samples processing */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 5


 184:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     *px++ = fcurr4;
 185:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 186:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* Process third sample for first tap */
 187:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     fnext3 = fcurr3 + ((*pk) * fcurr2);
 188:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     gnext3 = (fcurr3 * (*pk)) + fcurr2;
 189:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 190:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* Process fourth sample for first tap */
 191:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     fnext4 = fcurr4 + ((*pk) * fcurr3);
 192:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     gnext4 = (fcurr4 * (*pk++)) + fcurr3;
 193:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 194:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* Update of f values for next coefficient set processing */
 195:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     fcurr1 = fnext1;
 196:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     fcurr2 = fnext2;
 197:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     fcurr3 = fnext3;
 198:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     fcurr4 = fnext4;
 199:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 200:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* Loop unrolling.  Process 4 taps at a time . */
 201:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     stageCnt = (numStages - 1u) >> 2u;
 202:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 203:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* Loop over the number of taps.  Unroll by a factor of 4.
 204:Source\FilteringFunctions/arm_fir_lattice_f32.c ****      ** Repeat until we've computed numStages-3 coefficients. */
 205:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 206:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* Process 2nd, 3rd, 4th and 5th taps ... here */
 207:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     while (stageCnt > 0u)
 208:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     {
 209:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Read g1(n-1), g3(n-1) .... from state */
 210:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gcurr1 = *px;
 211:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 212:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* save g1(n) in state buffer */
 213:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       *px++ = gnext4;
 214:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 215:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Process first sample for 2nd, 6th .. tap */
 216:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Sample processing for K2, K6.... */
 217:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* f2(n) = f1(n) +  K2 * g1(n-1) */
 218:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fnext1 = fcurr1 + ((*pk) * gcurr1);
 219:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Process second sample for 2nd, 6th .. tap */
 220:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* for sample 2 processing */
 221:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fnext2 = fcurr2 + ((*pk) * gnext1);
 222:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Process third sample for 2nd, 6th .. tap */
 223:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fnext3 = fcurr3 + ((*pk) * gnext2);
 224:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Process fourth sample for 2nd, 6th .. tap */
 225:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fnext4 = fcurr4 + ((*pk) * gnext3);
 226:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 227:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* g2(n) = f1(n) * K2  +  g1(n-1) */
 228:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Calculation of state values for next stage */
 229:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext4 = (fcurr4 * (*pk)) + gnext3;
 230:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext3 = (fcurr3 * (*pk)) + gnext2;
 231:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext2 = (fcurr2 * (*pk)) + gnext1;
 232:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext1 = (fcurr1 * (*pk++)) + gcurr1;
 233:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 234:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 235:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Read g2(n-1), g4(n-1) .... from state */
 236:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gcurr1 = *px;
 237:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 238:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* save g2(n) in state buffer */
 239:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       *px++ = gnext4;
 240:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 6


 241:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Sample processing for K3, K7.... */
 242:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Process first sample for 3rd, 7th .. tap */
 243:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* f3(n) = f2(n) +  K3 * g2(n-1) */
 244:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fcurr1 = fnext1 + ((*pk) * gcurr1);
 245:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Process second sample for 3rd, 7th .. tap */
 246:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fcurr2 = fnext2 + ((*pk) * gnext1);
 247:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Process third sample for 3rd, 7th .. tap */
 248:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fcurr3 = fnext3 + ((*pk) * gnext2);
 249:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Process fourth sample for 3rd, 7th .. tap */
 250:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fcurr4 = fnext4 + ((*pk) * gnext3);
 251:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 252:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Calculation of state values for next stage */
 253:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* g3(n) = f2(n) * K3  +  g2(n-1) */
 254:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext4 = (fnext4 * (*pk)) + gnext3;
 255:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext3 = (fnext3 * (*pk)) + gnext2;
 256:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext2 = (fnext2 * (*pk)) + gnext1;
 257:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext1 = (fnext1 * (*pk++)) + gcurr1;
 258:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 259:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 260:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Read g1(n-1), g3(n-1) .... from state */
 261:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gcurr1 = *px;
 262:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 263:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* save g3(n) in state buffer */
 264:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       *px++ = gnext4;
 265:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 266:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Sample processing for K4, K8.... */
 267:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Process first sample for 4th, 8th .. tap */
 268:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* f4(n) = f3(n) +  K4 * g3(n-1) */
 269:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fnext1 = fcurr1 + ((*pk) * gcurr1);
 270:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Process second sample for 4th, 8th .. tap */
 271:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* for sample 2 processing */
 272:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fnext2 = fcurr2 + ((*pk) * gnext1);
 273:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Process third sample for 4th, 8th .. tap */
 274:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fnext3 = fcurr3 + ((*pk) * gnext2);
 275:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Process fourth sample for 4th, 8th .. tap */
 276:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fnext4 = fcurr4 + ((*pk) * gnext3);
 277:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 278:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* g4(n) = f3(n) * K4  +  g3(n-1) */
 279:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Calculation of state values for next stage */
 280:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext4 = (fcurr4 * (*pk)) + gnext3;
 281:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext3 = (fcurr3 * (*pk)) + gnext2;
 282:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext2 = (fcurr2 * (*pk)) + gnext1;
 283:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext1 = (fcurr1 * (*pk++)) + gcurr1;
 284:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 285:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Read g2(n-1), g4(n-1) .... from state */
 286:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gcurr1 = *px;
 287:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 288:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* save g4(n) in state buffer */
 289:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       *px++ = gnext4;
 290:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 291:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Sample processing for K5, K9.... */
 292:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Process first sample for 5th, 9th .. tap */
 293:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* f5(n) = f4(n) +  K5 * g4(n-1) */
 294:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fcurr1 = fnext1 + ((*pk) * gcurr1);
 295:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Process second sample for 5th, 9th .. tap */
 296:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fcurr2 = fnext2 + ((*pk) * gnext1);
 297:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Process third sample for 5th, 9th .. tap */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 7


 298:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fcurr3 = fnext3 + ((*pk) * gnext2);
 299:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Process fourth sample for 5th, 9th .. tap */
 300:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fcurr4 = fnext4 + ((*pk) * gnext3);
 301:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 302:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Calculation of state values for next stage */
 303:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* g5(n) = f4(n) * K5  +  g4(n-1) */
 304:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext4 = (fnext4 * (*pk)) + gnext3;
 305:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext3 = (fnext3 * (*pk)) + gnext2;
 306:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext2 = (fnext2 * (*pk)) + gnext1;
 307:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext1 = (fnext1 * (*pk++)) + gcurr1;
 308:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 309:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       stageCnt--;
 310:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     }
 311:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 312:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* If the (filter length -1) is not a multiple of 4, compute the remaining filter taps */
 313:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     stageCnt = (numStages - 1u) % 0x4u;
 314:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 315:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     while (stageCnt > 0u)
 316:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     {
 317:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gcurr1 = *px;
 318:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 319:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* save g value in state buffer */
 320:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       *px++ = gnext4;
 321:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 322:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Process four samples for last three taps here */
 323:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fnext1 = fcurr1 + ((*pk) * gcurr1);
 324:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fnext2 = fcurr2 + ((*pk) * gnext1);
 325:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fnext3 = fcurr3 + ((*pk) * gnext2);
 326:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fnext4 = fcurr4 + ((*pk) * gnext3);
 327:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 328:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* g1(n) = f0(n) * K1  +  g0(n-1) */
 329:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext4 = (fcurr4 * (*pk)) + gnext3;
 330:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext3 = (fcurr3 * (*pk)) + gnext2;
 331:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext2 = (fcurr2 * (*pk)) + gnext1;
 332:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext1 = (fcurr1 * (*pk++)) + gcurr1;
 333:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 334:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Update of f values for next coefficient set processing */
 335:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fcurr1 = fnext1;
 336:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fcurr2 = fnext2;
 337:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fcurr3 = fnext3;
 338:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fcurr4 = fnext4;
 339:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 340:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       stageCnt--;
 341:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 342:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     }
 343:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 344:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* The results in the 4 accumulators, store in the destination buffer. */
 345:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* y(n) = fN(n) */
 346:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     *pDst++ = fcurr1;
 347:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     *pDst++ = fcurr2;
 348:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     *pDst++ = fcurr3;
 349:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     *pDst++ = fcurr4;
 350:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 351:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     blkCnt--;
 352:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   }
 353:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 354:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 8


 355:Source\FilteringFunctions/arm_fir_lattice_f32.c ****    ** No loop unrolling is used. */
 356:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   blkCnt = blockSize % 0x4u;
 357:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 358:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   while (blkCnt > 0u)
 359:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   {
 360:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* f0(n) = x(n) */
 361:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     fcurr1 = *pSrc++;
 362:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 363:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* Initialize coeff pointer */
 364:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     pk = (pCoeffs);
 365:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 366:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* Initialize state pointer */
 367:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     px = pState;
 368:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 369:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* read g2(n) from state buffer */
 370:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     gcurr1 = *px;
 371:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 372:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* for sample 1 processing */
 373:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* f1(n) = f0(n) +  K1 * g0(n-1) */
 374:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     fnext1 = fcurr1 + ((*pk) * gcurr1);
 375:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* g1(n) = f0(n) * K1  +  g0(n-1) */
 376:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     gnext1 = (fcurr1 * (*pk++)) + gcurr1;
 377:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 378:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* save g1(n) in state buffer */
 379:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     *px++ = fcurr1;
 380:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 381:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* f1(n) is saved in fcurr1
 382:Source\FilteringFunctions/arm_fir_lattice_f32.c ****        for next stage processing */
 383:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     fcurr1 = fnext1;
 384:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 385:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     stageCnt = (numStages - 1u);
 386:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 387:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* stage loop */
 388:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     while (stageCnt > 0u)
 389:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     {
 390:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* read g2(n) from state buffer */
 391:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gcurr1 = *px;
 392:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 393:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* save g1(n) in state buffer */
 394:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       *px++ = gnext1;
 395:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 396:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Sample processing for K2, K3.... */
 397:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* f2(n) = f1(n) +  K2 * g1(n-1) */
 398:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fnext1 = fcurr1 + ((*pk) * gcurr1);
 399:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* g2(n) = f1(n) * K2  +  g1(n-1) */
 400:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext1 = (fcurr1 * (*pk++)) + gcurr1;
 401:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 402:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* f1(n) is saved in fcurr1
 403:Source\FilteringFunctions/arm_fir_lattice_f32.c ****          for next stage processing */
 404:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fcurr1 = fnext1;
 405:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 406:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       stageCnt--;
 407:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 408:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     }
 409:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 410:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* y(n) = fN(n) */
 411:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     *pDst++ = fcurr1;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 9


 412:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 413:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     blkCnt--;
 414:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 415:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   }
 416:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 417:Source\FilteringFunctions/arm_fir_lattice_f32.c **** #else
 418:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 419:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   /* Run the below code for Cortex-M0 */
 420:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 421:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   float32_t fcurr, fnext, gcurr, gnext;          /* temporary variables */
 422:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   uint32_t numStages = S->numStages;             /* Length of the filter */
  46              		.loc 1 422 0
  47 0014 FB68     		ldr	r3, [r7, #12]
  48 0016 1B88     		ldrh	r3, [r3]
  49 0018 3B62     		str	r3, [r7, #32]
 423:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   uint32_t blkCnt, stageCnt;                     /* temporary variables for counts */
 424:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 425:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   pState = &S->pState[0];
  50              		.loc 1 425 0
  51 001a FB68     		ldr	r3, [r7, #12]
  52 001c 5B68     		ldr	r3, [r3, #4]
  53 001e FB61     		str	r3, [r7, #28]
 426:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 427:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   blkCnt = blockSize;
  54              		.loc 1 427 0
  55 0020 3B68     		ldr	r3, [r7]
  56 0022 FB62     		str	r3, [r7, #44]
 428:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 429:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   while (blkCnt > 0u)
  57              		.loc 1 429 0
  58 0024 66E0     		b	.L2
  59              	.L5:
 430:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   {
 431:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* f0(n) = x(n) */
 432:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     fcurr = *pSrc++;
  60              		.loc 1 432 0
  61 0026 BB68     		ldr	r3, [r7, #8]
  62 0028 1A1D     		add	r2, r3, #4
  63 002a BA60     		str	r2, [r7, #8]
  64 002c 1B68     		ldr	r3, [r3]
  65 002e 7B63     		str	r3, [r7, #52]
 433:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 434:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* Initialize coeff pointer */
 435:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     pk = pCoeffs;
  66              		.loc 1 435 0
  67 0030 7B6A     		ldr	r3, [r7, #36]
  68 0032 BB63     		str	r3, [r7, #56]
 436:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 437:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* Initialize state pointer */
 438:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     px = pState;
  69              		.loc 1 438 0
  70 0034 FB69     		ldr	r3, [r7, #28]
  71 0036 FB63     		str	r3, [r7, #60]
 439:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 440:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* read g0(n-1) from state buffer */
 441:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     gcurr = *px;
  72              		.loc 1 441 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 10


  73 0038 FB6B     		ldr	r3, [r7, #60]
  74 003a 1B68     		ldr	r3, [r3]
  75 003c BB61     		str	r3, [r7, #24]
 442:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 443:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* for sample 1 processing */
 444:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* f1(n) = f0(n) +  K1 * g0(n-1) */
 445:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     fnext = fcurr + ((*pk) * gcurr);
  76              		.loc 1 445 0
  77 003e BB6B     		ldr	r3, [r7, #56]
  78 0040 1B68     		ldr	r3, [r3]
  79 0042 181C     		add	r0, r3, #0
  80 0044 B969     		ldr	r1, [r7, #24]
  81 0046 FFF7FEFF 		bl	__aeabi_fmul
  82 004a 031C     		add	r3, r0, #0
  83 004c 181C     		add	r0, r3, #0
  84 004e 796B     		ldr	r1, [r7, #52]
  85 0050 FFF7FEFF 		bl	__aeabi_fadd
  86 0054 031C     		add	r3, r0, #0
  87 0056 7B61     		str	r3, [r7, #20]
 446:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* g1(n) = f0(n) * K1  +  g0(n-1) */
 447:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     gnext = (fcurr * (*pk++)) + gcurr;
  88              		.loc 1 447 0
  89 0058 BB6B     		ldr	r3, [r7, #56]
  90 005a 1A1D     		add	r2, r3, #4
  91 005c BA63     		str	r2, [r7, #56]
  92 005e 1B68     		ldr	r3, [r3]
  93 0060 181C     		add	r0, r3, #0
  94 0062 796B     		ldr	r1, [r7, #52]
  95 0064 FFF7FEFF 		bl	__aeabi_fmul
  96 0068 031C     		add	r3, r0, #0
  97 006a 181C     		add	r0, r3, #0
  98 006c B969     		ldr	r1, [r7, #24]
  99 006e FFF7FEFF 		bl	__aeabi_fadd
 100 0072 031C     		add	r3, r0, #0
 101 0074 3B63     		str	r3, [r7, #48]
 448:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 449:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* save f0(n) in state buffer */
 450:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     *px++ = fcurr;
 102              		.loc 1 450 0
 103 0076 FB6B     		ldr	r3, [r7, #60]
 104 0078 1A1D     		add	r2, r3, #4
 105 007a FA63     		str	r2, [r7, #60]
 106 007c 7A6B     		ldr	r2, [r7, #52]
 107 007e 1A60     		str	r2, [r3]
 451:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 452:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* f1(n) is saved in fcurr
 453:Source\FilteringFunctions/arm_fir_lattice_f32.c ****        for next stage processing */
 454:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     fcurr = fnext;
 108              		.loc 1 454 0
 109 0080 7B69     		ldr	r3, [r7, #20]
 110 0082 7B63     		str	r3, [r7, #52]
 455:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 456:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     stageCnt = (numStages - 1u);
 111              		.loc 1 456 0
 112 0084 3B6A     		ldr	r3, [r7, #32]
 113 0086 013B     		sub	r3, r3, #1
 114 0088 BB62     		str	r3, [r7, #40]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 11


 457:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 458:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* stage loop */
 459:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     while (stageCnt > 0u)
 115              		.loc 1 459 0
 116 008a 28E0     		b	.L3
 117              	.L4:
 460:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     {
 461:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* read g2(n) from state buffer */
 462:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gcurr = *px;
 118              		.loc 1 462 0
 119 008c FB6B     		ldr	r3, [r7, #60]
 120 008e 1B68     		ldr	r3, [r3]
 121 0090 BB61     		str	r3, [r7, #24]
 463:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 464:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* save g1(n) in state buffer */
 465:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       *px++ = gnext;
 122              		.loc 1 465 0
 123 0092 FB6B     		ldr	r3, [r7, #60]
 124 0094 1A1D     		add	r2, r3, #4
 125 0096 FA63     		str	r2, [r7, #60]
 126 0098 3A6B     		ldr	r2, [r7, #48]
 127 009a 1A60     		str	r2, [r3]
 466:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 467:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* Sample processing for K2, K3.... */
 468:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* f2(n) = f1(n) +  K2 * g1(n-1) */
 469:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fnext = fcurr + ((*pk) * gcurr);
 128              		.loc 1 469 0
 129 009c BB6B     		ldr	r3, [r7, #56]
 130 009e 1B68     		ldr	r3, [r3]
 131 00a0 181C     		add	r0, r3, #0
 132 00a2 B969     		ldr	r1, [r7, #24]
 133 00a4 FFF7FEFF 		bl	__aeabi_fmul
 134 00a8 031C     		add	r3, r0, #0
 135 00aa 181C     		add	r0, r3, #0
 136 00ac 796B     		ldr	r1, [r7, #52]
 137 00ae FFF7FEFF 		bl	__aeabi_fadd
 138 00b2 031C     		add	r3, r0, #0
 139 00b4 7B61     		str	r3, [r7, #20]
 470:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* g2(n) = f1(n) * K2  +  g1(n-1) */
 471:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       gnext = (fcurr * (*pk++)) + gcurr;
 140              		.loc 1 471 0
 141 00b6 BB6B     		ldr	r3, [r7, #56]
 142 00b8 1A1D     		add	r2, r3, #4
 143 00ba BA63     		str	r2, [r7, #56]
 144 00bc 1B68     		ldr	r3, [r3]
 145 00be 181C     		add	r0, r3, #0
 146 00c0 796B     		ldr	r1, [r7, #52]
 147 00c2 FFF7FEFF 		bl	__aeabi_fmul
 148 00c6 031C     		add	r3, r0, #0
 149 00c8 181C     		add	r0, r3, #0
 150 00ca B969     		ldr	r1, [r7, #24]
 151 00cc FFF7FEFF 		bl	__aeabi_fadd
 152 00d0 031C     		add	r3, r0, #0
 153 00d2 3B63     		str	r3, [r7, #48]
 472:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 473:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       /* f1(n) is saved in fcurr1
 474:Source\FilteringFunctions/arm_fir_lattice_f32.c ****          for next stage processing */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 12


 475:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       fcurr = fnext;
 154              		.loc 1 475 0
 155 00d4 7B69     		ldr	r3, [r7, #20]
 156 00d6 7B63     		str	r3, [r7, #52]
 476:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 477:Source\FilteringFunctions/arm_fir_lattice_f32.c ****       stageCnt--;
 157              		.loc 1 477 0
 158 00d8 BB6A     		ldr	r3, [r7, #40]
 159 00da 013B     		sub	r3, r3, #1
 160 00dc BB62     		str	r3, [r7, #40]
 161              	.L3:
 459:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     {
 162              		.loc 1 459 0
 163 00de BB6A     		ldr	r3, [r7, #40]
 164 00e0 002B     		cmp	r3, #0
 165 00e2 D3D1     		bne	.L4
 478:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 479:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     }
 480:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 481:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     /* y(n) = fN(n) */
 482:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     *pDst++ = fcurr;
 166              		.loc 1 482 0
 167 00e4 7B68     		ldr	r3, [r7, #4]
 168 00e6 1A1D     		add	r2, r3, #4
 169 00e8 7A60     		str	r2, [r7, #4]
 170 00ea 7A6B     		ldr	r2, [r7, #52]
 171 00ec 1A60     		str	r2, [r3]
 483:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 484:Source\FilteringFunctions/arm_fir_lattice_f32.c ****     blkCnt--;
 172              		.loc 1 484 0
 173 00ee FB6A     		ldr	r3, [r7, #44]
 174 00f0 013B     		sub	r3, r3, #1
 175 00f2 FB62     		str	r3, [r7, #44]
 176              	.L2:
 429:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   {
 177              		.loc 1 429 0
 178 00f4 FB6A     		ldr	r3, [r7, #44]
 179 00f6 002B     		cmp	r3, #0
 180 00f8 95D1     		bne	.L5
 485:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 486:Source\FilteringFunctions/arm_fir_lattice_f32.c ****   }
 487:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 488:Source\FilteringFunctions/arm_fir_lattice_f32.c **** #endif /*   #if defined (ARM_MATH_DSP) */
 489:Source\FilteringFunctions/arm_fir_lattice_f32.c **** 
 490:Source\FilteringFunctions/arm_fir_lattice_f32.c **** }
 181              		.loc 1 490 0
 182 00fa BD46     		mov	sp, r7
 183 00fc 10B0     		add	sp, sp, #64
 184              		@ sp needed
 185 00fe 80BD     		pop	{r7, pc}
 186              		.cfi_endproc
 187              	.LFE82:
 188              		.size	arm_fir_lattice_f32, .-arm_fir_lattice_f32
 189              		.text
 190              	.Letext0:
 191              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 192              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 13


 193              		.file 4 ".\\Include/arm_math.h"
 194              		.section	.debug_info,"",%progbits
 195              	.Ldebug_info0:
 196 0000 FE010000 		.4byte	0x1fe
 197 0004 0400     		.2byte	0x4
 198 0006 00000000 		.4byte	.Ldebug_abbrev0
 199 000a 04       		.byte	0x4
 200 000b 01       		.uleb128 0x1
 201 000c 35010000 		.4byte	.LASF32
 202 0010 01       		.byte	0x1
 203 0011 4D000000 		.4byte	.LASF33
 204 0015 07000000 		.4byte	.LASF34
 205 0019 00000000 		.4byte	.Ldebug_ranges0+0
 206 001d 00000000 		.4byte	0
 207 0021 00000000 		.4byte	.Ldebug_line0
 208 0025 02       		.uleb128 0x2
 209 0026 01       		.byte	0x1
 210 0027 06       		.byte	0x6
 211 0028 3C020000 		.4byte	.LASF0
 212 002c 02       		.uleb128 0x2
 213 002d 01       		.byte	0x1
 214 002e 08       		.byte	0x8
 215 002f 83000000 		.4byte	.LASF1
 216 0033 02       		.uleb128 0x2
 217 0034 02       		.byte	0x2
 218 0035 05       		.byte	0x5
 219 0036 FD010000 		.4byte	.LASF2
 220 003a 03       		.uleb128 0x3
 221 003b D7000000 		.4byte	.LASF5
 222 003f 02       		.byte	0x2
 223 0040 2B       		.byte	0x2b
 224 0041 45000000 		.4byte	0x45
 225 0045 02       		.uleb128 0x2
 226 0046 02       		.byte	0x2
 227 0047 07       		.byte	0x7
 228 0048 B0000000 		.4byte	.LASF3
 229 004c 02       		.uleb128 0x2
 230 004d 04       		.byte	0x4
 231 004e 05       		.byte	0x5
 232 004f 27020000 		.4byte	.LASF4
 233 0053 03       		.uleb128 0x3
 234 0054 E9000000 		.4byte	.LASF6
 235 0058 02       		.byte	0x2
 236 0059 41       		.byte	0x41
 237 005a 5E000000 		.4byte	0x5e
 238 005e 02       		.uleb128 0x2
 239 005f 04       		.byte	0x4
 240 0060 07       		.byte	0x7
 241 0061 98000000 		.4byte	.LASF7
 242 0065 02       		.uleb128 0x2
 243 0066 08       		.byte	0x8
 244 0067 05       		.byte	0x5
 245 0068 D6010000 		.4byte	.LASF8
 246 006c 02       		.uleb128 0x2
 247 006d 08       		.byte	0x8
 248 006e 07       		.byte	0x7
 249 006f 1E010000 		.4byte	.LASF9
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 14


 250 0073 04       		.uleb128 0x4
 251 0074 04       		.byte	0x4
 252 0075 05       		.byte	0x5
 253 0076 696E7400 		.ascii	"int\000"
 254 007a 02       		.uleb128 0x2
 255 007b 04       		.byte	0x4
 256 007c 07       		.byte	0x7
 257 007d 11010000 		.4byte	.LASF10
 258 0081 03       		.uleb128 0x3
 259 0082 0D020000 		.4byte	.LASF11
 260 0086 03       		.byte	0x3
 261 0087 21       		.byte	0x21
 262 0088 3A000000 		.4byte	0x3a
 263 008c 03       		.uleb128 0x3
 264 008d 1E020000 		.4byte	.LASF12
 265 0091 03       		.byte	0x3
 266 0092 2D       		.byte	0x2d
 267 0093 53000000 		.4byte	0x53
 268 0097 02       		.uleb128 0x2
 269 0098 04       		.byte	0x4
 270 0099 07       		.byte	0x7
 271 009a CD010000 		.4byte	.LASF13
 272 009e 02       		.uleb128 0x2
 273 009f 01       		.byte	0x1
 274 00a0 08       		.byte	0x8
 275 00a1 EE010000 		.4byte	.LASF14
 276 00a5 02       		.uleb128 0x2
 277 00a6 08       		.byte	0x8
 278 00a7 04       		.byte	0x4
 279 00a8 E2000000 		.4byte	.LASF15
 280 00ac 02       		.uleb128 0x2
 281 00ad 04       		.byte	0x4
 282 00ae 04       		.byte	0x4
 283 00af 7D000000 		.4byte	.LASF16
 284 00b3 02       		.uleb128 0x2
 285 00b4 08       		.byte	0x8
 286 00b5 04       		.byte	0x4
 287 00b6 30020000 		.4byte	.LASF17
 288 00ba 05       		.uleb128 0x5
 289 00bb F3010000 		.4byte	.LASF18
 290 00bf 04       		.byte	0x4
 291 00c0 A501     		.2byte	0x1a5
 292 00c2 AC000000 		.4byte	0xac
 293 00c6 06       		.uleb128 0x6
 294 00c7 04       		.byte	0x4
 295 00c8 BA000000 		.4byte	0xba
 296 00cc 07       		.uleb128 0x7
 297 00cd 0C       		.byte	0xc
 298 00ce 04       		.byte	0x4
 299 00cf E00E     		.2byte	0xee0
 300 00d1 FD000000 		.4byte	0xfd
 301 00d5 08       		.uleb128 0x8
 302 00d6 4D020000 		.4byte	.LASF19
 303 00da 04       		.byte	0x4
 304 00db E20E     		.2byte	0xee2
 305 00dd 81000000 		.4byte	0x81
 306 00e1 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 15


 307 00e2 08       		.uleb128 0x8
 308 00e3 00000000 		.4byte	.LASF20
 309 00e7 04       		.byte	0x4
 310 00e8 E30E     		.2byte	0xee3
 311 00ea C6000000 		.4byte	0xc6
 312 00ee 04       		.byte	0x4
 313 00ef 08       		.uleb128 0x8
 314 00f0 16020000 		.4byte	.LASF21
 315 00f4 04       		.byte	0x4
 316 00f5 E40E     		.2byte	0xee4
 317 00f7 C6000000 		.4byte	0xc6
 318 00fb 08       		.byte	0x8
 319 00fc 00       		.byte	0
 320 00fd 05       		.uleb128 0x5
 321 00fe F4000000 		.4byte	.LASF22
 322 0102 04       		.byte	0x4
 323 0103 E50E     		.2byte	0xee5
 324 0105 CC000000 		.4byte	0xcc
 325 0109 09       		.uleb128 0x9
 326 010a 57020000 		.4byte	.LASF35
 327 010e 01       		.byte	0x1
 328 010f 77       		.byte	0x77
 329 0110 00000000 		.4byte	.LFB82
 330 0114 00010000 		.4byte	.LFE82-.LFB82
 331 0118 01       		.uleb128 0x1
 332 0119 9C       		.byte	0x9c
 333 011a F6010000 		.4byte	0x1f6
 334 011e 0A       		.uleb128 0xa
 335 011f 5300     		.ascii	"S\000"
 336 0121 01       		.byte	0x1
 337 0122 78       		.byte	0x78
 338 0123 F6010000 		.4byte	0x1f6
 339 0127 02       		.uleb128 0x2
 340 0128 91       		.byte	0x91
 341 0129 44       		.sleb128 -60
 342 012a 0B       		.uleb128 0xb
 343 012b 48020000 		.4byte	.LASF23
 344 012f 01       		.byte	0x1
 345 0130 79       		.byte	0x79
 346 0131 C6000000 		.4byte	0xc6
 347 0135 02       		.uleb128 0x2
 348 0136 91       		.byte	0x91
 349 0137 40       		.sleb128 -64
 350 0138 0B       		.uleb128 0xb
 351 0139 C9000000 		.4byte	.LASF24
 352 013d 01       		.byte	0x1
 353 013e 7A       		.byte	0x7a
 354 013f C6000000 		.4byte	0xc6
 355 0143 03       		.uleb128 0x3
 356 0144 91       		.byte	0x91
 357 0145 BC7F     		.sleb128 -68
 358 0147 0B       		.uleb128 0xb
 359 0148 E4010000 		.4byte	.LASF25
 360 014c 01       		.byte	0x1
 361 014d 7B       		.byte	0x7b
 362 014e 8C000000 		.4byte	0x8c
 363 0152 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 16


 364 0153 91       		.byte	0x91
 365 0154 B87F     		.sleb128 -72
 366 0156 0C       		.uleb128 0xc
 367 0157 00000000 		.4byte	.LASF20
 368 015b 01       		.byte	0x1
 369 015c 7D       		.byte	0x7d
 370 015d C6000000 		.4byte	0xc6
 371 0161 02       		.uleb128 0x2
 372 0162 91       		.byte	0x91
 373 0163 54       		.sleb128 -44
 374 0164 0C       		.uleb128 0xc
 375 0165 16020000 		.4byte	.LASF21
 376 0169 01       		.byte	0x1
 377 016a 7E       		.byte	0x7e
 378 016b C6000000 		.4byte	0xc6
 379 016f 02       		.uleb128 0x2
 380 0170 91       		.byte	0x91
 381 0171 5C       		.sleb128 -36
 382 0172 0D       		.uleb128 0xd
 383 0173 707800   		.ascii	"px\000"
 384 0176 01       		.byte	0x1
 385 0177 7F       		.byte	0x7f
 386 0178 C6000000 		.4byte	0xc6
 387 017c 02       		.uleb128 0x2
 388 017d 91       		.byte	0x91
 389 017e 74       		.sleb128 -12
 390 017f 0D       		.uleb128 0xd
 391 0180 706B00   		.ascii	"pk\000"
 392 0183 01       		.byte	0x1
 393 0184 80       		.byte	0x80
 394 0185 C6000000 		.4byte	0xc6
 395 0189 02       		.uleb128 0x2
 396 018a 91       		.byte	0x91
 397 018b 70       		.sleb128 -16
 398 018c 0E       		.uleb128 0xe
 399 018d C3000000 		.4byte	.LASF26
 400 0191 01       		.byte	0x1
 401 0192 A501     		.2byte	0x1a5
 402 0194 BA000000 		.4byte	0xba
 403 0198 02       		.uleb128 0x2
 404 0199 91       		.byte	0x91
 405 019a 6C       		.sleb128 -20
 406 019b 0E       		.uleb128 0xe
 407 019c AA000000 		.4byte	.LASF27
 408 01a0 01       		.byte	0x1
 409 01a1 A501     		.2byte	0x1a5
 410 01a3 BA000000 		.4byte	0xba
 411 01a7 02       		.uleb128 0x2
 412 01a8 91       		.byte	0x91
 413 01a9 4C       		.sleb128 -52
 414 01aa 0E       		.uleb128 0xe
 415 01ab C7010000 		.4byte	.LASF28
 416 01af 01       		.byte	0x1
 417 01b0 A501     		.2byte	0x1a5
 418 01b2 BA000000 		.4byte	0xba
 419 01b6 02       		.uleb128 0x2
 420 01b7 91       		.byte	0x91
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 17


 421 01b8 50       		.sleb128 -48
 422 01b9 0E       		.uleb128 0xe
 423 01ba 07020000 		.4byte	.LASF29
 424 01be 01       		.byte	0x1
 425 01bf A501     		.2byte	0x1a5
 426 01c1 BA000000 		.4byte	0xba
 427 01c5 02       		.uleb128 0x2
 428 01c6 91       		.byte	0x91
 429 01c7 68       		.sleb128 -24
 430 01c8 0E       		.uleb128 0xe
 431 01c9 4D020000 		.4byte	.LASF19
 432 01cd 01       		.byte	0x1
 433 01ce A601     		.2byte	0x1a6
 434 01d0 8C000000 		.4byte	0x8c
 435 01d4 02       		.uleb128 0x2
 436 01d5 91       		.byte	0x91
 437 01d6 58       		.sleb128 -40
 438 01d7 0E       		.uleb128 0xe
 439 01d8 91000000 		.4byte	.LASF30
 440 01dc 01       		.byte	0x1
 441 01dd A701     		.2byte	0x1a7
 442 01df 8C000000 		.4byte	0x8c
 443 01e3 02       		.uleb128 0x2
 444 01e4 91       		.byte	0x91
 445 01e5 64       		.sleb128 -28
 446 01e6 0E       		.uleb128 0xe
 447 01e7 CE000000 		.4byte	.LASF31
 448 01eb 01       		.byte	0x1
 449 01ec A701     		.2byte	0x1a7
 450 01ee 8C000000 		.4byte	0x8c
 451 01f2 02       		.uleb128 0x2
 452 01f3 91       		.byte	0x91
 453 01f4 60       		.sleb128 -32
 454 01f5 00       		.byte	0
 455 01f6 06       		.uleb128 0x6
 456 01f7 04       		.byte	0x4
 457 01f8 FC010000 		.4byte	0x1fc
 458 01fc 0F       		.uleb128 0xf
 459 01fd FD000000 		.4byte	0xfd
 460 0201 00       		.byte	0
 461              		.section	.debug_abbrev,"",%progbits
 462              	.Ldebug_abbrev0:
 463 0000 01       		.uleb128 0x1
 464 0001 11       		.uleb128 0x11
 465 0002 01       		.byte	0x1
 466 0003 25       		.uleb128 0x25
 467 0004 0E       		.uleb128 0xe
 468 0005 13       		.uleb128 0x13
 469 0006 0B       		.uleb128 0xb
 470 0007 03       		.uleb128 0x3
 471 0008 0E       		.uleb128 0xe
 472 0009 1B       		.uleb128 0x1b
 473 000a 0E       		.uleb128 0xe
 474 000b 55       		.uleb128 0x55
 475 000c 17       		.uleb128 0x17
 476 000d 11       		.uleb128 0x11
 477 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 18


 478 000f 10       		.uleb128 0x10
 479 0010 17       		.uleb128 0x17
 480 0011 00       		.byte	0
 481 0012 00       		.byte	0
 482 0013 02       		.uleb128 0x2
 483 0014 24       		.uleb128 0x24
 484 0015 00       		.byte	0
 485 0016 0B       		.uleb128 0xb
 486 0017 0B       		.uleb128 0xb
 487 0018 3E       		.uleb128 0x3e
 488 0019 0B       		.uleb128 0xb
 489 001a 03       		.uleb128 0x3
 490 001b 0E       		.uleb128 0xe
 491 001c 00       		.byte	0
 492 001d 00       		.byte	0
 493 001e 03       		.uleb128 0x3
 494 001f 16       		.uleb128 0x16
 495 0020 00       		.byte	0
 496 0021 03       		.uleb128 0x3
 497 0022 0E       		.uleb128 0xe
 498 0023 3A       		.uleb128 0x3a
 499 0024 0B       		.uleb128 0xb
 500 0025 3B       		.uleb128 0x3b
 501 0026 0B       		.uleb128 0xb
 502 0027 49       		.uleb128 0x49
 503 0028 13       		.uleb128 0x13
 504 0029 00       		.byte	0
 505 002a 00       		.byte	0
 506 002b 04       		.uleb128 0x4
 507 002c 24       		.uleb128 0x24
 508 002d 00       		.byte	0
 509 002e 0B       		.uleb128 0xb
 510 002f 0B       		.uleb128 0xb
 511 0030 3E       		.uleb128 0x3e
 512 0031 0B       		.uleb128 0xb
 513 0032 03       		.uleb128 0x3
 514 0033 08       		.uleb128 0x8
 515 0034 00       		.byte	0
 516 0035 00       		.byte	0
 517 0036 05       		.uleb128 0x5
 518 0037 16       		.uleb128 0x16
 519 0038 00       		.byte	0
 520 0039 03       		.uleb128 0x3
 521 003a 0E       		.uleb128 0xe
 522 003b 3A       		.uleb128 0x3a
 523 003c 0B       		.uleb128 0xb
 524 003d 3B       		.uleb128 0x3b
 525 003e 05       		.uleb128 0x5
 526 003f 49       		.uleb128 0x49
 527 0040 13       		.uleb128 0x13
 528 0041 00       		.byte	0
 529 0042 00       		.byte	0
 530 0043 06       		.uleb128 0x6
 531 0044 0F       		.uleb128 0xf
 532 0045 00       		.byte	0
 533 0046 0B       		.uleb128 0xb
 534 0047 0B       		.uleb128 0xb
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 19


 535 0048 49       		.uleb128 0x49
 536 0049 13       		.uleb128 0x13
 537 004a 00       		.byte	0
 538 004b 00       		.byte	0
 539 004c 07       		.uleb128 0x7
 540 004d 13       		.uleb128 0x13
 541 004e 01       		.byte	0x1
 542 004f 0B       		.uleb128 0xb
 543 0050 0B       		.uleb128 0xb
 544 0051 3A       		.uleb128 0x3a
 545 0052 0B       		.uleb128 0xb
 546 0053 3B       		.uleb128 0x3b
 547 0054 05       		.uleb128 0x5
 548 0055 01       		.uleb128 0x1
 549 0056 13       		.uleb128 0x13
 550 0057 00       		.byte	0
 551 0058 00       		.byte	0
 552 0059 08       		.uleb128 0x8
 553 005a 0D       		.uleb128 0xd
 554 005b 00       		.byte	0
 555 005c 03       		.uleb128 0x3
 556 005d 0E       		.uleb128 0xe
 557 005e 3A       		.uleb128 0x3a
 558 005f 0B       		.uleb128 0xb
 559 0060 3B       		.uleb128 0x3b
 560 0061 05       		.uleb128 0x5
 561 0062 49       		.uleb128 0x49
 562 0063 13       		.uleb128 0x13
 563 0064 38       		.uleb128 0x38
 564 0065 0B       		.uleb128 0xb
 565 0066 00       		.byte	0
 566 0067 00       		.byte	0
 567 0068 09       		.uleb128 0x9
 568 0069 2E       		.uleb128 0x2e
 569 006a 01       		.byte	0x1
 570 006b 3F       		.uleb128 0x3f
 571 006c 19       		.uleb128 0x19
 572 006d 03       		.uleb128 0x3
 573 006e 0E       		.uleb128 0xe
 574 006f 3A       		.uleb128 0x3a
 575 0070 0B       		.uleb128 0xb
 576 0071 3B       		.uleb128 0x3b
 577 0072 0B       		.uleb128 0xb
 578 0073 27       		.uleb128 0x27
 579 0074 19       		.uleb128 0x19
 580 0075 11       		.uleb128 0x11
 581 0076 01       		.uleb128 0x1
 582 0077 12       		.uleb128 0x12
 583 0078 06       		.uleb128 0x6
 584 0079 40       		.uleb128 0x40
 585 007a 18       		.uleb128 0x18
 586 007b 9642     		.uleb128 0x2116
 587 007d 19       		.uleb128 0x19
 588 007e 01       		.uleb128 0x1
 589 007f 13       		.uleb128 0x13
 590 0080 00       		.byte	0
 591 0081 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 20


 592 0082 0A       		.uleb128 0xa
 593 0083 05       		.uleb128 0x5
 594 0084 00       		.byte	0
 595 0085 03       		.uleb128 0x3
 596 0086 08       		.uleb128 0x8
 597 0087 3A       		.uleb128 0x3a
 598 0088 0B       		.uleb128 0xb
 599 0089 3B       		.uleb128 0x3b
 600 008a 0B       		.uleb128 0xb
 601 008b 49       		.uleb128 0x49
 602 008c 13       		.uleb128 0x13
 603 008d 02       		.uleb128 0x2
 604 008e 18       		.uleb128 0x18
 605 008f 00       		.byte	0
 606 0090 00       		.byte	0
 607 0091 0B       		.uleb128 0xb
 608 0092 05       		.uleb128 0x5
 609 0093 00       		.byte	0
 610 0094 03       		.uleb128 0x3
 611 0095 0E       		.uleb128 0xe
 612 0096 3A       		.uleb128 0x3a
 613 0097 0B       		.uleb128 0xb
 614 0098 3B       		.uleb128 0x3b
 615 0099 0B       		.uleb128 0xb
 616 009a 49       		.uleb128 0x49
 617 009b 13       		.uleb128 0x13
 618 009c 02       		.uleb128 0x2
 619 009d 18       		.uleb128 0x18
 620 009e 00       		.byte	0
 621 009f 00       		.byte	0
 622 00a0 0C       		.uleb128 0xc
 623 00a1 34       		.uleb128 0x34
 624 00a2 00       		.byte	0
 625 00a3 03       		.uleb128 0x3
 626 00a4 0E       		.uleb128 0xe
 627 00a5 3A       		.uleb128 0x3a
 628 00a6 0B       		.uleb128 0xb
 629 00a7 3B       		.uleb128 0x3b
 630 00a8 0B       		.uleb128 0xb
 631 00a9 49       		.uleb128 0x49
 632 00aa 13       		.uleb128 0x13
 633 00ab 02       		.uleb128 0x2
 634 00ac 18       		.uleb128 0x18
 635 00ad 00       		.byte	0
 636 00ae 00       		.byte	0
 637 00af 0D       		.uleb128 0xd
 638 00b0 34       		.uleb128 0x34
 639 00b1 00       		.byte	0
 640 00b2 03       		.uleb128 0x3
 641 00b3 08       		.uleb128 0x8
 642 00b4 3A       		.uleb128 0x3a
 643 00b5 0B       		.uleb128 0xb
 644 00b6 3B       		.uleb128 0x3b
 645 00b7 0B       		.uleb128 0xb
 646 00b8 49       		.uleb128 0x49
 647 00b9 13       		.uleb128 0x13
 648 00ba 02       		.uleb128 0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 21


 649 00bb 18       		.uleb128 0x18
 650 00bc 00       		.byte	0
 651 00bd 00       		.byte	0
 652 00be 0E       		.uleb128 0xe
 653 00bf 34       		.uleb128 0x34
 654 00c0 00       		.byte	0
 655 00c1 03       		.uleb128 0x3
 656 00c2 0E       		.uleb128 0xe
 657 00c3 3A       		.uleb128 0x3a
 658 00c4 0B       		.uleb128 0xb
 659 00c5 3B       		.uleb128 0x3b
 660 00c6 05       		.uleb128 0x5
 661 00c7 49       		.uleb128 0x49
 662 00c8 13       		.uleb128 0x13
 663 00c9 02       		.uleb128 0x2
 664 00ca 18       		.uleb128 0x18
 665 00cb 00       		.byte	0
 666 00cc 00       		.byte	0
 667 00cd 0F       		.uleb128 0xf
 668 00ce 26       		.uleb128 0x26
 669 00cf 00       		.byte	0
 670 00d0 49       		.uleb128 0x49
 671 00d1 13       		.uleb128 0x13
 672 00d2 00       		.byte	0
 673 00d3 00       		.byte	0
 674 00d4 00       		.byte	0
 675              		.section	.debug_aranges,"",%progbits
 676 0000 1C000000 		.4byte	0x1c
 677 0004 0200     		.2byte	0x2
 678 0006 00000000 		.4byte	.Ldebug_info0
 679 000a 04       		.byte	0x4
 680 000b 00       		.byte	0
 681 000c 0000     		.2byte	0
 682 000e 0000     		.2byte	0
 683 0010 00000000 		.4byte	.LFB82
 684 0014 00010000 		.4byte	.LFE82-.LFB82
 685 0018 00000000 		.4byte	0
 686 001c 00000000 		.4byte	0
 687              		.section	.debug_ranges,"",%progbits
 688              	.Ldebug_ranges0:
 689 0000 00000000 		.4byte	.LFB82
 690 0004 00010000 		.4byte	.LFE82
 691 0008 00000000 		.4byte	0
 692 000c 00000000 		.4byte	0
 693              		.section	.debug_line,"",%progbits
 694              	.Ldebug_line0:
 695 0000 91010000 		.section	.debug_str,"MS",%progbits,1
 695      02005601 
 695      00000201 
 695      FB0E0D00 
 695      01010101 
 696              	.LASF20:
 697 0000 70537461 		.ascii	"pState\000"
 697      746500
 698              	.LASF34:
 699 0007 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 699      73657273 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 22


 699      5C666E65 
 699      7665735C 
 699      446F6375 
 700 0034 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 700      655F7370 
 700      6565645F 
 700      73656E73 
 700      6F722E63 
 701              	.LASF33:
 702 004d 536F7572 		.ascii	"Source\\FilteringFunctions\\arm_fir_lattice_f32.c\000"
 702      63655C46 
 702      696C7465 
 702      72696E67 
 702      46756E63 
 703              	.LASF16:
 704 007d 666C6F61 		.ascii	"float\000"
 704      7400
 705              	.LASF1:
 706 0083 756E7369 		.ascii	"unsigned char\000"
 706      676E6564 
 706      20636861 
 706      7200
 707              	.LASF30:
 708 0091 626C6B43 		.ascii	"blkCnt\000"
 708      6E7400
 709              	.LASF7:
 710 0098 6C6F6E67 		.ascii	"long unsigned int\000"
 710      20756E73 
 710      69676E65 
 710      6420696E 
 710      7400
 711              	.LASF27:
 712 00aa 666E6578 		.ascii	"fnext\000"
 712      7400
 713              	.LASF3:
 714 00b0 73686F72 		.ascii	"short unsigned int\000"
 714      7420756E 
 714      7369676E 
 714      65642069 
 714      6E7400
 715              	.LASF26:
 716 00c3 66637572 		.ascii	"fcurr\000"
 716      7200
 717              	.LASF24:
 718 00c9 70447374 		.ascii	"pDst\000"
 718      00
 719              	.LASF31:
 720 00ce 73746167 		.ascii	"stageCnt\000"
 720      65436E74 
 720      00
 721              	.LASF5:
 722 00d7 5F5F7569 		.ascii	"__uint16_t\000"
 722      6E743136 
 722      5F7400
 723              	.LASF15:
 724 00e2 646F7562 		.ascii	"double\000"
 724      6C6500
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 23


 725              	.LASF6:
 726 00e9 5F5F7569 		.ascii	"__uint32_t\000"
 726      6E743332 
 726      5F7400
 727              	.LASF22:
 728 00f4 61726D5F 		.ascii	"arm_fir_lattice_instance_f32\000"
 728      6669725F 
 728      6C617474 
 728      6963655F 
 728      696E7374 
 729              	.LASF10:
 730 0111 756E7369 		.ascii	"unsigned int\000"
 730      676E6564 
 730      20696E74 
 730      00
 731              	.LASF9:
 732 011e 6C6F6E67 		.ascii	"long long unsigned int\000"
 732      206C6F6E 
 732      6720756E 
 732      7369676E 
 732      65642069 
 733              	.LASF32:
 734 0135 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 734      4320342E 
 734      392E3320 
 734      32303135 
 734      30333033 
 735 0168 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 735      20726576 
 735      6973696F 
 735      6E203232 
 735      31323230 
 736 019b 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 736      30202D66 
 736      66756E63 
 736      74696F6E 
 736      2D736563 
 737              	.LASF28:
 738 01c7 67637572 		.ascii	"gcurr\000"
 738      7200
 739              	.LASF13:
 740 01cd 73697A65 		.ascii	"sizetype\000"
 740      74797065 
 740      00
 741              	.LASF8:
 742 01d6 6C6F6E67 		.ascii	"long long int\000"
 742      206C6F6E 
 742      6720696E 
 742      7400
 743              	.LASF25:
 744 01e4 626C6F63 		.ascii	"blockSize\000"
 744      6B53697A 
 744      6500
 745              	.LASF14:
 746 01ee 63686172 		.ascii	"char\000"
 746      00
 747              	.LASF18:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccXDoMyq.s 			page 24


 748 01f3 666C6F61 		.ascii	"float32_t\000"
 748      7433325F 
 748      7400
 749              	.LASF2:
 750 01fd 73686F72 		.ascii	"short int\000"
 750      7420696E 
 750      7400
 751              	.LASF29:
 752 0207 676E6578 		.ascii	"gnext\000"
 752      7400
 753              	.LASF11:
 754 020d 75696E74 		.ascii	"uint16_t\000"
 754      31365F74 
 754      00
 755              	.LASF21:
 756 0216 70436F65 		.ascii	"pCoeffs\000"
 756      66667300 
 757              	.LASF12:
 758 021e 75696E74 		.ascii	"uint32_t\000"
 758      33325F74 
 758      00
 759              	.LASF4:
 760 0227 6C6F6E67 		.ascii	"long int\000"
 760      20696E74 
 760      00
 761              	.LASF17:
 762 0230 6C6F6E67 		.ascii	"long double\000"
 762      20646F75 
 762      626C6500 
 763              	.LASF0:
 764 023c 7369676E 		.ascii	"signed char\000"
 764      65642063 
 764      68617200 
 765              	.LASF23:
 766 0248 70537263 		.ascii	"pSrc\000"
 766      00
 767              	.LASF19:
 768 024d 6E756D53 		.ascii	"numStages\000"
 768      74616765 
 768      7300
 769              	.LASF35:
 770 0257 61726D5F 		.ascii	"arm_fir_lattice_f32\000"
 770      6669725F 
 770      6C617474 
 770      6963655F 
 770      66333200 
 771              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
