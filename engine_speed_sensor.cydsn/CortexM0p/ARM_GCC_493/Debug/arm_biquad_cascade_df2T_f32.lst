ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_biquad_cascade_df2T_f32.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_fmul
  18              		.global	__aeabi_fadd
  19              		.section	.text.arm_biquad_cascade_df2T_f32,"ax",%progbits
  20              		.align	2
  21              		.global	arm_biquad_cascade_df2T_f32
  22              		.code	16
  23              		.thumb_func
  24              		.type	arm_biquad_cascade_df2T_f32, %function
  25              	arm_biquad_cascade_df2T_f32:
  26              	.LFB82:
  27              		.file 1 "Source\\FilteringFunctions\\arm_biquad_cascade_df2T_f32.c"
   1:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** /* ----------------------------------------------------------------------
   2:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  * Project:      CMSIS DSP Library
   3:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  * Title:        arm_biquad_cascade_df2T_f32.c
   4:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  * Description:  Processing function for floating-point transposed direct form II Biquad cascade fi
   5:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  *
   6:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  * $Date:        27. January 2017
   7:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  * $Revision:    V.1.5.1
   8:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  *
   9:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  * Target Processor: Cortex-M cores
  10:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  * -------------------------------------------------------------------- */
  11:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** /*
  12:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  *
  14:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  *
  16:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  * not use this file except in compliance with the License.
  18:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  * You may obtain a copy of the License at
  19:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  *
  20:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  *
  22:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  * See the License for the specific language governing permissions and
  26:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  * limitations under the License.
  27:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****  */
  28:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
  29:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** #include "arm_math.h"
  30:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 2


  31:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** /**
  32:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * @ingroup groupFilters
  33:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** */
  34:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
  35:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** /**
  36:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * @defgroup BiquadCascadeDF2T Biquad Cascade IIR Filters Using a Direct Form II Transposed Structur
  37:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *
  38:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * This set of functions implements arbitrary order recursive (IIR) filters using a transposed direc
  39:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * The filters are implemented as a cascade of second order Biquad sections.
  40:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * These functions provide a slight memory savings as compared to the direct form I Biquad filter fu
  41:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * Only floating-point data is supported.
  42:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *
  43:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * This function operate on blocks of input and output data and each call to the function
  44:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * processes <code>blockSize</code> samples through the filter.
  45:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * <code>pSrc</code> points to the array of input data and
  46:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * <code>pDst</code> points to the array of output data.
  47:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * Both arrays contain <code>blockSize</code> values.
  48:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *
  49:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * \par Algorithm
  50:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * Each Biquad stage implements a second order filter using the difference equation:
  51:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * <pre>
  52:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *    y[n] = b0 * x[n] + d1
  53:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *    d1 = b1 * x[n] + a1 * y[n] + d2
  54:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *    d2 = b2 * x[n] + a2 * y[n]
  55:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * </pre>
  56:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * where d1 and d2 represent the two state values.
  57:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *
  58:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * \par
  59:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * A Biquad filter using a transposed Direct Form II structure is shown below.
  60:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * \image html BiquadDF2Transposed.gif "Single transposed Direct Form II Biquad"
  61:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * Coefficients <code>b0, b1, and b2 </code> multiply the input signal <code>x[n]</code> and are ref
  62:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * Coefficients <code>a1</code> and <code>a2</code> multiply the output signal <code>y[n]</code> and
  63:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * Pay careful attention to the sign of the feedback coefficients.
  64:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * Some design tools flip the sign of the feedback coefficients:
  65:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * <pre>
  66:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *    y[n] = b0 * x[n] + d1;
  67:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *    d1 = b1 * x[n] - a1 * y[n] + d2;
  68:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *    d2 = b2 * x[n] - a2 * y[n];
  69:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * </pre>
  70:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * In this case the feedback coefficients <code>a1</code> and <code>a2</code> must be negated when u
  71:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *
  72:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * \par
  73:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * Higher order filters are realized as a cascade of second order sections.
  74:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * <code>numStages</code> refers to the number of second order stages used.
  75:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * For example, an 8th order filter would be realized with <code>numStages=4</code> second order sta
  76:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * A 9th order filter would be realized with <code>numStages=5</code> second order stages with the
  77:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * coefficients for one of the stages configured as a first order filter (<code>b2=0</code> and <cod
  78:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *
  79:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * \par
  80:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * <code>pState</code> points to the state variable array.
  81:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * Each Biquad stage has 2 state variables <code>d1</code> and <code>d2</code>.
  82:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * The state variables are arranged in the <code>pState</code> array as:
  83:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * <pre>
  84:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *     {d11, d12, d21, d22, ...}
  85:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * </pre>
  86:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * where <code>d1x</code> refers to the state variables for the first Biquad and
  87:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * <code>d2x</code> refers to the state variables for the second Biquad.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 3


  88:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * The state array has a total length of <code>2*numStages</code> values.
  89:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * The state variables are updated after each block of data is processed; the coefficients are untou
  90:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *
  91:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * \par
  92:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * The CMSIS library contains Biquad filters in both Direct Form I and transposed Direct Form II.
  93:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * The advantage of the Direct Form I structure is that it is numerically more robust for fixed-poin
  94:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * That is why the Direct Form I structure supports Q15 and Q31 data types.
  95:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * The transposed Direct Form II structure, on the other hand, requires a wide dynamic range for the
  96:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * Because of this, the CMSIS library only has a floating-point version of the Direct Form II Biquad
  97:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * The advantage of the Direct Form II Biquad is that it requires half the number of state variables
  98:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *
  99:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * \par Instance Structure
 100:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * The coefficients and state variables for a filter are stored together in an instance data structu
 101:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * A separate instance structure must be defined for each filter.
 102:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * Coefficient arrays may be shared among several instances while state variable arrays cannot be sh
 103:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *
 104:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * \par Init Functions
 105:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * There is also an associated initialization function.
 106:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * The initialization function performs following operations:
 107:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * - Sets the values of the internal structure fields.
 108:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * - Zeros out the values in the state buffer.
 109:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * To do this manually without calling the init function, assign the follow subfields of the instanc
 110:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * numStages, pCoeffs, pState. Also set all of the values in pState to zero.
 111:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *
 112:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * \par
 113:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * Use of the initialization function is optional.
 114:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * However, if the initialization function is used, then the instance structure cannot be placed int
 115:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * To place an instance structure into a const data section, the instance structure must be manually
 116:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * Set the values in the state buffer to zeros before static initialization.
 117:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * For example, to statically initialize the instance structure use
 118:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * <pre>
 119:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *     arm_biquad_cascade_df2T_instance_f32 S1 = {numStages, pState, pCoeffs};
 120:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * </pre>
 121:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * where <code>numStages</code> is the number of Biquad stages in the filter; <code>pState</code> is
 122:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * <code>pCoeffs</code> is the address of the coefficient buffer;
 123:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** *
 124:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** */
 125:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 126:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** /**
 127:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * @addtogroup BiquadCascadeDF2T
 128:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * @{
 129:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** */
 130:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 131:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** /**
 132:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * @brief Processing function for the floating-point transposed direct form II Biquad cascade filter
 133:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * @param[in]  *S        points to an instance of the filter data structure.
 134:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * @param[in]  *pSrc     points to the block of input data.
 135:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * @param[out] *pDst     points to the block of output data
 136:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * @param[in]  blockSize number of samples to process.
 137:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** * @return none.
 138:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** */
 139:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 140:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 141:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** LOW_OPTIMIZATION_ENTER
 142:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** void arm_biquad_cascade_df2T_f32(
 143:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** const arm_biquad_cascade_df2T_instance_f32 * S,
 144:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** float32_t * pSrc,
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 4


 145:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** float32_t * pDst,
 146:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** uint32_t blockSize)
 147:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** {
  28              		.loc 1 147 0
  29              		.cfi_startproc
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              		.cfi_def_cfa_offset 16
  32              		.cfi_offset 4, -16
  33              		.cfi_offset 5, -12
  34              		.cfi_offset 6, -8
  35              		.cfi_offset 14, -4
  36 0002 5E46     		mov	r6, fp
  37 0004 5546     		mov	r5, r10
  38 0006 4C46     		mov	r4, r9
  39 0008 70B4     		push	{r4, r5, r6}
  40              		.cfi_def_cfa_offset 28
  41              		.cfi_offset 9, -28
  42              		.cfi_offset 10, -24
  43              		.cfi_offset 11, -20
  44 000a 4646     		mov	r6, r8
  45 000c 40B4     		push	{r6}
  46              		.cfi_def_cfa_offset 32
  47              		.cfi_offset 8, -32
  48 000e 8CB0     		sub	sp, sp, #48
  49              		.cfi_def_cfa_offset 80
  50 0010 8946     		mov	r9, r1
  51 0012 9346     		mov	fp, r2
  52 0014 0B93     		str	r3, [sp, #44]
 148:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 149:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    float32_t *pIn = pSrc;                         /*  source pointer            */
 150:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    float32_t *pOut = pDst;                        /*  destination pointer       */
 151:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    float32_t *pState = S->pState;                 /*  State pointer             */
 152:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    float32_t *pCoeffs = S->pCoeffs;               /*  coefficient pointer       */
 153:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    float32_t acc1;                                /*  accumulator               */
 154:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    float32_t b0, b1, b2, a1, a2;                  /*  Filter coefficients       */
 155:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    float32_t Xn1;                                 /*  temporary input           */
 156:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    float32_t d1, d2;                              /*  state variables           */
 157:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    uint32_t sample, stage = S->numStages;         /*  loop counters             */
  53              		.loc 1 157 0
  54 0016 0378     		ldrb	r3, [r0]
  55 0018 0A93     		str	r3, [sp, #40]
  56 001a 4368     		ldr	r3, [r0, #4]
  57 001c 0993     		str	r3, [sp, #36]
  58 001e 8368     		ldr	r3, [r0, #8]
  59 0020 9A46     		mov	r10, r3
  60              	.L4:
 158:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 159:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** #if defined(ARM_MATH_CM7)
 160:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 161:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    float32_t Xn2, Xn3, Xn4, Xn5, Xn6, Xn7, Xn8;   /*  Input State variables     */
 162:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    float32_t Xn9, Xn10, Xn11, Xn12, Xn13, Xn14, Xn15, Xn16;
 163:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    float32_t acc2, acc3, acc4, acc5, acc6, acc7;  /*  Simulates the accumulator */
 164:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    float32_t acc8, acc9, acc10, acc11, acc12, acc13, acc14, acc15, acc16;
 165:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 166:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    do
 167:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    {
 168:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /* Reading the coefficients */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 5


 169:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       b0 = pCoeffs[0];
 170:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       b1 = pCoeffs[1];
 171:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       b2 = pCoeffs[2];
 172:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       a1 = pCoeffs[3];
 173:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /* Apply loop unrolling and compute 16 output values simultaneously. */
 174:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       sample = blockSize >> 4u;
 175:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       a2 = pCoeffs[4];
 176:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 177:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /*Reading the state values */
 178:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       d1 = pState[0];
 179:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       d2 = pState[1];
 180:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 181:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       pCoeffs += 5u;
 182:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 183:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 184:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /* First part of the processing with loop unrolling.  Compute 16 outputs at a time.
 185:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****        ** a second loop below computes the remaining 1 to 15 samples. */
 186:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       while (sample > 0u) {
 187:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 188:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* y[n] = b0 * x[n] + d1 */
 189:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* d1 = b1 * x[n] + a1 * y[n] + d2 */
 190:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* d2 = b2 * x[n] + a2 * y[n] */
 191:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 192:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Read the first 2 inputs. 2 cycles */
 193:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn1  = pIn[0 ];
 194:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn2  = pIn[1 ];
 195:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 196:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Sample 1. 5 cycles */
 197:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn3  = pIn[2 ];
 198:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc1 = b0 * Xn1 + d1;
 199:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 200:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn4  = pIn[3 ];
 201:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = b1 * Xn1 + d2;
 202:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 203:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn5  = pIn[4 ];
 204:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = b2 * Xn1;
 205:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 206:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn6  = pIn[5 ];
 207:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 += a1 * acc1;
 208:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 209:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn7  = pIn[6 ];
 210:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 += a2 * acc1;
 211:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 212:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Sample 2. 5 cycles */
 213:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn8  = pIn[7 ];
 214:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc2 = b0 * Xn2 + d1;
 215:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 216:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn9  = pIn[8 ];
 217:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = b1 * Xn2 + d2;
 218:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 219:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn10 = pIn[9 ];
 220:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = b2 * Xn2;
 221:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 222:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn11 = pIn[10];
 223:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 += a1 * acc2;
 224:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 225:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn12 = pIn[11];
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 6


 226:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 += a2 * acc2;
 227:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 228:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Sample 3. 5 cycles */
 229:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn13 = pIn[12];
 230:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc3 = b0 * Xn3 + d1;
 231:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 232:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn14 = pIn[13];
 233:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = b1 * Xn3 + d2;
 234:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 235:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn15 = pIn[14];
 236:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = b2 * Xn3;
 237:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 238:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn16 = pIn[15];
 239:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 += a1 * acc3;
 240:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 241:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pIn += 16;
 242:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 += a2 * acc3;
 243:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 244:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Sample 4. 5 cycles */
 245:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc4 = b0 * Xn4 + d1;
 246:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = b1 * Xn4 + d2;
 247:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = b2 * Xn4;
 248:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 += a1 * acc4;
 249:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 += a2 * acc4;
 250:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 251:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Sample 5. 5 cycles */
 252:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc5 = b0 * Xn5 + d1;
 253:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = b1 * Xn5 + d2;
 254:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = b2 * Xn5;
 255:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 += a1 * acc5;
 256:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 += a2 * acc5;
 257:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 258:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Sample 6. 5 cycles */
 259:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc6 = b0 * Xn6 + d1;
 260:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = b1 * Xn6 + d2;
 261:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = b2 * Xn6;
 262:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 += a1 * acc6;
 263:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 += a2 * acc6;
 264:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 265:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Sample 7. 5 cycles */
 266:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc7 = b0 * Xn7 + d1;
 267:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = b1 * Xn7 + d2;
 268:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = b2 * Xn7;
 269:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 += a1 * acc7;
 270:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 += a2 * acc7;
 271:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 272:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Sample 8. 5 cycles */
 273:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc8 = b0 * Xn8 + d1;
 274:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = b1 * Xn8 + d2;
 275:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = b2 * Xn8;
 276:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 += a1 * acc8;
 277:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 += a2 * acc8;
 278:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 279:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Sample 9. 5 cycles */
 280:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc9 = b0 * Xn9 + d1;
 281:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = b1 * Xn9 + d2;
 282:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = b2 * Xn9;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 7


 283:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 += a1 * acc9;
 284:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 += a2 * acc9;
 285:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 286:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Sample 10. 5 cycles */
 287:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc10 = b0 * Xn10 + d1;
 288:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = b1 * Xn10 + d2;
 289:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = b2 * Xn10;
 290:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 += a1 * acc10;
 291:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 += a2 * acc10;
 292:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 293:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Sample 11. 5 cycles */
 294:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc11 = b0 * Xn11 + d1;
 295:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = b1 * Xn11 + d2;
 296:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = b2 * Xn11;
 297:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 += a1 * acc11;
 298:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 += a2 * acc11;
 299:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 300:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Sample 12. 5 cycles */
 301:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc12 = b0 * Xn12 + d1;
 302:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = b1 * Xn12 + d2;
 303:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = b2 * Xn12;
 304:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 += a1 * acc12;
 305:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 += a2 * acc12;
 306:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 307:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Sample 13. 5 cycles */
 308:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc13 = b0 * Xn13 + d1;
 309:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = b1 * Xn13 + d2;
 310:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = b2 * Xn13;
 311:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 312:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[0 ] = acc1 ;
 313:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 += a1 * acc13;
 314:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 315:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[1 ] = acc2 ;
 316:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 += a2 * acc13;
 317:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 318:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Sample 14. 5 cycles */
 319:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[2 ] = acc3 ;
 320:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc14 = b0 * Xn14 + d1;
 321:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 322:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[3 ] = acc4 ;
 323:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = b1 * Xn14 + d2;
 324:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 325:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[4 ] = acc5 ;
 326:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = b2 * Xn14;
 327:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 328:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[5 ] = acc6 ;
 329:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 += a1 * acc14;
 330:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 331:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[6 ] = acc7 ;
 332:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 += a2 * acc14;
 333:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 334:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Sample 15. 5 cycles */
 335:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[7 ] = acc8 ;
 336:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[8 ] = acc9 ;
 337:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc15 = b0 * Xn15 + d1;
 338:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 339:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[9 ] = acc10;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 8


 340:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = b1 * Xn15 + d2;
 341:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 342:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[10] = acc11;
 343:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = b2 * Xn15;
 344:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 345:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[11] = acc12;
 346:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 += a1 * acc15;
 347:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 348:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[12] = acc13;
 349:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 += a2 * acc15;
 350:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 351:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Sample 16. 5 cycles */
 352:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[13] = acc14;
 353:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc16 = b0 * Xn16 + d1;
 354:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 355:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[14] = acc15;
 356:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = b1 * Xn16 + d2;
 357:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 358:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[15] = acc16;
 359:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = b2 * Xn16;
 360:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 361:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          sample--;
 362:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 += a1 * acc16;
 363:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 364:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut += 16;
 365:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 += a2 * acc16;
 366:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       }
 367:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 368:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       sample = blockSize & 0xFu;
 369:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       while (sample > 0u) {
 370:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn1 = *pIn;
 371:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc1 = b0 * Xn1 + d1;
 372:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 373:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pIn++;
 374:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = b1 * Xn1 + d2;
 375:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 376:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          *pOut = acc1;
 377:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = b2 * Xn1;
 378:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 379:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut++;
 380:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 += a1 * acc1;
 381:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 382:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          sample--;
 383:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 += a2 * acc1;
 384:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       }
 385:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 386:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /* Store the updated state variables back into the state array */
 387:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       pState[0] = d1;
 388:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /* The current stage input is given as the output to the next stage */
 389:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       pIn = pDst;
 390:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 391:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       pState[1] = d2;
 392:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /* decrement the loop counter */
 393:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       stage--;
 394:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 395:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       pState += 2u;
 396:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 9


 397:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /*Reset the output working pointer */
 398:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       pOut = pDst;
 399:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 400:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    } while (stage > 0u);
 401:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 402:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** #elif defined(ARM_MATH_CM0_FAMILY)
 403:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 404:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    /* Run the below code for Cortex-M0 */
 405:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 406:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    do
 407:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    {
 408:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /* Reading the coefficients */
 409:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       b0 = *pCoeffs++;
  61              		.loc 1 409 0
  62 0022 5346     		mov	r3, r10
  63 0024 1B68     		ldr	r3, [r3]
  64 0026 0493     		str	r3, [sp, #16]
 410:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       b1 = *pCoeffs++;
  65              		.loc 1 410 0
  66 0028 5346     		mov	r3, r10
  67 002a 5B68     		ldr	r3, [r3, #4]
  68 002c 0593     		str	r3, [sp, #20]
 411:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       b2 = *pCoeffs++;
  69              		.loc 1 411 0
  70 002e 5346     		mov	r3, r10
  71 0030 9B68     		ldr	r3, [r3, #8]
  72 0032 0693     		str	r3, [sp, #24]
 412:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       a1 = *pCoeffs++;
  73              		.loc 1 412 0
  74 0034 5346     		mov	r3, r10
  75 0036 DB68     		ldr	r3, [r3, #12]
  76 0038 0793     		str	r3, [sp, #28]
 413:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       a2 = *pCoeffs++;
  77              		.loc 1 413 0
  78 003a 5346     		mov	r3, r10
  79 003c 1B69     		ldr	r3, [r3, #16]
  80 003e 0893     		str	r3, [sp, #32]
  81 0040 099A     		ldr	r2, [sp, #36]
  82 0042 131C     		mov	r3, r2
  83 0044 9046     		mov	r8, r2
 414:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 415:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /*Reading the state values */
 416:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       d1 = pState[0];
  84              		.loc 1 416 0
  85 0046 1268     		ldr	r2, [r2]
  86 0048 0292     		str	r2, [sp, #8]
 417:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       d2 = pState[1];
  87              		.loc 1 417 0
  88 004a 5B68     		ldr	r3, [r3, #4]
  89 004c 0393     		str	r3, [sp, #12]
 418:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 419:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 420:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       sample = blockSize;
 421:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 422:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       while (sample > 0u)
  90              		.loc 1 422 0
  91 004e 0B9B     		ldr	r3, [sp, #44]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 10


  92 0050 002B     		cmp	r3, #0
  93 0052 30D0     		beq	.L2
  94 0054 1E1C     		mov	r6, r3
  95 0056 0024     		mov	r4, #0
  96              	.L3:
 423:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       {
 424:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Read the input */
 425:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn1 = *pIn++;
  97              		.loc 1 425 0
  98 0058 4B46     		mov	r3, r9
  99 005a 1D59     		ldr	r5, [r3, r4]
 426:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 427:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* y[n] = b0 * x[n] + d1 */
 428:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc1 = (b0 * Xn1) + d1;
 100              		.loc 1 428 0
 101 005c 0498     		ldr	r0, [sp, #16]
 102 005e 291C     		add	r1, r5, #0
 103 0060 FFF7FEFF 		bl	__aeabi_fmul
 104 0064 0299     		ldr	r1, [sp, #8]
 105 0066 FFF7FEFF 		bl	__aeabi_fadd
 429:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 430:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Store the result in the accumulator in the destination buffer. */
 431:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          *pOut++ = acc1;
 106              		.loc 1 431 0
 107 006a 5A46     		mov	r2, fp
 108 006c 0190     		str	r0, [sp, #4]
 109 006e 1051     		str	r0, [r2, r4]
 432:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 433:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Every time after the output is computed state should be updated. */
 434:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* d1 = b1 * x[n] + a1 * y[n] + d2 */
 435:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = ((b1 * Xn1) + (a1 * acc1)) + d2;
 110              		.loc 1 435 0
 111 0070 0598     		ldr	r0, [sp, #20]
 112 0072 291C     		add	r1, r5, #0
 113 0074 FFF7FEFF 		bl	__aeabi_fmul
 114 0078 0290     		str	r0, [sp, #8]
 115 007a 0798     		ldr	r0, [sp, #28]
 116 007c 0199     		ldr	r1, [sp, #4]
 117 007e FFF7FEFF 		bl	__aeabi_fmul
 118 0082 011C     		add	r1, r0, #0
 119 0084 0298     		ldr	r0, [sp, #8]
 120 0086 FFF7FEFF 		bl	__aeabi_fadd
 121 008a 0399     		ldr	r1, [sp, #12]
 122 008c FFF7FEFF 		bl	__aeabi_fadd
 123 0090 0290     		str	r0, [sp, #8]
 436:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 437:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* d2 = b2 * x[n] + a2 * y[n] */
 438:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = (b2 * Xn1) + (a2 * acc1);
 124              		.loc 1 438 0
 125 0092 0698     		ldr	r0, [sp, #24]
 126 0094 291C     		add	r1, r5, #0
 127 0096 FFF7FEFF 		bl	__aeabi_fmul
 128 009a 051C     		add	r5, r0, #0
 129 009c 0898     		ldr	r0, [sp, #32]
 130 009e 0199     		ldr	r1, [sp, #4]
 131 00a0 FFF7FEFF 		bl	__aeabi_fmul
 132 00a4 011C     		add	r1, r0, #0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 11


 133 00a6 281C     		add	r0, r5, #0
 134 00a8 FFF7FEFF 		bl	__aeabi_fadd
 135 00ac 0390     		str	r0, [sp, #12]
 439:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 440:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* decrement the loop counter */
 441:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          sample--;
 136              		.loc 1 441 0
 137 00ae 013E     		sub	r6, r6, #1
 138 00b0 0434     		add	r4, r4, #4
 422:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       {
 139              		.loc 1 422 0
 140 00b2 002E     		cmp	r6, #0
 141 00b4 D0D1     		bne	.L3
 142              	.L2:
 442:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       }
 443:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 444:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /* Store the updated state variables back into the state array */
 445:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       *pState++ = d1;
 143              		.loc 1 445 0
 144 00b6 4346     		mov	r3, r8
 145 00b8 029A     		ldr	r2, [sp, #8]
 146 00ba 1A60     		str	r2, [r3]
 446:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       *pState++ = d2;
 147              		.loc 1 446 0
 148 00bc 039A     		ldr	r2, [sp, #12]
 149 00be 5A60     		str	r2, [r3, #4]
 447:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 448:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /* The current stage input is given as the output to the next stage */
 449:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       pIn = pDst;
 450:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 451:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /*Reset the output working pointer */
 452:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       pOut = pDst;
 453:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 454:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /* decrement the loop counter */
 455:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       stage--;
 150              		.loc 1 455 0
 151 00c0 0A9B     		ldr	r3, [sp, #40]
 152 00c2 013B     		sub	r3, r3, #1
 153 00c4 0A93     		str	r3, [sp, #40]
 154 00c6 099A     		ldr	r2, [sp, #36]
 155 00c8 0832     		add	r2, r2, #8
 156 00ca 0992     		str	r2, [sp, #36]
 157 00cc 1422     		mov	r2, #20
 158 00ce 9446     		mov	ip, r2
 159 00d0 E244     		add	r10, r10, ip
 449:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 160              		.loc 1 449 0
 161 00d2 D946     		mov	r9, fp
 456:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 457:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    } while (stage > 0u);
 162              		.loc 1 457 0
 163 00d4 002B     		cmp	r3, #0
 164 00d6 A4D1     		bne	.L4
 458:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 459:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** #else
 460:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 461:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    float32_t Xn2, Xn3, Xn4;                  	  /*  Input State variables     */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 12


 462:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    float32_t acc2, acc3, acc4;              		  /*  accumulator               */
 463:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 464:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 465:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    float32_t p0, p1, p2, p3, p4, A1;
 466:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 467:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    /* Run the below code for Cortex-M4 and Cortex-M3 */
 468:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    do
 469:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    {
 470:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /* Reading the coefficients */
 471:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       b0 = *pCoeffs++;
 472:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       b1 = *pCoeffs++;
 473:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       b2 = *pCoeffs++;
 474:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       a1 = *pCoeffs++;
 475:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       a2 = *pCoeffs++;
 476:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 477:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 478:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /*Reading the state values */
 479:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       d1 = pState[0];
 480:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       d2 = pState[1];
 481:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 482:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /* Apply loop unrolling and compute 4 output values simultaneously. */
 483:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       sample = blockSize >> 2u;
 484:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 485:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
 486:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
 487:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       while (sample > 0u) {
 488:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 489:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* y[n] = b0 * x[n] + d1 */
 490:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* d1 = b1 * x[n] + a1 * y[n] + d2 */
 491:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* d2 = b2 * x[n] + a2 * y[n] */
 492:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 493:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          /* Read the four inputs */
 494:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn1 = pIn[0];
 495:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn2 = pIn[1];
 496:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn3 = pIn[2];
 497:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn4 = pIn[3];
 498:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pIn += 4;
 499:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 500:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p0 = b0 * Xn1;
 501:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p1 = b1 * Xn1;
 502:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc1 = p0 + d1;
 503:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p0 = b0 * Xn2;
 504:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p3 = a1 * acc1;
 505:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p2 = b2 * Xn1;
 506:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          A1 = p1 + p3;
 507:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p4 = a2 * acc1;
 508:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = A1 + d2;
 509:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = p2 + p4;
 510:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 511:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p1 = b1 * Xn2;
 512:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc2 = p0 + d1;
 513:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p0 = b0 * Xn3;
 514:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p3 = a1 * acc2;
 515:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p2 = b2 * Xn2;
 516:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          A1 = p1 + p3;
 517:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p4 = a2 * acc2;
 518:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = A1 + d2;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 13


 519:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = p2 + p4;
 520:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 521:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p1 = b1 * Xn3;
 522:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc3 = p0 + d1;
 523:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p0 = b0 * Xn4;
 524:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p3 = a1 * acc3;
 525:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p2 = b2 * Xn3;
 526:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          A1 = p1 + p3;
 527:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p4 = a2 * acc3;
 528:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = A1 + d2;
 529:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = p2 + p4;
 530:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 531:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc4 = p0 + d1;
 532:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p1 = b1 * Xn4;
 533:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p3 = a1 * acc4;
 534:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p2 = b2 * Xn4;
 535:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          A1 = p1 + p3;
 536:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p4 = a2 * acc4;
 537:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = A1 + d2;
 538:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = p2 + p4;
 539:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 540:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[0] = acc1;
 541:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[1] = acc2;
 542:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[2] = acc3;
 543:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          pOut[3] = acc4;
 544:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 		 pOut += 4;
 545:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 546:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          sample--;
 547:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       }
 548:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 549:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       sample = blockSize & 0x3u;
 550:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       while (sample > 0u) {
 551:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          Xn1 = *pIn++;
 552:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 553:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p0 = b0 * Xn1;
 554:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p1 = b1 * Xn1;
 555:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          acc1 = p0 + d1;
 556:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p3 = a1 * acc1;
 557:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p2 = b2 * Xn1;
 558:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          A1 = p1 + p3;
 559:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          p4 = a2 * acc1;
 560:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d1 = A1 + d2;
 561:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          d2 = p2 + p4;
 562:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 563:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          *pOut++ = acc1;
 564:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 565:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****          sample--;
 566:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       }
 567:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 568:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /* Store the updated state variables back into the state array */
 569:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       *pState++ = d1;
 570:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       *pState++ = d2;
 571:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 572:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /* The current stage input is given as the output to the next stage */
 573:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       pIn = pDst;
 574:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 575:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /*Reset the output working pointer */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 14


 576:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       pOut = pDst;
 577:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 578:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       /* decrement the loop counter */
 579:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****       stage--;
 580:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 581:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c ****    } while (stage > 0u);
 582:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 583:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** #endif
 584:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** 
 585:Source\FilteringFunctions/arm_biquad_cascade_df2T_f32.c **** }
 165              		.loc 1 585 0
 166 00d8 0CB0     		add	sp, sp, #48
 167              		@ sp needed
 168 00da 3CBC     		pop	{r2, r3, r4, r5}
 169 00dc 9046     		mov	r8, r2
 170 00de 9946     		mov	r9, r3
 171 00e0 A246     		mov	r10, r4
 172 00e2 AB46     		mov	fp, r5
 173 00e4 70BD     		pop	{r4, r5, r6, pc}
 174              		.cfi_endproc
 175              	.LFE82:
 176              		.size	arm_biquad_cascade_df2T_f32, .-arm_biquad_cascade_df2T_f32
 177 00e6 C046     		.text
 178              	.Letext0:
 179              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 180              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 181              		.file 4 ".\\Include/arm_math.h"
 182              		.section	.debug_info,"",%progbits
 183              	.Ldebug_info0:
 184 0000 F9010000 		.4byte	0x1f9
 185 0004 0400     		.2byte	0x4
 186 0006 00000000 		.4byte	.Ldebug_abbrev0
 187 000a 04       		.byte	0x4
 188 000b 01       		.uleb128 0x1
 189 000c 59010000 		.4byte	.LASF30
 190 0010 01       		.byte	0x1
 191 0011 0A010000 		.4byte	.LASF31
 192 0015 3E000000 		.4byte	.LASF32
 193 0019 00000000 		.4byte	.Ldebug_ranges0+0
 194 001d 00000000 		.4byte	0
 195 0021 00000000 		.4byte	.Ldebug_line0
 196 0025 02       		.uleb128 0x2
 197 0026 01       		.byte	0x1
 198 0027 06       		.byte	0x6
 199 0028 50020000 		.4byte	.LASF0
 200 002c 03       		.uleb128 0x3
 201 002d 00000000 		.4byte	.LASF5
 202 0031 02       		.byte	0x2
 203 0032 1D       		.byte	0x1d
 204 0033 37000000 		.4byte	0x37
 205 0037 02       		.uleb128 0x2
 206 0038 01       		.byte	0x1
 207 0039 08       		.byte	0x8
 208 003a B3000000 		.4byte	.LASF1
 209 003e 02       		.uleb128 0x2
 210 003f 02       		.byte	0x2
 211 0040 05       		.byte	0x5
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 15


 212 0041 22020000 		.4byte	.LASF2
 213 0045 02       		.uleb128 0x2
 214 0046 02       		.byte	0x2
 215 0047 07       		.byte	0x7
 216 0048 D3000000 		.4byte	.LASF3
 217 004c 02       		.uleb128 0x2
 218 004d 04       		.byte	0x4
 219 004e 05       		.byte	0x5
 220 004f 35000000 		.4byte	.LASF4
 221 0053 03       		.uleb128 0x3
 222 0054 F2000000 		.4byte	.LASF6
 223 0058 02       		.byte	0x2
 224 0059 41       		.byte	0x41
 225 005a 5E000000 		.4byte	0x5e
 226 005e 02       		.uleb128 0x2
 227 005f 04       		.byte	0x4
 228 0060 07       		.byte	0x7
 229 0061 C1000000 		.4byte	.LASF7
 230 0065 02       		.uleb128 0x2
 231 0066 08       		.byte	0x8
 232 0067 05       		.byte	0x5
 233 0068 F4010000 		.4byte	.LASF8
 234 006c 02       		.uleb128 0x2
 235 006d 08       		.byte	0x8
 236 006e 07       		.byte	0x7
 237 006f 42010000 		.4byte	.LASF9
 238 0073 04       		.uleb128 0x4
 239 0074 04       		.byte	0x4
 240 0075 05       		.byte	0x5
 241 0076 696E7400 		.ascii	"int\000"
 242 007a 02       		.uleb128 0x2
 243 007b 04       		.byte	0x4
 244 007c 07       		.byte	0x7
 245 007d FD000000 		.4byte	.LASF10
 246 0081 03       		.uleb128 0x3
 247 0082 84000000 		.4byte	.LASF11
 248 0086 03       		.byte	0x3
 249 0087 15       		.byte	0x15
 250 0088 2C000000 		.4byte	0x2c
 251 008c 03       		.uleb128 0x3
 252 008d 34020000 		.4byte	.LASF12
 253 0091 03       		.byte	0x3
 254 0092 2D       		.byte	0x2d
 255 0093 53000000 		.4byte	0x53
 256 0097 02       		.uleb128 0x2
 257 0098 04       		.byte	0x4
 258 0099 07       		.byte	0x7
 259 009a EB010000 		.4byte	.LASF13
 260 009e 02       		.uleb128 0x2
 261 009f 01       		.byte	0x1
 262 00a0 08       		.byte	0x8
 263 00a1 13020000 		.4byte	.LASF14
 264 00a5 02       		.uleb128 0x2
 265 00a6 08       		.byte	0x8
 266 00a7 04       		.byte	0x4
 267 00a8 EB000000 		.4byte	.LASF15
 268 00ac 02       		.uleb128 0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 16


 269 00ad 04       		.byte	0x4
 270 00ae 04       		.byte	0x4
 271 00af 2F000000 		.4byte	.LASF16
 272 00b3 02       		.uleb128 0x2
 273 00b4 08       		.byte	0x8
 274 00b5 04       		.byte	0x4
 275 00b6 44020000 		.4byte	.LASF17
 276 00ba 05       		.uleb128 0x5
 277 00bb 18020000 		.4byte	.LASF18
 278 00bf 04       		.byte	0x4
 279 00c0 A501     		.2byte	0x1a5
 280 00c2 AC000000 		.4byte	0xac
 281 00c6 06       		.uleb128 0x6
 282 00c7 04       		.byte	0x4
 283 00c8 BA000000 		.4byte	0xba
 284 00cc 07       		.uleb128 0x7
 285 00cd 0C       		.byte	0xc
 286 00ce 04       		.byte	0x4
 287 00cf 590E     		.2byte	0xe59
 288 00d1 FD000000 		.4byte	0xfd
 289 00d5 08       		.uleb128 0x8
 290 00d6 61020000 		.4byte	.LASF19
 291 00da 04       		.byte	0x4
 292 00db 5B0E     		.2byte	0xe5b
 293 00dd 81000000 		.4byte	0x81
 294 00e1 00       		.byte	0
 295 00e2 08       		.uleb128 0x8
 296 00e3 0C020000 		.4byte	.LASF20
 297 00e7 04       		.byte	0x4
 298 00e8 5C0E     		.2byte	0xe5c
 299 00ea C6000000 		.4byte	0xc6
 300 00ee 04       		.byte	0x4
 301 00ef 08       		.uleb128 0x8
 302 00f0 2C020000 		.4byte	.LASF21
 303 00f4 04       		.byte	0x4
 304 00f5 5D0E     		.2byte	0xe5d
 305 00f7 C6000000 		.4byte	0xc6
 306 00fb 08       		.byte	0x8
 307 00fc 00       		.byte	0
 308 00fd 05       		.uleb128 0x5
 309 00fe 0A000000 		.4byte	.LASF22
 310 0102 04       		.byte	0x4
 311 0103 5E0E     		.2byte	0xe5e
 312 0105 CC000000 		.4byte	0xcc
 313 0109 09       		.uleb128 0x9
 314 010a 92000000 		.4byte	.LASF33
 315 010e 01       		.byte	0x1
 316 010f 8E       		.byte	0x8e
 317 0110 00000000 		.4byte	.LFB82
 318 0114 E6000000 		.4byte	.LFE82-.LFB82
 319 0118 01       		.uleb128 0x1
 320 0119 9C       		.byte	0x9c
 321 011a F1010000 		.4byte	0x1f1
 322 011e 0A       		.uleb128 0xa
 323 011f 5300     		.ascii	"S\000"
 324 0121 01       		.byte	0x1
 325 0122 8F       		.byte	0x8f
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 17


 326 0123 F1010000 		.4byte	0x1f1
 327 0127 01       		.uleb128 0x1
 328 0128 50       		.byte	0x50
 329 0129 0B       		.uleb128 0xb
 330 012a 5C020000 		.4byte	.LASF23
 331 012e 01       		.byte	0x1
 332 012f 90       		.byte	0x90
 333 0130 C6000000 		.4byte	0xc6
 334 0134 01       		.uleb128 0x1
 335 0135 59       		.byte	0x59
 336 0136 0B       		.uleb128 0xb
 337 0137 E6000000 		.4byte	.LASF24
 338 013b 01       		.byte	0x1
 339 013c 91       		.byte	0x91
 340 013d C6000000 		.4byte	0xc6
 341 0141 01       		.uleb128 0x1
 342 0142 5B       		.byte	0x5b
 343 0143 0B       		.uleb128 0xb
 344 0144 02020000 		.4byte	.LASF25
 345 0148 01       		.byte	0x1
 346 0149 92       		.byte	0x92
 347 014a 8C000000 		.4byte	0x8c
 348 014e 01       		.uleb128 0x1
 349 014f 53       		.byte	0x53
 350 0150 0C       		.uleb128 0xc
 351 0151 70496E00 		.ascii	"pIn\000"
 352 0155 01       		.byte	0x1
 353 0156 95       		.byte	0x95
 354 0157 C6000000 		.4byte	0xc6
 355 015b 0D       		.uleb128 0xd
 356 015c AE000000 		.4byte	.LASF26
 357 0160 01       		.byte	0x1
 358 0161 96       		.byte	0x96
 359 0162 C6000000 		.4byte	0xc6
 360 0166 0D       		.uleb128 0xd
 361 0167 0C020000 		.4byte	.LASF20
 362 016b 01       		.byte	0x1
 363 016c 97       		.byte	0x97
 364 016d C6000000 		.4byte	0xc6
 365 0171 0D       		.uleb128 0xd
 366 0172 2C020000 		.4byte	.LASF21
 367 0176 01       		.byte	0x1
 368 0177 98       		.byte	0x98
 369 0178 C6000000 		.4byte	0xc6
 370 017c 0D       		.uleb128 0xd
 371 017d 6B020000 		.4byte	.LASF27
 372 0181 01       		.byte	0x1
 373 0182 99       		.byte	0x99
 374 0183 BA000000 		.4byte	0xba
 375 0187 0C       		.uleb128 0xc
 376 0188 623000   		.ascii	"b0\000"
 377 018b 01       		.byte	0x1
 378 018c 9A       		.byte	0x9a
 379 018d BA000000 		.4byte	0xba
 380 0191 0C       		.uleb128 0xc
 381 0192 623100   		.ascii	"b1\000"
 382 0195 01       		.byte	0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 18


 383 0196 9A       		.byte	0x9a
 384 0197 BA000000 		.4byte	0xba
 385 019b 0C       		.uleb128 0xc
 386 019c 623200   		.ascii	"b2\000"
 387 019f 01       		.byte	0x1
 388 01a0 9A       		.byte	0x9a
 389 01a1 BA000000 		.4byte	0xba
 390 01a5 0C       		.uleb128 0xc
 391 01a6 613100   		.ascii	"a1\000"
 392 01a9 01       		.byte	0x1
 393 01aa 9A       		.byte	0x9a
 394 01ab BA000000 		.4byte	0xba
 395 01af 0C       		.uleb128 0xc
 396 01b0 613200   		.ascii	"a2\000"
 397 01b3 01       		.byte	0x1
 398 01b4 9A       		.byte	0x9a
 399 01b5 BA000000 		.4byte	0xba
 400 01b9 0E       		.uleb128 0xe
 401 01ba 586E3100 		.ascii	"Xn1\000"
 402 01be 01       		.byte	0x1
 403 01bf 9B       		.byte	0x9b
 404 01c0 BA000000 		.4byte	0xba
 405 01c4 01       		.uleb128 0x1
 406 01c5 55       		.byte	0x55
 407 01c6 0C       		.uleb128 0xc
 408 01c7 643100   		.ascii	"d1\000"
 409 01ca 01       		.byte	0x1
 410 01cb 9C       		.byte	0x9c
 411 01cc BA000000 		.4byte	0xba
 412 01d0 0C       		.uleb128 0xc
 413 01d1 643200   		.ascii	"d2\000"
 414 01d4 01       		.byte	0x1
 415 01d5 9C       		.byte	0x9c
 416 01d6 BA000000 		.4byte	0xba
 417 01da 0D       		.uleb128 0xd
 418 01db 3D020000 		.4byte	.LASF28
 419 01df 01       		.byte	0x1
 420 01e0 9D       		.byte	0x9d
 421 01e1 8C000000 		.4byte	0x8c
 422 01e5 0D       		.uleb128 0xd
 423 01e6 8C000000 		.4byte	.LASF29
 424 01ea 01       		.byte	0x1
 425 01eb 9D       		.byte	0x9d
 426 01ec 8C000000 		.4byte	0x8c
 427 01f0 00       		.byte	0
 428 01f1 06       		.uleb128 0x6
 429 01f2 04       		.byte	0x4
 430 01f3 F7010000 		.4byte	0x1f7
 431 01f7 0F       		.uleb128 0xf
 432 01f8 FD000000 		.4byte	0xfd
 433 01fc 00       		.byte	0
 434              		.section	.debug_abbrev,"",%progbits
 435              	.Ldebug_abbrev0:
 436 0000 01       		.uleb128 0x1
 437 0001 11       		.uleb128 0x11
 438 0002 01       		.byte	0x1
 439 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 19


 440 0004 0E       		.uleb128 0xe
 441 0005 13       		.uleb128 0x13
 442 0006 0B       		.uleb128 0xb
 443 0007 03       		.uleb128 0x3
 444 0008 0E       		.uleb128 0xe
 445 0009 1B       		.uleb128 0x1b
 446 000a 0E       		.uleb128 0xe
 447 000b 55       		.uleb128 0x55
 448 000c 17       		.uleb128 0x17
 449 000d 11       		.uleb128 0x11
 450 000e 01       		.uleb128 0x1
 451 000f 10       		.uleb128 0x10
 452 0010 17       		.uleb128 0x17
 453 0011 00       		.byte	0
 454 0012 00       		.byte	0
 455 0013 02       		.uleb128 0x2
 456 0014 24       		.uleb128 0x24
 457 0015 00       		.byte	0
 458 0016 0B       		.uleb128 0xb
 459 0017 0B       		.uleb128 0xb
 460 0018 3E       		.uleb128 0x3e
 461 0019 0B       		.uleb128 0xb
 462 001a 03       		.uleb128 0x3
 463 001b 0E       		.uleb128 0xe
 464 001c 00       		.byte	0
 465 001d 00       		.byte	0
 466 001e 03       		.uleb128 0x3
 467 001f 16       		.uleb128 0x16
 468 0020 00       		.byte	0
 469 0021 03       		.uleb128 0x3
 470 0022 0E       		.uleb128 0xe
 471 0023 3A       		.uleb128 0x3a
 472 0024 0B       		.uleb128 0xb
 473 0025 3B       		.uleb128 0x3b
 474 0026 0B       		.uleb128 0xb
 475 0027 49       		.uleb128 0x49
 476 0028 13       		.uleb128 0x13
 477 0029 00       		.byte	0
 478 002a 00       		.byte	0
 479 002b 04       		.uleb128 0x4
 480 002c 24       		.uleb128 0x24
 481 002d 00       		.byte	0
 482 002e 0B       		.uleb128 0xb
 483 002f 0B       		.uleb128 0xb
 484 0030 3E       		.uleb128 0x3e
 485 0031 0B       		.uleb128 0xb
 486 0032 03       		.uleb128 0x3
 487 0033 08       		.uleb128 0x8
 488 0034 00       		.byte	0
 489 0035 00       		.byte	0
 490 0036 05       		.uleb128 0x5
 491 0037 16       		.uleb128 0x16
 492 0038 00       		.byte	0
 493 0039 03       		.uleb128 0x3
 494 003a 0E       		.uleb128 0xe
 495 003b 3A       		.uleb128 0x3a
 496 003c 0B       		.uleb128 0xb
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 20


 497 003d 3B       		.uleb128 0x3b
 498 003e 05       		.uleb128 0x5
 499 003f 49       		.uleb128 0x49
 500 0040 13       		.uleb128 0x13
 501 0041 00       		.byte	0
 502 0042 00       		.byte	0
 503 0043 06       		.uleb128 0x6
 504 0044 0F       		.uleb128 0xf
 505 0045 00       		.byte	0
 506 0046 0B       		.uleb128 0xb
 507 0047 0B       		.uleb128 0xb
 508 0048 49       		.uleb128 0x49
 509 0049 13       		.uleb128 0x13
 510 004a 00       		.byte	0
 511 004b 00       		.byte	0
 512 004c 07       		.uleb128 0x7
 513 004d 13       		.uleb128 0x13
 514 004e 01       		.byte	0x1
 515 004f 0B       		.uleb128 0xb
 516 0050 0B       		.uleb128 0xb
 517 0051 3A       		.uleb128 0x3a
 518 0052 0B       		.uleb128 0xb
 519 0053 3B       		.uleb128 0x3b
 520 0054 05       		.uleb128 0x5
 521 0055 01       		.uleb128 0x1
 522 0056 13       		.uleb128 0x13
 523 0057 00       		.byte	0
 524 0058 00       		.byte	0
 525 0059 08       		.uleb128 0x8
 526 005a 0D       		.uleb128 0xd
 527 005b 00       		.byte	0
 528 005c 03       		.uleb128 0x3
 529 005d 0E       		.uleb128 0xe
 530 005e 3A       		.uleb128 0x3a
 531 005f 0B       		.uleb128 0xb
 532 0060 3B       		.uleb128 0x3b
 533 0061 05       		.uleb128 0x5
 534 0062 49       		.uleb128 0x49
 535 0063 13       		.uleb128 0x13
 536 0064 38       		.uleb128 0x38
 537 0065 0B       		.uleb128 0xb
 538 0066 00       		.byte	0
 539 0067 00       		.byte	0
 540 0068 09       		.uleb128 0x9
 541 0069 2E       		.uleb128 0x2e
 542 006a 01       		.byte	0x1
 543 006b 3F       		.uleb128 0x3f
 544 006c 19       		.uleb128 0x19
 545 006d 03       		.uleb128 0x3
 546 006e 0E       		.uleb128 0xe
 547 006f 3A       		.uleb128 0x3a
 548 0070 0B       		.uleb128 0xb
 549 0071 3B       		.uleb128 0x3b
 550 0072 0B       		.uleb128 0xb
 551 0073 27       		.uleb128 0x27
 552 0074 19       		.uleb128 0x19
 553 0075 11       		.uleb128 0x11
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 21


 554 0076 01       		.uleb128 0x1
 555 0077 12       		.uleb128 0x12
 556 0078 06       		.uleb128 0x6
 557 0079 40       		.uleb128 0x40
 558 007a 18       		.uleb128 0x18
 559 007b 9642     		.uleb128 0x2116
 560 007d 19       		.uleb128 0x19
 561 007e 01       		.uleb128 0x1
 562 007f 13       		.uleb128 0x13
 563 0080 00       		.byte	0
 564 0081 00       		.byte	0
 565 0082 0A       		.uleb128 0xa
 566 0083 05       		.uleb128 0x5
 567 0084 00       		.byte	0
 568 0085 03       		.uleb128 0x3
 569 0086 08       		.uleb128 0x8
 570 0087 3A       		.uleb128 0x3a
 571 0088 0B       		.uleb128 0xb
 572 0089 3B       		.uleb128 0x3b
 573 008a 0B       		.uleb128 0xb
 574 008b 49       		.uleb128 0x49
 575 008c 13       		.uleb128 0x13
 576 008d 02       		.uleb128 0x2
 577 008e 18       		.uleb128 0x18
 578 008f 00       		.byte	0
 579 0090 00       		.byte	0
 580 0091 0B       		.uleb128 0xb
 581 0092 05       		.uleb128 0x5
 582 0093 00       		.byte	0
 583 0094 03       		.uleb128 0x3
 584 0095 0E       		.uleb128 0xe
 585 0096 3A       		.uleb128 0x3a
 586 0097 0B       		.uleb128 0xb
 587 0098 3B       		.uleb128 0x3b
 588 0099 0B       		.uleb128 0xb
 589 009a 49       		.uleb128 0x49
 590 009b 13       		.uleb128 0x13
 591 009c 02       		.uleb128 0x2
 592 009d 18       		.uleb128 0x18
 593 009e 00       		.byte	0
 594 009f 00       		.byte	0
 595 00a0 0C       		.uleb128 0xc
 596 00a1 34       		.uleb128 0x34
 597 00a2 00       		.byte	0
 598 00a3 03       		.uleb128 0x3
 599 00a4 08       		.uleb128 0x8
 600 00a5 3A       		.uleb128 0x3a
 601 00a6 0B       		.uleb128 0xb
 602 00a7 3B       		.uleb128 0x3b
 603 00a8 0B       		.uleb128 0xb
 604 00a9 49       		.uleb128 0x49
 605 00aa 13       		.uleb128 0x13
 606 00ab 00       		.byte	0
 607 00ac 00       		.byte	0
 608 00ad 0D       		.uleb128 0xd
 609 00ae 34       		.uleb128 0x34
 610 00af 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 22


 611 00b0 03       		.uleb128 0x3
 612 00b1 0E       		.uleb128 0xe
 613 00b2 3A       		.uleb128 0x3a
 614 00b3 0B       		.uleb128 0xb
 615 00b4 3B       		.uleb128 0x3b
 616 00b5 0B       		.uleb128 0xb
 617 00b6 49       		.uleb128 0x49
 618 00b7 13       		.uleb128 0x13
 619 00b8 00       		.byte	0
 620 00b9 00       		.byte	0
 621 00ba 0E       		.uleb128 0xe
 622 00bb 34       		.uleb128 0x34
 623 00bc 00       		.byte	0
 624 00bd 03       		.uleb128 0x3
 625 00be 08       		.uleb128 0x8
 626 00bf 3A       		.uleb128 0x3a
 627 00c0 0B       		.uleb128 0xb
 628 00c1 3B       		.uleb128 0x3b
 629 00c2 0B       		.uleb128 0xb
 630 00c3 49       		.uleb128 0x49
 631 00c4 13       		.uleb128 0x13
 632 00c5 02       		.uleb128 0x2
 633 00c6 18       		.uleb128 0x18
 634 00c7 00       		.byte	0
 635 00c8 00       		.byte	0
 636 00c9 0F       		.uleb128 0xf
 637 00ca 26       		.uleb128 0x26
 638 00cb 00       		.byte	0
 639 00cc 49       		.uleb128 0x49
 640 00cd 13       		.uleb128 0x13
 641 00ce 00       		.byte	0
 642 00cf 00       		.byte	0
 643 00d0 00       		.byte	0
 644              		.section	.debug_aranges,"",%progbits
 645 0000 1C000000 		.4byte	0x1c
 646 0004 0200     		.2byte	0x2
 647 0006 00000000 		.4byte	.Ldebug_info0
 648 000a 04       		.byte	0x4
 649 000b 00       		.byte	0
 650 000c 0000     		.2byte	0
 651 000e 0000     		.2byte	0
 652 0010 00000000 		.4byte	.LFB82
 653 0014 E6000000 		.4byte	.LFE82-.LFB82
 654 0018 00000000 		.4byte	0
 655 001c 00000000 		.4byte	0
 656              		.section	.debug_ranges,"",%progbits
 657              	.Ldebug_ranges0:
 658 0000 00000000 		.4byte	.LFB82
 659 0004 E6000000 		.4byte	.LFE82
 660 0008 00000000 		.4byte	0
 661 000c 00000000 		.4byte	0
 662              		.section	.debug_line,"",%progbits
 663              	.Ldebug_line0:
 664 0000 9B010000 		.section	.debug_str,"MS",%progbits,1
 664      02005E01 
 664      00000201 
 664      FB0E0D00 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 23


 664      01010101 
 665              	.LASF5:
 666 0000 5F5F7569 		.ascii	"__uint8_t\000"
 666      6E74385F 
 666      7400
 667              	.LASF22:
 668 000a 61726D5F 		.ascii	"arm_biquad_cascade_df2T_instance_f32\000"
 668      62697175 
 668      61645F63 
 668      61736361 
 668      64655F64 
 669              	.LASF16:
 670 002f 666C6F61 		.ascii	"float\000"
 670      7400
 671              	.LASF4:
 672 0035 6C6F6E67 		.ascii	"long int\000"
 672      20696E74 
 672      00
 673              	.LASF32:
 674 003e 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 674      73657273 
 674      5C666E65 
 674      7665735C 
 674      446F6375 
 675 006b 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 675      655F7370 
 675      6565645F 
 675      73656E73 
 675      6F722E63 
 676              	.LASF11:
 677 0084 75696E74 		.ascii	"uint8_t\000"
 677      385F7400 
 678              	.LASF29:
 679 008c 73746167 		.ascii	"stage\000"
 679      6500
 680              	.LASF33:
 681 0092 61726D5F 		.ascii	"arm_biquad_cascade_df2T_f32\000"
 681      62697175 
 681      61645F63 
 681      61736361 
 681      64655F64 
 682              	.LASF26:
 683 00ae 704F7574 		.ascii	"pOut\000"
 683      00
 684              	.LASF1:
 685 00b3 756E7369 		.ascii	"unsigned char\000"
 685      676E6564 
 685      20636861 
 685      7200
 686              	.LASF7:
 687 00c1 6C6F6E67 		.ascii	"long unsigned int\000"
 687      20756E73 
 687      69676E65 
 687      6420696E 
 687      7400
 688              	.LASF3:
 689 00d3 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 24


 689      7420756E 
 689      7369676E 
 689      65642069 
 689      6E7400
 690              	.LASF24:
 691 00e6 70447374 		.ascii	"pDst\000"
 691      00
 692              	.LASF15:
 693 00eb 646F7562 		.ascii	"double\000"
 693      6C6500
 694              	.LASF6:
 695 00f2 5F5F7569 		.ascii	"__uint32_t\000"
 695      6E743332 
 695      5F7400
 696              	.LASF10:
 697 00fd 756E7369 		.ascii	"unsigned int\000"
 697      676E6564 
 697      20696E74 
 697      00
 698              	.LASF31:
 699 010a 536F7572 		.ascii	"Source\\FilteringFunctions\\arm_biquad_cascade_df2T"
 699      63655C46 
 699      696C7465 
 699      72696E67 
 699      46756E63 
 700 013b 5F663332 		.ascii	"_f32.c\000"
 700      2E6300
 701              	.LASF9:
 702 0142 6C6F6E67 		.ascii	"long long unsigned int\000"
 702      206C6F6E 
 702      6720756E 
 702      7369676E 
 702      65642069 
 703              	.LASF30:
 704 0159 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 704      4320342E 
 704      392E3320 
 704      32303135 
 704      30333033 
 705 018c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 705      20726576 
 705      6973696F 
 705      6E203232 
 705      31323230 
 706 01bf 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 706      30202D66 
 706      66756E63 
 706      74696F6E 
 706      2D736563 
 707              	.LASF13:
 708 01eb 73697A65 		.ascii	"sizetype\000"
 708      74797065 
 708      00
 709              	.LASF8:
 710 01f4 6C6F6E67 		.ascii	"long long int\000"
 710      206C6F6E 
 710      6720696E 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccCGYVji.s 			page 25


 710      7400
 711              	.LASF25:
 712 0202 626C6F63 		.ascii	"blockSize\000"
 712      6B53697A 
 712      6500
 713              	.LASF20:
 714 020c 70537461 		.ascii	"pState\000"
 714      746500
 715              	.LASF14:
 716 0213 63686172 		.ascii	"char\000"
 716      00
 717              	.LASF18:
 718 0218 666C6F61 		.ascii	"float32_t\000"
 718      7433325F 
 718      7400
 719              	.LASF2:
 720 0222 73686F72 		.ascii	"short int\000"
 720      7420696E 
 720      7400
 721              	.LASF21:
 722 022c 70436F65 		.ascii	"pCoeffs\000"
 722      66667300 
 723              	.LASF12:
 724 0234 75696E74 		.ascii	"uint32_t\000"
 724      33325F74 
 724      00
 725              	.LASF28:
 726 023d 73616D70 		.ascii	"sample\000"
 726      6C6500
 727              	.LASF17:
 728 0244 6C6F6E67 		.ascii	"long double\000"
 728      20646F75 
 728      626C6500 
 729              	.LASF0:
 730 0250 7369676E 		.ascii	"signed char\000"
 730      65642063 
 730      68617200 
 731              	.LASF23:
 732 025c 70537263 		.ascii	"pSrc\000"
 732      00
 733              	.LASF19:
 734 0261 6E756D53 		.ascii	"numStages\000"
 734      74616765 
 734      7300
 735              	.LASF27:
 736 026b 61636331 		.ascii	"acc1\000"
 736      00
 737              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
