ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccOHEqPR.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_dot_prod_q15.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.arm_dot_prod_q15,"ax",%progbits
  18              		.align	2
  19              		.global	arm_dot_prod_q15
  20              		.code	16
  21              		.thumb_func
  22              		.type	arm_dot_prod_q15, %function
  23              	arm_dot_prod_q15:
  24              	.LFB82:
  25              		.file 1 "Source\\BasicMathFunctions\\arm_dot_prod_q15.c"
   1:Source\BasicMathFunctions/arm_dot_prod_q15.c **** /* ----------------------------------------------------------------------
   2:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * Project:      CMSIS DSP Library
   3:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * Title:        arm_dot_prod_q15.c
   4:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * Description:  Q15 dot product
   5:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  *
   6:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * $Date:        27. January 2017
   7:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * $Revision:    V.1.5.1
   8:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  *
   9:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * Target Processor: Cortex-M cores
  10:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * -------------------------------------------------------------------- */
  11:Source\BasicMathFunctions/arm_dot_prod_q15.c **** /*
  12:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  *
  14:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  *
  16:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * not use this file except in compliance with the License.
  18:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * You may obtain a copy of the License at
  19:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  *
  20:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  *
  22:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * See the License for the specific language governing permissions and
  26:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * limitations under the License.
  27:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  */
  28:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  29:Source\BasicMathFunctions/arm_dot_prod_q15.c **** #include "arm_math.h"
  30:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  31:Source\BasicMathFunctions/arm_dot_prod_q15.c **** /**
  32:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * @ingroup groupMath
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccOHEqPR.s 			page 2


  33:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  */
  34:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  35:Source\BasicMathFunctions/arm_dot_prod_q15.c **** /**
  36:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * @addtogroup dot_prod
  37:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * @{
  38:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  */
  39:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  40:Source\BasicMathFunctions/arm_dot_prod_q15.c **** /**
  41:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * @brief Dot product of Q15 vectors.
  42:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * @param[in]       *pSrcA points to the first input vector
  43:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * @param[in]       *pSrcB points to the second input vector
  44:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * @param[in]       blockSize number of samples in each vector
  45:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * @param[out]      *result output result returned here
  46:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * @return none.
  47:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  *
  48:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * <b>Scaling and Overflow Behavior:</b>
  49:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * \par
  50:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * The intermediate multiplications are in 1.15 x 1.15 = 2.30 format and these
  51:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * results are added to a 64-bit accumulator in 34.30 format.
  52:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * Nonsaturating additions are used and given that there are 33 guard bits in the accumulator
  53:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * there is no risk of overflow.
  54:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * The return result is in 34.30 format.
  55:Source\BasicMathFunctions/arm_dot_prod_q15.c ****  */
  56:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  57:Source\BasicMathFunctions/arm_dot_prod_q15.c **** void arm_dot_prod_q15(
  58:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   q15_t * pSrcA,
  59:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   q15_t * pSrcB,
  60:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   uint32_t blockSize,
  61:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   q63_t * result)
  62:Source\BasicMathFunctions/arm_dot_prod_q15.c **** {
  26              		.loc 1 62 0
  27              		.cfi_startproc
  28 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  29              		.cfi_def_cfa_offset 20
  30              		.cfi_offset 4, -20
  31              		.cfi_offset 5, -16
  32              		.cfi_offset 6, -12
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 89B0     		sub	sp, sp, #36
  36              		.cfi_def_cfa_offset 56
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 F860     		str	r0, [r7, #12]
  40 0008 B960     		str	r1, [r7, #8]
  41 000a 7A60     		str	r2, [r7, #4]
  42 000c 3B60     		str	r3, [r7]
  63:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   q63_t sum = 0;                                 /* Temporary result storage */
  43              		.loc 1 63 0
  44 000e 0023     		mov	r3, #0
  45 0010 0024     		mov	r4, #0
  46 0012 BB61     		str	r3, [r7, #24]
  47 0014 FC61     		str	r4, [r7, #28]
  64:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   uint32_t blkCnt;                               /* loop counter */
  65:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  66:Source\BasicMathFunctions/arm_dot_prod_q15.c **** #if defined (ARM_MATH_DSP)
  67:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccOHEqPR.s 			page 3


  68:Source\BasicMathFunctions/arm_dot_prod_q15.c **** /* Run the below code for Cortex-M4 and Cortex-M3 */
  69:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  70:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  71:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   /*loop Unrolling */
  72:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   blkCnt = blockSize >> 2u;
  73:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  74:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  75:Source\BasicMathFunctions/arm_dot_prod_q15.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  76:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   while (blkCnt > 0u)
  77:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   {
  78:Source\BasicMathFunctions/arm_dot_prod_q15.c ****     /* C = A[0]* B[0] + A[1]* B[1] + A[2]* B[2] + .....+ A[blockSize-1]* B[blockSize-1] */
  79:Source\BasicMathFunctions/arm_dot_prod_q15.c ****     /* Calculate dot product and then store the result in a temporary buffer. */
  80:Source\BasicMathFunctions/arm_dot_prod_q15.c ****     sum = __SMLALD(*__SIMD32(pSrcA)++, *__SIMD32(pSrcB)++, sum);
  81:Source\BasicMathFunctions/arm_dot_prod_q15.c ****     sum = __SMLALD(*__SIMD32(pSrcA)++, *__SIMD32(pSrcB)++, sum);
  82:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  83:Source\BasicMathFunctions/arm_dot_prod_q15.c ****     /* Decrement the loop counter */
  84:Source\BasicMathFunctions/arm_dot_prod_q15.c ****     blkCnt--;
  85:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   }
  86:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  87:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
  88:Source\BasicMathFunctions/arm_dot_prod_q15.c ****    ** No loop unrolling is used. */
  89:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   blkCnt = blockSize % 0x4u;
  90:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  91:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   while (blkCnt > 0u)
  92:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   {
  93:Source\BasicMathFunctions/arm_dot_prod_q15.c ****     /* C = A[0]* B[0] + A[1]* B[1] + A[2]* B[2] + .....+ A[blockSize-1]* B[blockSize-1] */
  94:Source\BasicMathFunctions/arm_dot_prod_q15.c ****     /* Calculate dot product and then store the results in a temporary buffer. */
  95:Source\BasicMathFunctions/arm_dot_prod_q15.c ****     sum = __SMLALD(*pSrcA++, *pSrcB++, sum);
  96:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  97:Source\BasicMathFunctions/arm_dot_prod_q15.c ****     /* Decrement the loop counter */
  98:Source\BasicMathFunctions/arm_dot_prod_q15.c ****     blkCnt--;
  99:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   }
 100:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 101:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 102:Source\BasicMathFunctions/arm_dot_prod_q15.c **** #else
 103:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 104:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   /* Run the below code for Cortex-M0 */
 105:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 106:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   /* Initialize blkCnt with number of samples */
 107:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   blkCnt = blockSize;
  48              		.loc 1 107 0
  49 0016 7B68     		ldr	r3, [r7, #4]
  50 0018 7B61     		str	r3, [r7, #20]
 108:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 109:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   while (blkCnt > 0u)
  51              		.loc 1 109 0
  52 001a 16E0     		b	.L2
  53              	.L3:
 110:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   {
 111:Source\BasicMathFunctions/arm_dot_prod_q15.c ****     /* C = A[0]* B[0] + A[1]* B[1] + A[2]* B[2] + .....+ A[blockSize-1]* B[blockSize-1] */
 112:Source\BasicMathFunctions/arm_dot_prod_q15.c ****     /* Calculate dot product and then store the results in a temporary buffer. */
 113:Source\BasicMathFunctions/arm_dot_prod_q15.c ****     sum += (q63_t) ((q31_t) * pSrcA++ * *pSrcB++);
  54              		.loc 1 113 0
  55 001c FB68     		ldr	r3, [r7, #12]
  56 001e 9A1C     		add	r2, r3, #2
  57 0020 FA60     		str	r2, [r7, #12]
  58 0022 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccOHEqPR.s 			page 4


  59 0024 1AB2     		sxth	r2, r3
  60 0026 BB68     		ldr	r3, [r7, #8]
  61 0028 991C     		add	r1, r3, #2
  62 002a B960     		str	r1, [r7, #8]
  63 002c 1B88     		ldrh	r3, [r3]
  64 002e 1BB2     		sxth	r3, r3
  65 0030 5343     		mul	r3, r2
  66 0032 1D1C     		mov	r5, r3
  67 0034 DB17     		asr	r3, r3, #31
  68 0036 1E1C     		mov	r6, r3
  69 0038 BB69     		ldr	r3, [r7, #24]
  70 003a FC69     		ldr	r4, [r7, #28]
  71 003c 5B19     		add	r3, r3, r5
  72 003e 7441     		adc	r4, r4, r6
  73 0040 BB61     		str	r3, [r7, #24]
  74 0042 FC61     		str	r4, [r7, #28]
 114:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 115:Source\BasicMathFunctions/arm_dot_prod_q15.c ****     /* Decrement the loop counter */
 116:Source\BasicMathFunctions/arm_dot_prod_q15.c ****     blkCnt--;
  75              		.loc 1 116 0
  76 0044 7B69     		ldr	r3, [r7, #20]
  77 0046 013B     		sub	r3, r3, #1
  78 0048 7B61     		str	r3, [r7, #20]
  79              	.L2:
 109:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   {
  80              		.loc 1 109 0
  81 004a 7B69     		ldr	r3, [r7, #20]
  82 004c 002B     		cmp	r3, #0
  83 004e E5D1     		bne	.L3
 117:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   }
 118:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 119:Source\BasicMathFunctions/arm_dot_prod_q15.c **** #endif /* #if defined (ARM_MATH_DSP) */
 120:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 121:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   /* Store the result in the destination buffer in 34.30 format */
 122:Source\BasicMathFunctions/arm_dot_prod_q15.c ****   *result = sum;
  84              		.loc 1 122 0
  85 0050 3A68     		ldr	r2, [r7]
  86 0052 BB69     		ldr	r3, [r7, #24]
  87 0054 FC69     		ldr	r4, [r7, #28]
  88 0056 1360     		str	r3, [r2]
  89 0058 5460     		str	r4, [r2, #4]
 123:Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 124:Source\BasicMathFunctions/arm_dot_prod_q15.c **** }
  90              		.loc 1 124 0
  91 005a BD46     		mov	sp, r7
  92 005c 09B0     		add	sp, sp, #36
  93              		@ sp needed
  94 005e F0BD     		pop	{r4, r5, r6, r7, pc}
  95              		.cfi_endproc
  96              	.LFE82:
  97              		.size	arm_dot_prod_q15, .-arm_dot_prod_q15
  98              		.text
  99              	.Letext0:
 100              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 101              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 102              		.file 4 ".\\Include/arm_math.h"
 103              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccOHEqPR.s 			page 5


 104              	.Ldebug_info0:
 105 0000 79010000 		.4byte	0x179
 106 0004 0400     		.2byte	0x4
 107 0006 00000000 		.4byte	.Ldebug_abbrev0
 108 000a 04       		.byte	0x4
 109 000b 01       		.uleb128 0x1
 110 000c FA000000 		.4byte	.LASF30
 111 0010 01       		.byte	0x1
 112 0011 14020000 		.4byte	.LASF31
 113 0015 28000000 		.4byte	.LASF32
 114 0019 00000000 		.4byte	.Ldebug_ranges0+0
 115 001d 00000000 		.4byte	0
 116 0021 00000000 		.4byte	.Ldebug_line0
 117 0025 02       		.uleb128 0x2
 118 0026 01       		.byte	0x1
 119 0027 06       		.byte	0x6
 120 0028 08020000 		.4byte	.LASF0
 121 002c 02       		.uleb128 0x2
 122 002d 01       		.byte	0x1
 123 002e 08       		.byte	0x8
 124 002f 80000000 		.4byte	.LASF1
 125 0033 03       		.uleb128 0x3
 126 0034 08000000 		.4byte	.LASF4
 127 0038 02       		.byte	0x2
 128 0039 29       		.byte	0x29
 129 003a 3E000000 		.4byte	0x3e
 130 003e 02       		.uleb128 0x2
 131 003f 02       		.byte	0x2
 132 0040 05       		.byte	0x5
 133 0041 CF010000 		.4byte	.LASF2
 134 0045 02       		.uleb128 0x2
 135 0046 02       		.byte	0x2
 136 0047 07       		.byte	0x7
 137 0048 A7000000 		.4byte	.LASF3
 138 004c 03       		.uleb128 0x3
 139 004d 1E000000 		.4byte	.LASF5
 140 0051 02       		.byte	0x2
 141 0052 3F       		.byte	0x3f
 142 0053 57000000 		.4byte	0x57
 143 0057 02       		.uleb128 0x2
 144 0058 04       		.byte	0x4
 145 0059 05       		.byte	0x5
 146 005a F3010000 		.4byte	.LASF6
 147 005e 03       		.uleb128 0x3
 148 005f CB000000 		.4byte	.LASF7
 149 0063 02       		.byte	0x2
 150 0064 41       		.byte	0x41
 151 0065 69000000 		.4byte	0x69
 152 0069 02       		.uleb128 0x2
 153 006a 04       		.byte	0x4
 154 006b 07       		.byte	0x7
 155 006c 95000000 		.4byte	.LASF8
 156 0070 03       		.uleb128 0x3
 157 0071 BA000000 		.4byte	.LASF9
 158 0075 02       		.byte	0x2
 159 0076 59       		.byte	0x59
 160 0077 7B000000 		.4byte	0x7b
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccOHEqPR.s 			page 6


 161 007b 02       		.uleb128 0x2
 162 007c 08       		.byte	0x8
 163 007d 05       		.byte	0x5
 164 007e B2010000 		.4byte	.LASF10
 165 0082 02       		.uleb128 0x2
 166 0083 08       		.byte	0x8
 167 0084 07       		.byte	0x7
 168 0085 E3000000 		.4byte	.LASF11
 169 0089 04       		.uleb128 0x4
 170 008a 04       		.byte	0x4
 171 008b 05       		.byte	0x5
 172 008c 696E7400 		.ascii	"int\000"
 173 0090 02       		.uleb128 0x2
 174 0091 04       		.byte	0x4
 175 0092 07       		.byte	0x7
 176 0093 D6000000 		.4byte	.LASF12
 177 0097 03       		.uleb128 0x3
 178 0098 99010000 		.4byte	.LASF13
 179 009c 03       		.byte	0x3
 180 009d 20       		.byte	0x20
 181 009e 33000000 		.4byte	0x33
 182 00a2 03       		.uleb128 0x3
 183 00a3 A1010000 		.4byte	.LASF14
 184 00a7 03       		.byte	0x3
 185 00a8 2C       		.byte	0x2c
 186 00a9 4C000000 		.4byte	0x4c
 187 00ad 03       		.uleb128 0x3
 188 00ae EA010000 		.4byte	.LASF15
 189 00b2 03       		.byte	0x3
 190 00b3 2D       		.byte	0x2d
 191 00b4 5E000000 		.4byte	0x5e
 192 00b8 03       		.uleb128 0x3
 193 00b9 00000000 		.4byte	.LASF16
 194 00bd 03       		.byte	0x3
 195 00be 38       		.byte	0x38
 196 00bf 70000000 		.4byte	0x70
 197 00c3 02       		.uleb128 0x2
 198 00c4 04       		.byte	0x4
 199 00c5 07       		.byte	0x7
 200 00c6 A9010000 		.4byte	.LASF17
 201 00ca 02       		.uleb128 0x2
 202 00cb 01       		.byte	0x1
 203 00cc 08       		.byte	0x8
 204 00cd CA010000 		.4byte	.LASF18
 205 00d1 02       		.uleb128 0x2
 206 00d2 08       		.byte	0x8
 207 00d3 04       		.byte	0x4
 208 00d4 C4000000 		.4byte	.LASF19
 209 00d8 02       		.uleb128 0x2
 210 00d9 04       		.byte	0x4
 211 00da 04       		.byte	0x4
 212 00db 74000000 		.4byte	.LASF20
 213 00df 02       		.uleb128 0x2
 214 00e0 08       		.byte	0x8
 215 00e1 04       		.byte	0x4
 216 00e2 FC010000 		.4byte	.LASF21
 217 00e6 05       		.uleb128 0x5
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccOHEqPR.s 			page 7


 218 00e7 6E000000 		.4byte	.LASF22
 219 00eb 04       		.byte	0x4
 220 00ec 9601     		.2byte	0x196
 221 00ee 97000000 		.4byte	0x97
 222 00f2 05       		.uleb128 0x5
 223 00f3 7A000000 		.4byte	.LASF23
 224 00f7 04       		.byte	0x4
 225 00f8 9B01     		.2byte	0x19b
 226 00fa A2000000 		.4byte	0xa2
 227 00fe 05       		.uleb128 0x5
 228 00ff 93010000 		.4byte	.LASF24
 229 0103 04       		.byte	0x4
 230 0104 A001     		.2byte	0x1a0
 231 0106 B8000000 		.4byte	0xb8
 232 010a 06       		.uleb128 0x6
 233 010b 04       		.byte	0x4
 234 010c E6000000 		.4byte	0xe6
 235 0110 06       		.uleb128 0x6
 236 0111 04       		.byte	0x4
 237 0112 FE000000 		.4byte	0xfe
 238 0116 07       		.uleb128 0x7
 239 0117 D9010000 		.4byte	.LASF33
 240 011b 01       		.byte	0x1
 241 011c 39       		.byte	0x39
 242 011d 00000000 		.4byte	.LFB82
 243 0121 60000000 		.4byte	.LFE82-.LFB82
 244 0125 01       		.uleb128 0x1
 245 0126 9C       		.byte	0x9c
 246 0127 08       		.uleb128 0x8
 247 0128 12000000 		.4byte	.LASF25
 248 012c 01       		.byte	0x1
 249 012d 3A       		.byte	0x3a
 250 012e 0A010000 		.4byte	0x10a
 251 0132 02       		.uleb128 0x2
 252 0133 91       		.byte	0x91
 253 0134 54       		.sleb128 -44
 254 0135 08       		.uleb128 0x8
 255 0136 18000000 		.4byte	.LASF26
 256 013a 01       		.byte	0x1
 257 013b 3B       		.byte	0x3b
 258 013c 0A010000 		.4byte	0x10a
 259 0140 02       		.uleb128 0x2
 260 0141 91       		.byte	0x91
 261 0142 50       		.sleb128 -48
 262 0143 08       		.uleb128 0x8
 263 0144 C0010000 		.4byte	.LASF27
 264 0148 01       		.byte	0x1
 265 0149 3C       		.byte	0x3c
 266 014a AD000000 		.4byte	0xad
 267 014e 02       		.uleb128 0x2
 268 014f 91       		.byte	0x91
 269 0150 4C       		.sleb128 -52
 270 0151 08       		.uleb128 0x8
 271 0152 8C010000 		.4byte	.LASF28
 272 0156 01       		.byte	0x1
 273 0157 3D       		.byte	0x3d
 274 0158 10010000 		.4byte	0x110
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccOHEqPR.s 			page 8


 275 015c 02       		.uleb128 0x2
 276 015d 91       		.byte	0x91
 277 015e 48       		.sleb128 -56
 278 015f 09       		.uleb128 0x9
 279 0160 73756D00 		.ascii	"sum\000"
 280 0164 01       		.byte	0x1
 281 0165 3F       		.byte	0x3f
 282 0166 FE000000 		.4byte	0xfe
 283 016a 02       		.uleb128 0x2
 284 016b 91       		.byte	0x91
 285 016c 60       		.sleb128 -32
 286 016d 0A       		.uleb128 0xa
 287 016e 8E000000 		.4byte	.LASF29
 288 0172 01       		.byte	0x1
 289 0173 40       		.byte	0x40
 290 0174 AD000000 		.4byte	0xad
 291 0178 02       		.uleb128 0x2
 292 0179 91       		.byte	0x91
 293 017a 5C       		.sleb128 -36
 294 017b 00       		.byte	0
 295 017c 00       		.byte	0
 296              		.section	.debug_abbrev,"",%progbits
 297              	.Ldebug_abbrev0:
 298 0000 01       		.uleb128 0x1
 299 0001 11       		.uleb128 0x11
 300 0002 01       		.byte	0x1
 301 0003 25       		.uleb128 0x25
 302 0004 0E       		.uleb128 0xe
 303 0005 13       		.uleb128 0x13
 304 0006 0B       		.uleb128 0xb
 305 0007 03       		.uleb128 0x3
 306 0008 0E       		.uleb128 0xe
 307 0009 1B       		.uleb128 0x1b
 308 000a 0E       		.uleb128 0xe
 309 000b 55       		.uleb128 0x55
 310 000c 17       		.uleb128 0x17
 311 000d 11       		.uleb128 0x11
 312 000e 01       		.uleb128 0x1
 313 000f 10       		.uleb128 0x10
 314 0010 17       		.uleb128 0x17
 315 0011 00       		.byte	0
 316 0012 00       		.byte	0
 317 0013 02       		.uleb128 0x2
 318 0014 24       		.uleb128 0x24
 319 0015 00       		.byte	0
 320 0016 0B       		.uleb128 0xb
 321 0017 0B       		.uleb128 0xb
 322 0018 3E       		.uleb128 0x3e
 323 0019 0B       		.uleb128 0xb
 324 001a 03       		.uleb128 0x3
 325 001b 0E       		.uleb128 0xe
 326 001c 00       		.byte	0
 327 001d 00       		.byte	0
 328 001e 03       		.uleb128 0x3
 329 001f 16       		.uleb128 0x16
 330 0020 00       		.byte	0
 331 0021 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccOHEqPR.s 			page 9


 332 0022 0E       		.uleb128 0xe
 333 0023 3A       		.uleb128 0x3a
 334 0024 0B       		.uleb128 0xb
 335 0025 3B       		.uleb128 0x3b
 336 0026 0B       		.uleb128 0xb
 337 0027 49       		.uleb128 0x49
 338 0028 13       		.uleb128 0x13
 339 0029 00       		.byte	0
 340 002a 00       		.byte	0
 341 002b 04       		.uleb128 0x4
 342 002c 24       		.uleb128 0x24
 343 002d 00       		.byte	0
 344 002e 0B       		.uleb128 0xb
 345 002f 0B       		.uleb128 0xb
 346 0030 3E       		.uleb128 0x3e
 347 0031 0B       		.uleb128 0xb
 348 0032 03       		.uleb128 0x3
 349 0033 08       		.uleb128 0x8
 350 0034 00       		.byte	0
 351 0035 00       		.byte	0
 352 0036 05       		.uleb128 0x5
 353 0037 16       		.uleb128 0x16
 354 0038 00       		.byte	0
 355 0039 03       		.uleb128 0x3
 356 003a 0E       		.uleb128 0xe
 357 003b 3A       		.uleb128 0x3a
 358 003c 0B       		.uleb128 0xb
 359 003d 3B       		.uleb128 0x3b
 360 003e 05       		.uleb128 0x5
 361 003f 49       		.uleb128 0x49
 362 0040 13       		.uleb128 0x13
 363 0041 00       		.byte	0
 364 0042 00       		.byte	0
 365 0043 06       		.uleb128 0x6
 366 0044 0F       		.uleb128 0xf
 367 0045 00       		.byte	0
 368 0046 0B       		.uleb128 0xb
 369 0047 0B       		.uleb128 0xb
 370 0048 49       		.uleb128 0x49
 371 0049 13       		.uleb128 0x13
 372 004a 00       		.byte	0
 373 004b 00       		.byte	0
 374 004c 07       		.uleb128 0x7
 375 004d 2E       		.uleb128 0x2e
 376 004e 01       		.byte	0x1
 377 004f 3F       		.uleb128 0x3f
 378 0050 19       		.uleb128 0x19
 379 0051 03       		.uleb128 0x3
 380 0052 0E       		.uleb128 0xe
 381 0053 3A       		.uleb128 0x3a
 382 0054 0B       		.uleb128 0xb
 383 0055 3B       		.uleb128 0x3b
 384 0056 0B       		.uleb128 0xb
 385 0057 27       		.uleb128 0x27
 386 0058 19       		.uleb128 0x19
 387 0059 11       		.uleb128 0x11
 388 005a 01       		.uleb128 0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccOHEqPR.s 			page 10


 389 005b 12       		.uleb128 0x12
 390 005c 06       		.uleb128 0x6
 391 005d 40       		.uleb128 0x40
 392 005e 18       		.uleb128 0x18
 393 005f 9742     		.uleb128 0x2117
 394 0061 19       		.uleb128 0x19
 395 0062 00       		.byte	0
 396 0063 00       		.byte	0
 397 0064 08       		.uleb128 0x8
 398 0065 05       		.uleb128 0x5
 399 0066 00       		.byte	0
 400 0067 03       		.uleb128 0x3
 401 0068 0E       		.uleb128 0xe
 402 0069 3A       		.uleb128 0x3a
 403 006a 0B       		.uleb128 0xb
 404 006b 3B       		.uleb128 0x3b
 405 006c 0B       		.uleb128 0xb
 406 006d 49       		.uleb128 0x49
 407 006e 13       		.uleb128 0x13
 408 006f 02       		.uleb128 0x2
 409 0070 18       		.uleb128 0x18
 410 0071 00       		.byte	0
 411 0072 00       		.byte	0
 412 0073 09       		.uleb128 0x9
 413 0074 34       		.uleb128 0x34
 414 0075 00       		.byte	0
 415 0076 03       		.uleb128 0x3
 416 0077 08       		.uleb128 0x8
 417 0078 3A       		.uleb128 0x3a
 418 0079 0B       		.uleb128 0xb
 419 007a 3B       		.uleb128 0x3b
 420 007b 0B       		.uleb128 0xb
 421 007c 49       		.uleb128 0x49
 422 007d 13       		.uleb128 0x13
 423 007e 02       		.uleb128 0x2
 424 007f 18       		.uleb128 0x18
 425 0080 00       		.byte	0
 426 0081 00       		.byte	0
 427 0082 0A       		.uleb128 0xa
 428 0083 34       		.uleb128 0x34
 429 0084 00       		.byte	0
 430 0085 03       		.uleb128 0x3
 431 0086 0E       		.uleb128 0xe
 432 0087 3A       		.uleb128 0x3a
 433 0088 0B       		.uleb128 0xb
 434 0089 3B       		.uleb128 0x3b
 435 008a 0B       		.uleb128 0xb
 436 008b 49       		.uleb128 0x49
 437 008c 13       		.uleb128 0x13
 438 008d 02       		.uleb128 0x2
 439 008e 18       		.uleb128 0x18
 440 008f 00       		.byte	0
 441 0090 00       		.byte	0
 442 0091 00       		.byte	0
 443              		.section	.debug_aranges,"",%progbits
 444 0000 1C000000 		.4byte	0x1c
 445 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccOHEqPR.s 			page 11


 446 0006 00000000 		.4byte	.Ldebug_info0
 447 000a 04       		.byte	0x4
 448 000b 00       		.byte	0
 449 000c 0000     		.2byte	0
 450 000e 0000     		.2byte	0
 451 0010 00000000 		.4byte	.LFB82
 452 0014 60000000 		.4byte	.LFE82-.LFB82
 453 0018 00000000 		.4byte	0
 454 001c 00000000 		.4byte	0
 455              		.section	.debug_ranges,"",%progbits
 456              	.Ldebug_ranges0:
 457 0000 00000000 		.4byte	.LFB82
 458 0004 60000000 		.4byte	.LFE82
 459 0008 00000000 		.4byte	0
 460 000c 00000000 		.4byte	0
 461              		.section	.debug_line,"",%progbits
 462              	.Ldebug_line0:
 463 0000 77010000 		.section	.debug_str,"MS",%progbits,1
 463      02005301 
 463      00000201 
 463      FB0E0D00 
 463      01010101 
 464              	.LASF16:
 465 0000 696E7436 		.ascii	"int64_t\000"
 465      345F7400 
 466              	.LASF4:
 467 0008 5F5F696E 		.ascii	"__int16_t\000"
 467      7431365F 
 467      7400
 468              	.LASF25:
 469 0012 70537263 		.ascii	"pSrcA\000"
 469      4100
 470              	.LASF26:
 471 0018 70537263 		.ascii	"pSrcB\000"
 471      4200
 472              	.LASF5:
 473 001e 5F5F696E 		.ascii	"__int32_t\000"
 473      7433325F 
 473      7400
 474              	.LASF32:
 475 0028 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 475      73657273 
 475      5C666E65 
 475      7665735C 
 475      446F6375 
 476 0055 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 476      655F7370 
 476      6565645F 
 476      73656E73 
 476      6F722E63 
 477              	.LASF22:
 478 006e 7131355F 		.ascii	"q15_t\000"
 478      7400
 479              	.LASF20:
 480 0074 666C6F61 		.ascii	"float\000"
 480      7400
 481              	.LASF23:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccOHEqPR.s 			page 12


 482 007a 7133315F 		.ascii	"q31_t\000"
 482      7400
 483              	.LASF1:
 484 0080 756E7369 		.ascii	"unsigned char\000"
 484      676E6564 
 484      20636861 
 484      7200
 485              	.LASF29:
 486 008e 626C6B43 		.ascii	"blkCnt\000"
 486      6E7400
 487              	.LASF8:
 488 0095 6C6F6E67 		.ascii	"long unsigned int\000"
 488      20756E73 
 488      69676E65 
 488      6420696E 
 488      7400
 489              	.LASF3:
 490 00a7 73686F72 		.ascii	"short unsigned int\000"
 490      7420756E 
 490      7369676E 
 490      65642069 
 490      6E7400
 491              	.LASF9:
 492 00ba 5F5F696E 		.ascii	"__int64_t\000"
 492      7436345F 
 492      7400
 493              	.LASF19:
 494 00c4 646F7562 		.ascii	"double\000"
 494      6C6500
 495              	.LASF7:
 496 00cb 5F5F7569 		.ascii	"__uint32_t\000"
 496      6E743332 
 496      5F7400
 497              	.LASF12:
 498 00d6 756E7369 		.ascii	"unsigned int\000"
 498      676E6564 
 498      20696E74 
 498      00
 499              	.LASF11:
 500 00e3 6C6F6E67 		.ascii	"long long unsigned int\000"
 500      206C6F6E 
 500      6720756E 
 500      7369676E 
 500      65642069 
 501              	.LASF30:
 502 00fa 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 502      4320342E 
 502      392E3320 
 502      32303135 
 502      30333033 
 503 012d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 503      20726576 
 503      6973696F 
 503      6E203232 
 503      31323230 
 504 0160 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 504      30202D66 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccOHEqPR.s 			page 13


 504      66756E63 
 504      74696F6E 
 504      2D736563 
 505              	.LASF28:
 506 018c 72657375 		.ascii	"result\000"
 506      6C7400
 507              	.LASF24:
 508 0193 7136335F 		.ascii	"q63_t\000"
 508      7400
 509              	.LASF13:
 510 0199 696E7431 		.ascii	"int16_t\000"
 510      365F7400 
 511              	.LASF14:
 512 01a1 696E7433 		.ascii	"int32_t\000"
 512      325F7400 
 513              	.LASF17:
 514 01a9 73697A65 		.ascii	"sizetype\000"
 514      74797065 
 514      00
 515              	.LASF10:
 516 01b2 6C6F6E67 		.ascii	"long long int\000"
 516      206C6F6E 
 516      6720696E 
 516      7400
 517              	.LASF27:
 518 01c0 626C6F63 		.ascii	"blockSize\000"
 518      6B53697A 
 518      6500
 519              	.LASF18:
 520 01ca 63686172 		.ascii	"char\000"
 520      00
 521              	.LASF2:
 522 01cf 73686F72 		.ascii	"short int\000"
 522      7420696E 
 522      7400
 523              	.LASF33:
 524 01d9 61726D5F 		.ascii	"arm_dot_prod_q15\000"
 524      646F745F 
 524      70726F64 
 524      5F713135 
 524      00
 525              	.LASF15:
 526 01ea 75696E74 		.ascii	"uint32_t\000"
 526      33325F74 
 526      00
 527              	.LASF6:
 528 01f3 6C6F6E67 		.ascii	"long int\000"
 528      20696E74 
 528      00
 529              	.LASF21:
 530 01fc 6C6F6E67 		.ascii	"long double\000"
 530      20646F75 
 530      626C6500 
 531              	.LASF0:
 532 0208 7369676E 		.ascii	"signed char\000"
 532      65642063 
 532      68617200 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccOHEqPR.s 			page 14


 533              	.LASF31:
 534 0214 536F7572 		.ascii	"Source\\BasicMathFunctions\\arm_dot_prod_q15.c\000"
 534      63655C42 
 534      61736963 
 534      4D617468 
 534      46756E63 
 535              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
