ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"engine_afe.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.engine_sensor_transfer_SetInterruptCallback,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	engine_sensor_transfer_SetInterruptCallback, %function
  22              	engine_sensor_transfer_SetInterruptCallback:
  23              	.LFB31:
  24              		.file 1 "Generated_Source\\PSoC4/engine_sensor_transfer.h"
   1:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
   2:Generated_Source\PSoC4/engine_sensor_transfer.h **** * File Name: engine_sensor_transfer.h
   3:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Version 1.0
   4:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
   5:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Description:
   6:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  This file provides DMA channel defines and API function definitions.
   7:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
   8:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
   9:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Copyright 2015, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC4/engine_sensor_transfer.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC4/engine_sensor_transfer.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC4/engine_sensor_transfer.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
  14:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
  15:Generated_Source\PSoC4/engine_sensor_transfer.h **** #ifndef CY_DMA_CHANNEL_engine_sensor_transfer_H
  16:Generated_Source\PSoC4/engine_sensor_transfer.h **** #define CY_DMA_CHANNEL_engine_sensor_transfer_H
  17:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
  18:Generated_Source\PSoC4/engine_sensor_transfer.h **** #include "CyDMA.h"
  19:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
  20:Generated_Source\PSoC4/engine_sensor_transfer.h ****     
  21:Generated_Source\PSoC4/engine_sensor_transfer.h **** /***************************************
  22:Generated_Source\PSoC4/engine_sensor_transfer.h **** *   Conditional Compilation Parameters
  23:Generated_Source\PSoC4/engine_sensor_transfer.h **** ***************************************/
  24:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
  25:Generated_Source\PSoC4/engine_sensor_transfer.h **** #define engine_sensor_transfer_CHANNEL           (engine_sensor_transfer__CHANNEL_NUMBER)
  26:Generated_Source\PSoC4/engine_sensor_transfer.h **** #define engine_sensor_transfer_CHANNEL_MASK      ((uint32)(1UL << engine_sensor_transfer_CHANNEL))
  27:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
  28:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
  29:Generated_Source\PSoC4/engine_sensor_transfer.h **** /***************************************
  30:Generated_Source\PSoC4/engine_sensor_transfer.h **** *        Function Prototypes
  31:Generated_Source\PSoC4/engine_sensor_transfer.h **** ***************************************/
  32:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
  33:Generated_Source\PSoC4/engine_sensor_transfer.h **** /* Functions specific to this DMA channel */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 2


  34:Generated_Source\PSoC4/engine_sensor_transfer.h **** void engine_sensor_transfer_Init(void);
  35:Generated_Source\PSoC4/engine_sensor_transfer.h **** void engine_sensor_transfer_Start(void * srcAddress, void * dstAddress);
  36:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
  37:Generated_Source\PSoC4/engine_sensor_transfer.h **** /* Inline functions that call global API functions */
  38:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void   engine_sensor_transfer_ChEnable(void);
  39:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void   engine_sensor_transfer_ChDisable(void);
  40:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void   engine_sensor_transfer_Trigger(void);
  41:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void   engine_sensor_transfer_SetPriority(int32 priority);
  42:Generated_Source\PSoC4/engine_sensor_transfer.h **** static int32  engine_sensor_transfer_GetPriority(void);
  43:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void   engine_sensor_transfer_SetNextDescriptor(int32 descriptor);
  44:Generated_Source\PSoC4/engine_sensor_transfer.h **** static int32  engine_sensor_transfer_GetNextDescriptor(void);
  45:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void   engine_sensor_transfer_SetConfiguration(int32 descriptor, const cydma_init_struct * c
  46:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void   engine_sensor_transfer_ValidateDescriptor(int32 descriptor);
  47:Generated_Source\PSoC4/engine_sensor_transfer.h **** static uint32 engine_sensor_transfer_GetDescriptorStatus(int32 descriptor);
  48:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void   engine_sensor_transfer_SetSrcAddress(int32 descriptor, void * srcAddress);
  49:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void * engine_sensor_transfer_GetSrcAddress(int32 descriptor);
  50:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void   engine_sensor_transfer_SetDstAddress(int32 descriptor, void * dstAddress);
  51:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void * engine_sensor_transfer_GetDstAddress(int32 descriptor);
  52:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void   engine_sensor_transfer_SetDataElementSize(int32 descriptor, uint32 dataElementSize);
  53:Generated_Source\PSoC4/engine_sensor_transfer.h **** static uint32 engine_sensor_transfer_GetDataElementSize(int32 descriptor);
  54:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void   engine_sensor_transfer_SetNumDataElements(int32 descriptor, int32 numDataElements);
  55:Generated_Source\PSoC4/engine_sensor_transfer.h **** static int32  engine_sensor_transfer_GetNumDataElements(int32 descriptor);
  56:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void   engine_sensor_transfer_SetSrcDstTransferWidth(int32 descriptor, uint32 transferWidth)
  57:Generated_Source\PSoC4/engine_sensor_transfer.h **** static uint32 engine_sensor_transfer_GetSrcDstTransferWidth(int32 descriptor);
  58:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void   engine_sensor_transfer_SetAddressIncrement(int32 descriptor, uint32 addressIncrement)
  59:Generated_Source\PSoC4/engine_sensor_transfer.h **** static uint32 engine_sensor_transfer_GetAddressIncrement(int32 descriptor);
  60:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void   engine_sensor_transfer_SetTriggerType(int32 descriptor, uint32 triggerType);
  61:Generated_Source\PSoC4/engine_sensor_transfer.h **** static uint32 engine_sensor_transfer_GetTriggerType(int32 descriptor);
  62:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void   engine_sensor_transfer_SetTransferMode(int32 descriptor, uint32 transferMode);
  63:Generated_Source\PSoC4/engine_sensor_transfer.h **** static uint32 engine_sensor_transfer_GetTransferMode(int32 descriptor);
  64:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void   engine_sensor_transfer_SetPreemptable(int32 descriptor, uint32 preemptable);
  65:Generated_Source\PSoC4/engine_sensor_transfer.h **** static uint32 engine_sensor_transfer_GetPreemptable(int32 descriptor);
  66:Generated_Source\PSoC4/engine_sensor_transfer.h **** static void   engine_sensor_transfer_SetPostCompletionActions(int32 descriptor, uint32 actions);
  67:Generated_Source\PSoC4/engine_sensor_transfer.h **** static uint32 engine_sensor_transfer_GetPostCompletionAction(int32 descriptor);
  68:Generated_Source\PSoC4/engine_sensor_transfer.h **** static cydma_callback_t engine_sensor_transfer_SetInterruptCallback(cydma_callback_t callback);
  69:Generated_Source\PSoC4/engine_sensor_transfer.h **** static cydma_callback_t engine_sensor_transfer_GetInterruptCallback(void);
  70:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
  71:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
  72:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
  73:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_ChEnable
  74:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
  75:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
  76:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
  77:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Enables the DMA channel. It is not necessary to call engine_sensor_transfer_ChEnable()
  78:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  because the engine_sensor_transfer_Start() API calls this function, which is the
  79:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  preferred method to begin the component operation.
  80:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
  81:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
  82:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.
  83:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
  84:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
  85:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.
  86:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
  87:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Side effect:
  88:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  If this function is called before engine_sensor_transfer_Start(), or engine_sensor_transfer_Init
  89:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  or engine_sensor_transfer_SetConfiguration(), and engine_sensor_transfer_SetSrcAddress()
  90:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  and engine_sensor_transfer_SetDstAddress the operation of the DMA is 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 3


  91:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  undefined and could result in system data corruption. 
  92:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
  93:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
  94:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void engine_sensor_transfer_ChEnable(void)
  95:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
  96:Generated_Source\PSoC4/engine_sensor_transfer.h ****     CyDmaChEnable(engine_sensor_transfer_CHANNEL);
  97:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
  98:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
  99:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 100:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 101:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_ChDisable
 102:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 103:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 104:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 105:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Disables the DMA channel.
 106:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 107:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 108:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.
 109:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 110:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 111:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.
 112:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 113:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Side effect:
 114:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  If this function is called during a DMA transfer the transfer is aborted. 
 115:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 116:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 117:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void engine_sensor_transfer_ChDisable(void)
 118:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 119:Generated_Source\PSoC4/engine_sensor_transfer.h ****     CyDmaChDisable(engine_sensor_transfer_CHANNEL);
 120:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 121:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 122:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 123:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 124:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_Trigger
 125:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 126:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 127:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 128:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Triggers the DMA channel, this is useful only for software triggers. This is
 129:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  not needed when hardware triggers are used.
 130:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 131:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 132:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.
 133:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 134:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 135:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None. 
 136:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 137:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 138:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void engine_sensor_transfer_Trigger(void)
 139:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 140:Generated_Source\PSoC4/engine_sensor_transfer.h ****     CyDmaTrigger(engine_sensor_transfer_CHANNEL);
 141:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 142:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 143:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 144:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 145:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_SetPriority
 146:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 147:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 4


 148:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 149:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Sets the priority for the channel.
 150:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 151:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 152:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  priority: Priority for channel. Priority can be 0,1,2, or 3.
 153:Generated_Source\PSoC4/engine_sensor_transfer.h **** *            0 is the highest priority.
 154:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 155:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 156:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.
 157:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 158:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Side effect:
 159:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  This function should not be called while the channel is enabled.
 160:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 161:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 162:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void engine_sensor_transfer_SetPriority(int32 priority)
 163:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 164:Generated_Source\PSoC4/engine_sensor_transfer.h ****     CyDmaSetPriority(engine_sensor_transfer_CHANNEL, priority);
 165:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 166:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 167:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 168:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 169:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_GetPriority
 170:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 171:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 172:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 173:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Gets the priority for the channel.
 174:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 175:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 176:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.
 177:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 178:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 179:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Priority for channel. Priority can be 0,1,2, or 3. 0 is the highest priority.
 180:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 181:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 182:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE int32 engine_sensor_transfer_GetPriority(void)
 183:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 184:Generated_Source\PSoC4/engine_sensor_transfer.h ****     return (CyDmaGetPriority(engine_sensor_transfer_CHANNEL));
 185:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 186:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 187:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 188:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 189:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_SetNextDescriptor
 190:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 191:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 192:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 193:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Sets the descriptor that should be run the next time the channel is
 194:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  triggered.
 195:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 196:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 197:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor: Next Descriptor to run (0 or 1).
 198:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 199:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Side effect:
 200:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  This function should not be called while the channel is enabled.
 201:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 202:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 203:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void engine_sensor_transfer_SetNextDescriptor(int32 descriptor)
 204:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 5


 205:Generated_Source\PSoC4/engine_sensor_transfer.h ****     CyDmaSetNextDescriptor(engine_sensor_transfer_CHANNEL, descriptor);
 206:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 207:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 208:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 209:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 210:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_GetNextDescriptor
 211:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 212:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 213:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 214:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Returns the next descriptor that should be run, as set by 
 215:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  engine_sensor_transfer_SetNextDescriptor().
 216:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 217:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 218:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.
 219:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 220:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 221:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Next Descriptor to run (0 or 1).
 222:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 223:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 224:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE int32 engine_sensor_transfer_GetNextDescriptor(void)
 225:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 226:Generated_Source\PSoC4/engine_sensor_transfer.h ****     return (CyDmaGetNextDescriptor(engine_sensor_transfer_CHANNEL));
 227:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 228:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 229:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 230:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 231:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_SetConfiguration
 232:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 233:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 234:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 235:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Sets configuration information for the specified descriptor.
 236:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 237:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 238:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 239:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  config: Pointer to a configuration structure. Refer to cydma_init_struct
 240:Generated_Source\PSoC4/engine_sensor_transfer.h **** *          structure definition in CyDMA_P4.h or the component datasheet.
 241:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 242:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 243:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.
 244:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 245:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Side effect:
 246:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  The status register associated with the specified descriptor is reset to
 247:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  zero after this function call. This function also validates the descriptor.
 248:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  This function should not be called while the descriptor is active.
 249:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  This can be checked by calling CyDmaGetStatus().
 250:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 251:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 252:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void engine_sensor_transfer_SetConfiguration(int32 descriptor, const cydma_init_st
 253:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 254:Generated_Source\PSoC4/engine_sensor_transfer.h ****     CyDmaSetConfiguration(engine_sensor_transfer_CHANNEL, descriptor, config);
 255:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 256:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 257:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 258:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 259:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_ValidateDescriptor
 260:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 261:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 6


 262:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 263:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Validates the specified descriptor after it has been invalidated.
 264:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 265:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 266:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 267:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 268:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 269:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None. 
 270:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 271:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Side effect:
 272:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  The status register associated with the specified descriptor is reset to
 273:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  zero after this function call. This function should not be called while the
 274:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor is active. This can be checked by calling CyDmaGetStatus().
 275:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 276:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 277:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void engine_sensor_transfer_ValidateDescriptor(int32 descriptor)
 278:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 279:Generated_Source\PSoC4/engine_sensor_transfer.h ****     CyDmaValidateDescriptor(engine_sensor_transfer_CHANNEL, descriptor);
 280:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 281:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 282:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 283:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 284:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_GetDescriptorStatus
 285:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 286:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 287:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 288:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Returns the status of the specified descriptor.
 289:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 290:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 291:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 292:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 293:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 294:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Returns the contents of the specified descriptors status register. Refer to 
 295:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor status register bit definitions in CyDMA_P4.h or the API
 296:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  description in the DMA channel datasheet for more information.
 297:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 298:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 299:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE uint32 engine_sensor_transfer_GetDescriptorStatus(int32 descriptor)
 300:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 301:Generated_Source\PSoC4/engine_sensor_transfer.h ****     return (CyDmaGetDescriptorStatus(engine_sensor_transfer_CHANNEL, descriptor));
 302:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 303:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 304:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 305:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 306:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_SetSrcAddress
 307:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 308:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 309:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 310:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Configures the source address for the specified descriptor.
 311:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 312:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 313:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 314:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  srcAddress: Address of DMA transfer source.
 315:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 316:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 317:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.
 318:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 7


 319:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Side effect:
 320:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  This function should not be called when the specified descriptor is active
 321:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 322:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 323:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 324:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void engine_sensor_transfer_SetSrcAddress(int32 descriptor, void * srcAddress)
 325:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 326:Generated_Source\PSoC4/engine_sensor_transfer.h ****     CyDmaSetSrcAddress(engine_sensor_transfer_CHANNEL, descriptor, srcAddress);
 327:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 328:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 329:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 330:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 331:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_GetSrcAddress
 332:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 333:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 334:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 335:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Returns the source address for the specified descriptor, set by either 
 336:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  engine_sensor_transfer_Start() or engine_sensor_transfer_SetSrcAddress().
 337:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 338:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 339:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor: Specifies descriptor (0 or 1) used by this function.
 340:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 341:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 342:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Source address written to specified descriptor.
 343:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 344:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 345:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void * engine_sensor_transfer_GetSrcAddress(int32 descriptor)
 346:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 347:Generated_Source\PSoC4/engine_sensor_transfer.h ****     return (CyDmaGetSrcAddress(engine_sensor_transfer_CHANNEL, descriptor));
 348:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 349:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 350:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 351:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 352:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_SetDstAddress
 353:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 354:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 355:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 356:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Configures the destination address for the specified descriptor.
 357:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 358:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 359:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 360:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  dstAddress: Address of DMA transfer destination.
 361:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 362:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 363:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.
 364:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 365:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Side effect:
 366:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  This function should not be called when the specified descriptor is active
 367:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 368:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 369:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 370:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void engine_sensor_transfer_SetDstAddress(int32 descriptor, void * dstAddress)
 371:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 372:Generated_Source\PSoC4/engine_sensor_transfer.h ****     CyDmaSetDstAddress(engine_sensor_transfer_CHANNEL, descriptor, dstAddress);
 373:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 374:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 375:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 8


 376:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 377:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_GetDstAddress
 378:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 379:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 380:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 381:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Returns the destination address for the specified descriptor, set by either 
 382:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  engine_sensor_transfer_Start() or engine_sensor_transfer_SetDstAddress().
 383:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 384:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 385:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor: Specifies descriptor (0 or 1) used by this function.
 386:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 387:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 388:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Destination address written to specified descriptor.
 389:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 390:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 391:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void * engine_sensor_transfer_GetDstAddress(int32 descriptor)
 392:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 393:Generated_Source\PSoC4/engine_sensor_transfer.h ****     return (CyDmaGetDstAddress(engine_sensor_transfer_CHANNEL, descriptor));
 394:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 395:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 396:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 397:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 398:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_SetDataElementSize
 399:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 400:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 401:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 402:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Sets the data element size for the specified descriptor.
 403:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 404:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 405:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor:      Descriptor (0 or 1) modified by this function.
 406:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  dataElementSize: Specifies the size of the data element. The DMA transfer
 407:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   engine transfers one data element at a time. How these
 408:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   transfers occur is controlled by the transfer mode.
 409:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   Refer to the API bit field definitions in CyDMA_P4.h or API
 410:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   description in the DMA channel datasheet for the parameter
 411:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   options.
 412:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 413:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 414:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.
 415:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 416:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Side effect:
 417:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  This function should not be called when the specified descriptor is active
 418:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 419:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 420:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 421:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void engine_sensor_transfer_SetDataElementSize(int32 descriptor, uint32 dataElemen
 422:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 423:Generated_Source\PSoC4/engine_sensor_transfer.h ****     CyDmaSetDataElementSize(engine_sensor_transfer_CHANNEL, descriptor, dataElementSize);
 424:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 425:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 426:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 427:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 428:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_GetDataElementSize
 429:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 430:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 431:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 432:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Returns the data element size configured for the specified descriptor, set by
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 9


 433:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  engine_sensor_transfer_SetDataElementSize() or engine_sensor_transfer_SetConfiguration().
 434:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 435:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 436:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 437:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 438:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 439:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  The size of the data element. The DMA transfer engine transfers one data
 440:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  element at a time. How these transfers occur is controlled by the transfer
 441:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  mode. Refer to the API bit field definitions in CyDMA_P4.h or the API 
 442:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  description in the DMA channel datasheet for more information.
 443:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 444:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Note:
 445:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  The size of the source and destination can be configured to use the
 446:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  data element size, or a Word, this is set in engine_sensor_transfer_SetSrcDstTransferWidth().
 447:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 448:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 449:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE uint32 engine_sensor_transfer_GetDataElementSize(int32 descriptor)
 450:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 451:Generated_Source\PSoC4/engine_sensor_transfer.h ****     return (CyDmaGetDataElementSize(engine_sensor_transfer_CHANNEL, descriptor));
 452:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 453:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 454:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 455:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 456:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_SetNumDataElements
 457:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 458:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 459:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 460:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Sets the number of data elements to transfer for specified descriptor.
 461:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 462:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 463:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor:      Descriptor (0 or 1) modified by this function.
 464:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  numDataElements: Total number of data elements this descriptor transfers.
 465:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   Valid ranges are 1 to 65536.
 466:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 467:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 468:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.
 469:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 470:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Side effect:
 471:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  This function should not be called when the specified descriptor is active
 472:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 473:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 474:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 475:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void engine_sensor_transfer_SetNumDataElements(int32 descriptor, int32 numDataElem
 476:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 477:Generated_Source\PSoC4/engine_sensor_transfer.h ****     CyDmaSetNumDataElements(engine_sensor_transfer_CHANNEL, descriptor, numDataElements);
 478:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 479:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 480:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 481:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 482:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_GetNumDataElements
 483:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 484:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 485:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 486:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Returns the number of data elements to be transferred. Only reflects the
 487:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  value written by engine_sensor_transfer_SetNumDataElements() or engine_sensor_transfer_SetConfig
 488:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  This does not reflect how many elements have been transferred. For that
 489:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  information use the engine_sensor_transfer_GetDescriptorStatus() function.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 10


 490:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 491:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 492:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 493:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 494:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 495:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Number of data elements to transfer.
 496:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 497:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 498:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE int32 engine_sensor_transfer_GetNumDataElements(int32 descriptor)
 499:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 500:Generated_Source\PSoC4/engine_sensor_transfer.h ****     return (CyDmaGetNumDataElements(engine_sensor_transfer_CHANNEL, descriptor));
 501:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 502:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 503:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 504:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 505:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_SetSrcDstTransferWidth
 506:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 507:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 508:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 509:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Sets the width of the source and destination. The DMA can either read and
 510:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  write data from the source and destination at the size specified by
 511:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  engine_sensor_transfer_SetDataElementSize() or by a word (4bytes). This also determines how
 512:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  many bytes the addresses are incremented if increment source and destination
 513:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  address are turned on.
 514:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 515:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 516:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor:    Descriptor (0 or 1) modified by this function.
 517:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  transferWidth: Specifies the source and destination widths. Refer to the API
 518:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                 bit field definitions in CyDMA_P4.h or the API description in
 519:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                 the DMA channel datasheet for the parameter options.
 520:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 521:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 522:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.
 523:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 524:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Side effect:
 525:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  This function should not be called when the specified descriptor is active
 526:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 527:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 528:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 529:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void engine_sensor_transfer_SetSrcDstTransferWidth(int32 descriptor, uint32 transf
 530:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 531:Generated_Source\PSoC4/engine_sensor_transfer.h ****     CyDmaSetSrcDstTransferWidth(engine_sensor_transfer_CHANNEL, descriptor, transferWidth);
 532:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 533:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 534:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 535:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 536:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_GetSrcDstTransferWidth
 537:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 538:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 539:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 540:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Returns the width of the source and destination, as set by 
 541:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  engine_sensor_transfer_SetSrcDstTransferWidth() or engine_sensor_transfer_SetConfiguration().
 542:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 543:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 544:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 545:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 546:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 11


 547:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Width of source and destination. Refer to the API bit field definitions in
 548:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 549:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  information.
 550:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 551:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 552:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE uint32 engine_sensor_transfer_GetSrcDstTransferWidth(int32 descriptor)
 553:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 554:Generated_Source\PSoC4/engine_sensor_transfer.h ****     return (CyDmaGetSrcDstTransferWidth(engine_sensor_transfer_CHANNEL, descriptor));
 555:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 556:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 557:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 558:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 559:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_SetAddressIncrement
 560:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 561:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 562:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 563:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Sets whether the source or destination addresses are incremented after the
 564:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  transfer of each data element. The amount that the source and destination
 565:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  address are incremented is determined by the engine_sensor_transfer_SetSrcDstTransferWidth()
 566:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  function. The addresses will either be incremented by the data element size
 567:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  or by a word (4 bytes).
 568:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 569:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 570:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor:       Descriptor (0 or 1) modified by this function.
 571:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  addressIncrement: Address increment settings. Refer to the API bit field
 572:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                    definitions in CyDMA_P4.h or the API description in the DMA
 573:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                    channel datasheet for the parameter options.
 574:Generated_Source\PSoC4/engine_sensor_transfer.h **** *    
 575:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 576:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.
 577:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 578:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Side effect:
 579:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  This function should not be called when the specified descriptor is active
 580:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 581:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 582:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 583:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void engine_sensor_transfer_SetAddressIncrement(int32 descriptor, uint32 addressIn
 584:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 585:Generated_Source\PSoC4/engine_sensor_transfer.h ****     CyDmaSetAddressIncrement(engine_sensor_transfer_CHANNEL, descriptor, addressIncrement);
 586:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 587:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 588:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 589:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 590:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_GetAddressIncrement
 591:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 592:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 593:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 594:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Returns address increment settings as set by engine_sensor_transfer_SetAddressIncrement()
 595:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  or engine_sensor_transfer_SetConfiguration().
 596:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 597:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 598:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 599:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 600:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 601:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Address increment settings. Refer to the API bit field definitions in
 602:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 603:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  information.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 12


 604:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 605:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 606:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE uint32 engine_sensor_transfer_GetAddressIncrement(int32 descriptor)
 607:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 608:Generated_Source\PSoC4/engine_sensor_transfer.h ****     return (CyDmaGetAddressIncrement(engine_sensor_transfer_CHANNEL, descriptor));
 609:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 610:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 611:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 612:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 613:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_SetTriggerType
 614:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 615:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 616:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 617:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Sets the type of input trigger for the DMA For level sensitive triggers sets
 618:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  how long the DMA waits for the trigger to go low (deactivate) before
 619:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  triggering the channel again.
 620:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 621:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 622:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor:  Descriptor (0 or 1) modified by this function.
 623:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  triggerType: Type of DMA trigger. Refer to the API bit field definitions in
 624:Generated_Source\PSoC4/engine_sensor_transfer.h **** *               CyDMA_P4.h or the API description in the DMA channel datasheet
 625:Generated_Source\PSoC4/engine_sensor_transfer.h **** *               for the parameter options.
 626:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 627:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 628:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.
 629:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 630:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Side effect:
 631:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  This function should not be called when the specified descriptor is active
 632:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 633:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 634:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 635:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void engine_sensor_transfer_SetTriggerType(int32 descriptor, uint32 triggerType)
 636:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 637:Generated_Source\PSoC4/engine_sensor_transfer.h ****     CyDmaSetTriggerType(engine_sensor_transfer_CHANNEL, descriptor, triggerType);
 638:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 639:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 640:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 641:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 642:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_GetTriggerType
 643:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 644:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 645:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 646:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Returns the trigger deactivation settings as set by engine_sensor_transfer_SetTriggerType()
 647:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  or engine_sensor_transfer_SetConfiguration().
 648:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 649:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 650:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 651:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 652:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 653:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Trigger deactivation settings. Refer to the API bit field definitions in
 654:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 655:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  information.
 656:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 657:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 658:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE uint32 engine_sensor_transfer_GetTriggerType(int32 descriptor)
 659:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 660:Generated_Source\PSoC4/engine_sensor_transfer.h ****     return (CyDmaGetTriggerType(engine_sensor_transfer_CHANNEL, descriptor));
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 13


 661:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 662:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 663:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 664:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 665:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_SetTransferMode
 666:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 667:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 668:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 669:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Sets the DMA transfer mode. This determines how the DMA reacts to each trigger
 670:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  event.
 671:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 672:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 673:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor:   Descriptor (0 or 1) modified by this function.
 674:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  transferMode: Specifies the DMA transfer mode settings. Refer to the API bit
 675:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                field definitions in CyDMA_P4.h or the API description in the
 676:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                DMA channel datasheet for the parameter options.
 677:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 678:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 679:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.
 680:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 681:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Side effect:
 682:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  This function should not be called when the specified descriptor is active
 683:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 684:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 685:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 686:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void engine_sensor_transfer_SetTransferMode(int32 descriptor, uint32 transferMode)
 687:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 688:Generated_Source\PSoC4/engine_sensor_transfer.h ****     CyDmaSetTransferMode(engine_sensor_transfer_CHANNEL, descriptor, transferMode);
 689:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 690:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 691:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 692:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 693:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_GetTransferMode
 694:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 695:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 696:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 697:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Returns the transfer mode for the specified descriptor as set by 
 698:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  engine_sensor_transfer_SetTransferMode() or engine_sensor_transfer_SetConfiguration().
 699:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 700:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 701:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 702:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 703:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 704:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  DMA transfer mode settings. Refer to the API bit field definitions in
 705:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 706:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  information.
 707:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 708:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 709:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE uint32 engine_sensor_transfer_GetTransferMode(int32 descriptor)
 710:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 711:Generated_Source\PSoC4/engine_sensor_transfer.h ****     return (CyDmaGetTransferMode(engine_sensor_transfer_CHANNEL, descriptor));
 712:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 713:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 714:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 715:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 716:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_SetPreemptable
 717:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 14


 718:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 719:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 720:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Determines if the descriptor is preemptable.
 721:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 722:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 723:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor:  Descriptor (0 or 1) modified by this function.
 724:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  preemptable: Descriptor preemption settings. Refer to the API bit field
 725:Generated_Source\PSoC4/engine_sensor_transfer.h **** *               definitions in CyDMA_P4.h or the API description in the DMA 
 726:Generated_Source\PSoC4/engine_sensor_transfer.h **** *               channel datasheet for the parameter options.
 727:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 728:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 729:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.
 730:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 731:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Side effect:
 732:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  This function should not be called when the specified descriptor is active
 733:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 734:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 735:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 736:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void engine_sensor_transfer_SetPreemptable(int32 descriptor, uint32 preemptable)
 737:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 738:Generated_Source\PSoC4/engine_sensor_transfer.h ****     CyDmaSetPreemptable(engine_sensor_transfer_CHANNEL, descriptor, preemptable);
 739:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 740:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 741:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 742:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 743:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_GetPreemptable
 744:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 745:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 746:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 747:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Returns whether or not the descriptor is preemptable.
 748:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 749:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 750:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 751:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 752:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 753:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Descriptor preemption setting. Refer to the API bit field definitions in
 754:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 755:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  information.
 756:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 757:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 758:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE uint32 engine_sensor_transfer_GetPreemptable(int32 descriptor)
 759:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 760:Generated_Source\PSoC4/engine_sensor_transfer.h ****     return (CyDmaGetPreemptable(engine_sensor_transfer_CHANNEL, descriptor));
 761:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 762:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 763:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 764:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 765:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_SetPostCompletionActions
 766:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 767:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 768:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 769:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Determines what occurs after a descriptor completes.
 770:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 771:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 772:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 773:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  actions:    Specifies descriptor post completion actions. Refer to the API
 774:Generated_Source\PSoC4/engine_sensor_transfer.h **** *              bit field definitions in CyDMA_P4.h or the API description in the
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 15


 775:Generated_Source\PSoC4/engine_sensor_transfer.h **** *              DMA channel datasheet for the parameter options.
 776:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 777:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 778:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  None.  
 779:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 780:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Side effect:
 781:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  This function should not be called when the specified descriptor is active
 782:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 783:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 784:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 785:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE void engine_sensor_transfer_SetPostCompletionActions(int32 descriptor, uint32 acti
 786:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 787:Generated_Source\PSoC4/engine_sensor_transfer.h ****     CyDmaSetPostCompletionActions(engine_sensor_transfer_CHANNEL, descriptor, actions);
 788:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 789:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 790:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 791:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 792:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_GetPostCompletionAction
 793:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 794:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 795:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 796:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Returns the post descriptor action settings as set by 
 797:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  engine_sensor_transfer_SetPostCompletionActions() or engine_sensor_transfer_SetConfiguration().
 798:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 799:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 800:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 801:Generated_Source\PSoC4/engine_sensor_transfer.h **** *                   
 802:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 803:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Post descriptor actions. Refer to the API bit field definitions in CyDMA_P4.h
 804:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  or the API description in the DMA channel datasheet for more information.
 805:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 806:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 807:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE uint32 engine_sensor_transfer_GetPostCompletionAction(int32 descriptor)
 808:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
 809:Generated_Source\PSoC4/engine_sensor_transfer.h ****     return (CyDmaGetPostCompletionActions(engine_sensor_transfer_CHANNEL, descriptor));
 810:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
 811:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 812:Generated_Source\PSoC4/engine_sensor_transfer.h **** 
 813:Generated_Source\PSoC4/engine_sensor_transfer.h **** /*******************************************************************************
 814:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Function Name: engine_sensor_transfer_SetInterruptCallback
 815:Generated_Source\PSoC4/engine_sensor_transfer.h **** ********************************************************************************
 816:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 817:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Summary:
 818:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Sets a user defined callback function to be called by the DMA interrupt. The
 819:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  function should contain code to process the interrupt request for the 
 820:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  associated DMA channel.
 821:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 822:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Parameters:
 823:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  callback: Pointer to the user defined callback function.
 824:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 825:Generated_Source\PSoC4/engine_sensor_transfer.h **** * Return:
 826:Generated_Source\PSoC4/engine_sensor_transfer.h **** *  Pointer to the function previously set for the specified channel. 
 827:Generated_Source\PSoC4/engine_sensor_transfer.h **** *
 828:Generated_Source\PSoC4/engine_sensor_transfer.h **** *******************************************************************************/
 829:Generated_Source\PSoC4/engine_sensor_transfer.h **** static CY_INLINE cydma_callback_t engine_sensor_transfer_SetInterruptCallback(cydma_callback_t call
 830:Generated_Source\PSoC4/engine_sensor_transfer.h **** {
  25              		.loc 1 830 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 16


  26              		.cfi_startproc
  27 0000 80B5     		push	{r7, lr}
  28              		.cfi_def_cfa_offset 8
  29              		.cfi_offset 7, -8
  30              		.cfi_offset 14, -4
  31 0002 82B0     		sub	sp, sp, #8
  32              		.cfi_def_cfa_offset 16
  33 0004 00AF     		add	r7, sp, #0
  34              		.cfi_def_cfa_register 7
  35 0006 7860     		str	r0, [r7, #4]
 831:Generated_Source\PSoC4/engine_sensor_transfer.h ****     return (CyDmaSetInterruptCallback(engine_sensor_transfer_CHANNEL, callback));
  36              		.loc 1 831 0
  37 0008 7B68     		ldr	r3, [r7, #4]
  38 000a 0020     		mov	r0, #0
  39 000c 191C     		mov	r1, r3
  40 000e FFF7FEFF 		bl	CyDmaSetInterruptCallback
  41 0012 031C     		mov	r3, r0
 832:Generated_Source\PSoC4/engine_sensor_transfer.h **** }
  42              		.loc 1 832 0
  43 0014 181C     		mov	r0, r3
  44 0016 BD46     		mov	sp, r7
  45 0018 02B0     		add	sp, sp, #8
  46              		@ sp needed
  47 001a 80BD     		pop	{r7, pc}
  48              		.cfi_endproc
  49              	.LFE31:
  50              		.size	engine_sensor_transfer_SetInterruptCallback, .-engine_sensor_transfer_SetInterruptCallback
  51              		.section	.text.fix_sqrt,"ax",%progbits
  52              		.align	2
  53              		.code	16
  54              		.thumb_func
  55              		.type	fix_sqrt, %function
  56              	fix_sqrt:
  57              	.LFB67:
  58              		.file 2 "fix_sqrt.h"
   1:fix_sqrt.h    **** /**
   2:fix_sqrt.h    ****  *  @brief simple and fast sqrt alghortim (based on Jack Crenshaw method) 
   3:fix_sqrt.h    ****  */
   4:fix_sqrt.h    **** #ifndef __FIX_SQRT_H
   5:fix_sqrt.h    **** #define __FIX_SQRT_H
   6:fix_sqrt.h    **** 
   7:fix_sqrt.h    **** #include <stdint.h>
   8:fix_sqrt.h    **** 
   9:fix_sqrt.h    **** /**
  10:fix_sqrt.h    ****  * @brief calculate fixed point square root using successive approximation method
  11:fix_sqrt.h    ****  */
  12:fix_sqrt.h    **** static inline uint16_t fix_sqrt(uint32_t val)
  13:fix_sqrt.h    **** {
  59              		.loc 2 13 0
  60              		.cfi_startproc
  61 0000 80B5     		push	{r7, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 7, -8
  64              		.cfi_offset 14, -4
  65 0002 86B0     		sub	sp, sp, #24
  66              		.cfi_def_cfa_offset 32
  67 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 17


  68              		.cfi_def_cfa_register 7
  69 0006 7860     		str	r0, [r7, #4]
  14:fix_sqrt.h    ****     uint32_t rem = 0;
  70              		.loc 2 14 0
  71 0008 0023     		mov	r3, #0
  72 000a 7B61     		str	r3, [r7, #20]
  15:fix_sqrt.h    ****     uint32_t root = 0;
  73              		.loc 2 15 0
  74 000c 0023     		mov	r3, #0
  75 000e 3B61     		str	r3, [r7, #16]
  16:fix_sqrt.h    ****     int i;
  17:fix_sqrt.h    ****     for(i = 0; i < 16; i++) {
  76              		.loc 2 17 0
  77 0010 0023     		mov	r3, #0
  78 0012 FB60     		str	r3, [r7, #12]
  79 0014 20E0     		b	.L4
  80              	.L7:
  18:fix_sqrt.h    ****         root <<= 1;
  81              		.loc 2 18 0
  82 0016 3B69     		ldr	r3, [r7, #16]
  83 0018 5B00     		lsl	r3, r3, #1
  84 001a 3B61     		str	r3, [r7, #16]
  19:fix_sqrt.h    ****         rem = ((rem << 2) + (val >> 30));
  85              		.loc 2 19 0
  86 001c 7B69     		ldr	r3, [r7, #20]
  87 001e 9A00     		lsl	r2, r3, #2
  88 0020 7B68     		ldr	r3, [r7, #4]
  89 0022 9B0F     		lsr	r3, r3, #30
  90 0024 D318     		add	r3, r2, r3
  91 0026 7B61     		str	r3, [r7, #20]
  20:fix_sqrt.h    ****         val <<= 2;
  92              		.loc 2 20 0
  93 0028 7B68     		ldr	r3, [r7, #4]
  94 002a 9B00     		lsl	r3, r3, #2
  95 002c 7B60     		str	r3, [r7, #4]
  21:fix_sqrt.h    ****         root++;
  96              		.loc 2 21 0
  97 002e 3B69     		ldr	r3, [r7, #16]
  98 0030 0133     		add	r3, r3, #1
  99 0032 3B61     		str	r3, [r7, #16]
  22:fix_sqrt.h    ****         if(root <= rem) {
 100              		.loc 2 22 0
 101 0034 3A69     		ldr	r2, [r7, #16]
 102 0036 7B69     		ldr	r3, [r7, #20]
 103 0038 9A42     		cmp	r2, r3
 104 003a 07D8     		bhi	.L5
  23:fix_sqrt.h    ****             rem-=root;
 105              		.loc 2 23 0
 106 003c 7A69     		ldr	r2, [r7, #20]
 107 003e 3B69     		ldr	r3, [r7, #16]
 108 0040 D31A     		sub	r3, r2, r3
 109 0042 7B61     		str	r3, [r7, #20]
  24:fix_sqrt.h    ****             root++;
 110              		.loc 2 24 0
 111 0044 3B69     		ldr	r3, [r7, #16]
 112 0046 0133     		add	r3, r3, #1
 113 0048 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 18


 114 004a 02E0     		b	.L6
 115              	.L5:
  25:fix_sqrt.h    ****         } else {
  26:fix_sqrt.h    ****             root--;
 116              		.loc 2 26 0
 117 004c 3B69     		ldr	r3, [r7, #16]
 118 004e 013B     		sub	r3, r3, #1
 119 0050 3B61     		str	r3, [r7, #16]
 120              	.L6:
  17:fix_sqrt.h    ****         root <<= 1;
 121              		.loc 2 17 0 discriminator 2
 122 0052 FB68     		ldr	r3, [r7, #12]
 123 0054 0133     		add	r3, r3, #1
 124 0056 FB60     		str	r3, [r7, #12]
 125              	.L4:
  17:fix_sqrt.h    ****         root <<= 1;
 126              		.loc 2 17 0 is_stmt 0 discriminator 1
 127 0058 FB68     		ldr	r3, [r7, #12]
 128 005a 0F2B     		cmp	r3, #15
 129 005c DBDD     		ble	.L7
  27:fix_sqrt.h    ****         }
  28:fix_sqrt.h    ****     }
  29:fix_sqrt.h    ****     return((uint16_t) (root >> 1));
 130              		.loc 2 29 0 is_stmt 1
 131 005e 3B69     		ldr	r3, [r7, #16]
 132 0060 5B08     		lsr	r3, r3, #1
 133 0062 9BB2     		uxth	r3, r3
  30:fix_sqrt.h    **** }
 134              		.loc 2 30 0
 135 0064 181C     		mov	r0, r3
 136 0066 BD46     		mov	sp, r7
 137 0068 06B0     		add	sp, sp, #24
 138              		@ sp needed
 139 006a 80BD     		pop	{r7, pc}
 140              		.cfi_endproc
 141              	.LFE67:
 142              		.size	fix_sqrt, .-fix_sqrt
 143              		.bss
 144              		.align	2
 145              	engine_sample_buffer:
 146 0000 00000000 		.space	1024
 146      00000000 
 146      00000000 
 146      00000000 
 146      00000000 
 147              		.align	2
 148              	engine_sample_fft_buffer:
 149 0400 00000000 		.space	1024
 149      00000000 
 149      00000000 
 149      00000000 
 149      00000000 
 150              		.align	2
 151              	engine_buffer_index:
 152 0800 00000000 		.space	4
 153              		.align	2
 154              	engine_current_speed:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 19


 155 0804 00000000 		.space	4
 156              		.align	2
 157              	engine_speed_frequency:
 158 0808 00000000 		.space	4
 159              		.align	2
 160              	engine_buffer_available:
 161 080c 00000000 		.space	4
 162              		.section	.text.engine_dma_isr,"ax",%progbits
 163              		.align	2
 164              		.code	16
 165              		.thumb_func
 166              		.type	engine_dma_isr, %function
 167              	engine_dma_isr:
 168              	.LFB68:
 169              		.file 3 "engine_afe.c"
   1:engine_afe.c  **** /**
   2:engine_afe.c  ****  * @brief engine analog front end inteface file
   3:engine_afe.c  ****  */
   4:engine_afe.c  **** #include <project.h>
   5:engine_afe.c  **** #include "event_queue.h"
   6:engine_afe.c  **** #include "engine_afe.h"
   7:engine_afe.c  **** #include "fix_fft.h"
   8:engine_afe.c  **** #include "fix_sqrt.h"
   9:engine_afe.c  **** 
  10:engine_afe.c  **** /** define the samples buffer size [words]*/
  11:engine_afe.c  **** #define ENGINE_SAMPLE_BUFFER_SIZE   256
  12:engine_afe.c  **** /** define the buffer lines avaialble */
  13:engine_afe.c  **** #define ENGINE_SAMPLE_BUFFER_LINES  2
  14:engine_afe.c  **** 
  15:engine_afe.c  **** /** define the fft length */
  16:engine_afe.c  **** #define ENGINE_FFT_LEN              9     
  17:engine_afe.c  **** #define ENGINE_FFT_SIZ              256   
  18:engine_afe.c  **** 
  19:engine_afe.c  **** 
  20:engine_afe.c  **** /** defines the afe sample rate */
  21:engine_afe.c  **** #define ENGINE_SAMPLE_RATE          16000
  22:engine_afe.c  **** #define SCALE_FREQ                  ((ENGINE_SAMPLE_RATE/2)/(ENGINE_FFT_SIZ/2))
  23:engine_afe.c  **** #define ENGINE_IDX_TO_FREQ(x)       (x * SCALE_FREQ)
  24:engine_afe.c  **** #define ENGINE_FREQ_TO_IDX(x)       (x / SCALE_FREQ)
  25:engine_afe.c  **** #define ENGINE_THRESHOLD            20
  26:engine_afe.c  **** 
  27:engine_afe.c  **** #define ENGINE_BASE_FREQ            4000 /* KHz*/
  28:engine_afe.c  **** #define ENGINE_SCALE_FACTOR         10
  29:engine_afe.c  **** 
  30:engine_afe.c  **** /**
  31:engine_afe.c  ****  * static variables 
  32:engine_afe.c  ****  */
  33:engine_afe.c  **** static int16_t engine_sample_buffer[ENGINE_SAMPLE_BUFFER_LINES][ENGINE_SAMPLE_BUFFER_SIZE]={0};
  34:engine_afe.c  **** static int16_t engine_sample_fft_buffer[2 * ENGINE_SAMPLE_BUFFER_SIZE] = {0};
  35:engine_afe.c  **** static int engine_buffer_index = 0;
  36:engine_afe.c  **** static int engine_current_speed = 0;
  37:engine_afe.c  **** static uint32_t engine_speed_frequency = 0;
  38:engine_afe.c  **** static int engine_buffer_available = 0;
  39:engine_afe.c  **** /**
  40:engine_afe.c  ****  * private functions 
  41:engine_afe.c  ****  */
  42:engine_afe.c  **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 20


  43:engine_afe.c  **** 
  44:engine_afe.c  **** /**
  45:engine_afe.c  ****  * @brief signals the DMA engine completed its task
  46:engine_afe.c  ****  */
  47:engine_afe.c  **** static void engine_dma_isr(void)
  48:engine_afe.c  **** {
 170              		.loc 3 48 0
 171              		.cfi_startproc
 172 0000 80B5     		push	{r7, lr}
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 7, -8
 175              		.cfi_offset 14, -4
 176 0002 00AF     		add	r7, sp, #0
 177              		.cfi_def_cfa_register 7
  49:engine_afe.c  ****     /* halts the sampler */
  50:engine_afe.c  ****     engine_sensor_adc_Stop();
 178              		.loc 3 50 0
 179 0004 FFF7FEFF 		bl	engine_sensor_adc_Stop
  51:engine_afe.c  ****     event_queue_put(KDMA_EVENT);
 180              		.loc 3 51 0
 181 0008 0120     		mov	r0, #1
 182 000a FFF7FEFF 		bl	event_queue_put
  52:engine_afe.c  **** }
 183              		.loc 3 52 0
 184 000e BD46     		mov	sp, r7
 185              		@ sp needed
 186 0010 80BD     		pop	{r7, pc}
 187              		.cfi_endproc
 188              	.LFE68:
 189              		.size	engine_dma_isr, .-engine_dma_isr
 190 0012 C046     		.section	.text.engine_gets_highest_value_idx,"ax",%progbits
 191              		.align	2
 192              		.code	16
 193              		.thumb_func
 194              		.type	engine_gets_highest_value_idx, %function
 195              	engine_gets_highest_value_idx:
 196              	.LFB69:
  53:engine_afe.c  **** 
  54:engine_afe.c  **** /**
  55:engine_afe.c  ****  * @brief gets the idx which has the highest value in buffer 
  56:engine_afe.c  ****  */
  57:engine_afe.c  **** static uint32_t engine_gets_highest_value_idx(int16_t *buf, uint32_t len) 
  58:engine_afe.c  **** {
 197              		.loc 3 58 0
 198              		.cfi_startproc
 199 0000 80B5     		push	{r7, lr}
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 7, -8
 202              		.cfi_offset 14, -4
 203 0002 86B0     		sub	sp, sp, #24
 204              		.cfi_def_cfa_offset 32
 205 0004 00AF     		add	r7, sp, #0
 206              		.cfi_def_cfa_register 7
 207 0006 7860     		str	r0, [r7, #4]
 208 0008 3960     		str	r1, [r7]
  59:engine_afe.c  ****     uint32_t ret = 0;
 209              		.loc 3 59 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 21


 210 000a 0023     		mov	r3, #0
 211 000c 7B61     		str	r3, [r7, #20]
  60:engine_afe.c  ****     uint32_t i = 0;
 212              		.loc 3 60 0
 213 000e 0023     		mov	r3, #0
 214 0010 3B61     		str	r3, [r7, #16]
  61:engine_afe.c  ****     int16_t val = buf[0];
 215              		.loc 3 61 0
 216 0012 0E23     		mov	r3, #14
 217 0014 FB18     		add	r3, r7, r3
 218 0016 7A68     		ldr	r2, [r7, #4]
 219 0018 1288     		ldrh	r2, [r2]
 220 001a 1A80     		strh	r2, [r3]
  62:engine_afe.c  ****     
  63:engine_afe.c  ****     for(i = 0 ; i < len; i++){
 221              		.loc 3 63 0
 222 001c 0023     		mov	r3, #0
 223 001e 3B61     		str	r3, [r7, #16]
 224 0020 18E0     		b	.L11
 225              	.L13:
  64:engine_afe.c  ****         if(val < buf[i]) {
 226              		.loc 3 64 0
 227 0022 3B69     		ldr	r3, [r7, #16]
 228 0024 5B00     		lsl	r3, r3, #1
 229 0026 7A68     		ldr	r2, [r7, #4]
 230 0028 D318     		add	r3, r2, r3
 231 002a 1988     		ldrh	r1, [r3]
 232 002c 0E23     		mov	r3, #14
 233 002e FB18     		add	r3, r7, r3
 234 0030 0022     		mov	r2, #0
 235 0032 9A5E     		ldrsh	r2, [r3, r2]
 236 0034 0BB2     		sxth	r3, r1
 237 0036 9A42     		cmp	r2, r3
 238 0038 09DA     		bge	.L12
  65:engine_afe.c  ****             val = buf[i];
 239              		.loc 3 65 0
 240 003a 3B69     		ldr	r3, [r7, #16]
 241 003c 5B00     		lsl	r3, r3, #1
 242 003e 7A68     		ldr	r2, [r7, #4]
 243 0040 D218     		add	r2, r2, r3
 244 0042 0E23     		mov	r3, #14
 245 0044 FB18     		add	r3, r7, r3
 246 0046 1288     		ldrh	r2, [r2]
 247 0048 1A80     		strh	r2, [r3]
  66:engine_afe.c  ****             ret = i;
 248              		.loc 3 66 0
 249 004a 3B69     		ldr	r3, [r7, #16]
 250 004c 7B61     		str	r3, [r7, #20]
 251              	.L12:
  63:engine_afe.c  ****         if(val < buf[i]) {
 252              		.loc 3 63 0 discriminator 2
 253 004e 3B69     		ldr	r3, [r7, #16]
 254 0050 0133     		add	r3, r3, #1
 255 0052 3B61     		str	r3, [r7, #16]
 256              	.L11:
  63:engine_afe.c  ****         if(val < buf[i]) {
 257              		.loc 3 63 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 22


 258 0054 3A69     		ldr	r2, [r7, #16]
 259 0056 3B68     		ldr	r3, [r7]
 260 0058 9A42     		cmp	r2, r3
 261 005a E2D3     		bcc	.L13
  67:engine_afe.c  ****         }
  68:engine_afe.c  ****     }
  69:engine_afe.c  ****     return(ret);
 262              		.loc 3 69 0 is_stmt 1
 263 005c 7B69     		ldr	r3, [r7, #20]
  70:engine_afe.c  **** }
 264              		.loc 3 70 0
 265 005e 181C     		mov	r0, r3
 266 0060 BD46     		mov	sp, r7
 267 0062 06B0     		add	sp, sp, #24
 268              		@ sp needed
 269 0064 80BD     		pop	{r7, pc}
 270              		.cfi_endproc
 271              	.LFE69:
 272              		.size	engine_gets_highest_value_idx, .-engine_gets_highest_value_idx
 273 0066 C046     		.section	.text.engine_afe_init,"ax",%progbits
 274              		.align	2
 275              		.global	engine_afe_init
 276              		.code	16
 277              		.thumb_func
 278              		.type	engine_afe_init, %function
 279              	engine_afe_init:
 280              	.LFB70:
  71:engine_afe.c  **** 
  72:engine_afe.c  **** 
  73:engine_afe.c  **** /**
  74:engine_afe.c  ****  * public functions 
  75:engine_afe.c  ****  */
  76:engine_afe.c  **** int engine_afe_init(void)
  77:engine_afe.c  **** {
 281              		.loc 3 77 0
 282              		.cfi_startproc
 283 0000 80B5     		push	{r7, lr}
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 7, -8
 286              		.cfi_offset 14, -4
 287 0002 82B0     		sub	sp, sp, #8
 288              		.cfi_def_cfa_offset 16
 289 0004 00AF     		add	r7, sp, #0
 290              		.cfi_def_cfa_register 7
  78:engine_afe.c  ****     int ret = 0;
 291              		.loc 3 78 0
 292 0006 0023     		mov	r3, #0
 293 0008 7B60     		str	r3, [r7, #4]
  79:engine_afe.c  ****         
  80:engine_afe.c  ****     /* turn on the voltage reference */
  81:engine_afe.c  ****     engine_sensor_ref_Start();
 294              		.loc 3 81 0
 295 000a FFF7FEFF 		bl	engine_sensor_ref_Start
  82:engine_afe.c  ****     
  83:engine_afe.c  ****     /* turn on the voltage reference buffer */
  84:engine_afe.c  ****     engine_vref_buf_Start();
 296              		.loc 3 84 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 23


 297 000e FFF7FEFF 		bl	engine_vref_buf_Start
  85:engine_afe.c  ****     
  86:engine_afe.c  ****     /* turn on the system amplifier */
  87:engine_afe.c  ****     engine_sensor_pga_Start();
 298              		.loc 3 87 0
 299 0012 FFF7FEFF 		bl	engine_sensor_pga_Start
  88:engine_afe.c  ****     
  89:engine_afe.c  ****     /* set the dma interrupt function */
  90:engine_afe.c  ****     engine_sensor_transfer_SetInterruptCallback((cydma_callback_t)&engine_dma_isr);
 300              		.loc 3 90 0
 301 0016 0D4B     		ldr	r3, .L17
 302 0018 181C     		mov	r0, r3
 303 001a FFF7FEFF 		bl	engine_sensor_transfer_SetInterruptCallback
  91:engine_afe.c  ****     
  92:engine_afe.c  ****     /* set the dma initial buffer */
  93:engine_afe.c  ****     /* we call this trick in Brazil: "Gambiarra" 
  94:engine_afe.c  ****      * the cypress code generator seems to have a bug, generating like: xx_xx_SAR_CHAN_RESULTy wher
  95:engine_afe.c  ****      * y is the channel number, but this causes undeclared value compilation error, so the workarou
  96:engine_afe.c  ****      * the base address and add a offset, since I need of channel 0 this is not needed
  97:engine_afe.c  ****      */
  98:engine_afe.c  ****     engine_sensor_transfer_Start((void *)engine_sensor_adc_cy_psoc4_sar_1__SAR_CHAN_RESULT00, &engi
 304              		.loc 3 98 0
 305 001e 0C4B     		ldr	r3, .L17+4
 306 0020 1B68     		ldr	r3, [r3]
 307 0022 5A02     		lsl	r2, r3, #9
 308 0024 0B4B     		ldr	r3, .L17+8
 309 0026 D318     		add	r3, r2, r3
 310 0028 0B4A     		ldr	r2, .L17+12
 311 002a 101C     		mov	r0, r2
 312 002c 191C     		mov	r1, r3
 313 002e FFF7FEFF 		bl	engine_sensor_transfer_Start
  99:engine_afe.c  ****     
 100:engine_afe.c  ****     /* prepare instance of fft */
 101:engine_afe.c  ****     //arm_cfft_radix2_init_q15(&fft_instance,ENGINE_SAMPLE_BUFFER_SIZE,0,1);
 102:engine_afe.c  ****     
 103:engine_afe.c  ****     CyIntEnable(CYDMA_INTR_NUMBER);
 314              		.loc 3 103 0
 315 0032 0C20     		mov	r0, #12
 316 0034 FFF7FEFF 		bl	CyIntEnable
 104:engine_afe.c  ****     
 105:engine_afe.c  ****     /* start the adc with continous sampling enabled */
 106:engine_afe.c  ****     engine_sensor_adc_Start();
 317              		.loc 3 106 0
 318 0038 FFF7FEFF 		bl	engine_sensor_adc_Start
 107:engine_afe.c  ****     engine_sensor_adc_StartConvert();
 319              		.loc 3 107 0
 320 003c FFF7FEFF 		bl	engine_sensor_adc_StartConvert
 108:engine_afe.c  ****     
 109:engine_afe.c  ****     return(ret);
 321              		.loc 3 109 0
 322 0040 7B68     		ldr	r3, [r7, #4]
 110:engine_afe.c  **** }
 323              		.loc 3 110 0
 324 0042 181C     		mov	r0, r3
 325 0044 BD46     		mov	sp, r7
 326 0046 02B0     		add	sp, sp, #8
 327              		@ sp needed
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 24


 328 0048 80BD     		pop	{r7, pc}
 329              	.L18:
 330 004a C046     		.align	2
 331              	.L17:
 332 004c 00000000 		.word	engine_dma_isr
 333 0050 00080000 		.word	engine_buffer_index
 334 0054 00000000 		.word	engine_sample_buffer
 335 0058 80013A40 		.word	1077543296
 336              		.cfi_endproc
 337              	.LFE70:
 338              		.size	engine_afe_init, .-engine_afe_init
 339              		.section	.text.engine_afe_get_rpm,"ax",%progbits
 340              		.align	2
 341              		.global	engine_afe_get_rpm
 342              		.code	16
 343              		.thumb_func
 344              		.type	engine_afe_get_rpm, %function
 345              	engine_afe_get_rpm:
 346              	.LFB71:
 111:engine_afe.c  **** 
 112:engine_afe.c  **** int engine_afe_get_rpm(void)
 113:engine_afe.c  **** {
 347              		.loc 3 113 0
 348              		.cfi_startproc
 349 0000 80B5     		push	{r7, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 0002 00AF     		add	r7, sp, #0
 354              		.cfi_def_cfa_register 7
 114:engine_afe.c  ****     return(engine_current_speed);
 355              		.loc 3 114 0
 356 0004 024B     		ldr	r3, .L21
 357 0006 1B68     		ldr	r3, [r3]
 115:engine_afe.c  **** }
 358              		.loc 3 115 0
 359 0008 181C     		mov	r0, r3
 360 000a BD46     		mov	sp, r7
 361              		@ sp needed
 362 000c 80BD     		pop	{r7, pc}
 363              	.L22:
 364 000e C046     		.align	2
 365              	.L21:
 366 0010 04080000 		.word	engine_current_speed
 367              		.cfi_endproc
 368              	.LFE71:
 369              		.size	engine_afe_get_rpm, .-engine_afe_get_rpm
 370              		.global	__aeabi_uidiv
 371              		.section	.text.engine_afe_main,"ax",%progbits
 372              		.align	2
 373              		.global	engine_afe_main
 374              		.code	16
 375              		.thumb_func
 376              		.type	engine_afe_main, %function
 377              	engine_afe_main:
 378              	.LFB72:
 116:engine_afe.c  **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 25


 117:engine_afe.c  **** 
 118:engine_afe.c  **** void engine_afe_main(int event)
 119:engine_afe.c  **** {
 379              		.loc 3 119 0
 380              		.cfi_startproc
 381 0000 80B5     		push	{r7, lr}
 382              		.cfi_def_cfa_offset 8
 383              		.cfi_offset 7, -8
 384              		.cfi_offset 14, -4
 385 0002 84B0     		sub	sp, sp, #16
 386              		.cfi_def_cfa_offset 24
 387 0004 00AF     		add	r7, sp, #0
 388              		.cfi_def_cfa_register 7
 389 0006 7860     		str	r0, [r7, #4]
 120:engine_afe.c  ****     system_event_t ev = (system_event_t)event;
 390              		.loc 3 120 0
 391 0008 0B23     		mov	r3, #11
 392 000a FB18     		add	r3, r7, r3
 393 000c 7A68     		ldr	r2, [r7, #4]
 394 000e 1A70     		strb	r2, [r3]
 121:engine_afe.c  ****     switch(ev) {
 395              		.loc 3 121 0
 396 0010 0B23     		mov	r3, #11
 397 0012 FB18     		add	r3, r7, r3
 398 0014 1B78     		ldrb	r3, [r3]
 399 0016 022B     		cmp	r3, #2
 400 0018 00D1     		bne	.LCB307
 401 001a 9BE0     		b	.L33	@long jump
 402              	.LCB307:
 403 001c 042B     		cmp	r3, #4
 404 001e 30D0     		beq	.L26
 405 0020 012B     		cmp	r3, #1
 406 0022 00D0     		beq	.LCB311
 407 0024 97E0     		b	.L23	@long jump
 408              	.LCB311:
 122:engine_afe.c  ****         case KDMA_EVENT:
 123:engine_afe.c  ****             /* dma signaled, swap buffers and restart the adc */
 124:engine_afe.c  ****             engine_buffer_index = (engine_buffer_index + 1) & (ENGINE_SAMPLE_BUFFER_LINES - 1);
 409              		.loc 3 124 0
 410 0026 4D4B     		ldr	r3, .L34
 411 0028 1B68     		ldr	r3, [r3]
 412 002a 0133     		add	r3, r3, #1
 413 002c 0122     		mov	r2, #1
 414 002e 1A40     		and	r2, r3
 415 0030 4A4B     		ldr	r3, .L34
 416 0032 1A60     		str	r2, [r3]
 125:engine_afe.c  ****             engine_buffer_available = (engine_buffer_index ^ (ENGINE_SAMPLE_BUFFER_LINES - 1)) & (E
 417              		.loc 3 125 0
 418 0034 494B     		ldr	r3, .L34
 419 0036 1B68     		ldr	r3, [r3]
 420 0038 0122     		mov	r2, #1
 421 003a 1340     		and	r3, r2
 422 003c 5A42     		neg	r2, r3
 423 003e 5341     		adc	r3, r3, r2
 424 0040 DBB2     		uxtb	r3, r3
 425 0042 1A1C     		mov	r2, r3
 426 0044 464B     		ldr	r3, .L34+4
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 26


 427 0046 1A60     		str	r2, [r3]
 126:engine_afe.c  ****             memcpy(&engine_sample_fft_buffer,&engine_sample_buffer[engine_buffer_available][0],size
 428              		.loc 3 126 0
 429 0048 454B     		ldr	r3, .L34+4
 430 004a 1B68     		ldr	r3, [r3]
 431 004c 5A02     		lsl	r2, r3, #9
 432 004e 454B     		ldr	r3, .L34+8
 433 0050 D218     		add	r2, r2, r3
 434 0052 4549     		ldr	r1, .L34+12
 435 0054 8023     		mov	r3, #128
 436 0056 9B00     		lsl	r3, r3, #2
 437 0058 081C     		mov	r0, r1
 438 005a 111C     		mov	r1, r2
 439 005c 1A1C     		mov	r2, r3
 440 005e FFF7FEFF 		bl	memcpy
 127:engine_afe.c  ****             engine_sensor_transfer_Start((void *)engine_sensor_adc_cy_psoc4_sar_1__SAR_CHAN_RESULT0
 441              		.loc 3 127 0
 442 0062 3E4B     		ldr	r3, .L34
 443 0064 1B68     		ldr	r3, [r3]
 444 0066 5A02     		lsl	r2, r3, #9
 445 0068 3E4B     		ldr	r3, .L34+8
 446 006a D318     		add	r3, r2, r3
 447 006c 3F4A     		ldr	r2, .L34+16
 448 006e 101C     		mov	r0, r2
 449 0070 191C     		mov	r1, r3
 450 0072 FFF7FEFF 		bl	engine_sensor_transfer_Start
 128:engine_afe.c  ****             engine_sensor_adc_Start();
 451              		.loc 3 128 0
 452 0076 FFF7FEFF 		bl	engine_sensor_adc_Start
 129:engine_afe.c  ****             event_queue_put(KENGINE_CALCULATE);
 453              		.loc 3 129 0
 454 007a 0420     		mov	r0, #4
 455 007c FFF7FEFF 		bl	event_queue_put
 130:engine_afe.c  ****         break;
 456              		.loc 3 130 0
 457 0080 69E0     		b	.L23
 458              	.L26:
 459              	.LBB2:
 131:engine_afe.c  ****         
 132:engine_afe.c  ****         case KENGINE_CALCULATE:
 133:engine_afe.c  ****         {
 134:engine_afe.c  ****             int i;
 135:engine_afe.c  ****             /* calculate the frequency bins using the obtained buffer */
 136:engine_afe.c  ****             (void)fix_fftr(&engine_sample_fft_buffer[0], ENGINE_FFT_LEN,0);
 460              		.loc 3 136 0
 461 0082 394B     		ldr	r3, .L34+12
 462 0084 181C     		mov	r0, r3
 463 0086 0921     		mov	r1, #9
 464 0088 0022     		mov	r2, #0
 465 008a FFF7FEFF 		bl	fix_fftr
 137:engine_afe.c  ****             
 138:engine_afe.c  ****             /* compute mag_val since this is a complex fft */
 139:engine_afe.c  ****             for( i = 0 ; i < ( 1 << (ENGINE_FFT_LEN - 1)); i++) {
 466              		.loc 3 139 0
 467 008e 0023     		mov	r3, #0
 468 0090 FB60     		str	r3, [r7, #12]
 469 0092 26E0     		b	.L28
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 27


 470              	.L29:
 140:engine_afe.c  ****                 engine_sample_fft_buffer[i] =                                                      
 141:engine_afe.c  ****                     (int16_t)fix_sqrt((uint32_t)(engine_sample_fft_buffer[i] * engine_sample_fft_bu
 471              		.loc 3 141 0 discriminator 3
 472 0094 344B     		ldr	r3, .L34+12
 473 0096 FA68     		ldr	r2, [r7, #12]
 474 0098 5200     		lsl	r2, r2, #1
 475 009a D35A     		ldrh	r3, [r2, r3]
 476 009c 1BB2     		sxth	r3, r3
 477 009e 324A     		ldr	r2, .L34+12
 478 00a0 F968     		ldr	r1, [r7, #12]
 479 00a2 4900     		lsl	r1, r1, #1
 480 00a4 8A5A     		ldrh	r2, [r1, r2]
 481 00a6 12B2     		sxth	r2, r2
 482 00a8 5A43     		mul	r2, r3
 142:engine_afe.c  ****                                                  engine_sample_fft_buffer[i + ( 1 << (ENGINE_FFT_LE
 483              		.loc 3 142 0 discriminator 3
 484 00aa FB68     		ldr	r3, [r7, #12]
 485 00ac 591C     		add	r1, r3, #1
 486 00ae FF31     		add	r1, r1, #255
 487 00b0 2D4B     		ldr	r3, .L34+12
 488 00b2 4900     		lsl	r1, r1, #1
 489 00b4 CB5A     		ldrh	r3, [r1, r3]
 490 00b6 1BB2     		sxth	r3, r3
 143:engine_afe.c  ****                                                  engine_sample_fft_buffer[i + ( 1 << (ENGINE_FFT_LE
 491              		.loc 3 143 0 discriminator 3
 492 00b8 F968     		ldr	r1, [r7, #12]
 493 00ba 481C     		add	r0, r1, #1
 494 00bc FF30     		add	r0, r0, #255
 495 00be 2A49     		ldr	r1, .L34+12
 496 00c0 4000     		lsl	r0, r0, #1
 497 00c2 415A     		ldrh	r1, [r0, r1]
 142:engine_afe.c  ****                                                  engine_sample_fft_buffer[i + ( 1 << (ENGINE_FFT_LE
 498              		.loc 3 142 0 discriminator 3
 499 00c4 09B2     		sxth	r1, r1
 500 00c6 4B43     		mul	r3, r1
 141:engine_afe.c  ****                                                  engine_sample_fft_buffer[i + ( 1 << (ENGINE_FFT_LE
 501              		.loc 3 141 0 discriminator 3
 502 00c8 D318     		add	r3, r2, r3
 503 00ca 181C     		mov	r0, r3
 504 00cc FFF7FEFF 		bl	fix_sqrt
 505 00d0 031C     		mov	r3, r0
 506 00d2 99B2     		uxth	r1, r3
 140:engine_afe.c  ****                     (int16_t)fix_sqrt((uint32_t)(engine_sample_fft_buffer[i] * engine_sample_fft_bu
 507              		.loc 3 140 0 discriminator 3
 508 00d4 244B     		ldr	r3, .L34+12
 509 00d6 FA68     		ldr	r2, [r7, #12]
 510 00d8 5200     		lsl	r2, r2, #1
 511 00da D152     		strh	r1, [r2, r3]
 139:engine_afe.c  ****                 engine_sample_fft_buffer[i] =                                                      
 512              		.loc 3 139 0 discriminator 3
 513 00dc FB68     		ldr	r3, [r7, #12]
 514 00de 0133     		add	r3, r3, #1
 515 00e0 FB60     		str	r3, [r7, #12]
 516              	.L28:
 139:engine_afe.c  ****                 engine_sample_fft_buffer[i] =                                                      
 517              		.loc 3 139 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 28


 518 00e2 FB68     		ldr	r3, [r7, #12]
 519 00e4 FF2B     		cmp	r3, #255
 520 00e6 D5DD     		ble	.L29
 144:engine_afe.c  ****                                        ));
 145:engine_afe.c  ****             }   
 146:engine_afe.c  ****             
 147:engine_afe.c  ****             engine_speed_frequency = ENGINE_IDX_TO_FREQ(engine_gets_highest_value_idx(&engine_sampl
 521              		.loc 3 147 0 is_stmt 1
 522 00e8 214B     		ldr	r3, .L34+20
 523 00ea 181C     		mov	r0, r3
 524 00ec 7F21     		mov	r1, #127
 525 00ee FFF7FEFF 		bl	engine_gets_highest_value_idx
 526 00f2 021C     		mov	r2, r0
 527 00f4 131C     		mov	r3, r2
 528 00f6 5B01     		lsl	r3, r3, #5
 529 00f8 9B1A     		sub	r3, r3, r2
 530 00fa 5B00     		lsl	r3, r3, #1
 531 00fc 1A1C     		mov	r2, r3
 532 00fe 1D4B     		ldr	r3, .L34+24
 533 0100 1A60     		str	r2, [r3]
 148:engine_afe.c  ****                                                        (ENGINE_FFT_SIZ/2) - 1));
 149:engine_afe.c  ****                        
 150:engine_afe.c  ****             if(engine_sample_fft_buffer[ENGINE_FREQ_TO_IDX(engine_speed_frequency)] < ENGINE_THRESH
 534              		.loc 3 150 0
 535 0102 1C4B     		ldr	r3, .L34+24
 536 0104 1B68     		ldr	r3, [r3]
 537 0106 181C     		mov	r0, r3
 538 0108 3E21     		mov	r1, #62
 539 010a FFF7FEFF 		bl	__aeabi_uidiv
 540 010e 031C     		mov	r3, r0
 541 0110 1A1C     		mov	r2, r3
 542 0112 154B     		ldr	r3, .L34+12
 543 0114 5200     		lsl	r2, r2, #1
 544 0116 D35A     		ldrh	r3, [r2, r3]
 545 0118 1BB2     		sxth	r3, r3
 546 011a 132B     		cmp	r3, #19
 547 011c 03DC     		bgt	.L30
 151:engine_afe.c  ****                 engine_current_speed = 0;            
 548              		.loc 3 151 0
 549 011e 164B     		ldr	r3, .L34+28
 550 0120 0022     		mov	r2, #0
 551 0122 1A60     		str	r2, [r3]
 552 0124 0BE0     		b	.L31
 553              	.L30:
 152:engine_afe.c  ****             } else {
 153:engine_afe.c  ****                 engine_current_speed = (engine_speed_frequency - ENGINE_BASE_FREQ) * ENGINE_SCALE_F
 554              		.loc 3 153 0
 555 0126 134B     		ldr	r3, .L34+24
 556 0128 1A68     		ldr	r2, [r3]
 557 012a 131C     		mov	r3, r2
 558 012c 9B00     		lsl	r3, r3, #2
 559 012e 9B18     		add	r3, r3, r2
 560 0130 5B00     		lsl	r3, r3, #1
 561 0132 124A     		ldr	r2, .L34+32
 562 0134 9446     		mov	ip, r2
 563 0136 6344     		add	r3, r3, ip
 564 0138 1A1C     		mov	r2, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 29


 565 013a 0F4B     		ldr	r3, .L34+28
 566 013c 1A60     		str	r2, [r3]
 567              	.L31:
 154:engine_afe.c  ****             }
 155:engine_afe.c  ****             
 156:engine_afe.c  ****             if(engine_current_speed < 0) engine_current_speed = 0;
 568              		.loc 3 156 0
 569 013e 0E4B     		ldr	r3, .L34+28
 570 0140 1B68     		ldr	r3, [r3]
 571 0142 002B     		cmp	r3, #0
 572 0144 02DA     		bge	.L32
 573              		.loc 3 156 0 is_stmt 0 discriminator 1
 574 0146 0C4B     		ldr	r3, .L34+28
 575 0148 0022     		mov	r2, #0
 576 014a 1A60     		str	r2, [r3]
 577              	.L32:
 157:engine_afe.c  ****             
 158:engine_afe.c  ****             /* notify fresh rpm value to system */
 159:engine_afe.c  ****             event_queue_put(KRPM_READY_EVENT);
 578              		.loc 3 159 0 is_stmt 1
 579 014c 0220     		mov	r0, #2
 580 014e FFF7FEFF 		bl	event_queue_put
 581              	.LBE2:
 160:engine_afe.c  ****         }
 161:engine_afe.c  ****         break;
 582              		.loc 3 161 0
 583 0152 00E0     		b	.L23
 584              	.L33:
 162:engine_afe.c  ****         
 163:engine_afe.c  ****         
 164:engine_afe.c  ****         case KRPM_READY_EVENT:
 165:engine_afe.c  ****         /* not used for while */
 166:engine_afe.c  ****         break;
 585              		.loc 3 166 0
 586 0154 C046     		mov	r8, r8
 587              	.L23:
 167:engine_afe.c  ****     }
 168:engine_afe.c  ****     
 169:engine_afe.c  **** }
 588              		.loc 3 169 0
 589 0156 BD46     		mov	sp, r7
 590 0158 04B0     		add	sp, sp, #16
 591              		@ sp needed
 592 015a 80BD     		pop	{r7, pc}
 593              	.L35:
 594              		.align	2
 595              	.L34:
 596 015c 00080000 		.word	engine_buffer_index
 597 0160 0C080000 		.word	engine_buffer_available
 598 0164 00000000 		.word	engine_sample_buffer
 599 0168 00040000 		.word	engine_sample_fft_buffer
 600 016c 80013A40 		.word	1077543296
 601 0170 02040000 		.word	engine_sample_fft_buffer+2
 602 0174 08080000 		.word	engine_speed_frequency
 603 0178 04080000 		.word	engine_current_speed
 604 017c C063FFFF 		.word	-40000
 605              		.cfi_endproc
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 30


 606              	.LFE72:
 607              		.size	engine_afe_main, .-engine_afe_main
 608              		.text
 609              	.Letext0:
 610              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 611              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 612              		.file 6 "Generated_Source\\PSoC4/cytypes.h"
 613              		.file 7 "Generated_Source\\PSoC4/CyDMA.h"
 614              		.file 8 "event_queue.h"
 615              		.section	.debug_info,"",%progbits
 616              	.Ldebug_info0:
 617 0000 3A030000 		.4byte	0x33a
 618 0004 0400     		.2byte	0x4
 619 0006 00000000 		.4byte	.Ldebug_abbrev0
 620 000a 04       		.byte	0x4
 621 000b 01       		.uleb128 0x1
 622 000c 2E020000 		.4byte	.LASF43
 623 0010 01       		.byte	0x1
 624 0011 AA000000 		.4byte	.LASF44
 625 0015 31000000 		.4byte	.LASF45
 626 0019 00000000 		.4byte	.Ldebug_ranges0+0
 627 001d 00000000 		.4byte	0
 628 0021 00000000 		.4byte	.Ldebug_line0
 629 0025 02       		.uleb128 0x2
 630 0026 01       		.byte	0x1
 631 0027 06       		.byte	0x6
 632 0028 3C030000 		.4byte	.LASF0
 633 002c 02       		.uleb128 0x2
 634 002d 01       		.byte	0x1
 635 002e 08       		.byte	0x8
 636 002f D4000000 		.4byte	.LASF1
 637 0033 03       		.uleb128 0x3
 638 0034 27000000 		.4byte	.LASF3
 639 0038 04       		.byte	0x4
 640 0039 29       		.byte	0x29
 641 003a 3E000000 		.4byte	0x3e
 642 003e 02       		.uleb128 0x2
 643 003f 02       		.byte	0x2
 644 0040 05       		.byte	0x5
 645 0041 F2020000 		.4byte	.LASF2
 646 0045 03       		.uleb128 0x3
 647 0046 34010000 		.4byte	.LASF4
 648 004a 04       		.byte	0x4
 649 004b 2B       		.byte	0x2b
 650 004c 50000000 		.4byte	0x50
 651 0050 02       		.uleb128 0x2
 652 0051 02       		.byte	0x2
 653 0052 07       		.byte	0x7
 654 0053 77000000 		.4byte	.LASF5
 655 0057 02       		.uleb128 0x2
 656 0058 04       		.byte	0x4
 657 0059 05       		.byte	0x5
 658 005a 0E030000 		.4byte	.LASF6
 659 005e 03       		.uleb128 0x3
 660 005f 29010000 		.4byte	.LASF7
 661 0063 04       		.byte	0x4
 662 0064 41       		.byte	0x41
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 31


 663 0065 69000000 		.4byte	0x69
 664 0069 02       		.uleb128 0x2
 665 006a 04       		.byte	0x4
 666 006b 07       		.byte	0x7
 667 006c F6000000 		.4byte	.LASF8
 668 0070 02       		.uleb128 0x2
 669 0071 08       		.byte	0x8
 670 0072 05       		.byte	0x5
 671 0073 00000000 		.4byte	.LASF9
 672 0077 02       		.uleb128 0x2
 673 0078 08       		.byte	0x8
 674 0079 07       		.byte	0x7
 675 007a BD000000 		.4byte	.LASF10
 676 007e 04       		.uleb128 0x4
 677 007f 04       		.byte	0x4
 678 0080 05       		.byte	0x5
 679 0081 696E7400 		.ascii	"int\000"
 680 0085 02       		.uleb128 0x2
 681 0086 04       		.byte	0x4
 682 0087 07       		.byte	0x7
 683 0088 E5020000 		.4byte	.LASF11
 684 008c 03       		.uleb128 0x3
 685 008d F6010000 		.4byte	.LASF12
 686 0091 05       		.byte	0x5
 687 0092 20       		.byte	0x20
 688 0093 33000000 		.4byte	0x33
 689 0097 03       		.uleb128 0x3
 690 0098 FC020000 		.4byte	.LASF13
 691 009c 05       		.byte	0x5
 692 009d 21       		.byte	0x21
 693 009e 45000000 		.4byte	0x45
 694 00a2 03       		.uleb128 0x3
 695 00a3 05030000 		.4byte	.LASF14
 696 00a7 05       		.byte	0x5
 697 00a8 2D       		.byte	0x2d
 698 00a9 5E000000 		.4byte	0x5e
 699 00ad 05       		.uleb128 0x5
 700 00ae 1A010000 		.4byte	.LASF15
 701 00b2 06       		.byte	0x6
 702 00b3 B901     		.2byte	0x1b9
 703 00b5 2C000000 		.4byte	0x2c
 704 00b9 05       		.uleb128 0x5
 705 00ba B0010000 		.4byte	.LASF16
 706 00be 06       		.byte	0x6
 707 00bf BB01     		.2byte	0x1bb
 708 00c1 69000000 		.4byte	0x69
 709 00c5 05       		.uleb128 0x5
 710 00c6 1F020000 		.4byte	.LASF17
 711 00ca 06       		.byte	0x6
 712 00cb BE01     		.2byte	0x1be
 713 00cd 57000000 		.4byte	0x57
 714 00d1 02       		.uleb128 0x2
 715 00d2 04       		.byte	0x4
 716 00d3 04       		.byte	0x4
 717 00d4 B7000000 		.4byte	.LASF18
 718 00d8 02       		.uleb128 0x2
 719 00d9 08       		.byte	0x8
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 32


 720 00da 04       		.byte	0x4
 721 00db 3F010000 		.4byte	.LASF19
 722 00df 02       		.uleb128 0x2
 723 00e0 01       		.byte	0x1
 724 00e1 08       		.byte	0x8
 725 00e2 E2010000 		.4byte	.LASF20
 726 00e6 06       		.uleb128 0x6
 727 00e7 04       		.byte	0x4
 728 00e8 EC000000 		.4byte	0xec
 729 00ec 07       		.uleb128 0x7
 730 00ed 02       		.uleb128 0x2
 731 00ee 04       		.byte	0x4
 732 00ef 07       		.byte	0x7
 733 00f0 25020000 		.4byte	.LASF21
 734 00f4 03       		.uleb128 0x3
 735 00f5 FE010000 		.4byte	.LASF22
 736 00f9 07       		.byte	0x7
 737 00fa 67       		.byte	0x67
 738 00fb E6000000 		.4byte	0xe6
 739 00ff 08       		.uleb128 0x8
 740 0100 01       		.byte	0x1
 741 0101 08       		.byte	0x8
 742 0102 09       		.byte	0x9
 743 0103 32010000 		.4byte	0x132
 744 0107 09       		.uleb128 0x9
 745 0108 1D000000 		.4byte	.LASF23
 746 010c 00       		.sleb128 0
 747 010d 09       		.uleb128 0x9
 748 010e A5010000 		.4byte	.LASF24
 749 0112 01       		.sleb128 1
 750 0113 09       		.uleb128 0x9
 751 0114 BD010000 		.4byte	.LASF25
 752 0118 02       		.sleb128 2
 753 0119 09       		.uleb128 0x9
 754 011a D5020000 		.4byte	.LASF26
 755 011e 03       		.sleb128 3
 756 011f 09       		.uleb128 0x9
 757 0120 2A030000 		.4byte	.LASF27
 758 0124 04       		.sleb128 4
 759 0125 09       		.uleb128 0x9
 760 0126 08010000 		.4byte	.LASF28
 761 012a 05       		.sleb128 5
 762 012b 09       		.uleb128 0x9
 763 012c CE010000 		.4byte	.LASF29
 764 0130 06       		.sleb128 6
 765 0131 00       		.byte	0
 766 0132 03       		.uleb128 0x3
 767 0133 E7010000 		.4byte	.LASF30
 768 0137 08       		.byte	0x8
 769 0138 11       		.byte	0x11
 770 0139 FF000000 		.4byte	0xff
 771 013d 0A       		.uleb128 0xa
 772 013e 5F010000 		.4byte	.LASF31
 773 0142 01       		.byte	0x1
 774 0143 3D03     		.2byte	0x33d
 775 0145 F4000000 		.4byte	0xf4
 776 0149 00000000 		.4byte	.LFB31
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 33


 777 014d 1C000000 		.4byte	.LFE31-.LFB31
 778 0151 01       		.uleb128 0x1
 779 0152 9C       		.byte	0x9c
 780 0153 67010000 		.4byte	0x167
 781 0157 0B       		.uleb128 0xb
 782 0158 20010000 		.4byte	.LASF33
 783 015c 01       		.byte	0x1
 784 015d 3D03     		.2byte	0x33d
 785 015f F4000000 		.4byte	0xf4
 786 0163 02       		.uleb128 0x2
 787 0164 91       		.byte	0x91
 788 0165 74       		.sleb128 -12
 789 0166 00       		.byte	0
 790 0167 0C       		.uleb128 0xc
 791 0168 A1000000 		.4byte	.LASF32
 792 016c 02       		.byte	0x2
 793 016d 0C       		.byte	0xc
 794 016e 97000000 		.4byte	0x97
 795 0172 00000000 		.4byte	.LFB67
 796 0176 6C000000 		.4byte	.LFE67-.LFB67
 797 017a 01       		.uleb128 0x1
 798 017b 9C       		.byte	0x9c
 799 017c B7010000 		.4byte	0x1b7
 800 0180 0D       		.uleb128 0xd
 801 0181 76616C00 		.ascii	"val\000"
 802 0185 02       		.byte	0x2
 803 0186 0C       		.byte	0xc
 804 0187 A2000000 		.4byte	0xa2
 805 018b 02       		.uleb128 0x2
 806 018c 91       		.byte	0x91
 807 018d 64       		.sleb128 -28
 808 018e 0E       		.uleb128 0xe
 809 018f 72656D00 		.ascii	"rem\000"
 810 0193 02       		.byte	0x2
 811 0194 0E       		.byte	0xe
 812 0195 A2000000 		.4byte	0xa2
 813 0199 02       		.uleb128 0x2
 814 019a 91       		.byte	0x91
 815 019b 74       		.sleb128 -12
 816 019c 0F       		.uleb128 0xf
 817 019d 8B010000 		.4byte	.LASF34
 818 01a1 02       		.byte	0x2
 819 01a2 0F       		.byte	0xf
 820 01a3 A2000000 		.4byte	0xa2
 821 01a7 02       		.uleb128 0x2
 822 01a8 91       		.byte	0x91
 823 01a9 70       		.sleb128 -16
 824 01aa 0E       		.uleb128 0xe
 825 01ab 6900     		.ascii	"i\000"
 826 01ad 02       		.byte	0x2
 827 01ae 10       		.byte	0x10
 828 01af 7E000000 		.4byte	0x7e
 829 01b3 02       		.uleb128 0x2
 830 01b4 91       		.byte	0x91
 831 01b5 6C       		.sleb128 -20
 832 01b6 00       		.byte	0
 833 01b7 10       		.uleb128 0x10
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 34


 834 01b8 0E000000 		.4byte	.LASF46
 835 01bc 03       		.byte	0x3
 836 01bd 2F       		.byte	0x2f
 837 01be 00000000 		.4byte	.LFB68
 838 01c2 12000000 		.4byte	.LFE68-.LFB68
 839 01c6 01       		.uleb128 0x1
 840 01c7 9C       		.byte	0x9c
 841 01c8 0C       		.uleb128 0xc
 842 01c9 48030000 		.4byte	.LASF35
 843 01cd 03       		.byte	0x3
 844 01ce 39       		.byte	0x39
 845 01cf A2000000 		.4byte	0xa2
 846 01d3 00000000 		.4byte	.LFB69
 847 01d7 66000000 		.4byte	.LFE69-.LFB69
 848 01db 01       		.uleb128 0x1
 849 01dc 9C       		.byte	0x9c
 850 01dd 26020000 		.4byte	0x226
 851 01e1 0D       		.uleb128 0xd
 852 01e2 62756600 		.ascii	"buf\000"
 853 01e6 03       		.byte	0x3
 854 01e7 39       		.byte	0x39
 855 01e8 26020000 		.4byte	0x226
 856 01ec 02       		.uleb128 0x2
 857 01ed 91       		.byte	0x91
 858 01ee 64       		.sleb128 -28
 859 01ef 0D       		.uleb128 0xd
 860 01f0 6C656E00 		.ascii	"len\000"
 861 01f4 03       		.byte	0x3
 862 01f5 39       		.byte	0x39
 863 01f6 A2000000 		.4byte	0xa2
 864 01fa 02       		.uleb128 0x2
 865 01fb 91       		.byte	0x91
 866 01fc 60       		.sleb128 -32
 867 01fd 0E       		.uleb128 0xe
 868 01fe 72657400 		.ascii	"ret\000"
 869 0202 03       		.byte	0x3
 870 0203 3B       		.byte	0x3b
 871 0204 A2000000 		.4byte	0xa2
 872 0208 02       		.uleb128 0x2
 873 0209 91       		.byte	0x91
 874 020a 74       		.sleb128 -12
 875 020b 0E       		.uleb128 0xe
 876 020c 6900     		.ascii	"i\000"
 877 020e 03       		.byte	0x3
 878 020f 3C       		.byte	0x3c
 879 0210 A2000000 		.4byte	0xa2
 880 0214 02       		.uleb128 0x2
 881 0215 91       		.byte	0x91
 882 0216 70       		.sleb128 -16
 883 0217 0E       		.uleb128 0xe
 884 0218 76616C00 		.ascii	"val\000"
 885 021c 03       		.byte	0x3
 886 021d 3D       		.byte	0x3d
 887 021e 8C000000 		.4byte	0x8c
 888 0222 02       		.uleb128 0x2
 889 0223 91       		.byte	0x91
 890 0224 6E       		.sleb128 -18
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 35


 891 0225 00       		.byte	0
 892 0226 06       		.uleb128 0x6
 893 0227 04       		.byte	0x4
 894 0228 8C000000 		.4byte	0x8c
 895 022c 11       		.uleb128 0x11
 896 022d 0F020000 		.4byte	.LASF47
 897 0231 03       		.byte	0x3
 898 0232 4C       		.byte	0x4c
 899 0233 7E000000 		.4byte	0x7e
 900 0237 00000000 		.4byte	.LFB70
 901 023b 5C000000 		.4byte	.LFE70-.LFB70
 902 023f 01       		.uleb128 0x1
 903 0240 9C       		.byte	0x9c
 904 0241 54020000 		.4byte	0x254
 905 0245 0E       		.uleb128 0xe
 906 0246 72657400 		.ascii	"ret\000"
 907 024a 03       		.byte	0x3
 908 024b 4E       		.byte	0x4e
 909 024c 7E000000 		.4byte	0x7e
 910 0250 02       		.uleb128 0x2
 911 0251 91       		.byte	0x91
 912 0252 74       		.sleb128 -12
 913 0253 00       		.byte	0
 914 0254 12       		.uleb128 0x12
 915 0255 17030000 		.4byte	.LASF48
 916 0259 03       		.byte	0x3
 917 025a 70       		.byte	0x70
 918 025b 7E000000 		.4byte	0x7e
 919 025f 00000000 		.4byte	.LFB71
 920 0263 14000000 		.4byte	.LFE71-.LFB71
 921 0267 01       		.uleb128 0x1
 922 0268 9C       		.byte	0x9c
 923 0269 13       		.uleb128 0x13
 924 026a 66030000 		.4byte	.LASF49
 925 026e 03       		.byte	0x3
 926 026f 76       		.byte	0x76
 927 0270 00000000 		.4byte	.LFB72
 928 0274 80010000 		.4byte	.LFE72-.LFB72
 929 0278 01       		.uleb128 0x1
 930 0279 9C       		.byte	0x9c
 931 027a B0020000 		.4byte	0x2b0
 932 027e 14       		.uleb128 0x14
 933 027f B7010000 		.4byte	.LASF36
 934 0283 03       		.byte	0x3
 935 0284 76       		.byte	0x76
 936 0285 7E000000 		.4byte	0x7e
 937 0289 02       		.uleb128 0x2
 938 028a 91       		.byte	0x91
 939 028b 6C       		.sleb128 -20
 940 028c 0E       		.uleb128 0xe
 941 028d 657600   		.ascii	"ev\000"
 942 0290 03       		.byte	0x3
 943 0291 78       		.byte	0x78
 944 0292 32010000 		.4byte	0x132
 945 0296 02       		.uleb128 0x2
 946 0297 91       		.byte	0x91
 947 0298 73       		.sleb128 -13
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 36


 948 0299 15       		.uleb128 0x15
 949 029a 82000000 		.4byte	.LBB2
 950 029e D0000000 		.4byte	.LBE2-.LBB2
 951 02a2 0E       		.uleb128 0xe
 952 02a3 6900     		.ascii	"i\000"
 953 02a5 03       		.byte	0x3
 954 02a6 86       		.byte	0x86
 955 02a7 7E000000 		.4byte	0x7e
 956 02ab 02       		.uleb128 0x2
 957 02ac 91       		.byte	0x91
 958 02ad 74       		.sleb128 -12
 959 02ae 00       		.byte	0
 960 02af 00       		.byte	0
 961 02b0 16       		.uleb128 0x16
 962 02b1 8C000000 		.4byte	0x8c
 963 02b5 C6020000 		.4byte	0x2c6
 964 02b9 17       		.uleb128 0x17
 965 02ba ED000000 		.4byte	0xed
 966 02be 01       		.byte	0x1
 967 02bf 17       		.uleb128 0x17
 968 02c0 ED000000 		.4byte	0xed
 969 02c4 FF       		.byte	0xff
 970 02c5 00       		.byte	0
 971 02c6 0F       		.uleb128 0xf
 972 02c7 90010000 		.4byte	.LASF37
 973 02cb 03       		.byte	0x3
 974 02cc 21       		.byte	0x21
 975 02cd B0020000 		.4byte	0x2b0
 976 02d1 05       		.uleb128 0x5
 977 02d2 03       		.byte	0x3
 978 02d3 00000000 		.4byte	engine_sample_buffer
 979 02d7 16       		.uleb128 0x16
 980 02d8 8C000000 		.4byte	0x8c
 981 02dc E8020000 		.4byte	0x2e8
 982 02e0 18       		.uleb128 0x18
 983 02e1 ED000000 		.4byte	0xed
 984 02e5 FF01     		.2byte	0x1ff
 985 02e7 00       		.byte	0
 986 02e8 0F       		.uleb128 0xf
 987 02e9 46010000 		.4byte	.LASF38
 988 02ed 03       		.byte	0x3
 989 02ee 22       		.byte	0x22
 990 02ef D7020000 		.4byte	0x2d7
 991 02f3 05       		.uleb128 0x5
 992 02f4 03       		.byte	0x3
 993 02f5 00040000 		.4byte	engine_sample_fft_buffer
 994 02f9 0F       		.uleb128 0xf
 995 02fa E2000000 		.4byte	.LASF39
 996 02fe 03       		.byte	0x3
 997 02ff 23       		.byte	0x23
 998 0300 7E000000 		.4byte	0x7e
 999 0304 05       		.uleb128 0x5
 1000 0305 03       		.byte	0x3
 1001 0306 00080000 		.4byte	engine_buffer_index
 1002 030a 0F       		.uleb128 0xf
 1003 030b C0020000 		.4byte	.LASF40
 1004 030f 03       		.byte	0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 37


 1005 0310 24       		.byte	0x24
 1006 0311 7E000000 		.4byte	0x7e
 1007 0315 05       		.uleb128 0x5
 1008 0316 03       		.byte	0x3
 1009 0317 04080000 		.4byte	engine_current_speed
 1010 031b 0F       		.uleb128 0xf
 1011 031c 8A000000 		.4byte	.LASF41
 1012 0320 03       		.byte	0x3
 1013 0321 25       		.byte	0x25
 1014 0322 A2000000 		.4byte	0xa2
 1015 0326 05       		.uleb128 0x5
 1016 0327 03       		.byte	0x3
 1017 0328 08080000 		.4byte	engine_speed_frequency
 1018 032c 0F       		.uleb128 0xf
 1019 032d 76030000 		.4byte	.LASF42
 1020 0331 03       		.byte	0x3
 1021 0332 26       		.byte	0x26
 1022 0333 7E000000 		.4byte	0x7e
 1023 0337 05       		.uleb128 0x5
 1024 0338 03       		.byte	0x3
 1025 0339 0C080000 		.4byte	engine_buffer_available
 1026 033d 00       		.byte	0
 1027              		.section	.debug_abbrev,"",%progbits
 1028              	.Ldebug_abbrev0:
 1029 0000 01       		.uleb128 0x1
 1030 0001 11       		.uleb128 0x11
 1031 0002 01       		.byte	0x1
 1032 0003 25       		.uleb128 0x25
 1033 0004 0E       		.uleb128 0xe
 1034 0005 13       		.uleb128 0x13
 1035 0006 0B       		.uleb128 0xb
 1036 0007 03       		.uleb128 0x3
 1037 0008 0E       		.uleb128 0xe
 1038 0009 1B       		.uleb128 0x1b
 1039 000a 0E       		.uleb128 0xe
 1040 000b 55       		.uleb128 0x55
 1041 000c 17       		.uleb128 0x17
 1042 000d 11       		.uleb128 0x11
 1043 000e 01       		.uleb128 0x1
 1044 000f 10       		.uleb128 0x10
 1045 0010 17       		.uleb128 0x17
 1046 0011 00       		.byte	0
 1047 0012 00       		.byte	0
 1048 0013 02       		.uleb128 0x2
 1049 0014 24       		.uleb128 0x24
 1050 0015 00       		.byte	0
 1051 0016 0B       		.uleb128 0xb
 1052 0017 0B       		.uleb128 0xb
 1053 0018 3E       		.uleb128 0x3e
 1054 0019 0B       		.uleb128 0xb
 1055 001a 03       		.uleb128 0x3
 1056 001b 0E       		.uleb128 0xe
 1057 001c 00       		.byte	0
 1058 001d 00       		.byte	0
 1059 001e 03       		.uleb128 0x3
 1060 001f 16       		.uleb128 0x16
 1061 0020 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 38


 1062 0021 03       		.uleb128 0x3
 1063 0022 0E       		.uleb128 0xe
 1064 0023 3A       		.uleb128 0x3a
 1065 0024 0B       		.uleb128 0xb
 1066 0025 3B       		.uleb128 0x3b
 1067 0026 0B       		.uleb128 0xb
 1068 0027 49       		.uleb128 0x49
 1069 0028 13       		.uleb128 0x13
 1070 0029 00       		.byte	0
 1071 002a 00       		.byte	0
 1072 002b 04       		.uleb128 0x4
 1073 002c 24       		.uleb128 0x24
 1074 002d 00       		.byte	0
 1075 002e 0B       		.uleb128 0xb
 1076 002f 0B       		.uleb128 0xb
 1077 0030 3E       		.uleb128 0x3e
 1078 0031 0B       		.uleb128 0xb
 1079 0032 03       		.uleb128 0x3
 1080 0033 08       		.uleb128 0x8
 1081 0034 00       		.byte	0
 1082 0035 00       		.byte	0
 1083 0036 05       		.uleb128 0x5
 1084 0037 16       		.uleb128 0x16
 1085 0038 00       		.byte	0
 1086 0039 03       		.uleb128 0x3
 1087 003a 0E       		.uleb128 0xe
 1088 003b 3A       		.uleb128 0x3a
 1089 003c 0B       		.uleb128 0xb
 1090 003d 3B       		.uleb128 0x3b
 1091 003e 05       		.uleb128 0x5
 1092 003f 49       		.uleb128 0x49
 1093 0040 13       		.uleb128 0x13
 1094 0041 00       		.byte	0
 1095 0042 00       		.byte	0
 1096 0043 06       		.uleb128 0x6
 1097 0044 0F       		.uleb128 0xf
 1098 0045 00       		.byte	0
 1099 0046 0B       		.uleb128 0xb
 1100 0047 0B       		.uleb128 0xb
 1101 0048 49       		.uleb128 0x49
 1102 0049 13       		.uleb128 0x13
 1103 004a 00       		.byte	0
 1104 004b 00       		.byte	0
 1105 004c 07       		.uleb128 0x7
 1106 004d 15       		.uleb128 0x15
 1107 004e 00       		.byte	0
 1108 004f 27       		.uleb128 0x27
 1109 0050 19       		.uleb128 0x19
 1110 0051 00       		.byte	0
 1111 0052 00       		.byte	0
 1112 0053 08       		.uleb128 0x8
 1113 0054 04       		.uleb128 0x4
 1114 0055 01       		.byte	0x1
 1115 0056 0B       		.uleb128 0xb
 1116 0057 0B       		.uleb128 0xb
 1117 0058 3A       		.uleb128 0x3a
 1118 0059 0B       		.uleb128 0xb
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 39


 1119 005a 3B       		.uleb128 0x3b
 1120 005b 0B       		.uleb128 0xb
 1121 005c 01       		.uleb128 0x1
 1122 005d 13       		.uleb128 0x13
 1123 005e 00       		.byte	0
 1124 005f 00       		.byte	0
 1125 0060 09       		.uleb128 0x9
 1126 0061 28       		.uleb128 0x28
 1127 0062 00       		.byte	0
 1128 0063 03       		.uleb128 0x3
 1129 0064 0E       		.uleb128 0xe
 1130 0065 1C       		.uleb128 0x1c
 1131 0066 0D       		.uleb128 0xd
 1132 0067 00       		.byte	0
 1133 0068 00       		.byte	0
 1134 0069 0A       		.uleb128 0xa
 1135 006a 2E       		.uleb128 0x2e
 1136 006b 01       		.byte	0x1
 1137 006c 03       		.uleb128 0x3
 1138 006d 0E       		.uleb128 0xe
 1139 006e 3A       		.uleb128 0x3a
 1140 006f 0B       		.uleb128 0xb
 1141 0070 3B       		.uleb128 0x3b
 1142 0071 05       		.uleb128 0x5
 1143 0072 27       		.uleb128 0x27
 1144 0073 19       		.uleb128 0x19
 1145 0074 49       		.uleb128 0x49
 1146 0075 13       		.uleb128 0x13
 1147 0076 11       		.uleb128 0x11
 1148 0077 01       		.uleb128 0x1
 1149 0078 12       		.uleb128 0x12
 1150 0079 06       		.uleb128 0x6
 1151 007a 40       		.uleb128 0x40
 1152 007b 18       		.uleb128 0x18
 1153 007c 9642     		.uleb128 0x2116
 1154 007e 19       		.uleb128 0x19
 1155 007f 01       		.uleb128 0x1
 1156 0080 13       		.uleb128 0x13
 1157 0081 00       		.byte	0
 1158 0082 00       		.byte	0
 1159 0083 0B       		.uleb128 0xb
 1160 0084 05       		.uleb128 0x5
 1161 0085 00       		.byte	0
 1162 0086 03       		.uleb128 0x3
 1163 0087 0E       		.uleb128 0xe
 1164 0088 3A       		.uleb128 0x3a
 1165 0089 0B       		.uleb128 0xb
 1166 008a 3B       		.uleb128 0x3b
 1167 008b 05       		.uleb128 0x5
 1168 008c 49       		.uleb128 0x49
 1169 008d 13       		.uleb128 0x13
 1170 008e 02       		.uleb128 0x2
 1171 008f 18       		.uleb128 0x18
 1172 0090 00       		.byte	0
 1173 0091 00       		.byte	0
 1174 0092 0C       		.uleb128 0xc
 1175 0093 2E       		.uleb128 0x2e
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 40


 1176 0094 01       		.byte	0x1
 1177 0095 03       		.uleb128 0x3
 1178 0096 0E       		.uleb128 0xe
 1179 0097 3A       		.uleb128 0x3a
 1180 0098 0B       		.uleb128 0xb
 1181 0099 3B       		.uleb128 0x3b
 1182 009a 0B       		.uleb128 0xb
 1183 009b 27       		.uleb128 0x27
 1184 009c 19       		.uleb128 0x19
 1185 009d 49       		.uleb128 0x49
 1186 009e 13       		.uleb128 0x13
 1187 009f 11       		.uleb128 0x11
 1188 00a0 01       		.uleb128 0x1
 1189 00a1 12       		.uleb128 0x12
 1190 00a2 06       		.uleb128 0x6
 1191 00a3 40       		.uleb128 0x40
 1192 00a4 18       		.uleb128 0x18
 1193 00a5 9742     		.uleb128 0x2117
 1194 00a7 19       		.uleb128 0x19
 1195 00a8 01       		.uleb128 0x1
 1196 00a9 13       		.uleb128 0x13
 1197 00aa 00       		.byte	0
 1198 00ab 00       		.byte	0
 1199 00ac 0D       		.uleb128 0xd
 1200 00ad 05       		.uleb128 0x5
 1201 00ae 00       		.byte	0
 1202 00af 03       		.uleb128 0x3
 1203 00b0 08       		.uleb128 0x8
 1204 00b1 3A       		.uleb128 0x3a
 1205 00b2 0B       		.uleb128 0xb
 1206 00b3 3B       		.uleb128 0x3b
 1207 00b4 0B       		.uleb128 0xb
 1208 00b5 49       		.uleb128 0x49
 1209 00b6 13       		.uleb128 0x13
 1210 00b7 02       		.uleb128 0x2
 1211 00b8 18       		.uleb128 0x18
 1212 00b9 00       		.byte	0
 1213 00ba 00       		.byte	0
 1214 00bb 0E       		.uleb128 0xe
 1215 00bc 34       		.uleb128 0x34
 1216 00bd 00       		.byte	0
 1217 00be 03       		.uleb128 0x3
 1218 00bf 08       		.uleb128 0x8
 1219 00c0 3A       		.uleb128 0x3a
 1220 00c1 0B       		.uleb128 0xb
 1221 00c2 3B       		.uleb128 0x3b
 1222 00c3 0B       		.uleb128 0xb
 1223 00c4 49       		.uleb128 0x49
 1224 00c5 13       		.uleb128 0x13
 1225 00c6 02       		.uleb128 0x2
 1226 00c7 18       		.uleb128 0x18
 1227 00c8 00       		.byte	0
 1228 00c9 00       		.byte	0
 1229 00ca 0F       		.uleb128 0xf
 1230 00cb 34       		.uleb128 0x34
 1231 00cc 00       		.byte	0
 1232 00cd 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 41


 1233 00ce 0E       		.uleb128 0xe
 1234 00cf 3A       		.uleb128 0x3a
 1235 00d0 0B       		.uleb128 0xb
 1236 00d1 3B       		.uleb128 0x3b
 1237 00d2 0B       		.uleb128 0xb
 1238 00d3 49       		.uleb128 0x49
 1239 00d4 13       		.uleb128 0x13
 1240 00d5 02       		.uleb128 0x2
 1241 00d6 18       		.uleb128 0x18
 1242 00d7 00       		.byte	0
 1243 00d8 00       		.byte	0
 1244 00d9 10       		.uleb128 0x10
 1245 00da 2E       		.uleb128 0x2e
 1246 00db 00       		.byte	0
 1247 00dc 03       		.uleb128 0x3
 1248 00dd 0E       		.uleb128 0xe
 1249 00de 3A       		.uleb128 0x3a
 1250 00df 0B       		.uleb128 0xb
 1251 00e0 3B       		.uleb128 0x3b
 1252 00e1 0B       		.uleb128 0xb
 1253 00e2 27       		.uleb128 0x27
 1254 00e3 19       		.uleb128 0x19
 1255 00e4 11       		.uleb128 0x11
 1256 00e5 01       		.uleb128 0x1
 1257 00e6 12       		.uleb128 0x12
 1258 00e7 06       		.uleb128 0x6
 1259 00e8 40       		.uleb128 0x40
 1260 00e9 18       		.uleb128 0x18
 1261 00ea 9642     		.uleb128 0x2116
 1262 00ec 19       		.uleb128 0x19
 1263 00ed 00       		.byte	0
 1264 00ee 00       		.byte	0
 1265 00ef 11       		.uleb128 0x11
 1266 00f0 2E       		.uleb128 0x2e
 1267 00f1 01       		.byte	0x1
 1268 00f2 3F       		.uleb128 0x3f
 1269 00f3 19       		.uleb128 0x19
 1270 00f4 03       		.uleb128 0x3
 1271 00f5 0E       		.uleb128 0xe
 1272 00f6 3A       		.uleb128 0x3a
 1273 00f7 0B       		.uleb128 0xb
 1274 00f8 3B       		.uleb128 0x3b
 1275 00f9 0B       		.uleb128 0xb
 1276 00fa 27       		.uleb128 0x27
 1277 00fb 19       		.uleb128 0x19
 1278 00fc 49       		.uleb128 0x49
 1279 00fd 13       		.uleb128 0x13
 1280 00fe 11       		.uleb128 0x11
 1281 00ff 01       		.uleb128 0x1
 1282 0100 12       		.uleb128 0x12
 1283 0101 06       		.uleb128 0x6
 1284 0102 40       		.uleb128 0x40
 1285 0103 18       		.uleb128 0x18
 1286 0104 9642     		.uleb128 0x2116
 1287 0106 19       		.uleb128 0x19
 1288 0107 01       		.uleb128 0x1
 1289 0108 13       		.uleb128 0x13
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 42


 1290 0109 00       		.byte	0
 1291 010a 00       		.byte	0
 1292 010b 12       		.uleb128 0x12
 1293 010c 2E       		.uleb128 0x2e
 1294 010d 00       		.byte	0
 1295 010e 3F       		.uleb128 0x3f
 1296 010f 19       		.uleb128 0x19
 1297 0110 03       		.uleb128 0x3
 1298 0111 0E       		.uleb128 0xe
 1299 0112 3A       		.uleb128 0x3a
 1300 0113 0B       		.uleb128 0xb
 1301 0114 3B       		.uleb128 0x3b
 1302 0115 0B       		.uleb128 0xb
 1303 0116 27       		.uleb128 0x27
 1304 0117 19       		.uleb128 0x19
 1305 0118 49       		.uleb128 0x49
 1306 0119 13       		.uleb128 0x13
 1307 011a 11       		.uleb128 0x11
 1308 011b 01       		.uleb128 0x1
 1309 011c 12       		.uleb128 0x12
 1310 011d 06       		.uleb128 0x6
 1311 011e 40       		.uleb128 0x40
 1312 011f 18       		.uleb128 0x18
 1313 0120 9742     		.uleb128 0x2117
 1314 0122 19       		.uleb128 0x19
 1315 0123 00       		.byte	0
 1316 0124 00       		.byte	0
 1317 0125 13       		.uleb128 0x13
 1318 0126 2E       		.uleb128 0x2e
 1319 0127 01       		.byte	0x1
 1320 0128 3F       		.uleb128 0x3f
 1321 0129 19       		.uleb128 0x19
 1322 012a 03       		.uleb128 0x3
 1323 012b 0E       		.uleb128 0xe
 1324 012c 3A       		.uleb128 0x3a
 1325 012d 0B       		.uleb128 0xb
 1326 012e 3B       		.uleb128 0x3b
 1327 012f 0B       		.uleb128 0xb
 1328 0130 27       		.uleb128 0x27
 1329 0131 19       		.uleb128 0x19
 1330 0132 11       		.uleb128 0x11
 1331 0133 01       		.uleb128 0x1
 1332 0134 12       		.uleb128 0x12
 1333 0135 06       		.uleb128 0x6
 1334 0136 40       		.uleb128 0x40
 1335 0137 18       		.uleb128 0x18
 1336 0138 9642     		.uleb128 0x2116
 1337 013a 19       		.uleb128 0x19
 1338 013b 01       		.uleb128 0x1
 1339 013c 13       		.uleb128 0x13
 1340 013d 00       		.byte	0
 1341 013e 00       		.byte	0
 1342 013f 14       		.uleb128 0x14
 1343 0140 05       		.uleb128 0x5
 1344 0141 00       		.byte	0
 1345 0142 03       		.uleb128 0x3
 1346 0143 0E       		.uleb128 0xe
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 43


 1347 0144 3A       		.uleb128 0x3a
 1348 0145 0B       		.uleb128 0xb
 1349 0146 3B       		.uleb128 0x3b
 1350 0147 0B       		.uleb128 0xb
 1351 0148 49       		.uleb128 0x49
 1352 0149 13       		.uleb128 0x13
 1353 014a 02       		.uleb128 0x2
 1354 014b 18       		.uleb128 0x18
 1355 014c 00       		.byte	0
 1356 014d 00       		.byte	0
 1357 014e 15       		.uleb128 0x15
 1358 014f 0B       		.uleb128 0xb
 1359 0150 01       		.byte	0x1
 1360 0151 11       		.uleb128 0x11
 1361 0152 01       		.uleb128 0x1
 1362 0153 12       		.uleb128 0x12
 1363 0154 06       		.uleb128 0x6
 1364 0155 00       		.byte	0
 1365 0156 00       		.byte	0
 1366 0157 16       		.uleb128 0x16
 1367 0158 01       		.uleb128 0x1
 1368 0159 01       		.byte	0x1
 1369 015a 49       		.uleb128 0x49
 1370 015b 13       		.uleb128 0x13
 1371 015c 01       		.uleb128 0x1
 1372 015d 13       		.uleb128 0x13
 1373 015e 00       		.byte	0
 1374 015f 00       		.byte	0
 1375 0160 17       		.uleb128 0x17
 1376 0161 21       		.uleb128 0x21
 1377 0162 00       		.byte	0
 1378 0163 49       		.uleb128 0x49
 1379 0164 13       		.uleb128 0x13
 1380 0165 2F       		.uleb128 0x2f
 1381 0166 0B       		.uleb128 0xb
 1382 0167 00       		.byte	0
 1383 0168 00       		.byte	0
 1384 0169 18       		.uleb128 0x18
 1385 016a 21       		.uleb128 0x21
 1386 016b 00       		.byte	0
 1387 016c 49       		.uleb128 0x49
 1388 016d 13       		.uleb128 0x13
 1389 016e 2F       		.uleb128 0x2f
 1390 016f 05       		.uleb128 0x5
 1391 0170 00       		.byte	0
 1392 0171 00       		.byte	0
 1393 0172 00       		.byte	0
 1394              		.section	.debug_aranges,"",%progbits
 1395 0000 4C000000 		.4byte	0x4c
 1396 0004 0200     		.2byte	0x2
 1397 0006 00000000 		.4byte	.Ldebug_info0
 1398 000a 04       		.byte	0x4
 1399 000b 00       		.byte	0
 1400 000c 0000     		.2byte	0
 1401 000e 0000     		.2byte	0
 1402 0010 00000000 		.4byte	.LFB31
 1403 0014 1C000000 		.4byte	.LFE31-.LFB31
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 44


 1404 0018 00000000 		.4byte	.LFB67
 1405 001c 6C000000 		.4byte	.LFE67-.LFB67
 1406 0020 00000000 		.4byte	.LFB68
 1407 0024 12000000 		.4byte	.LFE68-.LFB68
 1408 0028 00000000 		.4byte	.LFB69
 1409 002c 66000000 		.4byte	.LFE69-.LFB69
 1410 0030 00000000 		.4byte	.LFB70
 1411 0034 5C000000 		.4byte	.LFE70-.LFB70
 1412 0038 00000000 		.4byte	.LFB71
 1413 003c 14000000 		.4byte	.LFE71-.LFB71
 1414 0040 00000000 		.4byte	.LFB72
 1415 0044 80010000 		.4byte	.LFE72-.LFB72
 1416 0048 00000000 		.4byte	0
 1417 004c 00000000 		.4byte	0
 1418              		.section	.debug_ranges,"",%progbits
 1419              	.Ldebug_ranges0:
 1420 0000 00000000 		.4byte	.LFB31
 1421 0004 1C000000 		.4byte	.LFE31
 1422 0008 00000000 		.4byte	.LFB67
 1423 000c 6C000000 		.4byte	.LFE67
 1424 0010 00000000 		.4byte	.LFB68
 1425 0014 12000000 		.4byte	.LFE68
 1426 0018 00000000 		.4byte	.LFB69
 1427 001c 66000000 		.4byte	.LFE69
 1428 0020 00000000 		.4byte	.LFB70
 1429 0024 5C000000 		.4byte	.LFE70
 1430 0028 00000000 		.4byte	.LFB71
 1431 002c 14000000 		.4byte	.LFE71
 1432 0030 00000000 		.4byte	.LFB72
 1433 0034 80010000 		.4byte	.LFE72
 1434 0038 00000000 		.4byte	0
 1435 003c 00000000 		.4byte	0
 1436              		.section	.debug_line,"",%progbits
 1437              	.Ldebug_line0:
 1438 0000 8D020000 		.section	.debug_str,"MS",%progbits,1
 1438      02008501 
 1438      00000201 
 1438      FB0E0D00 
 1438      01010101 
 1439              	.LASF9:
 1440 0000 6C6F6E67 		.ascii	"long long int\000"
 1440      206C6F6E 
 1440      6720696E 
 1440      7400
 1441              	.LASF46:
 1442 000e 656E6769 		.ascii	"engine_dma_isr\000"
 1442      6E655F64 
 1442      6D615F69 
 1442      737200
 1443              	.LASF23:
 1444 001d 4B4E4F5F 		.ascii	"KNO_EVENT\000"
 1444      4556454E 
 1444      5400
 1445              	.LASF3:
 1446 0027 5F5F696E 		.ascii	"__int16_t\000"
 1446      7431365F 
 1446      7400
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 45


 1447              	.LASF45:
 1448 0031 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 1448      73657273 
 1448      5C666E65 
 1448      7665735C 
 1448      446F6375 
 1449 005e 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 1449      655F7370 
 1449      6565645F 
 1449      73656E73 
 1449      6F722E63 
 1450              	.LASF5:
 1451 0077 73686F72 		.ascii	"short unsigned int\000"
 1451      7420756E 
 1451      7369676E 
 1451      65642069 
 1451      6E7400
 1452              	.LASF41:
 1453 008a 656E6769 		.ascii	"engine_speed_frequency\000"
 1453      6E655F73 
 1453      70656564 
 1453      5F667265 
 1453      7175656E 
 1454              	.LASF32:
 1455 00a1 6669785F 		.ascii	"fix_sqrt\000"
 1455      73717274 
 1455      00
 1456              	.LASF44:
 1457 00aa 656E6769 		.ascii	"engine_afe.c\000"
 1457      6E655F61 
 1457      66652E63 
 1457      00
 1458              	.LASF18:
 1459 00b7 666C6F61 		.ascii	"float\000"
 1459      7400
 1460              	.LASF10:
 1461 00bd 6C6F6E67 		.ascii	"long long unsigned int\000"
 1461      206C6F6E 
 1461      6720756E 
 1461      7369676E 
 1461      65642069 
 1462              	.LASF1:
 1463 00d4 756E7369 		.ascii	"unsigned char\000"
 1463      676E6564 
 1463      20636861 
 1463      7200
 1464              	.LASF39:
 1465 00e2 656E6769 		.ascii	"engine_buffer_index\000"
 1465      6E655F62 
 1465      75666665 
 1465      725F696E 
 1465      64657800 
 1466              	.LASF8:
 1467 00f6 6C6F6E67 		.ascii	"long unsigned int\000"
 1467      20756E73 
 1467      69676E65 
 1467      6420696E 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 46


 1467      7400
 1468              	.LASF28:
 1469 0108 4B454E47 		.ascii	"KENGINE_COMM_BUSY\000"
 1469      494E455F 
 1469      434F4D4D 
 1469      5F425553 
 1469      5900
 1470              	.LASF15:
 1471 011a 75696E74 		.ascii	"uint8\000"
 1471      3800
 1472              	.LASF33:
 1473 0120 63616C6C 		.ascii	"callback\000"
 1473      6261636B 
 1473      00
 1474              	.LASF7:
 1475 0129 5F5F7569 		.ascii	"__uint32_t\000"
 1475      6E743332 
 1475      5F7400
 1476              	.LASF4:
 1477 0134 5F5F7569 		.ascii	"__uint16_t\000"
 1477      6E743136 
 1477      5F7400
 1478              	.LASF19:
 1479 013f 646F7562 		.ascii	"double\000"
 1479      6C6500
 1480              	.LASF38:
 1481 0146 656E6769 		.ascii	"engine_sample_fft_buffer\000"
 1481      6E655F73 
 1481      616D706C 
 1481      655F6666 
 1481      745F6275 
 1482              	.LASF31:
 1483 015f 656E6769 		.ascii	"engine_sensor_transfer_SetInterruptCallback\000"
 1483      6E655F73 
 1483      656E736F 
 1483      725F7472 
 1483      616E7366 
 1484              	.LASF34:
 1485 018b 726F6F74 		.ascii	"root\000"
 1485      00
 1486              	.LASF37:
 1487 0190 656E6769 		.ascii	"engine_sample_buffer\000"
 1487      6E655F73 
 1487      616D706C 
 1487      655F6275 
 1487      66666572 
 1488              	.LASF24:
 1489 01a5 4B444D41 		.ascii	"KDMA_EVENT\000"
 1489      5F455645 
 1489      4E5400
 1490              	.LASF16:
 1491 01b0 75696E74 		.ascii	"uint32\000"
 1491      333200
 1492              	.LASF36:
 1493 01b7 6576656E 		.ascii	"event\000"
 1493      7400
 1494              	.LASF25:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 47


 1495 01bd 4B52504D 		.ascii	"KRPM_READY_EVENT\000"
 1495      5F524541 
 1495      44595F45 
 1495      56454E54 
 1495      00
 1496              	.LASF29:
 1497 01ce 4B454E47 		.ascii	"KENGINE_PACKET_SENT\000"
 1497      494E455F 
 1497      5041434B 
 1497      45545F53 
 1497      454E5400 
 1498              	.LASF20:
 1499 01e2 63686172 		.ascii	"char\000"
 1499      00
 1500              	.LASF30:
 1501 01e7 73797374 		.ascii	"system_event_t\000"
 1501      656D5F65 
 1501      76656E74 
 1501      5F7400
 1502              	.LASF12:
 1503 01f6 696E7431 		.ascii	"int16_t\000"
 1503      365F7400 
 1504              	.LASF22:
 1505 01fe 6379646D 		.ascii	"cydma_callback_t\000"
 1505      615F6361 
 1505      6C6C6261 
 1505      636B5F74 
 1505      00
 1506              	.LASF47:
 1507 020f 656E6769 		.ascii	"engine_afe_init\000"
 1507      6E655F61 
 1507      66655F69 
 1507      6E697400 
 1508              	.LASF17:
 1509 021f 696E7433 		.ascii	"int32\000"
 1509      3200
 1510              	.LASF21:
 1511 0225 73697A65 		.ascii	"sizetype\000"
 1511      74797065 
 1511      00
 1512              	.LASF43:
 1513 022e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1513      4320342E 
 1513      392E3320 
 1513      32303135 
 1513      30333033 
 1514 0261 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 1514      20726576 
 1514      6973696F 
 1514      6E203232 
 1514      31323230 
 1515 0294 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 1515      30202D66 
 1515      66756E63 
 1515      74696F6E 
 1515      2D736563 
 1516              	.LASF40:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 48


 1517 02c0 656E6769 		.ascii	"engine_current_speed\000"
 1517      6E655F63 
 1517      75727265 
 1517      6E745F73 
 1517      70656564 
 1518              	.LASF26:
 1519 02d5 4B535953 		.ascii	"KSYS_INIT_EVENT\000"
 1519      5F494E49 
 1519      545F4556 
 1519      454E5400 
 1520              	.LASF11:
 1521 02e5 756E7369 		.ascii	"unsigned int\000"
 1521      676E6564 
 1521      20696E74 
 1521      00
 1522              	.LASF2:
 1523 02f2 73686F72 		.ascii	"short int\000"
 1523      7420696E 
 1523      7400
 1524              	.LASF13:
 1525 02fc 75696E74 		.ascii	"uint16_t\000"
 1525      31365F74 
 1525      00
 1526              	.LASF14:
 1527 0305 75696E74 		.ascii	"uint32_t\000"
 1527      33325F74 
 1527      00
 1528              	.LASF6:
 1529 030e 6C6F6E67 		.ascii	"long int\000"
 1529      20696E74 
 1529      00
 1530              	.LASF48:
 1531 0317 656E6769 		.ascii	"engine_afe_get_rpm\000"
 1531      6E655F61 
 1531      66655F67 
 1531      65745F72 
 1531      706D00
 1532              	.LASF27:
 1533 032a 4B454E47 		.ascii	"KENGINE_CALCULATE\000"
 1533      494E455F 
 1533      43414C43 
 1533      554C4154 
 1533      4500
 1534              	.LASF0:
 1535 033c 7369676E 		.ascii	"signed char\000"
 1535      65642063 
 1535      68617200 
 1536              	.LASF35:
 1537 0348 656E6769 		.ascii	"engine_gets_highest_value_idx\000"
 1537      6E655F67 
 1537      6574735F 
 1537      68696768 
 1537      6573745F 
 1538              	.LASF49:
 1539 0366 656E6769 		.ascii	"engine_afe_main\000"
 1539      6E655F61 
 1539      66655F6D 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccAAmFBx.s 			page 49


 1539      61696E00 
 1540              	.LASF42:
 1541 0376 656E6769 		.ascii	"engine_buffer_available\000"
 1541      6E655F62 
 1541      75666665 
 1541      725F6176 
 1541      61696C61 
 1542              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
