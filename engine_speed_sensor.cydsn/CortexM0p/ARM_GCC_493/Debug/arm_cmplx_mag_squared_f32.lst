ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccSC9LcG.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_cmplx_mag_squared_f32.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_fmul
  18              		.global	__aeabi_fadd
  19              		.section	.text.arm_cmplx_mag_squared_f32,"ax",%progbits
  20              		.align	2
  21              		.global	arm_cmplx_mag_squared_f32
  22              		.code	16
  23              		.thumb_func
  24              		.type	arm_cmplx_mag_squared_f32, %function
  25              	arm_cmplx_mag_squared_f32:
  26              	.LFB82:
  27              		.file 1 "Source\\ComplexMathFunctions\\arm_cmplx_mag_squared_f32.c"
   1:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** /* ----------------------------------------------------------------------
   2:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Project:      CMSIS DSP Library
   3:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Title:        arm_cmplx_mag_squared_f32.c
   4:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Description:  Floating-point complex magnitude squared
   5:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
   6:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * $Date:        27. January 2017
   7:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * $Revision:    V.1.5.1
   8:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
   9:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Target Processor: Cortex-M cores
  10:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * -------------------------------------------------------------------- */
  11:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** /*
  12:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
  14:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
  16:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * not use this file except in compliance with the License.
  18:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * You may obtain a copy of the License at
  19:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
  20:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
  22:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * See the License for the specific language governing permissions and
  26:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * limitations under the License.
  27:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  */
  28:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  29:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #include "arm_math.h"
  30:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccSC9LcG.s 			page 2


  31:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** /**
  32:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * @ingroup groupCmplxMath
  33:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  */
  34:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  35:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** /**
  36:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * @defgroup cmplx_mag_squared Complex Magnitude Squared
  37:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
  38:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Computes the magnitude squared of the elements of a complex data vector.
  39:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
  40:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * The <code>pSrc</code> points to the source data and
  41:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * <code>pDst</code> points to the where the result should be written.
  42:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * <code>numSamples</code> specifies the number of complex samples
  43:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * in the input array and the data is stored in an interleaved fashion
  44:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * (real, imag, real, imag, ...).
  45:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * The input array has a total of <code>2*numSamples</code> values;
  46:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * the output array has a total of <code>numSamples</code> values.
  47:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
  48:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * The underlying algorithm is used:
  49:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
  50:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * <pre>
  51:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * for(n=0; n<numSamples; n++) {
  52:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *     pDst[n] = pSrc[(2*n)+0]^2 + pSrc[(2*n)+1]^2;
  53:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * }
  54:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * </pre>
  55:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
  56:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * There are separate functions for floating-point, Q15, and Q31 data types.
  57:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  */
  58:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  59:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** /**
  60:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * @addtogroup cmplx_mag_squared
  61:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * @{
  62:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  */
  63:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  64:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  65:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** /**
  66:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * @brief  Floating-point complex magnitude squared
  67:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * @param[in]  *pSrc points to the complex input vector
  68:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * @param[out]  *pDst points to the real output vector
  69:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * @param[in]  numSamples number of complex samples in the input vector
  70:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * @return none.
  71:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  */
  72:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  73:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** void arm_cmplx_mag_squared_f32(
  74:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32_t * pSrc,
  75:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32_t * pDst,
  76:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   uint32_t numSamples)
  77:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** {
  28              		.loc 1 77 0
  29              		.cfi_startproc
  30 0000 B0B5     		push	{r4, r5, r7, lr}
  31              		.cfi_def_cfa_offset 16
  32              		.cfi_offset 4, -16
  33              		.cfi_offset 5, -12
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 88B0     		sub	sp, sp, #32
  37              		.cfi_def_cfa_offset 48
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccSC9LcG.s 			page 3


  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 F860     		str	r0, [r7, #12]
  41 0008 B960     		str	r1, [r7, #8]
  42 000a 7A60     		str	r2, [r7, #4]
  78:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32_t real, imag;                          /* Temporary variables to store real and imaginary
  79:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   uint32_t blkCnt;                               /* loop counter */
  80:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  81:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #if defined (ARM_MATH_DSP)
  82:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32_t real1, real2, real3, real4;          /* Temporary variables to hold real values */
  83:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32_t imag1, imag2, imag3, imag4;          /* Temporary variables to hold imaginary values */
  84:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32_t mul1, mul2, mul3, mul4;              /* Temporary variables */
  85:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32_t mul5, mul6, mul7, mul8;              /* Temporary variables */
  86:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32_t out1, out2, out3, out4;              /* Temporary variables to hold output values */
  87:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  88:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   /*loop Unrolling */
  89:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   blkCnt = numSamples >> 2u;
  90:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  91:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  92:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  93:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   while (blkCnt > 0u)
  94:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   {
  95:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* C[0] = (A[0] * A[0] + A[1] * A[1]) */
  96:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* read real input sample from source buffer */
  97:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     real1 = pSrc[0];
  98:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* read imaginary input sample from source buffer */
  99:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     imag1 = pSrc[1];
 100:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 101:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* calculate power of real value */
 102:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     mul1 = real1 * real1;
 103:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 104:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* read real input sample from source buffer */
 105:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     real2 = pSrc[2];
 106:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 107:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* calculate power of imaginary value */
 108:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     mul2 = imag1 * imag1;
 109:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 110:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* read imaginary input sample from source buffer */
 111:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     imag2 = pSrc[3];
 112:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 113:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* calculate power of real value */
 114:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     mul3 = real2 * real2;
 115:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 116:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* read real input sample from source buffer */
 117:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     real3 = pSrc[4];
 118:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 119:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* calculate power of imaginary value */
 120:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     mul4 = imag2 * imag2;
 121:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 122:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* read imaginary input sample from source buffer */
 123:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     imag3 = pSrc[5];
 124:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 125:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* calculate power of real value */
 126:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     mul5 = real3 * real3;
 127:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* calculate power of imaginary value */
 128:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     mul6 = imag3 * imag3;
 129:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccSC9LcG.s 			page 4


 130:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* read real input sample from source buffer */
 131:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     real4 = pSrc[6];
 132:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 133:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* accumulate real and imaginary powers */
 134:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     out1 = mul1 + mul2;
 135:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 136:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* read imaginary input sample from source buffer */
 137:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     imag4 = pSrc[7];
 138:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 139:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* accumulate real and imaginary powers */
 140:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     out2 = mul3 + mul4;
 141:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 142:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* calculate power of real value */
 143:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     mul7 = real4 * real4;
 144:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* calculate power of imaginary value */
 145:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     mul8 = imag4 * imag4;
 146:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 147:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* store output to destination */
 148:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     pDst[0] = out1;
 149:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 150:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* accumulate real and imaginary powers */
 151:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     out3 = mul5 + mul6;
 152:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 153:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* store output to destination */
 154:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     pDst[1] = out2;
 155:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 156:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* accumulate real and imaginary powers */
 157:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     out4 = mul7 + mul8;
 158:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 159:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* store output to destination */
 160:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     pDst[2] = out3;
 161:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 162:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* increment destination pointer by 8 to process next samples */
 163:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     pSrc += 8u;
 164:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 165:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* store output to destination */
 166:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     pDst[3] = out4;
 167:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 168:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* increment destination pointer by 4 to process next samples */
 169:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     pDst += 4u;
 170:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 171:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* Decrement the loop counter */
 172:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     blkCnt--;
 173:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   }
 174:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 175:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   /* If the numSamples is not a multiple of 4, compute any remaining output samples here.
 176:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****    ** No loop unrolling is used. */
 177:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   blkCnt = numSamples % 0x4u;
 178:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 179:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #else
 180:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 181:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   /* Run the below code for Cortex-M0 */
 182:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 183:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   blkCnt = numSamples;
  43              		.loc 1 183 0
  44 000c 7B68     		ldr	r3, [r7, #4]
  45 000e FB61     		str	r3, [r7, #28]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccSC9LcG.s 			page 5


 184:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 185:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 186:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 187:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   while (blkCnt > 0u)
  46              		.loc 1 187 0
  47 0010 20E0     		b	.L2
  48              	.L3:
 188:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   {
 189:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* C[0] = (A[0] * A[0] + A[1] * A[1]) */
 190:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     real = *pSrc++;
  49              		.loc 1 190 0
  50 0012 FB68     		ldr	r3, [r7, #12]
  51 0014 1A1D     		add	r2, r3, #4
  52 0016 FA60     		str	r2, [r7, #12]
  53 0018 1B68     		ldr	r3, [r3]
  54 001a BB61     		str	r3, [r7, #24]
 191:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     imag = *pSrc++;
  55              		.loc 1 191 0
  56 001c FB68     		ldr	r3, [r7, #12]
  57 001e 1A1D     		add	r2, r3, #4
  58 0020 FA60     		str	r2, [r7, #12]
  59 0022 1B68     		ldr	r3, [r3]
  60 0024 7B61     		str	r3, [r7, #20]
 192:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 193:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* out = (real * real) + (imag * imag) */
 194:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* store the result in the destination buffer. */
 195:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     *pDst++ = (real * real) + (imag * imag);
  61              		.loc 1 195 0
  62 0026 BC68     		ldr	r4, [r7, #8]
  63 0028 231D     		add	r3, r4, #4
  64 002a BB60     		str	r3, [r7, #8]
  65 002c B869     		ldr	r0, [r7, #24]
  66 002e B969     		ldr	r1, [r7, #24]
  67 0030 FFF7FEFF 		bl	__aeabi_fmul
  68 0034 031C     		add	r3, r0, #0
  69 0036 1D1C     		add	r5, r3, #0
  70 0038 7869     		ldr	r0, [r7, #20]
  71 003a 7969     		ldr	r1, [r7, #20]
  72 003c FFF7FEFF 		bl	__aeabi_fmul
  73 0040 031C     		add	r3, r0, #0
  74 0042 281C     		add	r0, r5, #0
  75 0044 191C     		add	r1, r3, #0
  76 0046 FFF7FEFF 		bl	__aeabi_fadd
  77 004a 031C     		add	r3, r0, #0
  78 004c 2360     		str	r3, [r4]
 196:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 197:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* Decrement the loop counter */
 198:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     blkCnt--;
  79              		.loc 1 198 0
  80 004e FB69     		ldr	r3, [r7, #28]
  81 0050 013B     		sub	r3, r3, #1
  82 0052 FB61     		str	r3, [r7, #28]
  83              	.L2:
 187:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   {
  84              		.loc 1 187 0
  85 0054 FB69     		ldr	r3, [r7, #28]
  86 0056 002B     		cmp	r3, #0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccSC9LcG.s 			page 6


  87 0058 DBD1     		bne	.L3
 199:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   }
 200:Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** }
  88              		.loc 1 200 0
  89 005a BD46     		mov	sp, r7
  90 005c 08B0     		add	sp, sp, #32
  91              		@ sp needed
  92 005e B0BD     		pop	{r4, r5, r7, pc}
  93              		.cfi_endproc
  94              	.LFE82:
  95              		.size	arm_cmplx_mag_squared_f32, .-arm_cmplx_mag_squared_f32
  96              		.text
  97              	.Letext0:
  98              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
  99              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 100              		.file 4 ".\\Include/arm_math.h"
 101              		.section	.debug_info,"",%progbits
 102              	.Ldebug_info0:
 103 0000 19010000 		.4byte	0x119
 104 0004 0400     		.2byte	0x4
 105 0006 00000000 		.4byte	.Ldebug_abbrev0
 106 000a 04       		.byte	0x4
 107 000b 01       		.uleb128 0x1
 108 000c 87010000 		.4byte	.LASF23
 109 0010 01       		.byte	0x1
 110 0011 3B010000 		.4byte	.LASF24
 111 0015 1B000000 		.4byte	.LASF25
 112 0019 00000000 		.4byte	.Ldebug_ranges0+0
 113 001d 00000000 		.4byte	0
 114 0021 00000000 		.4byte	.Ldebug_line0
 115 0025 02       		.uleb128 0x2
 116 0026 01       		.byte	0x1
 117 0027 06       		.byte	0x6
 118 0028 18010000 		.4byte	.LASF0
 119 002c 02       		.uleb128 0x2
 120 002d 01       		.byte	0x1
 121 002e 08       		.byte	0x8
 122 002f BE000000 		.4byte	.LASF1
 123 0033 02       		.uleb128 0x2
 124 0034 02       		.byte	0x2
 125 0035 05       		.byte	0x5
 126 0036 ED000000 		.4byte	.LASF2
 127 003a 02       		.uleb128 0x2
 128 003b 02       		.byte	0x2
 129 003c 07       		.byte	0x7
 130 003d 05010000 		.4byte	.LASF3
 131 0041 02       		.uleb128 0x2
 132 0042 04       		.byte	0x4
 133 0043 05       		.byte	0x5
 134 0044 DF000000 		.4byte	.LASF4
 135 0048 03       		.uleb128 0x3
 136 0049 66000000 		.4byte	.LASF9
 137 004d 02       		.byte	0x2
 138 004e 41       		.byte	0x41
 139 004f 53000000 		.4byte	0x53
 140 0053 02       		.uleb128 0x2
 141 0054 04       		.byte	0x4
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccSC9LcG.s 			page 7


 142 0055 07       		.byte	0x7
 143 0056 71000000 		.4byte	.LASF5
 144 005a 02       		.uleb128 0x2
 145 005b 08       		.byte	0x8
 146 005c 05       		.byte	0x5
 147 005d 00000000 		.4byte	.LASF6
 148 0061 02       		.uleb128 0x2
 149 0062 08       		.byte	0x8
 150 0063 07       		.byte	0x7
 151 0064 83000000 		.4byte	.LASF7
 152 0068 04       		.uleb128 0x4
 153 0069 04       		.byte	0x4
 154 006a 05       		.byte	0x5
 155 006b 696E7400 		.ascii	"int\000"
 156 006f 02       		.uleb128 0x2
 157 0070 04       		.byte	0x4
 158 0071 07       		.byte	0x7
 159 0072 0E000000 		.4byte	.LASF8
 160 0076 03       		.uleb128 0x3
 161 0077 D6000000 		.4byte	.LASF10
 162 007b 03       		.byte	0x3
 163 007c 2D       		.byte	0x2d
 164 007d 48000000 		.4byte	0x48
 165 0081 02       		.uleb128 0x2
 166 0082 04       		.byte	0x4
 167 0083 07       		.byte	0x7
 168 0084 78010000 		.4byte	.LASF11
 169 0088 02       		.uleb128 0x2
 170 0089 01       		.byte	0x1
 171 008a 08       		.byte	0x8
 172 008b CC000000 		.4byte	.LASF12
 173 008f 02       		.uleb128 0x2
 174 0090 08       		.byte	0x8
 175 0091 04       		.byte	0x4
 176 0092 F7000000 		.4byte	.LASF13
 177 0096 02       		.uleb128 0x2
 178 0097 04       		.byte	0x4
 179 0098 04       		.byte	0x4
 180 0099 81010000 		.4byte	.LASF14
 181 009d 02       		.uleb128 0x2
 182 009e 08       		.byte	0x8
 183 009f 04       		.byte	0x4
 184 00a0 24010000 		.4byte	.LASF15
 185 00a4 05       		.uleb128 0x5
 186 00a5 B4000000 		.4byte	.LASF16
 187 00a9 04       		.byte	0x4
 188 00aa A501     		.2byte	0x1a5
 189 00ac 96000000 		.4byte	0x96
 190 00b0 06       		.uleb128 0x6
 191 00b1 04       		.byte	0x4
 192 00b2 A4000000 		.4byte	0xa4
 193 00b6 07       		.uleb128 0x7
 194 00b7 9A000000 		.4byte	.LASF26
 195 00bb 01       		.byte	0x1
 196 00bc 49       		.byte	0x49
 197 00bd 00000000 		.4byte	.LFB82
 198 00c1 60000000 		.4byte	.LFE82-.LFB82
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccSC9LcG.s 			page 8


 199 00c5 01       		.uleb128 0x1
 200 00c6 9C       		.byte	0x9c
 201 00c7 08       		.uleb128 0x8
 202 00c8 E8000000 		.4byte	.LASF17
 203 00cc 01       		.byte	0x1
 204 00cd 4A       		.byte	0x4a
 205 00ce B0000000 		.4byte	0xb0
 206 00d2 02       		.uleb128 0x2
 207 00d3 91       		.byte	0x91
 208 00d4 5C       		.sleb128 -36
 209 00d5 08       		.uleb128 0x8
 210 00d6 61000000 		.4byte	.LASF18
 211 00da 01       		.byte	0x1
 212 00db 4B       		.byte	0x4b
 213 00dc B0000000 		.4byte	0xb0
 214 00e0 02       		.uleb128 0x2
 215 00e1 91       		.byte	0x91
 216 00e2 58       		.sleb128 -40
 217 00e3 08       		.uleb128 0x8
 218 00e4 30010000 		.4byte	.LASF19
 219 00e8 01       		.byte	0x1
 220 00e9 4C       		.byte	0x4c
 221 00ea 76000000 		.4byte	0x76
 222 00ee 02       		.uleb128 0x2
 223 00ef 91       		.byte	0x91
 224 00f0 54       		.sleb128 -44
 225 00f1 09       		.uleb128 0x9
 226 00f2 73010000 		.4byte	.LASF20
 227 00f6 01       		.byte	0x1
 228 00f7 4E       		.byte	0x4e
 229 00f8 A4000000 		.4byte	0xa4
 230 00fc 02       		.uleb128 0x2
 231 00fd 91       		.byte	0x91
 232 00fe 68       		.sleb128 -24
 233 00ff 09       		.uleb128 0x9
 234 0100 D1000000 		.4byte	.LASF21
 235 0104 01       		.byte	0x1
 236 0105 4E       		.byte	0x4e
 237 0106 A4000000 		.4byte	0xa4
 238 010a 02       		.uleb128 0x2
 239 010b 91       		.byte	0x91
 240 010c 64       		.sleb128 -28
 241 010d 09       		.uleb128 0x9
 242 010e FE000000 		.4byte	.LASF22
 243 0112 01       		.byte	0x1
 244 0113 4F       		.byte	0x4f
 245 0114 76000000 		.4byte	0x76
 246 0118 02       		.uleb128 0x2
 247 0119 91       		.byte	0x91
 248 011a 6C       		.sleb128 -20
 249 011b 00       		.byte	0
 250 011c 00       		.byte	0
 251              		.section	.debug_abbrev,"",%progbits
 252              	.Ldebug_abbrev0:
 253 0000 01       		.uleb128 0x1
 254 0001 11       		.uleb128 0x11
 255 0002 01       		.byte	0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccSC9LcG.s 			page 9


 256 0003 25       		.uleb128 0x25
 257 0004 0E       		.uleb128 0xe
 258 0005 13       		.uleb128 0x13
 259 0006 0B       		.uleb128 0xb
 260 0007 03       		.uleb128 0x3
 261 0008 0E       		.uleb128 0xe
 262 0009 1B       		.uleb128 0x1b
 263 000a 0E       		.uleb128 0xe
 264 000b 55       		.uleb128 0x55
 265 000c 17       		.uleb128 0x17
 266 000d 11       		.uleb128 0x11
 267 000e 01       		.uleb128 0x1
 268 000f 10       		.uleb128 0x10
 269 0010 17       		.uleb128 0x17
 270 0011 00       		.byte	0
 271 0012 00       		.byte	0
 272 0013 02       		.uleb128 0x2
 273 0014 24       		.uleb128 0x24
 274 0015 00       		.byte	0
 275 0016 0B       		.uleb128 0xb
 276 0017 0B       		.uleb128 0xb
 277 0018 3E       		.uleb128 0x3e
 278 0019 0B       		.uleb128 0xb
 279 001a 03       		.uleb128 0x3
 280 001b 0E       		.uleb128 0xe
 281 001c 00       		.byte	0
 282 001d 00       		.byte	0
 283 001e 03       		.uleb128 0x3
 284 001f 16       		.uleb128 0x16
 285 0020 00       		.byte	0
 286 0021 03       		.uleb128 0x3
 287 0022 0E       		.uleb128 0xe
 288 0023 3A       		.uleb128 0x3a
 289 0024 0B       		.uleb128 0xb
 290 0025 3B       		.uleb128 0x3b
 291 0026 0B       		.uleb128 0xb
 292 0027 49       		.uleb128 0x49
 293 0028 13       		.uleb128 0x13
 294 0029 00       		.byte	0
 295 002a 00       		.byte	0
 296 002b 04       		.uleb128 0x4
 297 002c 24       		.uleb128 0x24
 298 002d 00       		.byte	0
 299 002e 0B       		.uleb128 0xb
 300 002f 0B       		.uleb128 0xb
 301 0030 3E       		.uleb128 0x3e
 302 0031 0B       		.uleb128 0xb
 303 0032 03       		.uleb128 0x3
 304 0033 08       		.uleb128 0x8
 305 0034 00       		.byte	0
 306 0035 00       		.byte	0
 307 0036 05       		.uleb128 0x5
 308 0037 16       		.uleb128 0x16
 309 0038 00       		.byte	0
 310 0039 03       		.uleb128 0x3
 311 003a 0E       		.uleb128 0xe
 312 003b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccSC9LcG.s 			page 10


 313 003c 0B       		.uleb128 0xb
 314 003d 3B       		.uleb128 0x3b
 315 003e 05       		.uleb128 0x5
 316 003f 49       		.uleb128 0x49
 317 0040 13       		.uleb128 0x13
 318 0041 00       		.byte	0
 319 0042 00       		.byte	0
 320 0043 06       		.uleb128 0x6
 321 0044 0F       		.uleb128 0xf
 322 0045 00       		.byte	0
 323 0046 0B       		.uleb128 0xb
 324 0047 0B       		.uleb128 0xb
 325 0048 49       		.uleb128 0x49
 326 0049 13       		.uleb128 0x13
 327 004a 00       		.byte	0
 328 004b 00       		.byte	0
 329 004c 07       		.uleb128 0x7
 330 004d 2E       		.uleb128 0x2e
 331 004e 01       		.byte	0x1
 332 004f 3F       		.uleb128 0x3f
 333 0050 19       		.uleb128 0x19
 334 0051 03       		.uleb128 0x3
 335 0052 0E       		.uleb128 0xe
 336 0053 3A       		.uleb128 0x3a
 337 0054 0B       		.uleb128 0xb
 338 0055 3B       		.uleb128 0x3b
 339 0056 0B       		.uleb128 0xb
 340 0057 27       		.uleb128 0x27
 341 0058 19       		.uleb128 0x19
 342 0059 11       		.uleb128 0x11
 343 005a 01       		.uleb128 0x1
 344 005b 12       		.uleb128 0x12
 345 005c 06       		.uleb128 0x6
 346 005d 40       		.uleb128 0x40
 347 005e 18       		.uleb128 0x18
 348 005f 9642     		.uleb128 0x2116
 349 0061 19       		.uleb128 0x19
 350 0062 00       		.byte	0
 351 0063 00       		.byte	0
 352 0064 08       		.uleb128 0x8
 353 0065 05       		.uleb128 0x5
 354 0066 00       		.byte	0
 355 0067 03       		.uleb128 0x3
 356 0068 0E       		.uleb128 0xe
 357 0069 3A       		.uleb128 0x3a
 358 006a 0B       		.uleb128 0xb
 359 006b 3B       		.uleb128 0x3b
 360 006c 0B       		.uleb128 0xb
 361 006d 49       		.uleb128 0x49
 362 006e 13       		.uleb128 0x13
 363 006f 02       		.uleb128 0x2
 364 0070 18       		.uleb128 0x18
 365 0071 00       		.byte	0
 366 0072 00       		.byte	0
 367 0073 09       		.uleb128 0x9
 368 0074 34       		.uleb128 0x34
 369 0075 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccSC9LcG.s 			page 11


 370 0076 03       		.uleb128 0x3
 371 0077 0E       		.uleb128 0xe
 372 0078 3A       		.uleb128 0x3a
 373 0079 0B       		.uleb128 0xb
 374 007a 3B       		.uleb128 0x3b
 375 007b 0B       		.uleb128 0xb
 376 007c 49       		.uleb128 0x49
 377 007d 13       		.uleb128 0x13
 378 007e 02       		.uleb128 0x2
 379 007f 18       		.uleb128 0x18
 380 0080 00       		.byte	0
 381 0081 00       		.byte	0
 382 0082 00       		.byte	0
 383              		.section	.debug_aranges,"",%progbits
 384 0000 1C000000 		.4byte	0x1c
 385 0004 0200     		.2byte	0x2
 386 0006 00000000 		.4byte	.Ldebug_info0
 387 000a 04       		.byte	0x4
 388 000b 00       		.byte	0
 389 000c 0000     		.2byte	0
 390 000e 0000     		.2byte	0
 391 0010 00000000 		.4byte	.LFB82
 392 0014 60000000 		.4byte	.LFE82-.LFB82
 393 0018 00000000 		.4byte	0
 394 001c 00000000 		.4byte	0
 395              		.section	.debug_ranges,"",%progbits
 396              	.Ldebug_ranges0:
 397 0000 00000000 		.4byte	.LFB82
 398 0004 60000000 		.4byte	.LFE82
 399 0008 00000000 		.4byte	0
 400 000c 00000000 		.4byte	0
 401              		.section	.debug_line,"",%progbits
 402              	.Ldebug_line0:
 403 0000 84010000 		.section	.debug_str,"MS",%progbits,1
 403      02005E01 
 403      00000201 
 403      FB0E0D00 
 403      01010101 
 404              	.LASF6:
 405 0000 6C6F6E67 		.ascii	"long long int\000"
 405      206C6F6E 
 405      6720696E 
 405      7400
 406              	.LASF8:
 407 000e 756E7369 		.ascii	"unsigned int\000"
 407      676E6564 
 407      20696E74 
 407      00
 408              	.LASF25:
 409 001b 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 409      73657273 
 409      5C666E65 
 409      7665735C 
 409      446F6375 
 410 0048 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 410      655F7370 
 410      6565645F 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccSC9LcG.s 			page 12


 410      73656E73 
 410      6F722E63 
 411              	.LASF18:
 412 0061 70447374 		.ascii	"pDst\000"
 412      00
 413              	.LASF9:
 414 0066 5F5F7569 		.ascii	"__uint32_t\000"
 414      6E743332 
 414      5F7400
 415              	.LASF5:
 416 0071 6C6F6E67 		.ascii	"long unsigned int\000"
 416      20756E73 
 416      69676E65 
 416      6420696E 
 416      7400
 417              	.LASF7:
 418 0083 6C6F6E67 		.ascii	"long long unsigned int\000"
 418      206C6F6E 
 418      6720756E 
 418      7369676E 
 418      65642069 
 419              	.LASF26:
 420 009a 61726D5F 		.ascii	"arm_cmplx_mag_squared_f32\000"
 420      636D706C 
 420      785F6D61 
 420      675F7371 
 420      75617265 
 421              	.LASF16:
 422 00b4 666C6F61 		.ascii	"float32_t\000"
 422      7433325F 
 422      7400
 423              	.LASF1:
 424 00be 756E7369 		.ascii	"unsigned char\000"
 424      676E6564 
 424      20636861 
 424      7200
 425              	.LASF12:
 426 00cc 63686172 		.ascii	"char\000"
 426      00
 427              	.LASF21:
 428 00d1 696D6167 		.ascii	"imag\000"
 428      00
 429              	.LASF10:
 430 00d6 75696E74 		.ascii	"uint32_t\000"
 430      33325F74 
 430      00
 431              	.LASF4:
 432 00df 6C6F6E67 		.ascii	"long int\000"
 432      20696E74 
 432      00
 433              	.LASF17:
 434 00e8 70537263 		.ascii	"pSrc\000"
 434      00
 435              	.LASF2:
 436 00ed 73686F72 		.ascii	"short int\000"
 436      7420696E 
 436      7400
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccSC9LcG.s 			page 13


 437              	.LASF13:
 438 00f7 646F7562 		.ascii	"double\000"
 438      6C6500
 439              	.LASF22:
 440 00fe 626C6B43 		.ascii	"blkCnt\000"
 440      6E7400
 441              	.LASF3:
 442 0105 73686F72 		.ascii	"short unsigned int\000"
 442      7420756E 
 442      7369676E 
 442      65642069 
 442      6E7400
 443              	.LASF0:
 444 0118 7369676E 		.ascii	"signed char\000"
 444      65642063 
 444      68617200 
 445              	.LASF15:
 446 0124 6C6F6E67 		.ascii	"long double\000"
 446      20646F75 
 446      626C6500 
 447              	.LASF19:
 448 0130 6E756D53 		.ascii	"numSamples\000"
 448      616D706C 
 448      657300
 449              	.LASF24:
 450 013b 536F7572 		.ascii	"Source\\ComplexMathFunctions\\arm_cmplx_mag_squared"
 450      63655C43 
 450      6F6D706C 
 450      65784D61 
 450      74684675 
 451 016c 5F663332 		.ascii	"_f32.c\000"
 451      2E6300
 452              	.LASF20:
 453 0173 7265616C 		.ascii	"real\000"
 453      00
 454              	.LASF11:
 455 0178 73697A65 		.ascii	"sizetype\000"
 455      74797065 
 455      00
 456              	.LASF14:
 457 0181 666C6F61 		.ascii	"float\000"
 457      7400
 458              	.LASF23:
 459 0187 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 459      4320342E 
 459      392E3320 
 459      32303135 
 459      30333033 
 460 01ba 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 460      20726576 
 460      6973696F 
 460      6E203232 
 460      31323230 
 461 01ed 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 461      30202D66 
 461      66756E63 
 461      74696F6E 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccSC9LcG.s 			page 14


 461      2D736563 
 462              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
