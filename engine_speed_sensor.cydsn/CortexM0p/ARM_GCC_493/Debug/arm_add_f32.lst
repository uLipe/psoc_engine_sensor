ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc7DWBfp.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_add_f32.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_fadd
  18              		.section	.text.arm_add_f32,"ax",%progbits
  19              		.align	2
  20              		.global	arm_add_f32
  21              		.code	16
  22              		.thumb_func
  23              		.type	arm_add_f32, %function
  24              	arm_add_f32:
  25              	.LFB82:
  26              		.file 1 "Source\\BasicMathFunctions\\arm_add_f32.c"
   1:Source\BasicMathFunctions/arm_add_f32.c **** /* ----------------------------------------------------------------------
   2:Source\BasicMathFunctions/arm_add_f32.c ****  * Project:      CMSIS DSP Library
   3:Source\BasicMathFunctions/arm_add_f32.c ****  * Title:        arm_add_f32.c
   4:Source\BasicMathFunctions/arm_add_f32.c ****  * Description:  Floating-point vector addition
   5:Source\BasicMathFunctions/arm_add_f32.c ****  *
   6:Source\BasicMathFunctions/arm_add_f32.c ****  * $Date:        27. January 2017
   7:Source\BasicMathFunctions/arm_add_f32.c ****  * $Revision:    V.1.5.1
   8:Source\BasicMathFunctions/arm_add_f32.c ****  *
   9:Source\BasicMathFunctions/arm_add_f32.c ****  * Target Processor: Cortex-M cores
  10:Source\BasicMathFunctions/arm_add_f32.c ****  * -------------------------------------------------------------------- */
  11:Source\BasicMathFunctions/arm_add_f32.c **** /*
  12:Source\BasicMathFunctions/arm_add_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\BasicMathFunctions/arm_add_f32.c ****  *
  14:Source\BasicMathFunctions/arm_add_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\BasicMathFunctions/arm_add_f32.c ****  *
  16:Source\BasicMathFunctions/arm_add_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\BasicMathFunctions/arm_add_f32.c ****  * not use this file except in compliance with the License.
  18:Source\BasicMathFunctions/arm_add_f32.c ****  * You may obtain a copy of the License at
  19:Source\BasicMathFunctions/arm_add_f32.c ****  *
  20:Source\BasicMathFunctions/arm_add_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\BasicMathFunctions/arm_add_f32.c ****  *
  22:Source\BasicMathFunctions/arm_add_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\BasicMathFunctions/arm_add_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\BasicMathFunctions/arm_add_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\BasicMathFunctions/arm_add_f32.c ****  * See the License for the specific language governing permissions and
  26:Source\BasicMathFunctions/arm_add_f32.c ****  * limitations under the License.
  27:Source\BasicMathFunctions/arm_add_f32.c ****  */
  28:Source\BasicMathFunctions/arm_add_f32.c **** 
  29:Source\BasicMathFunctions/arm_add_f32.c **** #include "arm_math.h"
  30:Source\BasicMathFunctions/arm_add_f32.c **** 
  31:Source\BasicMathFunctions/arm_add_f32.c **** /**
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc7DWBfp.s 			page 2


  32:Source\BasicMathFunctions/arm_add_f32.c ****  * @ingroup groupMath
  33:Source\BasicMathFunctions/arm_add_f32.c ****  */
  34:Source\BasicMathFunctions/arm_add_f32.c **** 
  35:Source\BasicMathFunctions/arm_add_f32.c **** /**
  36:Source\BasicMathFunctions/arm_add_f32.c ****  * @defgroup BasicAdd Vector Addition
  37:Source\BasicMathFunctions/arm_add_f32.c ****  *
  38:Source\BasicMathFunctions/arm_add_f32.c ****  * Element-by-element addition of two vectors.
  39:Source\BasicMathFunctions/arm_add_f32.c ****  *
  40:Source\BasicMathFunctions/arm_add_f32.c ****  * <pre>
  41:Source\BasicMathFunctions/arm_add_f32.c ****  *     pDst[n] = pSrcA[n] + pSrcB[n],   0 <= n < blockSize.
  42:Source\BasicMathFunctions/arm_add_f32.c ****  * </pre>
  43:Source\BasicMathFunctions/arm_add_f32.c ****  *
  44:Source\BasicMathFunctions/arm_add_f32.c ****  * There are separate functions for floating-point, Q7, Q15, and Q31 data types.
  45:Source\BasicMathFunctions/arm_add_f32.c ****  */
  46:Source\BasicMathFunctions/arm_add_f32.c **** 
  47:Source\BasicMathFunctions/arm_add_f32.c **** /**
  48:Source\BasicMathFunctions/arm_add_f32.c ****  * @addtogroup BasicAdd
  49:Source\BasicMathFunctions/arm_add_f32.c ****  * @{
  50:Source\BasicMathFunctions/arm_add_f32.c ****  */
  51:Source\BasicMathFunctions/arm_add_f32.c **** 
  52:Source\BasicMathFunctions/arm_add_f32.c **** /**
  53:Source\BasicMathFunctions/arm_add_f32.c ****  * @brief Floating-point vector addition.
  54:Source\BasicMathFunctions/arm_add_f32.c ****  * @param[in]       *pSrcA points to the first input vector
  55:Source\BasicMathFunctions/arm_add_f32.c ****  * @param[in]       *pSrcB points to the second input vector
  56:Source\BasicMathFunctions/arm_add_f32.c ****  * @param[out]      *pDst points to the output vector
  57:Source\BasicMathFunctions/arm_add_f32.c ****  * @param[in]       blockSize number of samples in each vector
  58:Source\BasicMathFunctions/arm_add_f32.c ****  * @return none.
  59:Source\BasicMathFunctions/arm_add_f32.c ****  */
  60:Source\BasicMathFunctions/arm_add_f32.c **** 
  61:Source\BasicMathFunctions/arm_add_f32.c **** void arm_add_f32(
  62:Source\BasicMathFunctions/arm_add_f32.c ****   float32_t * pSrcA,
  63:Source\BasicMathFunctions/arm_add_f32.c ****   float32_t * pSrcB,
  64:Source\BasicMathFunctions/arm_add_f32.c ****   float32_t * pDst,
  65:Source\BasicMathFunctions/arm_add_f32.c ****   uint32_t blockSize)
  66:Source\BasicMathFunctions/arm_add_f32.c **** {
  27              		.loc 1 66 0
  28              		.cfi_startproc
  29 0000 90B5     		push	{r4, r7, lr}
  30              		.cfi_def_cfa_offset 12
  31              		.cfi_offset 4, -12
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 87B0     		sub	sp, sp, #28
  35              		.cfi_def_cfa_offset 40
  36 0004 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  38 0006 F860     		str	r0, [r7, #12]
  39 0008 B960     		str	r1, [r7, #8]
  40 000a 7A60     		str	r2, [r7, #4]
  41 000c 3B60     		str	r3, [r7]
  67:Source\BasicMathFunctions/arm_add_f32.c ****   uint32_t blkCnt;                               /* loop counter */
  68:Source\BasicMathFunctions/arm_add_f32.c **** 
  69:Source\BasicMathFunctions/arm_add_f32.c **** #if defined (ARM_MATH_DSP)
  70:Source\BasicMathFunctions/arm_add_f32.c **** 
  71:Source\BasicMathFunctions/arm_add_f32.c **** /* Run the below code for Cortex-M4 and Cortex-M3 */
  72:Source\BasicMathFunctions/arm_add_f32.c ****   float32_t inA1, inA2, inA3, inA4;              /* temporary input variabels */
  73:Source\BasicMathFunctions/arm_add_f32.c ****   float32_t inB1, inB2, inB3, inB4;              /* temporary input variables */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc7DWBfp.s 			page 3


  74:Source\BasicMathFunctions/arm_add_f32.c **** 
  75:Source\BasicMathFunctions/arm_add_f32.c ****   /*loop Unrolling */
  76:Source\BasicMathFunctions/arm_add_f32.c ****   blkCnt = blockSize >> 2u;
  77:Source\BasicMathFunctions/arm_add_f32.c **** 
  78:Source\BasicMathFunctions/arm_add_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  79:Source\BasicMathFunctions/arm_add_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  80:Source\BasicMathFunctions/arm_add_f32.c ****   while (blkCnt > 0u)
  81:Source\BasicMathFunctions/arm_add_f32.c ****   {
  82:Source\BasicMathFunctions/arm_add_f32.c ****     /* C = A + B */
  83:Source\BasicMathFunctions/arm_add_f32.c ****     /* Add and then store the results in the destination buffer. */
  84:Source\BasicMathFunctions/arm_add_f32.c **** 
  85:Source\BasicMathFunctions/arm_add_f32.c ****     /* read four inputs from sourceA and four inputs from sourceB */
  86:Source\BasicMathFunctions/arm_add_f32.c ****     inA1 = *pSrcA;
  87:Source\BasicMathFunctions/arm_add_f32.c ****     inB1 = *pSrcB;
  88:Source\BasicMathFunctions/arm_add_f32.c ****     inA2 = *(pSrcA + 1);
  89:Source\BasicMathFunctions/arm_add_f32.c ****     inB2 = *(pSrcB + 1);
  90:Source\BasicMathFunctions/arm_add_f32.c ****     inA3 = *(pSrcA + 2);
  91:Source\BasicMathFunctions/arm_add_f32.c ****     inB3 = *(pSrcB + 2);
  92:Source\BasicMathFunctions/arm_add_f32.c ****     inA4 = *(pSrcA + 3);
  93:Source\BasicMathFunctions/arm_add_f32.c ****     inB4 = *(pSrcB + 3);
  94:Source\BasicMathFunctions/arm_add_f32.c **** 
  95:Source\BasicMathFunctions/arm_add_f32.c ****     /* C = A + B */
  96:Source\BasicMathFunctions/arm_add_f32.c ****     /* add and store result to destination */
  97:Source\BasicMathFunctions/arm_add_f32.c ****     *pDst = inA1 + inB1;
  98:Source\BasicMathFunctions/arm_add_f32.c ****     *(pDst + 1) = inA2 + inB2;
  99:Source\BasicMathFunctions/arm_add_f32.c ****     *(pDst + 2) = inA3 + inB3;
 100:Source\BasicMathFunctions/arm_add_f32.c ****     *(pDst + 3) = inA4 + inB4;
 101:Source\BasicMathFunctions/arm_add_f32.c **** 
 102:Source\BasicMathFunctions/arm_add_f32.c ****     /* update pointers to process next samples */
 103:Source\BasicMathFunctions/arm_add_f32.c ****     pSrcA += 4u;
 104:Source\BasicMathFunctions/arm_add_f32.c ****     pSrcB += 4u;
 105:Source\BasicMathFunctions/arm_add_f32.c ****     pDst += 4u;
 106:Source\BasicMathFunctions/arm_add_f32.c **** 
 107:Source\BasicMathFunctions/arm_add_f32.c **** 
 108:Source\BasicMathFunctions/arm_add_f32.c ****     /* Decrement the loop counter */
 109:Source\BasicMathFunctions/arm_add_f32.c ****     blkCnt--;
 110:Source\BasicMathFunctions/arm_add_f32.c ****   }
 111:Source\BasicMathFunctions/arm_add_f32.c **** 
 112:Source\BasicMathFunctions/arm_add_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 113:Source\BasicMathFunctions/arm_add_f32.c ****    ** No loop unrolling is used. */
 114:Source\BasicMathFunctions/arm_add_f32.c ****   blkCnt = blockSize % 0x4u;
 115:Source\BasicMathFunctions/arm_add_f32.c **** 
 116:Source\BasicMathFunctions/arm_add_f32.c **** #else
 117:Source\BasicMathFunctions/arm_add_f32.c **** 
 118:Source\BasicMathFunctions/arm_add_f32.c ****   /* Run the below code for Cortex-M0 */
 119:Source\BasicMathFunctions/arm_add_f32.c **** 
 120:Source\BasicMathFunctions/arm_add_f32.c ****   /* Initialize blkCnt with number of samples */
 121:Source\BasicMathFunctions/arm_add_f32.c ****   blkCnt = blockSize;
  42              		.loc 1 121 0
  43 000e 3B68     		ldr	r3, [r7]
  44 0010 7B61     		str	r3, [r7, #20]
 122:Source\BasicMathFunctions/arm_add_f32.c **** 
 123:Source\BasicMathFunctions/arm_add_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 124:Source\BasicMathFunctions/arm_add_f32.c **** 
 125:Source\BasicMathFunctions/arm_add_f32.c ****   while (blkCnt > 0u)
  45              		.loc 1 125 0
  46 0012 13E0     		b	.L2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc7DWBfp.s 			page 4


  47              	.L3:
 126:Source\BasicMathFunctions/arm_add_f32.c ****   {
 127:Source\BasicMathFunctions/arm_add_f32.c ****     /* C = A + B */
 128:Source\BasicMathFunctions/arm_add_f32.c ****     /* Add and then store the results in the destination buffer. */
 129:Source\BasicMathFunctions/arm_add_f32.c ****     *pDst++ = (*pSrcA++) + (*pSrcB++);
  48              		.loc 1 129 0
  49 0014 7C68     		ldr	r4, [r7, #4]
  50 0016 231D     		add	r3, r4, #4
  51 0018 7B60     		str	r3, [r7, #4]
  52 001a FB68     		ldr	r3, [r7, #12]
  53 001c 1A1D     		add	r2, r3, #4
  54 001e FA60     		str	r2, [r7, #12]
  55 0020 1968     		ldr	r1, [r3]
  56 0022 BB68     		ldr	r3, [r7, #8]
  57 0024 1A1D     		add	r2, r3, #4
  58 0026 BA60     		str	r2, [r7, #8]
  59 0028 1B68     		ldr	r3, [r3]
  60 002a 081C     		add	r0, r1, #0
  61 002c 191C     		add	r1, r3, #0
  62 002e FFF7FEFF 		bl	__aeabi_fadd
  63 0032 031C     		add	r3, r0, #0
  64 0034 2360     		str	r3, [r4]
 130:Source\BasicMathFunctions/arm_add_f32.c **** 
 131:Source\BasicMathFunctions/arm_add_f32.c ****     /* Decrement the loop counter */
 132:Source\BasicMathFunctions/arm_add_f32.c ****     blkCnt--;
  65              		.loc 1 132 0
  66 0036 7B69     		ldr	r3, [r7, #20]
  67 0038 013B     		sub	r3, r3, #1
  68 003a 7B61     		str	r3, [r7, #20]
  69              	.L2:
 125:Source\BasicMathFunctions/arm_add_f32.c ****   {
  70              		.loc 1 125 0
  71 003c 7B69     		ldr	r3, [r7, #20]
  72 003e 002B     		cmp	r3, #0
  73 0040 E8D1     		bne	.L3
 133:Source\BasicMathFunctions/arm_add_f32.c ****   }
 134:Source\BasicMathFunctions/arm_add_f32.c **** }
  74              		.loc 1 134 0
  75 0042 BD46     		mov	sp, r7
  76 0044 07B0     		add	sp, sp, #28
  77              		@ sp needed
  78 0046 90BD     		pop	{r4, r7, pc}
  79              		.cfi_endproc
  80              	.LFE82:
  81              		.size	arm_add_f32, .-arm_add_f32
  82              		.text
  83              	.Letext0:
  84              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
  85              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
  86              		.file 4 ".\\Include/arm_math.h"
  87              		.section	.debug_info,"",%progbits
  88              	.Ldebug_info0:
  89 0000 0B010000 		.4byte	0x10b
  90 0004 0400     		.2byte	0x4
  91 0006 00000000 		.4byte	.Ldebug_abbrev0
  92 000a 04       		.byte	0x4
  93 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc7DWBfp.s 			page 5


  94 000c 65010000 		.4byte	.LASF21
  95 0010 01       		.byte	0x1
  96 0011 7C000000 		.4byte	.LASF22
  97 0015 00010000 		.4byte	.LASF23
  98 0019 00000000 		.4byte	.Ldebug_ranges0+0
  99 001d 00000000 		.4byte	0
 100 0021 00000000 		.4byte	.Ldebug_line0
 101 0025 02       		.uleb128 0x2
 102 0026 01       		.byte	0x1
 103 0027 06       		.byte	0x6
 104 0028 E8000000 		.4byte	.LASF0
 105 002c 02       		.uleb128 0x2
 106 002d 01       		.byte	0x1
 107 002e 08       		.byte	0x8
 108 002f 6E000000 		.4byte	.LASF1
 109 0033 02       		.uleb128 0x2
 110 0034 02       		.byte	0x2
 111 0035 05       		.byte	0x5
 112 0036 4F010000 		.4byte	.LASF2
 113 003a 02       		.uleb128 0x2
 114 003b 02       		.byte	0x2
 115 003c 07       		.byte	0x7
 116 003d D5000000 		.4byte	.LASF3
 117 0041 02       		.uleb128 0x2
 118 0042 04       		.byte	0x4
 119 0043 05       		.byte	0x5
 120 0044 BE000000 		.4byte	.LASF4
 121 0048 03       		.uleb128 0x3
 122 0049 20000000 		.4byte	.LASF9
 123 004d 02       		.byte	0x2
 124 004e 41       		.byte	0x41
 125 004f 53000000 		.4byte	0x53
 126 0053 02       		.uleb128 0x2
 127 0054 04       		.byte	0x4
 128 0055 07       		.byte	0x7
 129 0056 35000000 		.4byte	.LASF5
 130 005a 02       		.uleb128 0x2
 131 005b 08       		.byte	0x8
 132 005c 05       		.byte	0x5
 133 005d 00000000 		.4byte	.LASF6
 134 0061 02       		.uleb128 0x2
 135 0062 08       		.byte	0x8
 136 0063 07       		.byte	0x7
 137 0064 47000000 		.4byte	.LASF7
 138 0068 04       		.uleb128 0x4
 139 0069 04       		.byte	0x4
 140 006a 05       		.byte	0x5
 141 006b 696E7400 		.ascii	"int\000"
 142 006f 02       		.uleb128 0x2
 143 0070 04       		.byte	0x4
 144 0071 07       		.byte	0x7
 145 0072 0E000000 		.4byte	.LASF8
 146 0076 03       		.uleb128 0x3
 147 0077 B5000000 		.4byte	.LASF10
 148 007b 03       		.byte	0x3
 149 007c 2D       		.byte	0x2d
 150 007d 48000000 		.4byte	0x48
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc7DWBfp.s 			page 6


 151 0081 02       		.uleb128 0x2
 152 0082 04       		.byte	0x4
 153 0083 07       		.byte	0x7
 154 0084 46010000 		.4byte	.LASF11
 155 0088 02       		.uleb128 0x2
 156 0089 01       		.byte	0x1
 157 008a 08       		.byte	0x8
 158 008b A4000000 		.4byte	.LASF12
 159 008f 02       		.uleb128 0x2
 160 0090 08       		.byte	0x8
 161 0091 04       		.byte	0x4
 162 0092 C7000000 		.4byte	.LASF13
 163 0096 02       		.uleb128 0x2
 164 0097 04       		.byte	0x4
 165 0098 04       		.byte	0x4
 166 0099 5E000000 		.4byte	.LASF14
 167 009d 02       		.uleb128 0x2
 168 009e 08       		.byte	0x8
 169 009f 04       		.byte	0x4
 170 00a0 F4000000 		.4byte	.LASF15
 171 00a4 05       		.uleb128 0x5
 172 00a5 64000000 		.4byte	.LASF16
 173 00a9 04       		.byte	0x4
 174 00aa A501     		.2byte	0x1a5
 175 00ac 96000000 		.4byte	0x96
 176 00b0 06       		.uleb128 0x6
 177 00b1 04       		.byte	0x4
 178 00b2 A4000000 		.4byte	0xa4
 179 00b6 07       		.uleb128 0x7
 180 00b7 A9000000 		.4byte	.LASF24
 181 00bb 01       		.byte	0x1
 182 00bc 3D       		.byte	0x3d
 183 00bd 00000000 		.4byte	.LFB82
 184 00c1 48000000 		.4byte	.LFE82-.LFB82
 185 00c5 01       		.uleb128 0x1
 186 00c6 9C       		.byte	0x9c
 187 00c7 08       		.uleb128 0x8
 188 00c8 59010000 		.4byte	.LASF17
 189 00cc 01       		.byte	0x1
 190 00cd 3E       		.byte	0x3e
 191 00ce B0000000 		.4byte	0xb0
 192 00d2 02       		.uleb128 0x2
 193 00d3 91       		.byte	0x91
 194 00d4 64       		.sleb128 -28
 195 00d5 08       		.uleb128 0x8
 196 00d6 5F010000 		.4byte	.LASF18
 197 00da 01       		.byte	0x1
 198 00db 3F       		.byte	0x3f
 199 00dc B0000000 		.4byte	0xb0
 200 00e0 02       		.uleb128 0x2
 201 00e1 91       		.byte	0x91
 202 00e2 60       		.sleb128 -32
 203 00e3 08       		.uleb128 0x8
 204 00e4 1B000000 		.4byte	.LASF19
 205 00e8 01       		.byte	0x1
 206 00e9 40       		.byte	0x40
 207 00ea B0000000 		.4byte	0xb0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc7DWBfp.s 			page 7


 208 00ee 02       		.uleb128 0x2
 209 00ef 91       		.byte	0x91
 210 00f0 5C       		.sleb128 -36
 211 00f1 08       		.uleb128 0x8
 212 00f2 2B000000 		.4byte	.LASF20
 213 00f6 01       		.byte	0x1
 214 00f7 41       		.byte	0x41
 215 00f8 76000000 		.4byte	0x76
 216 00fc 02       		.uleb128 0x2
 217 00fd 91       		.byte	0x91
 218 00fe 58       		.sleb128 -40
 219 00ff 09       		.uleb128 0x9
 220 0100 CE000000 		.4byte	.LASF25
 221 0104 01       		.byte	0x1
 222 0105 43       		.byte	0x43
 223 0106 76000000 		.4byte	0x76
 224 010a 02       		.uleb128 0x2
 225 010b 91       		.byte	0x91
 226 010c 6C       		.sleb128 -20
 227 010d 00       		.byte	0
 228 010e 00       		.byte	0
 229              		.section	.debug_abbrev,"",%progbits
 230              	.Ldebug_abbrev0:
 231 0000 01       		.uleb128 0x1
 232 0001 11       		.uleb128 0x11
 233 0002 01       		.byte	0x1
 234 0003 25       		.uleb128 0x25
 235 0004 0E       		.uleb128 0xe
 236 0005 13       		.uleb128 0x13
 237 0006 0B       		.uleb128 0xb
 238 0007 03       		.uleb128 0x3
 239 0008 0E       		.uleb128 0xe
 240 0009 1B       		.uleb128 0x1b
 241 000a 0E       		.uleb128 0xe
 242 000b 55       		.uleb128 0x55
 243 000c 17       		.uleb128 0x17
 244 000d 11       		.uleb128 0x11
 245 000e 01       		.uleb128 0x1
 246 000f 10       		.uleb128 0x10
 247 0010 17       		.uleb128 0x17
 248 0011 00       		.byte	0
 249 0012 00       		.byte	0
 250 0013 02       		.uleb128 0x2
 251 0014 24       		.uleb128 0x24
 252 0015 00       		.byte	0
 253 0016 0B       		.uleb128 0xb
 254 0017 0B       		.uleb128 0xb
 255 0018 3E       		.uleb128 0x3e
 256 0019 0B       		.uleb128 0xb
 257 001a 03       		.uleb128 0x3
 258 001b 0E       		.uleb128 0xe
 259 001c 00       		.byte	0
 260 001d 00       		.byte	0
 261 001e 03       		.uleb128 0x3
 262 001f 16       		.uleb128 0x16
 263 0020 00       		.byte	0
 264 0021 03       		.uleb128 0x3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc7DWBfp.s 			page 8


 265 0022 0E       		.uleb128 0xe
 266 0023 3A       		.uleb128 0x3a
 267 0024 0B       		.uleb128 0xb
 268 0025 3B       		.uleb128 0x3b
 269 0026 0B       		.uleb128 0xb
 270 0027 49       		.uleb128 0x49
 271 0028 13       		.uleb128 0x13
 272 0029 00       		.byte	0
 273 002a 00       		.byte	0
 274 002b 04       		.uleb128 0x4
 275 002c 24       		.uleb128 0x24
 276 002d 00       		.byte	0
 277 002e 0B       		.uleb128 0xb
 278 002f 0B       		.uleb128 0xb
 279 0030 3E       		.uleb128 0x3e
 280 0031 0B       		.uleb128 0xb
 281 0032 03       		.uleb128 0x3
 282 0033 08       		.uleb128 0x8
 283 0034 00       		.byte	0
 284 0035 00       		.byte	0
 285 0036 05       		.uleb128 0x5
 286 0037 16       		.uleb128 0x16
 287 0038 00       		.byte	0
 288 0039 03       		.uleb128 0x3
 289 003a 0E       		.uleb128 0xe
 290 003b 3A       		.uleb128 0x3a
 291 003c 0B       		.uleb128 0xb
 292 003d 3B       		.uleb128 0x3b
 293 003e 05       		.uleb128 0x5
 294 003f 49       		.uleb128 0x49
 295 0040 13       		.uleb128 0x13
 296 0041 00       		.byte	0
 297 0042 00       		.byte	0
 298 0043 06       		.uleb128 0x6
 299 0044 0F       		.uleb128 0xf
 300 0045 00       		.byte	0
 301 0046 0B       		.uleb128 0xb
 302 0047 0B       		.uleb128 0xb
 303 0048 49       		.uleb128 0x49
 304 0049 13       		.uleb128 0x13
 305 004a 00       		.byte	0
 306 004b 00       		.byte	0
 307 004c 07       		.uleb128 0x7
 308 004d 2E       		.uleb128 0x2e
 309 004e 01       		.byte	0x1
 310 004f 3F       		.uleb128 0x3f
 311 0050 19       		.uleb128 0x19
 312 0051 03       		.uleb128 0x3
 313 0052 0E       		.uleb128 0xe
 314 0053 3A       		.uleb128 0x3a
 315 0054 0B       		.uleb128 0xb
 316 0055 3B       		.uleb128 0x3b
 317 0056 0B       		.uleb128 0xb
 318 0057 27       		.uleb128 0x27
 319 0058 19       		.uleb128 0x19
 320 0059 11       		.uleb128 0x11
 321 005a 01       		.uleb128 0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc7DWBfp.s 			page 9


 322 005b 12       		.uleb128 0x12
 323 005c 06       		.uleb128 0x6
 324 005d 40       		.uleb128 0x40
 325 005e 18       		.uleb128 0x18
 326 005f 9642     		.uleb128 0x2116
 327 0061 19       		.uleb128 0x19
 328 0062 00       		.byte	0
 329 0063 00       		.byte	0
 330 0064 08       		.uleb128 0x8
 331 0065 05       		.uleb128 0x5
 332 0066 00       		.byte	0
 333 0067 03       		.uleb128 0x3
 334 0068 0E       		.uleb128 0xe
 335 0069 3A       		.uleb128 0x3a
 336 006a 0B       		.uleb128 0xb
 337 006b 3B       		.uleb128 0x3b
 338 006c 0B       		.uleb128 0xb
 339 006d 49       		.uleb128 0x49
 340 006e 13       		.uleb128 0x13
 341 006f 02       		.uleb128 0x2
 342 0070 18       		.uleb128 0x18
 343 0071 00       		.byte	0
 344 0072 00       		.byte	0
 345 0073 09       		.uleb128 0x9
 346 0074 34       		.uleb128 0x34
 347 0075 00       		.byte	0
 348 0076 03       		.uleb128 0x3
 349 0077 0E       		.uleb128 0xe
 350 0078 3A       		.uleb128 0x3a
 351 0079 0B       		.uleb128 0xb
 352 007a 3B       		.uleb128 0x3b
 353 007b 0B       		.uleb128 0xb
 354 007c 49       		.uleb128 0x49
 355 007d 13       		.uleb128 0x13
 356 007e 02       		.uleb128 0x2
 357 007f 18       		.uleb128 0x18
 358 0080 00       		.byte	0
 359 0081 00       		.byte	0
 360 0082 00       		.byte	0
 361              		.section	.debug_aranges,"",%progbits
 362 0000 1C000000 		.4byte	0x1c
 363 0004 0200     		.2byte	0x2
 364 0006 00000000 		.4byte	.Ldebug_info0
 365 000a 04       		.byte	0x4
 366 000b 00       		.byte	0
 367 000c 0000     		.2byte	0
 368 000e 0000     		.2byte	0
 369 0010 00000000 		.4byte	.LFB82
 370 0014 48000000 		.4byte	.LFE82-.LFB82
 371 0018 00000000 		.4byte	0
 372 001c 00000000 		.4byte	0
 373              		.section	.debug_ranges,"",%progbits
 374              	.Ldebug_ranges0:
 375 0000 00000000 		.4byte	.LFB82
 376 0004 48000000 		.4byte	.LFE82
 377 0008 00000000 		.4byte	0
 378 000c 00000000 		.4byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc7DWBfp.s 			page 10


 379              		.section	.debug_line,"",%progbits
 380              	.Ldebug_line0:
 381 0000 71010000 		.section	.debug_str,"MS",%progbits,1
 381      02004E01 
 381      00000201 
 381      FB0E0D00 
 381      01010101 
 382              	.LASF6:
 383 0000 6C6F6E67 		.ascii	"long long int\000"
 383      206C6F6E 
 383      6720696E 
 383      7400
 384              	.LASF8:
 385 000e 756E7369 		.ascii	"unsigned int\000"
 385      676E6564 
 385      20696E74 
 385      00
 386              	.LASF19:
 387 001b 70447374 		.ascii	"pDst\000"
 387      00
 388              	.LASF9:
 389 0020 5F5F7569 		.ascii	"__uint32_t\000"
 389      6E743332 
 389      5F7400
 390              	.LASF20:
 391 002b 626C6F63 		.ascii	"blockSize\000"
 391      6B53697A 
 391      6500
 392              	.LASF5:
 393 0035 6C6F6E67 		.ascii	"long unsigned int\000"
 393      20756E73 
 393      69676E65 
 393      6420696E 
 393      7400
 394              	.LASF7:
 395 0047 6C6F6E67 		.ascii	"long long unsigned int\000"
 395      206C6F6E 
 395      6720756E 
 395      7369676E 
 395      65642069 
 396              	.LASF14:
 397 005e 666C6F61 		.ascii	"float\000"
 397      7400
 398              	.LASF16:
 399 0064 666C6F61 		.ascii	"float32_t\000"
 399      7433325F 
 399      7400
 400              	.LASF1:
 401 006e 756E7369 		.ascii	"unsigned char\000"
 401      676E6564 
 401      20636861 
 401      7200
 402              	.LASF22:
 403 007c 536F7572 		.ascii	"Source\\BasicMathFunctions\\arm_add_f32.c\000"
 403      63655C42 
 403      61736963 
 403      4D617468 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc7DWBfp.s 			page 11


 403      46756E63 
 404              	.LASF12:
 405 00a4 63686172 		.ascii	"char\000"
 405      00
 406              	.LASF24:
 407 00a9 61726D5F 		.ascii	"arm_add_f32\000"
 407      6164645F 
 407      66333200 
 408              	.LASF10:
 409 00b5 75696E74 		.ascii	"uint32_t\000"
 409      33325F74 
 409      00
 410              	.LASF4:
 411 00be 6C6F6E67 		.ascii	"long int\000"
 411      20696E74 
 411      00
 412              	.LASF13:
 413 00c7 646F7562 		.ascii	"double\000"
 413      6C6500
 414              	.LASF25:
 415 00ce 626C6B43 		.ascii	"blkCnt\000"
 415      6E7400
 416              	.LASF3:
 417 00d5 73686F72 		.ascii	"short unsigned int\000"
 417      7420756E 
 417      7369676E 
 417      65642069 
 417      6E7400
 418              	.LASF0:
 419 00e8 7369676E 		.ascii	"signed char\000"
 419      65642063 
 419      68617200 
 420              	.LASF15:
 421 00f4 6C6F6E67 		.ascii	"long double\000"
 421      20646F75 
 421      626C6500 
 422              	.LASF23:
 423 0100 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 423      73657273 
 423      5C666E65 
 423      7665735C 
 423      446F6375 
 424 012d 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 424      655F7370 
 424      6565645F 
 424      73656E73 
 424      6F722E63 
 425              	.LASF11:
 426 0146 73697A65 		.ascii	"sizetype\000"
 426      74797065 
 426      00
 427              	.LASF2:
 428 014f 73686F72 		.ascii	"short int\000"
 428      7420696E 
 428      7400
 429              	.LASF17:
 430 0159 70537263 		.ascii	"pSrcA\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\cc7DWBfp.s 			page 12


 430      4100
 431              	.LASF18:
 432 015f 70537263 		.ascii	"pSrcB\000"
 432      4200
 433              	.LASF21:
 434 0165 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 434      4320342E 
 434      392E3320 
 434      32303135 
 434      30333033 
 435 0198 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 435      20726576 
 435      6973696F 
 435      6E203232 
 435      31323230 
 436 01cb 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 436      30202D66 
 436      66756E63 
 436      74696F6E 
 436      2D736563 
 437              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
