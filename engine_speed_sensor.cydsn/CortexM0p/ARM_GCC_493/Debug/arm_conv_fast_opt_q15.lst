ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"arm_conv_fast_opt_q15.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.arm_conv_fast_opt_q15,"ax",%progbits
  18              		.align	2
  19              		.global	arm_conv_fast_opt_q15
  20              		.code	16
  21              		.thumb_func
  22              		.type	arm_conv_fast_opt_q15, %function
  23              	arm_conv_fast_opt_q15:
  24              	.LFB82:
  25              		.file 1 "Source\\FilteringFunctions\\arm_conv_fast_opt_q15.c"
   1:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** /* ----------------------------------------------------------------------
   2:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * Project:      CMSIS DSP Library
   3:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * Title:        arm_conv_fast_opt_q15.c
   4:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * Description:  Fast Q15 Convolution
   5:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
   6:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * $Date:        27. January 2017
   7:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * $Revision:    V.1.5.1
   8:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
   9:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * Target Processor: Cortex-M cores
  10:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * -------------------------------------------------------------------- */
  11:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** /*
  12:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
  14:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
  16:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * not use this file except in compliance with the License.
  18:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * You may obtain a copy of the License at
  19:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
  20:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
  22:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * See the License for the specific language governing permissions and
  26:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * limitations under the License.
  27:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  */
  28:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
  29:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #include "arm_math.h"
  30:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
  31:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** /**
  32:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @ingroup groupFilters
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 2


  33:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  */
  34:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
  35:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** /**
  36:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @addtogroup Conv
  37:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @{
  38:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  */
  39:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
  40:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** /**
  41:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
  42:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @param[in] *pSrcA points to the first input sequence.
  43:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @param[in] srcALen length of the first input sequence.
  44:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @param[in] *pSrcB points to the second input sequence.
  45:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @param[in] srcBLen length of the second input sequence.
  46:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @param[out] *pDst points to the location where the output result is written.  Length srcALen+src
  47:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @param[in]  *pScratch1 points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, s
  48:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @param[in]  *pScratch2 points to scratch buffer of size min(srcALen, srcBLen).
  49:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * @return none.
  50:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
  51:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * \par Restrictions
  52:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  *  If the silicon does not support unaligned memory access enable the macro UNALIGNED_SUPPORT_DISA
  53:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  *	In this case input, output, scratch1 and scratch2 buffers should be aligned by 32-bit
  54:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
  55:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * <b>Scaling and Overflow Behavior:</b>
  56:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
  57:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * \par
  58:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * This fast version uses a 32-bit accumulator with 2.30 format.
  59:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * The accumulator maintains full precision of the intermediate multiplication results
  60:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * but provides only a single guard bit. There is no saturation on intermediate additions.
  61:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * Thus, if the accumulator overflows it wraps around and distorts the result.
  62:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * The input signals should be scaled down to avoid intermediate overflows.
  63:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * Scale down the inputs by log2(min(srcALen, srcBLen)) (log2 is read as log to the base 2) times t
  64:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * as maximum of min(srcALen, srcBLen) number of additions are carried internally.
  65:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * The 2.30 accumulator is right shifted by 15 bits and then saturated to 1.15 format to yield the 
  66:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  *
  67:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * \par
  68:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  * See <code>arm_conv_q15()</code> for a slower implementation of this function which uses 64-bit a
  69:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****  */
  70:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
  71:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** void arm_conv_fast_opt_q15(
  72:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t * pSrcA,
  73:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   uint32_t srcALen,
  74:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t * pSrcB,
  75:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   uint32_t srcBLen,
  76:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t * pDst,
  77:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t * pScratch1,
  78:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t * pScratch2)
  79:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** {
  26              		.loc 1 79 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 CAB0     		sub	sp, sp, #296
  33              		.cfi_def_cfa_offset 304
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 3


  36 0006 F860     		str	r0, [r7, #12]
  37 0008 B960     		str	r1, [r7, #8]
  38 000a 7A60     		str	r2, [r7, #4]
  39 000c 3B60     		str	r3, [r7]
  80:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   q31_t acc0, acc1, acc2, acc3;                  /* Accumulators */
  81:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   q31_t x1, x2, x3;                              /* Temporary variables to hold state and coefficie
  82:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   q31_t y1, y2;                                  /* State variables */
  83:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t *pOut = pDst;                            /* output pointer */
  40              		.loc 1 83 0
  41 000e 9823     		mov	r3, #152
  42 0010 5B00     		lsl	r3, r3, #1
  43 0012 FB18     		add	r3, r7, r3
  44 0014 1B68     		ldr	r3, [r3]
  45 0016 BB61     		str	r3, [r7, #24]
  84:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t *pScr1 = pScratch1;                      /* Temporary pointer for scratch1 */
  46              		.loc 1 84 0
  47 0018 9A23     		mov	r3, #154
  48 001a 5B00     		lsl	r3, r3, #1
  49 001c FB18     		add	r3, r7, r3
  50 001e 1B68     		ldr	r3, [r3]
  51 0020 7B61     		str	r3, [r7, #20]
  85:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t *pScr2 = pScratch2;                      /* Temporary pointer for scratch1 */
  52              		.loc 1 85 0
  53 0022 9C23     		mov	r3, #156
  54 0024 5B00     		lsl	r3, r3, #1
  55 0026 FB18     		add	r3, r7, r3
  56 0028 1B68     		ldr	r3, [r3]
  57 002a 8622     		mov	r2, #134
  58 002c 5200     		lsl	r2, r2, #1
  59 002e BA18     		add	r2, r7, r2
  60 0030 1360     		str	r3, [r2]
  86:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t *pIn1;                                   /* inputA pointer */
  87:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t *pIn2;                                   /* inputB pointer */
  88:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t *px;                                     /* Intermediate inputA pointer  */
  89:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t *py;                                     /* Intermediate inputB pointer  */
  90:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   uint32_t j, k, blkCnt;                         /* loop counter */
  91:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   uint32_t tapCnt;                               /* loop count */
  92:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifdef UNALIGNED_SUPPORT_DISABLE
  93:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
  94:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   q15_t a, b;
  95:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
  96:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif	/*	#ifdef UNALIGNED_SUPPORT_DISABLE	*/
  97:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
  98:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
  99:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* srcB is always made to slide across srcA. */
 100:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
 101:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   if (srcALen >= srcBLen)
  61              		.loc 1 101 0
  62 0032 BA68     		ldr	r2, [r7, #8]
  63 0034 3B68     		ldr	r3, [r7]
  64 0036 9A42     		cmp	r2, r3
  65 0038 09D3     		bcc	.L2
 102:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 103:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Initialization of inputA pointer */
 104:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     pIn1 = pSrcA;
  66              		.loc 1 104 0
  67 003a FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 4


  68 003c 8422     		mov	r2, #132
  69 003e 5200     		lsl	r2, r2, #1
  70 0040 BA18     		add	r2, r7, r2
  71 0042 1360     		str	r3, [r2]
 105:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 106:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Initialization of inputB pointer */
 107:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     pIn2 = pSrcB;
  72              		.loc 1 107 0
  73 0044 7B68     		ldr	r3, [r7, #4]
  74 0046 7A1D     		add	r2, r7, #5
  75 0048 FF32     		add	r2, r2, #255
  76 004a 1360     		str	r3, [r2]
  77 004c 12E0     		b	.L3
  78              	.L2:
 108:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 109:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   else
 110:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 111:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Initialization of inputA pointer */
 112:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     pIn1 = pSrcB;
  79              		.loc 1 112 0
  80 004e 7B68     		ldr	r3, [r7, #4]
  81 0050 8422     		mov	r2, #132
  82 0052 5200     		lsl	r2, r2, #1
  83 0054 BA18     		add	r2, r7, r2
  84 0056 1360     		str	r3, [r2]
 113:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 114:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Initialization of inputB pointer */
 115:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     pIn2 = pSrcA;
  85              		.loc 1 115 0
  86 0058 FB68     		ldr	r3, [r7, #12]
  87 005a 7A1D     		add	r2, r7, #5
  88 005c FF32     		add	r2, r2, #255
  89 005e 1360     		str	r3, [r2]
 116:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 117:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 118:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     j = srcBLen;
  90              		.loc 1 118 0
  91 0060 3B68     		ldr	r3, [r7]
  92 0062 F022     		mov	r2, #240
  93 0064 BA18     		add	r2, r7, r2
  94 0066 1360     		str	r3, [r2]
 119:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     srcBLen = srcALen;
  95              		.loc 1 119 0
  96 0068 BB68     		ldr	r3, [r7, #8]
  97 006a 3B60     		str	r3, [r7]
 120:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     srcALen = j;
  98              		.loc 1 120 0
  99 006c F023     		mov	r3, #240
 100 006e FB18     		add	r3, r7, r3
 101 0070 1B68     		ldr	r3, [r3]
 102 0072 BB60     		str	r3, [r7, #8]
 103              	.L3:
 121:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 122:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 123:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Pointer to take end of scratch2 buffer */
 124:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   pScr2 = pScratch2 + srcBLen - 1;
 104              		.loc 1 124 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 5


 105 0074 3B68     		ldr	r3, [r7]
 106 0076 884A     		ldr	r2, .L63
 107 0078 9446     		mov	ip, r2
 108 007a 6344     		add	r3, r3, ip
 109 007c 5B00     		lsl	r3, r3, #1
 110 007e 9C22     		mov	r2, #156
 111 0080 5200     		lsl	r2, r2, #1
 112 0082 BA18     		add	r2, r7, r2
 113 0084 1268     		ldr	r2, [r2]
 114 0086 D318     		add	r3, r2, r3
 115 0088 8622     		mov	r2, #134
 116 008a 5200     		lsl	r2, r2, #1
 117 008c BA18     		add	r2, r7, r2
 118 008e 1360     		str	r3, [r2]
 125:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 126:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* points to smaller length sequence */
 127:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   px = pIn2;
 119              		.loc 1 127 0
 120 0090 7B1D     		add	r3, r7, #5
 121 0092 FF33     		add	r3, r3, #255
 122 0094 1B68     		ldr	r3, [r3]
 123 0096 7A1C     		add	r2, r7, #1
 124 0098 FF32     		add	r2, r2, #255
 125 009a 1360     		str	r3, [r2]
 128:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 129:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Apply loop unrolling and do 4 Copies simultaneously. */
 130:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   k = srcBLen >> 2u;
 126              		.loc 1 130 0
 127 009c 3B68     		ldr	r3, [r7]
 128 009e 9B08     		lsr	r3, r3, #2
 129 00a0 FC22     		mov	r2, #252
 130 00a2 BA18     		add	r2, r7, r2
 131 00a4 1360     		str	r3, [r2]
 131:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 132:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 133:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
 134:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 135:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Copy smaller length input sequence in reverse order into second scratch buffer */
 136:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   while (k > 0u)
 132              		.loc 1 136 0
 133 00a6 4EE0     		b	.L4
 134              	.L5:
 137:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 138:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* copy second buffer in reversal manner */
 139:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr2-- = *px++;
 135              		.loc 1 139 0
 136 00a8 8623     		mov	r3, #134
 137 00aa 5B00     		lsl	r3, r3, #1
 138 00ac FB18     		add	r3, r7, r3
 139 00ae 1B68     		ldr	r3, [r3]
 140 00b0 9A1E     		sub	r2, r3, #2
 141 00b2 8621     		mov	r1, #134
 142 00b4 4900     		lsl	r1, r1, #1
 143 00b6 7918     		add	r1, r7, r1
 144 00b8 0A60     		str	r2, [r1]
 145 00ba 7A1C     		add	r2, r7, #1
 146 00bc FF32     		add	r2, r2, #255
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 6


 147 00be 1268     		ldr	r2, [r2]
 148 00c0 911C     		add	r1, r2, #2
 149 00c2 781C     		add	r0, r7, #1
 150 00c4 FF30     		add	r0, r0, #255
 151 00c6 0160     		str	r1, [r0]
 152 00c8 1288     		ldrh	r2, [r2]
 153 00ca 1A80     		strh	r2, [r3]
 140:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr2-- = *px++;
 154              		.loc 1 140 0
 155 00cc 8623     		mov	r3, #134
 156 00ce 5B00     		lsl	r3, r3, #1
 157 00d0 FB18     		add	r3, r7, r3
 158 00d2 1B68     		ldr	r3, [r3]
 159 00d4 9A1E     		sub	r2, r3, #2
 160 00d6 8621     		mov	r1, #134
 161 00d8 4900     		lsl	r1, r1, #1
 162 00da 7918     		add	r1, r7, r1
 163 00dc 0A60     		str	r2, [r1]
 164 00de 7A1C     		add	r2, r7, #1
 165 00e0 FF32     		add	r2, r2, #255
 166 00e2 1268     		ldr	r2, [r2]
 167 00e4 911C     		add	r1, r2, #2
 168 00e6 781C     		add	r0, r7, #1
 169 00e8 FF30     		add	r0, r0, #255
 170 00ea 0160     		str	r1, [r0]
 171 00ec 1288     		ldrh	r2, [r2]
 172 00ee 1A80     		strh	r2, [r3]
 141:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr2-- = *px++;
 173              		.loc 1 141 0
 174 00f0 8623     		mov	r3, #134
 175 00f2 5B00     		lsl	r3, r3, #1
 176 00f4 FB18     		add	r3, r7, r3
 177 00f6 1B68     		ldr	r3, [r3]
 178 00f8 9A1E     		sub	r2, r3, #2
 179 00fa 8621     		mov	r1, #134
 180 00fc 4900     		lsl	r1, r1, #1
 181 00fe 7918     		add	r1, r7, r1
 182 0100 0A60     		str	r2, [r1]
 183 0102 7A1C     		add	r2, r7, #1
 184 0104 FF32     		add	r2, r2, #255
 185 0106 1268     		ldr	r2, [r2]
 186 0108 911C     		add	r1, r2, #2
 187 010a 781C     		add	r0, r7, #1
 188 010c FF30     		add	r0, r0, #255
 189 010e 0160     		str	r1, [r0]
 190 0110 1288     		ldrh	r2, [r2]
 191 0112 1A80     		strh	r2, [r3]
 142:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr2-- = *px++;
 192              		.loc 1 142 0
 193 0114 8623     		mov	r3, #134
 194 0116 5B00     		lsl	r3, r3, #1
 195 0118 FB18     		add	r3, r7, r3
 196 011a 1B68     		ldr	r3, [r3]
 197 011c 9A1E     		sub	r2, r3, #2
 198 011e 8621     		mov	r1, #134
 199 0120 4900     		lsl	r1, r1, #1
 200 0122 7918     		add	r1, r7, r1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 7


 201 0124 0A60     		str	r2, [r1]
 202 0126 7A1C     		add	r2, r7, #1
 203 0128 FF32     		add	r2, r2, #255
 204 012a 1268     		ldr	r2, [r2]
 205 012c 911C     		add	r1, r2, #2
 206 012e 781C     		add	r0, r7, #1
 207 0130 FF30     		add	r0, r0, #255
 208 0132 0160     		str	r1, [r0]
 209 0134 1288     		ldrh	r2, [r2]
 210 0136 1A80     		strh	r2, [r3]
 143:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 144:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Decrement the loop counter */
 145:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     k--;
 211              		.loc 1 145 0
 212 0138 FC23     		mov	r3, #252
 213 013a FB18     		add	r3, r7, r3
 214 013c 1B68     		ldr	r3, [r3]
 215 013e 013B     		sub	r3, r3, #1
 216 0140 FC22     		mov	r2, #252
 217 0142 BA18     		add	r2, r7, r2
 218 0144 1360     		str	r3, [r2]
 219              	.L4:
 136:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 220              		.loc 1 136 0
 221 0146 FC23     		mov	r3, #252
 222 0148 FB18     		add	r3, r7, r3
 223 014a 1B68     		ldr	r3, [r3]
 224 014c 002B     		cmp	r3, #0
 225 014e ABD1     		bne	.L5
 146:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 147:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 148:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 149:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****    ** No loop unrolling is used. */
 150:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   k = srcBLen % 0x4u;
 226              		.loc 1 150 0
 227 0150 3B68     		ldr	r3, [r7]
 228 0152 0322     		mov	r2, #3
 229 0154 1340     		and	r3, r2
 230 0156 FC22     		mov	r2, #252
 231 0158 BA18     		add	r2, r7, r2
 232 015a 1360     		str	r3, [r2]
 151:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 152:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   while (k > 0u)
 233              		.loc 1 152 0
 234 015c 18E0     		b	.L6
 235              	.L7:
 153:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 154:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* copy second buffer in reversal manner for remaining samples */
 155:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr2-- = *px++;
 236              		.loc 1 155 0
 237 015e 8623     		mov	r3, #134
 238 0160 5B00     		lsl	r3, r3, #1
 239 0162 FB18     		add	r3, r7, r3
 240 0164 1B68     		ldr	r3, [r3]
 241 0166 9A1E     		sub	r2, r3, #2
 242 0168 8621     		mov	r1, #134
 243 016a 4900     		lsl	r1, r1, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 8


 244 016c 7918     		add	r1, r7, r1
 245 016e 0A60     		str	r2, [r1]
 246 0170 7A1C     		add	r2, r7, #1
 247 0172 FF32     		add	r2, r2, #255
 248 0174 1268     		ldr	r2, [r2]
 249 0176 911C     		add	r1, r2, #2
 250 0178 781C     		add	r0, r7, #1
 251 017a FF30     		add	r0, r0, #255
 252 017c 0160     		str	r1, [r0]
 253 017e 1288     		ldrh	r2, [r2]
 254 0180 1A80     		strh	r2, [r3]
 156:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 157:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Decrement the loop counter */
 158:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     k--;
 255              		.loc 1 158 0
 256 0182 FC23     		mov	r3, #252
 257 0184 FB18     		add	r3, r7, r3
 258 0186 1B68     		ldr	r3, [r3]
 259 0188 013B     		sub	r3, r3, #1
 260 018a FC22     		mov	r2, #252
 261 018c BA18     		add	r2, r7, r2
 262 018e 1360     		str	r3, [r2]
 263              	.L6:
 152:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 264              		.loc 1 152 0
 265 0190 FC23     		mov	r3, #252
 266 0192 FB18     		add	r3, r7, r3
 267 0194 1B68     		ldr	r3, [r3]
 268 0196 002B     		cmp	r3, #0
 269 0198 E1D1     		bne	.L7
 159:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 160:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 161:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Initialze temporary scratch pointer */
 162:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   pScr1 = pScratch1;
 270              		.loc 1 162 0
 271 019a 9A23     		mov	r3, #154
 272 019c 5B00     		lsl	r3, r3, #1
 273 019e FB18     		add	r3, r7, r3
 274 01a0 1B68     		ldr	r3, [r3]
 275 01a2 7B61     		str	r3, [r7, #20]
 163:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 164:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Assuming scratch1 buffer is aligned by 32-bit */
 165:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Fill (srcBLen - 1u) zeros in scratch1 buffer */
 166:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   arm_fill_q15(0, pScr1, (srcBLen - 1u));
 276              		.loc 1 166 0
 277 01a4 7A69     		ldr	r2, [r7, #20]
 278 01a6 3B68     		ldr	r3, [r7]
 279 01a8 013B     		sub	r3, r3, #1
 280 01aa 0020     		mov	r0, #0
 281 01ac 111C     		mov	r1, r2
 282 01ae 1A1C     		mov	r2, r3
 283 01b0 FFF7FEFF 		bl	arm_fill_q15
 167:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 168:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Update temporary scratch pointer */
 169:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   pScr1 += (srcBLen - 1u);
 284              		.loc 1 169 0
 285 01b4 7A69     		ldr	r2, [r7, #20]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 9


 286 01b6 3B68     		ldr	r3, [r7]
 287 01b8 3749     		ldr	r1, .L63
 288 01ba 8C46     		mov	ip, r1
 289 01bc 6344     		add	r3, r3, ip
 290 01be 5B00     		lsl	r3, r3, #1
 291 01c0 D318     		add	r3, r2, r3
 292 01c2 7B61     		str	r3, [r7, #20]
 170:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 171:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Copy bigger length sequence(srcALen) samples in scratch1 buffer */
 172:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 173:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
 174:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 175:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Copy (srcALen) samples in scratch buffer */
 176:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   arm_copy_q15(pIn1, pScr1, srcALen);
 293              		.loc 1 176 0
 294 01c4 7A69     		ldr	r2, [r7, #20]
 295 01c6 8423     		mov	r3, #132
 296 01c8 5B00     		lsl	r3, r3, #1
 297 01ca FB18     		add	r3, r7, r3
 298 01cc 1968     		ldr	r1, [r3]
 299 01ce BB68     		ldr	r3, [r7, #8]
 300 01d0 081C     		mov	r0, r1
 301 01d2 111C     		mov	r1, r2
 302 01d4 1A1C     		mov	r2, r3
 303 01d6 FFF7FEFF 		bl	arm_copy_q15
 177:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 178:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Update pointers */
 179:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   pScr1 += srcALen;
 304              		.loc 1 179 0
 305 01da 7A69     		ldr	r2, [r7, #20]
 306 01dc BB68     		ldr	r3, [r7, #8]
 307 01de 5B00     		lsl	r3, r3, #1
 308 01e0 D318     		add	r3, r2, r3
 309 01e2 7B61     		str	r3, [r7, #20]
 180:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 181:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 182:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 183:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Apply loop unrolling and do 4 Copies simultaneously. */
 184:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   k = srcALen >> 2u;
 185:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 186:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 187:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
 188:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   while (k > 0u)
 189:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 190:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* copy second buffer in reversal manner */
 191:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = *pIn1++;
 192:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = *pIn1++;
 193:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = *pIn1++;
 194:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = *pIn1++;
 195:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 196:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Decrement the loop counter */
 197:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     k--;
 198:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 199:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 200:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 201:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****    ** No loop unrolling is used. */
 202:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   k = srcALen % 0x4u;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 10


 203:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 204:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   while (k > 0u)
 205:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 206:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* copy second buffer in reversal manner for remaining samples */
 207:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = *pIn1++;
 208:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 209:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Decrement the loop counter */
 210:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     k--;
 211:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 212:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 213:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif	/*	#ifndef UNALIGNED_SUPPORT_DISABLE	*/
 214:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 215:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 216:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
 217:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 218:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Fill (srcBLen - 1u) zeros at end of scratch buffer */
 219:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   arm_fill_q15(0, pScr1, (srcBLen - 1u));
 310              		.loc 1 219 0
 311 01e4 7A69     		ldr	r2, [r7, #20]
 312 01e6 3B68     		ldr	r3, [r7]
 313 01e8 013B     		sub	r3, r3, #1
 314 01ea 0020     		mov	r0, #0
 315 01ec 111C     		mov	r1, r2
 316 01ee 1A1C     		mov	r2, r3
 317 01f0 FFF7FEFF 		bl	arm_fill_q15
 220:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 221:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Update pointer */
 222:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   pScr1 += (srcBLen - 1u);
 318              		.loc 1 222 0
 319 01f4 7A69     		ldr	r2, [r7, #20]
 320 01f6 3B68     		ldr	r3, [r7]
 321 01f8 2749     		ldr	r1, .L63
 322 01fa 8C46     		mov	ip, r1
 323 01fc 6344     		add	r3, r3, ip
 324 01fe 5B00     		lsl	r3, r3, #1
 325 0200 D318     		add	r3, r2, r3
 326 0202 7B61     		str	r3, [r7, #20]
 223:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 224:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 225:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 226:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Apply loop unrolling and do 4 Copies simultaneously. */
 227:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   k = (srcBLen - 1u) >> 2u;
 228:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 229:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 230:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
 231:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   while (k > 0u)
 232:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 233:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* copy second buffer in reversal manner */
 234:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = 0;
 235:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = 0;
 236:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = 0;
 237:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = 0;
 238:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 239:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Decrement the loop counter */
 240:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     k--;
 241:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 242:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 11


 243:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 244:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****    ** No loop unrolling is used. */
 245:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   k = (srcBLen - 1u) % 0x4u;
 246:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 247:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   while (k > 0u)
 248:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 249:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* copy second buffer in reversal manner for remaining samples */
 250:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pScr1++ = 0;
 251:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 252:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Decrement the loop counter */
 253:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     k--;
 254:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 255:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 256:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif	/*	#ifndef UNALIGNED_SUPPORT_DISABLE	*/
 257:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 258:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Temporary pointer for scratch2 */
 259:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   py = pScratch2;
 327              		.loc 1 259 0
 328 0204 9C23     		mov	r3, #156
 329 0206 5B00     		lsl	r3, r3, #1
 330 0208 FB18     		add	r3, r7, r3
 331 020a 1B68     		ldr	r3, [r3]
 332 020c EC22     		mov	r2, #236
 333 020e BA18     		add	r2, r7, r2
 334 0210 1360     		str	r3, [r2]
 260:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 261:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 262:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Initialization of pIn2 pointer */
 263:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   pIn2 = py;
 335              		.loc 1 263 0
 336 0212 EC23     		mov	r3, #236
 337 0214 FB18     		add	r3, r7, r3
 338 0216 1B68     		ldr	r3, [r3]
 339 0218 7A1D     		add	r2, r7, #5
 340 021a FF32     		add	r2, r2, #255
 341 021c 1360     		str	r3, [r2]
 264:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 265:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* First part of the processing with loop unrolling process 4 data points at a time.
 266:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****    ** a second loop below process for the remaining 1 to 3 samples. */
 267:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 268:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Actual convolution process starts here */
 269:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   blkCnt = (srcALen + srcBLen - 1u) >> 2;
 342              		.loc 1 269 0
 343 021e BA68     		ldr	r2, [r7, #8]
 344 0220 3B68     		ldr	r3, [r7]
 345 0222 D318     		add	r3, r2, r3
 346 0224 013B     		sub	r3, r3, #1
 347 0226 9B08     		lsr	r3, r3, #2
 348 0228 F822     		mov	r2, #248
 349 022a BA18     		add	r2, r7, r2
 350 022c 1360     		str	r3, [r2]
 270:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 271:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   while (blkCnt > 0)
 351              		.loc 1 271 0
 352 022e 75E3     		b	.L8
 353              	.L45:
 272:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 12


 273:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Initialze temporary scratch pointer as scratch1 */
 274:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     pScr1 = pScratch1;
 354              		.loc 1 274 0
 355 0230 9A23     		mov	r3, #154
 356 0232 5B00     		lsl	r3, r3, #1
 357 0234 FB18     		add	r3, r7, r3
 358 0236 1B68     		ldr	r3, [r3]
 359 0238 7B61     		str	r3, [r7, #20]
 275:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 276:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Clear Accumlators */
 277:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     acc0 = 0;
 360              		.loc 1 277 0
 361 023a 0023     		mov	r3, #0
 362 023c 9222     		mov	r2, #146
 363 023e 5200     		lsl	r2, r2, #1
 364 0240 BA18     		add	r2, r7, r2
 365 0242 1360     		str	r3, [r2]
 278:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     acc1 = 0;
 366              		.loc 1 278 0
 367 0244 0023     		mov	r3, #0
 368 0246 9022     		mov	r2, #144
 369 0248 5200     		lsl	r2, r2, #1
 370 024a BA18     		add	r2, r7, r2
 371 024c 1360     		str	r3, [r2]
 279:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     acc2 = 0;
 372              		.loc 1 279 0
 373 024e 0023     		mov	r3, #0
 374 0250 8E22     		mov	r2, #142
 375 0252 5200     		lsl	r2, r2, #1
 376 0254 BA18     		add	r2, r7, r2
 377 0256 1360     		str	r3, [r2]
 280:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     acc3 = 0;
 378              		.loc 1 280 0
 379 0258 0023     		mov	r3, #0
 380 025a 8C22     		mov	r2, #140
 381 025c 5200     		lsl	r2, r2, #1
 382 025e BA18     		add	r2, r7, r2
 383 0260 1360     		str	r3, [r2]
 281:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 282:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Read two samples from scratch1 buffer */
 283:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     x1 = *__SIMD32(pScr1)++;
 384              		.loc 1 283 0
 385 0262 1423     		mov	r3, #20
 386 0264 FB18     		add	r3, r7, r3
 387 0266 1A68     		ldr	r2, [r3]
 388 0268 111D     		add	r1, r2, #4
 389 026a 1960     		str	r1, [r3]
 390 026c 1368     		ldr	r3, [r2]
 391 026e 8A22     		mov	r2, #138
 392 0270 5200     		lsl	r2, r2, #1
 393 0272 BA18     		add	r2, r7, r2
 394 0274 1360     		str	r3, [r2]
 284:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 285:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Read next two samples from scratch1 buffer */
 286:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     x2 = *__SIMD32(pScr1)++;
 395              		.loc 1 286 0
 396 0276 1423     		mov	r3, #20
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 13


 397 0278 FB18     		add	r3, r7, r3
 398 027a 1A68     		ldr	r2, [r3]
 399 027c 111D     		add	r1, r2, #4
 400 027e 1960     		str	r1, [r3]
 401 0280 1368     		ldr	r3, [r2]
 402 0282 8822     		mov	r2, #136
 403 0284 5200     		lsl	r2, r2, #1
 404 0286 BA18     		add	r2, r7, r2
 405 0288 1360     		str	r3, [r2]
 287:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 288:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     tapCnt = (srcBLen) >> 2u;
 406              		.loc 1 288 0
 407 028a 3B68     		ldr	r3, [r7]
 408 028c 9B08     		lsr	r3, r3, #2
 409 028e F422     		mov	r2, #244
 410 0290 BA18     		add	r2, r7, r2
 411 0292 1360     		str	r3, [r2]
 289:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 290:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     while (tapCnt > 0u)
 412              		.loc 1 290 0
 413 0294 E1E1     		b	.L9
 414              	.L64:
 415 0296 C046     		.align	2
 416              	.L63:
 417 0298 FFFFFF7F 		.word	2147483647
 418              	.L18:
 291:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     {
 292:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 293:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
 294:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 295:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* Read four samples from smaller buffer */
 296:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       y1 = _SIMD32_OFFSET(pIn2);
 419              		.loc 1 296 0
 420 029c 7B1D     		add	r3, r7, #5
 421 029e FF33     		add	r3, r3, #255
 422 02a0 1B68     		ldr	r3, [r3]
 423 02a2 1B68     		ldr	r3, [r3]
 424 02a4 E822     		mov	r2, #232
 425 02a6 BA18     		add	r2, r7, r2
 426 02a8 1360     		str	r3, [r2]
 297:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       y2 = _SIMD32_OFFSET(pIn2 + 2u);
 427              		.loc 1 297 0
 428 02aa 7B1D     		add	r3, r7, #5
 429 02ac FF33     		add	r3, r3, #255
 430 02ae 1B68     		ldr	r3, [r3]
 431 02b0 5B68     		ldr	r3, [r3, #4]
 432 02b2 E422     		mov	r2, #228
 433 02b4 BA18     		add	r2, r7, r2
 434 02b6 1360     		str	r3, [r2]
 298:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 299:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* multiply and accumlate */
 300:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc0 = __SMLAD(x1, y1, acc0);
 435              		.loc 1 300 0
 436 02b8 8A23     		mov	r3, #138
 437 02ba 5B00     		lsl	r3, r3, #1
 438 02bc FB18     		add	r3, r7, r3
 439 02be 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 14


 440 02c0 E823     		mov	r3, #232
 441 02c2 FB18     		add	r3, r7, r3
 442 02c4 1A68     		ldr	r2, [r3]
 443 02c6 9223     		mov	r3, #146
 444 02c8 5B00     		lsl	r3, r3, #1
 445 02ca FB18     		add	r3, r7, r3
 446 02cc 1B68     		ldr	r3, [r3]
 447 02ce DC20     		mov	r0, #220
 448 02d0 3818     		add	r0, r7, r0
 449 02d2 0160     		str	r1, [r0]
 450 02d4 D821     		mov	r1, #216
 451 02d6 7918     		add	r1, r7, r1
 452 02d8 0A60     		str	r2, [r1]
 453 02da D422     		mov	r2, #212
 454 02dc BA18     		add	r2, r7, r2
 455 02de 1360     		str	r3, [r2]
 456              	.LBB28:
 457              	.LBB29:
 458              		.file 2 ".\\Include/arm_math.h"
   1:.\Include/arm_math.h **** /* ----------------------------------------------------------------------
   2:.\Include/arm_math.h ****  * Project:      CMSIS DSP Library
   3:.\Include/arm_math.h ****  * Title:        arm_math.h
   4:.\Include/arm_math.h ****  * Description:  Public header file for CMSIS DSP Library
   5:.\Include/arm_math.h ****  *
   6:.\Include/arm_math.h ****  * $Date:        27. January 2017
   7:.\Include/arm_math.h ****  * $Revision:    V.1.5.1
   8:.\Include/arm_math.h ****  *
   9:.\Include/arm_math.h ****  * Target Processor: Cortex-M cores
  10:.\Include/arm_math.h ****  * -------------------------------------------------------------------- */
  11:.\Include/arm_math.h **** /*
  12:.\Include/arm_math.h ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:.\Include/arm_math.h ****  *
  14:.\Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  15:.\Include/arm_math.h ****  *
  16:.\Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.\Include/arm_math.h ****  * not use this file except in compliance with the License.
  18:.\Include/arm_math.h ****  * You may obtain a copy of the License at
  19:.\Include/arm_math.h ****  *
  20:.\Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  21:.\Include/arm_math.h ****  *
  22:.\Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  23:.\Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.\Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.\Include/arm_math.h ****  * See the License for the specific language governing permissions and
  26:.\Include/arm_math.h ****  * limitations under the License.
  27:.\Include/arm_math.h ****  */
  28:.\Include/arm_math.h **** 
  29:.\Include/arm_math.h **** /**
  30:.\Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  31:.\Include/arm_math.h ****    *
  32:.\Include/arm_math.h ****    * Introduction
  33:.\Include/arm_math.h ****    * ------------
  34:.\Include/arm_math.h ****    *
  35:.\Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  36:.\Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  37:.\Include/arm_math.h ****    *
  38:.\Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 15


  39:.\Include/arm_math.h ****    * - Basic math functions
  40:.\Include/arm_math.h ****    * - Fast math functions
  41:.\Include/arm_math.h ****    * - Complex math functions
  42:.\Include/arm_math.h ****    * - Filters
  43:.\Include/arm_math.h ****    * - Matrix functions
  44:.\Include/arm_math.h ****    * - Transforms
  45:.\Include/arm_math.h ****    * - Motor control functions
  46:.\Include/arm_math.h ****    * - Statistical functions
  47:.\Include/arm_math.h ****    * - Support functions
  48:.\Include/arm_math.h ****    * - Interpolation functions
  49:.\Include/arm_math.h ****    *
  50:.\Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  51:.\Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  52:.\Include/arm_math.h ****    *
  53:.\Include/arm_math.h ****    * Using the Library
  54:.\Include/arm_math.h ****    * ------------
  55:.\Include/arm_math.h ****    *
  56:.\Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  57:.\Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  58:.\Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  59:.\Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  60:.\Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  61:.\Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  62:.\Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  63:.\Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  64:.\Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  65:.\Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  66:.\Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  67:.\Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  68:.\Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  69:.\Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  70:.\Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  71:.\Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (ARMv8M Baseline, Little endian)
  72:.\Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (ARMv8M Mainline, Little endian)
  73:.\Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (ARMv8M Mainline, Little endian, Single Precision Floating Point U
  74:.\Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (ARMv8M Mainline, Little endian, DSP instructions)
  75:.\Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (ARMv8M Mainline, Little endian, DSP instructions, Single Precisi
  76:.\Include/arm_math.h ****    *
  77:.\Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  78:.\Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  79:.\Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  80:.\Include/arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  81:.\Include/arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  82:.\Include/arm_math.h ****    * For ARMv8M cores define pre processor MACRO ARM_MATH_ARMV8MBL or ARM_MATH_ARMV8MML.
  83:.\Include/arm_math.h ****    * Set Pre processor MACRO __DSP_PRESENT if ARMv8M Mainline core supports DSP instructions.
  84:.\Include/arm_math.h ****    * 
  85:.\Include/arm_math.h ****    *
  86:.\Include/arm_math.h ****    * Examples
  87:.\Include/arm_math.h ****    * --------
  88:.\Include/arm_math.h ****    *
  89:.\Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  90:.\Include/arm_math.h ****    *
  91:.\Include/arm_math.h ****    * Toolchain Support
  92:.\Include/arm_math.h ****    * ------------
  93:.\Include/arm_math.h ****    *
  94:.\Include/arm_math.h ****    * The library has been developed and tested with MDK-ARM version 5.14.0.0
  95:.\Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 16


  96:.\Include/arm_math.h ****    *
  97:.\Include/arm_math.h ****    * Building the Library
  98:.\Include/arm_math.h ****    * ------------
  99:.\Include/arm_math.h ****    *
 100:.\Include/arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 101:.\Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
 102:.\Include/arm_math.h ****    *
 103:.\Include/arm_math.h ****    *
 104:.\Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 105:.\Include/arm_math.h ****    *
 106:.\Include/arm_math.h ****    * Pre-processor Macros
 107:.\Include/arm_math.h ****    * ------------
 108:.\Include/arm_math.h ****    *
 109:.\Include/arm_math.h ****    * Each library project have differant pre-processor macros.
 110:.\Include/arm_math.h ****    *
 111:.\Include/arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 112:.\Include/arm_math.h ****    *
 113:.\Include/arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 114:.\Include/arm_math.h ****    *
 115:.\Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 116:.\Include/arm_math.h ****    *
 117:.\Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 118:.\Include/arm_math.h ****    *
 119:.\Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 120:.\Include/arm_math.h ****    *
 121:.\Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 122:.\Include/arm_math.h ****    *
 123:.\Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 124:.\Include/arm_math.h ****    *
 125:.\Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 126:.\Include/arm_math.h ****    *
 127:.\Include/arm_math.h ****    * - ARM_MATH_CMx:
 128:.\Include/arm_math.h ****    *
 129:.\Include/arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 130:.\Include/arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 131:.\Include/arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 132:.\Include/arm_math.h ****    *
 133:.\Include/arm_math.h ****    * - ARM_MATH_ARMV8MxL:
 134:.\Include/arm_math.h ****    *
 135:.\Include/arm_math.h ****    * Define macro ARM_MATH_ARMV8MBL for building the library on ARMv8M Baseline target, ARM_MATH_AR
 136:.\Include/arm_math.h ****    * on ARMv8M Mainline target.
 137:.\Include/arm_math.h ****    *
 138:.\Include/arm_math.h ****    * - __FPU_PRESENT:
 139:.\Include/arm_math.h ****    *
 140:.\Include/arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 141:.\Include/arm_math.h ****    *
 142:.\Include/arm_math.h ****    * - __DSP_PRESENT:
 143:.\Include/arm_math.h ****    *
 144:.\Include/arm_math.h ****    * Initialize macro __DSP_PRESENT = 1 when ARMv8M Mainline core supports DSP instructions.
 145:.\Include/arm_math.h ****    *
 146:.\Include/arm_math.h ****    * <hr>
 147:.\Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 148:.\Include/arm_math.h ****    * -----------------------------
 149:.\Include/arm_math.h ****    *
 150:.\Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 151:.\Include/arm_math.h ****    * |File/Folder                   |Content                                                       
 152:.\Include/arm_math.h ****    * |------------------------------|--------------------------------------------------------------
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 17


 153:.\Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 154:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 155:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 156:.\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 157:.\Include/arm_math.h ****    *
 158:.\Include/arm_math.h ****    * <hr>
 159:.\Include/arm_math.h ****    * Revision History of CMSIS-DSP
 160:.\Include/arm_math.h ****    * ------------
 161:.\Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 162:.\Include/arm_math.h ****    *
 163:.\Include/arm_math.h ****    * Copyright Notice
 164:.\Include/arm_math.h ****    * ------------
 165:.\Include/arm_math.h ****    *
 166:.\Include/arm_math.h ****    * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
 167:.\Include/arm_math.h ****    */
 168:.\Include/arm_math.h **** 
 169:.\Include/arm_math.h **** 
 170:.\Include/arm_math.h **** /**
 171:.\Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 172:.\Include/arm_math.h ****  */
 173:.\Include/arm_math.h **** 
 174:.\Include/arm_math.h **** /**
 175:.\Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 176:.\Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 177:.\Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 178:.\Include/arm_math.h ****  * operate on individual values and not arrays.
 179:.\Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 180:.\Include/arm_math.h ****  *
 181:.\Include/arm_math.h ****  */
 182:.\Include/arm_math.h **** 
 183:.\Include/arm_math.h **** /**
 184:.\Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 185:.\Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 186:.\Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 187:.\Include/arm_math.h ****  * (real, imag, real, imag, ...).
 188:.\Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 189:.\Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 190:.\Include/arm_math.h ****  * real values.
 191:.\Include/arm_math.h ****  */
 192:.\Include/arm_math.h **** 
 193:.\Include/arm_math.h **** /**
 194:.\Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 195:.\Include/arm_math.h ****  */
 196:.\Include/arm_math.h **** 
 197:.\Include/arm_math.h **** /**
 198:.\Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 199:.\Include/arm_math.h ****  *
 200:.\Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 201:.\Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 202:.\Include/arm_math.h ****  * the type
 203:.\Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 204:.\Include/arm_math.h ****  * below:
 205:.\Include/arm_math.h ****  * <pre>
 206:.\Include/arm_math.h ****  *     typedef struct
 207:.\Include/arm_math.h ****  *     {
 208:.\Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 209:.\Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 18


 210:.\Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 211:.\Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 212:.\Include/arm_math.h ****  * </pre>
 213:.\Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 214:.\Include/arm_math.h ****  *
 215:.\Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 216:.\Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 217:.\Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 218:.\Include/arm_math.h ****  * matrix element (i, j) is stored at:
 219:.\Include/arm_math.h ****  * <pre>
 220:.\Include/arm_math.h ****  *     pData[i*numCols + j]
 221:.\Include/arm_math.h ****  * </pre>
 222:.\Include/arm_math.h ****  *
 223:.\Include/arm_math.h ****  * \par Init Functions
 224:.\Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 225:.\Include/arm_math.h ****  * data structure.
 226:.\Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 227:.\Include/arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 228:.\Include/arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 229:.\Include/arm_math.h ****  *
 230:.\Include/arm_math.h ****  * \par
 231:.\Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 232:.\Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 233:.\Include/arm_math.h ****  * To place the instance structure in a const data
 234:.\Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 235:.\Include/arm_math.h ****  * <pre>
 236:.\Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 237:.\Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 238:.\Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 239:.\Include/arm_math.h ****  * </pre>
 240:.\Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 241:.\Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 242:.\Include/arm_math.h ****  * data array.
 243:.\Include/arm_math.h ****  *
 244:.\Include/arm_math.h ****  * \par Size Checking
 245:.\Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 246:.\Include/arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 247:.\Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 248:.\Include/arm_math.h ****  * columns.  If the size check fails the functions return:
 249:.\Include/arm_math.h ****  * <pre>
 250:.\Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 251:.\Include/arm_math.h ****  * </pre>
 252:.\Include/arm_math.h ****  * Otherwise the functions return
 253:.\Include/arm_math.h ****  * <pre>
 254:.\Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 255:.\Include/arm_math.h ****  * </pre>
 256:.\Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 257:.\Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 258:.\Include/arm_math.h ****  * <pre>
 259:.\Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 260:.\Include/arm_math.h ****  * </pre>
 261:.\Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 262:.\Include/arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 263:.\Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 264:.\Include/arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
 265:.\Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 266:.\Include/arm_math.h ****  */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 19


 267:.\Include/arm_math.h **** 
 268:.\Include/arm_math.h **** /**
 269:.\Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 270:.\Include/arm_math.h ****  */
 271:.\Include/arm_math.h **** 
 272:.\Include/arm_math.h **** /**
 273:.\Include/arm_math.h ****  * @defgroup groupController Controller Functions
 274:.\Include/arm_math.h ****  */
 275:.\Include/arm_math.h **** 
 276:.\Include/arm_math.h **** /**
 277:.\Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 278:.\Include/arm_math.h ****  */
 279:.\Include/arm_math.h **** /**
 280:.\Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 281:.\Include/arm_math.h ****  */
 282:.\Include/arm_math.h **** 
 283:.\Include/arm_math.h **** /**
 284:.\Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 285:.\Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 286:.\Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 287:.\Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 288:.\Include/arm_math.h ****  */
 289:.\Include/arm_math.h **** 
 290:.\Include/arm_math.h **** /**
 291:.\Include/arm_math.h ****  * @defgroup groupExamples Examples
 292:.\Include/arm_math.h ****  */
 293:.\Include/arm_math.h **** #ifndef _ARM_MATH_H
 294:.\Include/arm_math.h **** #define _ARM_MATH_H
 295:.\Include/arm_math.h **** 
 296:.\Include/arm_math.h **** /* ignore some GCC warnings */
 297:.\Include/arm_math.h **** #if defined ( __GNUC__ )
 298:.\Include/arm_math.h **** #pragma GCC diagnostic push
 299:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 300:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 301:.\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 302:.\Include/arm_math.h **** #endif
 303:.\Include/arm_math.h **** 
 304:.\Include/arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 305:.\Include/arm_math.h **** 
 306:.\Include/arm_math.h **** #if defined(ARM_MATH_CM7)
 307:.\Include/arm_math.h ****   #include "core_cm7.h"
 308:.\Include/arm_math.h ****   #define ARM_MATH_DSP
 309:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM4)
 310:.\Include/arm_math.h ****   #include "core_cm4.h"
 311:.\Include/arm_math.h ****   #define ARM_MATH_DSP
 312:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM3)
 313:.\Include/arm_math.h ****   #include "core_cm3.h"
 314:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM0)
 315:.\Include/arm_math.h ****   #include "core_cm0.h"
 316:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 317:.\Include/arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
 318:.\Include/arm_math.h ****   #include "core_cm0plus.h"
 319:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 320:.\Include/arm_math.h **** #elif defined (ARM_MATH_ARMV8MBL)
 321:.\Include/arm_math.h ****   #include "core_armv8mbl.h"
 322:.\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 323:.\Include/arm_math.h **** #elif defined (ARM_MATH_ARMV8MML)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 20


 324:.\Include/arm_math.h ****   #include "core_armv8mml.h"
 325:.\Include/arm_math.h ****   #if (defined (__DSP_PRESENT) && (__DSP_PRESENT == 1))
 326:.\Include/arm_math.h ****     #define ARM_MATH_DSP
 327:.\Include/arm_math.h ****   #endif
 328:.\Include/arm_math.h **** #else
 329:.\Include/arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 330:.\Include/arm_math.h **** #endif
 331:.\Include/arm_math.h **** 
 332:.\Include/arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 333:.\Include/arm_math.h **** #include "string.h"
 334:.\Include/arm_math.h **** #include "math.h"
 335:.\Include/arm_math.h **** #ifdef   __cplusplus
 336:.\Include/arm_math.h **** extern "C"
 337:.\Include/arm_math.h **** {
 338:.\Include/arm_math.h **** #endif
 339:.\Include/arm_math.h **** 
 340:.\Include/arm_math.h **** 
 341:.\Include/arm_math.h ****   /**
 342:.\Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:.\Include/arm_math.h ****    */
 344:.\Include/arm_math.h **** 
 345:.\Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:.\Include/arm_math.h **** #define DELTA_Q15          0x5
 347:.\Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:.\Include/arm_math.h **** #ifndef PI
 349:.\Include/arm_math.h ****   #define PI               3.14159265358979f
 350:.\Include/arm_math.h **** #endif
 351:.\Include/arm_math.h **** 
 352:.\Include/arm_math.h ****   /**
 353:.\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:.\Include/arm_math.h ****    */
 355:.\Include/arm_math.h **** 
 356:.\Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:.\Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:.\Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:.\Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:.\Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:.\Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:.\Include/arm_math.h **** 
 363:.\Include/arm_math.h ****   /**
 364:.\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:.\Include/arm_math.h ****    */
 366:.\Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:.\Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:.\Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:.\Include/arm_math.h **** 
 370:.\Include/arm_math.h ****   /**
 371:.\Include/arm_math.h ****    * @brief Macro for Unaligned Support
 372:.\Include/arm_math.h ****    */
 373:.\Include/arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 374:.\Include/arm_math.h ****     #define ALIGN4
 375:.\Include/arm_math.h **** #else
 376:.\Include/arm_math.h ****   #if defined  (__GNUC__)
 377:.\Include/arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 378:.\Include/arm_math.h ****   #else
 379:.\Include/arm_math.h ****     #define ALIGN4 __align(4)
 380:.\Include/arm_math.h ****   #endif
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 21


 381:.\Include/arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 382:.\Include/arm_math.h **** 
 383:.\Include/arm_math.h ****   /**
 384:.\Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 385:.\Include/arm_math.h ****    */
 386:.\Include/arm_math.h **** 
 387:.\Include/arm_math.h ****   typedef enum
 388:.\Include/arm_math.h ****   {
 389:.\Include/arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 390:.\Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 391:.\Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 392:.\Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 393:.\Include/arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 394:.\Include/arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 395:.\Include/arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 396:.\Include/arm_math.h ****   } arm_status;
 397:.\Include/arm_math.h **** 
 398:.\Include/arm_math.h ****   /**
 399:.\Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 400:.\Include/arm_math.h ****    */
 401:.\Include/arm_math.h ****   typedef int8_t q7_t;
 402:.\Include/arm_math.h **** 
 403:.\Include/arm_math.h ****   /**
 404:.\Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 405:.\Include/arm_math.h ****    */
 406:.\Include/arm_math.h ****   typedef int16_t q15_t;
 407:.\Include/arm_math.h **** 
 408:.\Include/arm_math.h ****   /**
 409:.\Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 410:.\Include/arm_math.h ****    */
 411:.\Include/arm_math.h ****   typedef int32_t q31_t;
 412:.\Include/arm_math.h **** 
 413:.\Include/arm_math.h ****   /**
 414:.\Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 415:.\Include/arm_math.h ****    */
 416:.\Include/arm_math.h ****   typedef int64_t q63_t;
 417:.\Include/arm_math.h **** 
 418:.\Include/arm_math.h ****   /**
 419:.\Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 420:.\Include/arm_math.h ****    */
 421:.\Include/arm_math.h ****   typedef float float32_t;
 422:.\Include/arm_math.h **** 
 423:.\Include/arm_math.h ****   /**
 424:.\Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 425:.\Include/arm_math.h ****    */
 426:.\Include/arm_math.h ****   typedef double float64_t;
 427:.\Include/arm_math.h **** 
 428:.\Include/arm_math.h ****   /**
 429:.\Include/arm_math.h ****    * @brief definition to read/write two 16 bit values.
 430:.\Include/arm_math.h ****    */
 431:.\Include/arm_math.h **** #if   defined ( __CC_ARM )
 432:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 433:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 434:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 435:.\Include/arm_math.h **** 
 436:.\Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 437:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 22


 438:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 439:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 440:.\Include/arm_math.h **** 
 441:.\Include/arm_math.h **** #elif defined ( __GNUC__ )
 442:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 443:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 444:.\Include/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 445:.\Include/arm_math.h **** 
 446:.\Include/arm_math.h **** #elif defined ( __ICCARM__ )
 447:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 448:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 449:.\Include/arm_math.h ****   #define CMSIS_INLINE
 450:.\Include/arm_math.h **** 
 451:.\Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 452:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 453:.\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 454:.\Include/arm_math.h ****   #define CMSIS_INLINE
 455:.\Include/arm_math.h **** 
 456:.\Include/arm_math.h **** #elif defined ( __CSMC__ )
 457:.\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 458:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 459:.\Include/arm_math.h ****   #define CMSIS_INLINE
 460:.\Include/arm_math.h **** 
 461:.\Include/arm_math.h **** #elif defined ( __TASKING__ )
 462:.\Include/arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 463:.\Include/arm_math.h ****   #define CMSIS_UNUSED
 464:.\Include/arm_math.h ****   #define CMSIS_INLINE
 465:.\Include/arm_math.h **** 
 466:.\Include/arm_math.h **** #else
 467:.\Include/arm_math.h ****   #error Unknown compiler
 468:.\Include/arm_math.h **** #endif
 469:.\Include/arm_math.h **** 
 470:.\Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 471:.\Include/arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 472:.\Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 473:.\Include/arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 474:.\Include/arm_math.h **** 
 475:.\Include/arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 476:.\Include/arm_math.h **** #if !defined (ARM_MATH_DSP)
 477:.\Include/arm_math.h ****   /**
 478:.\Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 479:.\Include/arm_math.h ****    */
 480:.\Include/arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 481:.\Include/arm_math.h ****                                     (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 482:.\Include/arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 483:.\Include/arm_math.h ****                                     (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 484:.\Include/arm_math.h **** 
 485:.\Include/arm_math.h **** /* #endif // defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 486:.\Include/arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
 487:.\Include/arm_math.h **** 
 488:.\Include/arm_math.h ****    /**
 489:.\Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
 490:.\Include/arm_math.h ****    */
 491:.\Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 492:.\Include/arm_math.h **** 
 493:.\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 494:.\Include/arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 23


 495:.\Include/arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 496:.\Include/arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 497:.\Include/arm_math.h **** #else
 498:.\Include/arm_math.h **** 
 499:.\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 500:.\Include/arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 501:.\Include/arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 502:.\Include/arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 503:.\Include/arm_math.h **** 
 504:.\Include/arm_math.h **** #endif
 505:.\Include/arm_math.h **** 
 506:.\Include/arm_math.h **** 
 507:.\Include/arm_math.h ****   /**
 508:.\Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 509:.\Include/arm_math.h ****    */
 510:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t clip_q63_to_q31(
 511:.\Include/arm_math.h ****   q63_t x)
 512:.\Include/arm_math.h ****   {
 513:.\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 514:.\Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 515:.\Include/arm_math.h ****   }
 516:.\Include/arm_math.h **** 
 517:.\Include/arm_math.h ****   /**
 518:.\Include/arm_math.h ****    * @brief Clips Q63 to Q15 values.
 519:.\Include/arm_math.h ****    */
 520:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q63_to_q15(
 521:.\Include/arm_math.h ****   q63_t x)
 522:.\Include/arm_math.h ****   {
 523:.\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 524:.\Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 525:.\Include/arm_math.h ****   }
 526:.\Include/arm_math.h **** 
 527:.\Include/arm_math.h ****   /**
 528:.\Include/arm_math.h ****    * @brief Clips Q31 to Q7 values.
 529:.\Include/arm_math.h ****    */
 530:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q7_t clip_q31_to_q7(
 531:.\Include/arm_math.h ****   q31_t x)
 532:.\Include/arm_math.h ****   {
 533:.\Include/arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 534:.\Include/arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 535:.\Include/arm_math.h ****   }
 536:.\Include/arm_math.h **** 
 537:.\Include/arm_math.h ****   /**
 538:.\Include/arm_math.h ****    * @brief Clips Q31 to Q15 values.
 539:.\Include/arm_math.h ****    */
 540:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q31_to_q15(
 541:.\Include/arm_math.h ****   q31_t x)
 542:.\Include/arm_math.h ****   {
 543:.\Include/arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 544:.\Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 545:.\Include/arm_math.h ****   }
 546:.\Include/arm_math.h **** 
 547:.\Include/arm_math.h ****   /**
 548:.\Include/arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 549:.\Include/arm_math.h ****    */
 550:.\Include/arm_math.h **** 
 551:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q63_t mult32x64(
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 24


 552:.\Include/arm_math.h ****   q63_t x,
 553:.\Include/arm_math.h ****   q31_t y)
 554:.\Include/arm_math.h ****   {
 555:.\Include/arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 556:.\Include/arm_math.h ****             (((q63_t) (x >> 32) * y)));
 557:.\Include/arm_math.h ****   }
 558:.\Include/arm_math.h **** 
 559:.\Include/arm_math.h **** /*
 560:.\Include/arm_math.h ****   #if defined (ARM_MATH_CM0_FAMILY) && defined ( __CC_ARM   )
 561:.\Include/arm_math.h ****   #define __CLZ __clz
 562:.\Include/arm_math.h ****   #endif
 563:.\Include/arm_math.h ****  */
 564:.\Include/arm_math.h **** /* note: function can be removed when all toolchain support __CLZ for Cortex-M0 */
 565:.\Include/arm_math.h **** #if defined (ARM_MATH_CM0_FAMILY) && ((defined (__ICCARM__))  )
 566:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 567:.\Include/arm_math.h ****   q31_t data);
 568:.\Include/arm_math.h **** 
 569:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __CLZ(
 570:.\Include/arm_math.h ****   q31_t data)
 571:.\Include/arm_math.h ****   {
 572:.\Include/arm_math.h ****     uint32_t count = 0;
 573:.\Include/arm_math.h ****     uint32_t mask = 0x80000000;
 574:.\Include/arm_math.h **** 
 575:.\Include/arm_math.h ****     while ((data & mask) == 0)
 576:.\Include/arm_math.h ****     {
 577:.\Include/arm_math.h ****       count += 1u;
 578:.\Include/arm_math.h ****       mask = mask >> 1u;
 579:.\Include/arm_math.h ****     }
 580:.\Include/arm_math.h **** 
 581:.\Include/arm_math.h ****     return (count);
 582:.\Include/arm_math.h ****   }
 583:.\Include/arm_math.h **** #endif
 584:.\Include/arm_math.h **** 
 585:.\Include/arm_math.h ****   /**
 586:.\Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 587:.\Include/arm_math.h ****    */
 588:.\Include/arm_math.h **** 
 589:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q31(
 590:.\Include/arm_math.h ****   q31_t in,
 591:.\Include/arm_math.h ****   q31_t * dst,
 592:.\Include/arm_math.h ****   q31_t * pRecipTable)
 593:.\Include/arm_math.h ****   {
 594:.\Include/arm_math.h ****     q31_t out;
 595:.\Include/arm_math.h ****     uint32_t tempVal;
 596:.\Include/arm_math.h ****     uint32_t index, i;
 597:.\Include/arm_math.h ****     uint32_t signBits;
 598:.\Include/arm_math.h **** 
 599:.\Include/arm_math.h ****     if (in > 0)
 600:.\Include/arm_math.h ****     {
 601:.\Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 602:.\Include/arm_math.h ****     }
 603:.\Include/arm_math.h ****     else
 604:.\Include/arm_math.h ****     {
 605:.\Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 606:.\Include/arm_math.h ****     }
 607:.\Include/arm_math.h **** 
 608:.\Include/arm_math.h ****     /* Convert input sample to 1.31 format */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 25


 609:.\Include/arm_math.h ****     in = (in << signBits);
 610:.\Include/arm_math.h **** 
 611:.\Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 612:.\Include/arm_math.h ****     index = (uint32_t)(in >> 24);
 613:.\Include/arm_math.h ****     index = (index & INDEX_MASK);
 614:.\Include/arm_math.h **** 
 615:.\Include/arm_math.h ****     /* 1.31 with exp 1 */
 616:.\Include/arm_math.h ****     out = pRecipTable[index];
 617:.\Include/arm_math.h **** 
 618:.\Include/arm_math.h ****     /* calculation of reciprocal value */
 619:.\Include/arm_math.h ****     /* running approximation for two iterations */
 620:.\Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 621:.\Include/arm_math.h ****     {
 622:.\Include/arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 623:.\Include/arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 624:.\Include/arm_math.h ****       /*      1.31 with exp 1 */
 625:.\Include/arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 626:.\Include/arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 627:.\Include/arm_math.h ****     }
 628:.\Include/arm_math.h **** 
 629:.\Include/arm_math.h ****     /* write output */
 630:.\Include/arm_math.h ****     *dst = out;
 631:.\Include/arm_math.h **** 
 632:.\Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 633:.\Include/arm_math.h ****     return (signBits + 1u);
 634:.\Include/arm_math.h ****   }
 635:.\Include/arm_math.h **** 
 636:.\Include/arm_math.h **** 
 637:.\Include/arm_math.h ****   /**
 638:.\Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
 639:.\Include/arm_math.h ****    */
 640:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q15(
 641:.\Include/arm_math.h ****   q15_t in,
 642:.\Include/arm_math.h ****   q15_t * dst,
 643:.\Include/arm_math.h ****   q15_t * pRecipTable)
 644:.\Include/arm_math.h ****   {
 645:.\Include/arm_math.h ****     q15_t out = 0;
 646:.\Include/arm_math.h ****     uint32_t tempVal = 0;
 647:.\Include/arm_math.h ****     uint32_t index = 0, i = 0;
 648:.\Include/arm_math.h ****     uint32_t signBits = 0;
 649:.\Include/arm_math.h **** 
 650:.\Include/arm_math.h ****     if (in > 0)
 651:.\Include/arm_math.h ****     {
 652:.\Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
 653:.\Include/arm_math.h ****     }
 654:.\Include/arm_math.h ****     else
 655:.\Include/arm_math.h ****     {
 656:.\Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
 657:.\Include/arm_math.h ****     }
 658:.\Include/arm_math.h **** 
 659:.\Include/arm_math.h ****     /* Convert input sample to 1.15 format */
 660:.\Include/arm_math.h ****     in = (in << signBits);
 661:.\Include/arm_math.h **** 
 662:.\Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 663:.\Include/arm_math.h ****     index = (uint32_t)(in >>  8);
 664:.\Include/arm_math.h ****     index = (index & INDEX_MASK);
 665:.\Include/arm_math.h **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 26


 666:.\Include/arm_math.h ****     /*      1.15 with exp 1  */
 667:.\Include/arm_math.h ****     out = pRecipTable[index];
 668:.\Include/arm_math.h **** 
 669:.\Include/arm_math.h ****     /* calculation of reciprocal value */
 670:.\Include/arm_math.h ****     /* running approximation for two iterations */
 671:.\Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 672:.\Include/arm_math.h ****     {
 673:.\Include/arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
 674:.\Include/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 675:.\Include/arm_math.h ****       /*      1.15 with exp 1 */
 676:.\Include/arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
 677:.\Include/arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
 678:.\Include/arm_math.h ****     }
 679:.\Include/arm_math.h **** 
 680:.\Include/arm_math.h ****     /* write output */
 681:.\Include/arm_math.h ****     *dst = out;
 682:.\Include/arm_math.h **** 
 683:.\Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 684:.\Include/arm_math.h ****     return (signBits + 1);
 685:.\Include/arm_math.h ****   }
 686:.\Include/arm_math.h **** 
 687:.\Include/arm_math.h **** 
 688:.\Include/arm_math.h ****   /*
 689:.\Include/arm_math.h ****    * @brief C custom defined intrinisic function for only M0 processors
 690:.\Include/arm_math.h ****    */
 691:.\Include/arm_math.h **** #if defined(ARM_MATH_CM0_FAMILY)
 692:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t __SSAT(
 693:.\Include/arm_math.h ****   q31_t x,
 694:.\Include/arm_math.h ****   uint32_t y)
 695:.\Include/arm_math.h ****   {
 696:.\Include/arm_math.h ****     int32_t posMax, negMin;
 697:.\Include/arm_math.h ****     uint32_t i;
 698:.\Include/arm_math.h **** 
 699:.\Include/arm_math.h ****     posMax = 1;
 700:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 701:.\Include/arm_math.h ****     {
 702:.\Include/arm_math.h ****       posMax = posMax * 2;
 703:.\Include/arm_math.h ****     }
 704:.\Include/arm_math.h **** 
 705:.\Include/arm_math.h ****     if (x > 0)
 706:.\Include/arm_math.h ****     {
 707:.\Include/arm_math.h ****       posMax = (posMax - 1);
 708:.\Include/arm_math.h **** 
 709:.\Include/arm_math.h ****       if (x > posMax)
 710:.\Include/arm_math.h ****       {
 711:.\Include/arm_math.h ****         x = posMax;
 712:.\Include/arm_math.h ****       }
 713:.\Include/arm_math.h ****     }
 714:.\Include/arm_math.h ****     else
 715:.\Include/arm_math.h ****     {
 716:.\Include/arm_math.h ****       negMin = -posMax;
 717:.\Include/arm_math.h **** 
 718:.\Include/arm_math.h ****       if (x < negMin)
 719:.\Include/arm_math.h ****       {
 720:.\Include/arm_math.h ****         x = negMin;
 721:.\Include/arm_math.h ****       }
 722:.\Include/arm_math.h ****     }
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 27


 723:.\Include/arm_math.h ****     return (x);
 724:.\Include/arm_math.h ****   }
 725:.\Include/arm_math.h **** #endif /* end of ARM_MATH_CM0_FAMILY */
 726:.\Include/arm_math.h **** 
 727:.\Include/arm_math.h **** 
 728:.\Include/arm_math.h ****   /*
 729:.\Include/arm_math.h ****    * @brief C custom defined intrinsic function for M3 and M0 processors
 730:.\Include/arm_math.h ****    */
 731:.\Include/arm_math.h **** /* #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
 732:.\Include/arm_math.h **** #if !defined (ARM_MATH_DSP)
 733:.\Include/arm_math.h **** 
 734:.\Include/arm_math.h ****   /*
 735:.\Include/arm_math.h ****    * @brief C custom defined QADD8 for M3 and M0 processors
 736:.\Include/arm_math.h ****    */
 737:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD8(
 738:.\Include/arm_math.h ****   uint32_t x,
 739:.\Include/arm_math.h ****   uint32_t y)
 740:.\Include/arm_math.h ****   {
 741:.\Include/arm_math.h ****     q31_t r, s, t, u;
 742:.\Include/arm_math.h **** 
 743:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) + (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 744:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) + (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 745:.\Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) + (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 746:.\Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) + (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 747:.\Include/arm_math.h **** 
 748:.\Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 749:.\Include/arm_math.h ****   }
 750:.\Include/arm_math.h **** 
 751:.\Include/arm_math.h **** 
 752:.\Include/arm_math.h ****   /*
 753:.\Include/arm_math.h ****    * @brief C custom defined QSUB8 for M3 and M0 processors
 754:.\Include/arm_math.h ****    */
 755:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB8(
 756:.\Include/arm_math.h ****   uint32_t x,
 757:.\Include/arm_math.h ****   uint32_t y)
 758:.\Include/arm_math.h ****   {
 759:.\Include/arm_math.h ****     q31_t r, s, t, u;
 760:.\Include/arm_math.h **** 
 761:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) - (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 762:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) - (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 763:.\Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) - (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 764:.\Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) - (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 765:.\Include/arm_math.h **** 
 766:.\Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 767:.\Include/arm_math.h ****   }
 768:.\Include/arm_math.h **** 
 769:.\Include/arm_math.h **** 
 770:.\Include/arm_math.h ****   /*
 771:.\Include/arm_math.h ****    * @brief C custom defined QADD16 for M3 and M0 processors
 772:.\Include/arm_math.h ****    */
 773:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD16(
 774:.\Include/arm_math.h ****   uint32_t x,
 775:.\Include/arm_math.h ****   uint32_t y)
 776:.\Include/arm_math.h ****   {
 777:.\Include/arm_math.h **** /*  q31_t r,     s;  without initialisation 'arm_offset_q15 test' fails  but 'intrinsic' tests pass
 778:.\Include/arm_math.h ****     q31_t r = 0, s = 0;
 779:.\Include/arm_math.h **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 28


 780:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 781:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 782:.\Include/arm_math.h **** 
 783:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 784:.\Include/arm_math.h ****   }
 785:.\Include/arm_math.h **** 
 786:.\Include/arm_math.h **** 
 787:.\Include/arm_math.h ****   /*
 788:.\Include/arm_math.h ****    * @brief C custom defined SHADD16 for M3 and M0 processors
 789:.\Include/arm_math.h ****    */
 790:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHADD16(
 791:.\Include/arm_math.h ****   uint32_t x,
 792:.\Include/arm_math.h ****   uint32_t y)
 793:.\Include/arm_math.h ****   {
 794:.\Include/arm_math.h ****     q31_t r, s;
 795:.\Include/arm_math.h **** 
 796:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 797:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 798:.\Include/arm_math.h **** 
 799:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 800:.\Include/arm_math.h ****   }
 801:.\Include/arm_math.h **** 
 802:.\Include/arm_math.h **** 
 803:.\Include/arm_math.h ****   /*
 804:.\Include/arm_math.h ****    * @brief C custom defined QSUB16 for M3 and M0 processors
 805:.\Include/arm_math.h ****    */
 806:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB16(
 807:.\Include/arm_math.h ****   uint32_t x,
 808:.\Include/arm_math.h ****   uint32_t y)
 809:.\Include/arm_math.h ****   {
 810:.\Include/arm_math.h ****     q31_t r, s;
 811:.\Include/arm_math.h **** 
 812:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 813:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 814:.\Include/arm_math.h **** 
 815:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 816:.\Include/arm_math.h ****   }
 817:.\Include/arm_math.h **** 
 818:.\Include/arm_math.h **** 
 819:.\Include/arm_math.h ****   /*
 820:.\Include/arm_math.h ****    * @brief C custom defined SHSUB16 for M3 and M0 processors
 821:.\Include/arm_math.h ****    */
 822:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSUB16(
 823:.\Include/arm_math.h ****   uint32_t x,
 824:.\Include/arm_math.h ****   uint32_t y)
 825:.\Include/arm_math.h ****   {
 826:.\Include/arm_math.h ****     q31_t r, s;
 827:.\Include/arm_math.h **** 
 828:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 829:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 830:.\Include/arm_math.h **** 
 831:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 832:.\Include/arm_math.h ****   }
 833:.\Include/arm_math.h **** 
 834:.\Include/arm_math.h **** 
 835:.\Include/arm_math.h ****   /*
 836:.\Include/arm_math.h ****    * @brief C custom defined QASX for M3 and M0 processors
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 29


 837:.\Include/arm_math.h ****    */
 838:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QASX(
 839:.\Include/arm_math.h ****   uint32_t x,
 840:.\Include/arm_math.h ****   uint32_t y)
 841:.\Include/arm_math.h ****   {
 842:.\Include/arm_math.h ****     q31_t r, s;
 843:.\Include/arm_math.h **** 
 844:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 845:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 846:.\Include/arm_math.h **** 
 847:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 848:.\Include/arm_math.h ****   }
 849:.\Include/arm_math.h **** 
 850:.\Include/arm_math.h **** 
 851:.\Include/arm_math.h ****   /*
 852:.\Include/arm_math.h ****    * @brief C custom defined SHASX for M3 and M0 processors
 853:.\Include/arm_math.h ****    */
 854:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHASX(
 855:.\Include/arm_math.h ****   uint32_t x,
 856:.\Include/arm_math.h ****   uint32_t y)
 857:.\Include/arm_math.h ****   {
 858:.\Include/arm_math.h ****     q31_t r, s;
 859:.\Include/arm_math.h **** 
 860:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 861:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 862:.\Include/arm_math.h **** 
 863:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 864:.\Include/arm_math.h ****   }
 865:.\Include/arm_math.h **** 
 866:.\Include/arm_math.h **** 
 867:.\Include/arm_math.h ****   /*
 868:.\Include/arm_math.h ****    * @brief C custom defined QSAX for M3 and M0 processors
 869:.\Include/arm_math.h ****    */
 870:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSAX(
 871:.\Include/arm_math.h ****   uint32_t x,
 872:.\Include/arm_math.h ****   uint32_t y)
 873:.\Include/arm_math.h ****   {
 874:.\Include/arm_math.h ****     q31_t r, s;
 875:.\Include/arm_math.h **** 
 876:.\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 877:.\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 878:.\Include/arm_math.h **** 
 879:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 880:.\Include/arm_math.h ****   }
 881:.\Include/arm_math.h **** 
 882:.\Include/arm_math.h **** 
 883:.\Include/arm_math.h ****   /*
 884:.\Include/arm_math.h ****    * @brief C custom defined SHSAX for M3 and M0 processors
 885:.\Include/arm_math.h ****    */
 886:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSAX(
 887:.\Include/arm_math.h ****   uint32_t x,
 888:.\Include/arm_math.h ****   uint32_t y)
 889:.\Include/arm_math.h ****   {
 890:.\Include/arm_math.h ****     q31_t r, s;
 891:.\Include/arm_math.h **** 
 892:.\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 893:.\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 30


 894:.\Include/arm_math.h **** 
 895:.\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 896:.\Include/arm_math.h ****   }
 897:.\Include/arm_math.h **** 
 898:.\Include/arm_math.h **** 
 899:.\Include/arm_math.h ****   /*
 900:.\Include/arm_math.h ****    * @brief C custom defined SMUSDX for M3 and M0 processors
 901:.\Include/arm_math.h ****    */
 902:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUSDX(
 903:.\Include/arm_math.h ****   uint32_t x,
 904:.\Include/arm_math.h ****   uint32_t y)
 905:.\Include/arm_math.h ****   {
 906:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 907:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 908:.\Include/arm_math.h ****   }
 909:.\Include/arm_math.h **** 
 910:.\Include/arm_math.h ****   /*
 911:.\Include/arm_math.h ****    * @brief C custom defined SMUADX for M3 and M0 processors
 912:.\Include/arm_math.h ****    */
 913:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUADX(
 914:.\Include/arm_math.h ****   uint32_t x,
 915:.\Include/arm_math.h ****   uint32_t y)
 916:.\Include/arm_math.h ****   {
 917:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 918:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 919:.\Include/arm_math.h ****   }
 920:.\Include/arm_math.h **** 
 921:.\Include/arm_math.h **** 
 922:.\Include/arm_math.h ****   /*
 923:.\Include/arm_math.h ****    * @brief C custom defined QADD for M3 and M0 processors
 924:.\Include/arm_math.h ****    */
 925:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QADD(
 926:.\Include/arm_math.h ****   int32_t x,
 927:.\Include/arm_math.h ****   int32_t y)
 928:.\Include/arm_math.h ****   {
 929:.\Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x + (q31_t)y)));
 930:.\Include/arm_math.h ****   }
 931:.\Include/arm_math.h **** 
 932:.\Include/arm_math.h **** 
 933:.\Include/arm_math.h ****   /*
 934:.\Include/arm_math.h ****    * @brief C custom defined QSUB for M3 and M0 processors
 935:.\Include/arm_math.h ****    */
 936:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QSUB(
 937:.\Include/arm_math.h ****   int32_t x,
 938:.\Include/arm_math.h ****   int32_t y)
 939:.\Include/arm_math.h ****   {
 940:.\Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x - (q31_t)y)));
 941:.\Include/arm_math.h ****   }
 942:.\Include/arm_math.h **** 
 943:.\Include/arm_math.h **** 
 944:.\Include/arm_math.h ****   /*
 945:.\Include/arm_math.h ****    * @brief C custom defined SMLAD for M3 and M0 processors
 946:.\Include/arm_math.h ****    */
 947:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLAD(
 948:.\Include/arm_math.h ****   uint32_t x,
 949:.\Include/arm_math.h ****   uint32_t y,
 950:.\Include/arm_math.h ****   uint32_t sum)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 31


 951:.\Include/arm_math.h ****   {
 952:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 459              		.loc 2 952 0
 460 02e0 DC23     		mov	r3, #220
 461 02e2 FB18     		add	r3, r7, r3
 462 02e4 1B68     		ldr	r3, [r3]
 463 02e6 1B04     		lsl	r3, r3, #16
 464 02e8 1B14     		asr	r3, r3, #16
 465 02ea D822     		mov	r2, #216
 466 02ec BA18     		add	r2, r7, r2
 467 02ee 1268     		ldr	r2, [r2]
 468 02f0 1204     		lsl	r2, r2, #16
 469 02f2 1214     		asr	r2, r2, #16
 470 02f4 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 471              		.loc 2 953 0
 472 02f6 DC23     		mov	r3, #220
 473 02f8 FB18     		add	r3, r7, r3
 474 02fa 1B68     		ldr	r3, [r3]
 475 02fc 1B14     		asr	r3, r3, #16
 476 02fe D821     		mov	r1, #216
 477 0300 7918     		add	r1, r7, r1
 478 0302 0968     		ldr	r1, [r1]
 479 0304 0914     		asr	r1, r1, #16
 480 0306 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 481              		.loc 2 952 0
 482 0308 D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 483              		.loc 2 954 0
 484 030a D423     		mov	r3, #212
 485 030c FB18     		add	r3, r7, r3
 486 030e 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 487              		.loc 2 953 0
 488 0310 D318     		add	r3, r2, r3
 489              	.LBE29:
 490              	.LBE28:
 491              		.loc 1 300 0
 492 0312 9222     		mov	r2, #146
 493 0314 5200     		lsl	r2, r2, #1
 494 0316 BA18     		add	r2, r7, r2
 495 0318 1360     		str	r3, [r2]
 301:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc2 = __SMLAD(x2, y1, acc2);
 496              		.loc 1 301 0
 497 031a 8823     		mov	r3, #136
 498 031c 5B00     		lsl	r3, r3, #1
 499 031e FB18     		add	r3, r7, r3
 500 0320 1968     		ldr	r1, [r3]
 501 0322 E823     		mov	r3, #232
 502 0324 FB18     		add	r3, r7, r3
 503 0326 1A68     		ldr	r2, [r3]
 504 0328 8E23     		mov	r3, #142
 505 032a 5B00     		lsl	r3, r3, #1
 506 032c FB18     		add	r3, r7, r3
 507 032e 1B68     		ldr	r3, [r3]
 508 0330 D020     		mov	r0, #208
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 32


 509 0332 3818     		add	r0, r7, r0
 510 0334 0160     		str	r1, [r0]
 511 0336 CC21     		mov	r1, #204
 512 0338 7918     		add	r1, r7, r1
 513 033a 0A60     		str	r2, [r1]
 514 033c C822     		mov	r2, #200
 515 033e BA18     		add	r2, r7, r2
 516 0340 1360     		str	r3, [r2]
 517              	.LBB30:
 518              	.LBB31:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 519              		.loc 2 952 0
 520 0342 D023     		mov	r3, #208
 521 0344 FB18     		add	r3, r7, r3
 522 0346 1B68     		ldr	r3, [r3]
 523 0348 1B04     		lsl	r3, r3, #16
 524 034a 1B14     		asr	r3, r3, #16
 525 034c CC22     		mov	r2, #204
 526 034e BA18     		add	r2, r7, r2
 527 0350 1268     		ldr	r2, [r2]
 528 0352 1204     		lsl	r2, r2, #16
 529 0354 1214     		asr	r2, r2, #16
 530 0356 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 531              		.loc 2 953 0
 532 0358 D023     		mov	r3, #208
 533 035a FB18     		add	r3, r7, r3
 534 035c 1B68     		ldr	r3, [r3]
 535 035e 1B14     		asr	r3, r3, #16
 536 0360 CC21     		mov	r1, #204
 537 0362 7918     		add	r1, r7, r1
 538 0364 0968     		ldr	r1, [r1]
 539 0366 0914     		asr	r1, r1, #16
 540 0368 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 541              		.loc 2 952 0
 542 036a D218     		add	r2, r2, r3
 543              		.loc 2 954 0
 544 036c C823     		mov	r3, #200
 545 036e FB18     		add	r3, r7, r3
 546 0370 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 547              		.loc 2 953 0
 548 0372 D318     		add	r3, r2, r3
 549              	.LBE31:
 550              	.LBE30:
 551              		.loc 1 301 0
 552 0374 8E22     		mov	r2, #142
 553 0376 5200     		lsl	r2, r2, #1
 554 0378 BA18     		add	r2, r7, r2
 555 037a 1360     		str	r3, [r2]
 302:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 303:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* pack input data */
 304:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 305:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 556              		.loc 1 305 0
 557 037c 8823     		mov	r3, #136
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 33


 558 037e 5B00     		lsl	r3, r3, #1
 559 0380 FB18     		add	r3, r7, r3
 560 0382 1B68     		ldr	r3, [r3]
 561 0384 1B04     		lsl	r3, r3, #16
 562 0386 1A0C     		lsr	r2, r3, #16
 563 0388 8A23     		mov	r3, #138
 564 038a 5B00     		lsl	r3, r3, #1
 565 038c FB18     		add	r3, r7, r3
 566 038e 1B68     		ldr	r3, [r3]
 567 0390 1B0C     		lsr	r3, r3, #16
 568 0392 1B04     		lsl	r3, r3, #16
 569 0394 1343     		orr	r3, r2
 570 0396 E022     		mov	r2, #224
 571 0398 BA18     		add	r2, r7, r2
 572 039a 1360     		str	r3, [r2]
 306:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 307:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 308:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 309:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 310:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* multiply and accumlate */
 311:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc1 = __SMLADX(x3, y1, acc1);
 573              		.loc 1 311 0
 574 039c E023     		mov	r3, #224
 575 039e FB18     		add	r3, r7, r3
 576 03a0 1968     		ldr	r1, [r3]
 577 03a2 E823     		mov	r3, #232
 578 03a4 FB18     		add	r3, r7, r3
 579 03a6 1A68     		ldr	r2, [r3]
 580 03a8 9023     		mov	r3, #144
 581 03aa 5B00     		lsl	r3, r3, #1
 582 03ac FB18     		add	r3, r7, r3
 583 03ae 1B68     		ldr	r3, [r3]
 584 03b0 C420     		mov	r0, #196
 585 03b2 3818     		add	r0, r7, r0
 586 03b4 0160     		str	r1, [r0]
 587 03b6 C021     		mov	r1, #192
 588 03b8 7918     		add	r1, r7, r1
 589 03ba 0A60     		str	r2, [r1]
 590 03bc BC22     		mov	r2, #188
 591 03be BA18     		add	r2, r7, r2
 592 03c0 1360     		str	r3, [r2]
 593              	.LBB32:
 594              	.LBB33:
 955:.\Include/arm_math.h ****   }
 956:.\Include/arm_math.h **** 
 957:.\Include/arm_math.h **** 
 958:.\Include/arm_math.h ****   /*
 959:.\Include/arm_math.h ****    * @brief C custom defined SMLADX for M3 and M0 processors
 960:.\Include/arm_math.h ****    */
 961:.\Include/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLADX(
 962:.\Include/arm_math.h ****   uint32_t x,
 963:.\Include/arm_math.h ****   uint32_t y,
 964:.\Include/arm_math.h ****   uint32_t sum)
 965:.\Include/arm_math.h ****   {
 966:.\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 595              		.loc 2 966 0
 596 03c2 C423     		mov	r3, #196
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 34


 597 03c4 FB18     		add	r3, r7, r3
 598 03c6 1B68     		ldr	r3, [r3]
 599 03c8 1B04     		lsl	r3, r3, #16
 600 03ca 1B14     		asr	r3, r3, #16
 601 03cc C022     		mov	r2, #192
 602 03ce BA18     		add	r2, r7, r2
 603 03d0 1268     		ldr	r2, [r2]
 604 03d2 1214     		asr	r2, r2, #16
 605 03d4 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 606              		.loc 2 967 0
 607 03d6 C423     		mov	r3, #196
 608 03d8 FB18     		add	r3, r7, r3
 609 03da 1B68     		ldr	r3, [r3]
 610 03dc 1B14     		asr	r3, r3, #16
 611 03de C021     		mov	r1, #192
 612 03e0 7918     		add	r1, r7, r1
 613 03e2 0968     		ldr	r1, [r1]
 614 03e4 0904     		lsl	r1, r1, #16
 615 03e6 0914     		asr	r1, r1, #16
 616 03e8 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 617              		.loc 2 966 0
 618 03ea D218     		add	r2, r2, r3
 968:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 619              		.loc 2 968 0
 620 03ec BC23     		mov	r3, #188
 621 03ee FB18     		add	r3, r7, r3
 622 03f0 1B68     		ldr	r3, [r3]
 967:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 623              		.loc 2 967 0
 624 03f2 D318     		add	r3, r2, r3
 625              	.LBE33:
 626              	.LBE32:
 627              		.loc 1 311 0
 628 03f4 9022     		mov	r2, #144
 629 03f6 5200     		lsl	r2, r2, #1
 630 03f8 BA18     		add	r2, r7, r2
 631 03fa 1360     		str	r3, [r2]
 312:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 313:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* Read next two samples from scratch1 buffer */
 314:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       x1 = _SIMD32_OFFSET(pScr1);
 632              		.loc 1 314 0
 633 03fc 7B69     		ldr	r3, [r7, #20]
 634 03fe 1B68     		ldr	r3, [r3]
 635 0400 8A22     		mov	r2, #138
 636 0402 5200     		lsl	r2, r2, #1
 637 0404 BA18     		add	r2, r7, r2
 638 0406 1360     		str	r3, [r2]
 315:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 316:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* multiply and accumlate */
 317:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc0 = __SMLAD(x2, y2, acc0);
 639              		.loc 1 317 0
 640 0408 8823     		mov	r3, #136
 641 040a 5B00     		lsl	r3, r3, #1
 642 040c FB18     		add	r3, r7, r3
 643 040e 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 35


 644 0410 E423     		mov	r3, #228
 645 0412 FB18     		add	r3, r7, r3
 646 0414 1A68     		ldr	r2, [r3]
 647 0416 9223     		mov	r3, #146
 648 0418 5B00     		lsl	r3, r3, #1
 649 041a FB18     		add	r3, r7, r3
 650 041c 1B68     		ldr	r3, [r3]
 651 041e B820     		mov	r0, #184
 652 0420 3818     		add	r0, r7, r0
 653 0422 0160     		str	r1, [r0]
 654 0424 B421     		mov	r1, #180
 655 0426 7918     		add	r1, r7, r1
 656 0428 0A60     		str	r2, [r1]
 657 042a B022     		mov	r2, #176
 658 042c BA18     		add	r2, r7, r2
 659 042e 1360     		str	r3, [r2]
 660              	.LBB34:
 661              	.LBB35:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 662              		.loc 2 952 0
 663 0430 B823     		mov	r3, #184
 664 0432 FB18     		add	r3, r7, r3
 665 0434 1B68     		ldr	r3, [r3]
 666 0436 1B04     		lsl	r3, r3, #16
 667 0438 1B14     		asr	r3, r3, #16
 668 043a B422     		mov	r2, #180
 669 043c BA18     		add	r2, r7, r2
 670 043e 1268     		ldr	r2, [r2]
 671 0440 1204     		lsl	r2, r2, #16
 672 0442 1214     		asr	r2, r2, #16
 673 0444 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 674              		.loc 2 953 0
 675 0446 B823     		mov	r3, #184
 676 0448 FB18     		add	r3, r7, r3
 677 044a 1B68     		ldr	r3, [r3]
 678 044c 1B14     		asr	r3, r3, #16
 679 044e B421     		mov	r1, #180
 680 0450 7918     		add	r1, r7, r1
 681 0452 0968     		ldr	r1, [r1]
 682 0454 0914     		asr	r1, r1, #16
 683 0456 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 684              		.loc 2 952 0
 685 0458 D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 686              		.loc 2 954 0
 687 045a B023     		mov	r3, #176
 688 045c FB18     		add	r3, r7, r3
 689 045e 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 690              		.loc 2 953 0
 691 0460 D318     		add	r3, r2, r3
 692              	.LBE35:
 693              	.LBE34:
 694              		.loc 1 317 0
 695 0462 9222     		mov	r2, #146
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 36


 696 0464 5200     		lsl	r2, r2, #1
 697 0466 BA18     		add	r2, r7, r2
 698 0468 1360     		str	r3, [r2]
 318:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc2 = __SMLAD(x1, y2, acc2);
 699              		.loc 1 318 0
 700 046a 8A23     		mov	r3, #138
 701 046c 5B00     		lsl	r3, r3, #1
 702 046e FB18     		add	r3, r7, r3
 703 0470 1968     		ldr	r1, [r3]
 704 0472 E423     		mov	r3, #228
 705 0474 FB18     		add	r3, r7, r3
 706 0476 1A68     		ldr	r2, [r3]
 707 0478 8E23     		mov	r3, #142
 708 047a 5B00     		lsl	r3, r3, #1
 709 047c FB18     		add	r3, r7, r3
 710 047e 1B68     		ldr	r3, [r3]
 711 0480 AC20     		mov	r0, #172
 712 0482 3818     		add	r0, r7, r0
 713 0484 0160     		str	r1, [r0]
 714 0486 A821     		mov	r1, #168
 715 0488 7918     		add	r1, r7, r1
 716 048a 0A60     		str	r2, [r1]
 717 048c A422     		mov	r2, #164
 718 048e BA18     		add	r2, r7, r2
 719 0490 1360     		str	r3, [r2]
 720              	.LBB36:
 721              	.LBB37:
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 722              		.loc 2 952 0
 723 0492 AC23     		mov	r3, #172
 724 0494 FB18     		add	r3, r7, r3
 725 0496 1B68     		ldr	r3, [r3]
 726 0498 1B04     		lsl	r3, r3, #16
 727 049a 1B14     		asr	r3, r3, #16
 728 049c A822     		mov	r2, #168
 729 049e BA18     		add	r2, r7, r2
 730 04a0 1268     		ldr	r2, [r2]
 731 04a2 1204     		lsl	r2, r2, #16
 732 04a4 1214     		asr	r2, r2, #16
 733 04a6 5A43     		mul	r2, r3
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 734              		.loc 2 953 0
 735 04a8 AC23     		mov	r3, #172
 736 04aa FB18     		add	r3, r7, r3
 737 04ac 1B68     		ldr	r3, [r3]
 738 04ae 1B14     		asr	r3, r3, #16
 739 04b0 A821     		mov	r1, #168
 740 04b2 7918     		add	r1, r7, r1
 741 04b4 0968     		ldr	r1, [r1]
 742 04b6 0914     		asr	r1, r1, #16
 743 04b8 4B43     		mul	r3, r1
 952:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 744              		.loc 2 952 0
 745 04ba D218     		add	r2, r2, r3
 954:.\Include/arm_math.h ****   }
 746              		.loc 2 954 0
 747 04bc A423     		mov	r3, #164
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 37


 748 04be FB18     		add	r3, r7, r3
 749 04c0 1B68     		ldr	r3, [r3]
 953:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 750              		.loc 2 953 0
 751 04c2 D318     		add	r3, r2, r3
 752              	.LBE37:
 753              	.LBE36:
 754              		.loc 1 318 0
 755 04c4 8E22     		mov	r2, #142
 756 04c6 5200     		lsl	r2, r2, #1
 757 04c8 BA18     		add	r2, r7, r2
 758 04ca 1360     		str	r3, [r2]
 319:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 320:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* pack input data */
 321:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 322:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 759              		.loc 1 322 0
 760 04cc 8A23     		mov	r3, #138
 761 04ce 5B00     		lsl	r3, r3, #1
 762 04d0 FB18     		add	r3, r7, r3
 763 04d2 1B68     		ldr	r3, [r3]
 764 04d4 1B04     		lsl	r3, r3, #16
 765 04d6 1A0C     		lsr	r2, r3, #16
 766 04d8 8823     		mov	r3, #136
 767 04da 5B00     		lsl	r3, r3, #1
 768 04dc FB18     		add	r3, r7, r3
 769 04de 1B68     		ldr	r3, [r3]
 770 04e0 1B0C     		lsr	r3, r3, #16
 771 04e2 1B04     		lsl	r3, r3, #16
 772 04e4 1343     		orr	r3, r2
 773 04e6 E022     		mov	r2, #224
 774 04e8 BA18     		add	r2, r7, r2
 775 04ea 1360     		str	r3, [r2]
 323:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 324:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 325:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 326:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 327:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc3 = __SMLADX(x3, y1, acc3);
 776              		.loc 1 327 0
 777 04ec E023     		mov	r3, #224
 778 04ee FB18     		add	r3, r7, r3
 779 04f0 1968     		ldr	r1, [r3]
 780 04f2 E823     		mov	r3, #232
 781 04f4 FB18     		add	r3, r7, r3
 782 04f6 1A68     		ldr	r2, [r3]
 783 04f8 8C23     		mov	r3, #140
 784 04fa 5B00     		lsl	r3, r3, #1
 785 04fc FB18     		add	r3, r7, r3
 786 04fe 1B68     		ldr	r3, [r3]
 787 0500 A020     		mov	r0, #160
 788 0502 3818     		add	r0, r7, r0
 789 0504 0160     		str	r1, [r0]
 790 0506 9C21     		mov	r1, #156
 791 0508 7918     		add	r1, r7, r1
 792 050a 0A60     		str	r2, [r1]
 793 050c 9822     		mov	r2, #152
 794 050e BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 38


 795 0510 1360     		str	r3, [r2]
 796              	.LBB38:
 797              	.LBB39:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 798              		.loc 2 966 0
 799 0512 A023     		mov	r3, #160
 800 0514 FB18     		add	r3, r7, r3
 801 0516 1B68     		ldr	r3, [r3]
 802 0518 1B04     		lsl	r3, r3, #16
 803 051a 1B14     		asr	r3, r3, #16
 804 051c 9C22     		mov	r2, #156
 805 051e BA18     		add	r2, r7, r2
 806 0520 1268     		ldr	r2, [r2]
 807 0522 1214     		asr	r2, r2, #16
 808 0524 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 809              		.loc 2 967 0
 810 0526 A023     		mov	r3, #160
 811 0528 FB18     		add	r3, r7, r3
 812 052a 1B68     		ldr	r3, [r3]
 813 052c 1B14     		asr	r3, r3, #16
 814 052e 9C21     		mov	r1, #156
 815 0530 7918     		add	r1, r7, r1
 816 0532 0968     		ldr	r1, [r1]
 817 0534 0904     		lsl	r1, r1, #16
 818 0536 0914     		asr	r1, r1, #16
 819 0538 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 820              		.loc 2 966 0
 821 053a D218     		add	r2, r2, r3
 822              		.loc 2 968 0
 823 053c 9823     		mov	r3, #152
 824 053e FB18     		add	r3, r7, r3
 825 0540 1B68     		ldr	r3, [r3]
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 826              		.loc 2 967 0
 827 0542 D318     		add	r3, r2, r3
 828              	.LBE39:
 829              	.LBE38:
 830              		.loc 1 327 0
 831 0544 8C22     		mov	r2, #140
 832 0546 5200     		lsl	r2, r2, #1
 833 0548 BA18     		add	r2, r7, r2
 834 054a 1360     		str	r3, [r2]
 328:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc1 = __SMLADX(x3, y2, acc1);
 835              		.loc 1 328 0
 836 054c E023     		mov	r3, #224
 837 054e FB18     		add	r3, r7, r3
 838 0550 1968     		ldr	r1, [r3]
 839 0552 E423     		mov	r3, #228
 840 0554 FB18     		add	r3, r7, r3
 841 0556 1A68     		ldr	r2, [r3]
 842 0558 9023     		mov	r3, #144
 843 055a 5B00     		lsl	r3, r3, #1
 844 055c FB18     		add	r3, r7, r3
 845 055e 1B68     		ldr	r3, [r3]
 846 0560 9420     		mov	r0, #148
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 39


 847 0562 3818     		add	r0, r7, r0
 848 0564 0160     		str	r1, [r0]
 849 0566 9021     		mov	r1, #144
 850 0568 7918     		add	r1, r7, r1
 851 056a 0A60     		str	r2, [r1]
 852 056c 8C22     		mov	r2, #140
 853 056e BA18     		add	r2, r7, r2
 854 0570 1360     		str	r3, [r2]
 855              	.LBB40:
 856              	.LBB41:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 857              		.loc 2 966 0
 858 0572 9423     		mov	r3, #148
 859 0574 FB18     		add	r3, r7, r3
 860 0576 1B68     		ldr	r3, [r3]
 861 0578 1B04     		lsl	r3, r3, #16
 862 057a 1B14     		asr	r3, r3, #16
 863 057c 9022     		mov	r2, #144
 864 057e BA18     		add	r2, r7, r2
 865 0580 1268     		ldr	r2, [r2]
 866 0582 1214     		asr	r2, r2, #16
 867 0584 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 868              		.loc 2 967 0
 869 0586 9423     		mov	r3, #148
 870 0588 FB18     		add	r3, r7, r3
 871 058a 1B68     		ldr	r3, [r3]
 872 058c 1B14     		asr	r3, r3, #16
 873 058e 9021     		mov	r1, #144
 874 0590 7918     		add	r1, r7, r1
 875 0592 0968     		ldr	r1, [r1]
 876 0594 0904     		lsl	r1, r1, #16
 877 0596 0914     		asr	r1, r1, #16
 878 0598 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 879              		.loc 2 966 0
 880 059a D218     		add	r2, r2, r3
 881              		.loc 2 968 0
 882 059c 8C23     		mov	r3, #140
 883 059e FB18     		add	r3, r7, r3
 884 05a0 1B68     		ldr	r3, [r3]
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 885              		.loc 2 967 0
 886 05a2 D318     		add	r3, r2, r3
 887              	.LBE41:
 888              	.LBE40:
 889              		.loc 1 328 0
 890 05a4 9022     		mov	r2, #144
 891 05a6 5200     		lsl	r2, r2, #1
 892 05a8 BA18     		add	r2, r7, r2
 893 05aa 1360     		str	r3, [r2]
 329:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 330:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       x2 = _SIMD32_OFFSET(pScr1 + 2u);
 894              		.loc 1 330 0
 895 05ac 7B69     		ldr	r3, [r7, #20]
 896 05ae 5B68     		ldr	r3, [r3, #4]
 897 05b0 8822     		mov	r2, #136
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 40


 898 05b2 5200     		lsl	r2, r2, #1
 899 05b4 BA18     		add	r2, r7, r2
 900 05b6 1360     		str	r3, [r2]
 331:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 332:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 333:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 901              		.loc 1 333 0
 902 05b8 8823     		mov	r3, #136
 903 05ba 5B00     		lsl	r3, r3, #1
 904 05bc FB18     		add	r3, r7, r3
 905 05be 1B68     		ldr	r3, [r3]
 906 05c0 1B04     		lsl	r3, r3, #16
 907 05c2 1A0C     		lsr	r2, r3, #16
 908 05c4 8A23     		mov	r3, #138
 909 05c6 5B00     		lsl	r3, r3, #1
 910 05c8 FB18     		add	r3, r7, r3
 911 05ca 1B68     		ldr	r3, [r3]
 912 05cc 1B0C     		lsr	r3, r3, #16
 913 05ce 1B04     		lsl	r3, r3, #16
 914 05d0 1343     		orr	r3, r2
 915 05d2 E022     		mov	r2, #224
 916 05d4 BA18     		add	r2, r7, r2
 917 05d6 1360     		str	r3, [r2]
 334:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 335:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 336:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 337:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 338:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc3 = __SMLADX(x3, y2, acc3);
 918              		.loc 1 338 0
 919 05d8 E023     		mov	r3, #224
 920 05da FB18     		add	r3, r7, r3
 921 05dc 1968     		ldr	r1, [r3]
 922 05de E423     		mov	r3, #228
 923 05e0 FB18     		add	r3, r7, r3
 924 05e2 1A68     		ldr	r2, [r3]
 925 05e4 8C23     		mov	r3, #140
 926 05e6 5B00     		lsl	r3, r3, #1
 927 05e8 FB18     		add	r3, r7, r3
 928 05ea 1B68     		ldr	r3, [r3]
 929 05ec 8820     		mov	r0, #136
 930 05ee 3818     		add	r0, r7, r0
 931 05f0 0160     		str	r1, [r0]
 932 05f2 8421     		mov	r1, #132
 933 05f4 7918     		add	r1, r7, r1
 934 05f6 0A60     		str	r2, [r1]
 935 05f8 8022     		mov	r2, #128
 936 05fa BA18     		add	r2, r7, r2
 937 05fc 1360     		str	r3, [r2]
 938              	.LBB42:
 939              	.LBB43:
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 940              		.loc 2 966 0
 941 05fe 8823     		mov	r3, #136
 942 0600 FB18     		add	r3, r7, r3
 943 0602 1B68     		ldr	r3, [r3]
 944 0604 1B04     		lsl	r3, r3, #16
 945 0606 1B14     		asr	r3, r3, #16
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 41


 946 0608 8422     		mov	r2, #132
 947 060a BA18     		add	r2, r7, r2
 948 060c 1268     		ldr	r2, [r2]
 949 060e 1214     		asr	r2, r2, #16
 950 0610 5A43     		mul	r2, r3
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 951              		.loc 2 967 0
 952 0612 8823     		mov	r3, #136
 953 0614 FB18     		add	r3, r7, r3
 954 0616 1B68     		ldr	r3, [r3]
 955 0618 1B14     		asr	r3, r3, #16
 956 061a 8421     		mov	r1, #132
 957 061c 7918     		add	r1, r7, r1
 958 061e 0968     		ldr	r1, [r1]
 959 0620 0904     		lsl	r1, r1, #16
 960 0622 0914     		asr	r1, r1, #16
 961 0624 4B43     		mul	r3, r1
 966:.\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 962              		.loc 2 966 0
 963 0626 D218     		add	r2, r2, r3
 964              		.loc 2 968 0
 965 0628 8023     		mov	r3, #128
 966 062a FB18     		add	r3, r7, r3
 967 062c 1B68     		ldr	r3, [r3]
 967:.\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 968              		.loc 2 967 0
 969 062e D318     		add	r3, r2, r3
 970              	.LBE43:
 971              	.LBE42:
 972              		.loc 1 338 0
 973 0630 8C22     		mov	r2, #140
 974 0632 5200     		lsl	r2, r2, #1
 975 0634 BA18     		add	r2, r7, r2
 976 0636 1360     		str	r3, [r2]
 339:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 340:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 341:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 342:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* Read four samples from smaller buffer */
 343:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 	  a = *pIn2;
 344:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 	  b = *(pIn2 + 1);
 345:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 346:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 347:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       y1 = __PKHBT(a, b, 16);
 348:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 349:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       y1 = __PKHBT(b, a, 16);
 350:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 351:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 352:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 	  a = *(pIn2 + 2);
 353:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 	  b = *(pIn2 + 3);
 354:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 355:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       y2 = __PKHBT(a, b, 16);
 356:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 357:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       y2 = __PKHBT(b, a, 16);
 358:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 359:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 360:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc0 = __SMLAD(x1, y1, acc0);
 361:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 42


 362:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc2 = __SMLAD(x2, y1, acc2);
 363:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 364:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 365:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 366:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 367:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 368:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 369:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 370:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc1 = __SMLADX(x3, y1, acc1);
 371:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 372:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 	  a = *pScr1;
 373:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 	  b = *(pScr1 + 1);
 374:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 375:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 376:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       x1 = __PKHBT(a, b, 16);
 377:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 378:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       x1 = __PKHBT(b, a, 16);
 379:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 380:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 381:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc0 = __SMLAD(x2, y2, acc0);
 382:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 383:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc2 = __SMLAD(x1, y2, acc2);
 384:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 385:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 386:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 387:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 388:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 389:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 390:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 391:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc3 = __SMLADX(x3, y1, acc3);
 392:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 393:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc1 = __SMLADX(x3, y2, acc1);
 394:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 395:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 	  a = *(pScr1 + 2);
 396:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 	  b = *(pScr1 + 3);
 397:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 398:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 399:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       x2 = __PKHBT(a, b, 16);
 400:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 401:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       x2 = __PKHBT(b, a, 16);
 402:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 403:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 404:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 405:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x2, x1, 0);
 406:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 407:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       x3 = __PKHBT(x1, x2, 0);
 408:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif
 409:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 410:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc3 = __SMLADX(x3, y2, acc3);
 411:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 412:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif	/*	#ifndef UNALIGNED_SUPPORT_DISABLE	*/
 413:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 414:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* update scratch pointers */
 415:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       pIn2 += 4u;
 977              		.loc 1 415 0
 978 0638 7B1D     		add	r3, r7, #5
 979 063a FF33     		add	r3, r3, #255
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 43


 980 063c 1B68     		ldr	r3, [r3]
 981 063e 0833     		add	r3, r3, #8
 982 0640 7A1D     		add	r2, r7, #5
 983 0642 FF32     		add	r2, r2, #255
 984 0644 1360     		str	r3, [r2]
 416:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       pScr1 += 4u;
 985              		.loc 1 416 0
 986 0646 7B69     		ldr	r3, [r7, #20]
 987 0648 0833     		add	r3, r3, #8
 988 064a 7B61     		str	r3, [r7, #20]
 417:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 418:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 419:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* Decrement the loop counter */
 420:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       tapCnt--;
 989              		.loc 1 420 0
 990 064c F423     		mov	r3, #244
 991 064e FB18     		add	r3, r7, r3
 992 0650 1B68     		ldr	r3, [r3]
 993 0652 013B     		sub	r3, r3, #1
 994 0654 F422     		mov	r2, #244
 995 0656 BA18     		add	r2, r7, r2
 996 0658 1360     		str	r3, [r2]
 997              	.L9:
 290:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     {
 998              		.loc 1 290 0
 999 065a F423     		mov	r3, #244
 1000 065c FB18     		add	r3, r7, r3
 1001 065e 1B68     		ldr	r3, [r3]
 1002 0660 002B     		cmp	r3, #0
 1003 0662 00D0     		beq	.LCB881
 1004 0664 1AE6     		b	.L18	@long jump
 1005              	.LCB881:
 421:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     }
 422:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 423:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Update scratch pointer for remaining samples of smaller length sequence */
 424:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     pScr1 -= 4u;
 1006              		.loc 1 424 0
 1007 0666 7B69     		ldr	r3, [r7, #20]
 1008 0668 083B     		sub	r3, r3, #8
 1009 066a 7B61     		str	r3, [r7, #20]
 425:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 426:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* apply same above for remaining samples of smaller length sequence */
 427:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     tapCnt = (srcBLen) & 3u;
 1010              		.loc 1 427 0
 1011 066c 3B68     		ldr	r3, [r7]
 1012 066e 0322     		mov	r2, #3
 1013 0670 1340     		and	r3, r2
 1014 0672 F422     		mov	r2, #244
 1015 0674 BA18     		add	r2, r7, r2
 1016 0676 1360     		str	r3, [r2]
 428:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 429:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     while (tapCnt > 0u)
 1017              		.loc 1 429 0
 1018 0678 5DE0     		b	.L19
 1019              	.L20:
 430:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     {
 431:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 44


 432:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* accumlate the results */
 433:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc0 += (*pScr1++ * *pIn2);
 1020              		.loc 1 433 0
 1021 067a 7B69     		ldr	r3, [r7, #20]
 1022 067c 9A1C     		add	r2, r3, #2
 1023 067e 7A61     		str	r2, [r7, #20]
 1024 0680 1B88     		ldrh	r3, [r3]
 1025 0682 1BB2     		sxth	r3, r3
 1026 0684 7A1D     		add	r2, r7, #5
 1027 0686 FF32     		add	r2, r2, #255
 1028 0688 1268     		ldr	r2, [r2]
 1029 068a 1288     		ldrh	r2, [r2]
 1030 068c 12B2     		sxth	r2, r2
 1031 068e 5343     		mul	r3, r2
 1032 0690 9222     		mov	r2, #146
 1033 0692 5200     		lsl	r2, r2, #1
 1034 0694 BA18     		add	r2, r7, r2
 1035 0696 1268     		ldr	r2, [r2]
 1036 0698 D318     		add	r3, r2, r3
 1037 069a 9222     		mov	r2, #146
 1038 069c 5200     		lsl	r2, r2, #1
 1039 069e BA18     		add	r2, r7, r2
 1040 06a0 1360     		str	r3, [r2]
 434:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc1 += (*pScr1++ * *pIn2);
 1041              		.loc 1 434 0
 1042 06a2 7B69     		ldr	r3, [r7, #20]
 1043 06a4 9A1C     		add	r2, r3, #2
 1044 06a6 7A61     		str	r2, [r7, #20]
 1045 06a8 1B88     		ldrh	r3, [r3]
 1046 06aa 1BB2     		sxth	r3, r3
 1047 06ac 7A1D     		add	r2, r7, #5
 1048 06ae FF32     		add	r2, r2, #255
 1049 06b0 1268     		ldr	r2, [r2]
 1050 06b2 1288     		ldrh	r2, [r2]
 1051 06b4 12B2     		sxth	r2, r2
 1052 06b6 5343     		mul	r3, r2
 1053 06b8 9022     		mov	r2, #144
 1054 06ba 5200     		lsl	r2, r2, #1
 1055 06bc BA18     		add	r2, r7, r2
 1056 06be 1268     		ldr	r2, [r2]
 1057 06c0 D318     		add	r3, r2, r3
 1058 06c2 9022     		mov	r2, #144
 1059 06c4 5200     		lsl	r2, r2, #1
 1060 06c6 BA18     		add	r2, r7, r2
 1061 06c8 1360     		str	r3, [r2]
 435:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc2 += (*pScr1++ * *pIn2);
 1062              		.loc 1 435 0
 1063 06ca 7B69     		ldr	r3, [r7, #20]
 1064 06cc 9A1C     		add	r2, r3, #2
 1065 06ce 7A61     		str	r2, [r7, #20]
 1066 06d0 1B88     		ldrh	r3, [r3]
 1067 06d2 1BB2     		sxth	r3, r3
 1068 06d4 7A1D     		add	r2, r7, #5
 1069 06d6 FF32     		add	r2, r2, #255
 1070 06d8 1268     		ldr	r2, [r2]
 1071 06da 1288     		ldrh	r2, [r2]
 1072 06dc 12B2     		sxth	r2, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 45


 1073 06de 5343     		mul	r3, r2
 1074 06e0 8E22     		mov	r2, #142
 1075 06e2 5200     		lsl	r2, r2, #1
 1076 06e4 BA18     		add	r2, r7, r2
 1077 06e6 1268     		ldr	r2, [r2]
 1078 06e8 D318     		add	r3, r2, r3
 1079 06ea 8E22     		mov	r2, #142
 1080 06ec 5200     		lsl	r2, r2, #1
 1081 06ee BA18     		add	r2, r7, r2
 1082 06f0 1360     		str	r3, [r2]
 436:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc3 += (*pScr1++ * *pIn2++);
 1083              		.loc 1 436 0
 1084 06f2 7B69     		ldr	r3, [r7, #20]
 1085 06f4 9A1C     		add	r2, r3, #2
 1086 06f6 7A61     		str	r2, [r7, #20]
 1087 06f8 1B88     		ldrh	r3, [r3]
 1088 06fa 1AB2     		sxth	r2, r3
 1089 06fc 7B1D     		add	r3, r7, #5
 1090 06fe FF33     		add	r3, r3, #255
 1091 0700 1B68     		ldr	r3, [r3]
 1092 0702 991C     		add	r1, r3, #2
 1093 0704 781D     		add	r0, r7, #5
 1094 0706 FF30     		add	r0, r0, #255
 1095 0708 0160     		str	r1, [r0]
 1096 070a 1B88     		ldrh	r3, [r3]
 1097 070c 1BB2     		sxth	r3, r3
 1098 070e 5343     		mul	r3, r2
 1099 0710 8C22     		mov	r2, #140
 1100 0712 5200     		lsl	r2, r2, #1
 1101 0714 BA18     		add	r2, r7, r2
 1102 0716 1268     		ldr	r2, [r2]
 1103 0718 D318     		add	r3, r2, r3
 1104 071a 8C22     		mov	r2, #140
 1105 071c 5200     		lsl	r2, r2, #1
 1106 071e BA18     		add	r2, r7, r2
 1107 0720 1360     		str	r3, [r2]
 437:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 438:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       pScr1 -= 3u;
 1108              		.loc 1 438 0
 1109 0722 7B69     		ldr	r3, [r7, #20]
 1110 0724 063B     		sub	r3, r3, #6
 1111 0726 7B61     		str	r3, [r7, #20]
 439:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 440:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* Decrement the loop counter */
 441:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       tapCnt--;
 1112              		.loc 1 441 0
 1113 0728 F423     		mov	r3, #244
 1114 072a FB18     		add	r3, r7, r3
 1115 072c 1B68     		ldr	r3, [r3]
 1116 072e 013B     		sub	r3, r3, #1
 1117 0730 F422     		mov	r2, #244
 1118 0732 BA18     		add	r2, r7, r2
 1119 0734 1360     		str	r3, [r2]
 1120              	.L19:
 429:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     {
 1121              		.loc 1 429 0
 1122 0736 F423     		mov	r3, #244
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 46


 1123 0738 FB18     		add	r3, r7, r3
 1124 073a 1B68     		ldr	r3, [r3]
 1125 073c 002B     		cmp	r3, #0
 1126 073e 9CD1     		bne	.L20
 442:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     }
 443:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 444:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     blkCnt--;
 1127              		.loc 1 444 0
 1128 0740 F823     		mov	r3, #248
 1129 0742 FB18     		add	r3, r7, r3
 1130 0744 1B68     		ldr	r3, [r3]
 1131 0746 013B     		sub	r3, r3, #1
 1132 0748 F822     		mov	r2, #248
 1133 074a BA18     		add	r2, r7, r2
 1134 074c 1360     		str	r3, [r2]
 445:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 446:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 447:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Store the results in the accumulators in the destination buffer. */
 448:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 449:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 450:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 451:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *__SIMD32(pOut)++ =
 1135              		.loc 1 451 0
 1136 074e 1823     		mov	r3, #24
 1137 0750 FB18     		add	r3, r7, r3
 1138 0752 1A68     		ldr	r2, [r3]
 1139 0754 111D     		add	r1, r2, #4
 1140 0756 1960     		str	r1, [r3]
 452:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       __PKHBT(__SSAT((acc0 >> 15), 16), __SSAT((acc1 >> 15), 16), 16);
 1141              		.loc 1 452 0
 1142 0758 9223     		mov	r3, #146
 1143 075a 5B00     		lsl	r3, r3, #1
 1144 075c FB18     		add	r3, r7, r3
 1145 075e 1B68     		ldr	r3, [r3]
 1146 0760 DB13     		asr	r3, r3, #15
 1147 0762 FB67     		str	r3, [r7, #124]
 1148 0764 1023     		mov	r3, #16
 1149 0766 BB67     		str	r3, [r7, #120]
 1150              	.LBB44:
 1151              	.LBB45:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1152              		.loc 2 699 0
 1153 0768 0123     		mov	r3, #1
 1154 076a 7B67     		str	r3, [r7, #116]
 700:.\Include/arm_math.h ****     {
 1155              		.loc 2 700 0
 1156 076c 0023     		mov	r3, #0
 1157 076e 3B67     		str	r3, [r7, #112]
 1158 0770 05E0     		b	.L21
 1159              	.L22:
 702:.\Include/arm_math.h ****     }
 1160              		.loc 2 702 0
 1161 0772 7B6F     		ldr	r3, [r7, #116]
 1162 0774 5B00     		lsl	r3, r3, #1
 1163 0776 7B67     		str	r3, [r7, #116]
 700:.\Include/arm_math.h ****     {
 1164              		.loc 2 700 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 47


 1165 0778 3B6F     		ldr	r3, [r7, #112]
 1166 077a 0133     		add	r3, r3, #1
 1167 077c 3B67     		str	r3, [r7, #112]
 1168              	.L21:
 1169 077e BB6F     		ldr	r3, [r7, #120]
 1170 0780 013B     		sub	r3, r3, #1
 1171 0782 396F     		ldr	r1, [r7, #112]
 1172 0784 9942     		cmp	r1, r3
 1173 0786 F4D3     		bcc	.L22
 705:.\Include/arm_math.h ****     {
 1174              		.loc 2 705 0
 1175 0788 FB6F     		ldr	r3, [r7, #124]
 1176 078a 002B     		cmp	r3, #0
 1177 078c 09DD     		ble	.L23
 707:.\Include/arm_math.h **** 
 1178              		.loc 2 707 0
 1179 078e 7B6F     		ldr	r3, [r7, #116]
 1180 0790 013B     		sub	r3, r3, #1
 1181 0792 7B67     		str	r3, [r7, #116]
 709:.\Include/arm_math.h ****       {
 1182              		.loc 2 709 0
 1183 0794 F96F     		ldr	r1, [r7, #124]
 1184 0796 7B6F     		ldr	r3, [r7, #116]
 1185 0798 9942     		cmp	r1, r3
 1186 079a 0CDD     		ble	.L58
 711:.\Include/arm_math.h ****       }
 1187              		.loc 2 711 0
 1188 079c 7B6F     		ldr	r3, [r7, #116]
 1189 079e FB67     		str	r3, [r7, #124]
 1190 07a0 0AE0     		b	.L25
 1191              	.L23:
 716:.\Include/arm_math.h **** 
 1192              		.loc 2 716 0
 1193 07a2 7B6F     		ldr	r3, [r7, #116]
 1194 07a4 5B42     		neg	r3, r3
 1195 07a6 FB66     		str	r3, [r7, #108]
 718:.\Include/arm_math.h ****       {
 1196              		.loc 2 718 0
 1197 07a8 F96F     		ldr	r1, [r7, #124]
 1198 07aa FB6E     		ldr	r3, [r7, #108]
 1199 07ac 9942     		cmp	r1, r3
 1200 07ae 03DA     		bge	.L25
 720:.\Include/arm_math.h ****       }
 1201              		.loc 2 720 0
 1202 07b0 FB6E     		ldr	r3, [r7, #108]
 1203 07b2 FB67     		str	r3, [r7, #124]
 1204 07b4 00E0     		b	.L25
 1205              	.L58:
 711:.\Include/arm_math.h ****       }
 1206              		.loc 2 711 0
 1207 07b6 C046     		mov	r8, r8
 1208              	.L25:
 723:.\Include/arm_math.h ****   }
 1209              		.loc 2 723 0
 1210 07b8 FB6F     		ldr	r3, [r7, #124]
 1211              	.LBE45:
 1212              	.LBE44:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 48


 1213              		.loc 1 452 0
 1214 07ba 1B04     		lsl	r3, r3, #16
 1215 07bc 190C     		lsr	r1, r3, #16
 1216 07be 9023     		mov	r3, #144
 1217 07c0 5B00     		lsl	r3, r3, #1
 1218 07c2 FB18     		add	r3, r7, r3
 1219 07c4 1B68     		ldr	r3, [r3]
 1220 07c6 DB13     		asr	r3, r3, #15
 1221 07c8 BB66     		str	r3, [r7, #104]
 1222 07ca 1023     		mov	r3, #16
 1223 07cc 7B66     		str	r3, [r7, #100]
 1224              	.LBB46:
 1225              	.LBB47:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1226              		.loc 2 699 0
 1227 07ce 0123     		mov	r3, #1
 1228 07d0 3B66     		str	r3, [r7, #96]
 700:.\Include/arm_math.h ****     {
 1229              		.loc 2 700 0
 1230 07d2 0023     		mov	r3, #0
 1231 07d4 FB65     		str	r3, [r7, #92]
 1232 07d6 05E0     		b	.L27
 1233              	.L28:
 702:.\Include/arm_math.h ****     }
 1234              		.loc 2 702 0
 1235 07d8 3B6E     		ldr	r3, [r7, #96]
 1236 07da 5B00     		lsl	r3, r3, #1
 1237 07dc 3B66     		str	r3, [r7, #96]
 700:.\Include/arm_math.h ****     {
 1238              		.loc 2 700 0
 1239 07de FB6D     		ldr	r3, [r7, #92]
 1240 07e0 0133     		add	r3, r3, #1
 1241 07e2 FB65     		str	r3, [r7, #92]
 1242              	.L27:
 1243 07e4 7B6E     		ldr	r3, [r7, #100]
 1244 07e6 013B     		sub	r3, r3, #1
 1245 07e8 F86D     		ldr	r0, [r7, #92]
 1246 07ea 9842     		cmp	r0, r3
 1247 07ec F4D3     		bcc	.L28
 705:.\Include/arm_math.h ****     {
 1248              		.loc 2 705 0
 1249 07ee BB6E     		ldr	r3, [r7, #104]
 1250 07f0 002B     		cmp	r3, #0
 1251 07f2 09DD     		ble	.L29
 707:.\Include/arm_math.h **** 
 1252              		.loc 2 707 0
 1253 07f4 3B6E     		ldr	r3, [r7, #96]
 1254 07f6 013B     		sub	r3, r3, #1
 1255 07f8 3B66     		str	r3, [r7, #96]
 709:.\Include/arm_math.h ****       {
 1256              		.loc 2 709 0
 1257 07fa B86E     		ldr	r0, [r7, #104]
 1258 07fc 3B6E     		ldr	r3, [r7, #96]
 1259 07fe 9842     		cmp	r0, r3
 1260 0800 0CDD     		ble	.L59
 711:.\Include/arm_math.h ****       }
 1261              		.loc 2 711 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 49


 1262 0802 3B6E     		ldr	r3, [r7, #96]
 1263 0804 BB66     		str	r3, [r7, #104]
 1264 0806 0AE0     		b	.L31
 1265              	.L29:
 716:.\Include/arm_math.h **** 
 1266              		.loc 2 716 0
 1267 0808 3B6E     		ldr	r3, [r7, #96]
 1268 080a 5B42     		neg	r3, r3
 1269 080c BB65     		str	r3, [r7, #88]
 718:.\Include/arm_math.h ****       {
 1270              		.loc 2 718 0
 1271 080e B86E     		ldr	r0, [r7, #104]
 1272 0810 BB6D     		ldr	r3, [r7, #88]
 1273 0812 9842     		cmp	r0, r3
 1274 0814 03DA     		bge	.L31
 720:.\Include/arm_math.h ****       }
 1275              		.loc 2 720 0
 1276 0816 BB6D     		ldr	r3, [r7, #88]
 1277 0818 BB66     		str	r3, [r7, #104]
 1278 081a 00E0     		b	.L31
 1279              	.L59:
 711:.\Include/arm_math.h ****       }
 1280              		.loc 2 711 0
 1281 081c C046     		mov	r8, r8
 1282              	.L31:
 723:.\Include/arm_math.h ****   }
 1283              		.loc 2 723 0
 1284 081e BB6E     		ldr	r3, [r7, #104]
 1285              	.LBE47:
 1286              	.LBE46:
 1287              		.loc 1 452 0
 1288 0820 1B04     		lsl	r3, r3, #16
 1289 0822 0B43     		orr	r3, r1
 451:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       __PKHBT(__SSAT((acc0 >> 15), 16), __SSAT((acc1 >> 15), 16), 16);
 1290              		.loc 1 451 0
 1291 0824 1360     		str	r3, [r2]
 453:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 454:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *__SIMD32(pOut)++ =
 1292              		.loc 1 454 0
 1293 0826 1823     		mov	r3, #24
 1294 0828 FB18     		add	r3, r7, r3
 1295 082a 1A68     		ldr	r2, [r3]
 1296 082c 111D     		add	r1, r2, #4
 1297 082e 1960     		str	r1, [r3]
 455:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       __PKHBT(__SSAT((acc2 >> 15), 16), __SSAT((acc3 >> 15), 16), 16);
 1298              		.loc 1 455 0
 1299 0830 8E23     		mov	r3, #142
 1300 0832 5B00     		lsl	r3, r3, #1
 1301 0834 FB18     		add	r3, r7, r3
 1302 0836 1B68     		ldr	r3, [r3]
 1303 0838 DB13     		asr	r3, r3, #15
 1304 083a 7B65     		str	r3, [r7, #84]
 1305 083c 1023     		mov	r3, #16
 1306 083e 3B65     		str	r3, [r7, #80]
 1307              	.LBB48:
 1308              	.LBB49:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 50


 1309              		.loc 2 699 0
 1310 0840 0123     		mov	r3, #1
 1311 0842 FB64     		str	r3, [r7, #76]
 700:.\Include/arm_math.h ****     {
 1312              		.loc 2 700 0
 1313 0844 0023     		mov	r3, #0
 1314 0846 BB64     		str	r3, [r7, #72]
 1315 0848 05E0     		b	.L33
 1316              	.L34:
 702:.\Include/arm_math.h ****     }
 1317              		.loc 2 702 0
 1318 084a FB6C     		ldr	r3, [r7, #76]
 1319 084c 5B00     		lsl	r3, r3, #1
 1320 084e FB64     		str	r3, [r7, #76]
 700:.\Include/arm_math.h ****     {
 1321              		.loc 2 700 0
 1322 0850 BB6C     		ldr	r3, [r7, #72]
 1323 0852 0133     		add	r3, r3, #1
 1324 0854 BB64     		str	r3, [r7, #72]
 1325              	.L33:
 1326 0856 3B6D     		ldr	r3, [r7, #80]
 1327 0858 013B     		sub	r3, r3, #1
 1328 085a B96C     		ldr	r1, [r7, #72]
 1329 085c 9942     		cmp	r1, r3
 1330 085e F4D3     		bcc	.L34
 705:.\Include/arm_math.h ****     {
 1331              		.loc 2 705 0
 1332 0860 7B6D     		ldr	r3, [r7, #84]
 1333 0862 002B     		cmp	r3, #0
 1334 0864 09DD     		ble	.L35
 707:.\Include/arm_math.h **** 
 1335              		.loc 2 707 0
 1336 0866 FB6C     		ldr	r3, [r7, #76]
 1337 0868 013B     		sub	r3, r3, #1
 1338 086a FB64     		str	r3, [r7, #76]
 709:.\Include/arm_math.h ****       {
 1339              		.loc 2 709 0
 1340 086c 796D     		ldr	r1, [r7, #84]
 1341 086e FB6C     		ldr	r3, [r7, #76]
 1342 0870 9942     		cmp	r1, r3
 1343 0872 0CDD     		ble	.L60
 711:.\Include/arm_math.h ****       }
 1344              		.loc 2 711 0
 1345 0874 FB6C     		ldr	r3, [r7, #76]
 1346 0876 7B65     		str	r3, [r7, #84]
 1347 0878 0AE0     		b	.L37
 1348              	.L35:
 716:.\Include/arm_math.h **** 
 1349              		.loc 2 716 0
 1350 087a FB6C     		ldr	r3, [r7, #76]
 1351 087c 5B42     		neg	r3, r3
 1352 087e 7B64     		str	r3, [r7, #68]
 718:.\Include/arm_math.h ****       {
 1353              		.loc 2 718 0
 1354 0880 796D     		ldr	r1, [r7, #84]
 1355 0882 7B6C     		ldr	r3, [r7, #68]
 1356 0884 9942     		cmp	r1, r3
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 51


 1357 0886 03DA     		bge	.L37
 720:.\Include/arm_math.h ****       }
 1358              		.loc 2 720 0
 1359 0888 7B6C     		ldr	r3, [r7, #68]
 1360 088a 7B65     		str	r3, [r7, #84]
 1361 088c 00E0     		b	.L37
 1362              	.L60:
 711:.\Include/arm_math.h ****       }
 1363              		.loc 2 711 0
 1364 088e C046     		mov	r8, r8
 1365              	.L37:
 723:.\Include/arm_math.h ****   }
 1366              		.loc 2 723 0
 1367 0890 7B6D     		ldr	r3, [r7, #84]
 1368              	.LBE49:
 1369              	.LBE48:
 1370              		.loc 1 455 0
 1371 0892 1B04     		lsl	r3, r3, #16
 1372 0894 190C     		lsr	r1, r3, #16
 1373 0896 8C23     		mov	r3, #140
 1374 0898 5B00     		lsl	r3, r3, #1
 1375 089a FB18     		add	r3, r7, r3
 1376 089c 1B68     		ldr	r3, [r3]
 1377 089e DB13     		asr	r3, r3, #15
 1378 08a0 3B64     		str	r3, [r7, #64]
 1379 08a2 1023     		mov	r3, #16
 1380 08a4 FB63     		str	r3, [r7, #60]
 1381              	.LBB50:
 1382              	.LBB51:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1383              		.loc 2 699 0
 1384 08a6 0123     		mov	r3, #1
 1385 08a8 BB63     		str	r3, [r7, #56]
 700:.\Include/arm_math.h ****     {
 1386              		.loc 2 700 0
 1387 08aa 0023     		mov	r3, #0
 1388 08ac 7B63     		str	r3, [r7, #52]
 1389 08ae 05E0     		b	.L39
 1390              	.L40:
 702:.\Include/arm_math.h ****     }
 1391              		.loc 2 702 0
 1392 08b0 BB6B     		ldr	r3, [r7, #56]
 1393 08b2 5B00     		lsl	r3, r3, #1
 1394 08b4 BB63     		str	r3, [r7, #56]
 700:.\Include/arm_math.h ****     {
 1395              		.loc 2 700 0
 1396 08b6 7B6B     		ldr	r3, [r7, #52]
 1397 08b8 0133     		add	r3, r3, #1
 1398 08ba 7B63     		str	r3, [r7, #52]
 1399              	.L39:
 1400 08bc FB6B     		ldr	r3, [r7, #60]
 1401 08be 013B     		sub	r3, r3, #1
 1402 08c0 786B     		ldr	r0, [r7, #52]
 1403 08c2 9842     		cmp	r0, r3
 1404 08c4 F4D3     		bcc	.L40
 705:.\Include/arm_math.h ****     {
 1405              		.loc 2 705 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 52


 1406 08c6 3B6C     		ldr	r3, [r7, #64]
 1407 08c8 002B     		cmp	r3, #0
 1408 08ca 09DD     		ble	.L41
 707:.\Include/arm_math.h **** 
 1409              		.loc 2 707 0
 1410 08cc BB6B     		ldr	r3, [r7, #56]
 1411 08ce 013B     		sub	r3, r3, #1
 1412 08d0 BB63     		str	r3, [r7, #56]
 709:.\Include/arm_math.h ****       {
 1413              		.loc 2 709 0
 1414 08d2 386C     		ldr	r0, [r7, #64]
 1415 08d4 BB6B     		ldr	r3, [r7, #56]
 1416 08d6 9842     		cmp	r0, r3
 1417 08d8 0CDD     		ble	.L61
 711:.\Include/arm_math.h ****       }
 1418              		.loc 2 711 0
 1419 08da BB6B     		ldr	r3, [r7, #56]
 1420 08dc 3B64     		str	r3, [r7, #64]
 1421 08de 0AE0     		b	.L43
 1422              	.L41:
 716:.\Include/arm_math.h **** 
 1423              		.loc 2 716 0
 1424 08e0 BB6B     		ldr	r3, [r7, #56]
 1425 08e2 5B42     		neg	r3, r3
 1426 08e4 3B63     		str	r3, [r7, #48]
 718:.\Include/arm_math.h ****       {
 1427              		.loc 2 718 0
 1428 08e6 386C     		ldr	r0, [r7, #64]
 1429 08e8 3B6B     		ldr	r3, [r7, #48]
 1430 08ea 9842     		cmp	r0, r3
 1431 08ec 03DA     		bge	.L43
 720:.\Include/arm_math.h ****       }
 1432              		.loc 2 720 0
 1433 08ee 3B6B     		ldr	r3, [r7, #48]
 1434 08f0 3B64     		str	r3, [r7, #64]
 1435 08f2 00E0     		b	.L43
 1436              	.L61:
 711:.\Include/arm_math.h ****       }
 1437              		.loc 2 711 0
 1438 08f4 C046     		mov	r8, r8
 1439              	.L43:
 723:.\Include/arm_math.h ****   }
 1440              		.loc 2 723 0
 1441 08f6 3B6C     		ldr	r3, [r7, #64]
 1442              	.LBE51:
 1443              	.LBE50:
 1444              		.loc 1 455 0
 1445 08f8 1B04     		lsl	r3, r3, #16
 1446 08fa 0B43     		orr	r3, r1
 454:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       __PKHBT(__SSAT((acc2 >> 15), 16), __SSAT((acc3 >> 15), 16), 16);
 1447              		.loc 1 454 0
 1448 08fc 1360     		str	r3, [r2]
 456:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 457:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 458:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #else
 459:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 460:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *__SIMD32(pOut)++ =
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 53


 461:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       __PKHBT(__SSAT((acc1 >> 15), 16), __SSAT((acc0 >> 15), 16), 16);
 462:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 463:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *__SIMD32(pOut)++ =
 464:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       __PKHBT(__SSAT((acc3 >> 15), 16), __SSAT((acc2 >> 15), 16), 16);
 465:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 466:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 467:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 468:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** #endif /*      #ifndef ARM_MATH_BIG_ENDIAN       */
 469:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 470:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Initialization of inputB pointer */
 471:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     pIn2 = py;
 1449              		.loc 1 471 0
 1450 08fe EC23     		mov	r3, #236
 1451 0900 FB18     		add	r3, r7, r3
 1452 0902 1B68     		ldr	r3, [r3]
 1453 0904 7A1D     		add	r2, r7, #5
 1454 0906 FF32     		add	r2, r2, #255
 1455 0908 1360     		str	r3, [r2]
 472:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 473:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     pScratch1 += 4u;
 1456              		.loc 1 473 0
 1457 090a 9A23     		mov	r3, #154
 1458 090c 5B00     		lsl	r3, r3, #1
 1459 090e FB18     		add	r3, r7, r3
 1460 0910 1B68     		ldr	r3, [r3]
 1461 0912 0833     		add	r3, r3, #8
 1462 0914 9A22     		mov	r2, #154
 1463 0916 5200     		lsl	r2, r2, #1
 1464 0918 BA18     		add	r2, r7, r2
 1465 091a 1360     		str	r3, [r2]
 1466              	.L8:
 271:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 1467              		.loc 1 271 0
 1468 091c F823     		mov	r3, #248
 1469 091e FB18     		add	r3, r7, r3
 1470 0920 1B68     		ldr	r3, [r3]
 1471 0922 002B     		cmp	r3, #0
 1472 0924 00D0     		beq	.LCB1308
 1473 0926 83E4     		b	.L45	@long jump
 1474              	.LCB1308:
 474:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 475:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 476:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 477:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 478:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   blkCnt = (srcALen + srcBLen - 1u) & 0x3;
 1475              		.loc 1 478 0
 1476 0928 BA68     		ldr	r2, [r7, #8]
 1477 092a 3B68     		ldr	r3, [r7]
 1478 092c D318     		add	r3, r2, r3
 1479 092e 013B     		sub	r3, r3, #1
 1480 0930 0322     		mov	r2, #3
 1481 0932 1340     		and	r3, r2
 1482 0934 F822     		mov	r2, #248
 1483 0936 BA18     		add	r2, r7, r2
 1484 0938 1360     		str	r3, [r2]
 479:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 480:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   /* Calculate convolution for remaining samples of Bigger length sequence */
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 54


 481:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   while (blkCnt > 0)
 1485              		.loc 1 481 0
 1486 093a C2E0     		b	.L46
 1487              	.L57:
 482:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 483:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Initialze temporary scratch pointer as scratch1 */
 484:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     pScr1 = pScratch1;
 1488              		.loc 1 484 0
 1489 093c 9A23     		mov	r3, #154
 1490 093e 5B00     		lsl	r3, r3, #1
 1491 0940 FB18     		add	r3, r7, r3
 1492 0942 1B68     		ldr	r3, [r3]
 1493 0944 7B61     		str	r3, [r7, #20]
 485:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 486:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Clear Accumlators */
 487:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     acc0 = 0;
 1494              		.loc 1 487 0
 1495 0946 0023     		mov	r3, #0
 1496 0948 9222     		mov	r2, #146
 1497 094a 5200     		lsl	r2, r2, #1
 1498 094c BA18     		add	r2, r7, r2
 1499 094e 1360     		str	r3, [r2]
 488:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 489:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     tapCnt = (srcBLen) >> 1u;
 1500              		.loc 1 489 0
 1501 0950 3B68     		ldr	r3, [r7]
 1502 0952 5B08     		lsr	r3, r3, #1
 1503 0954 F422     		mov	r2, #244
 1504 0956 BA18     		add	r2, r7, r2
 1505 0958 1360     		str	r3, [r2]
 490:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 491:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     while (tapCnt > 0u)
 1506              		.loc 1 491 0
 1507 095a 36E0     		b	.L47
 1508              	.L48:
 492:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     {
 493:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 494:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc0 += (*pScr1++ * *pIn2++);
 1509              		.loc 1 494 0
 1510 095c 7B69     		ldr	r3, [r7, #20]
 1511 095e 9A1C     		add	r2, r3, #2
 1512 0960 7A61     		str	r2, [r7, #20]
 1513 0962 1B88     		ldrh	r3, [r3]
 1514 0964 1AB2     		sxth	r2, r3
 1515 0966 7B1D     		add	r3, r7, #5
 1516 0968 FF33     		add	r3, r3, #255
 1517 096a 1B68     		ldr	r3, [r3]
 1518 096c 991C     		add	r1, r3, #2
 1519 096e 781D     		add	r0, r7, #5
 1520 0970 FF30     		add	r0, r0, #255
 1521 0972 0160     		str	r1, [r0]
 1522 0974 1B88     		ldrh	r3, [r3]
 1523 0976 1BB2     		sxth	r3, r3
 1524 0978 5343     		mul	r3, r2
 1525 097a 9222     		mov	r2, #146
 1526 097c 5200     		lsl	r2, r2, #1
 1527 097e BA18     		add	r2, r7, r2
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 55


 1528 0980 1268     		ldr	r2, [r2]
 1529 0982 D318     		add	r3, r2, r3
 1530 0984 9222     		mov	r2, #146
 1531 0986 5200     		lsl	r2, r2, #1
 1532 0988 BA18     		add	r2, r7, r2
 1533 098a 1360     		str	r3, [r2]
 495:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc0 += (*pScr1++ * *pIn2++);
 1534              		.loc 1 495 0
 1535 098c 7B69     		ldr	r3, [r7, #20]
 1536 098e 9A1C     		add	r2, r3, #2
 1537 0990 7A61     		str	r2, [r7, #20]
 1538 0992 1B88     		ldrh	r3, [r3]
 1539 0994 1AB2     		sxth	r2, r3
 1540 0996 7B1D     		add	r3, r7, #5
 1541 0998 FF33     		add	r3, r3, #255
 1542 099a 1B68     		ldr	r3, [r3]
 1543 099c 991C     		add	r1, r3, #2
 1544 099e 781D     		add	r0, r7, #5
 1545 09a0 FF30     		add	r0, r0, #255
 1546 09a2 0160     		str	r1, [r0]
 1547 09a4 1B88     		ldrh	r3, [r3]
 1548 09a6 1BB2     		sxth	r3, r3
 1549 09a8 5343     		mul	r3, r2
 1550 09aa 9222     		mov	r2, #146
 1551 09ac 5200     		lsl	r2, r2, #1
 1552 09ae BA18     		add	r2, r7, r2
 1553 09b0 1268     		ldr	r2, [r2]
 1554 09b2 D318     		add	r3, r2, r3
 1555 09b4 9222     		mov	r2, #146
 1556 09b6 5200     		lsl	r2, r2, #1
 1557 09b8 BA18     		add	r2, r7, r2
 1558 09ba 1360     		str	r3, [r2]
 496:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 497:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* Decrement the loop counter */
 498:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       tapCnt--;
 1559              		.loc 1 498 0
 1560 09bc F423     		mov	r3, #244
 1561 09be FB18     		add	r3, r7, r3
 1562 09c0 1B68     		ldr	r3, [r3]
 1563 09c2 013B     		sub	r3, r3, #1
 1564 09c4 F422     		mov	r2, #244
 1565 09c6 BA18     		add	r2, r7, r2
 1566 09c8 1360     		str	r3, [r2]
 1567              	.L47:
 491:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     {
 1568              		.loc 1 491 0
 1569 09ca F423     		mov	r3, #244
 1570 09cc FB18     		add	r3, r7, r3
 1571 09ce 1B68     		ldr	r3, [r3]
 1572 09d0 002B     		cmp	r3, #0
 1573 09d2 C3D1     		bne	.L48
 499:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     }
 500:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 501:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     tapCnt = (srcBLen) & 1u;
 1574              		.loc 1 501 0
 1575 09d4 3B68     		ldr	r3, [r7]
 1576 09d6 0122     		mov	r2, #1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 56


 1577 09d8 1340     		and	r3, r2
 1578 09da F422     		mov	r2, #244
 1579 09dc BA18     		add	r2, r7, r2
 1580 09de 1360     		str	r3, [r2]
 502:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 503:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* apply same above for remaining samples of smaller length sequence */
 504:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     while (tapCnt > 0u)
 1581              		.loc 1 504 0
 1582 09e0 1EE0     		b	.L49
 1583              	.L50:
 505:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     {
 506:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 507:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* accumlate the results */
 508:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       acc0 += (*pScr1++ * *pIn2++);
 1584              		.loc 1 508 0
 1585 09e2 7B69     		ldr	r3, [r7, #20]
 1586 09e4 9A1C     		add	r2, r3, #2
 1587 09e6 7A61     		str	r2, [r7, #20]
 1588 09e8 1B88     		ldrh	r3, [r3]
 1589 09ea 1AB2     		sxth	r2, r3
 1590 09ec 7B1D     		add	r3, r7, #5
 1591 09ee FF33     		add	r3, r3, #255
 1592 09f0 1B68     		ldr	r3, [r3]
 1593 09f2 991C     		add	r1, r3, #2
 1594 09f4 781D     		add	r0, r7, #5
 1595 09f6 FF30     		add	r0, r0, #255
 1596 09f8 0160     		str	r1, [r0]
 1597 09fa 1B88     		ldrh	r3, [r3]
 1598 09fc 1BB2     		sxth	r3, r3
 1599 09fe 5343     		mul	r3, r2
 1600 0a00 9222     		mov	r2, #146
 1601 0a02 5200     		lsl	r2, r2, #1
 1602 0a04 BA18     		add	r2, r7, r2
 1603 0a06 1268     		ldr	r2, [r2]
 1604 0a08 D318     		add	r3, r2, r3
 1605 0a0a 9222     		mov	r2, #146
 1606 0a0c 5200     		lsl	r2, r2, #1
 1607 0a0e BA18     		add	r2, r7, r2
 1608 0a10 1360     		str	r3, [r2]
 509:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 510:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       /* Decrement the loop counter */
 511:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****       tapCnt--;
 1609              		.loc 1 511 0
 1610 0a12 F423     		mov	r3, #244
 1611 0a14 FB18     		add	r3, r7, r3
 1612 0a16 1B68     		ldr	r3, [r3]
 1613 0a18 013B     		sub	r3, r3, #1
 1614 0a1a F422     		mov	r2, #244
 1615 0a1c BA18     		add	r2, r7, r2
 1616 0a1e 1360     		str	r3, [r2]
 1617              	.L49:
 504:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     {
 1618              		.loc 1 504 0
 1619 0a20 F423     		mov	r3, #244
 1620 0a22 FB18     		add	r3, r7, r3
 1621 0a24 1B68     		ldr	r3, [r3]
 1622 0a26 002B     		cmp	r3, #0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 57


 1623 0a28 DBD1     		bne	.L50
 512:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     }
 513:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 514:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     blkCnt--;
 1624              		.loc 1 514 0
 1625 0a2a F823     		mov	r3, #248
 1626 0a2c FB18     		add	r3, r7, r3
 1627 0a2e 1B68     		ldr	r3, [r3]
 1628 0a30 013B     		sub	r3, r3, #1
 1629 0a32 F822     		mov	r2, #248
 1630 0a34 BA18     		add	r2, r7, r2
 1631 0a36 1360     		str	r3, [r2]
 515:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 516:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* The result is in 2.30 format.  Convert to 1.15 with saturation.
 517:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****      ** Then store the output in the destination buffer. */
 518:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     *pOut++ = (q15_t) (__SSAT((acc0 >> 15), 16));
 1632              		.loc 1 518 0
 1633 0a38 BB69     		ldr	r3, [r7, #24]
 1634 0a3a 9A1C     		add	r2, r3, #2
 1635 0a3c BA61     		str	r2, [r7, #24]
 1636 0a3e 9222     		mov	r2, #146
 1637 0a40 5200     		lsl	r2, r2, #1
 1638 0a42 BA18     		add	r2, r7, r2
 1639 0a44 1268     		ldr	r2, [r2]
 1640 0a46 D213     		asr	r2, r2, #15
 1641 0a48 FA62     		str	r2, [r7, #44]
 1642 0a4a 1022     		mov	r2, #16
 1643 0a4c BA62     		str	r2, [r7, #40]
 1644              	.LBB52:
 1645              	.LBB53:
 699:.\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 1646              		.loc 2 699 0
 1647 0a4e 0122     		mov	r2, #1
 1648 0a50 7A62     		str	r2, [r7, #36]
 700:.\Include/arm_math.h ****     {
 1649              		.loc 2 700 0
 1650 0a52 0022     		mov	r2, #0
 1651 0a54 3A62     		str	r2, [r7, #32]
 1652 0a56 05E0     		b	.L51
 1653              	.L52:
 702:.\Include/arm_math.h ****     }
 1654              		.loc 2 702 0
 1655 0a58 7A6A     		ldr	r2, [r7, #36]
 1656 0a5a 5200     		lsl	r2, r2, #1
 1657 0a5c 7A62     		str	r2, [r7, #36]
 700:.\Include/arm_math.h ****     {
 1658              		.loc 2 700 0
 1659 0a5e 3A6A     		ldr	r2, [r7, #32]
 1660 0a60 0132     		add	r2, r2, #1
 1661 0a62 3A62     		str	r2, [r7, #32]
 1662              	.L51:
 1663 0a64 BA6A     		ldr	r2, [r7, #40]
 1664 0a66 013A     		sub	r2, r2, #1
 1665 0a68 396A     		ldr	r1, [r7, #32]
 1666 0a6a 9142     		cmp	r1, r2
 1667 0a6c F4D3     		bcc	.L52
 705:.\Include/arm_math.h ****     {
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 58


 1668              		.loc 2 705 0
 1669 0a6e FA6A     		ldr	r2, [r7, #44]
 1670 0a70 002A     		cmp	r2, #0
 1671 0a72 09DD     		ble	.L53
 707:.\Include/arm_math.h **** 
 1672              		.loc 2 707 0
 1673 0a74 7A6A     		ldr	r2, [r7, #36]
 1674 0a76 013A     		sub	r2, r2, #1
 1675 0a78 7A62     		str	r2, [r7, #36]
 709:.\Include/arm_math.h ****       {
 1676              		.loc 2 709 0
 1677 0a7a F96A     		ldr	r1, [r7, #44]
 1678 0a7c 7A6A     		ldr	r2, [r7, #36]
 1679 0a7e 9142     		cmp	r1, r2
 1680 0a80 0CDD     		ble	.L62
 711:.\Include/arm_math.h ****       }
 1681              		.loc 2 711 0
 1682 0a82 7A6A     		ldr	r2, [r7, #36]
 1683 0a84 FA62     		str	r2, [r7, #44]
 1684 0a86 0AE0     		b	.L55
 1685              	.L53:
 716:.\Include/arm_math.h **** 
 1686              		.loc 2 716 0
 1687 0a88 7A6A     		ldr	r2, [r7, #36]
 1688 0a8a 5242     		neg	r2, r2
 1689 0a8c FA61     		str	r2, [r7, #28]
 718:.\Include/arm_math.h ****       {
 1690              		.loc 2 718 0
 1691 0a8e F96A     		ldr	r1, [r7, #44]
 1692 0a90 FA69     		ldr	r2, [r7, #28]
 1693 0a92 9142     		cmp	r1, r2
 1694 0a94 03DA     		bge	.L55
 720:.\Include/arm_math.h ****       }
 1695              		.loc 2 720 0
 1696 0a96 FA69     		ldr	r2, [r7, #28]
 1697 0a98 FA62     		str	r2, [r7, #44]
 1698 0a9a 00E0     		b	.L55
 1699              	.L62:
 711:.\Include/arm_math.h ****       }
 1700              		.loc 2 711 0
 1701 0a9c C046     		mov	r8, r8
 1702              	.L55:
 723:.\Include/arm_math.h ****   }
 1703              		.loc 2 723 0
 1704 0a9e FA6A     		ldr	r2, [r7, #44]
 1705              	.LBE53:
 1706              	.LBE52:
 1707              		.loc 1 518 0
 1708 0aa0 92B2     		uxth	r2, r2
 1709 0aa2 1A80     		strh	r2, [r3]
 519:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 520:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     /* Initialization of inputB pointer */
 521:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     pIn2 = py;
 1710              		.loc 1 521 0
 1711 0aa4 EC23     		mov	r3, #236
 1712 0aa6 FB18     		add	r3, r7, r3
 1713 0aa8 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 59


 1714 0aaa 7A1D     		add	r2, r7, #5
 1715 0aac FF32     		add	r2, r2, #255
 1716 0aae 1360     		str	r3, [r2]
 522:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 523:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****     pScratch1 += 1u;
 1717              		.loc 1 523 0
 1718 0ab0 9A23     		mov	r3, #154
 1719 0ab2 5B00     		lsl	r3, r3, #1
 1720 0ab4 FB18     		add	r3, r7, r3
 1721 0ab6 1B68     		ldr	r3, [r3]
 1722 0ab8 0233     		add	r3, r3, #2
 1723 0aba 9A22     		mov	r2, #154
 1724 0abc 5200     		lsl	r2, r2, #1
 1725 0abe BA18     		add	r2, r7, r2
 1726 0ac0 1360     		str	r3, [r2]
 1727              	.L46:
 481:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   {
 1728              		.loc 1 481 0
 1729 0ac2 F823     		mov	r3, #248
 1730 0ac4 FB18     		add	r3, r7, r3
 1731 0ac6 1B68     		ldr	r3, [r3]
 1732 0ac8 002B     		cmp	r3, #0
 1733 0aca 00D0     		beq	.LCB1550
 1734 0acc 36E7     		b	.L57	@long jump
 1735              	.LCB1550:
 524:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 525:Source\FilteringFunctions/arm_conv_fast_opt_q15.c ****   }
 526:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** 
 527:Source\FilteringFunctions/arm_conv_fast_opt_q15.c **** }
 1736              		.loc 1 527 0
 1737 0ace BD46     		mov	sp, r7
 1738 0ad0 4AB0     		add	sp, sp, #296
 1739              		@ sp needed
 1740 0ad2 80BD     		pop	{r7, pc}
 1741              		.cfi_endproc
 1742              	.LFE82:
 1743              		.size	arm_conv_fast_opt_q15, .-arm_conv_fast_opt_q15
 1744              		.text
 1745              	.Letext0:
 1746              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1747              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1748              		.section	.debug_info,"",%progbits
 1749              	.Ldebug_info0:
 1750 0000 1A060000 		.4byte	0x61a
 1751 0004 0400     		.2byte	0x4
 1752 0006 00000000 		.4byte	.Ldebug_abbrev0
 1753 000a 04       		.byte	0x4
 1754 000b 01       		.uleb128 0x1
 1755 000c 7D010000 		.4byte	.LASF45
 1756 0010 01       		.byte	0x1
 1757 0011 34010000 		.4byte	.LASF46
 1758 0015 39000000 		.4byte	.LASF47
 1759 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1760 001d 00000000 		.4byte	0
 1761 0021 00000000 		.4byte	.Ldebug_line0
 1762 0025 02       		.uleb128 0x2
 1763 0026 01       		.byte	0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 60


 1764 0027 06       		.byte	0x6
 1765 0028 7F020000 		.4byte	.LASF0
 1766 002c 02       		.uleb128 0x2
 1767 002d 01       		.byte	0x1
 1768 002e 08       		.byte	0x8
 1769 002f A5000000 		.4byte	.LASF1
 1770 0033 03       		.uleb128 0x3
 1771 0034 05000000 		.4byte	.LASF4
 1772 0038 03       		.byte	0x3
 1773 0039 29       		.byte	0x29
 1774 003a 3E000000 		.4byte	0x3e
 1775 003e 02       		.uleb128 0x2
 1776 003f 02       		.byte	0x2
 1777 0040 05       		.byte	0x5
 1778 0041 4A020000 		.4byte	.LASF2
 1779 0045 02       		.uleb128 0x2
 1780 0046 02       		.byte	0x2
 1781 0047 07       		.byte	0x7
 1782 0048 D9000000 		.4byte	.LASF3
 1783 004c 03       		.uleb128 0x3
 1784 004d 2F000000 		.4byte	.LASF5
 1785 0051 03       		.byte	0x3
 1786 0052 3F       		.byte	0x3f
 1787 0053 57000000 		.4byte	0x57
 1788 0057 02       		.uleb128 0x2
 1789 0058 04       		.byte	0x4
 1790 0059 05       		.byte	0x5
 1791 005a 64020000 		.4byte	.LASF6
 1792 005e 03       		.uleb128 0x3
 1793 005f 1C010000 		.4byte	.LASF7
 1794 0063 03       		.byte	0x3
 1795 0064 41       		.byte	0x41
 1796 0065 69000000 		.4byte	0x69
 1797 0069 02       		.uleb128 0x2
 1798 006a 04       		.byte	0x4
 1799 006b 07       		.byte	0x7
 1800 006c C7000000 		.4byte	.LASF8
 1801 0070 02       		.uleb128 0x2
 1802 0071 08       		.byte	0x8
 1803 0072 05       		.byte	0x5
 1804 0073 2F020000 		.4byte	.LASF9
 1805 0077 02       		.uleb128 0x2
 1806 0078 08       		.byte	0x8
 1807 0079 07       		.byte	0x7
 1808 007a 66010000 		.4byte	.LASF10
 1809 007e 04       		.uleb128 0x4
 1810 007f 04       		.byte	0x4
 1811 0080 05       		.byte	0x5
 1812 0081 696E7400 		.ascii	"int\000"
 1813 0085 02       		.uleb128 0x2
 1814 0086 04       		.byte	0x4
 1815 0087 07       		.byte	0x7
 1816 0088 27010000 		.4byte	.LASF11
 1817 008c 03       		.uleb128 0x3
 1818 008d 0F020000 		.4byte	.LASF12
 1819 0091 04       		.byte	0x4
 1820 0092 20       		.byte	0x20
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 61


 1821 0093 33000000 		.4byte	0x33
 1822 0097 03       		.uleb128 0x3
 1823 0098 1E020000 		.4byte	.LASF13
 1824 009c 04       		.byte	0x4
 1825 009d 2C       		.byte	0x2c
 1826 009e 4C000000 		.4byte	0x4c
 1827 00a2 03       		.uleb128 0x3
 1828 00a3 5B020000 		.4byte	.LASF14
 1829 00a7 04       		.byte	0x4
 1830 00a8 2D       		.byte	0x2d
 1831 00a9 5E000000 		.4byte	0x5e
 1832 00ad 02       		.uleb128 0x2
 1833 00ae 04       		.byte	0x4
 1834 00af 07       		.byte	0x7
 1835 00b0 26020000 		.4byte	.LASF15
 1836 00b4 02       		.uleb128 0x2
 1837 00b5 01       		.byte	0x1
 1838 00b6 08       		.byte	0x8
 1839 00b7 3D020000 		.4byte	.LASF16
 1840 00bb 02       		.uleb128 0x2
 1841 00bc 08       		.byte	0x8
 1842 00bd 04       		.byte	0x4
 1843 00be 15010000 		.4byte	.LASF17
 1844 00c2 02       		.uleb128 0x2
 1845 00c3 04       		.byte	0x4
 1846 00c4 04       		.byte	0x4
 1847 00c5 79020000 		.4byte	.LASF18
 1848 00c9 02       		.uleb128 0x2
 1849 00ca 08       		.byte	0x8
 1850 00cb 04       		.byte	0x4
 1851 00cc 6D020000 		.4byte	.LASF19
 1852 00d0 05       		.uleb128 0x5
 1853 00d1 94000000 		.4byte	.LASF20
 1854 00d5 02       		.byte	0x2
 1855 00d6 9601     		.2byte	0x196
 1856 00d8 8C000000 		.4byte	0x8c
 1857 00dc 05       		.uleb128 0x5
 1858 00dd 9F000000 		.4byte	.LASF21
 1859 00e1 02       		.byte	0x2
 1860 00e2 9B01     		.2byte	0x19b
 1861 00e4 97000000 		.4byte	0x97
 1862 00e8 06       		.uleb128 0x6
 1863 00e9 04       		.byte	0x4
 1864 00ea D0000000 		.4byte	0xd0
 1865 00ee 07       		.uleb128 0x7
 1866 00ef BF000000 		.4byte	.LASF22
 1867 00f3 02       		.byte	0x2
 1868 00f4 B303     		.2byte	0x3b3
 1869 00f6 A2000000 		.4byte	0xa2
 1870 00fa 03       		.byte	0x3
 1871 00fb 20010000 		.4byte	0x120
 1872 00ff 08       		.uleb128 0x8
 1873 0100 7800     		.ascii	"x\000"
 1874 0102 02       		.byte	0x2
 1875 0103 B403     		.2byte	0x3b4
 1876 0105 A2000000 		.4byte	0xa2
 1877 0109 08       		.uleb128 0x8
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 62


 1878 010a 7900     		.ascii	"y\000"
 1879 010c 02       		.byte	0x2
 1880 010d B503     		.2byte	0x3b5
 1881 010f A2000000 		.4byte	0xa2
 1882 0113 08       		.uleb128 0x8
 1883 0114 73756D00 		.ascii	"sum\000"
 1884 0118 02       		.byte	0x2
 1885 0119 B603     		.2byte	0x3b6
 1886 011b A2000000 		.4byte	0xa2
 1887 011f 00       		.byte	0
 1888 0120 07       		.uleb128 0x7
 1889 0121 8B000000 		.4byte	.LASF23
 1890 0125 02       		.byte	0x2
 1891 0126 C103     		.2byte	0x3c1
 1892 0128 A2000000 		.4byte	0xa2
 1893 012c 03       		.byte	0x3
 1894 012d 52010000 		.4byte	0x152
 1895 0131 08       		.uleb128 0x8
 1896 0132 7800     		.ascii	"x\000"
 1897 0134 02       		.byte	0x2
 1898 0135 C203     		.2byte	0x3c2
 1899 0137 A2000000 		.4byte	0xa2
 1900 013b 08       		.uleb128 0x8
 1901 013c 7900     		.ascii	"y\000"
 1902 013e 02       		.byte	0x2
 1903 013f C303     		.2byte	0x3c3
 1904 0141 A2000000 		.4byte	0xa2
 1905 0145 08       		.uleb128 0x8
 1906 0146 73756D00 		.ascii	"sum\000"
 1907 014a 02       		.byte	0x2
 1908 014b C403     		.2byte	0x3c4
 1909 014d A2000000 		.4byte	0xa2
 1910 0151 00       		.byte	0
 1911 0152 07       		.uleb128 0x7
 1912 0153 17020000 		.4byte	.LASF24
 1913 0157 02       		.byte	0x2
 1914 0158 B402     		.2byte	0x2b4
 1915 015a DC000000 		.4byte	0xdc
 1916 015e 03       		.byte	0x3
 1917 015f 9A010000 		.4byte	0x19a
 1918 0163 08       		.uleb128 0x8
 1919 0164 7800     		.ascii	"x\000"
 1920 0166 02       		.byte	0x2
 1921 0167 B502     		.2byte	0x2b5
 1922 0169 DC000000 		.4byte	0xdc
 1923 016d 08       		.uleb128 0x8
 1924 016e 7900     		.ascii	"y\000"
 1925 0170 02       		.byte	0x2
 1926 0171 B602     		.2byte	0x2b6
 1927 0173 A2000000 		.4byte	0xa2
 1928 0177 09       		.uleb128 0x9
 1929 0178 54020000 		.4byte	.LASF25
 1930 017c 02       		.byte	0x2
 1931 017d B802     		.2byte	0x2b8
 1932 017f 97000000 		.4byte	0x97
 1933 0183 09       		.uleb128 0x9
 1934 0184 07010000 		.4byte	.LASF26
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 63


 1935 0188 02       		.byte	0x2
 1936 0189 B802     		.2byte	0x2b8
 1937 018b 97000000 		.4byte	0x97
 1938 018f 0A       		.uleb128 0xa
 1939 0190 6900     		.ascii	"i\000"
 1940 0192 02       		.byte	0x2
 1941 0193 B902     		.2byte	0x2b9
 1942 0195 A2000000 		.4byte	0xa2
 1943 0199 00       		.byte	0
 1944 019a 0B       		.uleb128 0xb
 1945 019b EC000000 		.4byte	.LASF48
 1946 019f 01       		.byte	0x1
 1947 01a0 47       		.byte	0x47
 1948 01a1 00000000 		.4byte	.LFB82
 1949 01a5 D40A0000 		.4byte	.LFE82-.LFB82
 1950 01a9 01       		.uleb128 0x1
 1951 01aa 9C       		.byte	0x9c
 1952 01ab 0C       		.uleb128 0xc
 1953 01ac 0F000000 		.4byte	.LASF27
 1954 01b0 01       		.byte	0x1
 1955 01b1 48       		.byte	0x48
 1956 01b2 E8000000 		.4byte	0xe8
 1957 01b6 03       		.uleb128 0x3
 1958 01b7 91       		.byte	0x91
 1959 01b8 DC7D     		.sleb128 -292
 1960 01ba 0C       		.uleb128 0xc
 1961 01bb 42020000 		.4byte	.LASF28
 1962 01bf 01       		.byte	0x1
 1963 01c0 49       		.byte	0x49
 1964 01c1 A2000000 		.4byte	0xa2
 1965 01c5 03       		.uleb128 0x3
 1966 01c6 91       		.byte	0x91
 1967 01c7 D87D     		.sleb128 -296
 1968 01c9 0C       		.uleb128 0xc
 1969 01ca 15000000 		.4byte	.LASF29
 1970 01ce 01       		.byte	0x1
 1971 01cf 4A       		.byte	0x4a
 1972 01d0 E8000000 		.4byte	0xe8
 1973 01d4 03       		.uleb128 0x3
 1974 01d5 91       		.byte	0x91
 1975 01d6 D47D     		.sleb128 -300
 1976 01d8 0C       		.uleb128 0xc
 1977 01d9 8B020000 		.4byte	.LASF30
 1978 01dd 01       		.byte	0x1
 1979 01de 4B       		.byte	0x4b
 1980 01df A2000000 		.4byte	0xa2
 1981 01e3 03       		.uleb128 0x3
 1982 01e4 91       		.byte	0x91
 1983 01e5 D07D     		.sleb128 -304
 1984 01e7 0C       		.uleb128 0xc
 1985 01e8 02010000 		.4byte	.LASF31
 1986 01ec 01       		.byte	0x1
 1987 01ed 4C       		.byte	0x4c
 1988 01ee E8000000 		.4byte	0xe8
 1989 01f2 02       		.uleb128 0x2
 1990 01f3 91       		.byte	0x91
 1991 01f4 00       		.sleb128 0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 64


 1992 01f5 0C       		.uleb128 0xc
 1993 01f6 1B000000 		.4byte	.LASF32
 1994 01fa 01       		.byte	0x1
 1995 01fb 4D       		.byte	0x4d
 1996 01fc E8000000 		.4byte	0xe8
 1997 0200 02       		.uleb128 0x2
 1998 0201 91       		.byte	0x91
 1999 0202 04       		.sleb128 4
 2000 0203 0C       		.uleb128 0xc
 2001 0204 25000000 		.4byte	.LASF33
 2002 0208 01       		.byte	0x1
 2003 0209 4E       		.byte	0x4e
 2004 020a E8000000 		.4byte	0xe8
 2005 020e 02       		.uleb128 0x2
 2006 020f 91       		.byte	0x91
 2007 0210 08       		.sleb128 8
 2008 0211 0D       		.uleb128 0xd
 2009 0212 98020000 		.4byte	.LASF34
 2010 0216 01       		.byte	0x1
 2011 0217 50       		.byte	0x50
 2012 0218 DC000000 		.4byte	0xdc
 2013 021c 02       		.uleb128 0x2
 2014 021d 91       		.byte	0x91
 2015 021e 74       		.sleb128 -12
 2016 021f 0D       		.uleb128 0xd
 2017 0220 9D020000 		.4byte	.LASF35
 2018 0224 01       		.byte	0x1
 2019 0225 50       		.byte	0x50
 2020 0226 DC000000 		.4byte	0xdc
 2021 022a 02       		.uleb128 0x2
 2022 022b 91       		.byte	0x91
 2023 022c 70       		.sleb128 -16
 2024 022d 0D       		.uleb128 0xd
 2025 022e A2020000 		.4byte	.LASF36
 2026 0232 01       		.byte	0x1
 2027 0233 50       		.byte	0x50
 2028 0234 DC000000 		.4byte	0xdc
 2029 0238 02       		.uleb128 0x2
 2030 0239 91       		.byte	0x91
 2031 023a 6C       		.sleb128 -20
 2032 023b 0D       		.uleb128 0xd
 2033 023c 00000000 		.4byte	.LASF37
 2034 0240 01       		.byte	0x1
 2035 0241 50       		.byte	0x50
 2036 0242 DC000000 		.4byte	0xdc
 2037 0246 02       		.uleb128 0x2
 2038 0247 91       		.byte	0x91
 2039 0248 68       		.sleb128 -24
 2040 0249 0E       		.uleb128 0xe
 2041 024a 783100   		.ascii	"x1\000"
 2042 024d 01       		.byte	0x1
 2043 024e 51       		.byte	0x51
 2044 024f DC000000 		.4byte	0xdc
 2045 0253 02       		.uleb128 0x2
 2046 0254 91       		.byte	0x91
 2047 0255 64       		.sleb128 -28
 2048 0256 0E       		.uleb128 0xe
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 65


 2049 0257 783200   		.ascii	"x2\000"
 2050 025a 01       		.byte	0x1
 2051 025b 51       		.byte	0x51
 2052 025c DC000000 		.4byte	0xdc
 2053 0260 02       		.uleb128 0x2
 2054 0261 91       		.byte	0x91
 2055 0262 60       		.sleb128 -32
 2056 0263 0E       		.uleb128 0xe
 2057 0264 783300   		.ascii	"x3\000"
 2058 0267 01       		.byte	0x1
 2059 0268 51       		.byte	0x51
 2060 0269 DC000000 		.4byte	0xdc
 2061 026d 03       		.uleb128 0x3
 2062 026e 91       		.byte	0x91
 2063 026f B07F     		.sleb128 -80
 2064 0271 0E       		.uleb128 0xe
 2065 0272 793100   		.ascii	"y1\000"
 2066 0275 01       		.byte	0x1
 2067 0276 52       		.byte	0x52
 2068 0277 DC000000 		.4byte	0xdc
 2069 027b 03       		.uleb128 0x3
 2070 027c 91       		.byte	0x91
 2071 027d B87F     		.sleb128 -72
 2072 027f 0E       		.uleb128 0xe
 2073 0280 793200   		.ascii	"y2\000"
 2074 0283 01       		.byte	0x1
 2075 0284 52       		.byte	0x52
 2076 0285 DC000000 		.4byte	0xdc
 2077 0289 03       		.uleb128 0x3
 2078 028a 91       		.byte	0x91
 2079 028b B47F     		.sleb128 -76
 2080 028d 0D       		.uleb128 0xd
 2081 028e 9A000000 		.4byte	.LASF38
 2082 0292 01       		.byte	0x1
 2083 0293 53       		.byte	0x53
 2084 0294 E8000000 		.4byte	0xe8
 2085 0298 03       		.uleb128 0x3
 2086 0299 91       		.byte	0x91
 2087 029a E87D     		.sleb128 -280
 2088 029c 0D       		.uleb128 0xd
 2089 029d 7F000000 		.4byte	.LASF39
 2090 02a1 01       		.byte	0x1
 2091 02a2 54       		.byte	0x54
 2092 02a3 E8000000 		.4byte	0xe8
 2093 02a7 03       		.uleb128 0x3
 2094 02a8 91       		.byte	0x91
 2095 02a9 E47D     		.sleb128 -284
 2096 02ab 0D       		.uleb128 0xd
 2097 02ac 85000000 		.4byte	.LASF40
 2098 02b0 01       		.byte	0x1
 2099 02b1 55       		.byte	0x55
 2100 02b2 E8000000 		.4byte	0xe8
 2101 02b6 02       		.uleb128 0x2
 2102 02b7 91       		.byte	0x91
 2103 02b8 5C       		.sleb128 -36
 2104 02b9 0D       		.uleb128 0xd
 2105 02ba 93020000 		.4byte	.LASF41
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 66


 2106 02be 01       		.byte	0x1
 2107 02bf 56       		.byte	0x56
 2108 02c0 E8000000 		.4byte	0xe8
 2109 02c4 02       		.uleb128 0x2
 2110 02c5 91       		.byte	0x91
 2111 02c6 58       		.sleb128 -40
 2112 02c7 0D       		.uleb128 0xd
 2113 02c8 B3000000 		.4byte	.LASF42
 2114 02cc 01       		.byte	0x1
 2115 02cd 57       		.byte	0x57
 2116 02ce E8000000 		.4byte	0xe8
 2117 02d2 02       		.uleb128 0x2
 2118 02d3 91       		.byte	0x91
 2119 02d4 54       		.sleb128 -44
 2120 02d5 0E       		.uleb128 0xe
 2121 02d6 707800   		.ascii	"px\000"
 2122 02d9 01       		.byte	0x1
 2123 02da 58       		.byte	0x58
 2124 02db E8000000 		.4byte	0xe8
 2125 02df 02       		.uleb128 0x2
 2126 02e0 91       		.byte	0x91
 2127 02e1 50       		.sleb128 -48
 2128 02e2 0E       		.uleb128 0xe
 2129 02e3 707900   		.ascii	"py\000"
 2130 02e6 01       		.byte	0x1
 2131 02e7 59       		.byte	0x59
 2132 02e8 E8000000 		.4byte	0xe8
 2133 02ec 03       		.uleb128 0x3
 2134 02ed 91       		.byte	0x91
 2135 02ee BC7F     		.sleb128 -68
 2136 02f0 0E       		.uleb128 0xe
 2137 02f1 6A00     		.ascii	"j\000"
 2138 02f3 01       		.byte	0x1
 2139 02f4 5A       		.byte	0x5a
 2140 02f5 A2000000 		.4byte	0xa2
 2141 02f9 02       		.uleb128 0x2
 2142 02fa 91       		.byte	0x91
 2143 02fb 40       		.sleb128 -64
 2144 02fc 0E       		.uleb128 0xe
 2145 02fd 6B00     		.ascii	"k\000"
 2146 02ff 01       		.byte	0x1
 2147 0300 5A       		.byte	0x5a
 2148 0301 A2000000 		.4byte	0xa2
 2149 0305 02       		.uleb128 0x2
 2150 0306 91       		.byte	0x91
 2151 0307 4C       		.sleb128 -52
 2152 0308 0D       		.uleb128 0xd
 2153 0309 B8000000 		.4byte	.LASF43
 2154 030d 01       		.byte	0x1
 2155 030e 5A       		.byte	0x5a
 2156 030f A2000000 		.4byte	0xa2
 2157 0313 02       		.uleb128 0x2
 2158 0314 91       		.byte	0x91
 2159 0315 48       		.sleb128 -56
 2160 0316 0D       		.uleb128 0xd
 2161 0317 0E010000 		.4byte	.LASF44
 2162 031b 01       		.byte	0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 67


 2163 031c 5B       		.byte	0x5b
 2164 031d A2000000 		.4byte	0xa2
 2165 0321 02       		.uleb128 0x2
 2166 0322 91       		.byte	0x91
 2167 0323 44       		.sleb128 -60
 2168 0324 0F       		.uleb128 0xf
 2169 0325 EE000000 		.4byte	0xee
 2170 0329 E0020000 		.4byte	.LBB28
 2171 032d 32000000 		.4byte	.LBE28-.LBB28
 2172 0331 01       		.byte	0x1
 2173 0332 2C01     		.2byte	0x12c
 2174 0334 54030000 		.4byte	0x354
 2175 0338 10       		.uleb128 0x10
 2176 0339 13010000 		.4byte	0x113
 2177 033d 03       		.uleb128 0x3
 2178 033e 91       		.byte	0x91
 2179 033f A47F     		.sleb128 -92
 2180 0341 10       		.uleb128 0x10
 2181 0342 09010000 		.4byte	0x109
 2182 0346 03       		.uleb128 0x3
 2183 0347 91       		.byte	0x91
 2184 0348 A87F     		.sleb128 -88
 2185 034a 10       		.uleb128 0x10
 2186 034b FF000000 		.4byte	0xff
 2187 034f 03       		.uleb128 0x3
 2188 0350 91       		.byte	0x91
 2189 0351 AC7F     		.sleb128 -84
 2190 0353 00       		.byte	0
 2191 0354 0F       		.uleb128 0xf
 2192 0355 EE000000 		.4byte	0xee
 2193 0359 42030000 		.4byte	.LBB30
 2194 035d 32000000 		.4byte	.LBE30-.LBB30
 2195 0361 01       		.byte	0x1
 2196 0362 2D01     		.2byte	0x12d
 2197 0364 84030000 		.4byte	0x384
 2198 0368 10       		.uleb128 0x10
 2199 0369 13010000 		.4byte	0x113
 2200 036d 03       		.uleb128 0x3
 2201 036e 91       		.byte	0x91
 2202 036f 987F     		.sleb128 -104
 2203 0371 10       		.uleb128 0x10
 2204 0372 09010000 		.4byte	0x109
 2205 0376 03       		.uleb128 0x3
 2206 0377 91       		.byte	0x91
 2207 0378 9C7F     		.sleb128 -100
 2208 037a 10       		.uleb128 0x10
 2209 037b FF000000 		.4byte	0xff
 2210 037f 03       		.uleb128 0x3
 2211 0380 91       		.byte	0x91
 2212 0381 A07F     		.sleb128 -96
 2213 0383 00       		.byte	0
 2214 0384 0F       		.uleb128 0xf
 2215 0385 20010000 		.4byte	0x120
 2216 0389 C2030000 		.4byte	.LBB32
 2217 038d 32000000 		.4byte	.LBE32-.LBB32
 2218 0391 01       		.byte	0x1
 2219 0392 3701     		.2byte	0x137
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 68


 2220 0394 B4030000 		.4byte	0x3b4
 2221 0398 10       		.uleb128 0x10
 2222 0399 45010000 		.4byte	0x145
 2223 039d 03       		.uleb128 0x3
 2224 039e 91       		.byte	0x91
 2225 039f 8C7F     		.sleb128 -116
 2226 03a1 10       		.uleb128 0x10
 2227 03a2 3B010000 		.4byte	0x13b
 2228 03a6 03       		.uleb128 0x3
 2229 03a7 91       		.byte	0x91
 2230 03a8 907F     		.sleb128 -112
 2231 03aa 10       		.uleb128 0x10
 2232 03ab 31010000 		.4byte	0x131
 2233 03af 03       		.uleb128 0x3
 2234 03b0 91       		.byte	0x91
 2235 03b1 947F     		.sleb128 -108
 2236 03b3 00       		.byte	0
 2237 03b4 0F       		.uleb128 0xf
 2238 03b5 EE000000 		.4byte	0xee
 2239 03b9 30040000 		.4byte	.LBB34
 2240 03bd 32000000 		.4byte	.LBE34-.LBB34
 2241 03c1 01       		.byte	0x1
 2242 03c2 3D01     		.2byte	0x13d
 2243 03c4 E4030000 		.4byte	0x3e4
 2244 03c8 10       		.uleb128 0x10
 2245 03c9 13010000 		.4byte	0x113
 2246 03cd 03       		.uleb128 0x3
 2247 03ce 91       		.byte	0x91
 2248 03cf 807F     		.sleb128 -128
 2249 03d1 10       		.uleb128 0x10
 2250 03d2 09010000 		.4byte	0x109
 2251 03d6 03       		.uleb128 0x3
 2252 03d7 91       		.byte	0x91
 2253 03d8 847F     		.sleb128 -124
 2254 03da 10       		.uleb128 0x10
 2255 03db FF000000 		.4byte	0xff
 2256 03df 03       		.uleb128 0x3
 2257 03e0 91       		.byte	0x91
 2258 03e1 887F     		.sleb128 -120
 2259 03e3 00       		.byte	0
 2260 03e4 0F       		.uleb128 0xf
 2261 03e5 EE000000 		.4byte	0xee
 2262 03e9 92040000 		.4byte	.LBB36
 2263 03ed 32000000 		.4byte	.LBE36-.LBB36
 2264 03f1 01       		.byte	0x1
 2265 03f2 3E01     		.2byte	0x13e
 2266 03f4 14040000 		.4byte	0x414
 2267 03f8 10       		.uleb128 0x10
 2268 03f9 13010000 		.4byte	0x113
 2269 03fd 03       		.uleb128 0x3
 2270 03fe 91       		.byte	0x91
 2271 03ff F47E     		.sleb128 -140
 2272 0401 10       		.uleb128 0x10
 2273 0402 09010000 		.4byte	0x109
 2274 0406 03       		.uleb128 0x3
 2275 0407 91       		.byte	0x91
 2276 0408 F87E     		.sleb128 -136
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 69


 2277 040a 10       		.uleb128 0x10
 2278 040b FF000000 		.4byte	0xff
 2279 040f 03       		.uleb128 0x3
 2280 0410 91       		.byte	0x91
 2281 0411 FC7E     		.sleb128 -132
 2282 0413 00       		.byte	0
 2283 0414 0F       		.uleb128 0xf
 2284 0415 20010000 		.4byte	0x120
 2285 0419 12050000 		.4byte	.LBB38
 2286 041d 32000000 		.4byte	.LBE38-.LBB38
 2287 0421 01       		.byte	0x1
 2288 0422 4701     		.2byte	0x147
 2289 0424 44040000 		.4byte	0x444
 2290 0428 10       		.uleb128 0x10
 2291 0429 45010000 		.4byte	0x145
 2292 042d 03       		.uleb128 0x3
 2293 042e 91       		.byte	0x91
 2294 042f E87E     		.sleb128 -152
 2295 0431 10       		.uleb128 0x10
 2296 0432 3B010000 		.4byte	0x13b
 2297 0436 03       		.uleb128 0x3
 2298 0437 91       		.byte	0x91
 2299 0438 EC7E     		.sleb128 -148
 2300 043a 10       		.uleb128 0x10
 2301 043b 31010000 		.4byte	0x131
 2302 043f 03       		.uleb128 0x3
 2303 0440 91       		.byte	0x91
 2304 0441 F07E     		.sleb128 -144
 2305 0443 00       		.byte	0
 2306 0444 0F       		.uleb128 0xf
 2307 0445 20010000 		.4byte	0x120
 2308 0449 72050000 		.4byte	.LBB40
 2309 044d 32000000 		.4byte	.LBE40-.LBB40
 2310 0451 01       		.byte	0x1
 2311 0452 4801     		.2byte	0x148
 2312 0454 74040000 		.4byte	0x474
 2313 0458 10       		.uleb128 0x10
 2314 0459 45010000 		.4byte	0x145
 2315 045d 03       		.uleb128 0x3
 2316 045e 91       		.byte	0x91
 2317 045f DC7E     		.sleb128 -164
 2318 0461 10       		.uleb128 0x10
 2319 0462 3B010000 		.4byte	0x13b
 2320 0466 03       		.uleb128 0x3
 2321 0467 91       		.byte	0x91
 2322 0468 E07E     		.sleb128 -160
 2323 046a 10       		.uleb128 0x10
 2324 046b 31010000 		.4byte	0x131
 2325 046f 03       		.uleb128 0x3
 2326 0470 91       		.byte	0x91
 2327 0471 E47E     		.sleb128 -156
 2328 0473 00       		.byte	0
 2329 0474 0F       		.uleb128 0xf
 2330 0475 20010000 		.4byte	0x120
 2331 0479 FE050000 		.4byte	.LBB42
 2332 047d 32000000 		.4byte	.LBE42-.LBB42
 2333 0481 01       		.byte	0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 70


 2334 0482 5201     		.2byte	0x152
 2335 0484 A4040000 		.4byte	0x4a4
 2336 0488 10       		.uleb128 0x10
 2337 0489 45010000 		.4byte	0x145
 2338 048d 03       		.uleb128 0x3
 2339 048e 91       		.byte	0x91
 2340 048f D07E     		.sleb128 -176
 2341 0491 10       		.uleb128 0x10
 2342 0492 3B010000 		.4byte	0x13b
 2343 0496 03       		.uleb128 0x3
 2344 0497 91       		.byte	0x91
 2345 0498 D47E     		.sleb128 -172
 2346 049a 10       		.uleb128 0x10
 2347 049b 31010000 		.4byte	0x131
 2348 049f 03       		.uleb128 0x3
 2349 04a0 91       		.byte	0x91
 2350 04a1 D87E     		.sleb128 -168
 2351 04a3 00       		.byte	0
 2352 04a4 0F       		.uleb128 0xf
 2353 04a5 52010000 		.4byte	0x152
 2354 04a9 68070000 		.4byte	.LBB44
 2355 04ad 52000000 		.4byte	.LBE44-.LBB44
 2356 04b1 01       		.byte	0x1
 2357 04b2 C401     		.2byte	0x1c4
 2358 04b4 F0040000 		.4byte	0x4f0
 2359 04b8 10       		.uleb128 0x10
 2360 04b9 6D010000 		.4byte	0x16d
 2361 04bd 03       		.uleb128 0x3
 2362 04be 91       		.byte	0x91
 2363 04bf C87E     		.sleb128 -184
 2364 04c1 10       		.uleb128 0x10
 2365 04c2 63010000 		.4byte	0x163
 2366 04c6 03       		.uleb128 0x3
 2367 04c7 91       		.byte	0x91
 2368 04c8 CC7E     		.sleb128 -180
 2369 04ca 11       		.uleb128 0x11
 2370 04cb 68070000 		.4byte	.LBB45
 2371 04cf 52000000 		.4byte	.LBE45-.LBB45
 2372 04d3 12       		.uleb128 0x12
 2373 04d4 77010000 		.4byte	0x177
 2374 04d8 03       		.uleb128 0x3
 2375 04d9 91       		.byte	0x91
 2376 04da C47E     		.sleb128 -188
 2377 04dc 12       		.uleb128 0x12
 2378 04dd 83010000 		.4byte	0x183
 2379 04e1 03       		.uleb128 0x3
 2380 04e2 91       		.byte	0x91
 2381 04e3 BC7E     		.sleb128 -196
 2382 04e5 12       		.uleb128 0x12
 2383 04e6 8F010000 		.4byte	0x18f
 2384 04ea 03       		.uleb128 0x3
 2385 04eb 91       		.byte	0x91
 2386 04ec C07E     		.sleb128 -192
 2387 04ee 00       		.byte	0
 2388 04ef 00       		.byte	0
 2389 04f0 0F       		.uleb128 0xf
 2390 04f1 52010000 		.4byte	0x152
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 71


 2391 04f5 CE070000 		.4byte	.LBB46
 2392 04f9 52000000 		.4byte	.LBE46-.LBB46
 2393 04fd 01       		.byte	0x1
 2394 04fe C401     		.2byte	0x1c4
 2395 0500 3C050000 		.4byte	0x53c
 2396 0504 10       		.uleb128 0x10
 2397 0505 6D010000 		.4byte	0x16d
 2398 0509 03       		.uleb128 0x3
 2399 050a 91       		.byte	0x91
 2400 050b B47E     		.sleb128 -204
 2401 050d 10       		.uleb128 0x10
 2402 050e 63010000 		.4byte	0x163
 2403 0512 03       		.uleb128 0x3
 2404 0513 91       		.byte	0x91
 2405 0514 B87E     		.sleb128 -200
 2406 0516 11       		.uleb128 0x11
 2407 0517 CE070000 		.4byte	.LBB47
 2408 051b 52000000 		.4byte	.LBE47-.LBB47
 2409 051f 12       		.uleb128 0x12
 2410 0520 77010000 		.4byte	0x177
 2411 0524 03       		.uleb128 0x3
 2412 0525 91       		.byte	0x91
 2413 0526 B07E     		.sleb128 -208
 2414 0528 12       		.uleb128 0x12
 2415 0529 83010000 		.4byte	0x183
 2416 052d 03       		.uleb128 0x3
 2417 052e 91       		.byte	0x91
 2418 052f A87E     		.sleb128 -216
 2419 0531 12       		.uleb128 0x12
 2420 0532 8F010000 		.4byte	0x18f
 2421 0536 03       		.uleb128 0x3
 2422 0537 91       		.byte	0x91
 2423 0538 AC7E     		.sleb128 -212
 2424 053a 00       		.byte	0
 2425 053b 00       		.byte	0
 2426 053c 0F       		.uleb128 0xf
 2427 053d 52010000 		.4byte	0x152
 2428 0541 40080000 		.4byte	.LBB48
 2429 0545 52000000 		.4byte	.LBE48-.LBB48
 2430 0549 01       		.byte	0x1
 2431 054a C701     		.2byte	0x1c7
 2432 054c 88050000 		.4byte	0x588
 2433 0550 10       		.uleb128 0x10
 2434 0551 6D010000 		.4byte	0x16d
 2435 0555 03       		.uleb128 0x3
 2436 0556 91       		.byte	0x91
 2437 0557 A07E     		.sleb128 -224
 2438 0559 10       		.uleb128 0x10
 2439 055a 63010000 		.4byte	0x163
 2440 055e 03       		.uleb128 0x3
 2441 055f 91       		.byte	0x91
 2442 0560 A47E     		.sleb128 -220
 2443 0562 11       		.uleb128 0x11
 2444 0563 40080000 		.4byte	.LBB49
 2445 0567 52000000 		.4byte	.LBE49-.LBB49
 2446 056b 12       		.uleb128 0x12
 2447 056c 77010000 		.4byte	0x177
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 72


 2448 0570 03       		.uleb128 0x3
 2449 0571 91       		.byte	0x91
 2450 0572 9C7E     		.sleb128 -228
 2451 0574 12       		.uleb128 0x12
 2452 0575 83010000 		.4byte	0x183
 2453 0579 03       		.uleb128 0x3
 2454 057a 91       		.byte	0x91
 2455 057b 947E     		.sleb128 -236
 2456 057d 12       		.uleb128 0x12
 2457 057e 8F010000 		.4byte	0x18f
 2458 0582 03       		.uleb128 0x3
 2459 0583 91       		.byte	0x91
 2460 0584 987E     		.sleb128 -232
 2461 0586 00       		.byte	0
 2462 0587 00       		.byte	0
 2463 0588 0F       		.uleb128 0xf
 2464 0589 52010000 		.4byte	0x152
 2465 058d A6080000 		.4byte	.LBB50
 2466 0591 52000000 		.4byte	.LBE50-.LBB50
 2467 0595 01       		.byte	0x1
 2468 0596 C701     		.2byte	0x1c7
 2469 0598 D4050000 		.4byte	0x5d4
 2470 059c 10       		.uleb128 0x10
 2471 059d 6D010000 		.4byte	0x16d
 2472 05a1 03       		.uleb128 0x3
 2473 05a2 91       		.byte	0x91
 2474 05a3 8C7E     		.sleb128 -244
 2475 05a5 10       		.uleb128 0x10
 2476 05a6 63010000 		.4byte	0x163
 2477 05aa 03       		.uleb128 0x3
 2478 05ab 91       		.byte	0x91
 2479 05ac 907E     		.sleb128 -240
 2480 05ae 11       		.uleb128 0x11
 2481 05af A6080000 		.4byte	.LBB51
 2482 05b3 52000000 		.4byte	.LBE51-.LBB51
 2483 05b7 12       		.uleb128 0x12
 2484 05b8 77010000 		.4byte	0x177
 2485 05bc 03       		.uleb128 0x3
 2486 05bd 91       		.byte	0x91
 2487 05be 887E     		.sleb128 -248
 2488 05c0 12       		.uleb128 0x12
 2489 05c1 83010000 		.4byte	0x183
 2490 05c5 03       		.uleb128 0x3
 2491 05c6 91       		.byte	0x91
 2492 05c7 807E     		.sleb128 -256
 2493 05c9 12       		.uleb128 0x12
 2494 05ca 8F010000 		.4byte	0x18f
 2495 05ce 03       		.uleb128 0x3
 2496 05cf 91       		.byte	0x91
 2497 05d0 847E     		.sleb128 -252
 2498 05d2 00       		.byte	0
 2499 05d3 00       		.byte	0
 2500 05d4 13       		.uleb128 0x13
 2501 05d5 52010000 		.4byte	0x152
 2502 05d9 4E0A0000 		.4byte	.LBB52
 2503 05dd 52000000 		.4byte	.LBE52-.LBB52
 2504 05e1 01       		.byte	0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 73


 2505 05e2 0602     		.2byte	0x206
 2506 05e4 10       		.uleb128 0x10
 2507 05e5 6D010000 		.4byte	0x16d
 2508 05e9 03       		.uleb128 0x3
 2509 05ea 91       		.byte	0x91
 2510 05eb F87D     		.sleb128 -264
 2511 05ed 10       		.uleb128 0x10
 2512 05ee 63010000 		.4byte	0x163
 2513 05f2 03       		.uleb128 0x3
 2514 05f3 91       		.byte	0x91
 2515 05f4 FC7D     		.sleb128 -260
 2516 05f6 11       		.uleb128 0x11
 2517 05f7 4E0A0000 		.4byte	.LBB53
 2518 05fb 52000000 		.4byte	.LBE53-.LBB53
 2519 05ff 12       		.uleb128 0x12
 2520 0600 77010000 		.4byte	0x177
 2521 0604 03       		.uleb128 0x3
 2522 0605 91       		.byte	0x91
 2523 0606 F47D     		.sleb128 -268
 2524 0608 12       		.uleb128 0x12
 2525 0609 83010000 		.4byte	0x183
 2526 060d 03       		.uleb128 0x3
 2527 060e 91       		.byte	0x91
 2528 060f EC7D     		.sleb128 -276
 2529 0611 12       		.uleb128 0x12
 2530 0612 8F010000 		.4byte	0x18f
 2531 0616 03       		.uleb128 0x3
 2532 0617 91       		.byte	0x91
 2533 0618 F07D     		.sleb128 -272
 2534 061a 00       		.byte	0
 2535 061b 00       		.byte	0
 2536 061c 00       		.byte	0
 2537 061d 00       		.byte	0
 2538              		.section	.debug_abbrev,"",%progbits
 2539              	.Ldebug_abbrev0:
 2540 0000 01       		.uleb128 0x1
 2541 0001 11       		.uleb128 0x11
 2542 0002 01       		.byte	0x1
 2543 0003 25       		.uleb128 0x25
 2544 0004 0E       		.uleb128 0xe
 2545 0005 13       		.uleb128 0x13
 2546 0006 0B       		.uleb128 0xb
 2547 0007 03       		.uleb128 0x3
 2548 0008 0E       		.uleb128 0xe
 2549 0009 1B       		.uleb128 0x1b
 2550 000a 0E       		.uleb128 0xe
 2551 000b 55       		.uleb128 0x55
 2552 000c 17       		.uleb128 0x17
 2553 000d 11       		.uleb128 0x11
 2554 000e 01       		.uleb128 0x1
 2555 000f 10       		.uleb128 0x10
 2556 0010 17       		.uleb128 0x17
 2557 0011 00       		.byte	0
 2558 0012 00       		.byte	0
 2559 0013 02       		.uleb128 0x2
 2560 0014 24       		.uleb128 0x24
 2561 0015 00       		.byte	0
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 74


 2562 0016 0B       		.uleb128 0xb
 2563 0017 0B       		.uleb128 0xb
 2564 0018 3E       		.uleb128 0x3e
 2565 0019 0B       		.uleb128 0xb
 2566 001a 03       		.uleb128 0x3
 2567 001b 0E       		.uleb128 0xe
 2568 001c 00       		.byte	0
 2569 001d 00       		.byte	0
 2570 001e 03       		.uleb128 0x3
 2571 001f 16       		.uleb128 0x16
 2572 0020 00       		.byte	0
 2573 0021 03       		.uleb128 0x3
 2574 0022 0E       		.uleb128 0xe
 2575 0023 3A       		.uleb128 0x3a
 2576 0024 0B       		.uleb128 0xb
 2577 0025 3B       		.uleb128 0x3b
 2578 0026 0B       		.uleb128 0xb
 2579 0027 49       		.uleb128 0x49
 2580 0028 13       		.uleb128 0x13
 2581 0029 00       		.byte	0
 2582 002a 00       		.byte	0
 2583 002b 04       		.uleb128 0x4
 2584 002c 24       		.uleb128 0x24
 2585 002d 00       		.byte	0
 2586 002e 0B       		.uleb128 0xb
 2587 002f 0B       		.uleb128 0xb
 2588 0030 3E       		.uleb128 0x3e
 2589 0031 0B       		.uleb128 0xb
 2590 0032 03       		.uleb128 0x3
 2591 0033 08       		.uleb128 0x8
 2592 0034 00       		.byte	0
 2593 0035 00       		.byte	0
 2594 0036 05       		.uleb128 0x5
 2595 0037 16       		.uleb128 0x16
 2596 0038 00       		.byte	0
 2597 0039 03       		.uleb128 0x3
 2598 003a 0E       		.uleb128 0xe
 2599 003b 3A       		.uleb128 0x3a
 2600 003c 0B       		.uleb128 0xb
 2601 003d 3B       		.uleb128 0x3b
 2602 003e 05       		.uleb128 0x5
 2603 003f 49       		.uleb128 0x49
 2604 0040 13       		.uleb128 0x13
 2605 0041 00       		.byte	0
 2606 0042 00       		.byte	0
 2607 0043 06       		.uleb128 0x6
 2608 0044 0F       		.uleb128 0xf
 2609 0045 00       		.byte	0
 2610 0046 0B       		.uleb128 0xb
 2611 0047 0B       		.uleb128 0xb
 2612 0048 49       		.uleb128 0x49
 2613 0049 13       		.uleb128 0x13
 2614 004a 00       		.byte	0
 2615 004b 00       		.byte	0
 2616 004c 07       		.uleb128 0x7
 2617 004d 2E       		.uleb128 0x2e
 2618 004e 01       		.byte	0x1
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 75


 2619 004f 03       		.uleb128 0x3
 2620 0050 0E       		.uleb128 0xe
 2621 0051 3A       		.uleb128 0x3a
 2622 0052 0B       		.uleb128 0xb
 2623 0053 3B       		.uleb128 0x3b
 2624 0054 05       		.uleb128 0x5
 2625 0055 27       		.uleb128 0x27
 2626 0056 19       		.uleb128 0x19
 2627 0057 49       		.uleb128 0x49
 2628 0058 13       		.uleb128 0x13
 2629 0059 20       		.uleb128 0x20
 2630 005a 0B       		.uleb128 0xb
 2631 005b 01       		.uleb128 0x1
 2632 005c 13       		.uleb128 0x13
 2633 005d 00       		.byte	0
 2634 005e 00       		.byte	0
 2635 005f 08       		.uleb128 0x8
 2636 0060 05       		.uleb128 0x5
 2637 0061 00       		.byte	0
 2638 0062 03       		.uleb128 0x3
 2639 0063 08       		.uleb128 0x8
 2640 0064 3A       		.uleb128 0x3a
 2641 0065 0B       		.uleb128 0xb
 2642 0066 3B       		.uleb128 0x3b
 2643 0067 05       		.uleb128 0x5
 2644 0068 49       		.uleb128 0x49
 2645 0069 13       		.uleb128 0x13
 2646 006a 00       		.byte	0
 2647 006b 00       		.byte	0
 2648 006c 09       		.uleb128 0x9
 2649 006d 34       		.uleb128 0x34
 2650 006e 00       		.byte	0
 2651 006f 03       		.uleb128 0x3
 2652 0070 0E       		.uleb128 0xe
 2653 0071 3A       		.uleb128 0x3a
 2654 0072 0B       		.uleb128 0xb
 2655 0073 3B       		.uleb128 0x3b
 2656 0074 05       		.uleb128 0x5
 2657 0075 49       		.uleb128 0x49
 2658 0076 13       		.uleb128 0x13
 2659 0077 00       		.byte	0
 2660 0078 00       		.byte	0
 2661 0079 0A       		.uleb128 0xa
 2662 007a 34       		.uleb128 0x34
 2663 007b 00       		.byte	0
 2664 007c 03       		.uleb128 0x3
 2665 007d 08       		.uleb128 0x8
 2666 007e 3A       		.uleb128 0x3a
 2667 007f 0B       		.uleb128 0xb
 2668 0080 3B       		.uleb128 0x3b
 2669 0081 05       		.uleb128 0x5
 2670 0082 49       		.uleb128 0x49
 2671 0083 13       		.uleb128 0x13
 2672 0084 00       		.byte	0
 2673 0085 00       		.byte	0
 2674 0086 0B       		.uleb128 0xb
 2675 0087 2E       		.uleb128 0x2e
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 76


 2676 0088 01       		.byte	0x1
 2677 0089 3F       		.uleb128 0x3f
 2678 008a 19       		.uleb128 0x19
 2679 008b 03       		.uleb128 0x3
 2680 008c 0E       		.uleb128 0xe
 2681 008d 3A       		.uleb128 0x3a
 2682 008e 0B       		.uleb128 0xb
 2683 008f 3B       		.uleb128 0x3b
 2684 0090 0B       		.uleb128 0xb
 2685 0091 27       		.uleb128 0x27
 2686 0092 19       		.uleb128 0x19
 2687 0093 11       		.uleb128 0x11
 2688 0094 01       		.uleb128 0x1
 2689 0095 12       		.uleb128 0x12
 2690 0096 06       		.uleb128 0x6
 2691 0097 40       		.uleb128 0x40
 2692 0098 18       		.uleb128 0x18
 2693 0099 9642     		.uleb128 0x2116
 2694 009b 19       		.uleb128 0x19
 2695 009c 00       		.byte	0
 2696 009d 00       		.byte	0
 2697 009e 0C       		.uleb128 0xc
 2698 009f 05       		.uleb128 0x5
 2699 00a0 00       		.byte	0
 2700 00a1 03       		.uleb128 0x3
 2701 00a2 0E       		.uleb128 0xe
 2702 00a3 3A       		.uleb128 0x3a
 2703 00a4 0B       		.uleb128 0xb
 2704 00a5 3B       		.uleb128 0x3b
 2705 00a6 0B       		.uleb128 0xb
 2706 00a7 49       		.uleb128 0x49
 2707 00a8 13       		.uleb128 0x13
 2708 00a9 02       		.uleb128 0x2
 2709 00aa 18       		.uleb128 0x18
 2710 00ab 00       		.byte	0
 2711 00ac 00       		.byte	0
 2712 00ad 0D       		.uleb128 0xd
 2713 00ae 34       		.uleb128 0x34
 2714 00af 00       		.byte	0
 2715 00b0 03       		.uleb128 0x3
 2716 00b1 0E       		.uleb128 0xe
 2717 00b2 3A       		.uleb128 0x3a
 2718 00b3 0B       		.uleb128 0xb
 2719 00b4 3B       		.uleb128 0x3b
 2720 00b5 0B       		.uleb128 0xb
 2721 00b6 49       		.uleb128 0x49
 2722 00b7 13       		.uleb128 0x13
 2723 00b8 02       		.uleb128 0x2
 2724 00b9 18       		.uleb128 0x18
 2725 00ba 00       		.byte	0
 2726 00bb 00       		.byte	0
 2727 00bc 0E       		.uleb128 0xe
 2728 00bd 34       		.uleb128 0x34
 2729 00be 00       		.byte	0
 2730 00bf 03       		.uleb128 0x3
 2731 00c0 08       		.uleb128 0x8
 2732 00c1 3A       		.uleb128 0x3a
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 77


 2733 00c2 0B       		.uleb128 0xb
 2734 00c3 3B       		.uleb128 0x3b
 2735 00c4 0B       		.uleb128 0xb
 2736 00c5 49       		.uleb128 0x49
 2737 00c6 13       		.uleb128 0x13
 2738 00c7 02       		.uleb128 0x2
 2739 00c8 18       		.uleb128 0x18
 2740 00c9 00       		.byte	0
 2741 00ca 00       		.byte	0
 2742 00cb 0F       		.uleb128 0xf
 2743 00cc 1D       		.uleb128 0x1d
 2744 00cd 01       		.byte	0x1
 2745 00ce 31       		.uleb128 0x31
 2746 00cf 13       		.uleb128 0x13
 2747 00d0 11       		.uleb128 0x11
 2748 00d1 01       		.uleb128 0x1
 2749 00d2 12       		.uleb128 0x12
 2750 00d3 06       		.uleb128 0x6
 2751 00d4 58       		.uleb128 0x58
 2752 00d5 0B       		.uleb128 0xb
 2753 00d6 59       		.uleb128 0x59
 2754 00d7 05       		.uleb128 0x5
 2755 00d8 01       		.uleb128 0x1
 2756 00d9 13       		.uleb128 0x13
 2757 00da 00       		.byte	0
 2758 00db 00       		.byte	0
 2759 00dc 10       		.uleb128 0x10
 2760 00dd 05       		.uleb128 0x5
 2761 00de 00       		.byte	0
 2762 00df 31       		.uleb128 0x31
 2763 00e0 13       		.uleb128 0x13
 2764 00e1 02       		.uleb128 0x2
 2765 00e2 18       		.uleb128 0x18
 2766 00e3 00       		.byte	0
 2767 00e4 00       		.byte	0
 2768 00e5 11       		.uleb128 0x11
 2769 00e6 0B       		.uleb128 0xb
 2770 00e7 01       		.byte	0x1
 2771 00e8 11       		.uleb128 0x11
 2772 00e9 01       		.uleb128 0x1
 2773 00ea 12       		.uleb128 0x12
 2774 00eb 06       		.uleb128 0x6
 2775 00ec 00       		.byte	0
 2776 00ed 00       		.byte	0
 2777 00ee 12       		.uleb128 0x12
 2778 00ef 34       		.uleb128 0x34
 2779 00f0 00       		.byte	0
 2780 00f1 31       		.uleb128 0x31
 2781 00f2 13       		.uleb128 0x13
 2782 00f3 02       		.uleb128 0x2
 2783 00f4 18       		.uleb128 0x18
 2784 00f5 00       		.byte	0
 2785 00f6 00       		.byte	0
 2786 00f7 13       		.uleb128 0x13
 2787 00f8 1D       		.uleb128 0x1d
 2788 00f9 01       		.byte	0x1
 2789 00fa 31       		.uleb128 0x31
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 78


 2790 00fb 13       		.uleb128 0x13
 2791 00fc 11       		.uleb128 0x11
 2792 00fd 01       		.uleb128 0x1
 2793 00fe 12       		.uleb128 0x12
 2794 00ff 06       		.uleb128 0x6
 2795 0100 58       		.uleb128 0x58
 2796 0101 0B       		.uleb128 0xb
 2797 0102 59       		.uleb128 0x59
 2798 0103 05       		.uleb128 0x5
 2799 0104 00       		.byte	0
 2800 0105 00       		.byte	0
 2801 0106 00       		.byte	0
 2802              		.section	.debug_aranges,"",%progbits
 2803 0000 1C000000 		.4byte	0x1c
 2804 0004 0200     		.2byte	0x2
 2805 0006 00000000 		.4byte	.Ldebug_info0
 2806 000a 04       		.byte	0x4
 2807 000b 00       		.byte	0
 2808 000c 0000     		.2byte	0
 2809 000e 0000     		.2byte	0
 2810 0010 00000000 		.4byte	.LFB82
 2811 0014 D40A0000 		.4byte	.LFE82-.LFB82
 2812 0018 00000000 		.4byte	0
 2813 001c 00000000 		.4byte	0
 2814              		.section	.debug_ranges,"",%progbits
 2815              	.Ldebug_ranges0:
 2816 0000 00000000 		.4byte	.LFB82
 2817 0004 D40A0000 		.4byte	.LFE82
 2818 0008 00000000 		.4byte	0
 2819 000c 00000000 		.4byte	0
 2820              		.section	.debug_line,"",%progbits
 2821              	.Ldebug_line0:
 2822 0000 27030000 		.section	.debug_str,"MS",%progbits,1
 2822      02005801 
 2822      00000201 
 2822      FB0E0D00 
 2822      01010101 
 2823              	.LASF37:
 2824 0000 61636333 		.ascii	"acc3\000"
 2824      00
 2825              	.LASF4:
 2826 0005 5F5F696E 		.ascii	"__int16_t\000"
 2826      7431365F 
 2826      7400
 2827              	.LASF27:
 2828 000f 70537263 		.ascii	"pSrcA\000"
 2828      4100
 2829              	.LASF29:
 2830 0015 70537263 		.ascii	"pSrcB\000"
 2830      4200
 2831              	.LASF32:
 2832 001b 70536372 		.ascii	"pScratch1\000"
 2832      61746368 
 2832      3100
 2833              	.LASF33:
 2834 0025 70536372 		.ascii	"pScratch2\000"
 2834      61746368 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 79


 2834      3200
 2835              	.LASF5:
 2836 002f 5F5F696E 		.ascii	"__int32_t\000"
 2836      7433325F 
 2836      7400
 2837              	.LASF47:
 2838 0039 433A5C55 		.ascii	"C:\\Users\\fneves\\Documents\\PSoC Creator\\wp_1\\e"
 2838      73657273 
 2838      5C666E65 
 2838      7665735C 
 2838      446F6375 
 2839 0066 6E67696E 		.ascii	"ngine_speed_sensor.cydsn\000"
 2839      655F7370 
 2839      6565645F 
 2839      73656E73 
 2839      6F722E63 
 2840              	.LASF39:
 2841 007f 70536372 		.ascii	"pScr1\000"
 2841      3100
 2842              	.LASF40:
 2843 0085 70536372 		.ascii	"pScr2\000"
 2843      3200
 2844              	.LASF23:
 2845 008b 5F5F534D 		.ascii	"__SMLADX\000"
 2845      4C414458 
 2845      00
 2846              	.LASF20:
 2847 0094 7131355F 		.ascii	"q15_t\000"
 2847      7400
 2848              	.LASF38:
 2849 009a 704F7574 		.ascii	"pOut\000"
 2849      00
 2850              	.LASF21:
 2851 009f 7133315F 		.ascii	"q31_t\000"
 2851      7400
 2852              	.LASF1:
 2853 00a5 756E7369 		.ascii	"unsigned char\000"
 2853      676E6564 
 2853      20636861 
 2853      7200
 2854              	.LASF42:
 2855 00b3 70496E32 		.ascii	"pIn2\000"
 2855      00
 2856              	.LASF43:
 2857 00b8 626C6B43 		.ascii	"blkCnt\000"
 2857      6E7400
 2858              	.LASF22:
 2859 00bf 5F5F534D 		.ascii	"__SMLAD\000"
 2859      4C414400 
 2860              	.LASF8:
 2861 00c7 6C6F6E67 		.ascii	"long unsigned int\000"
 2861      20756E73 
 2861      69676E65 
 2861      6420696E 
 2861      7400
 2862              	.LASF3:
 2863 00d9 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 80


 2863      7420756E 
 2863      7369676E 
 2863      65642069 
 2863      6E7400
 2864              	.LASF48:
 2865 00ec 61726D5F 		.ascii	"arm_conv_fast_opt_q15\000"
 2865      636F6E76 
 2865      5F666173 
 2865      745F6F70 
 2865      745F7131 
 2866              	.LASF31:
 2867 0102 70447374 		.ascii	"pDst\000"
 2867      00
 2868              	.LASF26:
 2869 0107 6E65674D 		.ascii	"negMin\000"
 2869      696E00
 2870              	.LASF44:
 2871 010e 74617043 		.ascii	"tapCnt\000"
 2871      6E7400
 2872              	.LASF17:
 2873 0115 646F7562 		.ascii	"double\000"
 2873      6C6500
 2874              	.LASF7:
 2875 011c 5F5F7569 		.ascii	"__uint32_t\000"
 2875      6E743332 
 2875      5F7400
 2876              	.LASF11:
 2877 0127 756E7369 		.ascii	"unsigned int\000"
 2877      676E6564 
 2877      20696E74 
 2877      00
 2878              	.LASF46:
 2879 0134 536F7572 		.ascii	"Source\\FilteringFunctions\\arm_conv_fast_opt_q15.c"
 2879      63655C46 
 2879      696C7465 
 2879      72696E67 
 2879      46756E63 
 2880 0165 00       		.ascii	"\000"
 2881              	.LASF10:
 2882 0166 6C6F6E67 		.ascii	"long long unsigned int\000"
 2882      206C6F6E 
 2882      6720756E 
 2882      7369676E 
 2882      65642069 
 2883              	.LASF45:
 2884 017d 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2884      4320342E 
 2884      392E3320 
 2884      32303135 
 2884      30333033 
 2885 01b0 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 2885      20726576 
 2885      6973696F 
 2885      6E203232 
 2885      31323230 
 2886 01e3 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 2886      30202D66 
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 81


 2886      66756E63 
 2886      74696F6E 
 2886      2D736563 
 2887              	.LASF12:
 2888 020f 696E7431 		.ascii	"int16_t\000"
 2888      365F7400 
 2889              	.LASF24:
 2890 0217 5F5F5353 		.ascii	"__SSAT\000"
 2890      415400
 2891              	.LASF13:
 2892 021e 696E7433 		.ascii	"int32_t\000"
 2892      325F7400 
 2893              	.LASF15:
 2894 0226 73697A65 		.ascii	"sizetype\000"
 2894      74797065 
 2894      00
 2895              	.LASF9:
 2896 022f 6C6F6E67 		.ascii	"long long int\000"
 2896      206C6F6E 
 2896      6720696E 
 2896      7400
 2897              	.LASF16:
 2898 023d 63686172 		.ascii	"char\000"
 2898      00
 2899              	.LASF28:
 2900 0242 73726341 		.ascii	"srcALen\000"
 2900      4C656E00 
 2901              	.LASF2:
 2902 024a 73686F72 		.ascii	"short int\000"
 2902      7420696E 
 2902      7400
 2903              	.LASF25:
 2904 0254 706F734D 		.ascii	"posMax\000"
 2904      617800
 2905              	.LASF14:
 2906 025b 75696E74 		.ascii	"uint32_t\000"
 2906      33325F74 
 2906      00
 2907              	.LASF6:
 2908 0264 6C6F6E67 		.ascii	"long int\000"
 2908      20696E74 
 2908      00
 2909              	.LASF19:
 2910 026d 6C6F6E67 		.ascii	"long double\000"
 2910      20646F75 
 2910      626C6500 
 2911              	.LASF18:
 2912 0279 666C6F61 		.ascii	"float\000"
 2912      7400
 2913              	.LASF0:
 2914 027f 7369676E 		.ascii	"signed char\000"
 2914      65642063 
 2914      68617200 
 2915              	.LASF30:
 2916 028b 73726342 		.ascii	"srcBLen\000"
 2916      4C656E00 
 2917              	.LASF41:
ARM GAS  C:\Users\fneves\AppData\Local\Temp\ccO3bwUa.s 			page 82


 2918 0293 70496E31 		.ascii	"pIn1\000"
 2918      00
 2919              	.LASF34:
 2920 0298 61636330 		.ascii	"acc0\000"
 2920      00
 2921              	.LASF35:
 2922 029d 61636331 		.ascii	"acc1\000"
 2922      00
 2923              	.LASF36:
 2924 02a2 61636332 		.ascii	"acc2\000"
 2924      00
 2925              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
